- CDSAgent must refactor LocAgent graph indexing flow to use Rust for core graph/index mechanics while exposing TypeScript integration via Claude Agent SDK (`@anthropic-ai/claude-agent-sdk`), with optional future swap to other SDKs (Issue: `spacs/issues/01-CDSAgent-MVP-definition.md`, Research summary `spacs/research/2025-10-18-cdsagent-requirement-analysis.md`).
- Provide CLI-accessible retrieval tools mirroring LocAgent tools: SearchEntity, TraverseGraph, RetrieveEntity, with commands accessible via `cds -s/-t/-r` and support for hybrid pipelines combining `rg`, `ast-grep`, etc. (Issue-01 requirement text, plus LocAgent tool definitions `tmp/LocAgent/arXiv-2503.09089v2/3_method.tex:235-256`).
- Claude Code subagent (`code-retrievaler`) must drive retrieval using bash toolcalls, with hooks (PreToolUse, PostToolUse, SubagentStop) to manage context & concurrency (Issue-01 requirement text, Research analysis `spacs/research/2025-10-18-cdsagent-requirement-analysis.md`).
- LocAgent graph representation: heterogeneous nodes (directory, file, class, function) and relations (contain, import, invoke, inherit); hierarchical entity index with multi-level outputs (fold/preview/full). Basis for parity checks (`tmp/LocAgent/arXiv-2503.09089v2/3_method.tex:205-256`, `data/tab_api_lists.tex:9-19`, `6_1_appendix_details.tex:22-32`).
- Performance rationale: LocAgent ablations show removing SearchEntity/TraverseGraph/RetrieveEntity harms accuracy, motivating inclusion ( `tmp/LocAgent/arXiv-2503.09089v2/data/ablation.tex:16-29`, `5_experiment.tex:88-95`).
- Index outputs must be structured/persisted for reuse (implied by LocAgent `dependency_graph` and `repo_index` modules; code refs `tmp/LocAgent/dependency_graph/` , `tmp/LocAgent/repo_index/`).
- Deployment should allow codebase indexing via dedicated service/daemon plus CLI integration (Issue-01/Research).`EOF
