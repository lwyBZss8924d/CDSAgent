{
  "repository": "django__django-10914",
  "total_nodes": 6876,
  "total_edges": 9982,
  "node_counts_by_type": {
    "directory": 602,
    "file": 500,
    "class": 1598,
    "function": 4176
  },
  "edge_counts_by_type": {
    "contains": 6880,
    "imports": 463,
    "invokes": 2285,
    "inherits": 354
  },
  "nodes": [
    {
      "id": "/",
      "type": "directory",
      "name": "",
      "file": "",
      "line": 0
    },
    {
      "id": "setup.py",
      "type": "file",
      "name": "setup.py",
      "file": "setup.py",
      "line": 0
    },
    {
      "id": "setup.py:read",
      "type": "function",
      "name": "read",
      "file": "setup.py",
      "line": 64
    },
    {
      "id": "tests",
      "type": "directory",
      "name": "tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/urls.py",
      "type": "file",
      "name": "urls.py",
      "file": "tests/urls.py",
      "line": 0
    },
    {
      "id": "tests/runtests.py",
      "type": "file",
      "name": "runtests.py",
      "file": "tests/runtests.py",
      "line": 0
    },
    {
      "id": "tests/runtests.py:get_test_modules",
      "type": "function",
      "name": "get_test_modules",
      "file": "tests/runtests.py",
      "line": 89
    },
    {
      "id": "tests/runtests.py:get_installed",
      "type": "function",
      "name": "get_installed",
      "file": "tests/runtests.py",
      "line": 108
    },
    {
      "id": "tests/runtests.py:setup",
      "type": "function",
      "name": "setup",
      "file": "tests/runtests.py",
      "line": 112
    },
    {
      "id": "tests/runtests.py:setup.no_available_apps",
      "type": "function",
      "name": "setup.no_available_apps",
      "file": "tests/runtests.py",
      "line": 127
    },
    {
      "id": "tests/runtests.py:teardown",
      "type": "function",
      "name": "teardown",
      "file": "tests/runtests.py",
      "line": 230
    },
    {
      "id": "tests/runtests.py:actual_test_processes",
      "type": "function",
      "name": "actual_test_processes",
      "file": "tests/runtests.py",
      "line": 242
    },
    {
      "id": "tests/runtests.py:ActionSelenium",
      "type": "class",
      "name": "ActionSelenium",
      "file": "tests/runtests.py",
      "line": 253
    },
    {
      "id": "tests/runtests.py:ActionSelenium.__call__",
      "type": "function",
      "name": "ActionSelenium.__call__",
      "file": "tests/runtests.py",
      "line": 257
    },
    {
      "id": "tests/runtests.py:django_tests",
      "type": "function",
      "name": "django_tests",
      "file": "tests/runtests.py",
      "line": 267
    },
    {
      "id": "tests/runtests.py:get_subprocess_args",
      "type": "function",
      "name": "get_subprocess_args",
      "file": "tests/runtests.py",
      "line": 296
    },
    {
      "id": "tests/runtests.py:bisect_tests",
      "type": "function",
      "name": "bisect_tests",
      "file": "tests/runtests.py",
      "line": 313
    },
    {
      "id": "tests/runtests.py:paired_tests",
      "type": "function",
      "name": "paired_tests",
      "file": "tests/runtests.py",
      "line": 364
    },
    {
      "id": "tests/test_sqlite.py",
      "type": "file",
      "name": "test_sqlite.py",
      "file": "tests/test_sqlite.py",
      "line": 0
    },
    {
      "id": "tests/generic_views",
      "type": "directory",
      "name": "generic_views",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/generic_views/test_list.py",
      "type": "file",
      "name": "test_list.py",
      "file": "tests/generic_views/test_list.py",
      "line": 0
    },
    {
      "id": "tests/generic_views/test_list.py:ListViewTests",
      "type": "class",
      "name": "ListViewTests",
      "file": "tests/generic_views/test_list.py",
      "line": 11
    },
    {
      "id": "tests/generic_views/test_list.py:ListViewTests.setUpTestData",
      "type": "function",
      "name": "ListViewTests.setUpTestData",
      "file": "tests/generic_views/test_list.py",
      "line": 14
    },
    {
      "id": "tests/generic_views/test_list.py:ListViewTests.test_items",
      "type": "function",
      "name": "ListViewTests.test_items",
      "file": "tests/generic_views/test_list.py",
      "line": 27
    },
    {
      "id": "tests/generic_views/test_list.py:ListViewTests.test_queryset",
      "type": "function",
      "name": "ListViewTests.test_queryset",
      "file": "tests/generic_views/test_list.py",
      "line": 33
    },
    {
      "id": "tests/generic_views/test_list.py:ListViewTests.test_paginated_queryset",
      "type": "function",
      "name": "ListViewTests.test_paginated_queryset",
      "file": "tests/generic_views/test_list.py",
      "line": 44
    },
    {
      "id": "tests/generic_views/test_list.py:ListViewTests.test_paginated_queryset_shortdata",
      "type": "function",
      "name": "ListViewTests.test_paginated_queryset_shortdata",
      "file": "tests/generic_views/test_list.py",
      "line": 57
    },
    {
      "id": "tests/generic_views/test_list.py:ListViewTests.test_paginated_get_page_by_query_string",
      "type": "function",
      "name": "ListViewTests.test_paginated_get_page_by_query_string",
      "file": "tests/generic_views/test_list.py",
      "line": 68
    },
    {
      "id": "tests/generic_views/test_list.py:ListViewTests.test_paginated_get_last_page_by_query_string",
      "type": "function",
      "name": "ListViewTests.test_paginated_get_last_page_by_query_string",
      "file": "tests/generic_views/test_list.py",
      "line": 78
    },
    {
      "id": "tests/generic_views/test_list.py:ListViewTests.test_paginated_get_page_by_urlvar",
      "type": "function",
      "name": "ListViewTests.test_paginated_get_page_by_urlvar",
      "file": "tests/generic_views/test_list.py",
      "line": 87
    },
    {
      "id": "tests/generic_views/test_list.py:ListViewTests.test_paginated_page_out_of_range",
      "type": "function",
      "name": "ListViewTests.test_paginated_page_out_of_range",
      "file": "tests/generic_views/test_list.py",
      "line": 97
    },
    {
      "id": "tests/generic_views/test_list.py:ListViewTests.test_paginated_invalid_page",
      "type": "function",
      "name": "ListViewTests.test_paginated_invalid_page",
      "file": "tests/generic_views/test_list.py",
      "line": 102
    },
    {
      "id": "tests/generic_views/test_list.py:ListViewTests.test_paginated_custom_paginator_class",
      "type": "function",
      "name": "ListViewTests.test_paginated_custom_paginator_class",
      "file": "tests/generic_views/test_list.py",
      "line": 107
    },
    {
      "id": "tests/generic_views/test_list.py:ListViewTests.test_paginated_custom_page_kwarg",
      "type": "function",
      "name": "ListViewTests.test_paginated_custom_page_kwarg",
      "file": "tests/generic_views/test_list.py",
      "line": 115
    },
    {
      "id": "tests/generic_views/test_list.py:ListViewTests.test_paginated_custom_paginator_constructor",
      "type": "function",
      "name": "ListViewTests.test_paginated_custom_paginator_constructor",
      "file": "tests/generic_views/test_list.py",
      "line": 125
    },
    {
      "id": "tests/generic_views/test_list.py:ListViewTests.test_paginated_orphaned_queryset",
      "type": "function",
      "name": "ListViewTests.test_paginated_orphaned_queryset",
      "file": "tests/generic_views/test_list.py",
      "line": 132
    },
    {
      "id": "tests/generic_views/test_list.py:ListViewTests.test_paginated_non_queryset",
      "type": "function",
      "name": "ListViewTests.test_paginated_non_queryset",
      "file": "tests/generic_views/test_list.py",
      "line": 149
    },
    {
      "id": "tests/generic_views/test_list.py:ListViewTests.test_verbose_name",
      "type": "function",
      "name": "ListViewTests.test_verbose_name",
      "file": "tests/generic_views/test_list.py",
      "line": 155
    },
    {
      "id": "tests/generic_views/test_list.py:ListViewTests.test_allow_empty_false",
      "type": "function",
      "name": "ListViewTests.test_allow_empty_false",
      "file": "tests/generic_views/test_list.py",
      "line": 165
    },
    {
      "id": "tests/generic_views/test_list.py:ListViewTests.test_template_name",
      "type": "function",
      "name": "ListViewTests.test_template_name",
      "file": "tests/generic_views/test_list.py",
      "line": 172
    },
    {
      "id": "tests/generic_views/test_list.py:ListViewTests.test_template_name_suffix",
      "type": "function",
      "name": "ListViewTests.test_template_name_suffix",
      "file": "tests/generic_views/test_list.py",
      "line": 179
    },
    {
      "id": "tests/generic_views/test_list.py:ListViewTests.test_context_object_name",
      "type": "function",
      "name": "ListViewTests.test_context_object_name",
      "file": "tests/generic_views/test_list.py",
      "line": 186
    },
    {
      "id": "tests/generic_views/test_list.py:ListViewTests.test_duplicate_context_object_name",
      "type": "function",
      "name": "ListViewTests.test_duplicate_context_object_name",
      "file": "tests/generic_views/test_list.py",
      "line": 194
    },
    {
      "id": "tests/generic_views/test_list.py:ListViewTests.test_missing_items",
      "type": "function",
      "name": "ListViewTests.test_missing_items",
      "file": "tests/generic_views/test_list.py",
      "line": 202
    },
    {
      "id": "tests/generic_views/test_list.py:ListViewTests.test_invalid_get_queryset",
      "type": "function",
      "name": "ListViewTests.test_invalid_get_queryset",
      "file": "tests/generic_views/test_list.py",
      "line": 210
    },
    {
      "id": "tests/generic_views/test_list.py:ListViewTests.test_paginated_list_view_does_not_load_entire_table",
      "type": "function",
      "name": "ListViewTests.test_paginated_list_view_does_not_load_entire_table",
      "file": "tests/generic_views/test_list.py",
      "line": 218
    },
    {
      "id": "tests/generic_views/test_list.py:ListViewTests.test_explicitly_ordered_list_view",
      "type": "function",
      "name": "ListViewTests.test_explicitly_ordered_list_view",
      "file": "tests/generic_views/test_list.py",
      "line": 228
    },
    {
      "id": "tests/generic_views/test_list.py:ListViewTests.test_paginated_list_view_returns_useful_message_on_invalid_page",
      "type": "function",
      "name": "ListViewTests.test_paginated_list_view_returns_useful_message_on_invalid_page",
      "file": "tests/generic_views/test_list.py",
      "line": 243
    },
    {
      "id": "tests/generic_views/test_list.py:ListViewTests._make_authors",
      "type": "function",
      "name": "ListViewTests._make_authors",
      "file": "tests/generic_views/test_list.py",
      "line": 251
    },
    {
      "id": "tests/generic_views/test_detail.py",
      "type": "file",
      "name": "test_detail.py",
      "file": "tests/generic_views/test_detail.py",
      "line": 0
    },
    {
      "id": "tests/generic_views/test_detail.py:DetailViewTest",
      "type": "class",
      "name": "DetailViewTest",
      "file": "tests/generic_views/test_detail.py",
      "line": 14
    },
    {
      "id": "tests/generic_views/test_detail.py:DetailViewTest.setUpTestData",
      "type": "function",
      "name": "DetailViewTest.setUpTestData",
      "file": "tests/generic_views/test_detail.py",
      "line": 17
    },
    {
      "id": "tests/generic_views/test_detail.py:DetailViewTest.test_simple_object",
      "type": "function",
      "name": "DetailViewTest.test_simple_object",
      "file": "tests/generic_views/test_detail.py",
      "line": 30
    },
    {
      "id": "tests/generic_views/test_detail.py:DetailViewTest.test_detail_by_pk",
      "type": "function",
      "name": "DetailViewTest.test_detail_by_pk",
      "file": "tests/generic_views/test_detail.py",
      "line": 37
    },
    {
      "id": "tests/generic_views/test_detail.py:DetailViewTest.test_detail_missing_object",
      "type": "function",
      "name": "DetailViewTest.test_detail_missing_object",
      "file": "tests/generic_views/test_detail.py",
      "line": 44
    },
    {
      "id": "tests/generic_views/test_detail.py:DetailViewTest.test_detail_object_does_not_exist",
      "type": "function",
      "name": "DetailViewTest.test_detail_object_does_not_exist",
      "file": "tests/generic_views/test_detail.py",
      "line": 48
    },
    {
      "id": "tests/generic_views/test_detail.py:DetailViewTest.test_detail_by_custom_pk",
      "type": "function",
      "name": "DetailViewTest.test_detail_by_custom_pk",
      "file": "tests/generic_views/test_detail.py",
      "line": 52
    },
    {
      "id": "tests/generic_views/test_detail.py:DetailViewTest.test_detail_by_slug",
      "type": "function",
      "name": "DetailViewTest.test_detail_by_slug",
      "file": "tests/generic_views/test_detail.py",
      "line": 59
    },
    {
      "id": "tests/generic_views/test_detail.py:DetailViewTest.test_detail_by_custom_slug",
      "type": "function",
      "name": "DetailViewTest.test_detail_by_custom_slug",
      "file": "tests/generic_views/test_detail.py",
      "line": 66
    },
    {
      "id": "tests/generic_views/test_detail.py:DetailViewTest.test_detail_by_pk_ignore_slug",
      "type": "function",
      "name": "DetailViewTest.test_detail_by_pk_ignore_slug",
      "file": "tests/generic_views/test_detail.py",
      "line": 73
    },
    {
      "id": "tests/generic_views/test_detail.py:DetailViewTest.test_detail_by_pk_ignore_slug_mismatch",
      "type": "function",
      "name": "DetailViewTest.test_detail_by_pk_ignore_slug_mismatch",
      "file": "tests/generic_views/test_detail.py",
      "line": 80
    },
    {
      "id": "tests/generic_views/test_detail.py:DetailViewTest.test_detail_by_pk_and_slug",
      "type": "function",
      "name": "DetailViewTest.test_detail_by_pk_and_slug",
      "file": "tests/generic_views/test_detail.py",
      "line": 87
    },
    {
      "id": "tests/generic_views/test_detail.py:DetailViewTest.test_detail_by_pk_and_slug_mismatch_404",
      "type": "function",
      "name": "DetailViewTest.test_detail_by_pk_and_slug_mismatch_404",
      "file": "tests/generic_views/test_detail.py",
      "line": 94
    },
    {
      "id": "tests/generic_views/test_detail.py:DetailViewTest.test_verbose_name",
      "type": "function",
      "name": "DetailViewTest.test_verbose_name",
      "file": "tests/generic_views/test_detail.py",
      "line": 98
    },
    {
      "id": "tests/generic_views/test_detail.py:DetailViewTest.test_template_name",
      "type": "function",
      "name": "DetailViewTest.test_template_name",
      "file": "tests/generic_views/test_detail.py",
      "line": 105
    },
    {
      "id": "tests/generic_views/test_detail.py:DetailViewTest.test_template_name_suffix",
      "type": "function",
      "name": "DetailViewTest.test_template_name_suffix",
      "file": "tests/generic_views/test_detail.py",
      "line": 112
    },
    {
      "id": "tests/generic_views/test_detail.py:DetailViewTest.test_template_name_field",
      "type": "function",
      "name": "DetailViewTest.test_template_name_field",
      "file": "tests/generic_views/test_detail.py",
      "line": 119
    },
    {
      "id": "tests/generic_views/test_detail.py:DetailViewTest.test_context_object_name",
      "type": "function",
      "name": "DetailViewTest.test_context_object_name",
      "file": "tests/generic_views/test_detail.py",
      "line": 126
    },
    {
      "id": "tests/generic_views/test_detail.py:DetailViewTest.test_duplicated_context_object_name",
      "type": "function",
      "name": "DetailViewTest.test_duplicated_context_object_name",
      "file": "tests/generic_views/test_detail.py",
      "line": 134
    },
    {
      "id": "tests/generic_views/test_detail.py:DetailViewTest.test_custom_detail",
      "type": "function",
      "name": "DetailViewTest.test_custom_detail",
      "file": "tests/generic_views/test_detail.py",
      "line": 141
    },
    {
      "id": "tests/generic_views/test_detail.py:DetailViewTest.test_deferred_queryset_template_name",
      "type": "function",
      "name": "DetailViewTest.test_deferred_queryset_template_name",
      "file": "tests/generic_views/test_detail.py",
      "line": 154
    },
    {
      "id": "tests/generic_views/test_detail.py:DetailViewTest.test_deferred_queryset_template_name.FormContext",
      "type": "class",
      "name": "DetailViewTest.test_deferred_queryset_template_name.FormContext",
      "file": "tests/generic_views/test_detail.py",
      "line": 155
    },
    {
      "id": "tests/generic_views/test_detail.py:DetailViewTest.test_deferred_queryset_context_object_name",
      "type": "function",
      "name": "DetailViewTest.test_deferred_queryset_context_object_name",
      "file": "tests/generic_views/test_detail.py",
      "line": 162
    },
    {
      "id": "tests/generic_views/test_detail.py:DetailViewTest.test_deferred_queryset_context_object_name.FormContext",
      "type": "class",
      "name": "DetailViewTest.test_deferred_queryset_context_object_name.FormContext",
      "file": "tests/generic_views/test_detail.py",
      "line": 163
    },
    {
      "id": "tests/generic_views/test_detail.py:DetailViewTest.test_invalid_url",
      "type": "function",
      "name": "DetailViewTest.test_invalid_url",
      "file": "tests/generic_views/test_detail.py",
      "line": 173
    },
    {
      "id": "tests/generic_views/test_detail.py:DetailViewTest.test_invalid_queryset",
      "type": "function",
      "name": "DetailViewTest.test_invalid_queryset",
      "file": "tests/generic_views/test_detail.py",
      "line": 177
    },
    {
      "id": "tests/generic_views/test_detail.py:DetailViewTest.test_non_model_object_with_meta",
      "type": "function",
      "name": "DetailViewTest.test_non_model_object_with_meta",
      "file": "tests/generic_views/test_detail.py",
      "line": 185
    },
    {
      "id": "tests/generic_views/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/generic_views/models.py",
      "line": 0
    },
    {
      "id": "tests/generic_views/models.py:Artist",
      "type": "class",
      "name": "Artist",
      "file": "tests/generic_views/models.py",
      "line": 7
    },
    {
      "id": "tests/generic_views/models.py:Artist.Meta",
      "type": "class",
      "name": "Artist.Meta",
      "file": "tests/generic_views/models.py",
      "line": 10
    },
    {
      "id": "tests/generic_views/models.py:Artist.__str__",
      "type": "function",
      "name": "Artist.__str__",
      "file": "tests/generic_views/models.py",
      "line": 15
    },
    {
      "id": "tests/generic_views/models.py:Artist.get_absolute_url",
      "type": "function",
      "name": "Artist.get_absolute_url",
      "file": "tests/generic_views/models.py",
      "line": 18
    },
    {
      "id": "tests/generic_views/models.py:Author",
      "type": "class",
      "name": "Author",
      "file": "tests/generic_views/models.py",
      "line": 22
    },
    {
      "id": "tests/generic_views/models.py:Author.Meta",
      "type": "class",
      "name": "Author.Meta",
      "file": "tests/generic_views/models.py",
      "line": 26
    },
    {
      "id": "tests/generic_views/models.py:Author.__str__",
      "type": "function",
      "name": "Author.__str__",
      "file": "tests/generic_views/models.py",
      "line": 29
    },
    {
      "id": "tests/generic_views/models.py:DoesNotExistQuerySet",
      "type": "class",
      "name": "DoesNotExistQuerySet",
      "file": "tests/generic_views/models.py",
      "line": 33
    },
    {
      "id": "tests/generic_views/models.py:DoesNotExistQuerySet.get",
      "type": "function",
      "name": "DoesNotExistQuerySet.get",
      "file": "tests/generic_views/models.py",
      "line": 34
    },
    {
      "id": "tests/generic_views/models.py:Book",
      "type": "class",
      "name": "Book",
      "file": "tests/generic_views/models.py",
      "line": 41
    },
    {
      "id": "tests/generic_views/models.py:Book.Meta",
      "type": "class",
      "name": "Book.Meta",
      "file": "tests/generic_views/models.py",
      "line": 51
    },
    {
      "id": "tests/generic_views/models.py:Book.__str__",
      "type": "function",
      "name": "Book.__str__",
      "file": "tests/generic_views/models.py",
      "line": 54
    },
    {
      "id": "tests/generic_views/models.py:Page",
      "type": "class",
      "name": "Page",
      "file": "tests/generic_views/models.py",
      "line": 58
    },
    {
      "id": "tests/generic_views/models.py:BookSigning",
      "type": "class",
      "name": "BookSigning",
      "file": "tests/generic_views/models.py",
      "line": 63
    },
    {
      "id": "tests/generic_views/test_dates.py",
      "type": "file",
      "name": "test_dates.py",
      "file": "tests/generic_views/test_dates.py",
      "line": 0
    },
    {
      "id": "tests/generic_views/test_dates.py:_make_books",
      "type": "function",
      "name": "_make_books",
      "file": "tests/generic_views/test_dates.py",
      "line": 12
    },
    {
      "id": "tests/generic_views/test_dates.py:TestDataMixin",
      "type": "class",
      "name": "TestDataMixin",
      "file": "tests/generic_views/test_dates.py",
      "line": 21
    },
    {
      "id": "tests/generic_views/test_dates.py:TestDataMixin.setUpTestData",
      "type": "function",
      "name": "TestDataMixin.setUpTestData",
      "file": "tests/generic_views/test_dates.py",
      "line": 24
    },
    {
      "id": "tests/generic_views/test_dates.py:ArchiveIndexViewTests",
      "type": "class",
      "name": "ArchiveIndexViewTests",
      "file": "tests/generic_views/test_dates.py",
      "line": 39
    },
    {
      "id": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_archive_view",
      "type": "function",
      "name": "ArchiveIndexViewTests.test_archive_view",
      "file": "tests/generic_views/test_dates.py",
      "line": 41
    },
    {
      "id": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_archive_view_context_object_name",
      "type": "function",
      "name": "ArchiveIndexViewTests.test_archive_view_context_object_name",
      "file": "tests/generic_views/test_dates.py",
      "line": 48
    },
    {
      "id": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_empty_archive_view",
      "type": "function",
      "name": "ArchiveIndexViewTests.test_empty_archive_view",
      "file": "tests/generic_views/test_dates.py",
      "line": 56
    },
    {
      "id": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_allow_empty_archive_view",
      "type": "function",
      "name": "ArchiveIndexViewTests.test_allow_empty_archive_view",
      "file": "tests/generic_views/test_dates.py",
      "line": 61
    },
    {
      "id": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_archive_view_template",
      "type": "function",
      "name": "ArchiveIndexViewTests.test_archive_view_template",
      "file": "tests/generic_views/test_dates.py",
      "line": 68
    },
    {
      "id": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_archive_view_template_suffix",
      "type": "function",
      "name": "ArchiveIndexViewTests.test_archive_view_template_suffix",
      "file": "tests/generic_views/test_dates.py",
      "line": 75
    },
    {
      "id": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_archive_view_invalid",
      "type": "function",
      "name": "ArchiveIndexViewTests.test_archive_view_invalid",
      "file": "tests/generic_views/test_dates.py",
      "line": 82
    },
    {
      "id": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_archive_view_by_month",
      "type": "function",
      "name": "ArchiveIndexViewTests.test_archive_view_by_month",
      "file": "tests/generic_views/test_dates.py",
      "line": 90
    },
    {
      "id": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_paginated_archive_view",
      "type": "function",
      "name": "ArchiveIndexViewTests.test_paginated_archive_view",
      "file": "tests/generic_views/test_dates.py",
      "line": 95
    },
    {
      "id": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_paginated_archive_view_does_not_load_entire_table",
      "type": "function",
      "name": "ArchiveIndexViewTests.test_paginated_archive_view_does_not_load_entire_table",
      "file": "tests/generic_views/test_dates.py",
      "line": 108
    },
    {
      "id": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_no_duplicate_query",
      "type": "function",
      "name": "ArchiveIndexViewTests.test_no_duplicate_query",
      "file": "tests/generic_views/test_dates.py",
      "line": 118
    },
    {
      "id": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_datetime_archive_view",
      "type": "function",
      "name": "ArchiveIndexViewTests.test_datetime_archive_view",
      "file": "tests/generic_views/test_dates.py",
      "line": 123
    },
    {
      "id": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_aware_datetime_archive_view",
      "type": "function",
      "name": "ArchiveIndexViewTests.test_aware_datetime_archive_view",
      "file": "tests/generic_views/test_dates.py",
      "line": 131
    },
    {
      "id": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_date_list_order",
      "type": "function",
      "name": "ArchiveIndexViewTests.test_date_list_order",
      "file": "tests/generic_views/test_dates.py",
      "line": 136
    },
    {
      "id": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_archive_view_custom_sorting",
      "type": "function",
      "name": "ArchiveIndexViewTests.test_archive_view_custom_sorting",
      "file": "tests/generic_views/test_dates.py",
      "line": 143
    },
    {
      "id": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_archive_view_custom_sorting_dec",
      "type": "function",
      "name": "ArchiveIndexViewTests.test_archive_view_custom_sorting_dec",
      "file": "tests/generic_views/test_dates.py",
      "line": 151
    },
    {
      "id": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_archive_view_without_date_field",
      "type": "function",
      "name": "ArchiveIndexViewTests.test_archive_view_without_date_field",
      "file": "tests/generic_views/test_dates.py",
      "line": 159
    },
    {
      "id": "tests/generic_views/test_dates.py:YearArchiveViewTests",
      "type": "class",
      "name": "YearArchiveViewTests",
      "file": "tests/generic_views/test_dates.py",
      "line": 166
    },
    {
      "id": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_year_view",
      "type": "function",
      "name": "YearArchiveViewTests.test_year_view",
      "file": "tests/generic_views/test_dates.py",
      "line": 168
    },
    {
      "id": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_year_view_make_object_list",
      "type": "function",
      "name": "YearArchiveViewTests.test_year_view_make_object_list",
      "file": "tests/generic_views/test_dates.py",
      "line": 179
    },
    {
      "id": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_year_view_empty",
      "type": "function",
      "name": "YearArchiveViewTests.test_year_view_empty",
      "file": "tests/generic_views/test_dates.py",
      "line": 187
    },
    {
      "id": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_year_view_allow_future",
      "type": "function",
      "name": "YearArchiveViewTests.test_year_view_allow_future",
      "file": "tests/generic_views/test_dates.py",
      "line": 199
    },
    {
      "id": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_year_view_paginated",
      "type": "function",
      "name": "YearArchiveViewTests.test_year_view_paginated",
      "file": "tests/generic_views/test_dates.py",
      "line": 214
    },
    {
      "id": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_year_view_custom_sort_order",
      "type": "function",
      "name": "YearArchiveViewTests.test_year_view_custom_sort_order",
      "file": "tests/generic_views/test_dates.py",
      "line": 221
    },
    {
      "id": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_year_view_two_custom_sort_orders",
      "type": "function",
      "name": "YearArchiveViewTests.test_year_view_two_custom_sort_orders",
      "file": "tests/generic_views/test_dates.py",
      "line": 237
    },
    {
      "id": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_year_view_invalid_pattern",
      "type": "function",
      "name": "YearArchiveViewTests.test_year_view_invalid_pattern",
      "file": "tests/generic_views/test_dates.py",
      "line": 256
    },
    {
      "id": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_no_duplicate_query",
      "type": "function",
      "name": "YearArchiveViewTests.test_no_duplicate_query",
      "file": "tests/generic_views/test_dates.py",
      "line": 260
    },
    {
      "id": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_datetime_year_view",
      "type": "function",
      "name": "YearArchiveViewTests.test_datetime_year_view",
      "file": "tests/generic_views/test_dates.py",
      "line": 265
    },
    {
      "id": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_aware_datetime_year_view",
      "type": "function",
      "name": "YearArchiveViewTests.test_aware_datetime_year_view",
      "file": "tests/generic_views/test_dates.py",
      "line": 272
    },
    {
      "id": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_date_list_order",
      "type": "function",
      "name": "YearArchiveViewTests.test_date_list_order",
      "file": "tests/generic_views/test_dates.py",
      "line": 277
    },
    {
      "id": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_get_context_data_receives_extra_context",
      "type": "function",
      "name": "YearArchiveViewTests.test_get_context_data_receives_extra_context",
      "file": "tests/generic_views/test_dates.py",
      "line": 284
    },
    {
      "id": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_get_dated_items_not_implemented",
      "type": "function",
      "name": "YearArchiveViewTests.test_get_dated_items_not_implemented",
      "file": "tests/generic_views/test_dates.py",
      "line": 299
    },
    {
      "id": "tests/generic_views/test_dates.py:MonthArchiveViewTests",
      "type": "class",
      "name": "MonthArchiveViewTests",
      "file": "tests/generic_views/test_dates.py",
      "line": 306
    },
    {
      "id": "tests/generic_views/test_dates.py:MonthArchiveViewTests.test_month_view",
      "type": "function",
      "name": "MonthArchiveViewTests.test_month_view",
      "file": "tests/generic_views/test_dates.py",
      "line": 308
    },
    {
      "id": "tests/generic_views/test_dates.py:MonthArchiveViewTests.test_month_view_allow_empty",
      "type": "function",
      "name": "MonthArchiveViewTests.test_month_view_allow_empty",
      "file": "tests/generic_views/test_dates.py",
      "line": 321
    },
    {
      "id": "tests/generic_views/test_dates.py:MonthArchiveViewTests.test_month_view_allow_future",
      "type": "function",
      "name": "MonthArchiveViewTests.test_month_view_allow_future",
      "file": "tests/generic_views/test_dates.py",
      "line": 343
    },
    {
      "id": "tests/generic_views/test_dates.py:MonthArchiveViewTests.test_month_view_paginated",
      "type": "function",
      "name": "MonthArchiveViewTests.test_month_view_paginated",
      "file": "tests/generic_views/test_dates.py",
      "line": 371
    },
    {
      "id": "tests/generic_views/test_dates.py:MonthArchiveViewTests.test_custom_month_format",
      "type": "function",
      "name": "MonthArchiveViewTests.test_custom_month_format",
      "file": "tests/generic_views/test_dates.py",
      "line": 384
    },
    {
      "id": "tests/generic_views/test_dates.py:MonthArchiveViewTests.test_month_view_invalid_pattern",
      "type": "function",
      "name": "MonthArchiveViewTests.test_month_view_invalid_pattern",
      "file": "tests/generic_views/test_dates.py",
      "line": 388
    },
    {
      "id": "tests/generic_views/test_dates.py:MonthArchiveViewTests.test_previous_month_without_content",
      "type": "function",
      "name": "MonthArchiveViewTests.test_previous_month_without_content",
      "file": "tests/generic_views/test_dates.py",
      "line": 392
    },
    {
      "id": "tests/generic_views/test_dates.py:MonthArchiveViewTests.test_datetime_month_view",
      "type": "function",
      "name": "MonthArchiveViewTests.test_datetime_month_view",
      "file": "tests/generic_views/test_dates.py",
      "line": 414
    },
    {
      "id": "tests/generic_views/test_dates.py:MonthArchiveViewTests.test_month_view_get_month_from_request",
      "type": "function",
      "name": "MonthArchiveViewTests.test_month_view_get_month_from_request",
      "file": "tests/generic_views/test_dates.py",
      "line": 421
    },
    {
      "id": "tests/generic_views/test_dates.py:MonthArchiveViewTests.test_month_view_without_month_in_url",
      "type": "function",
      "name": "MonthArchiveViewTests.test_month_view_without_month_in_url",
      "file": "tests/generic_views/test_dates.py",
      "line": 430
    },
    {
      "id": "tests/generic_views/test_dates.py:MonthArchiveViewTests.test_aware_datetime_month_view",
      "type": "function",
      "name": "MonthArchiveViewTests.test_aware_datetime_month_view",
      "file": "tests/generic_views/test_dates.py",
      "line": 437
    },
    {
      "id": "tests/generic_views/test_dates.py:MonthArchiveViewTests.test_date_list_order",
      "type": "function",
      "name": "MonthArchiveViewTests.test_date_list_order",
      "file": "tests/generic_views/test_dates.py",
      "line": 444
    },
    {
      "id": "tests/generic_views/test_dates.py:WeekArchiveViewTests",
      "type": "class",
      "name": "WeekArchiveViewTests",
      "file": "tests/generic_views/test_dates.py",
      "line": 452
    },
    {
      "id": "tests/generic_views/test_dates.py:WeekArchiveViewTests.test_week_view",
      "type": "function",
      "name": "WeekArchiveViewTests.test_week_view",
      "file": "tests/generic_views/test_dates.py",
      "line": 454
    },
    {
      "id": "tests/generic_views/test_dates.py:WeekArchiveViewTests.test_week_view_allow_empty",
      "type": "function",
      "name": "WeekArchiveViewTests.test_week_view_allow_empty",
      "file": "tests/generic_views/test_dates.py",
      "line": 465
    },
    {
      "id": "tests/generic_views/test_dates.py:WeekArchiveViewTests.test_week_view_allow_future",
      "type": "function",
      "name": "WeekArchiveViewTests.test_week_view_allow_future",
      "file": "tests/generic_views/test_dates.py",
      "line": 486
    },
    {
      "id": "tests/generic_views/test_dates.py:WeekArchiveViewTests.test_week_view_paginated",
      "type": "function",
      "name": "WeekArchiveViewTests.test_week_view_paginated",
      "file": "tests/generic_views/test_dates.py",
      "line": 512
    },
    {
      "id": "tests/generic_views/test_dates.py:WeekArchiveViewTests.test_week_view_invalid_pattern",
      "type": "function",
      "name": "WeekArchiveViewTests.test_week_view_invalid_pattern",
      "file": "tests/generic_views/test_dates.py",
      "line": 527
    },
    {
      "id": "tests/generic_views/test_dates.py:WeekArchiveViewTests.test_week_start_Monday",
      "type": "function",
      "name": "WeekArchiveViewTests.test_week_start_Monday",
      "file": "tests/generic_views/test_dates.py",
      "line": 531
    },
    {
      "id": "tests/generic_views/test_dates.py:WeekArchiveViewTests.test_unknown_week_format",
      "type": "function",
      "name": "WeekArchiveViewTests.test_unknown_week_format",
      "file": "tests/generic_views/test_dates.py",
      "line": 541
    },
    {
      "id": "tests/generic_views/test_dates.py:WeekArchiveViewTests.test_datetime_week_view",
      "type": "function",
      "name": "WeekArchiveViewTests.test_datetime_week_view",
      "file": "tests/generic_views/test_dates.py",
      "line": 545
    },
    {
      "id": "tests/generic_views/test_dates.py:WeekArchiveViewTests.test_aware_datetime_week_view",
      "type": "function",
      "name": "WeekArchiveViewTests.test_aware_datetime_week_view",
      "file": "tests/generic_views/test_dates.py",
      "line": 551
    },
    {
      "id": "tests/generic_views/test_dates.py:DayArchiveViewTests",
      "type": "class",
      "name": "DayArchiveViewTests",
      "file": "tests/generic_views/test_dates.py",
      "line": 558
    },
    {
      "id": "tests/generic_views/test_dates.py:DayArchiveViewTests.test_day_view",
      "type": "function",
      "name": "DayArchiveViewTests.test_day_view",
      "file": "tests/generic_views/test_dates.py",
      "line": 560
    },
    {
      "id": "tests/generic_views/test_dates.py:DayArchiveViewTests.test_day_view_allow_empty",
      "type": "function",
      "name": "DayArchiveViewTests.test_day_view_allow_empty",
      "file": "tests/generic_views/test_dates.py",
      "line": 572
    },
    {
      "id": "tests/generic_views/test_dates.py:DayArchiveViewTests.test_day_view_allow_future",
      "type": "function",
      "name": "DayArchiveViewTests.test_day_view_allow_future",
      "file": "tests/generic_views/test_dates.py",
      "line": 593
    },
    {
      "id": "tests/generic_views/test_dates.py:DayArchiveViewTests.test_day_view_paginated",
      "type": "function",
      "name": "DayArchiveViewTests.test_day_view_paginated",
      "file": "tests/generic_views/test_dates.py",
      "line": 625
    },
    {
      "id": "tests/generic_views/test_dates.py:DayArchiveViewTests.test_next_prev_context",
      "type": "function",
      "name": "DayArchiveViewTests.test_next_prev_context",
      "file": "tests/generic_views/test_dates.py",
      "line": 638
    },
    {
      "id": "tests/generic_views/test_dates.py:DayArchiveViewTests.test_custom_month_format",
      "type": "function",
      "name": "DayArchiveViewTests.test_custom_month_format",
      "file": "tests/generic_views/test_dates.py",
      "line": 642
    },
    {
      "id": "tests/generic_views/test_dates.py:DayArchiveViewTests.test_day_view_invalid_pattern",
      "type": "function",
      "name": "DayArchiveViewTests.test_day_view_invalid_pattern",
      "file": "tests/generic_views/test_dates.py",
      "line": 646
    },
    {
      "id": "tests/generic_views/test_dates.py:DayArchiveViewTests.test_today_view",
      "type": "function",
      "name": "DayArchiveViewTests.test_today_view",
      "file": "tests/generic_views/test_dates.py",
      "line": 650
    },
    {
      "id": "tests/generic_views/test_dates.py:DayArchiveViewTests.test_datetime_day_view",
      "type": "function",
      "name": "DayArchiveViewTests.test_datetime_day_view",
      "file": "tests/generic_views/test_dates.py",
      "line": 657
    },
    {
      "id": "tests/generic_views/test_dates.py:DayArchiveViewTests.test_aware_datetime_day_view",
      "type": "function",
      "name": "DayArchiveViewTests.test_aware_datetime_day_view",
      "file": "tests/generic_views/test_dates.py",
      "line": 664
    },
    {
      "id": "tests/generic_views/test_dates.py:DateDetailViewTests",
      "type": "class",
      "name": "DateDetailViewTests",
      "file": "tests/generic_views/test_dates.py",
      "line": 681
    },
    {
      "id": "tests/generic_views/test_dates.py:DateDetailViewTests.test_date_detail_by_pk",
      "type": "function",
      "name": "DateDetailViewTests.test_date_detail_by_pk",
      "file": "tests/generic_views/test_dates.py",
      "line": 683
    },
    {
      "id": "tests/generic_views/test_dates.py:DateDetailViewTests.test_date_detail_by_slug",
      "type": "function",
      "name": "DateDetailViewTests.test_date_detail_by_slug",
      "file": "tests/generic_views/test_dates.py",
      "line": 690
    },
    {
      "id": "tests/generic_views/test_dates.py:DateDetailViewTests.test_date_detail_custom_month_format",
      "type": "function",
      "name": "DateDetailViewTests.test_date_detail_custom_month_format",
      "file": "tests/generic_views/test_dates.py",
      "line": 695
    },
    {
      "id": "tests/generic_views/test_dates.py:DateDetailViewTests.test_date_detail_allow_future",
      "type": "function",
      "name": "DateDetailViewTests.test_date_detail_allow_future",
      "file": "tests/generic_views/test_dates.py",
      "line": 700
    },
    {
      "id": "tests/generic_views/test_dates.py:DateDetailViewTests.test_year_out_of_range",
      "type": "function",
      "name": "DateDetailViewTests.test_year_out_of_range",
      "file": "tests/generic_views/test_dates.py",
      "line": 713
    },
    {
      "id": "tests/generic_views/test_dates.py:DateDetailViewTests.test_invalid_url",
      "type": "function",
      "name": "DateDetailViewTests.test_invalid_url",
      "file": "tests/generic_views/test_dates.py",
      "line": 725
    },
    {
      "id": "tests/generic_views/test_dates.py:DateDetailViewTests.test_get_object_custom_queryset",
      "type": "function",
      "name": "DateDetailViewTests.test_get_object_custom_queryset",
      "file": "tests/generic_views/test_dates.py",
      "line": 733
    },
    {
      "id": "tests/generic_views/test_dates.py:DateDetailViewTests.test_get_object_custom_queryset_numqueries",
      "type": "function",
      "name": "DateDetailViewTests.test_get_object_custom_queryset_numqueries",
      "file": "tests/generic_views/test_dates.py",
      "line": 749
    },
    {
      "id": "tests/generic_views/test_dates.py:DateDetailViewTests.test_datetime_date_detail",
      "type": "function",
      "name": "DateDetailViewTests.test_datetime_date_detail",
      "file": "tests/generic_views/test_dates.py",
      "line": 753
    },
    {
      "id": "tests/generic_views/test_dates.py:DateDetailViewTests.test_aware_datetime_date_detail",
      "type": "function",
      "name": "DateDetailViewTests.test_aware_datetime_date_detail",
      "file": "tests/generic_views/test_dates.py",
      "line": 760
    },
    {
      "id": "tests/generic_views/test_edit.py",
      "type": "file",
      "name": "test_edit.py",
      "file": "tests/generic_views/test_edit.py",
      "line": 0
    },
    {
      "id": "tests/generic_views/test_edit.py:FormMixinTests",
      "type": "class",
      "name": "FormMixinTests",
      "file": "tests/generic_views/test_edit.py",
      "line": 14
    },
    {
      "id": "tests/generic_views/test_edit.py:FormMixinTests.test_initial_data",
      "type": "function",
      "name": "FormMixinTests.test_initial_data",
      "file": "tests/generic_views/test_edit.py",
      "line": 17
    },
    {
      "id": "tests/generic_views/test_edit.py:FormMixinTests.test_get_prefix",
      "type": "function",
      "name": "FormMixinTests.test_get_prefix",
      "file": "tests/generic_views/test_edit.py",
      "line": 24
    },
    {
      "id": "tests/generic_views/test_edit.py:FormMixinTests.test_get_prefix.TestFormMixin",
      "type": "class",
      "name": "FormMixinTests.test_get_prefix.TestFormMixin",
      "file": "tests/generic_views/test_edit.py",
      "line": 30
    },
    {
      "id": "tests/generic_views/test_edit.py:FormMixinTests.test_get_form",
      "type": "function",
      "name": "FormMixinTests.test_get_form",
      "file": "tests/generic_views/test_edit.py",
      "line": 41
    },
    {
      "id": "tests/generic_views/test_edit.py:FormMixinTests.test_get_form.TestFormMixin",
      "type": "class",
      "name": "FormMixinTests.test_get_form.TestFormMixin",
      "file": "tests/generic_views/test_edit.py",
      "line": 42
    },
    {
      "id": "tests/generic_views/test_edit.py:FormMixinTests.test_get_form.FormClassTestFormMixin",
      "type": "class",
      "name": "FormMixinTests.test_get_form.FormClassTestFormMixin",
      "file": "tests/generic_views/test_edit.py",
      "line": 50
    },
    {
      "id": "tests/generic_views/test_edit.py:FormMixinTests.test_get_context_data",
      "type": "function",
      "name": "FormMixinTests.test_get_context_data",
      "file": "tests/generic_views/test_edit.py",
      "line": 58
    },
    {
      "id": "tests/generic_views/test_edit.py:FormMixinTests.test_get_context_data.FormContext",
      "type": "class",
      "name": "FormMixinTests.test_get_context_data.FormContext",
      "file": "tests/generic_views/test_edit.py",
      "line": 59
    },
    {
      "id": "tests/generic_views/test_edit.py:BasicFormTests",
      "type": "class",
      "name": "BasicFormTests",
      "file": "tests/generic_views/test_edit.py",
      "line": 67
    },
    {
      "id": "tests/generic_views/test_edit.py:BasicFormTests.test_post_data",
      "type": "function",
      "name": "BasicFormTests.test_post_data",
      "file": "tests/generic_views/test_edit.py",
      "line": 69
    },
    {
      "id": "tests/generic_views/test_edit.py:BasicFormTests.test_late_form_validation",
      "type": "function",
      "name": "BasicFormTests.test_late_form_validation",
      "file": "tests/generic_views/test_edit.py",
      "line": 73
    },
    {
      "id": "tests/generic_views/test_edit.py:ModelFormMixinTests",
      "type": "class",
      "name": "ModelFormMixinTests",
      "file": "tests/generic_views/test_edit.py",
      "line": 81
    },
    {
      "id": "tests/generic_views/test_edit.py:ModelFormMixinTests.test_get_form",
      "type": "function",
      "name": "ModelFormMixinTests.test_get_form",
      "file": "tests/generic_views/test_edit.py",
      "line": 82
    },
    {
      "id": "tests/generic_views/test_edit.py:ModelFormMixinTests.test_get_form_checks_for_object",
      "type": "function",
      "name": "ModelFormMixinTests.test_get_form_checks_for_object",
      "file": "tests/generic_views/test_edit.py",
      "line": 86
    },
    {
      "id": "tests/generic_views/test_edit.py:CreateViewTests",
      "type": "class",
      "name": "CreateViewTests",
      "file": "tests/generic_views/test_edit.py",
      "line": 94
    },
    {
      "id": "tests/generic_views/test_edit.py:CreateViewTests.test_create",
      "type": "function",
      "name": "CreateViewTests.test_create",
      "file": "tests/generic_views/test_edit.py",
      "line": 96
    },
    {
      "id": "tests/generic_views/test_edit.py:CreateViewTests.test_create_invalid",
      "type": "function",
      "name": "CreateViewTests.test_create_invalid",
      "file": "tests/generic_views/test_edit.py",
      "line": 110
    },
    {
      "id": "tests/generic_views/test_edit.py:CreateViewTests.test_create_with_object_url",
      "type": "function",
      "name": "CreateViewTests.test_create_with_object_url",
      "file": "tests/generic_views/test_edit.py",
      "line": 117
    },
    {
      "id": "tests/generic_views/test_edit.py:CreateViewTests.test_create_with_redirect",
      "type": "function",
      "name": "CreateViewTests.test_create_with_redirect",
      "file": "tests/generic_views/test_edit.py",
      "line": 124
    },
    {
      "id": "tests/generic_views/test_edit.py:CreateViewTests.test_create_with_interpolated_redirect",
      "type": "function",
      "name": "CreateViewTests.test_create_with_interpolated_redirect",
      "file": "tests/generic_views/test_edit.py",
      "line": 130
    },
    {
      "id": "tests/generic_views/test_edit.py:CreateViewTests.test_create_with_special_properties",
      "type": "function",
      "name": "CreateViewTests.test_create_with_special_properties",
      "file": "tests/generic_views/test_edit.py",
      "line": 148
    },
    {
      "id": "tests/generic_views/test_edit.py:CreateViewTests.test_create_without_redirect",
      "type": "function",
      "name": "CreateViewTests.test_create_without_redirect",
      "file": "tests/generic_views/test_edit.py",
      "line": 162
    },
    {
      "id": "tests/generic_views/test_edit.py:CreateViewTests.test_create_restricted",
      "type": "function",
      "name": "CreateViewTests.test_create_restricted",
      "file": "tests/generic_views/test_edit.py",
      "line": 170
    },
    {
      "id": "tests/generic_views/test_edit.py:CreateViewTests.test_create_view_with_restricted_fields",
      "type": "function",
      "name": "CreateViewTests.test_create_view_with_restricted_fields",
      "file": "tests/generic_views/test_edit.py",
      "line": 178
    },
    {
      "id": "tests/generic_views/test_edit.py:CreateViewTests.test_create_view_with_restricted_fields.MyCreateView",
      "type": "class",
      "name": "CreateViewTests.test_create_view_with_restricted_fields.MyCreateView",
      "file": "tests/generic_views/test_edit.py",
      "line": 180
    },
    {
      "id": "tests/generic_views/test_edit.py:CreateViewTests.test_create_view_all_fields",
      "type": "function",
      "name": "CreateViewTests.test_create_view_all_fields",
      "file": "tests/generic_views/test_edit.py",
      "line": 186
    },
    {
      "id": "tests/generic_views/test_edit.py:CreateViewTests.test_create_view_all_fields.MyCreateView",
      "type": "class",
      "name": "CreateViewTests.test_create_view_all_fields.MyCreateView",
      "file": "tests/generic_views/test_edit.py",
      "line": 187
    },
    {
      "id": "tests/generic_views/test_edit.py:CreateViewTests.test_create_view_without_explicit_fields",
      "type": "function",
      "name": "CreateViewTests.test_create_view_without_explicit_fields",
      "file": "tests/generic_views/test_edit.py",
      "line": 193
    },
    {
      "id": "tests/generic_views/test_edit.py:CreateViewTests.test_create_view_without_explicit_fields.MyCreateView",
      "type": "class",
      "name": "CreateViewTests.test_create_view_without_explicit_fields.MyCreateView",
      "file": "tests/generic_views/test_edit.py",
      "line": 194
    },
    {
      "id": "tests/generic_views/test_edit.py:CreateViewTests.test_define_both_fields_and_form_class",
      "type": "function",
      "name": "CreateViewTests.test_define_both_fields_and_form_class",
      "file": "tests/generic_views/test_edit.py",
      "line": 204
    },
    {
      "id": "tests/generic_views/test_edit.py:CreateViewTests.test_define_both_fields_and_form_class.MyCreateView",
      "type": "class",
      "name": "CreateViewTests.test_define_both_fields_and_form_class.MyCreateView",
      "file": "tests/generic_views/test_edit.py",
      "line": 205
    },
    {
      "id": "tests/generic_views/test_edit.py:UpdateViewTests",
      "type": "class",
      "name": "UpdateViewTests",
      "file": "tests/generic_views/test_edit.py",
      "line": 216
    },
    {
      "id": "tests/generic_views/test_edit.py:UpdateViewTests.setUpTestData",
      "type": "function",
      "name": "UpdateViewTests.setUpTestData",
      "file": "tests/generic_views/test_edit.py",
      "line": 219
    },
    {
      "id": "tests/generic_views/test_edit.py:UpdateViewTests.test_update_post",
      "type": "function",
      "name": "UpdateViewTests.test_update_post",
      "file": "tests/generic_views/test_edit.py",
      "line": 226
    },
    {
      "id": "tests/generic_views/test_edit.py:UpdateViewTests.test_update_invalid",
      "type": "function",
      "name": "UpdateViewTests.test_update_invalid",
      "file": "tests/generic_views/test_edit.py",
      "line": 244
    },
    {
      "id": "tests/generic_views/test_edit.py:UpdateViewTests.test_update_with_object_url",
      "type": "function",
      "name": "UpdateViewTests.test_update_with_object_url",
      "file": "tests/generic_views/test_edit.py",
      "line": 255
    },
    {
      "id": "tests/generic_views/test_edit.py:UpdateViewTests.test_update_with_redirect",
      "type": "function",
      "name": "UpdateViewTests.test_update_with_redirect",
      "file": "tests/generic_views/test_edit.py",
      "line": 262
    },
    {
      "id": "tests/generic_views/test_edit.py:UpdateViewTests.test_update_with_interpolated_redirect",
      "type": "function",
      "name": "UpdateViewTests.test_update_with_interpolated_redirect",
      "file": "tests/generic_views/test_edit.py",
      "line": 271
    },
    {
      "id": "tests/generic_views/test_edit.py:UpdateViewTests.test_update_with_special_properties",
      "type": "function",
      "name": "UpdateViewTests.test_update_with_special_properties",
      "file": "tests/generic_views/test_edit.py",
      "line": 289
    },
    {
      "id": "tests/generic_views/test_edit.py:UpdateViewTests.test_update_without_redirect",
      "type": "function",
      "name": "UpdateViewTests.test_update_without_redirect",
      "file": "tests/generic_views/test_edit.py",
      "line": 306
    },
    {
      "id": "tests/generic_views/test_edit.py:UpdateViewTests.test_update_get_object",
      "type": "function",
      "name": "UpdateViewTests.test_update_get_object",
      "file": "tests/generic_views/test_edit.py",
      "line": 317
    },
    {
      "id": "tests/generic_views/test_edit.py:DeleteViewTests",
      "type": "class",
      "name": "DeleteViewTests",
      "file": "tests/generic_views/test_edit.py",
      "line": 334
    },
    {
      "id": "tests/generic_views/test_edit.py:DeleteViewTests.setUpTestData",
      "type": "function",
      "name": "DeleteViewTests.setUpTestData",
      "file": "tests/generic_views/test_edit.py",
      "line": 337
    },
    {
      "id": "tests/generic_views/test_edit.py:DeleteViewTests.test_delete_by_post",
      "type": "function",
      "name": "DeleteViewTests.test_delete_by_post",
      "file": "tests/generic_views/test_edit.py",
      "line": 343
    },
    {
      "id": "tests/generic_views/test_edit.py:DeleteViewTests.test_delete_by_delete",
      "type": "function",
      "name": "DeleteViewTests.test_delete_by_delete",
      "file": "tests/generic_views/test_edit.py",
      "line": 356
    },
    {
      "id": "tests/generic_views/test_edit.py:DeleteViewTests.test_delete_with_redirect",
      "type": "function",
      "name": "DeleteViewTests.test_delete_with_redirect",
      "file": "tests/generic_views/test_edit.py",
      "line": 363
    },
    {
      "id": "tests/generic_views/test_edit.py:DeleteViewTests.test_delete_with_interpolated_redirect",
      "type": "function",
      "name": "DeleteViewTests.test_delete_with_interpolated_redirect",
      "file": "tests/generic_views/test_edit.py",
      "line": 369
    },
    {
      "id": "tests/generic_views/test_edit.py:DeleteViewTests.test_delete_with_special_properties",
      "type": "function",
      "name": "DeleteViewTests.test_delete_with_special_properties",
      "file": "tests/generic_views/test_edit.py",
      "line": 380
    },
    {
      "id": "tests/generic_views/test_edit.py:DeleteViewTests.test_delete_without_redirect",
      "type": "function",
      "name": "DeleteViewTests.test_delete_without_redirect",
      "file": "tests/generic_views/test_edit.py",
      "line": 393
    },
    {
      "id": "tests/generic_views/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/generic_views/__init__.py",
      "line": 0
    },
    {
      "id": "tests/generic_views/forms.py",
      "type": "file",
      "name": "forms.py",
      "file": "tests/generic_views/forms.py",
      "line": 0
    },
    {
      "id": "tests/generic_views/forms.py:AuthorForm",
      "type": "class",
      "name": "AuthorForm",
      "file": "tests/generic_views/forms.py",
      "line": 6
    },
    {
      "id": "tests/generic_views/forms.py:AuthorForm.Meta",
      "type": "class",
      "name": "AuthorForm.Meta",
      "file": "tests/generic_views/forms.py",
      "line": 10
    },
    {
      "id": "tests/generic_views/forms.py:ContactForm",
      "type": "class",
      "name": "ContactForm",
      "file": "tests/generic_views/forms.py",
      "line": 15
    },
    {
      "id": "tests/generic_views/urls.py",
      "type": "file",
      "name": "urls.py",
      "file": "tests/generic_views/urls.py",
      "line": 0
    },
    {
      "id": "tests/generic_views/test_base.py",
      "type": "file",
      "name": "test_base.py",
      "file": "tests/generic_views/test_base.py",
      "line": 0
    },
    {
      "id": "tests/generic_views/test_base.py:SimpleView",
      "type": "class",
      "name": "SimpleView",
      "file": "tests/generic_views/test_base.py",
      "line": 13
    },
    {
      "id": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "function",
      "name": "SimpleView.get",
      "file": "tests/generic_views/test_base.py",
      "line": 17
    },
    {
      "id": "tests/generic_views/test_base.py:SimplePostView",
      "type": "class",
      "name": "SimplePostView",
      "file": "tests/generic_views/test_base.py",
      "line": 21
    },
    {
      "id": "tests/generic_views/test_base.py:PostOnlyView",
      "type": "class",
      "name": "PostOnlyView",
      "file": "tests/generic_views/test_base.py",
      "line": 25
    },
    {
      "id": "tests/generic_views/test_base.py:PostOnlyView.post",
      "type": "function",
      "name": "PostOnlyView.post",
      "file": "tests/generic_views/test_base.py",
      "line": 26
    },
    {
      "id": "tests/generic_views/test_base.py:CustomizableView",
      "type": "class",
      "name": "CustomizableView",
      "file": "tests/generic_views/test_base.py",
      "line": 30
    },
    {
      "id": "tests/generic_views/test_base.py:decorator",
      "type": "function",
      "name": "decorator",
      "file": "tests/generic_views/test_base.py",
      "line": 34
    },
    {
      "id": "tests/generic_views/test_base.py:DecoratedDispatchView",
      "type": "class",
      "name": "DecoratedDispatchView",
      "file": "tests/generic_views/test_base.py",
      "line": 39
    },
    {
      "id": "tests/generic_views/test_base.py:DecoratedDispatchView.dispatch",
      "type": "function",
      "name": "DecoratedDispatchView.dispatch",
      "file": "tests/generic_views/test_base.py",
      "line": 42
    },
    {
      "id": "tests/generic_views/test_base.py:AboutTemplateView",
      "type": "class",
      "name": "AboutTemplateView",
      "file": "tests/generic_views/test_base.py",
      "line": 46
    },
    {
      "id": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "function",
      "name": "AboutTemplateView.get",
      "file": "tests/generic_views/test_base.py",
      "line": 47
    },
    {
      "id": "tests/generic_views/test_base.py:AboutTemplateView.get_template_names",
      "type": "function",
      "name": "AboutTemplateView.get_template_names",
      "file": "tests/generic_views/test_base.py",
      "line": 50
    },
    {
      "id": "tests/generic_views/test_base.py:AboutTemplateAttributeView",
      "type": "class",
      "name": "AboutTemplateAttributeView",
      "file": "tests/generic_views/test_base.py",
      "line": 54
    },
    {
      "id": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "function",
      "name": "AboutTemplateAttributeView.get",
      "file": "tests/generic_views/test_base.py",
      "line": 57
    },
    {
      "id": "tests/generic_views/test_base.py:InstanceView",
      "type": "class",
      "name": "InstanceView",
      "file": "tests/generic_views/test_base.py",
      "line": 61
    },
    {
      "id": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "function",
      "name": "InstanceView.get",
      "file": "tests/generic_views/test_base.py",
      "line": 63
    },
    {
      "id": "tests/generic_views/test_base.py:ViewTest",
      "type": "class",
      "name": "ViewTest",
      "file": "tests/generic_views/test_base.py",
      "line": 67
    },
    {
      "id": "tests/generic_views/test_base.py:ViewTest._assert_simple",
      "type": "function",
      "name": "ViewTest._assert_simple",
      "file": "tests/generic_views/test_base.py",
      "line": 70
    },
    {
      "id": "tests/generic_views/test_base.py:ViewTest.test_no_init_kwargs",
      "type": "function",
      "name": "ViewTest.test_no_init_kwargs",
      "file": "tests/generic_views/test_base.py",
      "line": 74
    },
    {
      "id": "tests/generic_views/test_base.py:ViewTest.test_no_init_args",
      "type": "function",
      "name": "ViewTest.test_no_init_args",
      "file": "tests/generic_views/test_base.py",
      "line": 82
    },
    {
      "id": "tests/generic_views/test_base.py:ViewTest.test_pathological_http_method",
      "type": "function",
      "name": "ViewTest.test_pathological_http_method",
      "file": "tests/generic_views/test_base.py",
      "line": 90
    },
    {
      "id": "tests/generic_views/test_base.py:ViewTest.test_get_only",
      "type": "function",
      "name": "ViewTest.test_get_only",
      "file": "tests/generic_views/test_base.py",
      "line": 98
    },
    {
      "id": "tests/generic_views/test_base.py:ViewTest.test_get_and_head",
      "type": "function",
      "name": "ViewTest.test_get_and_head",
      "file": "tests/generic_views/test_base.py",
      "line": 108
    },
    {
      "id": "tests/generic_views/test_base.py:ViewTest.test_head_no_get",
      "type": "function",
      "name": "ViewTest.test_head_no_get",
      "file": "tests/generic_views/test_base.py",
      "line": 116
    },
    {
      "id": "tests/generic_views/test_base.py:ViewTest.test_get_and_post",
      "type": "function",
      "name": "ViewTest.test_get_and_post",
      "file": "tests/generic_views/test_base.py",
      "line": 123
    },
    {
      "id": "tests/generic_views/test_base.py:ViewTest.test_invalid_keyword_argument",
      "type": "function",
      "name": "ViewTest.test_invalid_keyword_argument",
      "file": "tests/generic_views/test_base.py",
      "line": 133
    },
    {
      "id": "tests/generic_views/test_base.py:ViewTest.test_calling_more_than_once",
      "type": "function",
      "name": "ViewTest.test_calling_more_than_once",
      "file": "tests/generic_views/test_base.py",
      "line": 158
    },
    {
      "id": "tests/generic_views/test_base.py:ViewTest.test_class_attributes",
      "type": "function",
      "name": "ViewTest.test_class_attributes",
      "file": "tests/generic_views/test_base.py",
      "line": 166
    },
    {
      "id": "tests/generic_views/test_base.py:ViewTest.test_dispatch_decoration",
      "type": "function",
      "name": "ViewTest.test_dispatch_decoration",
      "file": "tests/generic_views/test_base.py",
      "line": 175
    },
    {
      "id": "tests/generic_views/test_base.py:ViewTest.test_options",
      "type": "function",
      "name": "ViewTest.test_options",
      "file": "tests/generic_views/test_base.py",
      "line": 182
    },
    {
      "id": "tests/generic_views/test_base.py:ViewTest.test_options_for_get_view",
      "type": "function",
      "name": "ViewTest.test_options_for_get_view",
      "file": "tests/generic_views/test_base.py",
      "line": 193
    },
    {
      "id": "tests/generic_views/test_base.py:ViewTest.test_options_for_get_and_post_view",
      "type": "function",
      "name": "ViewTest.test_options_for_get_and_post_view",
      "file": "tests/generic_views/test_base.py",
      "line": 202
    },
    {
      "id": "tests/generic_views/test_base.py:ViewTest.test_options_for_post_view",
      "type": "function",
      "name": "ViewTest.test_options_for_post_view",
      "file": "tests/generic_views/test_base.py",
      "line": 211
    },
    {
      "id": "tests/generic_views/test_base.py:ViewTest._assert_allows",
      "type": "function",
      "name": "ViewTest._assert_allows",
      "file": "tests/generic_views/test_base.py",
      "line": 220
    },
    {
      "id": "tests/generic_views/test_base.py:ViewTest.test_args_kwargs_request_on_self",
      "type": "function",
      "name": "ViewTest.test_args_kwargs_request_on_self",
      "file": "tests/generic_views/test_base.py",
      "line": 225
    },
    {
      "id": "tests/generic_views/test_base.py:ViewTest.test_overridden_setup",
      "type": "function",
      "name": "ViewTest.test_overridden_setup",
      "file": "tests/generic_views/test_base.py",
      "line": 236
    },
    {
      "id": "tests/generic_views/test_base.py:ViewTest.test_overridden_setup.SetAttributeMixin",
      "type": "class",
      "name": "ViewTest.test_overridden_setup.SetAttributeMixin",
      "file": "tests/generic_views/test_base.py",
      "line": 237
    },
    {
      "id": "tests/generic_views/test_base.py:ViewTest.test_overridden_setup.SetAttributeMixin.setup",
      "type": "function",
      "name": "ViewTest.test_overridden_setup.SetAttributeMixin.setup",
      "file": "tests/generic_views/test_base.py",
      "line": 238
    },
    {
      "id": "tests/generic_views/test_base.py:ViewTest.test_overridden_setup.CheckSetupView",
      "type": "class",
      "name": "ViewTest.test_overridden_setup.CheckSetupView",
      "file": "tests/generic_views/test_base.py",
      "line": 242
    },
    {
      "id": "tests/generic_views/test_base.py:ViewTest.test_overridden_setup.CheckSetupView.dispatch",
      "type": "function",
      "name": "ViewTest.test_overridden_setup.CheckSetupView.dispatch",
      "file": "tests/generic_views/test_base.py",
      "line": 243
    },
    {
      "id": "tests/generic_views/test_base.py:ViewTest.test_not_calling_parent_setup_error",
      "type": "function",
      "name": "ViewTest.test_not_calling_parent_setup_error",
      "file": "tests/generic_views/test_base.py",
      "line": 250
    },
    {
      "id": "tests/generic_views/test_base.py:ViewTest.test_not_calling_parent_setup_error.TestView",
      "type": "class",
      "name": "ViewTest.test_not_calling_parent_setup_error.TestView",
      "file": "tests/generic_views/test_base.py",
      "line": 251
    },
    {
      "id": "tests/generic_views/test_base.py:ViewTest.test_not_calling_parent_setup_error.TestView.setup",
      "type": "function",
      "name": "ViewTest.test_not_calling_parent_setup_error.TestView.setup",
      "file": "tests/generic_views/test_base.py",
      "line": 252
    },
    {
      "id": "tests/generic_views/test_base.py:ViewTest.test_direct_instantiation",
      "type": "function",
      "name": "ViewTest.test_direct_instantiation",
      "file": "tests/generic_views/test_base.py",
      "line": 262
    },
    {
      "id": "tests/generic_views/test_base.py:TemplateViewTest",
      "type": "class",
      "name": "TemplateViewTest",
      "file": "tests/generic_views/test_base.py",
      "line": 273
    },
    {
      "id": "tests/generic_views/test_base.py:TemplateViewTest._assert_about",
      "type": "function",
      "name": "TemplateViewTest._assert_about",
      "file": "tests/generic_views/test_base.py",
      "line": 277
    },
    {
      "id": "tests/generic_views/test_base.py:TemplateViewTest.test_get",
      "type": "function",
      "name": "TemplateViewTest.test_get",
      "file": "tests/generic_views/test_base.py",
      "line": 281
    },
    {
      "id": "tests/generic_views/test_base.py:TemplateViewTest.test_head",
      "type": "function",
      "name": "TemplateViewTest.test_head",
      "file": "tests/generic_views/test_base.py",
      "line": 287
    },
    {
      "id": "tests/generic_views/test_base.py:TemplateViewTest.test_get_template_attribute",
      "type": "function",
      "name": "TemplateViewTest.test_get_template_attribute",
      "file": "tests/generic_views/test_base.py",
      "line": 294
    },
    {
      "id": "tests/generic_views/test_base.py:TemplateViewTest.test_get_generic_template",
      "type": "function",
      "name": "TemplateViewTest.test_get_generic_template",
      "file": "tests/generic_views/test_base.py",
      "line": 301
    },
    {
      "id": "tests/generic_views/test_base.py:TemplateViewTest.test_template_name_required",
      "type": "function",
      "name": "TemplateViewTest.test_template_name_required",
      "file": "tests/generic_views/test_base.py",
      "line": 308
    },
    {
      "id": "tests/generic_views/test_base.py:TemplateViewTest.test_template_engine",
      "type": "function",
      "name": "TemplateViewTest.test_template_engine",
      "file": "tests/generic_views/test_base.py",
      "line": 320
    },
    {
      "id": "tests/generic_views/test_base.py:TemplateViewTest.test_template_params",
      "type": "function",
      "name": "TemplateViewTest.test_template_params",
      "file": "tests/generic_views/test_base.py",
      "line": 332
    },
    {
      "id": "tests/generic_views/test_base.py:TemplateViewTest.test_extra_template_params",
      "type": "function",
      "name": "TemplateViewTest.test_extra_template_params",
      "file": "tests/generic_views/test_base.py",
      "line": 341
    },
    {
      "id": "tests/generic_views/test_base.py:TemplateViewTest.test_cached_views",
      "type": "function",
      "name": "TemplateViewTest.test_cached_views",
      "file": "tests/generic_views/test_base.py",
      "line": 351
    },
    {
      "id": "tests/generic_views/test_base.py:TemplateViewTest.test_content_type",
      "type": "function",
      "name": "TemplateViewTest.test_content_type",
      "file": "tests/generic_views/test_base.py",
      "line": 373
    },
    {
      "id": "tests/generic_views/test_base.py:TemplateViewTest.test_resolve_view",
      "type": "function",
      "name": "TemplateViewTest.test_resolve_view",
      "file": "tests/generic_views/test_base.py",
      "line": 377
    },
    {
      "id": "tests/generic_views/test_base.py:TemplateViewTest.test_resolve_login_required_view",
      "type": "function",
      "name": "TemplateViewTest.test_resolve_login_required_view",
      "file": "tests/generic_views/test_base.py",
      "line": 382
    },
    {
      "id": "tests/generic_views/test_base.py:TemplateViewTest.test_extra_context",
      "type": "function",
      "name": "TemplateViewTest.test_extra_context",
      "file": "tests/generic_views/test_base.py",
      "line": 386
    },
    {
      "id": "tests/generic_views/test_base.py:RedirectViewTest",
      "type": "class",
      "name": "RedirectViewTest",
      "file": "tests/generic_views/test_base.py",
      "line": 392
    },
    {
      "id": "tests/generic_views/test_base.py:RedirectViewTest.test_no_url",
      "type": "function",
      "name": "RedirectViewTest.test_no_url",
      "file": "tests/generic_views/test_base.py",
      "line": 396
    },
    {
      "id": "tests/generic_views/test_base.py:RedirectViewTest.test_default_redirect",
      "type": "function",
      "name": "RedirectViewTest.test_default_redirect",
      "file": "tests/generic_views/test_base.py",
      "line": 401
    },
    {
      "id": "tests/generic_views/test_base.py:RedirectViewTest.test_permanent_redirect",
      "type": "function",
      "name": "RedirectViewTest.test_permanent_redirect",
      "file": "tests/generic_views/test_base.py",
      "line": 407
    },
    {
      "id": "tests/generic_views/test_base.py:RedirectViewTest.test_temporary_redirect",
      "type": "function",
      "name": "RedirectViewTest.test_temporary_redirect",
      "file": "tests/generic_views/test_base.py",
      "line": 413
    },
    {
      "id": "tests/generic_views/test_base.py:RedirectViewTest.test_include_args",
      "type": "function",
      "name": "RedirectViewTest.test_include_args",
      "file": "tests/generic_views/test_base.py",
      "line": 419
    },
    {
      "id": "tests/generic_views/test_base.py:RedirectViewTest.test_include_urlencoded_args",
      "type": "function",
      "name": "RedirectViewTest.test_include_urlencoded_args",
      "file": "tests/generic_views/test_base.py",
      "line": 429
    },
    {
      "id": "tests/generic_views/test_base.py:RedirectViewTest.test_parameter_substitution",
      "type": "function",
      "name": "RedirectViewTest.test_parameter_substitution",
      "file": "tests/generic_views/test_base.py",
      "line": 436
    },
    {
      "id": "tests/generic_views/test_base.py:RedirectViewTest.test_named_url_pattern",
      "type": "function",
      "name": "RedirectViewTest.test_named_url_pattern",
      "file": "tests/generic_views/test_base.py",
      "line": 442
    },
    {
      "id": "tests/generic_views/test_base.py:RedirectViewTest.test_named_url_pattern_using_args",
      "type": "function",
      "name": "RedirectViewTest.test_named_url_pattern_using_args",
      "file": "tests/generic_views/test_base.py",
      "line": 448
    },
    {
      "id": "tests/generic_views/test_base.py:RedirectViewTest.test_redirect_POST",
      "type": "function",
      "name": "RedirectViewTest.test_redirect_POST",
      "file": "tests/generic_views/test_base.py",
      "line": 453
    },
    {
      "id": "tests/generic_views/test_base.py:RedirectViewTest.test_redirect_HEAD",
      "type": "function",
      "name": "RedirectViewTest.test_redirect_HEAD",
      "file": "tests/generic_views/test_base.py",
      "line": 459
    },
    {
      "id": "tests/generic_views/test_base.py:RedirectViewTest.test_redirect_OPTIONS",
      "type": "function",
      "name": "RedirectViewTest.test_redirect_OPTIONS",
      "file": "tests/generic_views/test_base.py",
      "line": 465
    },
    {
      "id": "tests/generic_views/test_base.py:RedirectViewTest.test_redirect_PUT",
      "type": "function",
      "name": "RedirectViewTest.test_redirect_PUT",
      "file": "tests/generic_views/test_base.py",
      "line": 471
    },
    {
      "id": "tests/generic_views/test_base.py:RedirectViewTest.test_redirect_PATCH",
      "type": "function",
      "name": "RedirectViewTest.test_redirect_PATCH",
      "file": "tests/generic_views/test_base.py",
      "line": 477
    },
    {
      "id": "tests/generic_views/test_base.py:RedirectViewTest.test_redirect_DELETE",
      "type": "function",
      "name": "RedirectViewTest.test_redirect_DELETE",
      "file": "tests/generic_views/test_base.py",
      "line": 483
    },
    {
      "id": "tests/generic_views/test_base.py:RedirectViewTest.test_redirect_when_meta_contains_no_query_string",
      "type": "function",
      "name": "RedirectViewTest.test_redirect_when_meta_contains_no_query_string",
      "file": "tests/generic_views/test_base.py",
      "line": 489
    },
    {
      "id": "tests/generic_views/test_base.py:RedirectViewTest.test_direct_instantiation",
      "type": "function",
      "name": "RedirectViewTest.test_direct_instantiation",
      "file": "tests/generic_views/test_base.py",
      "line": 495
    },
    {
      "id": "tests/generic_views/test_base.py:GetContextDataTest",
      "type": "class",
      "name": "GetContextDataTest",
      "file": "tests/generic_views/test_base.py",
      "line": 505
    },
    {
      "id": "tests/generic_views/test_base.py:GetContextDataTest.test_get_context_data_super",
      "type": "function",
      "name": "GetContextDataTest.test_get_context_data_super",
      "file": "tests/generic_views/test_base.py",
      "line": 507
    },
    {
      "id": "tests/generic_views/test_base.py:GetContextDataTest.test_object_at_custom_name_in_context_data",
      "type": "function",
      "name": "GetContextDataTest.test_object_at_custom_name_in_context_data",
      "file": "tests/generic_views/test_base.py",
      "line": 520
    },
    {
      "id": "tests/generic_views/test_base.py:GetContextDataTest.test_object_in_get_context_data",
      "type": "function",
      "name": "GetContextDataTest.test_object_in_get_context_data",
      "file": "tests/generic_views/test_base.py",
      "line": 527
    },
    {
      "id": "tests/generic_views/test_base.py:UseMultipleObjectMixinTest",
      "type": "class",
      "name": "UseMultipleObjectMixinTest",
      "file": "tests/generic_views/test_base.py",
      "line": 534
    },
    {
      "id": "tests/generic_views/test_base.py:UseMultipleObjectMixinTest.test_use_queryset_from_view",
      "type": "function",
      "name": "UseMultipleObjectMixinTest.test_use_queryset_from_view",
      "file": "tests/generic_views/test_base.py",
      "line": 537
    },
    {
      "id": "tests/generic_views/test_base.py:UseMultipleObjectMixinTest.test_overwrite_queryset",
      "type": "function",
      "name": "UseMultipleObjectMixinTest.test_overwrite_queryset",
      "file": "tests/generic_views/test_base.py",
      "line": 544
    },
    {
      "id": "tests/generic_views/test_base.py:SingleObjectTemplateResponseMixinTest",
      "type": "class",
      "name": "SingleObjectTemplateResponseMixinTest",
      "file": "tests/generic_views/test_base.py",
      "line": 554
    },
    {
      "id": "tests/generic_views/test_base.py:SingleObjectTemplateResponseMixinTest.test_template_mixin_without_template",
      "type": "function",
      "name": "SingleObjectTemplateResponseMixinTest.test_template_mixin_without_template",
      "file": "tests/generic_views/test_base.py",
      "line": 556
    },
    {
      "id": "tests/generic_views/views.py",
      "type": "file",
      "name": "views.py",
      "file": "tests/generic_views/views.py",
      "line": 0
    },
    {
      "id": "tests/generic_views/views.py:CustomTemplateView",
      "type": "class",
      "name": "CustomTemplateView",
      "file": "tests/generic_views/views.py",
      "line": 11
    },
    {
      "id": "tests/generic_views/views.py:CustomTemplateView.get_context_data",
      "type": "function",
      "name": "CustomTemplateView.get_context_data",
      "file": "tests/generic_views/views.py",
      "line": 14
    },
    {
      "id": "tests/generic_views/views.py:ObjectDetail",
      "type": "class",
      "name": "ObjectDetail",
      "file": "tests/generic_views/views.py",
      "line": 20
    },
    {
      "id": "tests/generic_views/views.py:ObjectDetail.get_object",
      "type": "function",
      "name": "ObjectDetail.get_object",
      "file": "tests/generic_views/views.py",
      "line": 23
    },
    {
      "id": "tests/generic_views/views.py:ArtistDetail",
      "type": "class",
      "name": "ArtistDetail",
      "file": "tests/generic_views/views.py",
      "line": 27
    },
    {
      "id": "tests/generic_views/views.py:AuthorDetail",
      "type": "class",
      "name": "AuthorDetail",
      "file": "tests/generic_views/views.py",
      "line": 31
    },
    {
      "id": "tests/generic_views/views.py:AuthorCustomDetail",
      "type": "class",
      "name": "AuthorCustomDetail",
      "file": "tests/generic_views/views.py",
      "line": 35
    },
    {
      "id": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "function",
      "name": "AuthorCustomDetail.get",
      "file": "tests/generic_views/views.py",
      "line": 39
    },
    {
      "id": "tests/generic_views/views.py:PageDetail",
      "type": "class",
      "name": "PageDetail",
      "file": "tests/generic_views/views.py",
      "line": 46
    },
    {
      "id": "tests/generic_views/views.py:DictList",
      "type": "class",
      "name": "DictList",
      "file": "tests/generic_views/views.py",
      "line": 51
    },
    {
      "id": "tests/generic_views/views.py:ArtistList",
      "type": "class",
      "name": "ArtistList",
      "file": "tests/generic_views/views.py",
      "line": 60
    },
    {
      "id": "tests/generic_views/views.py:AuthorList",
      "type": "class",
      "name": "AuthorList",
      "file": "tests/generic_views/views.py",
      "line": 65
    },
    {
      "id": "tests/generic_views/views.py:AuthorListGetQuerysetReturnsNone",
      "type": "class",
      "name": "AuthorListGetQuerysetReturnsNone",
      "file": "tests/generic_views/views.py",
      "line": 69
    },
    {
      "id": "tests/generic_views/views.py:AuthorListGetQuerysetReturnsNone.get_queryset",
      "type": "function",
      "name": "AuthorListGetQuerysetReturnsNone.get_queryset",
      "file": "tests/generic_views/views.py",
      "line": 70
    },
    {
      "id": "tests/generic_views/views.py:BookList",
      "type": "class",
      "name": "BookList",
      "file": "tests/generic_views/views.py",
      "line": 74
    },
    {
      "id": "tests/generic_views/views.py:CustomPaginator",
      "type": "class",
      "name": "CustomPaginator",
      "file": "tests/generic_views/views.py",
      "line": 78
    },
    {
      "id": "tests/generic_views/views.py:AuthorListCustomPaginator",
      "type": "class",
      "name": "AuthorListCustomPaginator",
      "file": "tests/generic_views/views.py",
      "line": 83
    },
    {
      "id": "tests/generic_views/views.py:AuthorListCustomPaginator.get_paginator",
      "type": "function",
      "name": "AuthorListCustomPaginator.get_paginator",
      "file": "tests/generic_views/views.py",
      "line": 86
    },
    {
      "id": "tests/generic_views/views.py:ContactView",
      "type": "class",
      "name": "ContactView",
      "file": "tests/generic_views/views.py",
      "line": 90
    },
    {
      "id": "tests/generic_views/views.py:ArtistCreate",
      "type": "class",
      "name": "ArtistCreate",
      "file": "tests/generic_views/views.py",
      "line": 96
    },
    {
      "id": "tests/generic_views/views.py:NaiveAuthorCreate",
      "type": "class",
      "name": "NaiveAuthorCreate",
      "file": "tests/generic_views/views.py",
      "line": 101
    },
    {
      "id": "tests/generic_views/views.py:TemplateResponseWithoutTemplate",
      "type": "class",
      "name": "TemplateResponseWithoutTemplate",
      "file": "tests/generic_views/views.py",
      "line": 106
    },
    {
      "id": "tests/generic_views/views.py:AuthorCreate",
      "type": "class",
      "name": "AuthorCreate",
      "file": "tests/generic_views/views.py",
      "line": 114
    },
    {
      "id": "tests/generic_views/views.py:SpecializedAuthorCreate",
      "type": "class",
      "name": "SpecializedAuthorCreate",
      "file": "tests/generic_views/views.py",
      "line": 120
    },
    {
      "id": "tests/generic_views/views.py:SpecializedAuthorCreate.get_success_url",
      "type": "function",
      "name": "SpecializedAuthorCreate.get_success_url",
      "file": "tests/generic_views/views.py",
      "line": 126
    },
    {
      "id": "tests/generic_views/views.py:AuthorCreateRestricted",
      "type": "class",
      "name": "AuthorCreateRestricted",
      "file": "tests/generic_views/views.py",
      "line": 130
    },
    {
      "id": "tests/generic_views/views.py:ArtistUpdate",
      "type": "class",
      "name": "ArtistUpdate",
      "file": "tests/generic_views/views.py",
      "line": 134
    },
    {
      "id": "tests/generic_views/views.py:NaiveAuthorUpdate",
      "type": "class",
      "name": "NaiveAuthorUpdate",
      "file": "tests/generic_views/views.py",
      "line": 139
    },
    {
      "id": "tests/generic_views/views.py:AuthorUpdate",
      "type": "class",
      "name": "AuthorUpdate",
      "file": "tests/generic_views/views.py",
      "line": 144
    },
    {
      "id": "tests/generic_views/views.py:AuthorUpdate.get_form",
      "type": "function",
      "name": "AuthorUpdate.get_form",
      "file": "tests/generic_views/views.py",
      "line": 150
    },
    {
      "id": "tests/generic_views/views.py:OneAuthorUpdate",
      "type": "class",
      "name": "OneAuthorUpdate",
      "file": "tests/generic_views/views.py",
      "line": 155
    },
    {
      "id": "tests/generic_views/views.py:OneAuthorUpdate.get_object",
      "type": "function",
      "name": "OneAuthorUpdate.get_object",
      "file": "tests/generic_views/views.py",
      "line": 159
    },
    {
      "id": "tests/generic_views/views.py:SpecializedAuthorUpdate",
      "type": "class",
      "name": "SpecializedAuthorUpdate",
      "file": "tests/generic_views/views.py",
      "line": 163
    },
    {
      "id": "tests/generic_views/views.py:SpecializedAuthorUpdate.get_success_url",
      "type": "function",
      "name": "SpecializedAuthorUpdate.get_success_url",
      "file": "tests/generic_views/views.py",
      "line": 169
    },
    {
      "id": "tests/generic_views/views.py:NaiveAuthorDelete",
      "type": "class",
      "name": "NaiveAuthorDelete",
      "file": "tests/generic_views/views.py",
      "line": 173
    },
    {
      "id": "tests/generic_views/views.py:AuthorDelete",
      "type": "class",
      "name": "AuthorDelete",
      "file": "tests/generic_views/views.py",
      "line": 177
    },
    {
      "id": "tests/generic_views/views.py:SpecializedAuthorDelete",
      "type": "class",
      "name": "SpecializedAuthorDelete",
      "file": "tests/generic_views/views.py",
      "line": 182
    },
    {
      "id": "tests/generic_views/views.py:BookConfig",
      "type": "class",
      "name": "BookConfig",
      "file": "tests/generic_views/views.py",
      "line": 189
    },
    {
      "id": "tests/generic_views/views.py:BookArchive",
      "type": "class",
      "name": "BookArchive",
      "file": "tests/generic_views/views.py",
      "line": 194
    },
    {
      "id": "tests/generic_views/views.py:BookYearArchive",
      "type": "class",
      "name": "BookYearArchive",
      "file": "tests/generic_views/views.py",
      "line": 198
    },
    {
      "id": "tests/generic_views/views.py:BookMonthArchive",
      "type": "class",
      "name": "BookMonthArchive",
      "file": "tests/generic_views/views.py",
      "line": 202
    },
    {
      "id": "tests/generic_views/views.py:BookWeekArchive",
      "type": "class",
      "name": "BookWeekArchive",
      "file": "tests/generic_views/views.py",
      "line": 206
    },
    {
      "id": "tests/generic_views/views.py:BookDayArchive",
      "type": "class",
      "name": "BookDayArchive",
      "file": "tests/generic_views/views.py",
      "line": 210
    },
    {
      "id": "tests/generic_views/views.py:BookTodayArchive",
      "type": "class",
      "name": "BookTodayArchive",
      "file": "tests/generic_views/views.py",
      "line": 214
    },
    {
      "id": "tests/generic_views/views.py:BookDetail",
      "type": "class",
      "name": "BookDetail",
      "file": "tests/generic_views/views.py",
      "line": 218
    },
    {
      "id": "tests/generic_views/views.py:AuthorGetQuerySetFormView",
      "type": "class",
      "name": "AuthorGetQuerySetFormView",
      "file": "tests/generic_views/views.py",
      "line": 222
    },
    {
      "id": "tests/generic_views/views.py:AuthorGetQuerySetFormView.get_queryset",
      "type": "function",
      "name": "AuthorGetQuerySetFormView.get_queryset",
      "file": "tests/generic_views/views.py",
      "line": 225
    },
    {
      "id": "tests/generic_views/views.py:BookDetailGetObjectCustomQueryset",
      "type": "class",
      "name": "BookDetailGetObjectCustomQueryset",
      "file": "tests/generic_views/views.py",
      "line": 229
    },
    {
      "id": "tests/generic_views/views.py:BookDetailGetObjectCustomQueryset.get_object",
      "type": "function",
      "name": "BookDetailGetObjectCustomQueryset.get_object",
      "file": "tests/generic_views/views.py",
      "line": 230
    },
    {
      "id": "tests/generic_views/views.py:CustomMultipleObjectMixinView",
      "type": "class",
      "name": "CustomMultipleObjectMixinView",
      "file": "tests/generic_views/views.py",
      "line": 234
    },
    {
      "id": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "function",
      "name": "CustomMultipleObjectMixinView.get",
      "file": "tests/generic_views/views.py",
      "line": 240
    },
    {
      "id": "tests/generic_views/views.py:CustomContextView",
      "type": "class",
      "name": "CustomContextView",
      "file": "tests/generic_views/views.py",
      "line": 244
    },
    {
      "id": "tests/generic_views/views.py:CustomContextView.get_object",
      "type": "function",
      "name": "CustomContextView.get_object",
      "file": "tests/generic_views/views.py",
      "line": 248
    },
    {
      "id": "tests/generic_views/views.py:CustomContextView.get_context_data",
      "type": "function",
      "name": "CustomContextView.get_context_data",
      "file": "tests/generic_views/views.py",
      "line": 251
    },
    {
      "id": "tests/generic_views/views.py:CustomContextView.get_context_object_name",
      "type": "function",
      "name": "CustomContextView.get_context_object_name",
      "file": "tests/generic_views/views.py",
      "line": 256
    },
    {
      "id": "tests/generic_views/views.py:CustomSingleObjectView",
      "type": "class",
      "name": "CustomSingleObjectView",
      "file": "tests/generic_views/views.py",
      "line": 260
    },
    {
      "id": "tests/generic_views/views.py:BookSigningConfig",
      "type": "class",
      "name": "BookSigningConfig",
      "file": "tests/generic_views/views.py",
      "line": 265
    },
    {
      "id": "tests/generic_views/views.py:BookSigningConfig.get_template_names",
      "type": "function",
      "name": "BookSigningConfig.get_template_names",
      "file": "tests/generic_views/views.py",
      "line": 270
    },
    {
      "id": "tests/generic_views/views.py:BookSigningArchive",
      "type": "class",
      "name": "BookSigningArchive",
      "file": "tests/generic_views/views.py",
      "line": 274
    },
    {
      "id": "tests/generic_views/views.py:BookSigningYearArchive",
      "type": "class",
      "name": "BookSigningYearArchive",
      "file": "tests/generic_views/views.py",
      "line": 278
    },
    {
      "id": "tests/generic_views/views.py:BookSigningMonthArchive",
      "type": "class",
      "name": "BookSigningMonthArchive",
      "file": "tests/generic_views/views.py",
      "line": 282
    },
    {
      "id": "tests/generic_views/views.py:BookSigningWeekArchive",
      "type": "class",
      "name": "BookSigningWeekArchive",
      "file": "tests/generic_views/views.py",
      "line": 286
    },
    {
      "id": "tests/generic_views/views.py:BookSigningDayArchive",
      "type": "class",
      "name": "BookSigningDayArchive",
      "file": "tests/generic_views/views.py",
      "line": 290
    },
    {
      "id": "tests/generic_views/views.py:BookSigningTodayArchive",
      "type": "class",
      "name": "BookSigningTodayArchive",
      "file": "tests/generic_views/views.py",
      "line": 294
    },
    {
      "id": "tests/generic_views/views.py:BookArchiveWithoutDateField",
      "type": "class",
      "name": "BookArchiveWithoutDateField",
      "file": "tests/generic_views/views.py",
      "line": 298
    },
    {
      "id": "tests/generic_views/views.py:BookSigningDetail",
      "type": "class",
      "name": "BookSigningDetail",
      "file": "tests/generic_views/views.py",
      "line": 302
    },
    {
      "id": "tests/generic_views/views.py:NonModel",
      "type": "class",
      "name": "NonModel",
      "file": "tests/generic_views/views.py",
      "line": 306
    },
    {
      "id": "tests/generic_views/views.py:NonModelDetail",
      "type": "class",
      "name": "NonModelDetail",
      "file": "tests/generic_views/views.py",
      "line": 312
    },
    {
      "id": "tests/generic_views/views.py:NonModelDetail.get_object",
      "type": "function",
      "name": "NonModelDetail.get_object",
      "file": "tests/generic_views/views.py",
      "line": 317
    },
    {
      "id": "tests/generic_views/views.py:ObjectDoesNotExistDetail",
      "type": "class",
      "name": "ObjectDoesNotExistDetail",
      "file": "tests/generic_views/views.py",
      "line": 321
    },
    {
      "id": "tests/generic_views/views.py:ObjectDoesNotExistDetail.get_queryset",
      "type": "function",
      "name": "ObjectDoesNotExistDetail.get_queryset",
      "file": "tests/generic_views/views.py",
      "line": 322
    },
    {
      "id": "tests/generic_views/views.py:LateValidationView",
      "type": "class",
      "name": "LateValidationView",
      "file": "tests/generic_views/views.py",
      "line": 326
    },
    {
      "id": "tests/generic_views/views.py:LateValidationView.form_valid",
      "type": "function",
      "name": "LateValidationView.form_valid",
      "file": "tests/generic_views/views.py",
      "line": 331
    },
    {
      "id": "tests/mutually_referential",
      "type": "directory",
      "name": "mutually_referential",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/mutually_referential/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/mutually_referential/models.py",
      "line": 0
    },
    {
      "id": "tests/mutually_referential/models.py:Parent",
      "type": "class",
      "name": "Parent",
      "file": "tests/mutually_referential/models.py",
      "line": 10
    },
    {
      "id": "tests/mutually_referential/models.py:Child",
      "type": "class",
      "name": "Child",
      "file": "tests/mutually_referential/models.py",
      "line": 17
    },
    {
      "id": "tests/mutually_referential/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/mutually_referential/__init__.py",
      "line": 0
    },
    {
      "id": "tests/mutually_referential/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/mutually_referential/tests.py",
      "line": 0
    },
    {
      "id": "tests/mutually_referential/tests.py:MutuallyReferentialTests",
      "type": "class",
      "name": "MutuallyReferentialTests",
      "file": "tests/mutually_referential/tests.py",
      "line": 6
    },
    {
      "id": "tests/mutually_referential/tests.py:MutuallyReferentialTests.test_mutually_referential",
      "type": "function",
      "name": "MutuallyReferentialTests.test_mutually_referential",
      "file": "tests/mutually_referential/tests.py",
      "line": 8
    },
    {
      "id": "tests/signed_cookies_tests",
      "type": "directory",
      "name": "signed_cookies_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/signed_cookies_tests/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/signed_cookies_tests/__init__.py",
      "line": 0
    },
    {
      "id": "tests/signed_cookies_tests/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/signed_cookies_tests/tests.py",
      "line": 0
    },
    {
      "id": "tests/signed_cookies_tests/tests.py:SignedCookieTest",
      "type": "class",
      "name": "SignedCookieTest",
      "file": "tests/signed_cookies_tests/tests.py",
      "line": 7
    },
    {
      "id": "tests/signed_cookies_tests/tests.py:SignedCookieTest.test_can_set_and_read_signed_cookies",
      "type": "function",
      "name": "SignedCookieTest.test_can_set_and_read_signed_cookies",
      "file": "tests/signed_cookies_tests/tests.py",
      "line": 9
    },
    {
      "id": "tests/signed_cookies_tests/tests.py:SignedCookieTest.test_can_use_salt",
      "type": "function",
      "name": "SignedCookieTest.test_can_use_salt",
      "file": "tests/signed_cookies_tests/tests.py",
      "line": 19
    },
    {
      "id": "tests/signed_cookies_tests/tests.py:SignedCookieTest.test_detects_tampering",
      "type": "function",
      "name": "SignedCookieTest.test_detects_tampering",
      "file": "tests/signed_cookies_tests/tests.py",
      "line": 29
    },
    {
      "id": "tests/signed_cookies_tests/tests.py:SignedCookieTest.test_default_argument_suppresses_exceptions",
      "type": "function",
      "name": "SignedCookieTest.test_default_argument_suppresses_exceptions",
      "file": "tests/signed_cookies_tests/tests.py",
      "line": 37
    },
    {
      "id": "tests/signed_cookies_tests/tests.py:SignedCookieTest.test_max_age_argument",
      "type": "function",
      "name": "SignedCookieTest.test_max_age_argument",
      "file": "tests/signed_cookies_tests/tests.py",
      "line": 44
    },
    {
      "id": "tests/signed_cookies_tests/tests.py:SignedCookieTest.test_signed_cookies_with_binary_key",
      "type": "function",
      "name": "SignedCookieTest.test_signed_cookies_with_binary_key",
      "file": "tests/signed_cookies_tests/tests.py",
      "line": 60
    },
    {
      "id": "tests/expressions_case",
      "type": "directory",
      "name": "expressions_case",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/expressions_case/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/expressions_case/models.py",
      "line": 0
    },
    {
      "id": "tests/expressions_case/models.py:CaseTestModel",
      "type": "class",
      "name": "CaseTestModel",
      "file": "tests/expressions_case/models.py",
      "line": 9
    },
    {
      "id": "tests/expressions_case/models.py:CaseTestModel.__str__",
      "type": "function",
      "name": "CaseTestModel.__str__",
      "file": "tests/expressions_case/models.py",
      "line": 40
    },
    {
      "id": "tests/expressions_case/models.py:O2OCaseTestModel",
      "type": "class",
      "name": "O2OCaseTestModel",
      "file": "tests/expressions_case/models.py",
      "line": 44
    },
    {
      "id": "tests/expressions_case/models.py:O2OCaseTestModel.__str__",
      "type": "function",
      "name": "O2OCaseTestModel.__str__",
      "file": "tests/expressions_case/models.py",
      "line": 48
    },
    {
      "id": "tests/expressions_case/models.py:FKCaseTestModel",
      "type": "class",
      "name": "FKCaseTestModel",
      "file": "tests/expressions_case/models.py",
      "line": 52
    },
    {
      "id": "tests/expressions_case/models.py:FKCaseTestModel.__str__",
      "type": "function",
      "name": "FKCaseTestModel.__str__",
      "file": "tests/expressions_case/models.py",
      "line": 56
    },
    {
      "id": "tests/expressions_case/models.py:Client",
      "type": "class",
      "name": "Client",
      "file": "tests/expressions_case/models.py",
      "line": 60
    },
    {
      "id": "tests/expressions_case/models.py:Client.__str__",
      "type": "function",
      "name": "Client.__str__",
      "file": "tests/expressions_case/models.py",
      "line": 77
    },
    {
      "id": "tests/expressions_case/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/expressions_case/__init__.py",
      "line": 0
    },
    {
      "id": "tests/expressions_case/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/expressions_case/tests.py",
      "line": 0
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests",
      "type": "class",
      "name": "CaseExpressionTests",
      "file": "tests/expressions_case/tests.py",
      "line": 21
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.setUpTestData",
      "type": "function",
      "name": "CaseExpressionTests.setUpTestData",
      "file": "tests/expressions_case/tests.py",
      "line": 23
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate",
      "type": "function",
      "name": "CaseExpressionTests.test_annotate",
      "file": "tests/expressions_case/tests.py",
      "line": 63
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_without_default",
      "type": "function",
      "name": "CaseExpressionTests.test_annotate_without_default",
      "file": "tests/expressions_case/tests.py",
      "line": 75
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_with_expression_as_value",
      "type": "function",
      "name": "CaseExpressionTests.test_annotate_with_expression_as_value",
      "file": "tests/expressions_case/tests.py",
      "line": 86
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_with_expression_as_condition",
      "type": "function",
      "name": "CaseExpressionTests.test_annotate_with_expression_as_condition",
      "file": "tests/expressions_case/tests.py",
      "line": 97
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_with_join_in_value",
      "type": "function",
      "name": "CaseExpressionTests.test_annotate_with_join_in_value",
      "file": "tests/expressions_case/tests.py",
      "line": 108
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_with_in_clause",
      "type": "function",
      "name": "CaseExpressionTests.test_annotate_with_in_clause",
      "file": "tests/expressions_case/tests.py",
      "line": 119
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_with_join_in_condition",
      "type": "function",
      "name": "CaseExpressionTests.test_annotate_with_join_in_condition",
      "file": "tests/expressions_case/tests.py",
      "line": 130
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_with_join_in_predicate",
      "type": "function",
      "name": "CaseExpressionTests.test_annotate_with_join_in_predicate",
      "file": "tests/expressions_case/tests.py",
      "line": 142
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_with_annotation_in_value",
      "type": "function",
      "name": "CaseExpressionTests.test_annotate_with_annotation_in_value",
      "file": "tests/expressions_case/tests.py",
      "line": 155
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_with_annotation_in_condition",
      "type": "function",
      "name": "CaseExpressionTests.test_annotate_with_annotation_in_condition",
      "file": "tests/expressions_case/tests.py",
      "line": 171
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_with_annotation_in_predicate",
      "type": "function",
      "name": "CaseExpressionTests.test_annotate_with_annotation_in_predicate",
      "file": "tests/expressions_case/tests.py",
      "line": 186
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_with_aggregation_in_value",
      "type": "function",
      "name": "CaseExpressionTests.test_annotate_with_aggregation_in_value",
      "file": "tests/expressions_case/tests.py",
      "line": 203
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_with_aggregation_in_condition",
      "type": "function",
      "name": "CaseExpressionTests.test_annotate_with_aggregation_in_condition",
      "file": "tests/expressions_case/tests.py",
      "line": 218
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_with_aggregation_in_predicate",
      "type": "function",
      "name": "CaseExpressionTests.test_annotate_with_aggregation_in_predicate",
      "file": "tests/expressions_case/tests.py",
      "line": 234
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_exclude",
      "type": "function",
      "name": "CaseExpressionTests.test_annotate_exclude",
      "file": "tests/expressions_case/tests.py",
      "line": 251
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_values_not_in_order_by",
      "type": "function",
      "name": "CaseExpressionTests.test_annotate_values_not_in_order_by",
      "file": "tests/expressions_case/tests.py",
      "line": 263
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_with_empty_when",
      "type": "function",
      "name": "CaseExpressionTests.test_annotate_with_empty_when",
      "file": "tests/expressions_case/tests.py",
      "line": 275
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_combined_expression",
      "type": "function",
      "name": "CaseExpressionTests.test_combined_expression",
      "file": "tests/expressions_case/tests.py",
      "line": 285
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_in_subquery",
      "type": "function",
      "name": "CaseExpressionTests.test_in_subquery",
      "file": "tests/expressions_case/tests.py",
      "line": 299
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_case_reuse",
      "type": "function",
      "name": "CaseExpressionTests.test_case_reuse",
      "file": "tests/expressions_case/tests.py",
      "line": 313
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_aggregate",
      "type": "function",
      "name": "CaseExpressionTests.test_aggregate",
      "file": "tests/expressions_case/tests.py",
      "line": 325
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_aggregate_with_expression_as_value",
      "type": "function",
      "name": "CaseExpressionTests.test_aggregate_with_expression_as_value",
      "file": "tests/expressions_case/tests.py",
      "line": 348
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_aggregate_with_expression_as_condition",
      "type": "function",
      "name": "CaseExpressionTests.test_aggregate_with_expression_as_condition",
      "file": "tests/expressions_case/tests.py",
      "line": 358
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_filter",
      "type": "function",
      "name": "CaseExpressionTests.test_filter",
      "file": "tests/expressions_case/tests.py",
      "line": 373
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_filter_without_default",
      "type": "function",
      "name": "CaseExpressionTests.test_filter_without_default",
      "file": "tests/expressions_case/tests.py",
      "line": 385
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_filter_with_expression_as_value",
      "type": "function",
      "name": "CaseExpressionTests.test_filter_with_expression_as_value",
      "file": "tests/expressions_case/tests.py",
      "line": 396
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_filter_with_expression_as_condition",
      "type": "function",
      "name": "CaseExpressionTests.test_filter_with_expression_as_condition",
      "file": "tests/expressions_case/tests.py",
      "line": 407
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_filter_with_join_in_value",
      "type": "function",
      "name": "CaseExpressionTests.test_filter_with_join_in_value",
      "file": "tests/expressions_case/tests.py",
      "line": 418
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_filter_with_join_in_condition",
      "type": "function",
      "name": "CaseExpressionTests.test_filter_with_join_in_condition",
      "file": "tests/expressions_case/tests.py",
      "line": 429
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_filter_with_join_in_predicate",
      "type": "function",
      "name": "CaseExpressionTests.test_filter_with_join_in_predicate",
      "file": "tests/expressions_case/tests.py",
      "line": 440
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_filter_with_annotation_in_value",
      "type": "function",
      "name": "CaseExpressionTests.test_filter_with_annotation_in_value",
      "file": "tests/expressions_case/tests.py",
      "line": 452
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_filter_with_annotation_in_condition",
      "type": "function",
      "name": "CaseExpressionTests.test_filter_with_annotation_in_condition",
      "file": "tests/expressions_case/tests.py",
      "line": 467
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_filter_with_annotation_in_predicate",
      "type": "function",
      "name": "CaseExpressionTests.test_filter_with_annotation_in_predicate",
      "file": "tests/expressions_case/tests.py",
      "line": 482
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_filter_with_aggregation_in_value",
      "type": "function",
      "name": "CaseExpressionTests.test_filter_with_aggregation_in_value",
      "file": "tests/expressions_case/tests.py",
      "line": 498
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_filter_with_aggregation_in_condition",
      "type": "function",
      "name": "CaseExpressionTests.test_filter_with_aggregation_in_condition",
      "file": "tests/expressions_case/tests.py",
      "line": 513
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_filter_with_aggregation_in_predicate",
      "type": "function",
      "name": "CaseExpressionTests.test_filter_with_aggregation_in_predicate",
      "file": "tests/expressions_case/tests.py",
      "line": 528
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update",
      "type": "function",
      "name": "CaseExpressionTests.test_update",
      "file": "tests/expressions_case/tests.py",
      "line": 542
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_without_default",
      "type": "function",
      "name": "CaseExpressionTests.test_update_without_default",
      "file": "tests/expressions_case/tests.py",
      "line": 556
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_with_expression_as_value",
      "type": "function",
      "name": "CaseExpressionTests.test_update_with_expression_as_value",
      "file": "tests/expressions_case/tests.py",
      "line": 569
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_with_expression_as_condition",
      "type": "function",
      "name": "CaseExpressionTests.test_update_with_expression_as_condition",
      "file": "tests/expressions_case/tests.py",
      "line": 583
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_with_join_in_condition_raise_field_error",
      "type": "function",
      "name": "CaseExpressionTests.test_update_with_join_in_condition_raise_field_error",
      "file": "tests/expressions_case/tests.py",
      "line": 596
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_with_join_in_predicate_raise_field_error",
      "type": "function",
      "name": "CaseExpressionTests.test_update_with_join_in_predicate_raise_field_error",
      "file": "tests/expressions_case/tests.py",
      "line": 606
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_big_integer",
      "type": "function",
      "name": "CaseExpressionTests.test_update_big_integer",
      "file": "tests/expressions_case/tests.py",
      "line": 618
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_binary",
      "type": "function",
      "name": "CaseExpressionTests.test_update_binary",
      "file": "tests/expressions_case/tests.py",
      "line": 631
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_boolean",
      "type": "function",
      "name": "CaseExpressionTests.test_update_boolean",
      "file": "tests/expressions_case/tests.py",
      "line": 645
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_date",
      "type": "function",
      "name": "CaseExpressionTests.test_update_date",
      "file": "tests/expressions_case/tests.py",
      "line": 659
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_date_time",
      "type": "function",
      "name": "CaseExpressionTests.test_update_date_time",
      "file": "tests/expressions_case/tests.py",
      "line": 675
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_decimal",
      "type": "function",
      "name": "CaseExpressionTests.test_update_decimal",
      "file": "tests/expressions_case/tests.py",
      "line": 691
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_duration",
      "type": "function",
      "name": "CaseExpressionTests.test_update_duration",
      "file": "tests/expressions_case/tests.py",
      "line": 712
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_email",
      "type": "function",
      "name": "CaseExpressionTests.test_update_email",
      "file": "tests/expressions_case/tests.py",
      "line": 727
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_file",
      "type": "function",
      "name": "CaseExpressionTests.test_update_file",
      "file": "tests/expressions_case/tests.py",
      "line": 741
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_file_path",
      "type": "function",
      "name": "CaseExpressionTests.test_update_file_path",
      "file": "tests/expressions_case/tests.py",
      "line": 754
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_float",
      "type": "function",
      "name": "CaseExpressionTests.test_update_float",
      "file": "tests/expressions_case/tests.py",
      "line": 768
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_image",
      "type": "function",
      "name": "CaseExpressionTests.test_update_image",
      "file": "tests/expressions_case/tests.py",
      "line": 782
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_generic_ip_address",
      "type": "function",
      "name": "CaseExpressionTests.test_update_generic_ip_address",
      "file": "tests/expressions_case/tests.py",
      "line": 795
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_null_boolean",
      "type": "function",
      "name": "CaseExpressionTests.test_update_null_boolean",
      "file": "tests/expressions_case/tests.py",
      "line": 810
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_null_boolean_old",
      "type": "function",
      "name": "CaseExpressionTests.test_update_null_boolean_old",
      "file": "tests/expressions_case/tests.py",
      "line": 823
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_positive_integer",
      "type": "function",
      "name": "CaseExpressionTests.test_update_positive_integer",
      "file": "tests/expressions_case/tests.py",
      "line": 836
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_positive_small_integer",
      "type": "function",
      "name": "CaseExpressionTests.test_update_positive_small_integer",
      "file": "tests/expressions_case/tests.py",
      "line": 849
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_slug",
      "type": "function",
      "name": "CaseExpressionTests.test_update_slug",
      "file": "tests/expressions_case/tests.py",
      "line": 862
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_small_integer",
      "type": "function",
      "name": "CaseExpressionTests.test_update_small_integer",
      "file": "tests/expressions_case/tests.py",
      "line": 876
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_string",
      "type": "function",
      "name": "CaseExpressionTests.test_update_string",
      "file": "tests/expressions_case/tests.py",
      "line": 889
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_text",
      "type": "function",
      "name": "CaseExpressionTests.test_update_text",
      "file": "tests/expressions_case/tests.py",
      "line": 902
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_time",
      "type": "function",
      "name": "CaseExpressionTests.test_update_time",
      "file": "tests/expressions_case/tests.py",
      "line": 916
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_url",
      "type": "function",
      "name": "CaseExpressionTests.test_update_url",
      "file": "tests/expressions_case/tests.py",
      "line": 931
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_uuid",
      "type": "function",
      "name": "CaseExpressionTests.test_update_uuid",
      "file": "tests/expressions_case/tests.py",
      "line": 948
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_fk",
      "type": "function",
      "name": "CaseExpressionTests.test_update_fk",
      "file": "tests/expressions_case/tests.py",
      "line": 977
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_lookup_in_condition",
      "type": "function",
      "name": "CaseExpressionTests.test_lookup_in_condition",
      "file": "tests/expressions_case/tests.py",
      "line": 992
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_lookup_different_fields",
      "type": "function",
      "name": "CaseExpressionTests.test_lookup_different_fields",
      "file": "tests/expressions_case/tests.py",
      "line": 1009
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_combined_q_object",
      "type": "function",
      "name": "CaseExpressionTests.test_combined_q_object",
      "file": "tests/expressions_case/tests.py",
      "line": 1025
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_order_by_conditional_implicit",
      "type": "function",
      "name": "CaseExpressionTests.test_order_by_conditional_implicit",
      "file": "tests/expressions_case/tests.py",
      "line": 1041
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_order_by_conditional_explicit",
      "type": "function",
      "name": "CaseExpressionTests.test_order_by_conditional_explicit",
      "file": "tests/expressions_case/tests.py",
      "line": 1053
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_join_promotion",
      "type": "function",
      "name": "CaseExpressionTests.test_join_promotion",
      "file": "tests/expressions_case/tests.py",
      "line": 1065
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_join_promotion_multiple_annotations",
      "type": "function",
      "name": "CaseExpressionTests.test_join_promotion_multiple_annotations",
      "file": "tests/expressions_case/tests.py",
      "line": 1097
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_m2m_exclude",
      "type": "function",
      "name": "CaseExpressionTests.test_m2m_exclude",
      "file": "tests/expressions_case/tests.py",
      "line": 1139
    },
    {
      "id": "tests/expressions_case/tests.py:CaseExpressionTests.test_m2m_reuse",
      "type": "function",
      "name": "CaseExpressionTests.test_m2m_reuse",
      "file": "tests/expressions_case/tests.py",
      "line": 1159
    },
    {
      "id": "tests/expressions_case/tests.py:CaseDocumentationExamples",
      "type": "class",
      "name": "CaseDocumentationExamples",
      "file": "tests/expressions_case/tests.py",
      "line": 1182
    },
    {
      "id": "tests/expressions_case/tests.py:CaseDocumentationExamples.setUpTestData",
      "type": "function",
      "name": "CaseDocumentationExamples.setUpTestData",
      "file": "tests/expressions_case/tests.py",
      "line": 1184
    },
    {
      "id": "tests/expressions_case/tests.py:CaseDocumentationExamples.test_simple_example",
      "type": "function",
      "name": "CaseDocumentationExamples.test_simple_example",
      "file": "tests/expressions_case/tests.py",
      "line": 1201
    },
    {
      "id": "tests/expressions_case/tests.py:CaseDocumentationExamples.test_lookup_example",
      "type": "function",
      "name": "CaseDocumentationExamples.test_lookup_example",
      "file": "tests/expressions_case/tests.py",
      "line": 1215
    },
    {
      "id": "tests/expressions_case/tests.py:CaseDocumentationExamples.test_conditional_update_example",
      "type": "function",
      "name": "CaseDocumentationExamples.test_conditional_update_example",
      "file": "tests/expressions_case/tests.py",
      "line": 1231
    },
    {
      "id": "tests/expressions_case/tests.py:CaseDocumentationExamples.test_conditional_aggregation_example",
      "type": "function",
      "name": "CaseDocumentationExamples.test_conditional_aggregation_example",
      "file": "tests/expressions_case/tests.py",
      "line": 1247
    },
    {
      "id": "tests/expressions_case/tests.py:CaseDocumentationExamples.test_filter_example",
      "type": "function",
      "name": "CaseDocumentationExamples.test_filter_example",
      "file": "tests/expressions_case/tests.py",
      "line": 1290
    },
    {
      "id": "tests/expressions_case/tests.py:CaseDocumentationExamples.test_hash",
      "type": "function",
      "name": "CaseDocumentationExamples.test_hash",
      "file": "tests/expressions_case/tests.py",
      "line": 1304
    },
    {
      "id": "tests/expressions_case/tests.py:CaseWhenTests",
      "type": "class",
      "name": "CaseWhenTests",
      "file": "tests/expressions_case/tests.py",
      "line": 1323
    },
    {
      "id": "tests/expressions_case/tests.py:CaseWhenTests.test_only_when_arguments",
      "type": "function",
      "name": "CaseWhenTests.test_only_when_arguments",
      "file": "tests/expressions_case/tests.py",
      "line": 1324
    },
    {
      "id": "tests/expressions_case/tests.py:CaseWhenTests.test_invalid_when_constructor_args",
      "type": "function",
      "name": "CaseWhenTests.test_invalid_when_constructor_args",
      "file": "tests/expressions_case/tests.py",
      "line": 1329
    },
    {
      "id": "tests/expressions_case/tests.py:CaseWhenTests.test_empty_q_object",
      "type": "function",
      "name": "CaseWhenTests.test_empty_q_object",
      "file": "tests/expressions_case/tests.py",
      "line": 1336
    },
    {
      "id": "tests/model_forms",
      "type": "directory",
      "name": "model_forms",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py",
      "type": "file",
      "name": "test_modelchoicefield.py",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 0
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests",
      "type": "class",
      "name": "ModelChoiceFieldTests",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 13
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.setUpTestData",
      "type": "function",
      "name": "ModelChoiceFieldTests.setUpTestData",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 15
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_basics",
      "type": "function",
      "name": "ModelChoiceFieldTests.test_basics",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 20
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choices",
      "type": "function",
      "name": "ModelChoiceFieldTests.test_choices",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 58
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choices_freshness",
      "type": "function",
      "name": "ModelChoiceFieldTests.test_choices_freshness",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 99
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choices_bool",
      "type": "function",
      "name": "ModelChoiceFieldTests.test_choices_bool",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 118
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choices_bool_empty_label",
      "type": "function",
      "name": "ModelChoiceFieldTests.test_choices_bool_empty_label",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 124
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_deepcopies_widget",
      "type": "function",
      "name": "ModelChoiceFieldTests.test_deepcopies_widget",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 129
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_deepcopies_widget.ModelChoiceForm",
      "type": "class",
      "name": "ModelChoiceFieldTests.test_deepcopies_widget.ModelChoiceForm",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 130
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_result_cache_not_shared",
      "type": "function",
      "name": "ModelChoiceFieldTests.test_result_cache_not_shared",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 140
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_result_cache_not_shared.ModelChoiceForm",
      "type": "class",
      "name": "ModelChoiceFieldTests.test_result_cache_not_shared.ModelChoiceForm",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 141
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_queryset_none",
      "type": "function",
      "name": "ModelChoiceFieldTests.test_queryset_none",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 149
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_queryset_none.ModelChoiceForm",
      "type": "class",
      "name": "ModelChoiceFieldTests.test_queryset_none.ModelChoiceForm",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 150
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_no_extra_query_when_accessing_attrs",
      "type": "function",
      "name": "ModelChoiceFieldTests.test_no_extra_query_when_accessing_attrs",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 160
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_no_extra_query_when_accessing_attrs.ModelChoiceForm",
      "type": "class",
      "name": "ModelChoiceFieldTests.test_no_extra_query_when_accessing_attrs.ModelChoiceForm",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 165
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_disabled_modelchoicefield",
      "type": "function",
      "name": "ModelChoiceFieldTests.test_disabled_modelchoicefield",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 174
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_disabled_modelchoicefield.ModelChoiceForm",
      "type": "class",
      "name": "ModelChoiceFieldTests.test_disabled_modelchoicefield.ModelChoiceForm",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 175
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_disabled_modelchoicefield.ModelChoiceForm.Meta",
      "type": "class",
      "name": "ModelChoiceFieldTests.test_disabled_modelchoicefield.ModelChoiceForm.Meta",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 178
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_disabled_modelchoicefield_has_changed",
      "type": "function",
      "name": "ModelChoiceFieldTests.test_disabled_modelchoicefield_has_changed",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 189
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_disabled_multiplemodelchoicefield",
      "type": "function",
      "name": "ModelChoiceFieldTests.test_disabled_multiplemodelchoicefield",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 193
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_disabled_multiplemodelchoicefield.ArticleForm",
      "type": "class",
      "name": "ModelChoiceFieldTests.test_disabled_multiplemodelchoicefield.ArticleForm",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 194
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_disabled_multiplemodelchoicefield.ArticleForm.Meta",
      "type": "class",
      "name": "ModelChoiceFieldTests.test_disabled_multiplemodelchoicefield.ArticleForm.Meta",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 197
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_disabled_modelmultiplechoicefield_has_changed",
      "type": "function",
      "name": "ModelChoiceFieldTests.test_disabled_modelmultiplechoicefield_has_changed",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 218
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_overridable_choice_iterator",
      "type": "function",
      "name": "ModelChoiceFieldTests.test_overridable_choice_iterator",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 222
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_overridable_choice_iterator.CustomModelChoiceIterator",
      "type": "class",
      "name": "ModelChoiceFieldTests.test_overridable_choice_iterator.CustomModelChoiceIterator",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 230
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_overridable_choice_iterator.CustomModelChoiceField",
      "type": "class",
      "name": "ModelChoiceFieldTests.test_overridable_choice_iterator.CustomModelChoiceField",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 233
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget",
      "type": "function",
      "name": "ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 239
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget.CustomModelChoiceValue",
      "type": "class",
      "name": "ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget.CustomModelChoiceValue",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 240
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget.CustomModelChoiceValue.__str__",
      "type": "function",
      "name": "ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget.CustomModelChoiceValue.__str__",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 245
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget.CustomModelChoiceIterator",
      "type": "class",
      "name": "ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget.CustomModelChoiceIterator",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 248
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget.CustomModelChoiceIterator.choice",
      "type": "function",
      "name": "ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget.CustomModelChoiceIterator.choice",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 249
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget.CustomCheckboxSelectMultiple",
      "type": "class",
      "name": "ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget.CustomCheckboxSelectMultiple",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 253
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget.CustomCheckboxSelectMultiple.create_option",
      "type": "function",
      "name": "ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget.CustomCheckboxSelectMultiple.create_option",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 254
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget.CustomModelMultipleChoiceField",
      "type": "class",
      "name": "ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget.CustomModelMultipleChoiceField",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 261
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choices_not_fetched_when_not_rendering",
      "type": "function",
      "name": "ModelChoiceFieldTests.test_choices_not_fetched_when_not_rendering",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 275
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_queryset_manager",
      "type": "function",
      "name": "ModelChoiceFieldTests.test_queryset_manager",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 280
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_num_queries",
      "type": "function",
      "name": "ModelChoiceFieldTests.test_num_queries",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 290
    },
    {
      "id": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_num_queries.CategoriesForm",
      "type": "class",
      "name": "ModelChoiceFieldTests.test_num_queries.CategoriesForm",
      "file": "tests/model_forms/test_modelchoicefield.py",
      "line": 297
    },
    {
      "id": "tests/model_forms/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/model_forms/models.py",
      "line": 0
    },
    {
      "id": "tests/model_forms/models.py:Person",
      "type": "class",
      "name": "Person",
      "file": "tests/model_forms/models.py",
      "line": 15
    },
    {
      "id": "tests/model_forms/models.py:Category",
      "type": "class",
      "name": "Category",
      "file": "tests/model_forms/models.py",
      "line": 19
    },
    {
      "id": "tests/model_forms/models.py:Category.__str__",
      "type": "function",
      "name": "Category.__str__",
      "file": "tests/model_forms/models.py",
      "line": 24
    },
    {
      "id": "tests/model_forms/models.py:Category.__repr__",
      "type": "function",
      "name": "Category.__repr__",
      "file": "tests/model_forms/models.py",
      "line": 27
    },
    {
      "id": "tests/model_forms/models.py:Writer",
      "type": "class",
      "name": "Writer",
      "file": "tests/model_forms/models.py",
      "line": 31
    },
    {
      "id": "tests/model_forms/models.py:Writer.Meta",
      "type": "class",
      "name": "Writer.Meta",
      "file": "tests/model_forms/models.py",
      "line": 34
    },
    {
      "id": "tests/model_forms/models.py:Writer.__str__",
      "type": "function",
      "name": "Writer.__str__",
      "file": "tests/model_forms/models.py",
      "line": 37
    },
    {
      "id": "tests/model_forms/models.py:Article",
      "type": "class",
      "name": "Article",
      "file": "tests/model_forms/models.py",
      "line": 41
    },
    {
      "id": "tests/model_forms/models.py:Article.save",
      "type": "function",
      "name": "Article.save",
      "file": "tests/model_forms/models.py",
      "line": 56
    },
    {
      "id": "tests/model_forms/models.py:Article.__str__",
      "type": "function",
      "name": "Article.__str__",
      "file": "tests/model_forms/models.py",
      "line": 61
    },
    {
      "id": "tests/model_forms/models.py:ImprovedArticle",
      "type": "class",
      "name": "ImprovedArticle",
      "file": "tests/model_forms/models.py",
      "line": 65
    },
    {
      "id": "tests/model_forms/models.py:ImprovedArticleWithParentLink",
      "type": "class",
      "name": "ImprovedArticleWithParentLink",
      "file": "tests/model_forms/models.py",
      "line": 69
    },
    {
      "id": "tests/model_forms/models.py:BetterWriter",
      "type": "class",
      "name": "BetterWriter",
      "file": "tests/model_forms/models.py",
      "line": 73
    },
    {
      "id": "tests/model_forms/models.py:Publication",
      "type": "class",
      "name": "Publication",
      "file": "tests/model_forms/models.py",
      "line": 77
    },
    {
      "id": "tests/model_forms/models.py:Publication.__str__",
      "type": "function",
      "name": "Publication.__str__",
      "file": "tests/model_forms/models.py",
      "line": 81
    },
    {
      "id": "tests/model_forms/models.py:default_mode",
      "type": "function",
      "name": "default_mode",
      "file": "tests/model_forms/models.py",
      "line": 85
    },
    {
      "id": "tests/model_forms/models.py:default_category",
      "type": "function",
      "name": "default_category",
      "file": "tests/model_forms/models.py",
      "line": 89
    },
    {
      "id": "tests/model_forms/models.py:PublicationDefaults",
      "type": "class",
      "name": "PublicationDefaults",
      "file": "tests/model_forms/models.py",
      "line": 93
    },
    {
      "id": "tests/model_forms/models.py:Author",
      "type": "class",
      "name": "Author",
      "file": "tests/model_forms/models.py",
      "line": 105
    },
    {
      "id": "tests/model_forms/models.py:Author1",
      "type": "class",
      "name": "Author1",
      "file": "tests/model_forms/models.py",
      "line": 110
    },
    {
      "id": "tests/model_forms/models.py:WriterProfile",
      "type": "class",
      "name": "WriterProfile",
      "file": "tests/model_forms/models.py",
      "line": 115
    },
    {
      "id": "tests/model_forms/models.py:WriterProfile.__str__",
      "type": "function",
      "name": "WriterProfile.__str__",
      "file": "tests/model_forms/models.py",
      "line": 119
    },
    {
      "id": "tests/model_forms/models.py:Document",
      "type": "class",
      "name": "Document",
      "file": "tests/model_forms/models.py",
      "line": 123
    },
    {
      "id": "tests/model_forms/models.py:TextFile",
      "type": "class",
      "name": "TextFile",
      "file": "tests/model_forms/models.py",
      "line": 127
    },
    {
      "id": "tests/model_forms/models.py:TextFile.__str__",
      "type": "function",
      "name": "TextFile.__str__",
      "file": "tests/model_forms/models.py",
      "line": 131
    },
    {
      "id": "tests/model_forms/models.py:CustomFileField",
      "type": "class",
      "name": "CustomFileField",
      "file": "tests/model_forms/models.py",
      "line": 135
    },
    {
      "id": "tests/model_forms/models.py:CustomFileField.save_form_data",
      "type": "function",
      "name": "CustomFileField.save_form_data",
      "file": "tests/model_forms/models.py",
      "line": 136
    },
    {
      "id": "tests/model_forms/models.py:CustomFF",
      "type": "class",
      "name": "CustomFF",
      "file": "tests/model_forms/models.py",
      "line": 142
    },
    {
      "id": "tests/model_forms/models.py:FilePathModel",
      "type": "class",
      "name": "FilePathModel",
      "file": "tests/model_forms/models.py",
      "line": 146
    },
    {
      "id": "tests/model_forms/models.py:ImageFile",
      "type": "class",
      "name": "ImageFile",
      "file": "tests/model_forms/models.py",
      "line": 155
    },
    {
      "id": "tests/model_forms/models.py:ImageFile.custom_upload_path",
      "type": "function",
      "name": "ImageFile.custom_upload_path",
      "file": "tests/model_forms/models.py",
      "line": 156
    },
    {
      "id": "tests/model_forms/models.py:ImageFile.__str__",
      "type": "function",
      "name": "ImageFile.__str__",
      "file": "tests/model_forms/models.py",
      "line": 170
    },
    {
      "id": "tests/model_forms/models.py:OptionalImageFile",
      "type": "class",
      "name": "OptionalImageFile",
      "file": "tests/model_forms/models.py",
      "line": 173
    },
    {
      "id": "tests/model_forms/models.py:OptionalImageFile.custom_upload_path",
      "type": "function",
      "name": "OptionalImageFile.custom_upload_path",
      "file": "tests/model_forms/models.py",
      "line": 174
    },
    {
      "id": "tests/model_forms/models.py:OptionalImageFile.__str__",
      "type": "function",
      "name": "OptionalImageFile.__str__",
      "file": "tests/model_forms/models.py",
      "line": 186
    },
    {
      "id": "tests/model_forms/models.py:NoExtensionImageFile",
      "type": "class",
      "name": "NoExtensionImageFile",
      "file": "tests/model_forms/models.py",
      "line": 189
    },
    {
      "id": "tests/model_forms/models.py:NoExtensionImageFile.upload_to",
      "type": "function",
      "name": "NoExtensionImageFile.upload_to",
      "file": "tests/model_forms/models.py",
      "line": 190
    },
    {
      "id": "tests/model_forms/models.py:NoExtensionImageFile.__str__",
      "type": "function",
      "name": "NoExtensionImageFile.__str__",
      "file": "tests/model_forms/models.py",
      "line": 196
    },
    {
      "id": "tests/model_forms/models.py:Homepage",
      "type": "class",
      "name": "Homepage",
      "file": "tests/model_forms/models.py",
      "line": 203
    },
    {
      "id": "tests/model_forms/models.py:Product",
      "type": "class",
      "name": "Product",
      "file": "tests/model_forms/models.py",
      "line": 207
    },
    {
      "id": "tests/model_forms/models.py:Product.__str__",
      "type": "function",
      "name": "Product.__str__",
      "file": "tests/model_forms/models.py",
      "line": 210
    },
    {
      "id": "tests/model_forms/models.py:Price",
      "type": "class",
      "name": "Price",
      "file": "tests/model_forms/models.py",
      "line": 214
    },
    {
      "id": "tests/model_forms/models.py:Price.Meta",
      "type": "class",
      "name": "Price.Meta",
      "file": "tests/model_forms/models.py",
      "line": 218
    },
    {
      "id": "tests/model_forms/models.py:Price.__str__",
      "type": "function",
      "name": "Price.__str__",
      "file": "tests/model_forms/models.py",
      "line": 221
    },
    {
      "id": "tests/model_forms/models.py:Triple",
      "type": "class",
      "name": "Triple",
      "file": "tests/model_forms/models.py",
      "line": 225
    },
    {
      "id": "tests/model_forms/models.py:Triple.Meta",
      "type": "class",
      "name": "Triple.Meta",
      "file": "tests/model_forms/models.py",
      "line": 230
    },
    {
      "id": "tests/model_forms/models.py:ArticleStatus",
      "type": "class",
      "name": "ArticleStatus",
      "file": "tests/model_forms/models.py",
      "line": 234
    },
    {
      "id": "tests/model_forms/models.py:Inventory",
      "type": "class",
      "name": "Inventory",
      "file": "tests/model_forms/models.py",
      "line": 243
    },
    {
      "id": "tests/model_forms/models.py:Inventory.Meta",
      "type": "class",
      "name": "Inventory.Meta",
      "file": "tests/model_forms/models.py",
      "line": 248
    },
    {
      "id": "tests/model_forms/models.py:Inventory.__str__",
      "type": "function",
      "name": "Inventory.__str__",
      "file": "tests/model_forms/models.py",
      "line": 251
    },
    {
      "id": "tests/model_forms/models.py:Inventory.__repr__",
      "type": "function",
      "name": "Inventory.__repr__",
      "file": "tests/model_forms/models.py",
      "line": 254
    },
    {
      "id": "tests/model_forms/models.py:Book",
      "type": "class",
      "name": "Book",
      "file": "tests/model_forms/models.py",
      "line": 258
    },
    {
      "id": "tests/model_forms/models.py:Book.Meta",
      "type": "class",
      "name": "Book.Meta",
      "file": "tests/model_forms/models.py",
      "line": 263
    },
    {
      "id": "tests/model_forms/models.py:BookXtra",
      "type": "class",
      "name": "BookXtra",
      "file": "tests/model_forms/models.py",
      "line": 267
    },
    {
      "id": "tests/model_forms/models.py:BookXtra.Meta",
      "type": "class",
      "name": "BookXtra.Meta",
      "file": "tests/model_forms/models.py",
      "line": 272
    },
    {
      "id": "tests/model_forms/models.py:DerivedBook",
      "type": "class",
      "name": "DerivedBook",
      "file": "tests/model_forms/models.py",
      "line": 277
    },
    {
      "id": "tests/model_forms/models.py:ExplicitPK",
      "type": "class",
      "name": "ExplicitPK",
      "file": "tests/model_forms/models.py",
      "line": 281
    },
    {
      "id": "tests/model_forms/models.py:ExplicitPK.Meta",
      "type": "class",
      "name": "ExplicitPK.Meta",
      "file": "tests/model_forms/models.py",
      "line": 285
    },
    {
      "id": "tests/model_forms/models.py:ExplicitPK.__str__",
      "type": "function",
      "name": "ExplicitPK.__str__",
      "file": "tests/model_forms/models.py",
      "line": 288
    },
    {
      "id": "tests/model_forms/models.py:Post",
      "type": "class",
      "name": "Post",
      "file": "tests/model_forms/models.py",
      "line": 292
    },
    {
      "id": "tests/model_forms/models.py:Post.__str__",
      "type": "function",
      "name": "Post.__str__",
      "file": "tests/model_forms/models.py",
      "line": 298
    },
    {
      "id": "tests/model_forms/models.py:DateTimePost",
      "type": "class",
      "name": "DateTimePost",
      "file": "tests/model_forms/models.py",
      "line": 302
    },
    {
      "id": "tests/model_forms/models.py:DateTimePost.__str__",
      "type": "function",
      "name": "DateTimePost.__str__",
      "file": "tests/model_forms/models.py",
      "line": 308
    },
    {
      "id": "tests/model_forms/models.py:DerivedPost",
      "type": "class",
      "name": "DerivedPost",
      "file": "tests/model_forms/models.py",
      "line": 312
    },
    {
      "id": "tests/model_forms/models.py:BigInt",
      "type": "class",
      "name": "BigInt",
      "file": "tests/model_forms/models.py",
      "line": 316
    },
    {
      "id": "tests/model_forms/models.py:BigInt.__str__",
      "type": "function",
      "name": "BigInt.__str__",
      "file": "tests/model_forms/models.py",
      "line": 319
    },
    {
      "id": "tests/model_forms/models.py:MarkupField",
      "type": "class",
      "name": "MarkupField",
      "file": "tests/model_forms/models.py",
      "line": 323
    },
    {
      "id": "tests/model_forms/models.py:MarkupField.formfield",
      "type": "function",
      "name": "MarkupField.formfield",
      "file": "tests/model_forms/models.py",
      "line": 328
    },
    {
      "id": "tests/model_forms/models.py:CustomFieldForExclusionModel",
      "type": "class",
      "name": "CustomFieldForExclusionModel",
      "file": "tests/model_forms/models.py",
      "line": 336
    },
    {
      "id": "tests/model_forms/models.py:FlexibleDatePost",
      "type": "class",
      "name": "FlexibleDatePost",
      "file": "tests/model_forms/models.py",
      "line": 341
    },
    {
      "id": "tests/model_forms/models.py:Colour",
      "type": "class",
      "name": "Colour",
      "file": "tests/model_forms/models.py",
      "line": 348
    },
    {
      "id": "tests/model_forms/models.py:Colour.__iter__",
      "type": "function",
      "name": "Colour.__iter__",
      "file": "tests/model_forms/models.py",
      "line": 351
    },
    {
      "id": "tests/model_forms/models.py:Colour.__str__",
      "type": "function",
      "name": "Colour.__str__",
      "file": "tests/model_forms/models.py",
      "line": 354
    },
    {
      "id": "tests/model_forms/models.py:ColourfulItem",
      "type": "class",
      "name": "ColourfulItem",
      "file": "tests/model_forms/models.py",
      "line": 358
    },
    {
      "id": "tests/model_forms/models.py:CustomErrorMessage",
      "type": "class",
      "name": "CustomErrorMessage",
      "file": "tests/model_forms/models.py",
      "line": 363
    },
    {
      "id": "tests/model_forms/models.py:CustomErrorMessage.clean",
      "type": "function",
      "name": "CustomErrorMessage.clean",
      "file": "tests/model_forms/models.py",
      "line": 375
    },
    {
      "id": "tests/model_forms/models.py:today_callable_dict",
      "type": "function",
      "name": "today_callable_dict",
      "file": "tests/model_forms/models.py",
      "line": 384
    },
    {
      "id": "tests/model_forms/models.py:today_callable_q",
      "type": "function",
      "name": "today_callable_q",
      "file": "tests/model_forms/models.py",
      "line": 388
    },
    {
      "id": "tests/model_forms/models.py:Character",
      "type": "class",
      "name": "Character",
      "file": "tests/model_forms/models.py",
      "line": 392
    },
    {
      "id": "tests/model_forms/models.py:StumpJoke",
      "type": "class",
      "name": "StumpJoke",
      "file": "tests/model_forms/models.py",
      "line": 397
    },
    {
      "id": "tests/model_forms/models.py:Student",
      "type": "class",
      "name": "Student",
      "file": "tests/model_forms/models.py",
      "line": 408
    },
    {
      "id": "tests/model_forms/models.py:Photo",
      "type": "class",
      "name": "Photo",
      "file": "tests/model_forms/models.py",
      "line": 414
    },
    {
      "id": "tests/model_forms/models.py:Photo.save",
      "type": "function",
      "name": "Photo.save",
      "file": "tests/model_forms/models.py",
      "line": 424
    },
    {
      "id": "tests/model_forms/models.py:UUIDPK",
      "type": "class",
      "name": "UUIDPK",
      "file": "tests/model_forms/models.py",
      "line": 429
    },
    {
      "id": "tests/model_forms/models.py:StrictAssignmentFieldSpecific",
      "type": "class",
      "name": "StrictAssignmentFieldSpecific",
      "file": "tests/model_forms/models.py",
      "line": 435
    },
    {
      "id": "tests/model_forms/models.py:StrictAssignmentFieldSpecific.__setattr__",
      "type": "function",
      "name": "StrictAssignmentFieldSpecific.__setattr__",
      "file": "tests/model_forms/models.py",
      "line": 439
    },
    {
      "id": "tests/model_forms/models.py:StrictAssignmentAll",
      "type": "class",
      "name": "StrictAssignmentAll",
      "file": "tests/model_forms/models.py",
      "line": 445
    },
    {
      "id": "tests/model_forms/models.py:StrictAssignmentAll.__setattr__",
      "type": "function",
      "name": "StrictAssignmentAll.__setattr__",
      "file": "tests/model_forms/models.py",
      "line": 449
    },
    {
      "id": "tests/model_forms/models.py:Award",
      "type": "class",
      "name": "Award",
      "file": "tests/model_forms/models.py",
      "line": 456
    },
    {
      "id": "tests/model_forms/models.py:NullableUniqueCharFieldModel",
      "type": "class",
      "name": "NullableUniqueCharFieldModel",
      "file": "tests/model_forms/models.py",
      "line": 461
    },
    {
      "id": "tests/model_forms/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/model_forms/__init__.py",
      "line": 0
    },
    {
      "id": "tests/model_forms/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/model_forms/tests.py",
      "line": 0
    },
    {
      "id": "tests/model_forms/tests.py:ImageFileForm",
      "type": "class",
      "name": "ImageFileForm",
      "file": "tests/model_forms/tests.py",
      "line": 36
    },
    {
      "id": "tests/model_forms/tests.py:ImageFileForm.Meta",
      "type": "class",
      "name": "ImageFileForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 37
    },
    {
      "id": "tests/model_forms/tests.py:OptionalImageFileForm",
      "type": "class",
      "name": "OptionalImageFileForm",
      "file": "tests/model_forms/tests.py",
      "line": 41
    },
    {
      "id": "tests/model_forms/tests.py:OptionalImageFileForm.Meta",
      "type": "class",
      "name": "OptionalImageFileForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 42
    },
    {
      "id": "tests/model_forms/tests.py:NoExtensionImageFileForm",
      "type": "class",
      "name": "NoExtensionImageFileForm",
      "file": "tests/model_forms/tests.py",
      "line": 46
    },
    {
      "id": "tests/model_forms/tests.py:NoExtensionImageFileForm.Meta",
      "type": "class",
      "name": "NoExtensionImageFileForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 47
    },
    {
      "id": "tests/model_forms/tests.py:ProductForm",
      "type": "class",
      "name": "ProductForm",
      "file": "tests/model_forms/tests.py",
      "line": 52
    },
    {
      "id": "tests/model_forms/tests.py:ProductForm.Meta",
      "type": "class",
      "name": "ProductForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 53
    },
    {
      "id": "tests/model_forms/tests.py:PriceForm",
      "type": "class",
      "name": "PriceForm",
      "file": "tests/model_forms/tests.py",
      "line": 58
    },
    {
      "id": "tests/model_forms/tests.py:PriceForm.Meta",
      "type": "class",
      "name": "PriceForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 59
    },
    {
      "id": "tests/model_forms/tests.py:BookForm",
      "type": "class",
      "name": "BookForm",
      "file": "tests/model_forms/tests.py",
      "line": 64
    },
    {
      "id": "tests/model_forms/tests.py:BookForm.Meta",
      "type": "class",
      "name": "BookForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 65
    },
    {
      "id": "tests/model_forms/tests.py:DerivedBookForm",
      "type": "class",
      "name": "DerivedBookForm",
      "file": "tests/model_forms/tests.py",
      "line": 70
    },
    {
      "id": "tests/model_forms/tests.py:DerivedBookForm.Meta",
      "type": "class",
      "name": "DerivedBookForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 71
    },
    {
      "id": "tests/model_forms/tests.py:ExplicitPKForm",
      "type": "class",
      "name": "ExplicitPKForm",
      "file": "tests/model_forms/tests.py",
      "line": 76
    },
    {
      "id": "tests/model_forms/tests.py:ExplicitPKForm.Meta",
      "type": "class",
      "name": "ExplicitPKForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 77
    },
    {
      "id": "tests/model_forms/tests.py:PostForm",
      "type": "class",
      "name": "PostForm",
      "file": "tests/model_forms/tests.py",
      "line": 82
    },
    {
      "id": "tests/model_forms/tests.py:PostForm.Meta",
      "type": "class",
      "name": "PostForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 83
    },
    {
      "id": "tests/model_forms/tests.py:DerivedPostForm",
      "type": "class",
      "name": "DerivedPostForm",
      "file": "tests/model_forms/tests.py",
      "line": 88
    },
    {
      "id": "tests/model_forms/tests.py:DerivedPostForm.Meta",
      "type": "class",
      "name": "DerivedPostForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 89
    },
    {
      "id": "tests/model_forms/tests.py:CustomWriterForm",
      "type": "class",
      "name": "CustomWriterForm",
      "file": "tests/model_forms/tests.py",
      "line": 94
    },
    {
      "id": "tests/model_forms/tests.py:CustomWriterForm.Meta",
      "type": "class",
      "name": "CustomWriterForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 97
    },
    {
      "id": "tests/model_forms/tests.py:BaseCategoryForm",
      "type": "class",
      "name": "BaseCategoryForm",
      "file": "tests/model_forms/tests.py",
      "line": 102
    },
    {
      "id": "tests/model_forms/tests.py:BaseCategoryForm.Meta",
      "type": "class",
      "name": "BaseCategoryForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 103
    },
    {
      "id": "tests/model_forms/tests.py:ArticleForm",
      "type": "class",
      "name": "ArticleForm",
      "file": "tests/model_forms/tests.py",
      "line": 108
    },
    {
      "id": "tests/model_forms/tests.py:ArticleForm.Meta",
      "type": "class",
      "name": "ArticleForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 109
    },
    {
      "id": "tests/model_forms/tests.py:RoykoForm",
      "type": "class",
      "name": "RoykoForm",
      "file": "tests/model_forms/tests.py",
      "line": 114
    },
    {
      "id": "tests/model_forms/tests.py:RoykoForm.Meta",
      "type": "class",
      "name": "RoykoForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 115
    },
    {
      "id": "tests/model_forms/tests.py:ArticleStatusForm",
      "type": "class",
      "name": "ArticleStatusForm",
      "file": "tests/model_forms/tests.py",
      "line": 120
    },
    {
      "id": "tests/model_forms/tests.py:ArticleStatusForm.Meta",
      "type": "class",
      "name": "ArticleStatusForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 121
    },
    {
      "id": "tests/model_forms/tests.py:InventoryForm",
      "type": "class",
      "name": "InventoryForm",
      "file": "tests/model_forms/tests.py",
      "line": 126
    },
    {
      "id": "tests/model_forms/tests.py:InventoryForm.Meta",
      "type": "class",
      "name": "InventoryForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 127
    },
    {
      "id": "tests/model_forms/tests.py:SelectInventoryForm",
      "type": "class",
      "name": "SelectInventoryForm",
      "file": "tests/model_forms/tests.py",
      "line": 132
    },
    {
      "id": "tests/model_forms/tests.py:CustomFieldForExclusionForm",
      "type": "class",
      "name": "CustomFieldForExclusionForm",
      "file": "tests/model_forms/tests.py",
      "line": 136
    },
    {
      "id": "tests/model_forms/tests.py:CustomFieldForExclusionForm.Meta",
      "type": "class",
      "name": "CustomFieldForExclusionForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 137
    },
    {
      "id": "tests/model_forms/tests.py:TextFileForm",
      "type": "class",
      "name": "TextFileForm",
      "file": "tests/model_forms/tests.py",
      "line": 142
    },
    {
      "id": "tests/model_forms/tests.py:TextFileForm.Meta",
      "type": "class",
      "name": "TextFileForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 143
    },
    {
      "id": "tests/model_forms/tests.py:BigIntForm",
      "type": "class",
      "name": "BigIntForm",
      "file": "tests/model_forms/tests.py",
      "line": 148
    },
    {
      "id": "tests/model_forms/tests.py:BigIntForm.Meta",
      "type": "class",
      "name": "BigIntForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 149
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormWithMedia",
      "type": "class",
      "name": "ModelFormWithMedia",
      "file": "tests/model_forms/tests.py",
      "line": 154
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormWithMedia.Media",
      "type": "class",
      "name": "ModelFormWithMedia.Media",
      "file": "tests/model_forms/tests.py",
      "line": 155
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormWithMedia.Meta",
      "type": "class",
      "name": "ModelFormWithMedia.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 161
    },
    {
      "id": "tests/model_forms/tests.py:CustomErrorMessageForm",
      "type": "class",
      "name": "CustomErrorMessageForm",
      "file": "tests/model_forms/tests.py",
      "line": 166
    },
    {
      "id": "tests/model_forms/tests.py:CustomErrorMessageForm.Meta",
      "type": "class",
      "name": "CustomErrorMessageForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 169
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest",
      "type": "class",
      "name": "ModelFormBaseTest",
      "file": "tests/model_forms/tests.py",
      "line": 174
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_base_form",
      "type": "function",
      "name": "ModelFormBaseTest.test_base_form",
      "file": "tests/model_forms/tests.py",
      "line": 175
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_no_model_class",
      "type": "function",
      "name": "ModelFormBaseTest.test_no_model_class",
      "file": "tests/model_forms/tests.py",
      "line": 178
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_no_model_class.NoModelModelForm",
      "type": "class",
      "name": "ModelFormBaseTest.test_no_model_class.NoModelModelForm",
      "file": "tests/model_forms/tests.py",
      "line": 179
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_empty_fields_to_fields_for_model",
      "type": "function",
      "name": "ModelFormBaseTest.test_empty_fields_to_fields_for_model",
      "file": "tests/model_forms/tests.py",
      "line": 184
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_empty_fields_on_modelform",
      "type": "function",
      "name": "ModelFormBaseTest.test_empty_fields_on_modelform",
      "file": "tests/model_forms/tests.py",
      "line": 191
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_empty_fields_on_modelform.EmptyPersonForm",
      "type": "class",
      "name": "ModelFormBaseTest.test_empty_fields_on_modelform.EmptyPersonForm",
      "file": "tests/model_forms/tests.py",
      "line": 195
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_empty_fields_on_modelform.EmptyPersonForm.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_empty_fields_on_modelform.EmptyPersonForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 196
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_empty_fields_to_construct_instance",
      "type": "function",
      "name": "ModelFormBaseTest.test_empty_fields_to_construct_instance",
      "file": "tests/model_forms/tests.py",
      "line": 203
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_blank_with_null_foreign_key_field",
      "type": "function",
      "name": "ModelFormBaseTest.test_blank_with_null_foreign_key_field",
      "file": "tests/model_forms/tests.py",
      "line": 212
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_blank_with_null_foreign_key_field.FormForTestingIsValid",
      "type": "class",
      "name": "ModelFormBaseTest.test_blank_with_null_foreign_key_field.FormForTestingIsValid",
      "file": "tests/model_forms/tests.py",
      "line": 217
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_blank_with_null_foreign_key_field.FormForTestingIsValid.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_blank_with_null_foreign_key_field.FormForTestingIsValid.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 218
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_blank_false_with_null_true_foreign_key_field",
      "type": "function",
      "name": "ModelFormBaseTest.test_blank_false_with_null_true_foreign_key_field",
      "file": "tests/model_forms/tests.py",
      "line": 239
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_blank_false_with_null_true_foreign_key_field.AwardForm",
      "type": "class",
      "name": "ModelFormBaseTest.test_blank_false_with_null_true_foreign_key_field.AwardForm",
      "file": "tests/model_forms/tests.py",
      "line": 245
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_blank_false_with_null_true_foreign_key_field.AwardForm.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_blank_false_with_null_true_foreign_key_field.AwardForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 246
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_save_blank_false_with_required_false",
      "type": "function",
      "name": "ModelFormBaseTest.test_save_blank_false_with_required_false",
      "file": "tests/model_forms/tests.py",
      "line": 262
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_save_blank_null_unique_charfield_saves_null",
      "type": "function",
      "name": "ModelFormBaseTest.test_save_blank_null_unique_charfield_saves_null",
      "file": "tests/model_forms/tests.py",
      "line": 273
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_missing_fields_attribute",
      "type": "function",
      "name": "ModelFormBaseTest.test_missing_fields_attribute",
      "file": "tests/model_forms/tests.py",
      "line": 288
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_missing_fields_attribute.MissingFieldsForm",
      "type": "class",
      "name": "ModelFormBaseTest.test_missing_fields_attribute.MissingFieldsForm",
      "file": "tests/model_forms/tests.py",
      "line": 295
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_missing_fields_attribute.MissingFieldsForm.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_missing_fields_attribute.MissingFieldsForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 296
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_extra_fields",
      "type": "function",
      "name": "ModelFormBaseTest.test_extra_fields",
      "file": "tests/model_forms/tests.py",
      "line": 299
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_extra_fields.ExtraFields",
      "type": "class",
      "name": "ModelFormBaseTest.test_extra_fields.ExtraFields",
      "file": "tests/model_forms/tests.py",
      "line": 300
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_extra_field_model_form",
      "type": "function",
      "name": "ModelFormBaseTest.test_extra_field_model_form",
      "file": "tests/model_forms/tests.py",
      "line": 306
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_extra_field_model_form.ExtraPersonForm",
      "type": "class",
      "name": "ModelFormBaseTest.test_extra_field_model_form.ExtraPersonForm",
      "file": "tests/model_forms/tests.py",
      "line": 308
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_extra_field_model_form.ExtraPersonForm.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_extra_field_model_form.ExtraPersonForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 312
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_extra_declared_field_model_form",
      "type": "function",
      "name": "ModelFormBaseTest.test_extra_declared_field_model_form",
      "file": "tests/model_forms/tests.py",
      "line": 316
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_extra_declared_field_model_form.ExtraPersonForm",
      "type": "class",
      "name": "ModelFormBaseTest.test_extra_declared_field_model_form.ExtraPersonForm",
      "file": "tests/model_forms/tests.py",
      "line": 317
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_extra_declared_field_model_form.ExtraPersonForm.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_extra_declared_field_model_form.ExtraPersonForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 321
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_extra_field_modelform_factory",
      "type": "function",
      "name": "ModelFormBaseTest.test_extra_field_modelform_factory",
      "file": "tests/model_forms/tests.py",
      "line": 325
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_replace_field",
      "type": "function",
      "name": "ModelFormBaseTest.test_replace_field",
      "file": "tests/model_forms/tests.py",
      "line": 329
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_replace_field.ReplaceField",
      "type": "class",
      "name": "ModelFormBaseTest.test_replace_field.ReplaceField",
      "file": "tests/model_forms/tests.py",
      "line": 330
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_replace_field.ReplaceField.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_replace_field.ReplaceField.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 333
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_replace_field_variant_2",
      "type": "function",
      "name": "ModelFormBaseTest.test_replace_field_variant_2",
      "file": "tests/model_forms/tests.py",
      "line": 339
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_replace_field_variant_2.ReplaceField",
      "type": "class",
      "name": "ModelFormBaseTest.test_replace_field_variant_2.ReplaceField",
      "file": "tests/model_forms/tests.py",
      "line": 342
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_replace_field_variant_2.ReplaceField.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_replace_field_variant_2.ReplaceField.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 345
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_replace_field_variant_3",
      "type": "function",
      "name": "ModelFormBaseTest.test_replace_field_variant_3",
      "file": "tests/model_forms/tests.py",
      "line": 351
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_replace_field_variant_3.ReplaceField",
      "type": "class",
      "name": "ModelFormBaseTest.test_replace_field_variant_3.ReplaceField",
      "file": "tests/model_forms/tests.py",
      "line": 354
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_replace_field_variant_3.ReplaceField.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_replace_field_variant_3.ReplaceField.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 357
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_override_field",
      "type": "function",
      "name": "ModelFormBaseTest.test_override_field",
      "file": "tests/model_forms/tests.py",
      "line": 363
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_override_field.WriterForm",
      "type": "class",
      "name": "ModelFormBaseTest.test_override_field.WriterForm",
      "file": "tests/model_forms/tests.py",
      "line": 364
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_override_field.WriterForm.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_override_field.WriterForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 367
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_limit_nonexistent_field",
      "type": "function",
      "name": "ModelFormBaseTest.test_limit_nonexistent_field",
      "file": "tests/model_forms/tests.py",
      "line": 374
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_limit_nonexistent_field.InvalidCategoryForm",
      "type": "class",
      "name": "ModelFormBaseTest.test_limit_nonexistent_field.InvalidCategoryForm",
      "file": "tests/model_forms/tests.py",
      "line": 377
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_limit_nonexistent_field.InvalidCategoryForm.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_limit_nonexistent_field.InvalidCategoryForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 378
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_limit_fields_with_string",
      "type": "function",
      "name": "ModelFormBaseTest.test_limit_fields_with_string",
      "file": "tests/model_forms/tests.py",
      "line": 382
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_limit_fields_with_string.CategoryForm",
      "type": "class",
      "name": "ModelFormBaseTest.test_limit_fields_with_string.CategoryForm",
      "file": "tests/model_forms/tests.py",
      "line": 385
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_limit_fields_with_string.CategoryForm.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_limit_fields_with_string.CategoryForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 386
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_fields",
      "type": "function",
      "name": "ModelFormBaseTest.test_exclude_fields",
      "file": "tests/model_forms/tests.py",
      "line": 390
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_fields.ExcludeFields",
      "type": "class",
      "name": "ModelFormBaseTest.test_exclude_fields.ExcludeFields",
      "file": "tests/model_forms/tests.py",
      "line": 391
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_fields.ExcludeFields.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_exclude_fields.ExcludeFields.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 392
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_nonexistent_field",
      "type": "function",
      "name": "ModelFormBaseTest.test_exclude_nonexistent_field",
      "file": "tests/model_forms/tests.py",
      "line": 398
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_nonexistent_field.ExcludeFields",
      "type": "class",
      "name": "ModelFormBaseTest.test_exclude_nonexistent_field.ExcludeFields",
      "file": "tests/model_forms/tests.py",
      "line": 399
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_nonexistent_field.ExcludeFields.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_exclude_nonexistent_field.ExcludeFields.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 400
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_fields_with_string",
      "type": "function",
      "name": "ModelFormBaseTest.test_exclude_fields_with_string",
      "file": "tests/model_forms/tests.py",
      "line": 406
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_fields_with_string.CategoryForm",
      "type": "class",
      "name": "ModelFormBaseTest.test_exclude_fields_with_string.CategoryForm",
      "file": "tests/model_forms/tests.py",
      "line": 409
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_fields_with_string.CategoryForm.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_exclude_fields_with_string.CategoryForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 410
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_and_validation",
      "type": "function",
      "name": "ModelFormBaseTest.test_exclude_and_validation",
      "file": "tests/model_forms/tests.py",
      "line": 414
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_and_validation.PriceFormWithoutQuantity",
      "type": "class",
      "name": "ModelFormBaseTest.test_exclude_and_validation.PriceFormWithoutQuantity",
      "file": "tests/model_forms/tests.py",
      "line": 432
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_and_validation.PriceFormWithoutQuantity.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_exclude_and_validation.PriceFormWithoutQuantity.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 433
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_confused_form",
      "type": "function",
      "name": "ModelFormBaseTest.test_confused_form",
      "file": "tests/model_forms/tests.py",
      "line": 445
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_confused_form.ConfusedForm",
      "type": "class",
      "name": "ModelFormBaseTest.test_confused_form.ConfusedForm",
      "file": "tests/model_forms/tests.py",
      "line": 446
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_confused_form.ConfusedForm.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_confused_form.ConfusedForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 450
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_mixmodel_form",
      "type": "function",
      "name": "ModelFormBaseTest.test_mixmodel_form",
      "file": "tests/model_forms/tests.py",
      "line": 458
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_mixmodel_form.MixModelForm",
      "type": "class",
      "name": "ModelFormBaseTest.test_mixmodel_form.MixModelForm",
      "file": "tests/model_forms/tests.py",
      "line": 459
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_mixmodel_form.MixModelForm.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_mixmodel_form.MixModelForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 466
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_article_form",
      "type": "function",
      "name": "ModelFormBaseTest.test_article_form",
      "file": "tests/model_forms/tests.py",
      "line": 477
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_bad_form",
      "type": "function",
      "name": "ModelFormBaseTest.test_bad_form",
      "file": "tests/model_forms/tests.py",
      "line": 483
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_bad_form.BadForm",
      "type": "class",
      "name": "ModelFormBaseTest.test_bad_form.BadForm",
      "file": "tests/model_forms/tests.py",
      "line": 485
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_invalid_meta_model",
      "type": "function",
      "name": "ModelFormBaseTest.test_invalid_meta_model",
      "file": "tests/model_forms/tests.py",
      "line": 493
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_invalid_meta_model.InvalidModelForm",
      "type": "class",
      "name": "ModelFormBaseTest.test_invalid_meta_model.InvalidModelForm",
      "file": "tests/model_forms/tests.py",
      "line": 494
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_invalid_meta_model.InvalidModelForm.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_invalid_meta_model.InvalidModelForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 495
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_subcategory_form",
      "type": "function",
      "name": "ModelFormBaseTest.test_subcategory_form",
      "file": "tests/model_forms/tests.py",
      "line": 507
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_subcategory_form.SubCategoryForm",
      "type": "class",
      "name": "ModelFormBaseTest.test_subcategory_form.SubCategoryForm",
      "file": "tests/model_forms/tests.py",
      "line": 508
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form",
      "type": "function",
      "name": "ModelFormBaseTest.test_subclassmeta_form",
      "file": "tests/model_forms/tests.py",
      "line": 517
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SomeCategoryForm",
      "type": "class",
      "name": "ModelFormBaseTest.test_subclassmeta_form.SomeCategoryForm",
      "file": "tests/model_forms/tests.py",
      "line": 518
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SomeCategoryForm.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_subclassmeta_form.SomeCategoryForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 521
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta",
      "type": "class",
      "name": "ModelFormBaseTest.test_subclassmeta_form.SubclassMeta",
      "file": "tests/model_forms/tests.py",
      "line": 525
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 529
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_orderfields_form",
      "type": "function",
      "name": "ModelFormBaseTest.test_orderfields_form",
      "file": "tests/model_forms/tests.py",
      "line": 542
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_orderfields_form.OrderFields",
      "type": "class",
      "name": "ModelFormBaseTest.test_orderfields_form.OrderFields",
      "file": "tests/model_forms/tests.py",
      "line": 543
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_orderfields_form.OrderFields.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_orderfields_form.OrderFields.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 544
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_orderfields2_form",
      "type": "function",
      "name": "ModelFormBaseTest.test_orderfields2_form",
      "file": "tests/model_forms/tests.py",
      "line": 558
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_orderfields2_form.OrderFields2",
      "type": "class",
      "name": "ModelFormBaseTest.test_orderfields2_form.OrderFields2",
      "file": "tests/model_forms/tests.py",
      "line": 559
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_orderfields2_form.OrderFields2.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_orderfields2_form.OrderFields2.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 560
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_populated_on_optional_field",
      "type": "function",
      "name": "ModelFormBaseTest.test_default_populated_on_optional_field",
      "file": "tests/model_forms/tests.py",
      "line": 567
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_populated_on_optional_field.PubForm",
      "type": "class",
      "name": "ModelFormBaseTest.test_default_populated_on_optional_field.PubForm",
      "file": "tests/model_forms/tests.py",
      "line": 568
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_populated_on_optional_field.PubForm.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_default_populated_on_optional_field.PubForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 571
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_optional_checkbox_input",
      "type": "function",
      "name": "ModelFormBaseTest.test_default_not_populated_on_optional_checkbox_input",
      "file": "tests/model_forms/tests.py",
      "line": 588
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_optional_checkbox_input.PubForm",
      "type": "class",
      "name": "ModelFormBaseTest.test_default_not_populated_on_optional_checkbox_input.PubForm",
      "file": "tests/model_forms/tests.py",
      "line": 589
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_optional_checkbox_input.PubForm.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_default_not_populated_on_optional_checkbox_input.PubForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 590
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_checkboxselectmultiple",
      "type": "function",
      "name": "ModelFormBaseTest.test_default_not_populated_on_checkboxselectmultiple",
      "file": "tests/model_forms/tests.py",
      "line": 603
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_checkboxselectmultiple.PubForm",
      "type": "class",
      "name": "ModelFormBaseTest.test_default_not_populated_on_checkboxselectmultiple.PubForm",
      "file": "tests/model_forms/tests.py",
      "line": 604
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_checkboxselectmultiple.PubForm.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_default_not_populated_on_checkboxselectmultiple.PubForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 607
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_selectmultiple",
      "type": "function",
      "name": "ModelFormBaseTest.test_default_not_populated_on_selectmultiple",
      "file": "tests/model_forms/tests.py",
      "line": 619
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_selectmultiple.PubForm",
      "type": "class",
      "name": "ModelFormBaseTest.test_default_not_populated_on_selectmultiple.PubForm",
      "file": "tests/model_forms/tests.py",
      "line": 620
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_selectmultiple.PubForm.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_default_not_populated_on_selectmultiple.PubForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 623
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_prefixed_form_with_default_field",
      "type": "function",
      "name": "ModelFormBaseTest.test_prefixed_form_with_default_field",
      "file": "tests/model_forms/tests.py",
      "line": 635
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_prefixed_form_with_default_field.PubForm",
      "type": "class",
      "name": "ModelFormBaseTest.test_prefixed_form_with_default_field.PubForm",
      "file": "tests/model_forms/tests.py",
      "line": 636
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_prefixed_form_with_default_field.PubForm.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_prefixed_form_with_default_field.PubForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 639
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_renderer_kwarg",
      "type": "function",
      "name": "ModelFormBaseTest.test_renderer_kwarg",
      "file": "tests/model_forms/tests.py",
      "line": 651
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_splitdatetime_field",
      "type": "function",
      "name": "ModelFormBaseTest.test_default_splitdatetime_field",
      "file": "tests/model_forms/tests.py",
      "line": 655
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_splitdatetime_field.PubForm",
      "type": "class",
      "name": "ModelFormBaseTest.test_default_splitdatetime_field.PubForm",
      "file": "tests/model_forms/tests.py",
      "line": 656
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_splitdatetime_field.PubForm.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_default_splitdatetime_field.PubForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 659
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_filefield",
      "type": "function",
      "name": "ModelFormBaseTest.test_default_filefield",
      "file": "tests/model_forms/tests.py",
      "line": 673
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_filefield.PubForm",
      "type": "class",
      "name": "ModelFormBaseTest.test_default_filefield.PubForm",
      "file": "tests/model_forms/tests.py",
      "line": 674
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_filefield.PubForm.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_default_filefield.PubForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 675
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_selectdatewidget",
      "type": "function",
      "name": "ModelFormBaseTest.test_default_selectdatewidget",
      "file": "tests/model_forms/tests.py",
      "line": 689
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_selectdatewidget.PubForm",
      "type": "class",
      "name": "ModelFormBaseTest.test_default_selectdatewidget.PubForm",
      "file": "tests/model_forms/tests.py",
      "line": 690
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_selectdatewidget.PubForm.Meta",
      "type": "class",
      "name": "ModelFormBaseTest.test_default_selectdatewidget.PubForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 693
    },
    {
      "id": "tests/model_forms/tests.py:FieldOverridesByFormMetaForm",
      "type": "class",
      "name": "FieldOverridesByFormMetaForm",
      "file": "tests/model_forms/tests.py",
      "line": 708
    },
    {
      "id": "tests/model_forms/tests.py:FieldOverridesByFormMetaForm.Meta",
      "type": "class",
      "name": "FieldOverridesByFormMetaForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 709
    },
    {
      "id": "tests/model_forms/tests.py:TestFieldOverridesByFormMeta",
      "type": "class",
      "name": "TestFieldOverridesByFormMeta",
      "file": "tests/model_forms/tests.py",
      "line": 735
    },
    {
      "id": "tests/model_forms/tests.py:TestFieldOverridesByFormMeta.test_widget_overrides",
      "type": "function",
      "name": "TestFieldOverridesByFormMeta.test_widget_overrides",
      "file": "tests/model_forms/tests.py",
      "line": 736
    },
    {
      "id": "tests/model_forms/tests.py:TestFieldOverridesByFormMeta.test_label_overrides",
      "type": "function",
      "name": "TestFieldOverridesByFormMeta.test_label_overrides",
      "file": "tests/model_forms/tests.py",
      "line": 751
    },
    {
      "id": "tests/model_forms/tests.py:TestFieldOverridesByFormMeta.test_help_text_overrides",
      "type": "function",
      "name": "TestFieldOverridesByFormMeta.test_help_text_overrides",
      "file": "tests/model_forms/tests.py",
      "line": 766
    },
    {
      "id": "tests/model_forms/tests.py:TestFieldOverridesByFormMeta.test_error_messages_overrides",
      "type": "function",
      "name": "TestFieldOverridesByFormMeta.test_error_messages_overrides",
      "file": "tests/model_forms/tests.py",
      "line": 773
    },
    {
      "id": "tests/model_forms/tests.py:TestFieldOverridesByFormMeta.test_field_type_overrides",
      "type": "function",
      "name": "TestFieldOverridesByFormMeta.test_field_type_overrides",
      "file": "tests/model_forms/tests.py",
      "line": 787
    },
    {
      "id": "tests/model_forms/tests.py:IncompleteCategoryFormWithFields",
      "type": "class",
      "name": "IncompleteCategoryFormWithFields",
      "file": "tests/model_forms/tests.py",
      "line": 793
    },
    {
      "id": "tests/model_forms/tests.py:IncompleteCategoryFormWithFields.Meta",
      "type": "class",
      "name": "IncompleteCategoryFormWithFields.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 800
    },
    {
      "id": "tests/model_forms/tests.py:IncompleteCategoryFormWithExclude",
      "type": "class",
      "name": "IncompleteCategoryFormWithExclude",
      "file": "tests/model_forms/tests.py",
      "line": 805
    },
    {
      "id": "tests/model_forms/tests.py:IncompleteCategoryFormWithExclude.Meta",
      "type": "class",
      "name": "IncompleteCategoryFormWithExclude.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 812
    },
    {
      "id": "tests/model_forms/tests.py:ValidationTest",
      "type": "class",
      "name": "ValidationTest",
      "file": "tests/model_forms/tests.py",
      "line": 817
    },
    {
      "id": "tests/model_forms/tests.py:ValidationTest.test_validates_with_replaced_field_not_specified",
      "type": "function",
      "name": "ValidationTest.test_validates_with_replaced_field_not_specified",
      "file": "tests/model_forms/tests.py",
      "line": 818
    },
    {
      "id": "tests/model_forms/tests.py:ValidationTest.test_validates_with_replaced_field_excluded",
      "type": "function",
      "name": "ValidationTest.test_validates_with_replaced_field_excluded",
      "file": "tests/model_forms/tests.py",
      "line": 822
    },
    {
      "id": "tests/model_forms/tests.py:ValidationTest.test_notrequired_overrides_notblank",
      "type": "function",
      "name": "ValidationTest.test_notrequired_overrides_notblank",
      "file": "tests/model_forms/tests.py",
      "line": 826
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest",
      "type": "class",
      "name": "UniqueTest",
      "file": "tests/model_forms/tests.py",
      "line": 831
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.setUpTestData",
      "type": "function",
      "name": "UniqueTest.setUpTestData",
      "file": "tests/model_forms/tests.py",
      "line": 836
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_simple_unique",
      "type": "function",
      "name": "UniqueTest.test_simple_unique",
      "file": "tests/model_forms/tests.py",
      "line": 839
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_unique_together",
      "type": "function",
      "name": "UniqueTest.test_unique_together",
      "file": "tests/model_forms/tests.py",
      "line": 849
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_unique_together_exclusion",
      "type": "function",
      "name": "UniqueTest.test_unique_together_exclusion",
      "file": "tests/model_forms/tests.py",
      "line": 859
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_unique_together_exclusion.BookForm",
      "type": "class",
      "name": "UniqueTest.test_unique_together_exclusion.BookForm",
      "file": "tests/model_forms/tests.py",
      "line": 866
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_unique_together_exclusion.BookForm.Meta",
      "type": "class",
      "name": "UniqueTest.test_unique_together_exclusion.BookForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 867
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_multiple_field_unique_together",
      "type": "function",
      "name": "UniqueTest.test_multiple_field_unique_together",
      "file": "tests/model_forms/tests.py",
      "line": 887
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_multiple_field_unique_together.TripleForm",
      "type": "class",
      "name": "UniqueTest.test_multiple_field_unique_together.TripleForm",
      "file": "tests/model_forms/tests.py",
      "line": 894
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_multiple_field_unique_together.TripleForm.Meta",
      "type": "class",
      "name": "UniqueTest.test_multiple_field_unique_together.TripleForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 895
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_unique_null",
      "type": "function",
      "name": "UniqueTest.test_unique_null",
      "file": "tests/model_forms/tests.py",
      "line": 908
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_inherited_unique",
      "type": "function",
      "name": "UniqueTest.test_inherited_unique",
      "file": "tests/model_forms/tests.py",
      "line": 923
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_inherited_unique_together",
      "type": "function",
      "name": "UniqueTest.test_inherited_unique_together",
      "file": "tests/model_forms/tests.py",
      "line": 931
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_abstract_inherited_unique",
      "type": "function",
      "name": "UniqueTest.test_abstract_inherited_unique",
      "file": "tests/model_forms/tests.py",
      "line": 941
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_abstract_inherited_unique_together",
      "type": "function",
      "name": "UniqueTest.test_abstract_inherited_unique_together",
      "file": "tests/model_forms/tests.py",
      "line": 953
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_explicitpk_unspecified",
      "type": "function",
      "name": "UniqueTest.test_explicitpk_unspecified",
      "file": "tests/model_forms/tests.py",
      "line": 971
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_explicitpk_unique",
      "type": "function",
      "name": "UniqueTest.test_explicitpk_unique",
      "file": "tests/model_forms/tests.py",
      "line": 976
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_unique_for_date",
      "type": "function",
      "name": "UniqueTest.test_unique_for_date",
      "file": "tests/model_forms/tests.py",
      "line": 992
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_unique_for_date_in_exclude",
      "type": "function",
      "name": "UniqueTest.test_unique_for_date_in_exclude",
      "file": "tests/model_forms/tests.py",
      "line": 1020
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_unique_for_date_in_exclude.DateTimePostForm",
      "type": "class",
      "name": "UniqueTest.test_unique_for_date_in_exclude.DateTimePostForm",
      "file": "tests/model_forms/tests.py",
      "line": 1026
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_unique_for_date_in_exclude.DateTimePostForm.Meta",
      "type": "class",
      "name": "UniqueTest.test_unique_for_date_in_exclude.DateTimePostForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 1027
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_inherited_unique_for_date",
      "type": "function",
      "name": "UniqueTest.test_inherited_unique_for_date",
      "file": "tests/model_forms/tests.py",
      "line": 1045
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_unique_for_date_with_nullable_date",
      "type": "function",
      "name": "UniqueTest.test_unique_for_date_with_nullable_date",
      "file": "tests/model_forms/tests.py",
      "line": 1069
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_unique_for_date_with_nullable_date.FlexDatePostForm",
      "type": "class",
      "name": "UniqueTest.test_unique_for_date_with_nullable_date.FlexDatePostForm",
      "file": "tests/model_forms/tests.py",
      "line": 1070
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_unique_for_date_with_nullable_date.FlexDatePostForm.Meta",
      "type": "class",
      "name": "UniqueTest.test_unique_for_date_with_nullable_date.FlexDatePostForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 1071
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message",
      "type": "function",
      "name": "UniqueTest.test_override_unique_message",
      "file": "tests/model_forms/tests.py",
      "line": 1090
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm",
      "type": "class",
      "name": "UniqueTest.test_override_unique_message.CustomProductForm",
      "file": "tests/model_forms/tests.py",
      "line": 1091
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "type": "class",
      "name": "UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 1092
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message",
      "type": "function",
      "name": "UniqueTest.test_override_unique_together_message",
      "file": "tests/model_forms/tests.py",
      "line": 1104
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm",
      "type": "class",
      "name": "UniqueTest.test_override_unique_together_message.CustomPriceForm",
      "file": "tests/model_forms/tests.py",
      "line": 1105
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "type": "class",
      "name": "UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 1106
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message",
      "type": "function",
      "name": "UniqueTest.test_override_unique_for_date_message",
      "file": "tests/model_forms/tests.py",
      "line": 1118
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm",
      "type": "class",
      "name": "UniqueTest.test_override_unique_for_date_message.CustomPostForm",
      "file": "tests/model_forms/tests.py",
      "line": 1119
    },
    {
      "id": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "type": "class",
      "name": "UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 1120
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBasicTests",
      "type": "class",
      "name": "ModelFormBasicTests",
      "file": "tests/model_forms/tests.py",
      "line": 1139
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBasicTests.create_basic_data",
      "type": "function",
      "name": "ModelFormBasicTests.create_basic_data",
      "file": "tests/model_forms/tests.py",
      "line": 1140
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBasicTests.test_base_form",
      "type": "function",
      "name": "ModelFormBasicTests.test_base_form",
      "file": "tests/model_forms/tests.py",
      "line": 1147
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBasicTests.test_auto_id",
      "type": "function",
      "name": "ModelFormBasicTests.test_auto_id",
      "file": "tests/model_forms/tests.py",
      "line": 1169
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBasicTests.test_initial_values",
      "type": "function",
      "name": "ModelFormBasicTests.test_initial_values",
      "file": "tests/model_forms/tests.py",
      "line": 1178
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBasicTests.test_m2m_initial_callable",
      "type": "function",
      "name": "ModelFormBasicTests.test_m2m_initial_callable",
      "file": "tests/model_forms/tests.py",
      "line": 1266
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBasicTests.test_m2m_initial_callable.formfield_for_dbfield",
      "type": "function",
      "name": "ModelFormBasicTests.test_m2m_initial_callable.formfield_for_dbfield",
      "file": "tests/model_forms/tests.py",
      "line": 1274
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBasicTests.test_basic_creation",
      "type": "function",
      "name": "ModelFormBasicTests.test_basic_creation",
      "file": "tests/model_forms/tests.py",
      "line": 1298
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBasicTests.test_save_commit_false",
      "type": "function",
      "name": "ModelFormBasicTests.test_save_commit_false",
      "file": "tests/model_forms/tests.py",
      "line": 1317
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBasicTests.test_save_with_data_errors",
      "type": "function",
      "name": "ModelFormBasicTests.test_save_with_data_errors",
      "file": "tests/model_forms/tests.py",
      "line": 1329
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBasicTests.test_multi_fields",
      "type": "function",
      "name": "ModelFormBasicTests.test_multi_fields",
      "file": "tests/model_forms/tests.py",
      "line": 1345
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBasicTests.test_subset_fields",
      "type": "function",
      "name": "ModelFormBasicTests.test_subset_fields",
      "file": "tests/model_forms/tests.py",
      "line": 1404
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBasicTests.test_subset_fields.PartialArticleForm",
      "type": "class",
      "name": "ModelFormBasicTests.test_subset_fields.PartialArticleForm",
      "file": "tests/model_forms/tests.py",
      "line": 1411
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBasicTests.test_subset_fields.PartialArticleForm.Meta",
      "type": "class",
      "name": "ModelFormBasicTests.test_subset_fields.PartialArticleForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 1412
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBasicTests.test_subset_fields.PartialArticleFormWithSlug",
      "type": "class",
      "name": "ModelFormBasicTests.test_subset_fields.PartialArticleFormWithSlug",
      "file": "tests/model_forms/tests.py",
      "line": 1422
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBasicTests.test_subset_fields.PartialArticleFormWithSlug.Meta",
      "type": "class",
      "name": "ModelFormBasicTests.test_subset_fields.PartialArticleFormWithSlug.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 1423
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBasicTests.test_m2m_editing",
      "type": "function",
      "name": "ModelFormBasicTests.test_m2m_editing",
      "file": "tests/model_forms/tests.py",
      "line": 1448
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBasicTests.test_custom_form_fields",
      "type": "function",
      "name": "ModelFormBasicTests.test_custom_form_fields",
      "file": "tests/model_forms/tests.py",
      "line": 1500
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBasicTests.test_custom_form_fields.ShortCategory",
      "type": "class",
      "name": "ModelFormBasicTests.test_custom_form_fields.ShortCategory",
      "file": "tests/model_forms/tests.py",
      "line": 1504
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBasicTests.test_custom_form_fields.ShortCategory.Meta",
      "type": "class",
      "name": "ModelFormBasicTests.test_custom_form_fields.ShortCategory.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 1509
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBasicTests.test_runtime_choicefield_populated",
      "type": "function",
      "name": "ModelFormBasicTests.test_runtime_choicefield_populated",
      "file": "tests/model_forms/tests.py",
      "line": 1518
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBasicTests.test_recleaning_model_form_instance",
      "type": "function",
      "name": "ModelFormBasicTests.test_recleaning_model_form_instance",
      "file": "tests/model_forms/tests.py",
      "line": 1575
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBasicTests.test_recleaning_model_form_instance.AuthorForm",
      "type": "class",
      "name": "ModelFormBasicTests.test_recleaning_model_form_instance.AuthorForm",
      "file": "tests/model_forms/tests.py",
      "line": 1580
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormBasicTests.test_recleaning_model_form_instance.AuthorForm.Meta",
      "type": "class",
      "name": "ModelFormBasicTests.test_recleaning_model_form_instance.AuthorForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 1581
    },
    {
      "id": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests",
      "type": "class",
      "name": "ModelMultipleChoiceFieldTests",
      "file": "tests/model_forms/tests.py",
      "line": 1592
    },
    {
      "id": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.setUpTestData",
      "type": "function",
      "name": "ModelMultipleChoiceFieldTests.setUpTestData",
      "file": "tests/model_forms/tests.py",
      "line": 1594
    },
    {
      "id": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_model_multiple_choice_field",
      "type": "function",
      "name": "ModelMultipleChoiceFieldTests.test_model_multiple_choice_field",
      "file": "tests/model_forms/tests.py",
      "line": 1599
    },
    {
      "id": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_model_multiple_choice_required_false",
      "type": "function",
      "name": "ModelMultipleChoiceFieldTests.test_model_multiple_choice_required_false",
      "file": "tests/model_forms/tests.py",
      "line": 1653
    },
    {
      "id": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_model_multiple_choice_number_of_queries",
      "type": "function",
      "name": "ModelMultipleChoiceFieldTests.test_model_multiple_choice_number_of_queries",
      "file": "tests/model_forms/tests.py",
      "line": 1682
    },
    {
      "id": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_model_multiple_choice_run_validators",
      "type": "function",
      "name": "ModelMultipleChoiceFieldTests.test_model_multiple_choice_run_validators",
      "file": "tests/model_forms/tests.py",
      "line": 1691
    },
    {
      "id": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_model_multiple_choice_run_validators.my_validator",
      "type": "function",
      "name": "ModelMultipleChoiceFieldTests.test_model_multiple_choice_run_validators.my_validator",
      "file": "tests/model_forms/tests.py",
      "line": 1700
    },
    {
      "id": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_model_multiple_choice_show_hidden_initial",
      "type": "function",
      "name": "ModelMultipleChoiceFieldTests.test_model_multiple_choice_show_hidden_initial",
      "file": "tests/model_forms/tests.py",
      "line": 1707
    },
    {
      "id": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_model_multiple_choice_show_hidden_initial.WriterForm",
      "type": "class",
      "name": "ModelMultipleChoiceFieldTests.test_model_multiple_choice_show_hidden_initial.WriterForm",
      "file": "tests/model_forms/tests.py",
      "line": 1711
    },
    {
      "id": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_model_multiple_choice_field_22745",
      "type": "function",
      "name": "ModelMultipleChoiceFieldTests.test_model_multiple_choice_field_22745",
      "file": "tests/model_forms/tests.py",
      "line": 1737
    },
    {
      "id": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_model_multiple_choice_field_22745.ModelMultipleChoiceForm",
      "type": "class",
      "name": "ModelMultipleChoiceFieldTests.test_model_multiple_choice_field_22745.ModelMultipleChoiceForm",
      "file": "tests/model_forms/tests.py",
      "line": 1743
    },
    {
      "id": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_show_hidden_initial_changed_queries_efficiently",
      "type": "function",
      "name": "ModelMultipleChoiceFieldTests.test_show_hidden_initial_changed_queries_efficiently",
      "file": "tests/model_forms/tests.py",
      "line": 1752
    },
    {
      "id": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_show_hidden_initial_changed_queries_efficiently.WriterForm",
      "type": "class",
      "name": "ModelMultipleChoiceFieldTests.test_show_hidden_initial_changed_queries_efficiently.WriterForm",
      "file": "tests/model_forms/tests.py",
      "line": 1753
    },
    {
      "id": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_clean_does_deduplicate_values",
      "type": "function",
      "name": "ModelMultipleChoiceFieldTests.test_clean_does_deduplicate_values",
      "file": "tests/model_forms/tests.py",
      "line": 1763
    },
    {
      "id": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_clean_does_deduplicate_values.WriterForm",
      "type": "class",
      "name": "ModelMultipleChoiceFieldTests.test_clean_does_deduplicate_values.WriterForm",
      "file": "tests/model_forms/tests.py",
      "line": 1764
    },
    {
      "id": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_to_field_name_with_initial_data",
      "type": "function",
      "name": "ModelMultipleChoiceFieldTests.test_to_field_name_with_initial_data",
      "file": "tests/model_forms/tests.py",
      "line": 1773
    },
    {
      "id": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_to_field_name_with_initial_data.ArticleCategoriesForm",
      "type": "class",
      "name": "ModelMultipleChoiceFieldTests.test_to_field_name_with_initial_data.ArticleCategoriesForm",
      "file": "tests/model_forms/tests.py",
      "line": 1774
    },
    {
      "id": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_to_field_name_with_initial_data.ArticleCategoriesForm.Meta",
      "type": "class",
      "name": "ModelMultipleChoiceFieldTests.test_to_field_name_with_initial_data.ArticleCategoriesForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 1777
    },
    {
      "id": "tests/model_forms/tests.py:ModelOneToOneFieldTests",
      "type": "class",
      "name": "ModelOneToOneFieldTests",
      "file": "tests/model_forms/tests.py",
      "line": 1793
    },
    {
      "id": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_modelform_onetoonefield",
      "type": "function",
      "name": "ModelOneToOneFieldTests.test_modelform_onetoonefield",
      "file": "tests/model_forms/tests.py",
      "line": 1794
    },
    {
      "id": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_modelform_onetoonefield.ImprovedArticleForm",
      "type": "class",
      "name": "ModelOneToOneFieldTests.test_modelform_onetoonefield.ImprovedArticleForm",
      "file": "tests/model_forms/tests.py",
      "line": 1795
    },
    {
      "id": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_modelform_onetoonefield.ImprovedArticleForm.Meta",
      "type": "class",
      "name": "ModelOneToOneFieldTests.test_modelform_onetoonefield.ImprovedArticleForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 1796
    },
    {
      "id": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_modelform_onetoonefield.ImprovedArticleWithParentLinkForm",
      "type": "class",
      "name": "ModelOneToOneFieldTests.test_modelform_onetoonefield.ImprovedArticleWithParentLinkForm",
      "file": "tests/model_forms/tests.py",
      "line": 1800
    },
    {
      "id": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_modelform_onetoonefield.ImprovedArticleWithParentLinkForm.Meta",
      "type": "class",
      "name": "ModelOneToOneFieldTests.test_modelform_onetoonefield.ImprovedArticleWithParentLinkForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 1801
    },
    {
      "id": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_modelform_subclassed_model",
      "type": "function",
      "name": "ModelOneToOneFieldTests.test_modelform_subclassed_model",
      "file": "tests/model_forms/tests.py",
      "line": 1808
    },
    {
      "id": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_modelform_subclassed_model.BetterWriterForm",
      "type": "class",
      "name": "ModelOneToOneFieldTests.test_modelform_subclassed_model.BetterWriterForm",
      "file": "tests/model_forms/tests.py",
      "line": 1809
    },
    {
      "id": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_modelform_subclassed_model.BetterWriterForm.Meta",
      "type": "class",
      "name": "ModelOneToOneFieldTests.test_modelform_subclassed_model.BetterWriterForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 1810
    },
    {
      "id": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_onetoonefield",
      "type": "function",
      "name": "ModelOneToOneFieldTests.test_onetoonefield",
      "file": "tests/model_forms/tests.py",
      "line": 1823
    },
    {
      "id": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_onetoonefield.WriterProfileForm",
      "type": "class",
      "name": "ModelOneToOneFieldTests.test_onetoonefield.WriterProfileForm",
      "file": "tests/model_forms/tests.py",
      "line": 1824
    },
    {
      "id": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_onetoonefield.WriterProfileForm.Meta",
      "type": "class",
      "name": "ModelOneToOneFieldTests.test_onetoonefield.WriterProfileForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 1825
    },
    {
      "id": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_assignment_of_none",
      "type": "function",
      "name": "ModelOneToOneFieldTests.test_assignment_of_none",
      "file": "tests/model_forms/tests.py",
      "line": 1868
    },
    {
      "id": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_assignment_of_none.AuthorForm",
      "type": "class",
      "name": "ModelOneToOneFieldTests.test_assignment_of_none.AuthorForm",
      "file": "tests/model_forms/tests.py",
      "line": 1869
    },
    {
      "id": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_assignment_of_none.AuthorForm.Meta",
      "type": "class",
      "name": "ModelOneToOneFieldTests.test_assignment_of_none.AuthorForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 1870
    },
    {
      "id": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_assignment_of_none_null_false",
      "type": "function",
      "name": "ModelOneToOneFieldTests.test_assignment_of_none_null_false",
      "file": "tests/model_forms/tests.py",
      "line": 1885
    },
    {
      "id": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_assignment_of_none_null_false.AuthorForm",
      "type": "class",
      "name": "ModelOneToOneFieldTests.test_assignment_of_none_null_false.AuthorForm",
      "file": "tests/model_forms/tests.py",
      "line": 1886
    },
    {
      "id": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_assignment_of_none_null_false.AuthorForm.Meta",
      "type": "class",
      "name": "ModelOneToOneFieldTests.test_assignment_of_none_null_false.AuthorForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 1887
    },
    {
      "id": "tests/model_forms/tests.py:FileAndImageFieldTests",
      "type": "class",
      "name": "FileAndImageFieldTests",
      "file": "tests/model_forms/tests.py",
      "line": 1897
    },
    {
      "id": "tests/model_forms/tests.py:FileAndImageFieldTests.test_clean_false",
      "type": "function",
      "name": "FileAndImageFieldTests.test_clean_false",
      "file": "tests/model_forms/tests.py",
      "line": 1898
    },
    {
      "id": "tests/model_forms/tests.py:FileAndImageFieldTests.test_clean_false_required",
      "type": "function",
      "name": "FileAndImageFieldTests.test_clean_false_required",
      "file": "tests/model_forms/tests.py",
      "line": 1908
    },
    {
      "id": "tests/model_forms/tests.py:FileAndImageFieldTests.test_full_clear",
      "type": "function",
      "name": "FileAndImageFieldTests.test_full_clear",
      "file": "tests/model_forms/tests.py",
      "line": 1919
    },
    {
      "id": "tests/model_forms/tests.py:FileAndImageFieldTests.test_full_clear.DocumentForm",
      "type": "class",
      "name": "FileAndImageFieldTests.test_full_clear.DocumentForm",
      "file": "tests/model_forms/tests.py",
      "line": 1924
    },
    {
      "id": "tests/model_forms/tests.py:FileAndImageFieldTests.test_full_clear.DocumentForm.Meta",
      "type": "class",
      "name": "FileAndImageFieldTests.test_full_clear.DocumentForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 1925
    },
    {
      "id": "tests/model_forms/tests.py:FileAndImageFieldTests.test_clear_and_file_contradiction",
      "type": "function",
      "name": "FileAndImageFieldTests.test_clear_and_file_contradiction",
      "file": "tests/model_forms/tests.py",
      "line": 1942
    },
    {
      "id": "tests/model_forms/tests.py:FileAndImageFieldTests.test_clear_and_file_contradiction.DocumentForm",
      "type": "class",
      "name": "FileAndImageFieldTests.test_clear_and_file_contradiction.DocumentForm",
      "file": "tests/model_forms/tests.py",
      "line": 1948
    },
    {
      "id": "tests/model_forms/tests.py:FileAndImageFieldTests.test_clear_and_file_contradiction.DocumentForm.Meta",
      "type": "class",
      "name": "FileAndImageFieldTests.test_clear_and_file_contradiction.DocumentForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 1949
    },
    {
      "id": "tests/model_forms/tests.py:FileAndImageFieldTests.test_render_empty_file_field",
      "type": "function",
      "name": "FileAndImageFieldTests.test_render_empty_file_field",
      "file": "tests/model_forms/tests.py",
      "line": 1968
    },
    {
      "id": "tests/model_forms/tests.py:FileAndImageFieldTests.test_render_empty_file_field.DocumentForm",
      "type": "class",
      "name": "FileAndImageFieldTests.test_render_empty_file_field.DocumentForm",
      "file": "tests/model_forms/tests.py",
      "line": 1969
    },
    {
      "id": "tests/model_forms/tests.py:FileAndImageFieldTests.test_render_empty_file_field.DocumentForm.Meta",
      "type": "class",
      "name": "FileAndImageFieldTests.test_render_empty_file_field.DocumentForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 1970
    },
    {
      "id": "tests/model_forms/tests.py:FileAndImageFieldTests.test_file_field_data",
      "type": "function",
      "name": "FileAndImageFieldTests.test_file_field_data",
      "file": "tests/model_forms/tests.py",
      "line": 1981
    },
    {
      "id": "tests/model_forms/tests.py:FileAndImageFieldTests.test_filefield_required_false",
      "type": "function",
      "name": "FileAndImageFieldTests.test_filefield_required_false",
      "file": "tests/model_forms/tests.py",
      "line": 2041
    },
    {
      "id": "tests/model_forms/tests.py:FileAndImageFieldTests.test_custom_file_field_save",
      "type": "function",
      "name": "FileAndImageFieldTests.test_custom_file_field_save",
      "file": "tests/model_forms/tests.py",
      "line": 2070
    },
    {
      "id": "tests/model_forms/tests.py:FileAndImageFieldTests.test_custom_file_field_save.CFFForm",
      "type": "class",
      "name": "FileAndImageFieldTests.test_custom_file_field_save.CFFForm",
      "file": "tests/model_forms/tests.py",
      "line": 2074
    },
    {
      "id": "tests/model_forms/tests.py:FileAndImageFieldTests.test_custom_file_field_save.CFFForm.Meta",
      "type": "class",
      "name": "FileAndImageFieldTests.test_custom_file_field_save.CFFForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 2075
    },
    {
      "id": "tests/model_forms/tests.py:FileAndImageFieldTests.test_file_field_multiple_save",
      "type": "function",
      "name": "FileAndImageFieldTests.test_file_field_multiple_save",
      "file": "tests/model_forms/tests.py",
      "line": 2084
    },
    {
      "id": "tests/model_forms/tests.py:FileAndImageFieldTests.test_file_field_multiple_save.PhotoForm",
      "type": "class",
      "name": "FileAndImageFieldTests.test_file_field_multiple_save.PhotoForm",
      "file": "tests/model_forms/tests.py",
      "line": 2089
    },
    {
      "id": "tests/model_forms/tests.py:FileAndImageFieldTests.test_file_field_multiple_save.PhotoForm.Meta",
      "type": "class",
      "name": "FileAndImageFieldTests.test_file_field_multiple_save.PhotoForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 2090
    },
    {
      "id": "tests/model_forms/tests.py:FileAndImageFieldTests.test_file_path_field_blank",
      "type": "function",
      "name": "FileAndImageFieldTests.test_file_path_field_blank",
      "file": "tests/model_forms/tests.py",
      "line": 2114
    },
    {
      "id": "tests/model_forms/tests.py:FileAndImageFieldTests.test_file_path_field_blank.FPForm",
      "type": "class",
      "name": "FileAndImageFieldTests.test_file_path_field_blank.FPForm",
      "file": "tests/model_forms/tests.py",
      "line": 2116
    },
    {
      "id": "tests/model_forms/tests.py:FileAndImageFieldTests.test_file_path_field_blank.FPForm.Meta",
      "type": "class",
      "name": "FileAndImageFieldTests.test_file_path_field_blank.FPForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 2117
    },
    {
      "id": "tests/model_forms/tests.py:FileAndImageFieldTests.test_image_field",
      "type": "function",
      "name": "FileAndImageFieldTests.test_image_field",
      "file": "tests/model_forms/tests.py",
      "line": 2125
    },
    {
      "id": "tests/model_forms/tests.py:ModelOtherFieldTests",
      "type": "class",
      "name": "ModelOtherFieldTests",
      "file": "tests/model_forms/tests.py",
      "line": 2281
    },
    {
      "id": "tests/model_forms/tests.py:ModelOtherFieldTests.test_big_integer_field",
      "type": "function",
      "name": "ModelOtherFieldTests.test_big_integer_field",
      "file": "tests/model_forms/tests.py",
      "line": 2282
    },
    {
      "id": "tests/model_forms/tests.py:ModelOtherFieldTests.test_url_on_modelform",
      "type": "function",
      "name": "ModelOtherFieldTests.test_url_on_modelform",
      "file": "tests/model_forms/tests.py",
      "line": 2297
    },
    {
      "id": "tests/model_forms/tests.py:ModelOtherFieldTests.test_url_on_modelform.HomepageForm",
      "type": "class",
      "name": "ModelOtherFieldTests.test_url_on_modelform.HomepageForm",
      "file": "tests/model_forms/tests.py",
      "line": 2299
    },
    {
      "id": "tests/model_forms/tests.py:ModelOtherFieldTests.test_url_on_modelform.HomepageForm.Meta",
      "type": "class",
      "name": "ModelOtherFieldTests.test_url_on_modelform.HomepageForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 2300
    },
    {
      "id": "tests/model_forms/tests.py:ModelOtherFieldTests.test_modelform_non_editable_field",
      "type": "function",
      "name": "ModelOtherFieldTests.test_modelform_non_editable_field",
      "file": "tests/model_forms/tests.py",
      "line": 2318
    },
    {
      "id": "tests/model_forms/tests.py:ModelOtherFieldTests.test_modelform_non_editable_field.InvalidArticleForm",
      "type": "class",
      "name": "ModelOtherFieldTests.test_modelform_non_editable_field.InvalidArticleForm",
      "file": "tests/model_forms/tests.py",
      "line": 2328
    },
    {
      "id": "tests/model_forms/tests.py:ModelOtherFieldTests.test_modelform_non_editable_field.InvalidArticleForm.Meta",
      "type": "class",
      "name": "ModelOtherFieldTests.test_modelform_non_editable_field.InvalidArticleForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 2329
    },
    {
      "id": "tests/model_forms/tests.py:ModelOtherFieldTests.test_http_prefixing",
      "type": "function",
      "name": "ModelOtherFieldTests.test_http_prefixing",
      "file": "tests/model_forms/tests.py",
      "line": 2333
    },
    {
      "id": "tests/model_forms/tests.py:ModelOtherFieldTests.test_http_prefixing.HomepageForm",
      "type": "class",
      "name": "ModelOtherFieldTests.test_http_prefixing.HomepageForm",
      "file": "tests/model_forms/tests.py",
      "line": 2337
    },
    {
      "id": "tests/model_forms/tests.py:ModelOtherFieldTests.test_http_prefixing.HomepageForm.Meta",
      "type": "class",
      "name": "ModelOtherFieldTests.test_http_prefixing.HomepageForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 2338
    },
    {
      "id": "tests/model_forms/tests.py:OtherModelFormTests",
      "type": "class",
      "name": "OtherModelFormTests",
      "file": "tests/model_forms/tests.py",
      "line": 2351
    },
    {
      "id": "tests/model_forms/tests.py:OtherModelFormTests.test_media_on_modelform",
      "type": "function",
      "name": "OtherModelFormTests.test_media_on_modelform",
      "file": "tests/model_forms/tests.py",
      "line": 2352
    },
    {
      "id": "tests/model_forms/tests.py:OtherModelFormTests.test_choices_type",
      "type": "function",
      "name": "OtherModelFormTests.test_choices_type",
      "file": "tests/model_forms/tests.py",
      "line": 2362
    },
    {
      "id": "tests/model_forms/tests.py:OtherModelFormTests.test_prefetch_related_queryset",
      "type": "function",
      "name": "OtherModelFormTests.test_prefetch_related_queryset",
      "file": "tests/model_forms/tests.py",
      "line": 2372
    },
    {
      "id": "tests/model_forms/tests.py:OtherModelFormTests.test_prefetch_related_queryset.ColorModelChoiceField",
      "type": "class",
      "name": "OtherModelFormTests.test_prefetch_related_queryset.ColorModelChoiceField",
      "file": "tests/model_forms/tests.py",
      "line": 2383
    },
    {
      "id": "tests/model_forms/tests.py:OtherModelFormTests.test_prefetch_related_queryset.ColorModelChoiceField.label_from_instance",
      "type": "function",
      "name": "OtherModelFormTests.test_prefetch_related_queryset.ColorModelChoiceField.label_from_instance",
      "file": "tests/model_forms/tests.py",
      "line": 2384
    },
    {
      "id": "tests/model_forms/tests.py:OtherModelFormTests.test_foreignkeys_which_use_to_field",
      "type": "function",
      "name": "OtherModelFormTests.test_foreignkeys_which_use_to_field",
      "file": "tests/model_forms/tests.py",
      "line": 2395
    },
    {
      "id": "tests/model_forms/tests.py:OtherModelFormTests.test_foreignkeys_which_use_to_field.CategoryForm",
      "type": "class",
      "name": "OtherModelFormTests.test_foreignkeys_which_use_to_field.CategoryForm",
      "file": "tests/model_forms/tests.py",
      "line": 2420
    },
    {
      "id": "tests/model_forms/tests.py:OtherModelFormTests.test_foreignkeys_which_use_to_field.CategoryForm.Meta",
      "type": "class",
      "name": "OtherModelFormTests.test_foreignkeys_which_use_to_field.CategoryForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 2423
    },
    {
      "id": "tests/model_forms/tests.py:OtherModelFormTests.test_model_field_that_returns_none_to_exclude_itself_with_explicit_fields",
      "type": "function",
      "name": "OtherModelFormTests.test_model_field_that_returns_none_to_exclude_itself_with_explicit_fields",
      "file": "tests/model_forms/tests.py",
      "line": 2447
    },
    {
      "id": "tests/model_forms/tests.py:OtherModelFormTests.test_iterable_model_m2m",
      "type": "function",
      "name": "OtherModelFormTests.test_iterable_model_m2m",
      "file": "tests/model_forms/tests.py",
      "line": 2455
    },
    {
      "id": "tests/model_forms/tests.py:OtherModelFormTests.test_iterable_model_m2m.ColourfulItemForm",
      "type": "class",
      "name": "OtherModelFormTests.test_iterable_model_m2m.ColourfulItemForm",
      "file": "tests/model_forms/tests.py",
      "line": 2456
    },
    {
      "id": "tests/model_forms/tests.py:OtherModelFormTests.test_iterable_model_m2m.ColourfulItemForm.Meta",
      "type": "class",
      "name": "OtherModelFormTests.test_iterable_model_m2m.ColourfulItemForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 2457
    },
    {
      "id": "tests/model_forms/tests.py:OtherModelFormTests.test_callable_field_default",
      "type": "function",
      "name": "OtherModelFormTests.test_callable_field_default",
      "file": "tests/model_forms/tests.py",
      "line": 2473
    },
    {
      "id": "tests/model_forms/tests.py:OtherModelFormTests.test_callable_field_default.PublicationDefaultsForm",
      "type": "class",
      "name": "OtherModelFormTests.test_callable_field_default.PublicationDefaultsForm",
      "file": "tests/model_forms/tests.py",
      "line": 2474
    },
    {
      "id": "tests/model_forms/tests.py:OtherModelFormTests.test_callable_field_default.PublicationDefaultsForm.Meta",
      "type": "class",
      "name": "OtherModelFormTests.test_callable_field_default.PublicationDefaultsForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 2475
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormCustomErrorTests",
      "type": "class",
      "name": "ModelFormCustomErrorTests",
      "file": "tests/model_forms/tests.py",
      "line": 2514
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormCustomErrorTests.test_custom_error_messages",
      "type": "function",
      "name": "ModelFormCustomErrorTests.test_custom_error_messages",
      "file": "tests/model_forms/tests.py",
      "line": 2515
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormCustomErrorTests.test_model_clean_error_messages",
      "type": "function",
      "name": "ModelFormCustomErrorTests.test_model_clean_error_messages",
      "file": "tests/model_forms/tests.py",
      "line": 2527
    },
    {
      "id": "tests/model_forms/tests.py:CustomCleanTests",
      "type": "class",
      "name": "CustomCleanTests",
      "file": "tests/model_forms/tests.py",
      "line": 2548
    },
    {
      "id": "tests/model_forms/tests.py:CustomCleanTests.test_override_clean",
      "type": "function",
      "name": "CustomCleanTests.test_override_clean",
      "file": "tests/model_forms/tests.py",
      "line": 2549
    },
    {
      "id": "tests/model_forms/tests.py:CustomCleanTests.test_override_clean.TripleFormWithCleanOverride",
      "type": "class",
      "name": "CustomCleanTests.test_override_clean.TripleFormWithCleanOverride",
      "file": "tests/model_forms/tests.py",
      "line": 2554
    },
    {
      "id": "tests/model_forms/tests.py:CustomCleanTests.test_override_clean.TripleFormWithCleanOverride.Meta",
      "type": "class",
      "name": "CustomCleanTests.test_override_clean.TripleFormWithCleanOverride.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 2555
    },
    {
      "id": "tests/model_forms/tests.py:CustomCleanTests.test_override_clean.TripleFormWithCleanOverride.clean",
      "type": "function",
      "name": "CustomCleanTests.test_override_clean.TripleFormWithCleanOverride.clean",
      "file": "tests/model_forms/tests.py",
      "line": 2559
    },
    {
      "id": "tests/model_forms/tests.py:CustomCleanTests.test_model_form_clean_applies_to_model",
      "type": "function",
      "name": "CustomCleanTests.test_model_form_clean_applies_to_model",
      "file": "tests/model_forms/tests.py",
      "line": 2570
    },
    {
      "id": "tests/model_forms/tests.py:CustomCleanTests.test_model_form_clean_applies_to_model.CategoryForm",
      "type": "class",
      "name": "CustomCleanTests.test_model_form_clean_applies_to_model.CategoryForm",
      "file": "tests/model_forms/tests.py",
      "line": 2575
    },
    {
      "id": "tests/model_forms/tests.py:CustomCleanTests.test_model_form_clean_applies_to_model.CategoryForm.Meta",
      "type": "class",
      "name": "CustomCleanTests.test_model_form_clean_applies_to_model.CategoryForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 2576
    },
    {
      "id": "tests/model_forms/tests.py:CustomCleanTests.test_model_form_clean_applies_to_model.CategoryForm.clean",
      "type": "function",
      "name": "CustomCleanTests.test_model_form_clean_applies_to_model.CategoryForm.clean",
      "file": "tests/model_forms/tests.py",
      "line": 2580
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormInheritanceTests",
      "type": "class",
      "name": "ModelFormInheritanceTests",
      "file": "tests/model_forms/tests.py",
      "line": 2590
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_form_subclass_inheritance",
      "type": "function",
      "name": "ModelFormInheritanceTests.test_form_subclass_inheritance",
      "file": "tests/model_forms/tests.py",
      "line": 2591
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_form_subclass_inheritance.Form",
      "type": "class",
      "name": "ModelFormInheritanceTests.test_form_subclass_inheritance.Form",
      "file": "tests/model_forms/tests.py",
      "line": 2592
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_form_subclass_inheritance.ModelForm",
      "type": "class",
      "name": "ModelFormInheritanceTests.test_form_subclass_inheritance.ModelForm",
      "file": "tests/model_forms/tests.py",
      "line": 2595
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_form_subclass_inheritance.ModelForm.Meta",
      "type": "class",
      "name": "ModelFormInheritanceTests.test_form_subclass_inheritance.ModelForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 2596
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal",
      "type": "function",
      "name": "ModelFormInheritanceTests.test_field_removal",
      "file": "tests/model_forms/tests.py",
      "line": 2602
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal.ModelForm",
      "type": "class",
      "name": "ModelFormInheritanceTests.test_field_removal.ModelForm",
      "file": "tests/model_forms/tests.py",
      "line": 2603
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal.ModelForm.Meta",
      "type": "class",
      "name": "ModelFormInheritanceTests.test_field_removal.ModelForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 2604
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal.Mixin",
      "type": "class",
      "name": "ModelFormInheritanceTests.test_field_removal.Mixin",
      "file": "tests/model_forms/tests.py",
      "line": 2608
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal.Form",
      "type": "class",
      "name": "ModelFormInheritanceTests.test_field_removal.Form",
      "file": "tests/model_forms/tests.py",
      "line": 2611
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal.Form2",
      "type": "class",
      "name": "ModelFormInheritanceTests.test_field_removal.Form2",
      "file": "tests/model_forms/tests.py",
      "line": 2614
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal_name_clashes",
      "type": "function",
      "name": "ModelFormInheritanceTests.test_field_removal_name_clashes",
      "file": "tests/model_forms/tests.py",
      "line": 2625
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal_name_clashes.MyForm",
      "type": "class",
      "name": "ModelFormInheritanceTests.test_field_removal_name_clashes.MyForm",
      "file": "tests/model_forms/tests.py",
      "line": 2630
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal_name_clashes.MyForm.Meta",
      "type": "class",
      "name": "ModelFormInheritanceTests.test_field_removal_name_clashes.MyForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 2633
    },
    {
      "id": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal_name_clashes.SubForm",
      "type": "class",
      "name": "ModelFormInheritanceTests.test_field_removal_name_clashes.SubForm",
      "file": "tests/model_forms/tests.py",
      "line": 2637
    },
    {
      "id": "tests/model_forms/tests.py:StumpJokeForm",
      "type": "class",
      "name": "StumpJokeForm",
      "file": "tests/model_forms/tests.py",
      "line": 2646
    },
    {
      "id": "tests/model_forms/tests.py:StumpJokeForm.Meta",
      "type": "class",
      "name": "StumpJokeForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 2647
    },
    {
      "id": "tests/model_forms/tests.py:CustomFieldWithQuerysetButNoLimitChoicesTo",
      "type": "class",
      "name": "CustomFieldWithQuerysetButNoLimitChoicesTo",
      "file": "tests/model_forms/tests.py",
      "line": 2652
    },
    {
      "id": "tests/model_forms/tests.py:StumpJokeWithCustomFieldForm",
      "type": "class",
      "name": "StumpJokeWithCustomFieldForm",
      "file": "tests/model_forms/tests.py",
      "line": 2656
    },
    {
      "id": "tests/model_forms/tests.py:StumpJokeWithCustomFieldForm.Meta",
      "type": "class",
      "name": "StumpJokeWithCustomFieldForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 2659
    },
    {
      "id": "tests/model_forms/tests.py:LimitChoicesToTests",
      "type": "class",
      "name": "LimitChoicesToTests",
      "file": "tests/model_forms/tests.py",
      "line": 2664
    },
    {
      "id": "tests/model_forms/tests.py:LimitChoicesToTests.setUpTestData",
      "type": "function",
      "name": "LimitChoicesToTests.setUpTestData",
      "file": "tests/model_forms/tests.py",
      "line": 2669
    },
    {
      "id": "tests/model_forms/tests.py:LimitChoicesToTests.test_limit_choices_to_callable_for_fk_rel",
      "type": "function",
      "name": "LimitChoicesToTests.test_limit_choices_to_callable_for_fk_rel",
      "file": "tests/model_forms/tests.py",
      "line": 2679
    },
    {
      "id": "tests/model_forms/tests.py:LimitChoicesToTests.test_limit_choices_to_callable_for_m2m_rel",
      "type": "function",
      "name": "LimitChoicesToTests.test_limit_choices_to_callable_for_m2m_rel",
      "file": "tests/model_forms/tests.py",
      "line": 2686
    },
    {
      "id": "tests/model_forms/tests.py:LimitChoicesToTests.test_custom_field_with_queryset_but_no_limit_choices_to",
      "type": "function",
      "name": "LimitChoicesToTests.test_custom_field_with_queryset_but_no_limit_choices_to",
      "file": "tests/model_forms/tests.py",
      "line": 2693
    },
    {
      "id": "tests/model_forms/tests.py:LimitChoicesToTests.test_fields_for_model_applies_limit_choices_to",
      "type": "function",
      "name": "LimitChoicesToTests.test_fields_for_model_applies_limit_choices_to",
      "file": "tests/model_forms/tests.py",
      "line": 2701
    },
    {
      "id": "tests/model_forms/tests.py:LimitChoicesToTests.test_callable_called_each_time_form_is_instantiated",
      "type": "function",
      "name": "LimitChoicesToTests.test_callable_called_each_time_form_is_instantiated",
      "file": "tests/model_forms/tests.py",
      "line": 2705
    },
    {
      "id": "tests/model_forms/tests.py:FormFieldCallbackTests",
      "type": "class",
      "name": "FormFieldCallbackTests",
      "file": "tests/model_forms/tests.py",
      "line": 2716
    },
    {
      "id": "tests/model_forms/tests.py:FormFieldCallbackTests.test_baseform_with_widgets_in_meta",
      "type": "function",
      "name": "FormFieldCallbackTests.test_baseform_with_widgets_in_meta",
      "file": "tests/model_forms/tests.py",
      "line": 2718
    },
    {
      "id": "tests/model_forms/tests.py:FormFieldCallbackTests.test_baseform_with_widgets_in_meta.BaseForm",
      "type": "class",
      "name": "FormFieldCallbackTests.test_baseform_with_widgets_in_meta.BaseForm",
      "file": "tests/model_forms/tests.py",
      "line": 2722
    },
    {
      "id": "tests/model_forms/tests.py:FormFieldCallbackTests.test_baseform_with_widgets_in_meta.BaseForm.Meta",
      "type": "class",
      "name": "FormFieldCallbackTests.test_baseform_with_widgets_in_meta.BaseForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 2723
    },
    {
      "id": "tests/model_forms/tests.py:FormFieldCallbackTests.test_factory_with_widget_argument",
      "type": "function",
      "name": "FormFieldCallbackTests.test_factory_with_widget_argument",
      "file": "tests/model_forms/tests.py",
      "line": 2731
    },
    {
      "id": "tests/model_forms/tests.py:FormFieldCallbackTests.test_modelform_factory_without_fields",
      "type": "function",
      "name": "FormFieldCallbackTests.test_modelform_factory_without_fields",
      "file": "tests/model_forms/tests.py",
      "line": 2745
    },
    {
      "id": "tests/model_forms/tests.py:FormFieldCallbackTests.test_modelform_factory_with_all_fields",
      "type": "function",
      "name": "FormFieldCallbackTests.test_modelform_factory_with_all_fields",
      "file": "tests/model_forms/tests.py",
      "line": 2754
    },
    {
      "id": "tests/model_forms/tests.py:FormFieldCallbackTests.test_custom_callback",
      "type": "function",
      "name": "FormFieldCallbackTests.test_custom_callback",
      "file": "tests/model_forms/tests.py",
      "line": 2759
    },
    {
      "id": "tests/model_forms/tests.py:FormFieldCallbackTests.test_custom_callback.callback",
      "type": "function",
      "name": "FormFieldCallbackTests.test_custom_callback.callback",
      "file": "tests/model_forms/tests.py",
      "line": 2763
    },
    {
      "id": "tests/model_forms/tests.py:FormFieldCallbackTests.test_custom_callback.BaseForm",
      "type": "class",
      "name": "FormFieldCallbackTests.test_custom_callback.BaseForm",
      "file": "tests/model_forms/tests.py",
      "line": 2769
    },
    {
      "id": "tests/model_forms/tests.py:FormFieldCallbackTests.test_custom_callback.BaseForm.Meta",
      "type": "class",
      "name": "FormFieldCallbackTests.test_custom_callback.BaseForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 2770
    },
    {
      "id": "tests/model_forms/tests.py:FormFieldCallbackTests.test_bad_callback",
      "type": "function",
      "name": "FormFieldCallbackTests.test_bad_callback",
      "file": "tests/model_forms/tests.py",
      "line": 2780
    },
    {
      "id": "tests/model_forms/tests.py:FormFieldCallbackTests.test_inherit_after_custom_callback",
      "type": "function",
      "name": "FormFieldCallbackTests.test_inherit_after_custom_callback",
      "file": "tests/model_forms/tests.py",
      "line": 2785
    },
    {
      "id": "tests/model_forms/tests.py:FormFieldCallbackTests.test_inherit_after_custom_callback.callback",
      "type": "function",
      "name": "FormFieldCallbackTests.test_inherit_after_custom_callback.callback",
      "file": "tests/model_forms/tests.py",
      "line": 2786
    },
    {
      "id": "tests/model_forms/tests.py:FormFieldCallbackTests.test_inherit_after_custom_callback.BaseForm",
      "type": "class",
      "name": "FormFieldCallbackTests.test_inherit_after_custom_callback.BaseForm",
      "file": "tests/model_forms/tests.py",
      "line": 2791
    },
    {
      "id": "tests/model_forms/tests.py:FormFieldCallbackTests.test_inherit_after_custom_callback.BaseForm.Meta",
      "type": "class",
      "name": "FormFieldCallbackTests.test_inherit_after_custom_callback.BaseForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 2792
    },
    {
      "id": "tests/model_forms/tests.py:FormFieldCallbackTests.test_inherit_after_custom_callback.InheritedForm",
      "type": "class",
      "name": "FormFieldCallbackTests.test_inherit_after_custom_callback.InheritedForm",
      "file": "tests/model_forms/tests.py",
      "line": 2798
    },
    {
      "id": "tests/model_forms/tests.py:LocalizedModelFormTest",
      "type": "class",
      "name": "LocalizedModelFormTest",
      "file": "tests/model_forms/tests.py",
      "line": 2808
    },
    {
      "id": "tests/model_forms/tests.py:LocalizedModelFormTest.test_model_form_applies_localize_to_some_fields",
      "type": "function",
      "name": "LocalizedModelFormTest.test_model_form_applies_localize_to_some_fields",
      "file": "tests/model_forms/tests.py",
      "line": 2809
    },
    {
      "id": "tests/model_forms/tests.py:LocalizedModelFormTest.test_model_form_applies_localize_to_some_fields.PartiallyLocalizedTripleForm",
      "type": "class",
      "name": "LocalizedModelFormTest.test_model_form_applies_localize_to_some_fields.PartiallyLocalizedTripleForm",
      "file": "tests/model_forms/tests.py",
      "line": 2810
    },
    {
      "id": "tests/model_forms/tests.py:LocalizedModelFormTest.test_model_form_applies_localize_to_some_fields.PartiallyLocalizedTripleForm.Meta",
      "type": "class",
      "name": "LocalizedModelFormTest.test_model_form_applies_localize_to_some_fields.PartiallyLocalizedTripleForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 2811
    },
    {
      "id": "tests/model_forms/tests.py:LocalizedModelFormTest.test_model_form_applies_localize_to_all_fields",
      "type": "function",
      "name": "LocalizedModelFormTest.test_model_form_applies_localize_to_all_fields",
      "file": "tests/model_forms/tests.py",
      "line": 2822
    },
    {
      "id": "tests/model_forms/tests.py:LocalizedModelFormTest.test_model_form_applies_localize_to_all_fields.FullyLocalizedTripleForm",
      "type": "class",
      "name": "LocalizedModelFormTest.test_model_form_applies_localize_to_all_fields.FullyLocalizedTripleForm",
      "file": "tests/model_forms/tests.py",
      "line": 2823
    },
    {
      "id": "tests/model_forms/tests.py:LocalizedModelFormTest.test_model_form_applies_localize_to_all_fields.FullyLocalizedTripleForm.Meta",
      "type": "class",
      "name": "LocalizedModelFormTest.test_model_form_applies_localize_to_all_fields.FullyLocalizedTripleForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 2824
    },
    {
      "id": "tests/model_forms/tests.py:LocalizedModelFormTest.test_model_form_refuses_arbitrary_string",
      "type": "function",
      "name": "LocalizedModelFormTest.test_model_form_refuses_arbitrary_string",
      "file": "tests/model_forms/tests.py",
      "line": 2835
    },
    {
      "id": "tests/model_forms/tests.py:LocalizedModelFormTest.test_model_form_refuses_arbitrary_string.BrokenLocalizedTripleForm",
      "type": "class",
      "name": "LocalizedModelFormTest.test_model_form_refuses_arbitrary_string.BrokenLocalizedTripleForm",
      "file": "tests/model_forms/tests.py",
      "line": 2841
    },
    {
      "id": "tests/model_forms/tests.py:LocalizedModelFormTest.test_model_form_refuses_arbitrary_string.BrokenLocalizedTripleForm.Meta",
      "type": "class",
      "name": "LocalizedModelFormTest.test_model_form_refuses_arbitrary_string.BrokenLocalizedTripleForm.Meta",
      "file": "tests/model_forms/tests.py",
      "line": 2842
    },
    {
      "id": "tests/model_forms/tests.py:CustomMetaclass",
      "type": "class",
      "name": "CustomMetaclass",
      "file": "tests/model_forms/tests.py",
      "line": 2847
    },
    {
      "id": "tests/model_forms/tests.py:CustomMetaclass.__new__",
      "type": "function",
      "name": "CustomMetaclass.__new__",
      "file": "tests/model_forms/tests.py",
      "line": 2848
    },
    {
      "id": "tests/model_forms/tests.py:CustomMetaclassForm",
      "type": "class",
      "name": "CustomMetaclassForm",
      "file": "tests/model_forms/tests.py",
      "line": 2854
    },
    {
      "id": "tests/model_forms/tests.py:CustomMetaclassTestCase",
      "type": "class",
      "name": "CustomMetaclassTestCase",
      "file": "tests/model_forms/tests.py",
      "line": 2858
    },
    {
      "id": "tests/model_forms/tests.py:CustomMetaclassTestCase.test_modelform_factory_metaclass",
      "type": "function",
      "name": "CustomMetaclassTestCase.test_modelform_factory_metaclass",
      "file": "tests/model_forms/tests.py",
      "line": 2859
    },
    {
      "id": "tests/model_forms/tests.py:StrictAssignmentTests",
      "type": "class",
      "name": "StrictAssignmentTests",
      "file": "tests/model_forms/tests.py",
      "line": 2864
    },
    {
      "id": "tests/model_forms/tests.py:StrictAssignmentTests.test_setattr_raises_validation_error_field_specific",
      "type": "function",
      "name": "StrictAssignmentTests.test_setattr_raises_validation_error_field_specific",
      "file": "tests/model_forms/tests.py",
      "line": 2870
    },
    {
      "id": "tests/model_forms/tests.py:StrictAssignmentTests.test_setattr_raises_validation_error_non_field",
      "type": "function",
      "name": "StrictAssignmentTests.test_setattr_raises_validation_error_non_field",
      "file": "tests/model_forms/tests.py",
      "line": 2885
    },
    {
      "id": "tests/model_forms/tests.py:ModelToDictTests",
      "type": "class",
      "name": "ModelToDictTests",
      "file": "tests/model_forms/tests.py",
      "line": 2902
    },
    {
      "id": "tests/model_forms/tests.py:ModelToDictTests.test_many_to_many",
      "type": "function",
      "name": "ModelToDictTests.test_many_to_many",
      "file": "tests/model_forms/tests.py",
      "line": 2903
    },
    {
      "id": "tests/model_forms/test_uuid.py",
      "type": "file",
      "name": "test_uuid.py",
      "file": "tests/model_forms/test_uuid.py",
      "line": 0
    },
    {
      "id": "tests/model_forms/test_uuid.py:UUIDPKForm",
      "type": "class",
      "name": "UUIDPKForm",
      "file": "tests/model_forms/test_uuid.py",
      "line": 8
    },
    {
      "id": "tests/model_forms/test_uuid.py:UUIDPKForm.Meta",
      "type": "class",
      "name": "UUIDPKForm.Meta",
      "file": "tests/model_forms/test_uuid.py",
      "line": 9
    },
    {
      "id": "tests/model_forms/test_uuid.py:ModelFormBaseTest",
      "type": "class",
      "name": "ModelFormBaseTest",
      "file": "tests/model_forms/test_uuid.py",
      "line": 14
    },
    {
      "id": "tests/model_forms/test_uuid.py:ModelFormBaseTest.test_create_save_error",
      "type": "function",
      "name": "ModelFormBaseTest.test_create_save_error",
      "file": "tests/model_forms/test_uuid.py",
      "line": 15
    },
    {
      "id": "tests/model_forms/test_uuid.py:ModelFormBaseTest.test_update_save_error",
      "type": "function",
      "name": "ModelFormBaseTest.test_update_save_error",
      "file": "tests/model_forms/test_uuid.py",
      "line": 22
    },
    {
      "id": "tests/model_forms/test_uuid.py:ModelFormBaseTest.test_model_multiple_choice_field_uuid_pk",
      "type": "function",
      "name": "ModelFormBaseTest.test_model_multiple_choice_field_uuid_pk",
      "file": "tests/model_forms/test_uuid.py",
      "line": 30
    },
    {
      "id": "tests/fixtures_regress",
      "type": "directory",
      "name": "fixtures_regress",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/fixtures_regress/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/fixtures_regress/models.py",
      "line": 0
    },
    {
      "id": "tests/fixtures_regress/models.py:Animal",
      "type": "class",
      "name": "Animal",
      "file": "tests/fixtures_regress/models.py",
      "line": 5
    },
    {
      "id": "tests/fixtures_regress/models.py:Animal.__str__",
      "type": "function",
      "name": "Animal.__str__",
      "file": "tests/fixtures_regress/models.py",
      "line": 14
    },
    {
      "id": "tests/fixtures_regress/models.py:Plant",
      "type": "class",
      "name": "Plant",
      "file": "tests/fixtures_regress/models.py",
      "line": 18
    },
    {
      "id": "tests/fixtures_regress/models.py:Plant.Meta",
      "type": "class",
      "name": "Plant.Meta",
      "file": "tests/fixtures_regress/models.py",
      "line": 21
    },
    {
      "id": "tests/fixtures_regress/models.py:Stuff",
      "type": "class",
      "name": "Stuff",
      "file": "tests/fixtures_regress/models.py",
      "line": 26
    },
    {
      "id": "tests/fixtures_regress/models.py:Stuff.__str__",
      "type": "function",
      "name": "Stuff.__str__",
      "file": "tests/fixtures_regress/models.py",
      "line": 30
    },
    {
      "id": "tests/fixtures_regress/models.py:Absolute",
      "type": "class",
      "name": "Absolute",
      "file": "tests/fixtures_regress/models.py",
      "line": 34
    },
    {
      "id": "tests/fixtures_regress/models.py:Parent",
      "type": "class",
      "name": "Parent",
      "file": "tests/fixtures_regress/models.py",
      "line": 38
    },
    {
      "id": "tests/fixtures_regress/models.py:Parent.Meta",
      "type": "class",
      "name": "Parent.Meta",
      "file": "tests/fixtures_regress/models.py",
      "line": 41
    },
    {
      "id": "tests/fixtures_regress/models.py:Child",
      "type": "class",
      "name": "Child",
      "file": "tests/fixtures_regress/models.py",
      "line": 45
    },
    {
      "id": "tests/fixtures_regress/models.py:Channel",
      "type": "class",
      "name": "Channel",
      "file": "tests/fixtures_regress/models.py",
      "line": 50
    },
    {
      "id": "tests/fixtures_regress/models.py:Article",
      "type": "class",
      "name": "Article",
      "file": "tests/fixtures_regress/models.py",
      "line": 54
    },
    {
      "id": "tests/fixtures_regress/models.py:Article.Meta",
      "type": "class",
      "name": "Article.Meta",
      "file": "tests/fixtures_regress/models.py",
      "line": 58
    },
    {
      "id": "tests/fixtures_regress/models.py:SpecialArticle",
      "type": "class",
      "name": "SpecialArticle",
      "file": "tests/fixtures_regress/models.py",
      "line": 63
    },
    {
      "id": "tests/fixtures_regress/models.py:CommonFeature",
      "type": "class",
      "name": "CommonFeature",
      "file": "tests/fixtures_regress/models.py",
      "line": 68
    },
    {
      "id": "tests/fixtures_regress/models.py:CommonFeature.Meta",
      "type": "class",
      "name": "CommonFeature.Meta",
      "file": "tests/fixtures_regress/models.py",
      "line": 70
    },
    {
      "id": "tests/fixtures_regress/models.py:Feature",
      "type": "class",
      "name": "Feature",
      "file": "tests/fixtures_regress/models.py",
      "line": 74
    },
    {
      "id": "tests/fixtures_regress/models.py:Widget",
      "type": "class",
      "name": "Widget",
      "file": "tests/fixtures_regress/models.py",
      "line": 79
    },
    {
      "id": "tests/fixtures_regress/models.py:Widget.Meta",
      "type": "class",
      "name": "Widget.Meta",
      "file": "tests/fixtures_regress/models.py",
      "line": 82
    },
    {
      "id": "tests/fixtures_regress/models.py:Widget.__str__",
      "type": "function",
      "name": "Widget.__str__",
      "file": "tests/fixtures_regress/models.py",
      "line": 85
    },
    {
      "id": "tests/fixtures_regress/models.py:WidgetProxy",
      "type": "class",
      "name": "WidgetProxy",
      "file": "tests/fixtures_regress/models.py",
      "line": 89
    },
    {
      "id": "tests/fixtures_regress/models.py:WidgetProxy.Meta",
      "type": "class",
      "name": "WidgetProxy.Meta",
      "file": "tests/fixtures_regress/models.py",
      "line": 90
    },
    {
      "id": "tests/fixtures_regress/models.py:TestManager",
      "type": "class",
      "name": "TestManager",
      "file": "tests/fixtures_regress/models.py",
      "line": 95
    },
    {
      "id": "tests/fixtures_regress/models.py:TestManager.get_by_natural_key",
      "type": "function",
      "name": "TestManager.get_by_natural_key",
      "file": "tests/fixtures_regress/models.py",
      "line": 96
    },
    {
      "id": "tests/fixtures_regress/models.py:Store",
      "type": "class",
      "name": "Store",
      "file": "tests/fixtures_regress/models.py",
      "line": 100
    },
    {
      "id": "tests/fixtures_regress/models.py:Store.Meta",
      "type": "class",
      "name": "Store.Meta",
      "file": "tests/fixtures_regress/models.py",
      "line": 106
    },
    {
      "id": "tests/fixtures_regress/models.py:Store.__str__",
      "type": "function",
      "name": "Store.__str__",
      "file": "tests/fixtures_regress/models.py",
      "line": 109
    },
    {
      "id": "tests/fixtures_regress/models.py:Store.natural_key",
      "type": "function",
      "name": "Store.natural_key",
      "file": "tests/fixtures_regress/models.py",
      "line": 112
    },
    {
      "id": "tests/fixtures_regress/models.py:Person",
      "type": "class",
      "name": "Person",
      "file": "tests/fixtures_regress/models.py",
      "line": 116
    },
    {
      "id": "tests/fixtures_regress/models.py:Person.Meta",
      "type": "class",
      "name": "Person.Meta",
      "file": "tests/fixtures_regress/models.py",
      "line": 121
    },
    {
      "id": "tests/fixtures_regress/models.py:Person.__str__",
      "type": "function",
      "name": "Person.__str__",
      "file": "tests/fixtures_regress/models.py",
      "line": 124
    },
    {
      "id": "tests/fixtures_regress/models.py:Person.natural_key",
      "type": "function",
      "name": "Person.natural_key",
      "file": "tests/fixtures_regress/models.py",
      "line": 129
    },
    {
      "id": "tests/fixtures_regress/models.py:Book",
      "type": "class",
      "name": "Book",
      "file": "tests/fixtures_regress/models.py",
      "line": 134
    },
    {
      "id": "tests/fixtures_regress/models.py:Book.Meta",
      "type": "class",
      "name": "Book.Meta",
      "file": "tests/fixtures_regress/models.py",
      "line": 139
    },
    {
      "id": "tests/fixtures_regress/models.py:Book.__str__",
      "type": "function",
      "name": "Book.__str__",
      "file": "tests/fixtures_regress/models.py",
      "line": 142
    },
    {
      "id": "tests/fixtures_regress/models.py:NKManager",
      "type": "class",
      "name": "NKManager",
      "file": "tests/fixtures_regress/models.py",
      "line": 150
    },
    {
      "id": "tests/fixtures_regress/models.py:NKManager.get_by_natural_key",
      "type": "function",
      "name": "NKManager.get_by_natural_key",
      "file": "tests/fixtures_regress/models.py",
      "line": 151
    },
    {
      "id": "tests/fixtures_regress/models.py:NKChild",
      "type": "class",
      "name": "NKChild",
      "file": "tests/fixtures_regress/models.py",
      "line": 155
    },
    {
      "id": "tests/fixtures_regress/models.py:NKChild.natural_key",
      "type": "function",
      "name": "NKChild.natural_key",
      "file": "tests/fixtures_regress/models.py",
      "line": 159
    },
    {
      "id": "tests/fixtures_regress/models.py:NKChild.__str__",
      "type": "function",
      "name": "NKChild.__str__",
      "file": "tests/fixtures_regress/models.py",
      "line": 162
    },
    {
      "id": "tests/fixtures_regress/models.py:RefToNKChild",
      "type": "class",
      "name": "RefToNKChild",
      "file": "tests/fixtures_regress/models.py",
      "line": 166
    },
    {
      "id": "tests/fixtures_regress/models.py:RefToNKChild.__str__",
      "type": "function",
      "name": "RefToNKChild.__str__",
      "file": "tests/fixtures_regress/models.py",
      "line": 171
    },
    {
      "id": "tests/fixtures_regress/models.py:Circle1",
      "type": "class",
      "name": "Circle1",
      "file": "tests/fixtures_regress/models.py",
      "line": 180
    },
    {
      "id": "tests/fixtures_regress/models.py:Circle1.natural_key",
      "type": "function",
      "name": "Circle1.natural_key",
      "file": "tests/fixtures_regress/models.py",
      "line": 183
    },
    {
      "id": "tests/fixtures_regress/models.py:Circle2",
      "type": "class",
      "name": "Circle2",
      "file": "tests/fixtures_regress/models.py",
      "line": 188
    },
    {
      "id": "tests/fixtures_regress/models.py:Circle2.natural_key",
      "type": "function",
      "name": "Circle2.natural_key",
      "file": "tests/fixtures_regress/models.py",
      "line": 191
    },
    {
      "id": "tests/fixtures_regress/models.py:Circle3",
      "type": "class",
      "name": "Circle3",
      "file": "tests/fixtures_regress/models.py",
      "line": 196
    },
    {
      "id": "tests/fixtures_regress/models.py:Circle3.natural_key",
      "type": "function",
      "name": "Circle3.natural_key",
      "file": "tests/fixtures_regress/models.py",
      "line": 199
    },
    {
      "id": "tests/fixtures_regress/models.py:Circle4",
      "type": "class",
      "name": "Circle4",
      "file": "tests/fixtures_regress/models.py",
      "line": 204
    },
    {
      "id": "tests/fixtures_regress/models.py:Circle4.natural_key",
      "type": "function",
      "name": "Circle4.natural_key",
      "file": "tests/fixtures_regress/models.py",
      "line": 207
    },
    {
      "id": "tests/fixtures_regress/models.py:Circle5",
      "type": "class",
      "name": "Circle5",
      "file": "tests/fixtures_regress/models.py",
      "line": 212
    },
    {
      "id": "tests/fixtures_regress/models.py:Circle5.natural_key",
      "type": "function",
      "name": "Circle5.natural_key",
      "file": "tests/fixtures_regress/models.py",
      "line": 215
    },
    {
      "id": "tests/fixtures_regress/models.py:Circle6",
      "type": "class",
      "name": "Circle6",
      "file": "tests/fixtures_regress/models.py",
      "line": 220
    },
    {
      "id": "tests/fixtures_regress/models.py:Circle6.natural_key",
      "type": "function",
      "name": "Circle6.natural_key",
      "file": "tests/fixtures_regress/models.py",
      "line": 223
    },
    {
      "id": "tests/fixtures_regress/models.py:ExternalDependency",
      "type": "class",
      "name": "ExternalDependency",
      "file": "tests/fixtures_regress/models.py",
      "line": 228
    },
    {
      "id": "tests/fixtures_regress/models.py:ExternalDependency.natural_key",
      "type": "function",
      "name": "ExternalDependency.natural_key",
      "file": "tests/fixtures_regress/models.py",
      "line": 231
    },
    {
      "id": "tests/fixtures_regress/models.py:Thingy",
      "type": "class",
      "name": "Thingy",
      "file": "tests/fixtures_regress/models.py",
      "line": 237
    },
    {
      "id": "tests/fixtures_regress/models.py:M2MToSelf",
      "type": "class",
      "name": "M2MToSelf",
      "file": "tests/fixtures_regress/models.py",
      "line": 241
    },
    {
      "id": "tests/fixtures_regress/models.py:BaseNKModel",
      "type": "class",
      "name": "BaseNKModel",
      "file": "tests/fixtures_regress/models.py",
      "line": 245
    },
    {
      "id": "tests/fixtures_regress/models.py:BaseNKModel.Meta",
      "type": "class",
      "name": "BaseNKModel.Meta",
      "file": "tests/fixtures_regress/models.py",
      "line": 253
    },
    {
      "id": "tests/fixtures_regress/models.py:BaseNKModel.__str__",
      "type": "function",
      "name": "BaseNKModel.__str__",
      "file": "tests/fixtures_regress/models.py",
      "line": 256
    },
    {
      "id": "tests/fixtures_regress/models.py:BaseNKModel.natural_key",
      "type": "function",
      "name": "BaseNKModel.natural_key",
      "file": "tests/fixtures_regress/models.py",
      "line": 259
    },
    {
      "id": "tests/fixtures_regress/models.py:M2MSimpleA",
      "type": "class",
      "name": "M2MSimpleA",
      "file": "tests/fixtures_regress/models.py",
      "line": 263
    },
    {
      "id": "tests/fixtures_regress/models.py:M2MSimpleB",
      "type": "class",
      "name": "M2MSimpleB",
      "file": "tests/fixtures_regress/models.py",
      "line": 267
    },
    {
      "id": "tests/fixtures_regress/models.py:M2MSimpleCircularA",
      "type": "class",
      "name": "M2MSimpleCircularA",
      "file": "tests/fixtures_regress/models.py",
      "line": 271
    },
    {
      "id": "tests/fixtures_regress/models.py:M2MSimpleCircularB",
      "type": "class",
      "name": "M2MSimpleCircularB",
      "file": "tests/fixtures_regress/models.py",
      "line": 275
    },
    {
      "id": "tests/fixtures_regress/models.py:M2MComplexA",
      "type": "class",
      "name": "M2MComplexA",
      "file": "tests/fixtures_regress/models.py",
      "line": 279
    },
    {
      "id": "tests/fixtures_regress/models.py:M2MComplexB",
      "type": "class",
      "name": "M2MComplexB",
      "file": "tests/fixtures_regress/models.py",
      "line": 283
    },
    {
      "id": "tests/fixtures_regress/models.py:M2MThroughAB",
      "type": "class",
      "name": "M2MThroughAB",
      "file": "tests/fixtures_regress/models.py",
      "line": 287
    },
    {
      "id": "tests/fixtures_regress/models.py:M2MComplexCircular1A",
      "type": "class",
      "name": "M2MComplexCircular1A",
      "file": "tests/fixtures_regress/models.py",
      "line": 292
    },
    {
      "id": "tests/fixtures_regress/models.py:M2MComplexCircular1B",
      "type": "class",
      "name": "M2MComplexCircular1B",
      "file": "tests/fixtures_regress/models.py",
      "line": 297
    },
    {
      "id": "tests/fixtures_regress/models.py:M2MComplexCircular1C",
      "type": "class",
      "name": "M2MComplexCircular1C",
      "file": "tests/fixtures_regress/models.py",
      "line": 302
    },
    {
      "id": "tests/fixtures_regress/models.py:M2MCircular1ThroughAB",
      "type": "class",
      "name": "M2MCircular1ThroughAB",
      "file": "tests/fixtures_regress/models.py",
      "line": 307
    },
    {
      "id": "tests/fixtures_regress/models.py:M2MCircular1ThroughBC",
      "type": "class",
      "name": "M2MCircular1ThroughBC",
      "file": "tests/fixtures_regress/models.py",
      "line": 312
    },
    {
      "id": "tests/fixtures_regress/models.py:M2MCircular1ThroughCA",
      "type": "class",
      "name": "M2MCircular1ThroughCA",
      "file": "tests/fixtures_regress/models.py",
      "line": 317
    },
    {
      "id": "tests/fixtures_regress/models.py:M2MComplexCircular2A",
      "type": "class",
      "name": "M2MComplexCircular2A",
      "file": "tests/fixtures_regress/models.py",
      "line": 322
    },
    {
      "id": "tests/fixtures_regress/models.py:M2MComplexCircular2B",
      "type": "class",
      "name": "M2MComplexCircular2B",
      "file": "tests/fixtures_regress/models.py",
      "line": 327
    },
    {
      "id": "tests/fixtures_regress/models.py:M2MComplexCircular2B.natural_key",
      "type": "function",
      "name": "M2MComplexCircular2B.natural_key",
      "file": "tests/fixtures_regress/models.py",
      "line": 328
    },
    {
      "id": "tests/fixtures_regress/models.py:M2MCircular2ThroughAB",
      "type": "class",
      "name": "M2MCircular2ThroughAB",
      "file": "tests/fixtures_regress/models.py",
      "line": 334
    },
    {
      "id": "tests/fixtures_regress/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/fixtures_regress/__init__.py",
      "line": 0
    },
    {
      "id": "tests/fixtures_regress/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/fixtures_regress/tests.py",
      "line": 0
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures",
      "type": "class",
      "name": "TestFixtures",
      "file": "tests/fixtures_regress/tests.py",
      "line": 30
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.animal_pre_save_check",
      "type": "function",
      "name": "TestFixtures.animal_pre_save_check",
      "file": "tests/fixtures_regress/tests.py",
      "line": 32
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_duplicate_pk",
      "type": "function",
      "name": "TestFixtures.test_duplicate_pk",
      "file": "tests/fixtures_regress/tests.py",
      "line": 40
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_loaddata_not_found_fields_not_ignore",
      "type": "function",
      "name": "TestFixtures.test_loaddata_not_found_fields_not_ignore",
      "file": "tests/fixtures_regress/tests.py",
      "line": 63
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_loaddata_not_found_fields_ignore",
      "type": "function",
      "name": "TestFixtures.test_loaddata_not_found_fields_ignore",
      "file": "tests/fixtures_regress/tests.py",
      "line": 76
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_loaddata_not_found_fields_ignore_xml",
      "type": "function",
      "name": "TestFixtures.test_loaddata_not_found_fields_ignore_xml",
      "file": "tests/fixtures_regress/tests.py",
      "line": 90
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_pretty_print_xml",
      "type": "function",
      "name": "TestFixtures.test_pretty_print_xml",
      "file": "tests/fixtures_regress/tests.py",
      "line": 104
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_pretty_print_xml_empty_strings",
      "type": "function",
      "name": "TestFixtures.test_pretty_print_xml_empty_strings",
      "file": "tests/fixtures_regress/tests.py",
      "line": 119
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_absolute_path",
      "type": "function",
      "name": "TestFixtures.test_absolute_path",
      "file": "tests/fixtures_regress/tests.py",
      "line": 133
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_relative_path",
      "type": "function",
      "name": "TestFixtures.test_relative_path",
      "file": "tests/fixtures_regress/tests.py",
      "line": 154
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_relative_path_in_fixture_dirs",
      "type": "function",
      "name": "TestFixtures.test_relative_path_in_fixture_dirs",
      "file": "tests/fixtures_regress/tests.py",
      "line": 169
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_path_containing_dots",
      "type": "function",
      "name": "TestFixtures.test_path_containing_dots",
      "file": "tests/fixtures_regress/tests.py",
      "line": 172
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_unknown_format",
      "type": "function",
      "name": "TestFixtures.test_unknown_format",
      "file": "tests/fixtures_regress/tests.py",
      "line": 180
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_unimportable_serializer",
      "type": "function",
      "name": "TestFixtures.test_unimportable_serializer",
      "file": "tests/fixtures_regress/tests.py",
      "line": 194
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_invalid_data",
      "type": "function",
      "name": "TestFixtures.test_invalid_data",
      "file": "tests/fixtures_regress/tests.py",
      "line": 205
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_invalid_data_no_ext",
      "type": "function",
      "name": "TestFixtures.test_invalid_data_no_ext",
      "file": "tests/fixtures_regress/tests.py",
      "line": 219
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_empty",
      "type": "function",
      "name": "TestFixtures.test_empty",
      "file": "tests/fixtures_regress/tests.py",
      "line": 233
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_error_message",
      "type": "function",
      "name": "TestFixtures.test_error_message",
      "file": "tests/fixtures_regress/tests.py",
      "line": 246
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_pg_sequence_resetting_checks",
      "type": "function",
      "name": "TestFixtures.test_pg_sequence_resetting_checks",
      "file": "tests/fixtures_regress/tests.py",
      "line": 260
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_close_connection_after_loaddata",
      "type": "function",
      "name": "TestFixtures.test_close_connection_after_loaddata",
      "file": "tests/fixtures_regress/tests.py",
      "line": 274
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_field_value_coerce",
      "type": "function",
      "name": "TestFixtures.test_field_value_coerce",
      "file": "tests/fixtures_regress/tests.py",
      "line": 300
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_dumpdata_uses_default_manager",
      "type": "function",
      "name": "TestFixtures.test_dumpdata_uses_default_manager",
      "file": "tests/fixtures_regress/tests.py",
      "line": 323
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_proxy_model_included",
      "type": "function",
      "name": "TestFixtures.test_proxy_model_included",
      "file": "tests/fixtures_regress/tests.py",
      "line": 382
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_loaddata_works_when_fixture_has_forward_refs",
      "type": "function",
      "name": "TestFixtures.test_loaddata_works_when_fixture_has_forward_refs",
      "file": "tests/fixtures_regress/tests.py",
      "line": 403
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_loaddata_raises_error_when_fixture_has_invalid_foreign_key",
      "type": "function",
      "name": "TestFixtures.test_loaddata_raises_error_when_fixture_has_invalid_foreign_key",
      "file": "tests/fixtures_regress/tests.py",
      "line": 415
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_loaddata_forward_refs_split_fixtures",
      "type": "function",
      "name": "TestFixtures.test_loaddata_forward_refs_split_fixtures",
      "file": "tests/fixtures_regress/tests.py",
      "line": 429
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_loaddata_no_fixture_specified",
      "type": "function",
      "name": "TestFixtures.test_loaddata_no_fixture_specified",
      "file": "tests/fixtures_regress/tests.py",
      "line": 443
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_ticket_20820",
      "type": "function",
      "name": "TestFixtures.test_ticket_20820",
      "file": "tests/fixtures_regress/tests.py",
      "line": 454
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_ticket_22421",
      "type": "function",
      "name": "TestFixtures.test_ticket_22421",
      "file": "tests/fixtures_regress/tests.py",
      "line": 465
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_loaddata_with_m2m_to_self",
      "type": "function",
      "name": "TestFixtures.test_loaddata_with_m2m_to_self",
      "file": "tests/fixtures_regress/tests.py",
      "line": 477
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_fixture_dirs_with_duplicates",
      "type": "function",
      "name": "TestFixtures.test_fixture_dirs_with_duplicates",
      "file": "tests/fixtures_regress/tests.py",
      "line": 489
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_fixture_dirs_with_default_fixture_path",
      "type": "function",
      "name": "TestFixtures.test_fixture_dirs_with_default_fixture_path",
      "file": "tests/fixtures_regress/tests.py",
      "line": 498
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestFixtures.test_loaddata_with_valid_fixture_dirs",
      "type": "function",
      "name": "TestFixtures.test_loaddata_with_valid_fixture_dirs",
      "file": "tests/fixtures_regress/tests.py",
      "line": 513
    },
    {
      "id": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests",
      "type": "class",
      "name": "NaturalKeyFixtureTests",
      "file": "tests/fixtures_regress/tests.py",
      "line": 521
    },
    {
      "id": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_nk_deserialize",
      "type": "function",
      "name": "NaturalKeyFixtureTests.test_nk_deserialize",
      "file": "tests/fixtures_regress/tests.py",
      "line": 523
    },
    {
      "id": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_nk_deserialize_xml",
      "type": "function",
      "name": "NaturalKeyFixtureTests.test_nk_deserialize_xml",
      "file": "tests/fixtures_regress/tests.py",
      "line": 548
    },
    {
      "id": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_nk_on_serialize",
      "type": "function",
      "name": "NaturalKeyFixtureTests.test_nk_on_serialize",
      "file": "tests/fixtures_regress/tests.py",
      "line": 577
    },
    {
      "id": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_dependency_sorting",
      "type": "function",
      "name": "NaturalKeyFixtureTests.test_dependency_sorting",
      "file": "tests/fixtures_regress/tests.py",
      "line": 610
    },
    {
      "id": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_dependency_sorting_2",
      "type": "function",
      "name": "NaturalKeyFixtureTests.test_dependency_sorting_2",
      "file": "tests/fixtures_regress/tests.py",
      "line": 623
    },
    {
      "id": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_dependency_sorting_3",
      "type": "function",
      "name": "NaturalKeyFixtureTests.test_dependency_sorting_3",
      "file": "tests/fixtures_regress/tests.py",
      "line": 632
    },
    {
      "id": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_dependency_sorting_4",
      "type": "function",
      "name": "NaturalKeyFixtureTests.test_dependency_sorting_4",
      "file": "tests/fixtures_regress/tests.py",
      "line": 641
    },
    {
      "id": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_dependency_sorting_5",
      "type": "function",
      "name": "NaturalKeyFixtureTests.test_dependency_sorting_5",
      "file": "tests/fixtures_regress/tests.py",
      "line": 650
    },
    {
      "id": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_dependency_sorting_6",
      "type": "function",
      "name": "NaturalKeyFixtureTests.test_dependency_sorting_6",
      "file": "tests/fixtures_regress/tests.py",
      "line": 659
    },
    {
      "id": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_dependency_sorting_dangling",
      "type": "function",
      "name": "NaturalKeyFixtureTests.test_dependency_sorting_dangling",
      "file": "tests/fixtures_regress/tests.py",
      "line": 668
    },
    {
      "id": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_dependency_sorting_tight_circular",
      "type": "function",
      "name": "NaturalKeyFixtureTests.test_dependency_sorting_tight_circular",
      "file": "tests/fixtures_regress/tests.py",
      "line": 677
    },
    {
      "id": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_dependency_sorting_tight_circular_2",
      "type": "function",
      "name": "NaturalKeyFixtureTests.test_dependency_sorting_tight_circular_2",
      "file": "tests/fixtures_regress/tests.py",
      "line": 685
    },
    {
      "id": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_dependency_self_referential",
      "type": "function",
      "name": "NaturalKeyFixtureTests.test_dependency_self_referential",
      "file": "tests/fixtures_regress/tests.py",
      "line": 693
    },
    {
      "id": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_dependency_sorting_long",
      "type": "function",
      "name": "NaturalKeyFixtureTests.test_dependency_sorting_long",
      "file": "tests/fixtures_regress/tests.py",
      "line": 701
    },
    {
      "id": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_dependency_sorting_normal",
      "type": "function",
      "name": "NaturalKeyFixtureTests.test_dependency_sorting_normal",
      "file": "tests/fixtures_regress/tests.py",
      "line": 710
    },
    {
      "id": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_normal_pk",
      "type": "function",
      "name": "NaturalKeyFixtureTests.test_normal_pk",
      "file": "tests/fixtures_regress/tests.py",
      "line": 719
    },
    {
      "id": "tests/fixtures_regress/tests.py:M2MNaturalKeyFixtureTests",
      "type": "class",
      "name": "M2MNaturalKeyFixtureTests",
      "file": "tests/fixtures_regress/tests.py",
      "line": 748
    },
    {
      "id": "tests/fixtures_regress/tests.py:M2MNaturalKeyFixtureTests.test_dependency_sorting_m2m_simple",
      "type": "function",
      "name": "M2MNaturalKeyFixtureTests.test_dependency_sorting_m2m_simple",
      "file": "tests/fixtures_regress/tests.py",
      "line": 751
    },
    {
      "id": "tests/fixtures_regress/tests.py:M2MNaturalKeyFixtureTests.test_dependency_sorting_m2m_simple_circular",
      "type": "function",
      "name": "M2MNaturalKeyFixtureTests.test_dependency_sorting_m2m_simple_circular",
      "file": "tests/fixtures_regress/tests.py",
      "line": 764
    },
    {
      "id": "tests/fixtures_regress/tests.py:M2MNaturalKeyFixtureTests.test_dependency_sorting_m2m_complex",
      "type": "function",
      "name": "M2MNaturalKeyFixtureTests.test_dependency_sorting_m2m_complex",
      "file": "tests/fixtures_regress/tests.py",
      "line": 776
    },
    {
      "id": "tests/fixtures_regress/tests.py:M2MNaturalKeyFixtureTests.test_dependency_sorting_m2m_complex_circular_1",
      "type": "function",
      "name": "M2MNaturalKeyFixtureTests.test_dependency_sorting_m2m_complex_circular_1",
      "file": "tests/fixtures_regress/tests.py",
      "line": 788
    },
    {
      "id": "tests/fixtures_regress/tests.py:M2MNaturalKeyFixtureTests.test_dependency_sorting_m2m_complex_circular_2",
      "type": "function",
      "name": "M2MNaturalKeyFixtureTests.test_dependency_sorting_m2m_complex_circular_2",
      "file": "tests/fixtures_regress/tests.py",
      "line": 804
    },
    {
      "id": "tests/fixtures_regress/tests.py:M2MNaturalKeyFixtureTests.test_dump_and_load_m2m_simple",
      "type": "function",
      "name": "M2MNaturalKeyFixtureTests.test_dump_and_load_m2m_simple",
      "file": "tests/fixtures_regress/tests.py",
      "line": 815
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestTicket11101",
      "type": "class",
      "name": "TestTicket11101",
      "file": "tests/fixtures_regress/tests.py",
      "line": 848
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestTicket11101.test_ticket_11101",
      "type": "function",
      "name": "TestTicket11101.test_ticket_11101",
      "file": "tests/fixtures_regress/tests.py",
      "line": 853
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestLoadFixtureFromOtherAppDirectory",
      "type": "class",
      "name": "TestLoadFixtureFromOtherAppDirectory",
      "file": "tests/fixtures_regress/tests.py",
      "line": 866
    },
    {
      "id": "tests/fixtures_regress/tests.py:TestLoadFixtureFromOtherAppDirectory.test_fixtures_loaded",
      "type": "function",
      "name": "TestLoadFixtureFromOtherAppDirectory.test_fixtures_loaded",
      "file": "tests/fixtures_regress/tests.py",
      "line": 879
    },
    {
      "id": "tests/aggregation",
      "type": "directory",
      "name": "aggregation",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/aggregation/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/aggregation/models.py",
      "line": 0
    },
    {
      "id": "tests/aggregation/models.py:Author",
      "type": "class",
      "name": "Author",
      "file": "tests/aggregation/models.py",
      "line": 4
    },
    {
      "id": "tests/aggregation/models.py:Author.__str__",
      "type": "function",
      "name": "Author.__str__",
      "file": "tests/aggregation/models.py",
      "line": 9
    },
    {
      "id": "tests/aggregation/models.py:Publisher",
      "type": "class",
      "name": "Publisher",
      "file": "tests/aggregation/models.py",
      "line": 13
    },
    {
      "id": "tests/aggregation/models.py:Publisher.__str__",
      "type": "function",
      "name": "Publisher.__str__",
      "file": "tests/aggregation/models.py",
      "line": 18
    },
    {
      "id": "tests/aggregation/models.py:Book",
      "type": "class",
      "name": "Book",
      "file": "tests/aggregation/models.py",
      "line": 22
    },
    {
      "id": "tests/aggregation/models.py:Book.__str__",
      "type": "function",
      "name": "Book.__str__",
      "file": "tests/aggregation/models.py",
      "line": 33
    },
    {
      "id": "tests/aggregation/models.py:Store",
      "type": "class",
      "name": "Store",
      "file": "tests/aggregation/models.py",
      "line": 37
    },
    {
      "id": "tests/aggregation/models.py:Store.__str__",
      "type": "function",
      "name": "Store.__str__",
      "file": "tests/aggregation/models.py",
      "line": 43
    },
    {
      "id": "tests/aggregation/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/aggregation/__init__.py",
      "line": 0
    },
    {
      "id": "tests/aggregation/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/aggregation/tests.py",
      "line": 0
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase",
      "type": "class",
      "name": "AggregateTestCase",
      "file": "tests/aggregation/tests.py",
      "line": 19
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.setUpTestData",
      "type": "function",
      "name": "AggregateTestCase.setUpTestData",
      "file": "tests/aggregation/tests.py",
      "line": 22
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_empty_aggregate",
      "type": "function",
      "name": "AggregateTestCase.test_empty_aggregate",
      "file": "tests/aggregation/tests.py",
      "line": 103
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_aggregate_in_order_by",
      "type": "function",
      "name": "AggregateTestCase.test_aggregate_in_order_by",
      "file": "tests/aggregation/tests.py",
      "line": 106
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_single_aggregate",
      "type": "function",
      "name": "AggregateTestCase.test_single_aggregate",
      "file": "tests/aggregation/tests.py",
      "line": 114
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_multiple_aggregates",
      "type": "function",
      "name": "AggregateTestCase.test_multiple_aggregates",
      "file": "tests/aggregation/tests.py",
      "line": 118
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_filter_aggregate",
      "type": "function",
      "name": "AggregateTestCase.test_filter_aggregate",
      "file": "tests/aggregation/tests.py",
      "line": 122
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_related_aggregate",
      "type": "function",
      "name": "AggregateTestCase.test_related_aggregate",
      "file": "tests/aggregation/tests.py",
      "line": 126
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_aggregate_multi_join",
      "type": "function",
      "name": "AggregateTestCase.test_aggregate_multi_join",
      "file": "tests/aggregation/tests.py",
      "line": 142
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_aggregate_alias",
      "type": "function",
      "name": "AggregateTestCase.test_aggregate_alias",
      "file": "tests/aggregation/tests.py",
      "line": 149
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_annotate_basic",
      "type": "function",
      "name": "AggregateTestCase.test_annotate_basic",
      "file": "tests/aggregation/tests.py",
      "line": 153
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_annotate_defer",
      "type": "function",
      "name": "AggregateTestCase.test_annotate_defer",
      "file": "tests/aggregation/tests.py",
      "line": 174
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_annotate_defer_select_related",
      "type": "function",
      "name": "AggregateTestCase.test_annotate_defer_select_related",
      "file": "tests/aggregation/tests.py",
      "line": 186
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_annotate_m2m",
      "type": "function",
      "name": "AggregateTestCase.test_annotate_m2m",
      "file": "tests/aggregation/tests.py",
      "line": 199
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_backwards_m2m_annotate",
      "type": "function",
      "name": "AggregateTestCase.test_backwards_m2m_annotate",
      "file": "tests/aggregation/tests.py",
      "line": 224
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_reverse_fkey_annotate",
      "type": "function",
      "name": "AggregateTestCase.test_reverse_fkey_annotate",
      "file": "tests/aggregation/tests.py",
      "line": 254
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_annotate_values",
      "type": "function",
      "name": "AggregateTestCase.test_annotate_values",
      "file": "tests/aggregation/tests.py",
      "line": 280
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_count",
      "type": "function",
      "name": "AggregateTestCase.test_count",
      "file": "tests/aggregation/tests.py",
      "line": 386
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_count_star",
      "type": "function",
      "name": "AggregateTestCase.test_count_star",
      "file": "tests/aggregation/tests.py",
      "line": 393
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_count_distinct_expression",
      "type": "function",
      "name": "AggregateTestCase.test_count_distinct_expression",
      "file": "tests/aggregation/tests.py",
      "line": 399
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_non_grouped_annotation_not_in_group_by",
      "type": "function",
      "name": "AggregateTestCase.test_non_grouped_annotation_not_in_group_by",
      "file": "tests/aggregation/tests.py",
      "line": 405
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_grouped_annotation_in_group_by",
      "type": "function",
      "name": "AggregateTestCase.test_grouped_annotation_in_group_by",
      "file": "tests/aggregation/tests.py",
      "line": 416
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_fkey_aggregate",
      "type": "function",
      "name": "AggregateTestCase.test_fkey_aggregate",
      "file": "tests/aggregation/tests.py",
      "line": 432
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_annotate_ordering",
      "type": "function",
      "name": "AggregateTestCase.test_annotate_ordering",
      "file": "tests/aggregation/tests.py",
      "line": 437
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_aggregate_annotation",
      "type": "function",
      "name": "AggregateTestCase.test_aggregate_annotation",
      "file": "tests/aggregation/tests.py",
      "line": 458
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_avg_duration_field",
      "type": "function",
      "name": "AggregateTestCase.test_avg_duration_field",
      "file": "tests/aggregation/tests.py",
      "line": 462
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_sum_duration_field",
      "type": "function",
      "name": "AggregateTestCase.test_sum_duration_field",
      "file": "tests/aggregation/tests.py",
      "line": 474
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_sum_distinct_aggregate",
      "type": "function",
      "name": "AggregateTestCase.test_sum_distinct_aggregate",
      "file": "tests/aggregation/tests.py",
      "line": 480
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_filtering",
      "type": "function",
      "name": "AggregateTestCase.test_filtering",
      "file": "tests/aggregation/tests.py",
      "line": 494
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_annotation",
      "type": "function",
      "name": "AggregateTestCase.test_annotation",
      "file": "tests/aggregation/tests.py",
      "line": 596
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_more_aggregation",
      "type": "function",
      "name": "AggregateTestCase.test_more_aggregation",
      "file": "tests/aggregation/tests.py",
      "line": 639
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_even_more_aggregate",
      "type": "function",
      "name": "AggregateTestCase.test_even_more_aggregate",
      "file": "tests/aggregation/tests.py",
      "line": 653
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_annotate_values_list",
      "type": "function",
      "name": "AggregateTestCase.test_annotate_values_list",
      "file": "tests/aggregation/tests.py",
      "line": 700
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_dates_with_aggregation",
      "type": "function",
      "name": "AggregateTestCase.test_dates_with_aggregation",
      "file": "tests/aggregation/tests.py",
      "line": 734
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_values_aggregation",
      "type": "function",
      "name": "AggregateTestCase.test_values_aggregation",
      "file": "tests/aggregation/tests.py",
      "line": 754
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_ticket17424",
      "type": "function",
      "name": "AggregateTestCase.test_ticket17424",
      "file": "tests/aggregation/tests.py",
      "line": 765
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_ticket12886",
      "type": "function",
      "name": "AggregateTestCase.test_ticket12886",
      "file": "tests/aggregation/tests.py",
      "line": 785
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_ticket11881",
      "type": "function",
      "name": "AggregateTestCase.test_ticket11881",
      "file": "tests/aggregation/tests.py",
      "line": 793
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_decimal_max_digits_has_no_effect",
      "type": "function",
      "name": "AggregateTestCase.test_decimal_max_digits_has_no_effect",
      "file": "tests/aggregation/tests.py",
      "line": 817
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_nonaggregate_aggregation_throws",
      "type": "function",
      "name": "AggregateTestCase.test_nonaggregate_aggregation_throws",
      "file": "tests/aggregation/tests.py",
      "line": 830
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_nonfield_annotation",
      "type": "function",
      "name": "AggregateTestCase.test_nonfield_annotation",
      "file": "tests/aggregation/tests.py",
      "line": 834
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_missing_output_field_raises_error",
      "type": "function",
      "name": "AggregateTestCase.test_missing_output_field_raises_error",
      "file": "tests/aggregation/tests.py",
      "line": 842
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_annotation_expressions",
      "type": "function",
      "name": "AggregateTestCase.test_annotation_expressions",
      "file": "tests/aggregation/tests.py",
      "line": 846
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_aggregation_expressions",
      "type": "function",
      "name": "AggregateTestCase.test_aggregation_expressions",
      "file": "tests/aggregation/tests.py",
      "line": 865
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_avg_decimal_field",
      "type": "function",
      "name": "AggregateTestCase.test_avg_decimal_field",
      "file": "tests/aggregation/tests.py",
      "line": 873
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_order_of_precedence",
      "type": "function",
      "name": "AggregateTestCase.test_order_of_precedence",
      "file": "tests/aggregation/tests.py",
      "line": 878
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_combine_different_types",
      "type": "function",
      "name": "AggregateTestCase.test_combine_different_types",
      "file": "tests/aggregation/tests.py",
      "line": 885
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_complex_aggregations_require_kwarg",
      "type": "function",
      "name": "AggregateTestCase.test_complex_aggregations_require_kwarg",
      "file": "tests/aggregation/tests.py",
      "line": 905
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_aggregate_over_complex_annotation",
      "type": "function",
      "name": "AggregateTestCase.test_aggregate_over_complex_annotation",
      "file": "tests/aggregation/tests.py",
      "line": 913
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_values_annotation_with_expression",
      "type": "function",
      "name": "AggregateTestCase.test_values_annotation_with_expression",
      "file": "tests/aggregation/tests.py",
      "line": 939
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_annotate_values_aggregate",
      "type": "function",
      "name": "AggregateTestCase.test_annotate_values_aggregate",
      "file": "tests/aggregation/tests.py",
      "line": 976
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_annotate_over_annotate",
      "type": "function",
      "name": "AggregateTestCase.test_annotate_over_annotate",
      "file": "tests/aggregation/tests.py",
      "line": 987
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_annotated_aggregate_over_annotated_aggregate",
      "type": "function",
      "name": "AggregateTestCase.test_annotated_aggregate_over_annotated_aggregate",
      "file": "tests/aggregation/tests.py",
      "line": 1000
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_annotated_aggregate_over_annotated_aggregate.MyMax",
      "type": "class",
      "name": "AggregateTestCase.test_annotated_aggregate_over_annotated_aggregate.MyMax",
      "file": "tests/aggregation/tests.py",
      "line": 1004
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_annotated_aggregate_over_annotated_aggregate.MyMax.as_sql",
      "type": "function",
      "name": "AggregateTestCase.test_annotated_aggregate_over_annotated_aggregate.MyMax.as_sql",
      "file": "tests/aggregation/tests.py",
      "line": 1005
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_multi_arg_aggregate",
      "type": "function",
      "name": "AggregateTestCase.test_multi_arg_aggregate",
      "file": "tests/aggregation/tests.py",
      "line": 1012
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_multi_arg_aggregate.MyMax",
      "type": "class",
      "name": "AggregateTestCase.test_multi_arg_aggregate.MyMax",
      "file": "tests/aggregation/tests.py",
      "line": 1013
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_multi_arg_aggregate.MyMax.as_sql",
      "type": "function",
      "name": "AggregateTestCase.test_multi_arg_aggregate.MyMax.as_sql",
      "file": "tests/aggregation/tests.py",
      "line": 1016
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_add_implementation",
      "type": "function",
      "name": "AggregateTestCase.test_add_implementation",
      "file": "tests/aggregation/tests.py",
      "line": 1029
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_add_implementation.MySum",
      "type": "class",
      "name": "AggregateTestCase.test_add_implementation.MySum",
      "file": "tests/aggregation/tests.py",
      "line": 1030
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_add_implementation.lower_case_function_override",
      "type": "function",
      "name": "AggregateTestCase.test_add_implementation.lower_case_function_override",
      "file": "tests/aggregation/tests.py",
      "line": 1034
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_add_implementation.lower_case_function_super",
      "type": "function",
      "name": "AggregateTestCase.test_add_implementation.lower_case_function_super",
      "file": "tests/aggregation/tests.py",
      "line": 1049
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_add_implementation.be_evil",
      "type": "function",
      "name": "AggregateTestCase.test_add_implementation.be_evil",
      "file": "tests/aggregation/tests.py",
      "line": 1062
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_complex_values_aggregation",
      "type": "function",
      "name": "AggregateTestCase.test_complex_values_aggregation",
      "file": "tests/aggregation/tests.py",
      "line": 1075
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_expression_on_aggregation",
      "type": "function",
      "name": "AggregateTestCase.test_expression_on_aggregation",
      "file": "tests/aggregation/tests.py",
      "line": 1087
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_expression_on_aggregation.Greatest",
      "type": "class",
      "name": "AggregateTestCase.test_expression_on_aggregation.Greatest",
      "file": "tests/aggregation/tests.py",
      "line": 1090
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_expression_on_aggregation.Greatest.as_sqlite",
      "type": "function",
      "name": "AggregateTestCase.test_expression_on_aggregation.Greatest.as_sqlite",
      "file": "tests/aggregation/tests.py",
      "line": 1093
    },
    {
      "id": "tests/aggregation/tests.py:AggregateTestCase.test_arguments_must_be_expressions",
      "type": "function",
      "name": "AggregateTestCase.test_arguments_must_be_expressions",
      "file": "tests/aggregation/tests.py",
      "line": 1109
    },
    {
      "id": "tests/aggregation/test_filter_argument.py",
      "type": "file",
      "name": "test_filter_argument.py",
      "file": "tests/aggregation/test_filter_argument.py",
      "line": 0
    },
    {
      "id": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests",
      "type": "class",
      "name": "FilteredAggregateTests",
      "file": "tests/aggregation/test_filter_argument.py",
      "line": 10
    },
    {
      "id": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests.setUpTestData",
      "type": "function",
      "name": "FilteredAggregateTests.setUpTestData",
      "file": "tests/aggregation/test_filter_argument.py",
      "line": 12
    },
    {
      "id": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests.test_filtered_aggregates",
      "type": "function",
      "name": "FilteredAggregateTests.test_filtered_aggregates",
      "file": "tests/aggregation/test_filter_argument.py",
      "line": 39
    },
    {
      "id": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests.test_double_filtered_aggregates",
      "type": "function",
      "name": "FilteredAggregateTests.test_double_filtered_aggregates",
      "file": "tests/aggregation/test_filter_argument.py",
      "line": 43
    },
    {
      "id": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests.test_excluded_aggregates",
      "type": "function",
      "name": "FilteredAggregateTests.test_excluded_aggregates",
      "file": "tests/aggregation/test_filter_argument.py",
      "line": 47
    },
    {
      "id": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests.test_related_aggregates_m2m",
      "type": "function",
      "name": "FilteredAggregateTests.test_related_aggregates_m2m",
      "file": "tests/aggregation/test_filter_argument.py",
      "line": 51
    },
    {
      "id": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests.test_related_aggregates_m2m_and_fk",
      "type": "function",
      "name": "FilteredAggregateTests.test_related_aggregates_m2m_and_fk",
      "file": "tests/aggregation/test_filter_argument.py",
      "line": 55
    },
    {
      "id": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests.test_plain_annotate",
      "type": "function",
      "name": "FilteredAggregateTests.test_plain_annotate",
      "file": "tests/aggregation/test_filter_argument.py",
      "line": 60
    },
    {
      "id": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests.test_filtered_aggregate_on_annotate",
      "type": "function",
      "name": "FilteredAggregateTests.test_filtered_aggregate_on_annotate",
      "file": "tests/aggregation/test_filter_argument.py",
      "line": 65
    },
    {
      "id": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests.test_case_aggregate",
      "type": "function",
      "name": "FilteredAggregateTests.test_case_aggregate",
      "file": "tests/aggregation/test_filter_argument.py",
      "line": 71
    },
    {
      "id": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests.test_sum_star_exception",
      "type": "function",
      "name": "FilteredAggregateTests.test_sum_star_exception",
      "file": "tests/aggregation/test_filter_argument.py",
      "line": 78
    },
    {
      "id": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests.test_filtered_reused_subquery",
      "type": "function",
      "name": "FilteredAggregateTests.test_filtered_reused_subquery",
      "file": "tests/aggregation/test_filter_argument.py",
      "line": 83
    },
    {
      "id": "tests/middleware",
      "type": "directory",
      "name": "middleware",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/middleware/test_security.py",
      "type": "file",
      "name": "test_security.py",
      "file": "tests/middleware/test_security.py",
      "line": 0
    },
    {
      "id": "tests/middleware/test_security.py:SecurityMiddlewareTest",
      "type": "class",
      "name": "SecurityMiddlewareTest",
      "file": "tests/middleware/test_security.py",
      "line": 6
    },
    {
      "id": "tests/middleware/test_security.py:SecurityMiddlewareTest.middleware",
      "type": "function",
      "name": "SecurityMiddlewareTest.middleware",
      "file": "tests/middleware/test_security.py",
      "line": 8
    },
    {
      "id": "tests/middleware/test_security.py:SecurityMiddlewareTest.secure_request_kwargs",
      "type": "function",
      "name": "SecurityMiddlewareTest.secure_request_kwargs",
      "file": "tests/middleware/test_security.py",
      "line": 13
    },
    {
      "id": "tests/middleware/test_security.py:SecurityMiddlewareTest.response",
      "type": "function",
      "name": "SecurityMiddlewareTest.response",
      "file": "tests/middleware/test_security.py",
      "line": 16
    },
    {
      "id": "tests/middleware/test_security.py:SecurityMiddlewareTest.process_response",
      "type": "function",
      "name": "SecurityMiddlewareTest.process_response",
      "file": "tests/middleware/test_security.py",
      "line": 23
    },
    {
      "id": "tests/middleware/test_security.py:SecurityMiddlewareTest.process_request",
      "type": "function",
      "name": "SecurityMiddlewareTest.process_request",
      "file": "tests/middleware/test_security.py",
      "line": 37
    },
    {
      "id": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_sts_on",
      "type": "function",
      "name": "SecurityMiddlewareTest.test_sts_on",
      "file": "tests/middleware/test_security.py",
      "line": 44
    },
    {
      "id": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_sts_already_present",
      "type": "function",
      "name": "SecurityMiddlewareTest.test_sts_already_present",
      "file": "tests/middleware/test_security.py",
      "line": 55
    },
    {
      "id": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_sts_only_if_secure",
      "type": "function",
      "name": "SecurityMiddlewareTest.test_sts_only_if_secure",
      "file": "tests/middleware/test_security.py",
      "line": 66
    },
    {
      "id": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_sts_off",
      "type": "function",
      "name": "SecurityMiddlewareTest.test_sts_off",
      "file": "tests/middleware/test_security.py",
      "line": 74
    },
    {
      "id": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_sts_include_subdomains",
      "type": "function",
      "name": "SecurityMiddlewareTest.test_sts_include_subdomains",
      "file": "tests/middleware/test_security.py",
      "line": 83
    },
    {
      "id": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_sts_no_include_subdomains",
      "type": "function",
      "name": "SecurityMiddlewareTest.test_sts_no_include_subdomains",
      "file": "tests/middleware/test_security.py",
      "line": 94
    },
    {
      "id": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_sts_preload",
      "type": "function",
      "name": "SecurityMiddlewareTest.test_sts_preload",
      "file": "tests/middleware/test_security.py",
      "line": 104
    },
    {
      "id": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_sts_subdomains_and_preload",
      "type": "function",
      "name": "SecurityMiddlewareTest.test_sts_subdomains_and_preload",
      "file": "tests/middleware/test_security.py",
      "line": 114
    },
    {
      "id": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_sts_no_preload",
      "type": "function",
      "name": "SecurityMiddlewareTest.test_sts_no_preload",
      "file": "tests/middleware/test_security.py",
      "line": 125
    },
    {
      "id": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_content_type_on",
      "type": "function",
      "name": "SecurityMiddlewareTest.test_content_type_on",
      "file": "tests/middleware/test_security.py",
      "line": 135
    },
    {
      "id": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_content_type_already_present",
      "type": "function",
      "name": "SecurityMiddlewareTest.test_content_type_already_present",
      "file": "tests/middleware/test_security.py",
      "line": 143
    },
    {
      "id": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_content_type_off",
      "type": "function",
      "name": "SecurityMiddlewareTest.test_content_type_off",
      "file": "tests/middleware/test_security.py",
      "line": 152
    },
    {
      "id": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_xss_filter_on",
      "type": "function",
      "name": "SecurityMiddlewareTest.test_xss_filter_on",
      "file": "tests/middleware/test_security.py",
      "line": 160
    },
    {
      "id": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_xss_filter_already_present",
      "type": "function",
      "name": "SecurityMiddlewareTest.test_xss_filter_already_present",
      "file": "tests/middleware/test_security.py",
      "line": 170
    },
    {
      "id": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_xss_filter_off",
      "type": "function",
      "name": "SecurityMiddlewareTest.test_xss_filter_off",
      "file": "tests/middleware/test_security.py",
      "line": 179
    },
    {
      "id": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_ssl_redirect_on",
      "type": "function",
      "name": "SecurityMiddlewareTest.test_ssl_redirect_on",
      "file": "tests/middleware/test_security.py",
      "line": 187
    },
    {
      "id": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_no_redirect_ssl",
      "type": "function",
      "name": "SecurityMiddlewareTest.test_no_redirect_ssl",
      "file": "tests/middleware/test_security.py",
      "line": 198
    },
    {
      "id": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_redirect_exempt",
      "type": "function",
      "name": "SecurityMiddlewareTest.test_redirect_exempt",
      "file": "tests/middleware/test_security.py",
      "line": 207
    },
    {
      "id": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_redirect_ssl_host",
      "type": "function",
      "name": "SecurityMiddlewareTest.test_redirect_ssl_host",
      "file": "tests/middleware/test_security.py",
      "line": 217
    },
    {
      "id": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_ssl_redirect_off",
      "type": "function",
      "name": "SecurityMiddlewareTest.test_ssl_redirect_off",
      "file": "tests/middleware/test_security.py",
      "line": 226
    },
    {
      "id": "tests/middleware/extra_urls.py",
      "type": "file",
      "name": "extra_urls.py",
      "file": "tests/middleware/extra_urls.py",
      "line": 0
    },
    {
      "id": "tests/middleware/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/middleware/__init__.py",
      "line": 0
    },
    {
      "id": "tests/middleware/cond_get_urls.py",
      "type": "file",
      "name": "cond_get_urls.py",
      "file": "tests/middleware/cond_get_urls.py",
      "line": 0
    },
    {
      "id": "tests/middleware/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/middleware/tests.py",
      "line": 0
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest",
      "type": "class",
      "name": "CommonMiddlewareTest",
      "file": "tests/middleware/tests.py",
      "line": 27
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_have_slash",
      "type": "function",
      "name": "CommonMiddlewareTest.test_append_slash_have_slash",
      "file": "tests/middleware/tests.py",
      "line": 32
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_slashless_resource",
      "type": "function",
      "name": "CommonMiddlewareTest.test_append_slash_slashless_resource",
      "file": "tests/middleware/tests.py",
      "line": 42
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_slashless_unknown",
      "type": "function",
      "name": "CommonMiddlewareTest.test_append_slash_slashless_unknown",
      "file": "tests/middleware/tests.py",
      "line": 52
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_redirect",
      "type": "function",
      "name": "CommonMiddlewareTest.test_append_slash_redirect",
      "file": "tests/middleware/tests.py",
      "line": 61
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_redirect_querystring",
      "type": "function",
      "name": "CommonMiddlewareTest.test_append_slash_redirect_querystring",
      "file": "tests/middleware/tests.py",
      "line": 70
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_redirect_querystring_have_slash",
      "type": "function",
      "name": "CommonMiddlewareTest.test_append_slash_redirect_querystring_have_slash",
      "file": "tests/middleware/tests.py",
      "line": 80
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_no_redirect_on_POST_in_DEBUG",
      "type": "function",
      "name": "CommonMiddlewareTest.test_append_slash_no_redirect_on_POST_in_DEBUG",
      "file": "tests/middleware/tests.py",
      "line": 92
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_disabled",
      "type": "function",
      "name": "CommonMiddlewareTest.test_append_slash_disabled",
      "file": "tests/middleware/tests.py",
      "line": 114
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_quoted",
      "type": "function",
      "name": "CommonMiddlewareTest.test_append_slash_quoted",
      "file": "tests/middleware/tests.py",
      "line": 123
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_leading_slashes",
      "type": "function",
      "name": "CommonMiddlewareTest.test_append_slash_leading_slashes",
      "file": "tests/middleware/tests.py",
      "line": 134
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_prepend_www",
      "type": "function",
      "name": "CommonMiddlewareTest.test_prepend_www",
      "file": "tests/middleware/tests.py",
      "line": 153
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_prepend_www_append_slash_have_slash",
      "type": "function",
      "name": "CommonMiddlewareTest.test_prepend_www_append_slash_have_slash",
      "file": "tests/middleware/tests.py",
      "line": 160
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_prepend_www_append_slash_slashless",
      "type": "function",
      "name": "CommonMiddlewareTest.test_prepend_www_append_slash_slashless",
      "file": "tests/middleware/tests.py",
      "line": 167
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_have_slash_custom_urlconf",
      "type": "function",
      "name": "CommonMiddlewareTest.test_append_slash_have_slash_custom_urlconf",
      "file": "tests/middleware/tests.py",
      "line": 177
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_slashless_resource_custom_urlconf",
      "type": "function",
      "name": "CommonMiddlewareTest.test_append_slash_slashless_resource_custom_urlconf",
      "file": "tests/middleware/tests.py",
      "line": 188
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_slashless_unknown_custom_urlconf",
      "type": "function",
      "name": "CommonMiddlewareTest.test_append_slash_slashless_unknown_custom_urlconf",
      "file": "tests/middleware/tests.py",
      "line": 199
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_redirect_custom_urlconf",
      "type": "function",
      "name": "CommonMiddlewareTest.test_append_slash_redirect_custom_urlconf",
      "file": "tests/middleware/tests.py",
      "line": 210
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_no_redirect_on_POST_in_DEBUG_custom_urlconf",
      "type": "function",
      "name": "CommonMiddlewareTest.test_append_slash_no_redirect_on_POST_in_DEBUG_custom_urlconf",
      "file": "tests/middleware/tests.py",
      "line": 223
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_disabled_custom_urlconf",
      "type": "function",
      "name": "CommonMiddlewareTest.test_append_slash_disabled_custom_urlconf",
      "file": "tests/middleware/tests.py",
      "line": 237
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_quoted_custom_urlconf",
      "type": "function",
      "name": "CommonMiddlewareTest.test_append_slash_quoted_custom_urlconf",
      "file": "tests/middleware/tests.py",
      "line": 248
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_prepend_www_custom_urlconf",
      "type": "function",
      "name": "CommonMiddlewareTest.test_prepend_www_custom_urlconf",
      "file": "tests/middleware/tests.py",
      "line": 261
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_prepend_www_append_slash_have_slash_custom_urlconf",
      "type": "function",
      "name": "CommonMiddlewareTest.test_prepend_www_append_slash_have_slash_custom_urlconf",
      "file": "tests/middleware/tests.py",
      "line": 269
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_prepend_www_append_slash_slashless_custom_urlconf",
      "type": "function",
      "name": "CommonMiddlewareTest.test_prepend_www_append_slash_slashless_custom_urlconf",
      "file": "tests/middleware/tests.py",
      "line": 277
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_content_length_header_added",
      "type": "function",
      "name": "CommonMiddlewareTest.test_content_length_header_added",
      "file": "tests/middleware/tests.py",
      "line": 286
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_content_length_header_not_added_for_streaming_response",
      "type": "function",
      "name": "CommonMiddlewareTest.test_content_length_header_not_added_for_streaming_response",
      "file": "tests/middleware/tests.py",
      "line": 292
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_content_length_header_not_changed",
      "type": "function",
      "name": "CommonMiddlewareTest.test_content_length_header_not_changed",
      "file": "tests/middleware/tests.py",
      "line": 298
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_disallowed_user_agents",
      "type": "function",
      "name": "CommonMiddlewareTest.test_disallowed_user_agents",
      "file": "tests/middleware/tests.py",
      "line": 308
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_non_ascii_query_string_does_not_crash",
      "type": "function",
      "name": "CommonMiddlewareTest.test_non_ascii_query_string_does_not_crash",
      "file": "tests/middleware/tests.py",
      "line": 314
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_response_redirect_class",
      "type": "function",
      "name": "CommonMiddlewareTest.test_response_redirect_class",
      "file": "tests/middleware/tests.py",
      "line": 321
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_response_redirect_class_subclass",
      "type": "function",
      "name": "CommonMiddlewareTest.test_response_redirect_class_subclass",
      "file": "tests/middleware/tests.py",
      "line": 329
    },
    {
      "id": "tests/middleware/tests.py:CommonMiddlewareTest.test_response_redirect_class_subclass.MyCommonMiddleware",
      "type": "class",
      "name": "CommonMiddlewareTest.test_response_redirect_class_subclass.MyCommonMiddleware",
      "file": "tests/middleware/tests.py",
      "line": 330
    },
    {
      "id": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest",
      "type": "class",
      "name": "BrokenLinkEmailsMiddlewareTest",
      "file": "tests/middleware/tests.py",
      "line": 345
    },
    {
      "id": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest.setUp",
      "type": "function",
      "name": "BrokenLinkEmailsMiddlewareTest.setUp",
      "file": "tests/middleware/tests.py",
      "line": 349
    },
    {
      "id": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest.test_404_error_reporting",
      "type": "function",
      "name": "BrokenLinkEmailsMiddlewareTest.test_404_error_reporting",
      "file": "tests/middleware/tests.py",
      "line": 353
    },
    {
      "id": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest.test_404_error_reporting_no_referer",
      "type": "function",
      "name": "BrokenLinkEmailsMiddlewareTest.test_404_error_reporting_no_referer",
      "file": "tests/middleware/tests.py",
      "line": 359
    },
    {
      "id": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest.test_404_error_reporting_ignored_url",
      "type": "function",
      "name": "BrokenLinkEmailsMiddlewareTest.test_404_error_reporting_ignored_url",
      "file": "tests/middleware/tests.py",
      "line": 363
    },
    {
      "id": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest.test_custom_request_checker",
      "type": "function",
      "name": "BrokenLinkEmailsMiddlewareTest.test_custom_request_checker",
      "file": "tests/middleware/tests.py",
      "line": 368
    },
    {
      "id": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest.test_custom_request_checker.SubclassedMiddleware",
      "type": "class",
      "name": "BrokenLinkEmailsMiddlewareTest.test_custom_request_checker.SubclassedMiddleware",
      "file": "tests/middleware/tests.py",
      "line": 369
    },
    {
      "id": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest.test_custom_request_checker.SubclassedMiddleware.is_ignorable_request",
      "type": "function",
      "name": "BrokenLinkEmailsMiddlewareTest.test_custom_request_checker.SubclassedMiddleware.is_ignorable_request",
      "file": "tests/middleware/tests.py",
      "line": 372
    },
    {
      "id": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest.test_referer_equal_to_requested_url",
      "type": "function",
      "name": "BrokenLinkEmailsMiddlewareTest.test_referer_equal_to_requested_url",
      "file": "tests/middleware/tests.py",
      "line": 387
    },
    {
      "id": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest.test_referer_equal_to_requested_url_on_another_domain",
      "type": "function",
      "name": "BrokenLinkEmailsMiddlewareTest.test_referer_equal_to_requested_url_on_another_domain",
      "file": "tests/middleware/tests.py",
      "line": 409
    },
    {
      "id": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest.test_referer_equal_to_requested_url_without_trailing_slash_when_append_slash_is_set",
      "type": "function",
      "name": "BrokenLinkEmailsMiddlewareTest.test_referer_equal_to_requested_url_without_trailing_slash_when_append_slash_is_set",
      "file": "tests/middleware/tests.py",
      "line": 415
    },
    {
      "id": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest.test_referer_equal_to_requested_url_without_trailing_slash_when_append_slash_is_unset",
      "type": "function",
      "name": "BrokenLinkEmailsMiddlewareTest.test_referer_equal_to_requested_url_without_trailing_slash_when_append_slash_is_unset",
      "file": "tests/middleware/tests.py",
      "line": 422
    },
    {
      "id": "tests/middleware/tests.py:ConditionalGetMiddlewareTest",
      "type": "class",
      "name": "ConditionalGetMiddlewareTest",
      "file": "tests/middleware/tests.py",
      "line": 430
    },
    {
      "id": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.setUp",
      "type": "function",
      "name": "ConditionalGetMiddlewareTest.setUp",
      "file": "tests/middleware/tests.py",
      "line": 433
    },
    {
      "id": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_middleware_calculates_etag",
      "type": "function",
      "name": "ConditionalGetMiddlewareTest.test_middleware_calculates_etag",
      "file": "tests/middleware/tests.py",
      "line": 439
    },
    {
      "id": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_middleware_wont_overwrite_etag",
      "type": "function",
      "name": "ConditionalGetMiddlewareTest.test_middleware_wont_overwrite_etag",
      "file": "tests/middleware/tests.py",
      "line": 445
    },
    {
      "id": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_no_etag_streaming_response",
      "type": "function",
      "name": "ConditionalGetMiddlewareTest.test_no_etag_streaming_response",
      "file": "tests/middleware/tests.py",
      "line": 451
    },
    {
      "id": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_no_etag_no_store_cache",
      "type": "function",
      "name": "ConditionalGetMiddlewareTest.test_no_etag_no_store_cache",
      "file": "tests/middleware/tests.py",
      "line": 455
    },
    {
      "id": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_etag_extended_cache_control",
      "type": "function",
      "name": "ConditionalGetMiddlewareTest.test_etag_extended_cache_control",
      "file": "tests/middleware/tests.py",
      "line": 459
    },
    {
      "id": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_if_none_match_and_no_etag",
      "type": "function",
      "name": "ConditionalGetMiddlewareTest.test_if_none_match_and_no_etag",
      "file": "tests/middleware/tests.py",
      "line": 463
    },
    {
      "id": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_no_if_none_match_and_etag",
      "type": "function",
      "name": "ConditionalGetMiddlewareTest.test_no_if_none_match_and_etag",
      "file": "tests/middleware/tests.py",
      "line": 468
    },
    {
      "id": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_if_none_match_and_same_etag",
      "type": "function",
      "name": "ConditionalGetMiddlewareTest.test_if_none_match_and_same_etag",
      "file": "tests/middleware/tests.py",
      "line": 473
    },
    {
      "id": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_if_none_match_and_different_etag",
      "type": "function",
      "name": "ConditionalGetMiddlewareTest.test_if_none_match_and_different_etag",
      "file": "tests/middleware/tests.py",
      "line": 478
    },
    {
      "id": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_if_none_match_and_redirect",
      "type": "function",
      "name": "ConditionalGetMiddlewareTest.test_if_none_match_and_redirect",
      "file": "tests/middleware/tests.py",
      "line": 484
    },
    {
      "id": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_if_none_match_and_client_error",
      "type": "function",
      "name": "ConditionalGetMiddlewareTest.test_if_none_match_and_client_error",
      "file": "tests/middleware/tests.py",
      "line": 491
    },
    {
      "id": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_if_modified_since_and_no_last_modified",
      "type": "function",
      "name": "ConditionalGetMiddlewareTest.test_if_modified_since_and_no_last_modified",
      "file": "tests/middleware/tests.py",
      "line": 499
    },
    {
      "id": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_no_if_modified_since_and_last_modified",
      "type": "function",
      "name": "ConditionalGetMiddlewareTest.test_no_if_modified_since_and_last_modified",
      "file": "tests/middleware/tests.py",
      "line": 504
    },
    {
      "id": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_if_modified_since_and_same_last_modified",
      "type": "function",
      "name": "ConditionalGetMiddlewareTest.test_if_modified_since_and_same_last_modified",
      "file": "tests/middleware/tests.py",
      "line": 509
    },
    {
      "id": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_if_modified_since_and_last_modified_in_the_past",
      "type": "function",
      "name": "ConditionalGetMiddlewareTest.test_if_modified_since_and_last_modified_in_the_past",
      "file": "tests/middleware/tests.py",
      "line": 515
    },
    {
      "id": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_if_modified_since_and_last_modified_in_the_future",
      "type": "function",
      "name": "ConditionalGetMiddlewareTest.test_if_modified_since_and_last_modified_in_the_future",
      "file": "tests/middleware/tests.py",
      "line": 521
    },
    {
      "id": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_if_modified_since_and_redirect",
      "type": "function",
      "name": "ConditionalGetMiddlewareTest.test_if_modified_since_and_redirect",
      "file": "tests/middleware/tests.py",
      "line": 527
    },
    {
      "id": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_if_modified_since_and_client_error",
      "type": "function",
      "name": "ConditionalGetMiddlewareTest.test_if_modified_since_and_client_error",
      "file": "tests/middleware/tests.py",
      "line": 535
    },
    {
      "id": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_not_modified_headers",
      "type": "function",
      "name": "ConditionalGetMiddlewareTest.test_not_modified_headers",
      "file": "tests/middleware/tests.py",
      "line": 542
    },
    {
      "id": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_no_unsafe",
      "type": "function",
      "name": "ConditionalGetMiddlewareTest.test_no_unsafe",
      "file": "tests/middleware/tests.py",
      "line": 564
    },
    {
      "id": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_no_head",
      "type": "function",
      "name": "ConditionalGetMiddlewareTest.test_no_head",
      "file": "tests/middleware/tests.py",
      "line": 578
    },
    {
      "id": "tests/middleware/tests.py:XFrameOptionsMiddlewareTest",
      "type": "class",
      "name": "XFrameOptionsMiddlewareTest",
      "file": "tests/middleware/tests.py",
      "line": 590
    },
    {
      "id": "tests/middleware/tests.py:XFrameOptionsMiddlewareTest.test_same_origin",
      "type": "function",
      "name": "XFrameOptionsMiddlewareTest.test_same_origin",
      "file": "tests/middleware/tests.py",
      "line": 595
    },
    {
      "id": "tests/middleware/tests.py:XFrameOptionsMiddlewareTest.test_deny",
      "type": "function",
      "name": "XFrameOptionsMiddlewareTest.test_deny",
      "file": "tests/middleware/tests.py",
      "line": 608
    },
    {
      "id": "tests/middleware/tests.py:XFrameOptionsMiddlewareTest.test_defaults_sameorigin",
      "type": "function",
      "name": "XFrameOptionsMiddlewareTest.test_defaults_sameorigin",
      "file": "tests/middleware/tests.py",
      "line": 621
    },
    {
      "id": "tests/middleware/tests.py:XFrameOptionsMiddlewareTest.test_dont_set_if_set",
      "type": "function",
      "name": "XFrameOptionsMiddlewareTest.test_dont_set_if_set",
      "file": "tests/middleware/tests.py",
      "line": 631
    },
    {
      "id": "tests/middleware/tests.py:XFrameOptionsMiddlewareTest.test_response_exempt",
      "type": "function",
      "name": "XFrameOptionsMiddlewareTest.test_response_exempt",
      "file": "tests/middleware/tests.py",
      "line": 648
    },
    {
      "id": "tests/middleware/tests.py:XFrameOptionsMiddlewareTest.test_is_extendable",
      "type": "function",
      "name": "XFrameOptionsMiddlewareTest.test_is_extendable",
      "file": "tests/middleware/tests.py",
      "line": 664
    },
    {
      "id": "tests/middleware/tests.py:XFrameOptionsMiddlewareTest.test_is_extendable.OtherXFrameOptionsMiddleware",
      "type": "class",
      "name": "XFrameOptionsMiddlewareTest.test_is_extendable.OtherXFrameOptionsMiddleware",
      "file": "tests/middleware/tests.py",
      "line": 670
    },
    {
      "id": "tests/middleware/tests.py:XFrameOptionsMiddlewareTest.test_is_extendable.OtherXFrameOptionsMiddleware.get_xframe_options_value",
      "type": "function",
      "name": "XFrameOptionsMiddlewareTest.test_is_extendable.OtherXFrameOptionsMiddleware.get_xframe_options_value",
      "file": "tests/middleware/tests.py",
      "line": 672
    },
    {
      "id": "tests/middleware/tests.py:GZipMiddlewareTest",
      "type": "class",
      "name": "GZipMiddlewareTest",
      "file": "tests/middleware/tests.py",
      "line": 695
    },
    {
      "id": "tests/middleware/tests.py:GZipMiddlewareTest.setUp",
      "type": "function",
      "name": "GZipMiddlewareTest.setUp",
      "file": "tests/middleware/tests.py",
      "line": 706
    },
    {
      "id": "tests/middleware/tests.py:GZipMiddlewareTest.decompress",
      "type": "function",
      "name": "GZipMiddlewareTest.decompress",
      "file": "tests/middleware/tests.py",
      "line": 720
    },
    {
      "id": "tests/middleware/tests.py:GZipMiddlewareTest.get_mtime",
      "type": "function",
      "name": "GZipMiddlewareTest.get_mtime",
      "file": "tests/middleware/tests.py",
      "line": 725
    },
    {
      "id": "tests/middleware/tests.py:GZipMiddlewareTest.test_compress_response",
      "type": "function",
      "name": "GZipMiddlewareTest.test_compress_response",
      "file": "tests/middleware/tests.py",
      "line": 730
    },
    {
      "id": "tests/middleware/tests.py:GZipMiddlewareTest.test_compress_streaming_response",
      "type": "function",
      "name": "GZipMiddlewareTest.test_compress_streaming_response",
      "file": "tests/middleware/tests.py",
      "line": 739
    },
    {
      "id": "tests/middleware/tests.py:GZipMiddlewareTest.test_compress_streaming_response_unicode",
      "type": "function",
      "name": "GZipMiddlewareTest.test_compress_streaming_response_unicode",
      "file": "tests/middleware/tests.py",
      "line": 748
    },
    {
      "id": "tests/middleware/tests.py:GZipMiddlewareTest.test_compress_file_response",
      "type": "function",
      "name": "GZipMiddlewareTest.test_compress_file_response",
      "file": "tests/middleware/tests.py",
      "line": 760
    },
    {
      "id": "tests/middleware/tests.py:GZipMiddlewareTest.test_compress_non_200_response",
      "type": "function",
      "name": "GZipMiddlewareTest.test_compress_non_200_response",
      "file": "tests/middleware/tests.py",
      "line": 773
    },
    {
      "id": "tests/middleware/tests.py:GZipMiddlewareTest.test_no_compress_short_response",
      "type": "function",
      "name": "GZipMiddlewareTest.test_no_compress_short_response",
      "file": "tests/middleware/tests.py",
      "line": 783
    },
    {
      "id": "tests/middleware/tests.py:GZipMiddlewareTest.test_no_compress_compressed_response",
      "type": "function",
      "name": "GZipMiddlewareTest.test_no_compress_compressed_response",
      "file": "tests/middleware/tests.py",
      "line": 792
    },
    {
      "id": "tests/middleware/tests.py:GZipMiddlewareTest.test_no_compress_incompressible_response",
      "type": "function",
      "name": "GZipMiddlewareTest.test_no_compress_incompressible_response",
      "file": "tests/middleware/tests.py",
      "line": 801
    },
    {
      "id": "tests/middleware/tests.py:GZipMiddlewareTest.test_compress_deterministic",
      "type": "function",
      "name": "GZipMiddlewareTest.test_compress_deterministic",
      "file": "tests/middleware/tests.py",
      "line": 810
    },
    {
      "id": "tests/middleware/tests.py:ETagGZipMiddlewareTest",
      "type": "class",
      "name": "ETagGZipMiddlewareTest",
      "file": "tests/middleware/tests.py",
      "line": 825
    },
    {
      "id": "tests/middleware/tests.py:ETagGZipMiddlewareTest.test_strong_etag_modified",
      "type": "function",
      "name": "ETagGZipMiddlewareTest.test_strong_etag_modified",
      "file": "tests/middleware/tests.py",
      "line": 832
    },
    {
      "id": "tests/middleware/tests.py:ETagGZipMiddlewareTest.test_weak_etag_not_modified",
      "type": "function",
      "name": "ETagGZipMiddlewareTest.test_weak_etag_not_modified",
      "file": "tests/middleware/tests.py",
      "line": 842
    },
    {
      "id": "tests/middleware/tests.py:ETagGZipMiddlewareTest.test_etag_match",
      "type": "function",
      "name": "ETagGZipMiddlewareTest.test_etag_match",
      "file": "tests/middleware/tests.py",
      "line": 852
    },
    {
      "id": "tests/middleware/urls.py",
      "type": "file",
      "name": "urls.py",
      "file": "tests/middleware/urls.py",
      "line": 0
    },
    {
      "id": "tests/middleware/views.py",
      "type": "file",
      "name": "views.py",
      "file": "tests/middleware/views.py",
      "line": 0
    },
    {
      "id": "tests/middleware/views.py:empty_view",
      "type": "function",
      "name": "empty_view",
      "file": "tests/middleware/views.py",
      "line": 4
    },
    {
      "id": "tests/test_runner",
      "type": "directory",
      "name": "test_runner",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/test_runner/runner.py",
      "type": "file",
      "name": "runner.py",
      "file": "tests/test_runner/runner.py",
      "line": 0
    },
    {
      "id": "tests/test_runner/runner.py:CustomOptionsTestRunner",
      "type": "class",
      "name": "CustomOptionsTestRunner",
      "file": "tests/test_runner/runner.py",
      "line": 4
    },
    {
      "id": "tests/test_runner/runner.py:CustomOptionsTestRunner.add_arguments",
      "type": "function",
      "name": "CustomOptionsTestRunner.add_arguments",
      "file": "tests/test_runner/runner.py",
      "line": 14
    },
    {
      "id": "tests/test_runner/runner.py:CustomOptionsTestRunner.run_tests",
      "type": "function",
      "name": "CustomOptionsTestRunner.run_tests",
      "file": "tests/test_runner/runner.py",
      "line": 19
    },
    {
      "id": "tests/test_runner/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/test_runner/models.py",
      "line": 0
    },
    {
      "id": "tests/test_runner/models.py:Person",
      "type": "class",
      "name": "Person",
      "file": "tests/test_runner/models.py",
      "line": 4
    },
    {
      "id": "tests/test_runner/models.py:ThroughBase",
      "type": "class",
      "name": "ThroughBase",
      "file": "tests/test_runner/models.py",
      "line": 11
    },
    {
      "id": "tests/test_runner/models.py:Through",
      "type": "class",
      "name": "Through",
      "file": "tests/test_runner/models.py",
      "line": 16
    },
    {
      "id": "tests/test_runner/models.py:B",
      "type": "class",
      "name": "B",
      "file": "tests/test_runner/models.py",
      "line": 20
    },
    {
      "id": "tests/test_runner/test_discover_runner.py",
      "type": "file",
      "name": "test_discover_runner.py",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 0
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:change_cwd",
      "type": "function",
      "name": "change_cwd",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 13
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests",
      "type": "class",
      "name": "DiscoverRunnerTests",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 24
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_init_debug_mode",
      "type": "function",
      "name": "DiscoverRunnerTests.test_init_debug_mode",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 26
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_add_arguments_debug_mode",
      "type": "function",
      "name": "DiscoverRunnerTests.test_add_arguments_debug_mode",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 30
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_dotted_test_module",
      "type": "function",
      "name": "DiscoverRunnerTests.test_dotted_test_module",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 39
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_dotted_test_class_vanilla_unittest",
      "type": "function",
      "name": "DiscoverRunnerTests.test_dotted_test_class_vanilla_unittest",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 46
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_dotted_test_class_django_testcase",
      "type": "function",
      "name": "DiscoverRunnerTests.test_dotted_test_class_django_testcase",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 53
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_dotted_test_method_django_testcase",
      "type": "function",
      "name": "DiscoverRunnerTests.test_dotted_test_method_django_testcase",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 60
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_pattern",
      "type": "function",
      "name": "DiscoverRunnerTests.test_pattern",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 67
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_file_path",
      "type": "function",
      "name": "DiscoverRunnerTests.test_file_path",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 74
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_empty_label",
      "type": "function",
      "name": "DiscoverRunnerTests.test_empty_label",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 82
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_empty_test_case",
      "type": "function",
      "name": "DiscoverRunnerTests.test_empty_test_case",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 94
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_discovery_on_package",
      "type": "function",
      "name": "DiscoverRunnerTests.test_discovery_on_package",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 101
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_ignore_adjacent",
      "type": "function",
      "name": "DiscoverRunnerTests.test_ignore_adjacent",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 108
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_testcase_ordering",
      "type": "function",
      "name": "DiscoverRunnerTests.test_testcase_ordering",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 122
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_duplicates_ignored",
      "type": "function",
      "name": "DiscoverRunnerTests.test_duplicates_ignored",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 136
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_reverse",
      "type": "function",
      "name": "DiscoverRunnerTests.test_reverse",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 147
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_overridable_get_test_runner_kwargs",
      "type": "function",
      "name": "DiscoverRunnerTests.test_overridable_get_test_runner_kwargs",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 176
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_overridable_test_suite",
      "type": "function",
      "name": "DiscoverRunnerTests.test_overridable_test_suite",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 179
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_overridable_test_runner",
      "type": "function",
      "name": "DiscoverRunnerTests.test_overridable_test_runner",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 182
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_overridable_test_loader",
      "type": "function",
      "name": "DiscoverRunnerTests.test_overridable_test_loader",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 185
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_tags",
      "type": "function",
      "name": "DiscoverRunnerTests.test_tags",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 188
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_exclude_tags",
      "type": "function",
      "name": "DiscoverRunnerTests.test_exclude_tags",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 196
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_tag_inheritance",
      "type": "function",
      "name": "DiscoverRunnerTests.test_tag_inheritance",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 204
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_tag_inheritance.count_tests",
      "type": "function",
      "name": "DiscoverRunnerTests.test_tag_inheritance.count_tests",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 205
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_included_tags_displayed",
      "type": "function",
      "name": "DiscoverRunnerTests.test_included_tags_displayed",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 216
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_excluded_tags_displayed",
      "type": "function",
      "name": "DiscoverRunnerTests.test_excluded_tags_displayed",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 222
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests",
      "type": "class",
      "name": "DiscoverRunnerGetDatabasesTests",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 229
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests.get_databases",
      "type": "function",
      "name": "DiscoverRunnerGetDatabasesTests.get_databases",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 233
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests.test_mixed",
      "type": "function",
      "name": "DiscoverRunnerGetDatabasesTests.test_mixed",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 239
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests.test_all",
      "type": "function",
      "name": "DiscoverRunnerGetDatabasesTests.test_all",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 244
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests.test_default_and_other",
      "type": "function",
      "name": "DiscoverRunnerGetDatabasesTests.test_default_and_other",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 249
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests.test_default_only",
      "type": "function",
      "name": "DiscoverRunnerGetDatabasesTests.test_default_only",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 257
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests.test_other_only",
      "type": "function",
      "name": "DiscoverRunnerGetDatabasesTests.test_other_only",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 262
    },
    {
      "id": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests.test_no_databases_required",
      "type": "function",
      "name": "DiscoverRunnerGetDatabasesTests.test_no_databases_required",
      "file": "tests/test_runner/test_discover_runner.py",
      "line": 267
    },
    {
      "id": "tests/test_runner/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/test_runner/__init__.py",
      "line": 0
    },
    {
      "id": "tests/test_runner/test_parallel.py",
      "type": "file",
      "name": "test_parallel.py",
      "file": "tests/test_runner/test_parallel.py",
      "line": 0
    },
    {
      "id": "tests/test_runner/test_parallel.py:ExceptionThatFailsUnpickling",
      "type": "class",
      "name": "ExceptionThatFailsUnpickling",
      "file": "tests/test_runner/test_parallel.py",
      "line": 13
    },
    {
      "id": "tests/test_runner/test_parallel.py:ParallelTestRunnerTest",
      "type": "class",
      "name": "ParallelTestRunnerTest",
      "file": "tests/test_runner/test_parallel.py",
      "line": 22
    },
    {
      "id": "tests/test_runner/test_parallel.py:ParallelTestRunnerTest.test_subtest",
      "type": "function",
      "name": "ParallelTestRunnerTest.test_subtest",
      "file": "tests/test_runner/test_parallel.py",
      "line": 31
    },
    {
      "id": "tests/test_runner/test_parallel.py:SampleFailingSubtest",
      "type": "class",
      "name": "SampleFailingSubtest",
      "file": "tests/test_runner/test_parallel.py",
      "line": 40
    },
    {
      "id": "tests/test_runner/test_parallel.py:SampleFailingSubtest.dummy_test",
      "type": "function",
      "name": "SampleFailingSubtest.dummy_test",
      "file": "tests/test_runner/test_parallel.py",
      "line": 44
    },
    {
      "id": "tests/test_runner/test_parallel.py:RemoteTestResultTest",
      "type": "class",
      "name": "RemoteTestResultTest",
      "file": "tests/test_runner/test_parallel.py",
      "line": 53
    },
    {
      "id": "tests/test_runner/test_parallel.py:RemoteTestResultTest.test_pickle_errors_detection",
      "type": "function",
      "name": "RemoteTestResultTest.test_pickle_errors_detection",
      "file": "tests/test_runner/test_parallel.py",
      "line": 55
    },
    {
      "id": "tests/test_runner/test_parallel.py:RemoteTestResultTest.test_add_failing_subtests",
      "type": "function",
      "name": "RemoteTestResultTest.test_add_failing_subtests",
      "file": "tests/test_runner/test_parallel.py",
      "line": 67
    },
    {
      "id": "tests/test_runner/test_debug_sql.py",
      "type": "file",
      "name": "test_debug_sql.py",
      "file": "tests/test_runner/test_debug_sql.py",
      "line": 0
    },
    {
      "id": "tests/test_runner/test_debug_sql.py:TestDebugSQL",
      "type": "class",
      "name": "TestDebugSQL",
      "file": "tests/test_runner/test_debug_sql.py",
      "line": 12
    },
    {
      "id": "tests/test_runner/test_debug_sql.py:TestDebugSQL.PassingTest",
      "type": "class",
      "name": "TestDebugSQL.PassingTest",
      "file": "tests/test_runner/test_debug_sql.py",
      "line": 14
    },
    {
      "id": "tests/test_runner/test_debug_sql.py:TestDebugSQL.PassingTest.runTest",
      "type": "function",
      "name": "TestDebugSQL.PassingTest.runTest",
      "file": "tests/test_runner/test_debug_sql.py",
      "line": 15
    },
    {
      "id": "tests/test_runner/test_debug_sql.py:TestDebugSQL.FailingTest",
      "type": "class",
      "name": "TestDebugSQL.FailingTest",
      "file": "tests/test_runner/test_debug_sql.py",
      "line": 18
    },
    {
      "id": "tests/test_runner/test_debug_sql.py:TestDebugSQL.FailingTest.runTest",
      "type": "function",
      "name": "TestDebugSQL.FailingTest.runTest",
      "file": "tests/test_runner/test_debug_sql.py",
      "line": 19
    },
    {
      "id": "tests/test_runner/test_debug_sql.py:TestDebugSQL.ErrorTest",
      "type": "class",
      "name": "TestDebugSQL.ErrorTest",
      "file": "tests/test_runner/test_debug_sql.py",
      "line": 23
    },
    {
      "id": "tests/test_runner/test_debug_sql.py:TestDebugSQL.ErrorTest.runTest",
      "type": "function",
      "name": "TestDebugSQL.ErrorTest.runTest",
      "file": "tests/test_runner/test_debug_sql.py",
      "line": 24
    },
    {
      "id": "tests/test_runner/test_debug_sql.py:TestDebugSQL.PassingSubTest",
      "type": "class",
      "name": "TestDebugSQL.PassingSubTest",
      "file": "tests/test_runner/test_debug_sql.py",
      "line": 28
    },
    {
      "id": "tests/test_runner/test_debug_sql.py:TestDebugSQL.PassingSubTest.runTest",
      "type": "function",
      "name": "TestDebugSQL.PassingSubTest.runTest",
      "file": "tests/test_runner/test_debug_sql.py",
      "line": 29
    },
    {
      "id": "tests/test_runner/test_debug_sql.py:TestDebugSQL.FailingSubTest",
      "type": "class",
      "name": "TestDebugSQL.FailingSubTest",
      "file": "tests/test_runner/test_debug_sql.py",
      "line": 33
    },
    {
      "id": "tests/test_runner/test_debug_sql.py:TestDebugSQL.FailingSubTest.runTest",
      "type": "function",
      "name": "TestDebugSQL.FailingSubTest.runTest",
      "file": "tests/test_runner/test_debug_sql.py",
      "line": 34
    },
    {
      "id": "tests/test_runner/test_debug_sql.py:TestDebugSQL.ErrorSubTest",
      "type": "class",
      "name": "TestDebugSQL.ErrorSubTest",
      "file": "tests/test_runner/test_debug_sql.py",
      "line": 39
    },
    {
      "id": "tests/test_runner/test_debug_sql.py:TestDebugSQL.ErrorSubTest.runTest",
      "type": "function",
      "name": "TestDebugSQL.ErrorSubTest.runTest",
      "file": "tests/test_runner/test_debug_sql.py",
      "line": 40
    },
    {
      "id": "tests/test_runner/test_debug_sql.py:TestDebugSQL._test_output",
      "type": "function",
      "name": "TestDebugSQL._test_output",
      "file": "tests/test_runner/test_debug_sql.py",
      "line": 45
    },
    {
      "id": "tests/test_runner/test_debug_sql.py:TestDebugSQL.test_output_normal",
      "type": "function",
      "name": "TestDebugSQL.test_output_normal",
      "file": "tests/test_runner/test_debug_sql.py",
      "line": 66
    },
    {
      "id": "tests/test_runner/test_debug_sql.py:TestDebugSQL.test_output_verbose",
      "type": "function",
      "name": "TestDebugSQL.test_output_verbose",
      "file": "tests/test_runner/test_debug_sql.py",
      "line": 73
    },
    {
      "id": "tests/test_runner/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/test_runner/tests.py",
      "line": 0
    },
    {
      "id": "tests/test_runner/tests.py:DependencyOrderingTests",
      "type": "class",
      "name": "DependencyOrderingTests",
      "file": "tests/test_runner/tests.py",
      "line": 22
    },
    {
      "id": "tests/test_runner/tests.py:DependencyOrderingTests.test_simple_dependencies",
      "type": "function",
      "name": "DependencyOrderingTests.test_simple_dependencies",
      "file": "tests/test_runner/tests.py",
      "line": 24
    },
    {
      "id": "tests/test_runner/tests.py:DependencyOrderingTests.test_chained_dependencies",
      "type": "function",
      "name": "DependencyOrderingTests.test_chained_dependencies",
      "file": "tests/test_runner/tests.py",
      "line": 44
    },
    {
      "id": "tests/test_runner/tests.py:DependencyOrderingTests.test_multiple_dependencies",
      "type": "function",
      "name": "DependencyOrderingTests.test_multiple_dependencies",
      "file": "tests/test_runner/tests.py",
      "line": 69
    },
    {
      "id": "tests/test_runner/tests.py:DependencyOrderingTests.test_circular_dependencies",
      "type": "function",
      "name": "DependencyOrderingTests.test_circular_dependencies",
      "file": "tests/test_runner/tests.py",
      "line": 99
    },
    {
      "id": "tests/test_runner/tests.py:DependencyOrderingTests.test_own_alias_dependency",
      "type": "function",
      "name": "DependencyOrderingTests.test_own_alias_dependency",
      "file": "tests/test_runner/tests.py",
      "line": 112
    },
    {
      "id": "tests/test_runner/tests.py:MockTestRunner",
      "type": "class",
      "name": "MockTestRunner",
      "file": "tests/test_runner/tests.py",
      "line": 132
    },
    {
      "id": "tests/test_runner/tests.py:ManageCommandTests",
      "type": "class",
      "name": "ManageCommandTests",
      "file": "tests/test_runner/tests.py",
      "line": 140
    },
    {
      "id": "tests/test_runner/tests.py:ManageCommandTests.test_custom_test_runner",
      "type": "function",
      "name": "ManageCommandTests.test_custom_test_runner",
      "file": "tests/test_runner/tests.py",
      "line": 142
    },
    {
      "id": "tests/test_runner/tests.py:ManageCommandTests.test_bad_test_runner",
      "type": "function",
      "name": "ManageCommandTests.test_bad_test_runner",
      "file": "tests/test_runner/tests.py",
      "line": 147
    },
    {
      "id": "tests/test_runner/tests.py:CustomTestRunnerOptionsSettingsTests",
      "type": "class",
      "name": "CustomTestRunnerOptionsSettingsTests",
      "file": "tests/test_runner/tests.py",
      "line": 152
    },
    {
      "id": "tests/test_runner/tests.py:CustomTestRunnerOptionsSettingsTests.setUp",
      "type": "function",
      "name": "CustomTestRunnerOptionsSettingsTests.setUp",
      "file": "tests/test_runner/tests.py",
      "line": 157
    },
    {
      "id": "tests/test_runner/tests.py:CustomTestRunnerOptionsSettingsTests.test_default_options",
      "type": "function",
      "name": "CustomTestRunnerOptionsSettingsTests.test_default_options",
      "file": "tests/test_runner/tests.py",
      "line": 164
    },
    {
      "id": "tests/test_runner/tests.py:CustomTestRunnerOptionsSettingsTests.test_default_and_given_options",
      "type": "function",
      "name": "CustomTestRunnerOptionsSettingsTests.test_default_and_given_options",
      "file": "tests/test_runner/tests.py",
      "line": 170
    },
    {
      "id": "tests/test_runner/tests.py:CustomTestRunnerOptionsSettingsTests.test_option_name_and_value_separated",
      "type": "function",
      "name": "CustomTestRunnerOptionsSettingsTests.test_option_name_and_value_separated",
      "file": "tests/test_runner/tests.py",
      "line": 176
    },
    {
      "id": "tests/test_runner/tests.py:CustomTestRunnerOptionsSettingsTests.test_all_options_given",
      "type": "function",
      "name": "CustomTestRunnerOptionsSettingsTests.test_all_options_given",
      "file": "tests/test_runner/tests.py",
      "line": 182
    },
    {
      "id": "tests/test_runner/tests.py:CustomTestRunnerOptionsCmdlineTests",
      "type": "class",
      "name": "CustomTestRunnerOptionsCmdlineTests",
      "file": "tests/test_runner/tests.py",
      "line": 190
    },
    {
      "id": "tests/test_runner/tests.py:CustomTestRunnerOptionsCmdlineTests.setUp",
      "type": "function",
      "name": "CustomTestRunnerOptionsCmdlineTests.setUp",
      "file": "tests/test_runner/tests.py",
      "line": 195
    },
    {
      "id": "tests/test_runner/tests.py:CustomTestRunnerOptionsCmdlineTests.test_testrunner_option",
      "type": "function",
      "name": "CustomTestRunnerOptionsCmdlineTests.test_testrunner_option",
      "file": "tests/test_runner/tests.py",
      "line": 199
    },
    {
      "id": "tests/test_runner/tests.py:CustomTestRunnerOptionsCmdlineTests.test_testrunner_equals",
      "type": "function",
      "name": "CustomTestRunnerOptionsCmdlineTests.test_testrunner_equals",
      "file": "tests/test_runner/tests.py",
      "line": 208
    },
    {
      "id": "tests/test_runner/tests.py:CustomTestRunnerOptionsCmdlineTests.test_no_testrunner",
      "type": "function",
      "name": "CustomTestRunnerOptionsCmdlineTests.test_no_testrunner",
      "file": "tests/test_runner/tests.py",
      "line": 217
    },
    {
      "id": "tests/test_runner/tests.py:Ticket17477RegressionTests",
      "type": "class",
      "name": "Ticket17477RegressionTests",
      "file": "tests/test_runner/tests.py",
      "line": 225
    },
    {
      "id": "tests/test_runner/tests.py:Ticket17477RegressionTests.setUp",
      "type": "function",
      "name": "Ticket17477RegressionTests.setUp",
      "file": "tests/test_runner/tests.py",
      "line": 226
    },
    {
      "id": "tests/test_runner/tests.py:Ticket17477RegressionTests.test_ticket_17477",
      "type": "function",
      "name": "Ticket17477RegressionTests.test_ticket_17477",
      "file": "tests/test_runner/tests.py",
      "line": 230
    },
    {
      "id": "tests/test_runner/tests.py:SQLiteInMemoryTestDbs",
      "type": "class",
      "name": "SQLiteInMemoryTestDbs",
      "file": "tests/test_runner/tests.py",
      "line": 237
    },
    {
      "id": "tests/test_runner/tests.py:SQLiteInMemoryTestDbs.test_transaction_support",
      "type": "function",
      "name": "SQLiteInMemoryTestDbs.test_transaction_support",
      "file": "tests/test_runner/tests.py",
      "line": 243
    },
    {
      "id": "tests/test_runner/tests.py:DummyBackendTest",
      "type": "class",
      "name": "DummyBackendTest",
      "file": "tests/test_runner/tests.py",
      "line": 280
    },
    {
      "id": "tests/test_runner/tests.py:DummyBackendTest.test_setup_databases",
      "type": "function",
      "name": "DummyBackendTest.test_setup_databases",
      "file": "tests/test_runner/tests.py",
      "line": 281
    },
    {
      "id": "tests/test_runner/tests.py:AliasedDefaultTestSetupTest",
      "type": "class",
      "name": "AliasedDefaultTestSetupTest",
      "file": "tests/test_runner/tests.py",
      "line": 292
    },
    {
      "id": "tests/test_runner/tests.py:AliasedDefaultTestSetupTest.test_setup_aliased_default_database",
      "type": "function",
      "name": "AliasedDefaultTestSetupTest.test_setup_aliased_default_database",
      "file": "tests/test_runner/tests.py",
      "line": 293
    },
    {
      "id": "tests/test_runner/tests.py:SetupDatabasesTests",
      "type": "class",
      "name": "SetupDatabasesTests",
      "file": "tests/test_runner/tests.py",
      "line": 311
    },
    {
      "id": "tests/test_runner/tests.py:SetupDatabasesTests.setUp",
      "type": "function",
      "name": "SetupDatabasesTests.setUp",
      "file": "tests/test_runner/tests.py",
      "line": 313
    },
    {
      "id": "tests/test_runner/tests.py:SetupDatabasesTests.test_setup_aliased_databases",
      "type": "function",
      "name": "SetupDatabasesTests.test_setup_aliased_databases",
      "file": "tests/test_runner/tests.py",
      "line": 316
    },
    {
      "id": "tests/test_runner/tests.py:SetupDatabasesTests.test_destroy_test_db_restores_db_name",
      "type": "function",
      "name": "SetupDatabasesTests.test_destroy_test_db_restores_db_name",
      "file": "tests/test_runner/tests.py",
      "line": 334
    },
    {
      "id": "tests/test_runner/tests.py:SetupDatabasesTests.test_serialization",
      "type": "function",
      "name": "SetupDatabasesTests.test_serialization",
      "file": "tests/test_runner/tests.py",
      "line": 347
    },
    {
      "id": "tests/test_runner/tests.py:SetupDatabasesTests.test_serialized_off",
      "type": "function",
      "name": "SetupDatabasesTests.test_serialized_off",
      "file": "tests/test_runner/tests.py",
      "line": 360
    },
    {
      "id": "tests/test_runner/tests.py:AutoIncrementResetTest",
      "type": "class",
      "name": "AutoIncrementResetTest",
      "file": "tests/test_runner/tests.py",
      "line": 376
    },
    {
      "id": "tests/test_runner/tests.py:AutoIncrementResetTest._test",
      "type": "function",
      "name": "AutoIncrementResetTest._test",
      "file": "tests/test_runner/tests.py",
      "line": 386
    },
    {
      "id": "tests/test_runner/tests.py:AutoIncrementResetTest.test_autoincrement_reset1",
      "type": "function",
      "name": "AutoIncrementResetTest.test_autoincrement_reset1",
      "file": "tests/test_runner/tests.py",
      "line": 398
    },
    {
      "id": "tests/test_runner/tests.py:AutoIncrementResetTest.test_autoincrement_reset2",
      "type": "function",
      "name": "AutoIncrementResetTest.test_autoincrement_reset2",
      "file": "tests/test_runner/tests.py",
      "line": 401
    },
    {
      "id": "tests/test_runner/tests.py:EmptyDefaultDatabaseTest",
      "type": "class",
      "name": "EmptyDefaultDatabaseTest",
      "file": "tests/test_runner/tests.py",
      "line": 405
    },
    {
      "id": "tests/test_runner/tests.py:EmptyDefaultDatabaseTest.test_empty_default_database",
      "type": "function",
      "name": "EmptyDefaultDatabaseTest.test_empty_default_database",
      "file": "tests/test_runner/tests.py",
      "line": 406
    },
    {
      "id": "tests/test_runner/tests.py:RunTestsExceptionHandlingTests",
      "type": "class",
      "name": "RunTestsExceptionHandlingTests",
      "file": "tests/test_runner/tests.py",
      "line": 417
    },
    {
      "id": "tests/test_runner/tests.py:RunTestsExceptionHandlingTests.test_run_checks_raises",
      "type": "function",
      "name": "RunTestsExceptionHandlingTests.test_run_checks_raises",
      "file": "tests/test_runner/tests.py",
      "line": 418
    },
    {
      "id": "tests/test_runner/tests.py:RunTestsExceptionHandlingTests.test_run_checks_raises_and_teardown_raises",
      "type": "function",
      "name": "RunTestsExceptionHandlingTests.test_run_checks_raises_and_teardown_raises",
      "file": "tests/test_runner/tests.py",
      "line": 434
    },
    {
      "id": "tests/test_runner/tests.py:RunTestsExceptionHandlingTests.test_run_checks_passes_and_teardown_raises",
      "type": "function",
      "name": "RunTestsExceptionHandlingTests.test_run_checks_passes_and_teardown_raises",
      "file": "tests/test_runner/tests.py",
      "line": 452
    },
    {
      "id": "tests/admin_utils",
      "type": "directory",
      "name": "admin_utils",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_utils/test_logentry.py",
      "type": "file",
      "name": "test_logentry.py",
      "file": "tests/admin_utils/test_logentry.py",
      "line": 0
    },
    {
      "id": "tests/admin_utils/test_logentry.py:LogEntryTests",
      "type": "class",
      "name": "LogEntryTests",
      "file": "tests/admin_utils/test_logentry.py",
      "line": 17
    },
    {
      "id": "tests/admin_utils/test_logentry.py:LogEntryTests.setUp",
      "type": "function",
      "name": "LogEntryTests.setUp",
      "file": "tests/admin_utils/test_logentry.py",
      "line": 18
    },
    {
      "id": "tests/admin_utils/test_logentry.py:LogEntryTests.test_logentry_save",
      "type": "function",
      "name": "LogEntryTests.test_logentry_save",
      "file": "tests/admin_utils/test_logentry.py",
      "line": 33
    },
    {
      "id": "tests/admin_utils/test_logentry.py:LogEntryTests.test_logentry_change_message",
      "type": "function",
      "name": "LogEntryTests.test_logentry_change_message",
      "file": "tests/admin_utils/test_logentry.py",
      "line": 43
    },
    {
      "id": "tests/admin_utils/test_logentry.py:LogEntryTests.test_logentry_change_message_not_json",
      "type": "function",
      "name": "LogEntryTests.test_logentry_change_message_not_json",
      "file": "tests/admin_utils/test_logentry.py",
      "line": 69
    },
    {
      "id": "tests/admin_utils/test_logentry.py:LogEntryTests.test_logentry_change_message_localized_datetime_input",
      "type": "function",
      "name": "LogEntryTests.test_logentry_change_message_localized_datetime_input",
      "file": "tests/admin_utils/test_logentry.py",
      "line": 75
    },
    {
      "id": "tests/admin_utils/test_logentry.py:LogEntryTests.test_logentry_change_message_formsets",
      "type": "function",
      "name": "LogEntryTests.test_logentry_change_message_formsets",
      "file": "tests/admin_utils/test_logentry.py",
      "line": 90
    },
    {
      "id": "tests/admin_utils/test_logentry.py:LogEntryTests.test_logentry_get_edited_object",
      "type": "function",
      "name": "LogEntryTests.test_logentry_get_edited_object",
      "file": "tests/admin_utils/test_logentry.py",
      "line": 146
    },
    {
      "id": "tests/admin_utils/test_logentry.py:LogEntryTests.test_logentry_get_admin_url",
      "type": "function",
      "name": "LogEntryTests.test_logentry_get_admin_url",
      "file": "tests/admin_utils/test_logentry.py",
      "line": 155
    },
    {
      "id": "tests/admin_utils/test_logentry.py:LogEntryTests.test_logentry_unicode",
      "type": "function",
      "name": "LogEntryTests.test_logentry_unicode",
      "file": "tests/admin_utils/test_logentry.py",
      "line": 168
    },
    {
      "id": "tests/admin_utils/test_logentry.py:LogEntryTests.test_logentry_repr",
      "type": "function",
      "name": "LogEntryTests.test_logentry_repr",
      "file": "tests/admin_utils/test_logentry.py",
      "line": 184
    },
    {
      "id": "tests/admin_utils/test_logentry.py:LogEntryTests.test_log_action",
      "type": "function",
      "name": "LogEntryTests.test_log_action",
      "file": "tests/admin_utils/test_logentry.py",
      "line": 188
    },
    {
      "id": "tests/admin_utils/test_logentry.py:LogEntryTests.test_recentactions_without_content_type",
      "type": "function",
      "name": "LogEntryTests.test_recentactions_without_content_type",
      "file": "tests/admin_utils/test_logentry.py",
      "line": 196
    },
    {
      "id": "tests/admin_utils/test_logentry.py:LogEntryTests.test_proxy_model_content_type_is_used_for_log_entries",
      "type": "function",
      "name": "LogEntryTests.test_proxy_model_content_type_is_used_for_log_entries",
      "file": "tests/admin_utils/test_logentry.py",
      "line": 219
    },
    {
      "id": "tests/admin_utils/test_logentry.py:LogEntryTests.test_action_flag_choices",
      "type": "function",
      "name": "LogEntryTests.test_action_flag_choices",
      "file": "tests/admin_utils/test_logentry.py",
      "line": 257
    },
    {
      "id": "tests/admin_utils/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/admin_utils/models.py",
      "line": 0
    },
    {
      "id": "tests/admin_utils/models.py:Site",
      "type": "class",
      "name": "Site",
      "file": "tests/admin_utils/models.py",
      "line": 5
    },
    {
      "id": "tests/admin_utils/models.py:Site.__str__",
      "type": "function",
      "name": "Site.__str__",
      "file": "tests/admin_utils/models.py",
      "line": 8
    },
    {
      "id": "tests/admin_utils/models.py:Article",
      "type": "class",
      "name": "Article",
      "file": "tests/admin_utils/models.py",
      "line": 12
    },
    {
      "id": "tests/admin_utils/models.py:Article.__str__",
      "type": "function",
      "name": "Article.__str__",
      "file": "tests/admin_utils/models.py",
      "line": 21
    },
    {
      "id": "tests/admin_utils/models.py:Article.test_from_model",
      "type": "function",
      "name": "Article.test_from_model",
      "file": "tests/admin_utils/models.py",
      "line": 24
    },
    {
      "id": "tests/admin_utils/models.py:Article.test_from_model_with_override",
      "type": "function",
      "name": "Article.test_from_model_with_override",
      "file": "tests/admin_utils/models.py",
      "line": 27
    },
    {
      "id": "tests/admin_utils/models.py:ArticleProxy",
      "type": "class",
      "name": "ArticleProxy",
      "file": "tests/admin_utils/models.py",
      "line": 32
    },
    {
      "id": "tests/admin_utils/models.py:ArticleProxy.Meta",
      "type": "class",
      "name": "ArticleProxy.Meta",
      "file": "tests/admin_utils/models.py",
      "line": 33
    },
    {
      "id": "tests/admin_utils/models.py:Count",
      "type": "class",
      "name": "Count",
      "file": "tests/admin_utils/models.py",
      "line": 37
    },
    {
      "id": "tests/admin_utils/models.py:Count.__str__",
      "type": "function",
      "name": "Count.__str__",
      "file": "tests/admin_utils/models.py",
      "line": 41
    },
    {
      "id": "tests/admin_utils/models.py:Event",
      "type": "class",
      "name": "Event",
      "file": "tests/admin_utils/models.py",
      "line": 45
    },
    {
      "id": "tests/admin_utils/models.py:Location",
      "type": "class",
      "name": "Location",
      "file": "tests/admin_utils/models.py",
      "line": 49
    },
    {
      "id": "tests/admin_utils/models.py:Guest",
      "type": "class",
      "name": "Guest",
      "file": "tests/admin_utils/models.py",
      "line": 53
    },
    {
      "id": "tests/admin_utils/models.py:Guest.Meta",
      "type": "class",
      "name": "Guest.Meta",
      "file": "tests/admin_utils/models.py",
      "line": 57
    },
    {
      "id": "tests/admin_utils/models.py:EventGuide",
      "type": "class",
      "name": "EventGuide",
      "file": "tests/admin_utils/models.py",
      "line": 61
    },
    {
      "id": "tests/admin_utils/models.py:Vehicle",
      "type": "class",
      "name": "Vehicle",
      "file": "tests/admin_utils/models.py",
      "line": 65
    },
    {
      "id": "tests/admin_utils/models.py:VehicleMixin",
      "type": "class",
      "name": "VehicleMixin",
      "file": "tests/admin_utils/models.py",
      "line": 69
    },
    {
      "id": "tests/admin_utils/models.py:VehicleMixin.Meta",
      "type": "class",
      "name": "VehicleMixin.Meta",
      "file": "tests/admin_utils/models.py",
      "line": 77
    },
    {
      "id": "tests/admin_utils/models.py:Car",
      "type": "class",
      "name": "Car",
      "file": "tests/admin_utils/models.py",
      "line": 81
    },
    {
      "id": "tests/admin_utils/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/admin_utils/__init__.py",
      "line": 0
    },
    {
      "id": "tests/admin_utils/admin.py",
      "type": "file",
      "name": "admin.py",
      "file": "tests/admin_utils/admin.py",
      "line": 0
    },
    {
      "id": "tests/admin_utils/admin.py:ArticleInline",
      "type": "class",
      "name": "ArticleInline",
      "file": "tests/admin_utils/admin.py",
      "line": 6
    },
    {
      "id": "tests/admin_utils/admin.py:SiteAdmin",
      "type": "class",
      "name": "SiteAdmin",
      "file": "tests/admin_utils/admin.py",
      "line": 11
    },
    {
      "id": "tests/admin_utils/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/admin_utils/tests.py",
      "line": 0
    },
    {
      "id": "tests/admin_utils/tests.py:NestedObjectsTests",
      "type": "class",
      "name": "NestedObjectsTests",
      "file": "tests/admin_utils/tests.py",
      "line": 21
    },
    {
      "id": "tests/admin_utils/tests.py:NestedObjectsTests.setUp",
      "type": "function",
      "name": "NestedObjectsTests.setUp",
      "file": "tests/admin_utils/tests.py",
      "line": 25
    },
    {
      "id": "tests/admin_utils/tests.py:NestedObjectsTests._check",
      "type": "function",
      "name": "NestedObjectsTests._check",
      "file": "tests/admin_utils/tests.py",
      "line": 29
    },
    {
      "id": "tests/admin_utils/tests.py:NestedObjectsTests._connect",
      "type": "function",
      "name": "NestedObjectsTests._connect",
      "file": "tests/admin_utils/tests.py",
      "line": 32
    },
    {
      "id": "tests/admin_utils/tests.py:NestedObjectsTests._collect",
      "type": "function",
      "name": "NestedObjectsTests._collect",
      "file": "tests/admin_utils/tests.py",
      "line": 36
    },
    {
      "id": "tests/admin_utils/tests.py:NestedObjectsTests.test_unrelated_roots",
      "type": "function",
      "name": "NestedObjectsTests.test_unrelated_roots",
      "file": "tests/admin_utils/tests.py",
      "line": 39
    },
    {
      "id": "tests/admin_utils/tests.py:NestedObjectsTests.test_siblings",
      "type": "function",
      "name": "NestedObjectsTests.test_siblings",
      "file": "tests/admin_utils/tests.py",
      "line": 45
    },
    {
      "id": "tests/admin_utils/tests.py:NestedObjectsTests.test_non_added_parent",
      "type": "function",
      "name": "NestedObjectsTests.test_non_added_parent",
      "file": "tests/admin_utils/tests.py",
      "line": 51
    },
    {
      "id": "tests/admin_utils/tests.py:NestedObjectsTests.test_cyclic",
      "type": "function",
      "name": "NestedObjectsTests.test_cyclic",
      "file": "tests/admin_utils/tests.py",
      "line": 56
    },
    {
      "id": "tests/admin_utils/tests.py:NestedObjectsTests.test_queries",
      "type": "function",
      "name": "NestedObjectsTests.test_queries",
      "file": "tests/admin_utils/tests.py",
      "line": 63
    },
    {
      "id": "tests/admin_utils/tests.py:NestedObjectsTests.test_on_delete_do_nothing",
      "type": "function",
      "name": "NestedObjectsTests.test_on_delete_do_nothing",
      "file": "tests/admin_utils/tests.py",
      "line": 71
    },
    {
      "id": "tests/admin_utils/tests.py:NestedObjectsTests.test_relation_on_abstract",
      "type": "function",
      "name": "NestedObjectsTests.test_relation_on_abstract",
      "file": "tests/admin_utils/tests.py",
      "line": 82
    },
    {
      "id": "tests/admin_utils/tests.py:UtilsTests",
      "type": "class",
      "name": "UtilsTests",
      "file": "tests/admin_utils/tests.py",
      "line": 93
    },
    {
      "id": "tests/admin_utils/tests.py:UtilsTests.test_values_from_lookup_field",
      "type": "function",
      "name": "UtilsTests.test_values_from_lookup_field",
      "file": "tests/admin_utils/tests.py",
      "line": 97
    },
    {
      "id": "tests/admin_utils/tests.py:UtilsTests.test_values_from_lookup_field.MockModelAdmin",
      "type": "class",
      "name": "UtilsTests.test_values_from_lookup_field.MockModelAdmin",
      "file": "tests/admin_utils/tests.py",
      "line": 108
    },
    {
      "id": "tests/admin_utils/tests.py:UtilsTests.test_values_from_lookup_field.MockModelAdmin.get_admin_value",
      "type": "function",
      "name": "UtilsTests.test_values_from_lookup_field.MockModelAdmin.get_admin_value",
      "file": "tests/admin_utils/tests.py",
      "line": 109
    },
    {
      "id": "tests/admin_utils/tests.py:UtilsTests.test_values_from_lookup_field.simple_function",
      "type": "function",
      "name": "UtilsTests.test_values_from_lookup_field.simple_function",
      "file": "tests/admin_utils/tests.py",
      "line": 112
    },
    {
      "id": "tests/admin_utils/tests.py:UtilsTests.test_null_display_for_field",
      "type": "function",
      "name": "UtilsTests.test_null_display_for_field",
      "file": "tests/admin_utils/tests.py",
      "line": 142
    },
    {
      "id": "tests/admin_utils/tests.py:UtilsTests.test_number_formats_display_for_field",
      "type": "function",
      "name": "UtilsTests.test_number_formats_display_for_field",
      "file": "tests/admin_utils/tests.py",
      "line": 179
    },
    {
      "id": "tests/admin_utils/tests.py:UtilsTests.test_number_formats_with_thousand_separator_display_for_field",
      "type": "function",
      "name": "UtilsTests.test_number_formats_with_thousand_separator_display_for_field",
      "file": "tests/admin_utils/tests.py",
      "line": 190
    },
    {
      "id": "tests/admin_utils/tests.py:UtilsTests.test_list_display_for_value",
      "type": "function",
      "name": "UtilsTests.test_list_display_for_value",
      "file": "tests/admin_utils/tests.py",
      "line": 200
    },
    {
      "id": "tests/admin_utils/tests.py:UtilsTests.test_list_display_for_value_boolean",
      "type": "function",
      "name": "UtilsTests.test_list_display_for_value_boolean",
      "file": "tests/admin_utils/tests.py",
      "line": 208
    },
    {
      "id": "tests/admin_utils/tests.py:UtilsTests.test_label_for_field",
      "type": "function",
      "name": "UtilsTests.test_label_for_field",
      "file": "tests/admin_utils/tests.py",
      "line": 220
    },
    {
      "id": "tests/admin_utils/tests.py:UtilsTests.test_label_for_field.test_callable",
      "type": "function",
      "name": "UtilsTests.test_label_for_field.test_callable",
      "file": "tests/admin_utils/tests.py",
      "line": 245
    },
    {
      "id": "tests/admin_utils/tests.py:UtilsTests.test_label_for_field.MockModelAdmin",
      "type": "class",
      "name": "UtilsTests.test_label_for_field.MockModelAdmin",
      "file": "tests/admin_utils/tests.py",
      "line": 275
    },
    {
      "id": "tests/admin_utils/tests.py:UtilsTests.test_label_for_field.MockModelAdmin.test_from_model",
      "type": "function",
      "name": "UtilsTests.test_label_for_field.MockModelAdmin.test_from_model",
      "file": "tests/admin_utils/tests.py",
      "line": 276
    },
    {
      "id": "tests/admin_utils/tests.py:UtilsTests.test_label_for_field_form_argument",
      "type": "function",
      "name": "UtilsTests.test_label_for_field_form_argument",
      "file": "tests/admin_utils/tests.py",
      "line": 289
    },
    {
      "id": "tests/admin_utils/tests.py:UtilsTests.test_label_for_field_form_argument.ArticleForm",
      "type": "class",
      "name": "UtilsTests.test_label_for_field_form_argument.ArticleForm",
      "file": "tests/admin_utils/tests.py",
      "line": 290
    },
    {
      "id": "tests/admin_utils/tests.py:UtilsTests.test_label_for_field_form_argument.ArticleForm.Meta",
      "type": "class",
      "name": "UtilsTests.test_label_for_field_form_argument.ArticleForm.Meta",
      "file": "tests/admin_utils/tests.py",
      "line": 293
    },
    {
      "id": "tests/admin_utils/tests.py:UtilsTests.test_label_for_property",
      "type": "function",
      "name": "UtilsTests.test_label_for_property",
      "file": "tests/admin_utils/tests.py",
      "line": 305
    },
    {
      "id": "tests/admin_utils/tests.py:UtilsTests.test_label_for_property.MockModelAdmin",
      "type": "class",
      "name": "UtilsTests.test_label_for_property.MockModelAdmin",
      "file": "tests/admin_utils/tests.py",
      "line": 308
    },
    {
      "id": "tests/admin_utils/tests.py:UtilsTests.test_label_for_property.MockModelAdmin.my_property",
      "type": "function",
      "name": "UtilsTests.test_label_for_property.MockModelAdmin.my_property",
      "file": "tests/admin_utils/tests.py",
      "line": 309
    },
    {
      "id": "tests/admin_utils/tests.py:UtilsTests.test_related_name",
      "type": "function",
      "name": "UtilsTests.test_related_name",
      "file": "tests/admin_utils/tests.py",
      "line": 319
    },
    {
      "id": "tests/admin_utils/tests.py:UtilsTests.test_safestring_in_field_label",
      "type": "function",
      "name": "UtilsTests.test_safestring_in_field_label",
      "file": "tests/admin_utils/tests.py",
      "line": 336
    },
    {
      "id": "tests/admin_utils/tests.py:UtilsTests.test_safestring_in_field_label.MyForm",
      "type": "class",
      "name": "UtilsTests.test_safestring_in_field_label.MyForm",
      "file": "tests/admin_utils/tests.py",
      "line": 349
    },
    {
      "id": "tests/admin_utils/tests.py:UtilsTests.test_flatten",
      "type": "function",
      "name": "UtilsTests.test_flatten",
      "file": "tests/admin_utils/tests.py",
      "line": 359
    },
    {
      "id": "tests/admin_utils/tests.py:UtilsTests.test_flatten_fieldsets",
      "type": "function",
      "name": "UtilsTests.test_flatten_fieldsets",
      "file": "tests/admin_utils/tests.py",
      "line": 370
    },
    {
      "id": "tests/admin_utils/tests.py:UtilsTests.test_quote",
      "type": "function",
      "name": "UtilsTests.test_quote",
      "file": "tests/admin_utils/tests.py",
      "line": 388
    },
    {
      "id": "tests/admin_utils/urls.py",
      "type": "file",
      "name": "urls.py",
      "file": "tests/admin_utils/urls.py",
      "line": 0
    },
    {
      "id": "tests/unmanaged_models",
      "type": "directory",
      "name": "unmanaged_models",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/unmanaged_models/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/unmanaged_models/models.py",
      "line": 0
    },
    {
      "id": "tests/unmanaged_models/models.py:A01",
      "type": "class",
      "name": "A01",
      "file": "tests/unmanaged_models/models.py",
      "line": 11
    },
    {
      "id": "tests/unmanaged_models/models.py:A01.Meta",
      "type": "class",
      "name": "A01.Meta",
      "file": "tests/unmanaged_models/models.py",
      "line": 15
    },
    {
      "id": "tests/unmanaged_models/models.py:A01.__str__",
      "type": "function",
      "name": "A01.__str__",
      "file": "tests/unmanaged_models/models.py",
      "line": 18
    },
    {
      "id": "tests/unmanaged_models/models.py:B01",
      "type": "class",
      "name": "B01",
      "file": "tests/unmanaged_models/models.py",
      "line": 22
    },
    {
      "id": "tests/unmanaged_models/models.py:B01.Meta",
      "type": "class",
      "name": "B01.Meta",
      "file": "tests/unmanaged_models/models.py",
      "line": 27
    },
    {
      "id": "tests/unmanaged_models/models.py:B01.__str__",
      "type": "function",
      "name": "B01.__str__",
      "file": "tests/unmanaged_models/models.py",
      "line": 32
    },
    {
      "id": "tests/unmanaged_models/models.py:C01",
      "type": "class",
      "name": "C01",
      "file": "tests/unmanaged_models/models.py",
      "line": 36
    },
    {
      "id": "tests/unmanaged_models/models.py:C01.Meta",
      "type": "class",
      "name": "C01.Meta",
      "file": "tests/unmanaged_models/models.py",
      "line": 41
    },
    {
      "id": "tests/unmanaged_models/models.py:C01.__str__",
      "type": "function",
      "name": "C01.__str__",
      "file": "tests/unmanaged_models/models.py",
      "line": 44
    },
    {
      "id": "tests/unmanaged_models/models.py:A02",
      "type": "class",
      "name": "A02",
      "file": "tests/unmanaged_models/models.py",
      "line": 52
    },
    {
      "id": "tests/unmanaged_models/models.py:A02.Meta",
      "type": "class",
      "name": "A02.Meta",
      "file": "tests/unmanaged_models/models.py",
      "line": 55
    },
    {
      "id": "tests/unmanaged_models/models.py:A02.__str__",
      "type": "function",
      "name": "A02.__str__",
      "file": "tests/unmanaged_models/models.py",
      "line": 59
    },
    {
      "id": "tests/unmanaged_models/models.py:B02",
      "type": "class",
      "name": "B02",
      "file": "tests/unmanaged_models/models.py",
      "line": 63
    },
    {
      "id": "tests/unmanaged_models/models.py:B02.Meta",
      "type": "class",
      "name": "B02.Meta",
      "file": "tests/unmanaged_models/models.py",
      "line": 64
    },
    {
      "id": "tests/unmanaged_models/models.py:B02.__str__",
      "type": "function",
      "name": "B02.__str__",
      "file": "tests/unmanaged_models/models.py",
      "line": 72
    },
    {
      "id": "tests/unmanaged_models/models.py:C02",
      "type": "class",
      "name": "C02",
      "file": "tests/unmanaged_models/models.py",
      "line": 78
    },
    {
      "id": "tests/unmanaged_models/models.py:C02.Meta",
      "type": "class",
      "name": "C02.Meta",
      "file": "tests/unmanaged_models/models.py",
      "line": 83
    },
    {
      "id": "tests/unmanaged_models/models.py:C02.__str__",
      "type": "function",
      "name": "C02.__str__",
      "file": "tests/unmanaged_models/models.py",
      "line": 87
    },
    {
      "id": "tests/unmanaged_models/models.py:Intermediate",
      "type": "class",
      "name": "Intermediate",
      "file": "tests/unmanaged_models/models.py",
      "line": 91
    },
    {
      "id": "tests/unmanaged_models/models.py:Intermediate.Meta",
      "type": "class",
      "name": "Intermediate.Meta",
      "file": "tests/unmanaged_models/models.py",
      "line": 95
    },
    {
      "id": "tests/unmanaged_models/models.py:Proxy1",
      "type": "class",
      "name": "Proxy1",
      "file": "tests/unmanaged_models/models.py",
      "line": 108
    },
    {
      "id": "tests/unmanaged_models/models.py:Proxy1.Meta",
      "type": "class",
      "name": "Proxy1.Meta",
      "file": "tests/unmanaged_models/models.py",
      "line": 109
    },
    {
      "id": "tests/unmanaged_models/models.py:Proxy2",
      "type": "class",
      "name": "Proxy2",
      "file": "tests/unmanaged_models/models.py",
      "line": 113
    },
    {
      "id": "tests/unmanaged_models/models.py:Proxy2.Meta",
      "type": "class",
      "name": "Proxy2.Meta",
      "file": "tests/unmanaged_models/models.py",
      "line": 114
    },
    {
      "id": "tests/unmanaged_models/models.py:Unmanaged1",
      "type": "class",
      "name": "Unmanaged1",
      "file": "tests/unmanaged_models/models.py",
      "line": 118
    },
    {
      "id": "tests/unmanaged_models/models.py:Unmanaged1.Meta",
      "type": "class",
      "name": "Unmanaged1.Meta",
      "file": "tests/unmanaged_models/models.py",
      "line": 119
    },
    {
      "id": "tests/unmanaged_models/models.py:Unmanaged2",
      "type": "class",
      "name": "Unmanaged2",
      "file": "tests/unmanaged_models/models.py",
      "line": 125
    },
    {
      "id": "tests/unmanaged_models/models.py:Unmanaged2.Meta",
      "type": "class",
      "name": "Unmanaged2.Meta",
      "file": "tests/unmanaged_models/models.py",
      "line": 128
    },
    {
      "id": "tests/unmanaged_models/models.py:Managed1",
      "type": "class",
      "name": "Managed1",
      "file": "tests/unmanaged_models/models.py",
      "line": 135
    },
    {
      "id": "tests/unmanaged_models/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/unmanaged_models/__init__.py",
      "line": 0
    },
    {
      "id": "tests/unmanaged_models/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/unmanaged_models/tests.py",
      "line": 0
    },
    {
      "id": "tests/unmanaged_models/tests.py:SimpleTests",
      "type": "class",
      "name": "SimpleTests",
      "file": "tests/unmanaged_models/tests.py",
      "line": 7
    },
    {
      "id": "tests/unmanaged_models/tests.py:SimpleTests.test_simple",
      "type": "function",
      "name": "SimpleTests.test_simple",
      "file": "tests/unmanaged_models/tests.py",
      "line": 9
    },
    {
      "id": "tests/unmanaged_models/tests.py:ManyToManyUnmanagedTests",
      "type": "class",
      "name": "ManyToManyUnmanagedTests",
      "file": "tests/unmanaged_models/tests.py",
      "line": 43
    },
    {
      "id": "tests/unmanaged_models/tests.py:ManyToManyUnmanagedTests.test_many_to_many_between_unmanaged",
      "type": "function",
      "name": "ManyToManyUnmanagedTests.test_many_to_many_between_unmanaged",
      "file": "tests/unmanaged_models/tests.py",
      "line": 45
    },
    {
      "id": "tests/unmanaged_models/tests.py:ManyToManyUnmanagedTests.test_many_to_many_between_unmanaged_and_managed",
      "type": "function",
      "name": "ManyToManyUnmanagedTests.test_many_to_many_between_unmanaged_and_managed",
      "file": "tests/unmanaged_models/tests.py",
      "line": 53
    },
    {
      "id": "tests/flatpages_tests",
      "type": "directory",
      "name": "flatpages_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/flatpages_tests/test_forms.py",
      "type": "file",
      "name": "test_forms.py",
      "file": "tests/flatpages_tests/test_forms.py",
      "line": 0
    },
    {
      "id": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests",
      "type": "class",
      "name": "FlatpageAdminFormTests",
      "file": "tests/flatpages_tests/test_forms.py",
      "line": 11
    },
    {
      "id": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests.setUpTestData",
      "type": "function",
      "name": "FlatpageAdminFormTests.setUpTestData",
      "file": "tests/flatpages_tests/test_forms.py",
      "line": 14
    },
    {
      "id": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests.setUp",
      "type": "function",
      "name": "FlatpageAdminFormTests.setUp",
      "file": "tests/flatpages_tests/test_forms.py",
      "line": 20
    },
    {
      "id": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests.test_flatpage_admin_form_url_validation",
      "type": "function",
      "name": "FlatpageAdminFormTests.test_flatpage_admin_form_url_validation",
      "file": "tests/flatpages_tests/test_forms.py",
      "line": 30
    },
    {
      "id": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests.test_flatpage_requires_leading_slash",
      "type": "function",
      "name": "FlatpageAdminFormTests.test_flatpage_requires_leading_slash",
      "file": "tests/flatpages_tests/test_forms.py",
      "line": 42
    },
    {
      "id": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests.test_flatpage_requires_trailing_slash_with_append_slash",
      "type": "function",
      "name": "FlatpageAdminFormTests.test_flatpage_requires_trailing_slash_with_append_slash",
      "file": "tests/flatpages_tests/test_forms.py",
      "line": 49
    },
    {
      "id": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests.test_flatpage_doesnt_requires_trailing_slash_without_append_slash",
      "type": "function",
      "name": "FlatpageAdminFormTests.test_flatpage_doesnt_requires_trailing_slash_without_append_slash",
      "file": "tests/flatpages_tests/test_forms.py",
      "line": 61
    },
    {
      "id": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests.test_flatpage_admin_form_url_uniqueness_validation",
      "type": "function",
      "name": "FlatpageAdminFormTests.test_flatpage_admin_form_url_uniqueness_validation",
      "file": "tests/flatpages_tests/test_forms.py",
      "line": 70
    },
    {
      "id": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests.test_flatpage_admin_form_edit",
      "type": "function",
      "name": "FlatpageAdminFormTests.test_flatpage_admin_form_edit",
      "file": "tests/flatpages_tests/test_forms.py",
      "line": 85
    },
    {
      "id": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests.test_flatpage_nosites",
      "type": "function",
      "name": "FlatpageAdminFormTests.test_flatpage_nosites",
      "file": "tests/flatpages_tests/test_forms.py",
      "line": 104
    },
    {
      "id": "tests/flatpages_tests/test_csrf.py",
      "type": "file",
      "name": "test_csrf.py",
      "file": "tests/flatpages_tests/test_csrf.py",
      "line": 0
    },
    {
      "id": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests",
      "type": "class",
      "name": "FlatpageCSRFTests",
      "file": "tests/flatpages_tests/test_csrf.py",
      "line": 25
    },
    {
      "id": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests.setUpTestData",
      "type": "function",
      "name": "FlatpageCSRFTests.setUpTestData",
      "file": "tests/flatpages_tests/test_csrf.py",
      "line": 28
    },
    {
      "id": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests.setUp",
      "type": "function",
      "name": "FlatpageCSRFTests.setUp",
      "file": "tests/flatpages_tests/test_csrf.py",
      "line": 54
    },
    {
      "id": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests.test_view_flatpage",
      "type": "function",
      "name": "FlatpageCSRFTests.test_view_flatpage",
      "file": "tests/flatpages_tests/test_csrf.py",
      "line": 57
    },
    {
      "id": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests.test_view_non_existent_flatpage",
      "type": "function",
      "name": "FlatpageCSRFTests.test_view_non_existent_flatpage",
      "file": "tests/flatpages_tests/test_csrf.py",
      "line": 62
    },
    {
      "id": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests.test_view_authenticated_flatpage",
      "type": "function",
      "name": "FlatpageCSRFTests.test_view_authenticated_flatpage",
      "file": "tests/flatpages_tests/test_csrf.py",
      "line": 70
    },
    {
      "id": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests.test_fallback_flatpage",
      "type": "function",
      "name": "FlatpageCSRFTests.test_fallback_flatpage",
      "file": "tests/flatpages_tests/test_csrf.py",
      "line": 79
    },
    {
      "id": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests.test_fallback_non_existent_flatpage",
      "type": "function",
      "name": "FlatpageCSRFTests.test_fallback_non_existent_flatpage",
      "file": "tests/flatpages_tests/test_csrf.py",
      "line": 84
    },
    {
      "id": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests.test_post_view_flatpage",
      "type": "function",
      "name": "FlatpageCSRFTests.test_post_view_flatpage",
      "file": "tests/flatpages_tests/test_csrf.py",
      "line": 92
    },
    {
      "id": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests.test_post_fallback_flatpage",
      "type": "function",
      "name": "FlatpageCSRFTests.test_post_fallback_flatpage",
      "file": "tests/flatpages_tests/test_csrf.py",
      "line": 97
    },
    {
      "id": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests.test_post_unknown_page",
      "type": "function",
      "name": "FlatpageCSRFTests.test_post_unknown_page",
      "file": "tests/flatpages_tests/test_csrf.py",
      "line": 102
    },
    {
      "id": "tests/flatpages_tests/test_middleware.py",
      "type": "file",
      "name": "test_middleware.py",
      "file": "tests/flatpages_tests/test_middleware.py",
      "line": 0
    },
    {
      "id": "tests/flatpages_tests/test_middleware.py:TestDataMixin",
      "type": "class",
      "name": "TestDataMixin",
      "file": "tests/flatpages_tests/test_middleware.py",
      "line": 10
    },
    {
      "id": "tests/flatpages_tests/test_middleware.py:TestDataMixin.setUpTestData",
      "type": "function",
      "name": "TestDataMixin.setUpTestData",
      "file": "tests/flatpages_tests/test_middleware.py",
      "line": 13
    },
    {
      "id": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareTests",
      "type": "class",
      "name": "FlatpageMiddlewareTests",
      "file": "tests/flatpages_tests/test_middleware.py",
      "line": 55
    },
    {
      "id": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareTests.test_view_flatpage",
      "type": "function",
      "name": "FlatpageMiddlewareTests.test_view_flatpage",
      "file": "tests/flatpages_tests/test_middleware.py",
      "line": 57
    },
    {
      "id": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareTests.test_view_non_existent_flatpage",
      "type": "function",
      "name": "FlatpageMiddlewareTests.test_view_non_existent_flatpage",
      "file": "tests/flatpages_tests/test_middleware.py",
      "line": 62
    },
    {
      "id": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareTests.test_view_authenticated_flatpage",
      "type": "function",
      "name": "FlatpageMiddlewareTests.test_view_authenticated_flatpage",
      "file": "tests/flatpages_tests/test_middleware.py",
      "line": 70
    },
    {
      "id": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareTests.test_fallback_flatpage",
      "type": "function",
      "name": "FlatpageMiddlewareTests.test_fallback_flatpage",
      "file": "tests/flatpages_tests/test_middleware.py",
      "line": 79
    },
    {
      "id": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareTests.test_fallback_non_existent_flatpage",
      "type": "function",
      "name": "FlatpageMiddlewareTests.test_fallback_non_existent_flatpage",
      "file": "tests/flatpages_tests/test_middleware.py",
      "line": 84
    },
    {
      "id": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareTests.test_fallback_authenticated_flatpage",
      "type": "function",
      "name": "FlatpageMiddlewareTests.test_fallback_authenticated_flatpage",
      "file": "tests/flatpages_tests/test_middleware.py",
      "line": 92
    },
    {
      "id": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareTests.test_fallback_flatpage_special_chars",
      "type": "function",
      "name": "FlatpageMiddlewareTests.test_fallback_flatpage_special_chars",
      "file": "tests/flatpages_tests/test_middleware.py",
      "line": 101
    },
    {
      "id": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareAppendSlashTests",
      "type": "class",
      "name": "FlatpageMiddlewareAppendSlashTests",
      "file": "tests/flatpages_tests/test_middleware.py",
      "line": 132
    },
    {
      "id": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareAppendSlashTests.test_redirect_view_flatpage",
      "type": "function",
      "name": "FlatpageMiddlewareAppendSlashTests.test_redirect_view_flatpage",
      "file": "tests/flatpages_tests/test_middleware.py",
      "line": 134
    },
    {
      "id": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareAppendSlashTests.test_redirect_view_non_existent_flatpage",
      "type": "function",
      "name": "FlatpageMiddlewareAppendSlashTests.test_redirect_view_non_existent_flatpage",
      "file": "tests/flatpages_tests/test_middleware.py",
      "line": 139
    },
    {
      "id": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareAppendSlashTests.test_redirect_fallback_flatpage",
      "type": "function",
      "name": "FlatpageMiddlewareAppendSlashTests.test_redirect_fallback_flatpage",
      "file": "tests/flatpages_tests/test_middleware.py",
      "line": 147
    },
    {
      "id": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareAppendSlashTests.test_redirect_fallback_non_existent_flatpage",
      "type": "function",
      "name": "FlatpageMiddlewareAppendSlashTests.test_redirect_fallback_non_existent_flatpage",
      "file": "tests/flatpages_tests/test_middleware.py",
      "line": 152
    },
    {
      "id": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareAppendSlashTests.test_redirect_fallback_flatpage_special_chars",
      "type": "function",
      "name": "FlatpageMiddlewareAppendSlashTests.test_redirect_fallback_flatpage_special_chars",
      "file": "tests/flatpages_tests/test_middleware.py",
      "line": 160
    },
    {
      "id": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareAppendSlashTests.test_redirect_fallback_flatpage_root",
      "type": "function",
      "name": "FlatpageMiddlewareAppendSlashTests.test_redirect_fallback_flatpage_root",
      "file": "tests/flatpages_tests/test_middleware.py",
      "line": 174
    },
    {
      "id": "tests/flatpages_tests/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/flatpages_tests/__init__.py",
      "line": 0
    },
    {
      "id": "tests/flatpages_tests/test_views.py",
      "type": "file",
      "name": "test_views.py",
      "file": "tests/flatpages_tests/test_views.py",
      "line": 0
    },
    {
      "id": "tests/flatpages_tests/test_views.py:TestDataMixin",
      "type": "class",
      "name": "TestDataMixin",
      "file": "tests/flatpages_tests/test_views.py",
      "line": 10
    },
    {
      "id": "tests/flatpages_tests/test_views.py:TestDataMixin.setUpTestData",
      "type": "function",
      "name": "TestDataMixin.setUpTestData",
      "file": "tests/flatpages_tests/test_views.py",
      "line": 13
    },
    {
      "id": "tests/flatpages_tests/test_views.py:FlatpageViewTests",
      "type": "class",
      "name": "FlatpageViewTests",
      "file": "tests/flatpages_tests/test_views.py",
      "line": 55
    },
    {
      "id": "tests/flatpages_tests/test_views.py:FlatpageViewTests.test_view_flatpage",
      "type": "function",
      "name": "FlatpageViewTests.test_view_flatpage",
      "file": "tests/flatpages_tests/test_views.py",
      "line": 57
    },
    {
      "id": "tests/flatpages_tests/test_views.py:FlatpageViewTests.test_view_non_existent_flatpage",
      "type": "function",
      "name": "FlatpageViewTests.test_view_non_existent_flatpage",
      "file": "tests/flatpages_tests/test_views.py",
      "line": 62
    },
    {
      "id": "tests/flatpages_tests/test_views.py:FlatpageViewTests.test_view_authenticated_flatpage",
      "type": "function",
      "name": "FlatpageViewTests.test_view_authenticated_flatpage",
      "file": "tests/flatpages_tests/test_views.py",
      "line": 67
    },
    {
      "id": "tests/flatpages_tests/test_views.py:FlatpageViewTests.test_fallback_flatpage",
      "type": "function",
      "name": "FlatpageViewTests.test_fallback_flatpage",
      "file": "tests/flatpages_tests/test_views.py",
      "line": 76
    },
    {
      "id": "tests/flatpages_tests/test_views.py:FlatpageViewTests.test_fallback_non_existent_flatpage",
      "type": "function",
      "name": "FlatpageViewTests.test_fallback_non_existent_flatpage",
      "file": "tests/flatpages_tests/test_views.py",
      "line": 81
    },
    {
      "id": "tests/flatpages_tests/test_views.py:FlatpageViewTests.test_view_flatpage_special_chars",
      "type": "function",
      "name": "FlatpageViewTests.test_view_flatpage_special_chars",
      "file": "tests/flatpages_tests/test_views.py",
      "line": 89
    },
    {
      "id": "tests/flatpages_tests/test_views.py:FlatpageViewAppendSlashTests",
      "type": "class",
      "name": "FlatpageViewAppendSlashTests",
      "file": "tests/flatpages_tests/test_views.py",
      "line": 120
    },
    {
      "id": "tests/flatpages_tests/test_views.py:FlatpageViewAppendSlashTests.test_redirect_view_flatpage",
      "type": "function",
      "name": "FlatpageViewAppendSlashTests.test_redirect_view_flatpage",
      "file": "tests/flatpages_tests/test_views.py",
      "line": 122
    },
    {
      "id": "tests/flatpages_tests/test_views.py:FlatpageViewAppendSlashTests.test_redirect_view_non_existent_flatpage",
      "type": "function",
      "name": "FlatpageViewAppendSlashTests.test_redirect_view_non_existent_flatpage",
      "file": "tests/flatpages_tests/test_views.py",
      "line": 127
    },
    {
      "id": "tests/flatpages_tests/test_views.py:FlatpageViewAppendSlashTests.test_redirect_fallback_flatpage",
      "type": "function",
      "name": "FlatpageViewAppendSlashTests.test_redirect_fallback_flatpage",
      "file": "tests/flatpages_tests/test_views.py",
      "line": 135
    },
    {
      "id": "tests/flatpages_tests/test_views.py:FlatpageViewAppendSlashTests.test_redirect_fallback_non_existent_flatpage",
      "type": "function",
      "name": "FlatpageViewAppendSlashTests.test_redirect_fallback_non_existent_flatpage",
      "file": "tests/flatpages_tests/test_views.py",
      "line": 140
    },
    {
      "id": "tests/flatpages_tests/test_views.py:FlatpageViewAppendSlashTests.test_redirect_view_flatpage_special_chars",
      "type": "function",
      "name": "FlatpageViewAppendSlashTests.test_redirect_view_flatpage_special_chars",
      "file": "tests/flatpages_tests/test_views.py",
      "line": 148
    },
    {
      "id": "tests/flatpages_tests/test_sitemaps.py",
      "type": "file",
      "name": "test_sitemaps.py",
      "file": "tests/flatpages_tests/test_sitemaps.py",
      "line": 0
    },
    {
      "id": "tests/flatpages_tests/test_sitemaps.py:FlatpagesSitemapTests",
      "type": "class",
      "name": "FlatpagesSitemapTests",
      "file": "tests/flatpages_tests/test_sitemaps.py",
      "line": 16
    },
    {
      "id": "tests/flatpages_tests/test_sitemaps.py:FlatpagesSitemapTests.setUpClass",
      "type": "function",
      "name": "FlatpagesSitemapTests.setUpClass",
      "file": "tests/flatpages_tests/test_sitemaps.py",
      "line": 19
    },
    {
      "id": "tests/flatpages_tests/test_sitemaps.py:FlatpagesSitemapTests.setUpTestData",
      "type": "function",
      "name": "FlatpagesSitemapTests.setUpTestData",
      "file": "tests/flatpages_tests/test_sitemaps.py",
      "line": 26
    },
    {
      "id": "tests/flatpages_tests/test_sitemaps.py:FlatpagesSitemapTests.test_flatpage_sitemap",
      "type": "function",
      "name": "FlatpagesSitemapTests.test_flatpage_sitemap",
      "file": "tests/flatpages_tests/test_sitemaps.py",
      "line": 32
    },
    {
      "id": "tests/flatpages_tests/settings.py",
      "type": "file",
      "name": "settings.py",
      "file": "tests/flatpages_tests/settings.py",
      "line": 0
    },
    {
      "id": "tests/flatpages_tests/test_models.py",
      "type": "file",
      "name": "test_models.py",
      "file": "tests/flatpages_tests/test_models.py",
      "line": 0
    },
    {
      "id": "tests/flatpages_tests/test_models.py:FlatpageModelTests",
      "type": "class",
      "name": "FlatpageModelTests",
      "file": "tests/flatpages_tests/test_models.py",
      "line": 6
    },
    {
      "id": "tests/flatpages_tests/test_models.py:FlatpageModelTests.setUp",
      "type": "function",
      "name": "FlatpageModelTests.setUp",
      "file": "tests/flatpages_tests/test_models.py",
      "line": 8
    },
    {
      "id": "tests/flatpages_tests/test_models.py:FlatpageModelTests.test_get_absolute_url_urlencodes",
      "type": "function",
      "name": "FlatpageModelTests.test_get_absolute_url_urlencodes",
      "file": "tests/flatpages_tests/test_models.py",
      "line": 11
    },
    {
      "id": "tests/flatpages_tests/test_models.py:FlatpageModelTests.test_get_absolute_url_honors_script_prefix",
      "type": "function",
      "name": "FlatpageModelTests.test_get_absolute_url_honors_script_prefix",
      "file": "tests/flatpages_tests/test_models.py",
      "line": 15
    },
    {
      "id": "tests/flatpages_tests/test_models.py:FlatpageModelTests.test_str",
      "type": "function",
      "name": "FlatpageModelTests.test_str",
      "file": "tests/flatpages_tests/test_models.py",
      "line": 18
    },
    {
      "id": "tests/flatpages_tests/urls.py",
      "type": "file",
      "name": "urls.py",
      "file": "tests/flatpages_tests/urls.py",
      "line": 0
    },
    {
      "id": "tests/flatpages_tests/test_templatetags.py",
      "type": "file",
      "name": "test_templatetags.py",
      "file": "tests/flatpages_tests/test_templatetags.py",
      "line": 0
    },
    {
      "id": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests",
      "type": "class",
      "name": "FlatpageTemplateTagTests",
      "file": "tests/flatpages_tests/test_templatetags.py",
      "line": 8
    },
    {
      "id": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests.setUpTestData",
      "type": "function",
      "name": "FlatpageTemplateTagTests.setUpTestData",
      "file": "tests/flatpages_tests/test_templatetags.py",
      "line": 11
    },
    {
      "id": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests.test_get_flatpages_tag",
      "type": "function",
      "name": "FlatpageTemplateTagTests.test_get_flatpages_tag",
      "file": "tests/flatpages_tests/test_templatetags.py",
      "line": 37
    },
    {
      "id": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests.test_get_flatpages_tag_for_anon_user",
      "type": "function",
      "name": "FlatpageTemplateTagTests.test_get_flatpages_tag_for_anon_user",
      "file": "tests/flatpages_tests/test_templatetags.py",
      "line": 48
    },
    {
      "id": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests.test_get_flatpages_tag_for_user",
      "type": "function",
      "name": "FlatpageTemplateTagTests.test_get_flatpages_tag_for_user",
      "file": "tests/flatpages_tests/test_templatetags.py",
      "line": 61
    },
    {
      "id": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests.test_get_flatpages_with_prefix",
      "type": "function",
      "name": "FlatpageTemplateTagTests.test_get_flatpages_with_prefix",
      "file": "tests/flatpages_tests/test_templatetags.py",
      "line": 75
    },
    {
      "id": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests.test_get_flatpages_with_prefix_for_anon_user",
      "type": "function",
      "name": "FlatpageTemplateTagTests.test_get_flatpages_with_prefix_for_anon_user",
      "file": "tests/flatpages_tests/test_templatetags.py",
      "line": 86
    },
    {
      "id": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests.test_get_flatpages_with_prefix_for_user",
      "type": "function",
      "name": "FlatpageTemplateTagTests.test_get_flatpages_with_prefix_for_user",
      "file": "tests/flatpages_tests/test_templatetags.py",
      "line": 99
    },
    {
      "id": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests.test_get_flatpages_with_variable_prefix",
      "type": "function",
      "name": "FlatpageTemplateTagTests.test_get_flatpages_with_variable_prefix",
      "file": "tests/flatpages_tests/test_templatetags.py",
      "line": 113
    },
    {
      "id": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests.test_parsing_errors",
      "type": "function",
      "name": "FlatpageTemplateTagTests.test_parsing_errors",
      "file": "tests/flatpages_tests/test_templatetags.py",
      "line": 126
    },
    {
      "id": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests.test_parsing_errors.render",
      "type": "function",
      "name": "FlatpageTemplateTagTests.test_parsing_errors.render",
      "file": "tests/flatpages_tests/test_templatetags.py",
      "line": 128
    },
    {
      "id": "tests/pagination",
      "type": "directory",
      "name": "pagination",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/pagination/custom.py",
      "type": "file",
      "name": "custom.py",
      "file": "tests/pagination/custom.py",
      "line": 0
    },
    {
      "id": "tests/pagination/custom.py:ValidAdjacentNumsPage",
      "type": "class",
      "name": "ValidAdjacentNumsPage",
      "file": "tests/pagination/custom.py",
      "line": 4
    },
    {
      "id": "tests/pagination/custom.py:ValidAdjacentNumsPage.next_page_number",
      "type": "function",
      "name": "ValidAdjacentNumsPage.next_page_number",
      "file": "tests/pagination/custom.py",
      "line": 6
    },
    {
      "id": "tests/pagination/custom.py:ValidAdjacentNumsPage.previous_page_number",
      "type": "function",
      "name": "ValidAdjacentNumsPage.previous_page_number",
      "file": "tests/pagination/custom.py",
      "line": 11
    },
    {
      "id": "tests/pagination/custom.py:ValidAdjacentNumsPaginator",
      "type": "class",
      "name": "ValidAdjacentNumsPaginator",
      "file": "tests/pagination/custom.py",
      "line": 17
    },
    {
      "id": "tests/pagination/custom.py:ValidAdjacentNumsPaginator._get_page",
      "type": "function",
      "name": "ValidAdjacentNumsPaginator._get_page",
      "file": "tests/pagination/custom.py",
      "line": 19
    },
    {
      "id": "tests/pagination/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/pagination/models.py",
      "line": 0
    },
    {
      "id": "tests/pagination/models.py:Article",
      "type": "class",
      "name": "Article",
      "file": "tests/pagination/models.py",
      "line": 4
    },
    {
      "id": "tests/pagination/models.py:Article.__str__",
      "type": "function",
      "name": "Article.__str__",
      "file": "tests/pagination/models.py",
      "line": 8
    },
    {
      "id": "tests/pagination/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/pagination/__init__.py",
      "line": 0
    },
    {
      "id": "tests/pagination/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/pagination/tests.py",
      "line": 0
    },
    {
      "id": "tests/pagination/tests.py:PaginationTests",
      "type": "class",
      "name": "PaginationTests",
      "file": "tests/pagination/tests.py",
      "line": 15
    },
    {
      "id": "tests/pagination/tests.py:PaginationTests.check_paginator",
      "type": "function",
      "name": "PaginationTests.check_paginator",
      "file": "tests/pagination/tests.py",
      "line": 20
    },
    {
      "id": "tests/pagination/tests.py:PaginationTests.check_attribute",
      "type": "function",
      "name": "PaginationTests.check_attribute",
      "file": "tests/pagination/tests.py",
      "line": 31
    },
    {
      "id": "tests/pagination/tests.py:PaginationTests.test_paginator",
      "type": "function",
      "name": "PaginationTests.test_paginator",
      "file": "tests/pagination/tests.py",
      "line": 45
    },
    {
      "id": "tests/pagination/tests.py:PaginationTests.test_invalid_page_number",
      "type": "function",
      "name": "PaginationTests.test_invalid_page_number",
      "file": "tests/pagination/tests.py",
      "line": 112
    },
    {
      "id": "tests/pagination/tests.py:PaginationTests.test_float_integer_page",
      "type": "function",
      "name": "PaginationTests.test_float_integer_page",
      "file": "tests/pagination/tests.py",
      "line": 126
    },
    {
      "id": "tests/pagination/tests.py:PaginationTests.test_no_content_allow_empty_first_page",
      "type": "function",
      "name": "PaginationTests.test_no_content_allow_empty_first_page",
      "file": "tests/pagination/tests.py",
      "line": 130
    },
    {
      "id": "tests/pagination/tests.py:PaginationTests.test_paginate_misc_classes",
      "type": "function",
      "name": "PaginationTests.test_paginate_misc_classes",
      "file": "tests/pagination/tests.py",
      "line": 135
    },
    {
      "id": "tests/pagination/tests.py:PaginationTests.test_paginate_misc_classes.CountContainer",
      "type": "class",
      "name": "PaginationTests.test_paginate_misc_classes.CountContainer",
      "file": "tests/pagination/tests.py",
      "line": 136
    },
    {
      "id": "tests/pagination/tests.py:PaginationTests.test_paginate_misc_classes.CountContainer.count",
      "type": "function",
      "name": "PaginationTests.test_paginate_misc_classes.CountContainer.count",
      "file": "tests/pagination/tests.py",
      "line": 137
    },
    {
      "id": "tests/pagination/tests.py:PaginationTests.test_paginate_misc_classes.LenContainer",
      "type": "class",
      "name": "PaginationTests.test_paginate_misc_classes.LenContainer",
      "file": "tests/pagination/tests.py",
      "line": 146
    },
    {
      "id": "tests/pagination/tests.py:PaginationTests.test_paginate_misc_classes.LenContainer.__len__",
      "type": "function",
      "name": "PaginationTests.test_paginate_misc_classes.LenContainer.__len__",
      "file": "tests/pagination/tests.py",
      "line": 147
    },
    {
      "id": "tests/pagination/tests.py:PaginationTests.test_count_does_not_silence_attribute_error",
      "type": "function",
      "name": "PaginationTests.test_count_does_not_silence_attribute_error",
      "file": "tests/pagination/tests.py",
      "line": 154
    },
    {
      "id": "tests/pagination/tests.py:PaginationTests.test_count_does_not_silence_attribute_error.AttributeErrorContainer",
      "type": "class",
      "name": "PaginationTests.test_count_does_not_silence_attribute_error.AttributeErrorContainer",
      "file": "tests/pagination/tests.py",
      "line": 155
    },
    {
      "id": "tests/pagination/tests.py:PaginationTests.test_count_does_not_silence_attribute_error.AttributeErrorContainer.count",
      "type": "function",
      "name": "PaginationTests.test_count_does_not_silence_attribute_error.AttributeErrorContainer.count",
      "file": "tests/pagination/tests.py",
      "line": 156
    },
    {
      "id": "tests/pagination/tests.py:PaginationTests.test_count_does_not_silence_type_error",
      "type": "function",
      "name": "PaginationTests.test_count_does_not_silence_type_error",
      "file": "tests/pagination/tests.py",
      "line": 162
    },
    {
      "id": "tests/pagination/tests.py:PaginationTests.test_count_does_not_silence_type_error.TypeErrorContainer",
      "type": "class",
      "name": "PaginationTests.test_count_does_not_silence_type_error.TypeErrorContainer",
      "file": "tests/pagination/tests.py",
      "line": 163
    },
    {
      "id": "tests/pagination/tests.py:PaginationTests.test_count_does_not_silence_type_error.TypeErrorContainer.count",
      "type": "function",
      "name": "PaginationTests.test_count_does_not_silence_type_error.TypeErrorContainer.count",
      "file": "tests/pagination/tests.py",
      "line": 164
    },
    {
      "id": "tests/pagination/tests.py:PaginationTests.check_indexes",
      "type": "function",
      "name": "PaginationTests.check_indexes",
      "file": "tests/pagination/tests.py",
      "line": 170
    },
    {
      "id": "tests/pagination/tests.py:PaginationTests.test_page_indexes",
      "type": "function",
      "name": "PaginationTests.test_page_indexes",
      "file": "tests/pagination/tests.py",
      "line": 187
    },
    {
      "id": "tests/pagination/tests.py:PaginationTests.test_page_sequence",
      "type": "function",
      "name": "PaginationTests.test_page_sequence",
      "file": "tests/pagination/tests.py",
      "line": 237
    },
    {
      "id": "tests/pagination/tests.py:PaginationTests.test_get_page_hook",
      "type": "function",
      "name": "PaginationTests.test_get_page_hook",
      "file": "tests/pagination/tests.py",
      "line": 249
    },
    {
      "id": "tests/pagination/tests.py:PaginationTests.test_page_range_iterator",
      "type": "function",
      "name": "PaginationTests.test_page_range_iterator",
      "file": "tests/pagination/tests.py",
      "line": 263
    },
    {
      "id": "tests/pagination/tests.py:PaginationTests.test_get_page",
      "type": "function",
      "name": "PaginationTests.test_get_page",
      "file": "tests/pagination/tests.py",
      "line": 269
    },
    {
      "id": "tests/pagination/tests.py:PaginationTests.test_get_page_empty_object_list",
      "type": "function",
      "name": "PaginationTests.test_get_page_empty_object_list",
      "file": "tests/pagination/tests.py",
      "line": 283
    },
    {
      "id": "tests/pagination/tests.py:PaginationTests.test_get_page_empty_object_list_and_allow_empty_first_page_false",
      "type": "function",
      "name": "PaginationTests.test_get_page_empty_object_list_and_allow_empty_first_page_false",
      "file": "tests/pagination/tests.py",
      "line": 292
    },
    {
      "id": "tests/pagination/tests.py:PaginationTests.test_querysetpaginator_deprecation",
      "type": "function",
      "name": "PaginationTests.test_querysetpaginator_deprecation",
      "file": "tests/pagination/tests.py",
      "line": 301
    },
    {
      "id": "tests/pagination/tests.py:ModelPaginationTests",
      "type": "class",
      "name": "ModelPaginationTests",
      "file": "tests/pagination/tests.py",
      "line": 308
    },
    {
      "id": "tests/pagination/tests.py:ModelPaginationTests.setUpTestData",
      "type": "function",
      "name": "ModelPaginationTests.setUpTestData",
      "file": "tests/pagination/tests.py",
      "line": 313
    },
    {
      "id": "tests/pagination/tests.py:ModelPaginationTests.test_first_page",
      "type": "function",
      "name": "ModelPaginationTests.test_first_page",
      "file": "tests/pagination/tests.py",
      "line": 319
    },
    {
      "id": "tests/pagination/tests.py:ModelPaginationTests.test_last_page",
      "type": "function",
      "name": "ModelPaginationTests.test_last_page",
      "file": "tests/pagination/tests.py",
      "line": 339
    },
    {
      "id": "tests/pagination/tests.py:ModelPaginationTests.test_page_getitem",
      "type": "function",
      "name": "ModelPaginationTests.test_page_getitem",
      "file": "tests/pagination/tests.py",
      "line": 358
    },
    {
      "id": "tests/pagination/tests.py:ModelPaginationTests.test_paginating_unordered_queryset_raises_warning",
      "type": "function",
      "name": "ModelPaginationTests.test_paginating_unordered_queryset_raises_warning",
      "file": "tests/pagination/tests.py",
      "line": 384
    },
    {
      "id": "tests/pagination/tests.py:ModelPaginationTests.test_paginating_empty_queryset_does_not_warn",
      "type": "function",
      "name": "ModelPaginationTests.test_paginating_empty_queryset_does_not_warn",
      "file": "tests/pagination/tests.py",
      "line": 395
    },
    {
      "id": "tests/pagination/tests.py:ModelPaginationTests.test_paginating_unordered_object_list_raises_warning",
      "type": "function",
      "name": "ModelPaginationTests.test_paginating_unordered_object_list_raises_warning",
      "file": "tests/pagination/tests.py",
      "line": 400
    },
    {
      "id": "tests/pagination/tests.py:ModelPaginationTests.test_paginating_unordered_object_list_raises_warning.ObjectList",
      "type": "class",
      "name": "ModelPaginationTests.test_paginating_unordered_object_list_raises_warning.ObjectList",
      "file": "tests/pagination/tests.py",
      "line": 405
    },
    {
      "id": "tests/auth_tests",
      "type": "directory",
      "name": "auth_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/auth_tests/test_forms.py",
      "type": "file",
      "name": "test_forms.py",
      "file": "tests/auth_tests/test_forms.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/test_forms.py:TestDataMixin",
      "type": "class",
      "name": "TestDataMixin",
      "file": "tests/auth_tests/test_forms.py",
      "line": 30
    },
    {
      "id": "tests/auth_tests/test_forms.py:TestDataMixin.setUpTestData",
      "type": "function",
      "name": "TestDataMixin.setUpTestData",
      "file": "tests/auth_tests/test_forms.py",
      "line": 33
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserCreationFormTest",
      "type": "class",
      "name": "UserCreationFormTest",
      "file": "tests/auth_tests/test_forms.py",
      "line": 42
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_user_already_exists",
      "type": "function",
      "name": "UserCreationFormTest.test_user_already_exists",
      "file": "tests/auth_tests/test_forms.py",
      "line": 44
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_invalid_data",
      "type": "function",
      "name": "UserCreationFormTest.test_invalid_data",
      "file": "tests/auth_tests/test_forms.py",
      "line": 55
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_password_verification",
      "type": "function",
      "name": "UserCreationFormTest.test_password_verification",
      "file": "tests/auth_tests/test_forms.py",
      "line": 66
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_both_passwords",
      "type": "function",
      "name": "UserCreationFormTest.test_both_passwords",
      "file": "tests/auth_tests/test_forms.py",
      "line": 78
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_success",
      "type": "function",
      "name": "UserCreationFormTest.test_success",
      "file": "tests/auth_tests/test_forms.py",
      "line": 94
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_unicode_username",
      "type": "function",
      "name": "UserCreationFormTest.test_unicode_username",
      "file": "tests/auth_tests/test_forms.py",
      "line": 109
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_normalize_username",
      "type": "function",
      "name": "UserCreationFormTest.test_normalize_username",
      "file": "tests/auth_tests/test_forms.py",
      "line": 120
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_duplicate_normalized_unicode",
      "type": "function",
      "name": "UserCreationFormTest.test_duplicate_normalized_unicode",
      "file": "tests/auth_tests/test_forms.py",
      "line": 135
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_validates_password",
      "type": "function",
      "name": "UserCreationFormTest.test_validates_password",
      "file": "tests/auth_tests/test_forms.py",
      "line": 162
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form",
      "type": "function",
      "name": "UserCreationFormTest.test_custom_form",
      "file": "tests/auth_tests/test_forms.py",
      "line": 177
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form.CustomUserCreationForm",
      "type": "class",
      "name": "UserCreationFormTest.test_custom_form.CustomUserCreationForm",
      "file": "tests/auth_tests/test_forms.py",
      "line": 178
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form.CustomUserCreationForm.Meta",
      "type": "class",
      "name": "UserCreationFormTest.test_custom_form.CustomUserCreationForm.Meta",
      "file": "tests/auth_tests/test_forms.py",
      "line": 179
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form_with_different_username_field",
      "type": "function",
      "name": "UserCreationFormTest.test_custom_form_with_different_username_field",
      "file": "tests/auth_tests/test_forms.py",
      "line": 192
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form_with_different_username_field.CustomUserCreationForm",
      "type": "class",
      "name": "UserCreationFormTest.test_custom_form_with_different_username_field.CustomUserCreationForm",
      "file": "tests/auth_tests/test_forms.py",
      "line": 193
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form_with_different_username_field.CustomUserCreationForm.Meta",
      "type": "class",
      "name": "UserCreationFormTest.test_custom_form_with_different_username_field.CustomUserCreationForm.Meta",
      "file": "tests/auth_tests/test_forms.py",
      "line": 194
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form_hidden_username_field",
      "type": "function",
      "name": "UserCreationFormTest.test_custom_form_hidden_username_field",
      "file": "tests/auth_tests/test_forms.py",
      "line": 207
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form_hidden_username_field.CustomUserCreationForm",
      "type": "class",
      "name": "UserCreationFormTest.test_custom_form_hidden_username_field.CustomUserCreationForm",
      "file": "tests/auth_tests/test_forms.py",
      "line": 208
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form_hidden_username_field.CustomUserCreationForm.Meta",
      "type": "class",
      "name": "UserCreationFormTest.test_custom_form_hidden_username_field.CustomUserCreationForm.Meta",
      "file": "tests/auth_tests/test_forms.py",
      "line": 209
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_password_whitespace_not_stripped",
      "type": "function",
      "name": "UserCreationFormTest.test_password_whitespace_not_stripped",
      "file": "tests/auth_tests/test_forms.py",
      "line": 221
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_password_help_text",
      "type": "function",
      "name": "UserCreationFormTest.test_password_help_text",
      "file": "tests/auth_tests/test_forms.py",
      "line": 235
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_user_create_form_validates_password_with_all_data",
      "type": "function",
      "name": "UserCreationFormTest.test_user_create_form_validates_password_with_all_data",
      "file": "tests/auth_tests/test_forms.py",
      "line": 245
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_user_create_form_validates_password_with_all_data.CustomUserCreationForm",
      "type": "class",
      "name": "UserCreationFormTest.test_user_create_form_validates_password_with_all_data.CustomUserCreationForm",
      "file": "tests/auth_tests/test_forms.py",
      "line": 247
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_user_create_form_validates_password_with_all_data.CustomUserCreationForm.Meta",
      "type": "class",
      "name": "UserCreationFormTest.test_user_create_form_validates_password_with_all_data.CustomUserCreationForm.Meta",
      "file": "tests/auth_tests/test_forms.py",
      "line": 248
    },
    {
      "id": "tests/auth_tests/test_forms.py:AuthenticationFormTest",
      "type": "class",
      "name": "AuthenticationFormTest",
      "file": "tests/auth_tests/test_forms.py",
      "line": 268
    },
    {
      "id": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_invalid_username",
      "type": "function",
      "name": "AuthenticationFormTest.test_invalid_username",
      "file": "tests/auth_tests/test_forms.py",
      "line": 270
    },
    {
      "id": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_inactive_user",
      "type": "function",
      "name": "AuthenticationFormTest.test_inactive_user",
      "file": "tests/auth_tests/test_forms.py",
      "line": 287
    },
    {
      "id": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_inactive_user_incorrect_password",
      "type": "function",
      "name": "AuthenticationFormTest.test_inactive_user_incorrect_password",
      "file": "tests/auth_tests/test_forms.py",
      "line": 299
    },
    {
      "id": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_login_failed",
      "type": "function",
      "name": "AuthenticationFormTest.test_login_failed",
      "file": "tests/auth_tests/test_forms.py",
      "line": 315
    },
    {
      "id": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_login_failed.signal_handler",
      "type": "function",
      "name": "AuthenticationFormTest.test_login_failed.signal_handler",
      "file": "tests/auth_tests/test_forms.py",
      "line": 318
    },
    {
      "id": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_inactive_user_i18n",
      "type": "function",
      "name": "AuthenticationFormTest.test_inactive_user_i18n",
      "file": "tests/auth_tests/test_forms.py",
      "line": 333
    },
    {
      "id": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_custom_login_allowed_policy",
      "type": "function",
      "name": "AuthenticationFormTest.test_custom_login_allowed_policy",
      "file": "tests/auth_tests/test_forms.py",
      "line": 346
    },
    {
      "id": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_custom_login_allowed_policy.AuthenticationFormWithInactiveUsersOkay",
      "type": "class",
      "name": "AuthenticationFormTest.test_custom_login_allowed_policy.AuthenticationFormWithInactiveUsersOkay",
      "file": "tests/auth_tests/test_forms.py",
      "line": 353
    },
    {
      "id": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_custom_login_allowed_policy.AuthenticationFormWithInactiveUsersOkay.confirm_login_allowed",
      "type": "function",
      "name": "AuthenticationFormTest.test_custom_login_allowed_policy.AuthenticationFormWithInactiveUsersOkay.confirm_login_allowed",
      "file": "tests/auth_tests/test_forms.py",
      "line": 354
    },
    {
      "id": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_custom_login_allowed_policy.PickyAuthenticationForm",
      "type": "class",
      "name": "AuthenticationFormTest.test_custom_login_allowed_policy.PickyAuthenticationForm",
      "file": "tests/auth_tests/test_forms.py",
      "line": 362
    },
    {
      "id": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_custom_login_allowed_policy.PickyAuthenticationForm.confirm_login_allowed",
      "type": "function",
      "name": "AuthenticationFormTest.test_custom_login_allowed_policy.PickyAuthenticationForm.confirm_login_allowed",
      "file": "tests/auth_tests/test_forms.py",
      "line": 363
    },
    {
      "id": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_success",
      "type": "function",
      "name": "AuthenticationFormTest.test_success",
      "file": "tests/auth_tests/test_forms.py",
      "line": 380
    },
    {
      "id": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_unicode_username",
      "type": "function",
      "name": "AuthenticationFormTest.test_unicode_username",
      "file": "tests/auth_tests/test_forms.py",
      "line": 390
    },
    {
      "id": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_username_field_max_length_matches_user_model",
      "type": "function",
      "name": "AuthenticationFormTest.test_username_field_max_length_matches_user_model",
      "file": "tests/auth_tests/test_forms.py",
      "line": 401
    },
    {
      "id": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_username_field_max_length_defaults_to_254",
      "type": "function",
      "name": "AuthenticationFormTest.test_username_field_max_length_defaults_to_254",
      "file": "tests/auth_tests/test_forms.py",
      "line": 414
    },
    {
      "id": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_username_field_label",
      "type": "function",
      "name": "AuthenticationFormTest.test_username_field_label",
      "file": "tests/auth_tests/test_forms.py",
      "line": 425
    },
    {
      "id": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_username_field_label.CustomAuthenticationForm",
      "type": "class",
      "name": "AuthenticationFormTest.test_username_field_label.CustomAuthenticationForm",
      "file": "tests/auth_tests/test_forms.py",
      "line": 427
    },
    {
      "id": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_username_field_label_not_set",
      "type": "function",
      "name": "AuthenticationFormTest.test_username_field_label_not_set",
      "file": "tests/auth_tests/test_forms.py",
      "line": 433
    },
    {
      "id": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_username_field_label_not_set.CustomAuthenticationForm",
      "type": "class",
      "name": "AuthenticationFormTest.test_username_field_label_not_set.CustomAuthenticationForm",
      "file": "tests/auth_tests/test_forms.py",
      "line": 435
    },
    {
      "id": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_username_field_label_empty_string",
      "type": "function",
      "name": "AuthenticationFormTest.test_username_field_label_empty_string",
      "file": "tests/auth_tests/test_forms.py",
      "line": 442
    },
    {
      "id": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_username_field_label_empty_string.CustomAuthenticationForm",
      "type": "class",
      "name": "AuthenticationFormTest.test_username_field_label_empty_string.CustomAuthenticationForm",
      "file": "tests/auth_tests/test_forms.py",
      "line": 444
    },
    {
      "id": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_password_whitespace_not_stripped",
      "type": "function",
      "name": "AuthenticationFormTest.test_password_whitespace_not_stripped",
      "file": "tests/auth_tests/test_forms.py",
      "line": 450
    },
    {
      "id": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_integer_username",
      "type": "function",
      "name": "AuthenticationFormTest.test_integer_username",
      "file": "tests/auth_tests/test_forms.py",
      "line": 460
    },
    {
      "id": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_integer_username.CustomAuthenticationForm",
      "type": "class",
      "name": "AuthenticationFormTest.test_integer_username.CustomAuthenticationForm",
      "file": "tests/auth_tests/test_forms.py",
      "line": 461
    },
    {
      "id": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_get_invalid_login_error",
      "type": "function",
      "name": "AuthenticationFormTest.test_get_invalid_login_error",
      "file": "tests/auth_tests/test_forms.py",
      "line": 476
    },
    {
      "id": "tests/auth_tests/test_forms.py:SetPasswordFormTest",
      "type": "class",
      "name": "SetPasswordFormTest",
      "file": "tests/auth_tests/test_forms.py",
      "line": 488
    },
    {
      "id": "tests/auth_tests/test_forms.py:SetPasswordFormTest.test_password_verification",
      "type": "function",
      "name": "SetPasswordFormTest.test_password_verification",
      "file": "tests/auth_tests/test_forms.py",
      "line": 490
    },
    {
      "id": "tests/auth_tests/test_forms.py:SetPasswordFormTest.test_success",
      "type": "function",
      "name": "SetPasswordFormTest.test_success",
      "file": "tests/auth_tests/test_forms.py",
      "line": 505
    },
    {
      "id": "tests/auth_tests/test_forms.py:SetPasswordFormTest.test_validates_password",
      "type": "function",
      "name": "SetPasswordFormTest.test_validates_password",
      "file": "tests/auth_tests/test_forms.py",
      "line": 524
    },
    {
      "id": "tests/auth_tests/test_forms.py:SetPasswordFormTest.test_password_whitespace_not_stripped",
      "type": "function",
      "name": "SetPasswordFormTest.test_password_whitespace_not_stripped",
      "file": "tests/auth_tests/test_forms.py",
      "line": 539
    },
    {
      "id": "tests/auth_tests/test_forms.py:SetPasswordFormTest.test_help_text_translation",
      "type": "function",
      "name": "SetPasswordFormTest.test_help_text_translation",
      "file": "tests/auth_tests/test_forms.py",
      "line": 556
    },
    {
      "id": "tests/auth_tests/test_forms.py:PasswordChangeFormTest",
      "type": "class",
      "name": "PasswordChangeFormTest",
      "file": "tests/auth_tests/test_forms.py",
      "line": 568
    },
    {
      "id": "tests/auth_tests/test_forms.py:PasswordChangeFormTest.test_incorrect_password",
      "type": "function",
      "name": "PasswordChangeFormTest.test_incorrect_password",
      "file": "tests/auth_tests/test_forms.py",
      "line": 570
    },
    {
      "id": "tests/auth_tests/test_forms.py:PasswordChangeFormTest.test_password_verification",
      "type": "function",
      "name": "PasswordChangeFormTest.test_password_verification",
      "file": "tests/auth_tests/test_forms.py",
      "line": 581
    },
    {
      "id": "tests/auth_tests/test_forms.py:PasswordChangeFormTest.test_success",
      "type": "function",
      "name": "PasswordChangeFormTest.test_success",
      "file": "tests/auth_tests/test_forms.py",
      "line": 594
    },
    {
      "id": "tests/auth_tests/test_forms.py:PasswordChangeFormTest.test_field_order",
      "type": "function",
      "name": "PasswordChangeFormTest.test_field_order",
      "file": "tests/auth_tests/test_forms.py",
      "line": 609
    },
    {
      "id": "tests/auth_tests/test_forms.py:PasswordChangeFormTest.test_password_whitespace_not_stripped",
      "type": "function",
      "name": "PasswordChangeFormTest.test_password_whitespace_not_stripped",
      "file": "tests/auth_tests/test_forms.py",
      "line": 614
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserChangeFormTest",
      "type": "class",
      "name": "UserChangeFormTest",
      "file": "tests/auth_tests/test_forms.py",
      "line": 629
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_username_validity",
      "type": "function",
      "name": "UserChangeFormTest.test_username_validity",
      "file": "tests/auth_tests/test_forms.py",
      "line": 631
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_bug_14242",
      "type": "function",
      "name": "UserChangeFormTest.test_bug_14242",
      "file": "tests/auth_tests/test_forms.py",
      "line": 639
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_bug_14242.MyUserForm",
      "type": "class",
      "name": "UserChangeFormTest.test_bug_14242.MyUserForm",
      "file": "tests/auth_tests/test_forms.py",
      "line": 643
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_bug_14242.MyUserForm.Meta",
      "type": "class",
      "name": "UserChangeFormTest.test_bug_14242.MyUserForm.Meta",
      "file": "tests/auth_tests/test_forms.py",
      "line": 648
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_unusable_password",
      "type": "function",
      "name": "UserChangeFormTest.test_unusable_password",
      "file": "tests/auth_tests/test_forms.py",
      "line": 654
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_bug_17944_empty_password",
      "type": "function",
      "name": "UserChangeFormTest.test_bug_17944_empty_password",
      "file": "tests/auth_tests/test_forms.py",
      "line": 661
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_bug_17944_unmanageable_password",
      "type": "function",
      "name": "UserChangeFormTest.test_bug_17944_unmanageable_password",
      "file": "tests/auth_tests/test_forms.py",
      "line": 666
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_bug_17944_unknown_password_algorithm",
      "type": "function",
      "name": "UserChangeFormTest.test_bug_17944_unknown_password_algorithm",
      "file": "tests/auth_tests/test_forms.py",
      "line": 671
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_bug_19133",
      "type": "function",
      "name": "UserChangeFormTest.test_bug_19133",
      "file": "tests/auth_tests/test_forms.py",
      "line": 676
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_bug_19349_bound_password_field",
      "type": "function",
      "name": "UserChangeFormTest.test_bug_19349_bound_password_field",
      "file": "tests/auth_tests/test_forms.py",
      "line": 694
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_custom_form",
      "type": "function",
      "name": "UserChangeFormTest.test_custom_form",
      "file": "tests/auth_tests/test_forms.py",
      "line": 702
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_custom_form.CustomUserChangeForm",
      "type": "class",
      "name": "UserChangeFormTest.test_custom_form.CustomUserChangeForm",
      "file": "tests/auth_tests/test_forms.py",
      "line": 703
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_custom_form.CustomUserChangeForm.Meta",
      "type": "class",
      "name": "UserChangeFormTest.test_custom_form.CustomUserChangeForm.Meta",
      "file": "tests/auth_tests/test_forms.py",
      "line": 704
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_password_excluded",
      "type": "function",
      "name": "UserChangeFormTest.test_password_excluded",
      "file": "tests/auth_tests/test_forms.py",
      "line": 720
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_password_excluded.UserChangeFormWithoutPassword",
      "type": "class",
      "name": "UserChangeFormTest.test_password_excluded.UserChangeFormWithoutPassword",
      "file": "tests/auth_tests/test_forms.py",
      "line": 721
    },
    {
      "id": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_password_excluded.UserChangeFormWithoutPassword.Meta",
      "type": "class",
      "name": "UserChangeFormTest.test_password_excluded.UserChangeFormWithoutPassword.Meta",
      "file": "tests/auth_tests/test_forms.py",
      "line": 724
    },
    {
      "id": "tests/auth_tests/test_forms.py:PasswordResetFormTest",
      "type": "class",
      "name": "PasswordResetFormTest",
      "file": "tests/auth_tests/test_forms.py",
      "line": 733
    },
    {
      "id": "tests/auth_tests/test_forms.py:PasswordResetFormTest.setUpClass",
      "type": "function",
      "name": "PasswordResetFormTest.setUpClass",
      "file": "tests/auth_tests/test_forms.py",
      "line": 736
    },
    {
      "id": "tests/auth_tests/test_forms.py:PasswordResetFormTest.create_dummy_user",
      "type": "function",
      "name": "PasswordResetFormTest.create_dummy_user",
      "file": "tests/auth_tests/test_forms.py",
      "line": 742
    },
    {
      "id": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_invalid_email",
      "type": "function",
      "name": "PasswordResetFormTest.test_invalid_email",
      "file": "tests/auth_tests/test_forms.py",
      "line": 751
    },
    {
      "id": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_nonexistent_email",
      "type": "function",
      "name": "PasswordResetFormTest.test_nonexistent_email",
      "file": "tests/auth_tests/test_forms.py",
      "line": 757
    },
    {
      "id": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_cleaned_data",
      "type": "function",
      "name": "PasswordResetFormTest.test_cleaned_data",
      "file": "tests/auth_tests/test_forms.py",
      "line": 767
    },
    {
      "id": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_custom_email_subject",
      "type": "function",
      "name": "PasswordResetFormTest.test_custom_email_subject",
      "file": "tests/auth_tests/test_forms.py",
      "line": 776
    },
    {
      "id": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_custom_email_constructor",
      "type": "function",
      "name": "PasswordResetFormTest.test_custom_email_constructor",
      "file": "tests/auth_tests/test_forms.py",
      "line": 787
    },
    {
      "id": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_custom_email_constructor.CustomEmailPasswordResetForm",
      "type": "class",
      "name": "PasswordResetFormTest.test_custom_email_constructor.CustomEmailPasswordResetForm",
      "file": "tests/auth_tests/test_forms.py",
      "line": 790
    },
    {
      "id": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_custom_email_constructor.CustomEmailPasswordResetForm.send_mail",
      "type": "function",
      "name": "PasswordResetFormTest.test_custom_email_constructor.CustomEmailPasswordResetForm.send_mail",
      "file": "tests/auth_tests/test_forms.py",
      "line": 791
    },
    {
      "id": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_preserve_username_case",
      "type": "function",
      "name": "PasswordResetFormTest.test_preserve_username_case",
      "file": "tests/auth_tests/test_forms.py",
      "line": 816
    },
    {
      "id": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_inactive_user",
      "type": "function",
      "name": "PasswordResetFormTest.test_inactive_user",
      "file": "tests/auth_tests/test_forms.py",
      "line": 826
    },
    {
      "id": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_unusable_password",
      "type": "function",
      "name": "PasswordResetFormTest.test_unusable_password",
      "file": "tests/auth_tests/test_forms.py",
      "line": 838
    },
    {
      "id": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_save_plaintext_email",
      "type": "function",
      "name": "PasswordResetFormTest.test_save_plaintext_email",
      "file": "tests/auth_tests/test_forms.py",
      "line": 851
    },
    {
      "id": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_save_html_email_template_name",
      "type": "function",
      "name": "PasswordResetFormTest.test_save_html_email_template_name",
      "file": "tests/auth_tests/test_forms.py",
      "line": 870
    },
    {
      "id": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_custom_email_field",
      "type": "function",
      "name": "PasswordResetFormTest.test_custom_email_field",
      "file": "tests/auth_tests/test_forms.py",
      "line": 897
    },
    {
      "id": "tests/auth_tests/test_forms.py:ReadOnlyPasswordHashTest",
      "type": "class",
      "name": "ReadOnlyPasswordHashTest",
      "file": "tests/auth_tests/test_forms.py",
      "line": 908
    },
    {
      "id": "tests/auth_tests/test_forms.py:ReadOnlyPasswordHashTest.test_bug_19349_render_with_none_value",
      "type": "function",
      "name": "ReadOnlyPasswordHashTest.test_bug_19349_render_with_none_value",
      "file": "tests/auth_tests/test_forms.py",
      "line": 910
    },
    {
      "id": "tests/auth_tests/test_forms.py:ReadOnlyPasswordHashTest.test_render",
      "type": "function",
      "name": "ReadOnlyPasswordHashTest.test_render",
      "file": "tests/auth_tests/test_forms.py",
      "line": 918
    },
    {
      "id": "tests/auth_tests/test_forms.py:ReadOnlyPasswordHashTest.test_readonly_field_has_changed",
      "type": "function",
      "name": "ReadOnlyPasswordHashTest.test_readonly_field_has_changed",
      "file": "tests/auth_tests/test_forms.py",
      "line": 933
    },
    {
      "id": "tests/auth_tests/test_forms.py:AdminPasswordChangeFormTest",
      "type": "class",
      "name": "AdminPasswordChangeFormTest",
      "file": "tests/auth_tests/test_forms.py",
      "line": 938
    },
    {
      "id": "tests/auth_tests/test_forms.py:AdminPasswordChangeFormTest.test_success",
      "type": "function",
      "name": "AdminPasswordChangeFormTest.test_success",
      "file": "tests/auth_tests/test_forms.py",
      "line": 941
    },
    {
      "id": "tests/auth_tests/test_forms.py:AdminPasswordChangeFormTest.test_password_whitespace_not_stripped",
      "type": "function",
      "name": "AdminPasswordChangeFormTest.test_password_whitespace_not_stripped",
      "file": "tests/auth_tests/test_forms.py",
      "line": 954
    },
    {
      "id": "tests/auth_tests/test_forms.py:AdminPasswordChangeFormTest.test_non_matching_passwords",
      "type": "function",
      "name": "AdminPasswordChangeFormTest.test_non_matching_passwords",
      "file": "tests/auth_tests/test_forms.py",
      "line": 965
    },
    {
      "id": "tests/auth_tests/test_forms.py:AdminPasswordChangeFormTest.test_missing_passwords",
      "type": "function",
      "name": "AdminPasswordChangeFormTest.test_missing_passwords",
      "file": "tests/auth_tests/test_forms.py",
      "line": 971
    },
    {
      "id": "tests/auth_tests/test_forms.py:AdminPasswordChangeFormTest.test_one_password",
      "type": "function",
      "name": "AdminPasswordChangeFormTest.test_one_password",
      "file": "tests/auth_tests/test_forms.py",
      "line": 979
    },
    {
      "id": "tests/auth_tests/test_basic.py",
      "type": "file",
      "name": "test_basic.py",
      "file": "tests/auth_tests/test_basic.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/test_basic.py:BasicTestCase",
      "type": "class",
      "name": "BasicTestCase",
      "file": "tests/auth_tests/test_basic.py",
      "line": 12
    },
    {
      "id": "tests/auth_tests/test_basic.py:BasicTestCase.test_user",
      "type": "function",
      "name": "BasicTestCase.test_user",
      "file": "tests/auth_tests/test_basic.py",
      "line": 13
    },
    {
      "id": "tests/auth_tests/test_basic.py:BasicTestCase.test_unicode_username",
      "type": "function",
      "name": "BasicTestCase.test_unicode_username",
      "file": "tests/auth_tests/test_basic.py",
      "line": 44
    },
    {
      "id": "tests/auth_tests/test_basic.py:BasicTestCase.test_user_no_email",
      "type": "function",
      "name": "BasicTestCase.test_user_no_email",
      "file": "tests/auth_tests/test_basic.py",
      "line": 54
    },
    {
      "id": "tests/auth_tests/test_basic.py:BasicTestCase.test_superuser",
      "type": "function",
      "name": "BasicTestCase.test_superuser",
      "file": "tests/auth_tests/test_basic.py",
      "line": 65
    },
    {
      "id": "tests/auth_tests/test_basic.py:BasicTestCase.test_get_user_model",
      "type": "function",
      "name": "BasicTestCase.test_get_user_model",
      "file": "tests/auth_tests/test_basic.py",
      "line": 72
    },
    {
      "id": "tests/auth_tests/test_basic.py:BasicTestCase.test_swappable_user",
      "type": "function",
      "name": "BasicTestCase.test_swappable_user",
      "file": "tests/auth_tests/test_basic.py",
      "line": 77
    },
    {
      "id": "tests/auth_tests/test_basic.py:BasicTestCase.test_swappable_user_bad_setting",
      "type": "function",
      "name": "BasicTestCase.test_swappable_user_bad_setting",
      "file": "tests/auth_tests/test_basic.py",
      "line": 84
    },
    {
      "id": "tests/auth_tests/test_basic.py:BasicTestCase.test_swappable_user_nonexistent_model",
      "type": "function",
      "name": "BasicTestCase.test_swappable_user_nonexistent_model",
      "file": "tests/auth_tests/test_basic.py",
      "line": 91
    },
    {
      "id": "tests/auth_tests/test_basic.py:BasicTestCase.test_user_verbose_names_translatable",
      "type": "function",
      "name": "BasicTestCase.test_user_verbose_names_translatable",
      "file": "tests/auth_tests/test_basic.py",
      "line": 100
    },
    {
      "id": "tests/auth_tests/test_basic.py:TestGetUser",
      "type": "class",
      "name": "TestGetUser",
      "file": "tests/auth_tests/test_basic.py",
      "line": 110
    },
    {
      "id": "tests/auth_tests/test_basic.py:TestGetUser.test_get_user_anonymous",
      "type": "function",
      "name": "TestGetUser.test_get_user_anonymous",
      "file": "tests/auth_tests/test_basic.py",
      "line": 112
    },
    {
      "id": "tests/auth_tests/test_basic.py:TestGetUser.test_get_user",
      "type": "function",
      "name": "TestGetUser.test_get_user",
      "file": "tests/auth_tests/test_basic.py",
      "line": 118
    },
    {
      "id": "tests/auth_tests/test_decorators.py",
      "type": "file",
      "name": "test_decorators.py",
      "file": "tests/auth_tests/test_decorators.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase",
      "type": "class",
      "name": "LoginRequiredTestCase",
      "file": "tests/auth_tests/test_decorators.py",
      "line": 13
    },
    {
      "id": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase.testCallable",
      "type": "function",
      "name": "LoginRequiredTestCase.testCallable",
      "file": "tests/auth_tests/test_decorators.py",
      "line": 18
    },
    {
      "id": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase.testCallable.CallableView",
      "type": "class",
      "name": "LoginRequiredTestCase.testCallable.CallableView",
      "file": "tests/auth_tests/test_decorators.py",
      "line": 22
    },
    {
      "id": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase.testCallable.CallableView.__call__",
      "type": "function",
      "name": "LoginRequiredTestCase.testCallable.CallableView.__call__",
      "file": "tests/auth_tests/test_decorators.py",
      "line": 23
    },
    {
      "id": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase.testView",
      "type": "function",
      "name": "LoginRequiredTestCase.testView",
      "file": "tests/auth_tests/test_decorators.py",
      "line": 27
    },
    {
      "id": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase.testView.normal_view",
      "type": "function",
      "name": "LoginRequiredTestCase.testView.normal_view",
      "file": "tests/auth_tests/test_decorators.py",
      "line": 31
    },
    {
      "id": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase.testLoginRequired",
      "type": "function",
      "name": "LoginRequiredTestCase.testLoginRequired",
      "file": "tests/auth_tests/test_decorators.py",
      "line": 35
    },
    {
      "id": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase.testLoginRequiredNextUrl",
      "type": "function",
      "name": "LoginRequiredTestCase.testLoginRequiredNextUrl",
      "file": "tests/auth_tests/test_decorators.py",
      "line": 49
    },
    {
      "id": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest",
      "type": "class",
      "name": "PermissionsRequiredDecoratorTest",
      "file": "tests/auth_tests/test_decorators.py",
      "line": 57
    },
    {
      "id": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.setUpTestData",
      "type": "function",
      "name": "PermissionsRequiredDecoratorTest.setUpTestData",
      "file": "tests/auth_tests/test_decorators.py",
      "line": 64
    },
    {
      "id": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_many_permissions_pass",
      "type": "function",
      "name": "PermissionsRequiredDecoratorTest.test_many_permissions_pass",
      "file": "tests/auth_tests/test_decorators.py",
      "line": 70
    },
    {
      "id": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_many_permissions_pass.a_view",
      "type": "function",
      "name": "PermissionsRequiredDecoratorTest.test_many_permissions_pass.a_view",
      "file": "tests/auth_tests/test_decorators.py",
      "line": 73
    },
    {
      "id": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_many_permissions_in_set_pass",
      "type": "function",
      "name": "PermissionsRequiredDecoratorTest.test_many_permissions_in_set_pass",
      "file": "tests/auth_tests/test_decorators.py",
      "line": 80
    },
    {
      "id": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_many_permissions_in_set_pass.a_view",
      "type": "function",
      "name": "PermissionsRequiredDecoratorTest.test_many_permissions_in_set_pass.a_view",
      "file": "tests/auth_tests/test_decorators.py",
      "line": 83
    },
    {
      "id": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_single_permission_pass",
      "type": "function",
      "name": "PermissionsRequiredDecoratorTest.test_single_permission_pass",
      "file": "tests/auth_tests/test_decorators.py",
      "line": 90
    },
    {
      "id": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_single_permission_pass.a_view",
      "type": "function",
      "name": "PermissionsRequiredDecoratorTest.test_single_permission_pass.a_view",
      "file": "tests/auth_tests/test_decorators.py",
      "line": 93
    },
    {
      "id": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_permissioned_denied_redirect",
      "type": "function",
      "name": "PermissionsRequiredDecoratorTest.test_permissioned_denied_redirect",
      "file": "tests/auth_tests/test_decorators.py",
      "line": 100
    },
    {
      "id": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_permissioned_denied_redirect.a_view",
      "type": "function",
      "name": "PermissionsRequiredDecoratorTest.test_permissioned_denied_redirect.a_view",
      "file": "tests/auth_tests/test_decorators.py",
      "line": 103
    },
    {
      "id": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_permissioned_denied_exception_raised",
      "type": "function",
      "name": "PermissionsRequiredDecoratorTest.test_permissioned_denied_exception_raised",
      "file": "tests/auth_tests/test_decorators.py",
      "line": 110
    },
    {
      "id": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_permissioned_denied_exception_raised.a_view",
      "type": "function",
      "name": "PermissionsRequiredDecoratorTest.test_permissioned_denied_exception_raised.a_view",
      "file": "tests/auth_tests/test_decorators.py",
      "line": 115
    },
    {
      "id": "tests/auth_tests/test_handlers.py",
      "type": "file",
      "name": "test_handlers.py",
      "file": "tests/auth_tests/test_handlers.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/test_handlers.py:ModWsgiHandlerTestCase",
      "type": "class",
      "name": "ModWsgiHandlerTestCase",
      "file": "tests/auth_tests/test_handlers.py",
      "line": 12
    },
    {
      "id": "tests/auth_tests/test_handlers.py:ModWsgiHandlerTestCase.test_check_password",
      "type": "function",
      "name": "ModWsgiHandlerTestCase.test_check_password",
      "file": "tests/auth_tests/test_handlers.py",
      "line": 23
    },
    {
      "id": "tests/auth_tests/test_handlers.py:ModWsgiHandlerTestCase.test_check_password_custom_user",
      "type": "function",
      "name": "ModWsgiHandlerTestCase.test_check_password_custom_user",
      "file": "tests/auth_tests/test_handlers.py",
      "line": 44
    },
    {
      "id": "tests/auth_tests/test_handlers.py:ModWsgiHandlerTestCase.test_groups_for_user",
      "type": "function",
      "name": "ModWsgiHandlerTestCase.test_groups_for_user",
      "file": "tests/auth_tests/test_handlers.py",
      "line": 61
    },
    {
      "id": "tests/auth_tests/test_middleware.py",
      "type": "file",
      "name": "test_middleware.py",
      "file": "tests/auth_tests/test_middleware.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/test_middleware.py:TestAuthenticationMiddleware",
      "type": "class",
      "name": "TestAuthenticationMiddleware",
      "file": "tests/auth_tests/test_middleware.py",
      "line": 7
    },
    {
      "id": "tests/auth_tests/test_middleware.py:TestAuthenticationMiddleware.setUp",
      "type": "function",
      "name": "TestAuthenticationMiddleware.setUp",
      "file": "tests/auth_tests/test_middleware.py",
      "line": 8
    },
    {
      "id": "tests/auth_tests/test_middleware.py:TestAuthenticationMiddleware.test_no_password_change_doesnt_invalidate_session",
      "type": "function",
      "name": "TestAuthenticationMiddleware.test_no_password_change_doesnt_invalidate_session",
      "file": "tests/auth_tests/test_middleware.py",
      "line": 15
    },
    {
      "id": "tests/auth_tests/test_middleware.py:TestAuthenticationMiddleware.test_changed_password_invalidates_session",
      "type": "function",
      "name": "TestAuthenticationMiddleware.test_changed_password_invalidates_session",
      "file": "tests/auth_tests/test_middleware.py",
      "line": 21
    },
    {
      "id": "tests/auth_tests/test_signals.py",
      "type": "file",
      "name": "test_signals.py",
      "file": "tests/auth_tests/test_signals.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/test_signals.py:SignalTestCase",
      "type": "class",
      "name": "SignalTestCase",
      "file": "tests/auth_tests/test_signals.py",
      "line": 12
    },
    {
      "id": "tests/auth_tests/test_signals.py:SignalTestCase.setUpTestData",
      "type": "function",
      "name": "SignalTestCase.setUpTestData",
      "file": "tests/auth_tests/test_signals.py",
      "line": 15
    },
    {
      "id": "tests/auth_tests/test_signals.py:SignalTestCase.listener_login",
      "type": "function",
      "name": "SignalTestCase.listener_login",
      "file": "tests/auth_tests/test_signals.py",
      "line": 19
    },
    {
      "id": "tests/auth_tests/test_signals.py:SignalTestCase.listener_logout",
      "type": "function",
      "name": "SignalTestCase.listener_logout",
      "file": "tests/auth_tests/test_signals.py",
      "line": 22
    },
    {
      "id": "tests/auth_tests/test_signals.py:SignalTestCase.listener_login_failed",
      "type": "function",
      "name": "SignalTestCase.listener_login_failed",
      "file": "tests/auth_tests/test_signals.py",
      "line": 25
    },
    {
      "id": "tests/auth_tests/test_signals.py:SignalTestCase.setUp",
      "type": "function",
      "name": "SignalTestCase.setUp",
      "file": "tests/auth_tests/test_signals.py",
      "line": 28
    },
    {
      "id": "tests/auth_tests/test_signals.py:SignalTestCase.tearDown",
      "type": "function",
      "name": "SignalTestCase.tearDown",
      "file": "tests/auth_tests/test_signals.py",
      "line": 37
    },
    {
      "id": "tests/auth_tests/test_signals.py:SignalTestCase.test_login",
      "type": "function",
      "name": "SignalTestCase.test_login",
      "file": "tests/auth_tests/test_signals.py",
      "line": 43
    },
    {
      "id": "tests/auth_tests/test_signals.py:SignalTestCase.test_logout_anonymous",
      "type": "function",
      "name": "SignalTestCase.test_logout_anonymous",
      "file": "tests/auth_tests/test_signals.py",
      "line": 61
    },
    {
      "id": "tests/auth_tests/test_signals.py:SignalTestCase.test_logout",
      "type": "function",
      "name": "SignalTestCase.test_logout",
      "file": "tests/auth_tests/test_signals.py",
      "line": 68
    },
    {
      "id": "tests/auth_tests/test_signals.py:SignalTestCase.test_update_last_login",
      "type": "function",
      "name": "SignalTestCase.test_update_last_login",
      "file": "tests/auth_tests/test_signals.py",
      "line": 74
    },
    {
      "id": "tests/auth_tests/test_signals.py:SignalTestCase.test_failed_login_without_request",
      "type": "function",
      "name": "SignalTestCase.test_failed_login_without_request",
      "file": "tests/auth_tests/test_signals.py",
      "line": 86
    },
    {
      "id": "tests/auth_tests/test_signals.py:SignalTestCase.test_login_with_custom_user_without_last_login_field",
      "type": "function",
      "name": "SignalTestCase.test_login_with_custom_user_without_last_login_field",
      "file": "tests/auth_tests/test_signals.py",
      "line": 90
    },
    {
      "id": "tests/auth_tests/urls_admin.py",
      "type": "file",
      "name": "urls_admin.py",
      "file": "tests/auth_tests/urls_admin.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/test_templates.py",
      "type": "file",
      "name": "test_templates.py",
      "file": "tests/auth_tests/test_templates.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/test_templates.py:AuthTemplateTests",
      "type": "class",
      "name": "AuthTemplateTests",
      "file": "tests/auth_tests/test_templates.py",
      "line": 16
    },
    {
      "id": "tests/auth_tests/test_templates.py:AuthTemplateTests.setUpTestData",
      "type": "function",
      "name": "AuthTemplateTests.setUpTestData",
      "file": "tests/auth_tests/test_templates.py",
      "line": 20
    },
    {
      "id": "tests/auth_tests/test_templates.py:AuthTemplateTests.test_PasswordResetView",
      "type": "function",
      "name": "AuthTemplateTests.test_PasswordResetView",
      "file": "tests/auth_tests/test_templates.py",
      "line": 27
    },
    {
      "id": "tests/auth_tests/test_templates.py:AuthTemplateTests.test_PasswordResetDoneView",
      "type": "function",
      "name": "AuthTemplateTests.test_PasswordResetDoneView",
      "file": "tests/auth_tests/test_templates.py",
      "line": 32
    },
    {
      "id": "tests/auth_tests/test_templates.py:AuthTemplateTests.test_PasswordResetConfirmView_invalid_token",
      "type": "function",
      "name": "AuthTemplateTests.test_PasswordResetConfirmView_invalid_token",
      "file": "tests/auth_tests/test_templates.py",
      "line": 37
    },
    {
      "id": "tests/auth_tests/test_templates.py:AuthTemplateTests.test_PasswordResetConfirmView_valid_token",
      "type": "function",
      "name": "AuthTemplateTests.test_PasswordResetConfirmView_valid_token",
      "file": "tests/auth_tests/test_templates.py",
      "line": 45
    },
    {
      "id": "tests/auth_tests/test_templates.py:AuthTemplateTests.test_PasswordResetCompleteView",
      "type": "function",
      "name": "AuthTemplateTests.test_PasswordResetCompleteView",
      "file": "tests/auth_tests/test_templates.py",
      "line": 56
    },
    {
      "id": "tests/auth_tests/test_templates.py:AuthTemplateTests.test_PasswordResetChangeView",
      "type": "function",
      "name": "AuthTemplateTests.test_PasswordResetChangeView",
      "file": "tests/auth_tests/test_templates.py",
      "line": 61
    },
    {
      "id": "tests/auth_tests/test_templates.py:AuthTemplateTests.test_PasswordChangeDoneView",
      "type": "function",
      "name": "AuthTemplateTests.test_PasswordChangeDoneView",
      "file": "tests/auth_tests/test_templates.py",
      "line": 66
    },
    {
      "id": "tests/auth_tests/client.py",
      "type": "file",
      "name": "client.py",
      "file": "tests/auth_tests/client.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/client.py:extract_token_from_url",
      "type": "function",
      "name": "extract_token_from_url",
      "file": "tests/auth_tests/client.py",
      "line": 9
    },
    {
      "id": "tests/auth_tests/client.py:PasswordResetConfirmClient",
      "type": "class",
      "name": "PasswordResetConfirmClient",
      "file": "tests/auth_tests/client.py",
      "line": 15
    },
    {
      "id": "tests/auth_tests/client.py:PasswordResetConfirmClient._get_password_reset_confirm_redirect_url",
      "type": "function",
      "name": "PasswordResetConfirmClient._get_password_reset_confirm_redirect_url",
      "file": "tests/auth_tests/client.py",
      "line": 25
    },
    {
      "id": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "function",
      "name": "PasswordResetConfirmClient.get",
      "file": "tests/auth_tests/client.py",
      "line": 35
    },
    {
      "id": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "function",
      "name": "PasswordResetConfirmClient.post",
      "file": "tests/auth_tests/client.py",
      "line": 39
    },
    {
      "id": "tests/auth_tests/test_context_processors.py",
      "type": "file",
      "name": "test_context_processors.py",
      "file": "tests/auth_tests/test_context_processors.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/test_context_processors.py:MockUser",
      "type": "class",
      "name": "MockUser",
      "file": "tests/auth_tests/test_context_processors.py",
      "line": 11
    },
    {
      "id": "tests/auth_tests/test_context_processors.py:MockUser.has_module_perms",
      "type": "function",
      "name": "MockUser.has_module_perms",
      "file": "tests/auth_tests/test_context_processors.py",
      "line": 12
    },
    {
      "id": "tests/auth_tests/test_context_processors.py:MockUser.has_perm",
      "type": "function",
      "name": "MockUser.has_perm",
      "file": "tests/auth_tests/test_context_processors.py",
      "line": 15
    },
    {
      "id": "tests/auth_tests/test_context_processors.py:PermWrapperTests",
      "type": "class",
      "name": "PermWrapperTests",
      "file": "tests/auth_tests/test_context_processors.py",
      "line": 19
    },
    {
      "id": "tests/auth_tests/test_context_processors.py:PermWrapperTests.EQLimiterObject",
      "type": "class",
      "name": "PermWrapperTests.EQLimiterObject",
      "file": "tests/auth_tests/test_context_processors.py",
      "line": 23
    },
    {
      "id": "tests/auth_tests/test_context_processors.py:PermWrapperTests.EQLimiterObject.__eq__",
      "type": "function",
      "name": "PermWrapperTests.EQLimiterObject.__eq__",
      "file": "tests/auth_tests/test_context_processors.py",
      "line": 30
    },
    {
      "id": "tests/auth_tests/test_context_processors.py:PermWrapperTests.test_permwrapper_in",
      "type": "function",
      "name": "PermWrapperTests.test_permwrapper_in",
      "file": "tests/auth_tests/test_context_processors.py",
      "line": 36
    },
    {
      "id": "tests/auth_tests/test_context_processors.py:PermWrapperTests.test_permlookupdict_in",
      "type": "function",
      "name": "PermWrapperTests.test_permlookupdict_in",
      "file": "tests/auth_tests/test_context_processors.py",
      "line": 47
    },
    {
      "id": "tests/auth_tests/test_context_processors.py:PermWrapperTests.test_iter",
      "type": "function",
      "name": "PermWrapperTests.test_iter",
      "file": "tests/auth_tests/test_context_processors.py",
      "line": 55
    },
    {
      "id": "tests/auth_tests/test_context_processors.py:AuthContextProcessorTests",
      "type": "class",
      "name": "AuthContextProcessorTests",
      "file": "tests/auth_tests/test_context_processors.py",
      "line": 61
    },
    {
      "id": "tests/auth_tests/test_context_processors.py:AuthContextProcessorTests.setUpTestData",
      "type": "function",
      "name": "AuthContextProcessorTests.setUpTestData",
      "file": "tests/auth_tests/test_context_processors.py",
      "line": 67
    },
    {
      "id": "tests/auth_tests/test_context_processors.py:AuthContextProcessorTests.test_session_not_accessed",
      "type": "function",
      "name": "AuthContextProcessorTests.test_session_not_accessed",
      "file": "tests/auth_tests/test_context_processors.py",
      "line": 71
    },
    {
      "id": "tests/auth_tests/test_context_processors.py:AuthContextProcessorTests.test_session_is_accessed",
      "type": "function",
      "name": "AuthContextProcessorTests.test_session_is_accessed",
      "file": "tests/auth_tests/test_context_processors.py",
      "line": 80
    },
    {
      "id": "tests/auth_tests/test_context_processors.py:AuthContextProcessorTests.test_perms_attrs",
      "type": "function",
      "name": "AuthContextProcessorTests.test_perms_attrs",
      "file": "tests/auth_tests/test_context_processors.py",
      "line": 88
    },
    {
      "id": "tests/auth_tests/test_context_processors.py:AuthContextProcessorTests.test_perm_in_perms_attrs",
      "type": "function",
      "name": "AuthContextProcessorTests.test_perm_in_perms_attrs",
      "file": "tests/auth_tests/test_context_processors.py",
      "line": 100
    },
    {
      "id": "tests/auth_tests/test_context_processors.py:AuthContextProcessorTests.test_message_attrs",
      "type": "function",
      "name": "AuthContextProcessorTests.test_message_attrs",
      "file": "tests/auth_tests/test_context_processors.py",
      "line": 112
    },
    {
      "id": "tests/auth_tests/test_context_processors.py:AuthContextProcessorTests.test_user_attrs",
      "type": "function",
      "name": "AuthContextProcessorTests.test_user_attrs",
      "file": "tests/auth_tests/test_context_processors.py",
      "line": 117
    },
    {
      "id": "tests/auth_tests/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/auth_tests/__init__.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/test_management.py",
      "type": "file",
      "name": "test_management.py",
      "file": "tests/auth_tests/test_management.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/test_management.py:mock_inputs",
      "type": "function",
      "name": "mock_inputs",
      "file": "tests/auth_tests/test_management.py",
      "line": 39
    },
    {
      "id": "tests/auth_tests/test_management.py:mock_inputs.inner",
      "type": "function",
      "name": "mock_inputs.inner",
      "file": "tests/auth_tests/test_management.py",
      "line": 44
    },
    {
      "id": "tests/auth_tests/test_management.py:mock_inputs.inner.wrapped",
      "type": "function",
      "name": "mock_inputs.inner.wrapped",
      "file": "tests/auth_tests/test_management.py",
      "line": 45
    },
    {
      "id": "tests/auth_tests/test_management.py:mock_inputs.inner.wrapped.mock_getpass",
      "type": "class",
      "name": "mock_inputs.inner.wrapped.mock_getpass",
      "file": "tests/auth_tests/test_management.py",
      "line": 46
    },
    {
      "id": "tests/auth_tests/test_management.py:mock_inputs.inner.wrapped.mock_getpass.getpass",
      "type": "function",
      "name": "mock_inputs.inner.wrapped.mock_getpass.getpass",
      "file": "tests/auth_tests/test_management.py",
      "line": 48
    },
    {
      "id": "tests/auth_tests/test_management.py:mock_inputs.inner.wrapped.mock_input",
      "type": "function",
      "name": "mock_inputs.inner.wrapped.mock_input",
      "file": "tests/auth_tests/test_management.py",
      "line": 53
    },
    {
      "id": "tests/auth_tests/test_management.py:MockTTY",
      "type": "class",
      "name": "MockTTY",
      "file": "tests/auth_tests/test_management.py",
      "line": 87
    },
    {
      "id": "tests/auth_tests/test_management.py:MockTTY.isatty",
      "type": "function",
      "name": "MockTTY.isatty",
      "file": "tests/auth_tests/test_management.py",
      "line": 92
    },
    {
      "id": "tests/auth_tests/test_management.py:MockInputTests",
      "type": "class",
      "name": "MockInputTests",
      "file": "tests/auth_tests/test_management.py",
      "line": 96
    },
    {
      "id": "tests/auth_tests/test_management.py:MockInputTests.test_input_not_found",
      "type": "function",
      "name": "MockInputTests.test_input_not_found",
      "file": "tests/auth_tests/test_management.py",
      "line": 98
    },
    {
      "id": "tests/auth_tests/test_management.py:GetDefaultUsernameTestCase",
      "type": "class",
      "name": "GetDefaultUsernameTestCase",
      "file": "tests/auth_tests/test_management.py",
      "line": 103
    },
    {
      "id": "tests/auth_tests/test_management.py:GetDefaultUsernameTestCase.setUp",
      "type": "function",
      "name": "GetDefaultUsernameTestCase.setUp",
      "file": "tests/auth_tests/test_management.py",
      "line": 105
    },
    {
      "id": "tests/auth_tests/test_management.py:GetDefaultUsernameTestCase.tearDown",
      "type": "function",
      "name": "GetDefaultUsernameTestCase.tearDown",
      "file": "tests/auth_tests/test_management.py",
      "line": 108
    },
    {
      "id": "tests/auth_tests/test_management.py:GetDefaultUsernameTestCase.test_actual_implementation",
      "type": "function",
      "name": "GetDefaultUsernameTestCase.test_actual_implementation",
      "file": "tests/auth_tests/test_management.py",
      "line": 111
    },
    {
      "id": "tests/auth_tests/test_management.py:GetDefaultUsernameTestCase.test_simple",
      "type": "function",
      "name": "GetDefaultUsernameTestCase.test_simple",
      "file": "tests/auth_tests/test_management.py",
      "line": 114
    },
    {
      "id": "tests/auth_tests/test_management.py:GetDefaultUsernameTestCase.test_existing",
      "type": "function",
      "name": "GetDefaultUsernameTestCase.test_existing",
      "file": "tests/auth_tests/test_management.py",
      "line": 118
    },
    {
      "id": "tests/auth_tests/test_management.py:GetDefaultUsernameTestCase.test_i18n",
      "type": "function",
      "name": "GetDefaultUsernameTestCase.test_i18n",
      "file": "tests/auth_tests/test_management.py",
      "line": 125
    },
    {
      "id": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase",
      "type": "class",
      "name": "ChangepasswordManagementCommandTestCase",
      "file": "tests/auth_tests/test_management.py",
      "line": 134
    },
    {
      "id": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase.setUpTestData",
      "type": "function",
      "name": "ChangepasswordManagementCommandTestCase.setUpTestData",
      "file": "tests/auth_tests/test_management.py",
      "line": 137
    },
    {
      "id": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase.setUp",
      "type": "function",
      "name": "ChangepasswordManagementCommandTestCase.setUp",
      "file": "tests/auth_tests/test_management.py",
      "line": 140
    },
    {
      "id": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase.tearDown",
      "type": "function",
      "name": "ChangepasswordManagementCommandTestCase.tearDown",
      "file": "tests/auth_tests/test_management.py",
      "line": 144
    },
    {
      "id": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase.test_get_pass",
      "type": "function",
      "name": "ChangepasswordManagementCommandTestCase.test_get_pass",
      "file": "tests/auth_tests/test_management.py",
      "line": 149
    },
    {
      "id": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase.test_get_pass_no_input",
      "type": "function",
      "name": "ChangepasswordManagementCommandTestCase.test_get_pass_no_input",
      "file": "tests/auth_tests/test_management.py",
      "line": 154
    },
    {
      "id": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase.test_system_username",
      "type": "function",
      "name": "ChangepasswordManagementCommandTestCase.test_system_username",
      "file": "tests/auth_tests/test_management.py",
      "line": 159
    },
    {
      "id": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase.test_nonexistent_username",
      "type": "function",
      "name": "ChangepasswordManagementCommandTestCase.test_nonexistent_username",
      "file": "tests/auth_tests/test_management.py",
      "line": 166
    },
    {
      "id": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase.test_that_changepassword_command_changes_joes_password",
      "type": "function",
      "name": "ChangepasswordManagementCommandTestCase.test_that_changepassword_command_changes_joes_password",
      "file": "tests/auth_tests/test_management.py",
      "line": 171
    },
    {
      "id": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase.test_that_max_tries_exits_1",
      "type": "function",
      "name": "ChangepasswordManagementCommandTestCase.test_that_max_tries_exits_1",
      "file": "tests/auth_tests/test_management.py",
      "line": 185
    },
    {
      "id": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase.test_password_validation",
      "type": "function",
      "name": "ChangepasswordManagementCommandTestCase.test_password_validation",
      "file": "tests/auth_tests/test_management.py",
      "line": 195
    },
    {
      "id": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase.test_that_changepassword_command_works_with_nonascii_output",
      "type": "function",
      "name": "ChangepasswordManagementCommandTestCase.test_that_changepassword_command_works_with_nonascii_output",
      "file": "tests/auth_tests/test_management.py",
      "line": 206
    },
    {
      "id": "tests/auth_tests/test_management.py:MultiDBChangepasswordManagementCommandTestCase",
      "type": "class",
      "name": "MultiDBChangepasswordManagementCommandTestCase",
      "file": "tests/auth_tests/test_management.py",
      "line": 216
    },
    {
      "id": "tests/auth_tests/test_management.py:MultiDBChangepasswordManagementCommandTestCase.test_that_changepassword_command_with_database_option_uses_given_db",
      "type": "function",
      "name": "MultiDBChangepasswordManagementCommandTestCase.test_that_changepassword_command_with_database_option_uses_given_db",
      "file": "tests/auth_tests/test_management.py",
      "line": 220
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "type": "class",
      "name": "CreatesuperuserManagementCommandTestCase",
      "file": "tests/auth_tests/test_management.py",
      "line": 242
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_no_email_argument",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_no_email_argument",
      "file": "tests/auth_tests/test_management.py",
      "line": 244
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_basic_usage",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_basic_usage",
      "file": "tests/auth_tests/test_management.py",
      "line": 249
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_non_ascii_verbose_name",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_non_ascii_verbose_name",
      "file": "tests/auth_tests/test_management.py",
      "line": 268
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_non_ascii_verbose_name.test",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_non_ascii_verbose_name.test",
      "file": "tests/auth_tests/test_management.py",
      "line": 274
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_verbosity_zero",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_verbosity_zero",
      "file": "tests/auth_tests/test_management.py",
      "line": 294
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_email_in_username",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_email_in_username",
      "file": "tests/auth_tests/test_management.py",
      "line": 311
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_swappable_user",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_swappable_user",
      "file": "tests/auth_tests/test_management.py",
      "line": 325
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_swappable_user_missing_required_field",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_swappable_user_missing_required_field",
      "file": "tests/auth_tests/test_management.py",
      "line": 348
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_swappable_user_username_non_unique",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_swappable_user_username_non_unique",
      "file": "tests/auth_tests/test_management.py",
      "line": 368
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_swappable_user_username_non_unique.createsuperuser",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_swappable_user_username_non_unique.createsuperuser",
      "file": "tests/auth_tests/test_management.py",
      "line": 373
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_skip_if_not_in_TTY",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_skip_if_not_in_TTY",
      "file": "tests/auth_tests/test_management.py",
      "line": 391
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_skip_if_not_in_TTY.FakeStdin",
      "type": "class",
      "name": "CreatesuperuserManagementCommandTestCase.test_skip_if_not_in_TTY.FakeStdin",
      "file": "tests/auth_tests/test_management.py",
      "line": 396
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_skip_if_not_in_TTY.FakeStdin.isatty",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_skip_if_not_in_TTY.FakeStdin.isatty",
      "file": "tests/auth_tests/test_management.py",
      "line": 398
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_passing_stdin",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_passing_stdin",
      "file": "tests/auth_tests/test_management.py",
      "line": 412
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_fields_with_fk",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_fields_with_fk",
      "file": "tests/auth_tests/test_management.py",
      "line": 445
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_fields_with_fk_interactive",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_fields_with_fk_interactive",
      "file": "tests/auth_tests/test_management.py",
      "line": 475
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_fields_with_fk_interactive.test",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_fields_with_fk_interactive.test",
      "file": "tests/auth_tests/test_management.py",
      "line": 486
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_default_username",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_default_username",
      "file": "tests/auth_tests/test_management.py",
      "line": 502
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_default_username.return_passwords",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_default_username.return_passwords",
      "file": "tests/auth_tests/test_management.py",
      "line": 509
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_default_username.test",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_default_username.test",
      "file": "tests/auth_tests/test_management.py",
      "line": 513
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_password_validation",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_password_validation",
      "file": "tests/auth_tests/test_management.py",
      "line": 526
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_password_validation.bad_then_good_password",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_password_validation.bad_then_good_password",
      "file": "tests/auth_tests/test_management.py",
      "line": 533
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_password_validation.test",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_password_validation.test",
      "file": "tests/auth_tests/test_management.py",
      "line": 542
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validate_password_against_username",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_validate_password_against_username",
      "file": "tests/auth_tests/test_management.py",
      "line": 561
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validate_password_against_username.bad_then_good_password",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_validate_password_against_username.bad_then_good_password",
      "file": "tests/auth_tests/test_management.py",
      "line": 566
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validate_password_against_username.test",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_validate_password_against_username.test",
      "file": "tests/auth_tests/test_management.py",
      "line": 575
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validate_password_against_required_fields",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_validate_password_against_required_fields",
      "file": "tests/auth_tests/test_management.py",
      "line": 597
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validate_password_against_required_fields.bad_then_good_password",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_validate_password_against_required_fields.bad_then_good_password",
      "file": "tests/auth_tests/test_management.py",
      "line": 602
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validate_password_against_required_fields.test",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_validate_password_against_required_fields.test",
      "file": "tests/auth_tests/test_management.py",
      "line": 613
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_blank_username",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_blank_username",
      "file": "tests/auth_tests/test_management.py",
      "line": 629
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_blank_username.test",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_blank_username.test",
      "file": "tests/auth_tests/test_management.py",
      "line": 633
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_blank_username_non_interactive",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_blank_username_non_interactive",
      "file": "tests/auth_tests/test_management.py",
      "line": 645
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_blank_username_non_interactive.test",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_blank_username_non_interactive.test",
      "file": "tests/auth_tests/test_management.py",
      "line": 648
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_password_validation_bypass",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_password_validation_bypass",
      "file": "tests/auth_tests/test_management.py",
      "line": 661
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_password_validation_bypass.test",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_password_validation_bypass.test",
      "file": "tests/auth_tests/test_management.py",
      "line": 673
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_invalid_username",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_invalid_username",
      "file": "tests/auth_tests/test_management.py",
      "line": 689
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_invalid_username.return_passwords",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_invalid_username.return_passwords",
      "file": "tests/auth_tests/test_management.py",
      "line": 698
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_invalid_username.return_usernames",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_invalid_username.return_usernames",
      "file": "tests/auth_tests/test_management.py",
      "line": 701
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_invalid_username.test",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_invalid_username.test",
      "file": "tests/auth_tests/test_management.py",
      "line": 705
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_keyboard_interrupt",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_keyboard_interrupt",
      "file": "tests/auth_tests/test_management.py",
      "line": 722
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_existing_username",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_existing_username",
      "file": "tests/auth_tests/test_management.py",
      "line": 734
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_existing_username.return_passwords",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_existing_username.return_passwords",
      "file": "tests/auth_tests/test_management.py",
      "line": 742
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_existing_username.return_usernames",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_existing_username.return_usernames",
      "file": "tests/auth_tests/test_management.py",
      "line": 745
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_existing_username.test",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_existing_username.test",
      "file": "tests/auth_tests/test_management.py",
      "line": 749
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_existing_username_non_interactive",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_existing_username_non_interactive",
      "file": "tests/auth_tests/test_management.py",
      "line": 765
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_existing_username_provided_via_option_and_interactive",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_existing_username_provided_via_option_and_interactive",
      "file": "tests/auth_tests/test_management.py",
      "line": 778
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_existing_username_provided_via_option_and_interactive.return_passwords",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_existing_username_provided_via_option_and_interactive.return_passwords",
      "file": "tests/auth_tests/test_management.py",
      "line": 784
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_existing_username_provided_via_option_and_interactive.test",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_existing_username_provided_via_option_and_interactive.test",
      "file": "tests/auth_tests/test_management.py",
      "line": 792
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validation_mismatched_passwords",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_validation_mismatched_passwords",
      "file": "tests/auth_tests/test_management.py",
      "line": 806
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validation_mismatched_passwords.mismatched_passwords_then_matched",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_validation_mismatched_passwords.mismatched_passwords_then_matched",
      "file": "tests/auth_tests/test_management.py",
      "line": 816
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validation_mismatched_passwords.test",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_validation_mismatched_passwords.test",
      "file": "tests/auth_tests/test_management.py",
      "line": 824
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validation_blank_password_entered",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_validation_blank_password_entered",
      "file": "tests/auth_tests/test_management.py",
      "line": 840
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validation_blank_password_entered.blank_passwords_then_valid",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_validation_blank_password_entered.blank_passwords_then_valid",
      "file": "tests/auth_tests/test_management.py",
      "line": 850
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validation_blank_password_entered.test",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_validation_blank_password_entered.test",
      "file": "tests/auth_tests/test_management.py",
      "line": 858
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_usermodel_without_password",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_usermodel_without_password",
      "file": "tests/auth_tests/test_management.py",
      "line": 875
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_usermodel_without_password.test",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_usermodel_without_password.test",
      "file": "tests/auth_tests/test_management.py",
      "line": 878
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_usermodel_without_password_interactive",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_usermodel_without_password_interactive",
      "file": "tests/auth_tests/test_management.py",
      "line": 892
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_usermodel_without_password_interactive.test",
      "type": "function",
      "name": "CreatesuperuserManagementCommandTestCase.test_usermodel_without_password_interactive.test",
      "file": "tests/auth_tests/test_management.py",
      "line": 896
    },
    {
      "id": "tests/auth_tests/test_management.py:MultiDBCreatesuperuserTestCase",
      "type": "class",
      "name": "MultiDBCreatesuperuserTestCase",
      "file": "tests/auth_tests/test_management.py",
      "line": 909
    },
    {
      "id": "tests/auth_tests/test_management.py:MultiDBCreatesuperuserTestCase.test_createsuperuser_command_with_database_option",
      "type": "function",
      "name": "MultiDBCreatesuperuserTestCase.test_createsuperuser_command_with_database_option",
      "file": "tests/auth_tests/test_management.py",
      "line": 912
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatePermissionsTests",
      "type": "class",
      "name": "CreatePermissionsTests",
      "file": "tests/auth_tests/test_management.py",
      "line": 931
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatePermissionsTests.setUp",
      "type": "function",
      "name": "CreatePermissionsTests.setUp",
      "file": "tests/auth_tests/test_management.py",
      "line": 933
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatePermissionsTests.tearDown",
      "type": "function",
      "name": "CreatePermissionsTests.tearDown",
      "file": "tests/auth_tests/test_management.py",
      "line": 938
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatePermissionsTests.test_default_permissions",
      "type": "function",
      "name": "CreatePermissionsTests.test_default_permissions",
      "file": "tests/auth_tests/test_management.py",
      "line": 943
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatePermissionsTests.test_unavailable_models",
      "type": "function",
      "name": "CreatePermissionsTests.test_unavailable_models",
      "file": "tests/auth_tests/test_management.py",
      "line": 964
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatePermissionsTests.test_create_permissions_checks_contenttypes_created",
      "type": "function",
      "name": "CreatePermissionsTests.test_create_permissions_checks_contenttypes_created",
      "file": "tests/auth_tests/test_management.py",
      "line": 978
    },
    {
      "id": "tests/auth_tests/test_management.py:CreatePermissionsTests.test_permission_with_proxy_content_type_created",
      "type": "function",
      "name": "CreatePermissionsTests.test_permission_with_proxy_content_type_created",
      "file": "tests/auth_tests/test_management.py",
      "line": 990
    },
    {
      "id": "tests/auth_tests/test_migrations.py",
      "type": "file",
      "name": "test_migrations.py",
      "file": "tests/auth_tests/test_migrations.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/test_migrations.py:ProxyModelWithDifferentAppLabelTests",
      "type": "class",
      "name": "ProxyModelWithDifferentAppLabelTests",
      "file": "tests/auth_tests/test_migrations.py",
      "line": 13
    },
    {
      "id": "tests/auth_tests/test_migrations.py:ProxyModelWithDifferentAppLabelTests.setUp",
      "type": "function",
      "name": "ProxyModelWithDifferentAppLabelTests.setUp",
      "file": "tests/auth_tests/test_migrations.py",
      "line": 20
    },
    {
      "id": "tests/auth_tests/test_migrations.py:ProxyModelWithDifferentAppLabelTests.test_proxy_model_permissions_contenttype",
      "type": "function",
      "name": "ProxyModelWithDifferentAppLabelTests.test_proxy_model_permissions_contenttype",
      "file": "tests/auth_tests/test_migrations.py",
      "line": 39
    },
    {
      "id": "tests/auth_tests/test_migrations.py:ProxyModelWithDifferentAppLabelTests.test_user_has_now_proxy_model_permissions",
      "type": "function",
      "name": "ProxyModelWithDifferentAppLabelTests.test_user_has_now_proxy_model_permissions",
      "file": "tests/auth_tests/test_migrations.py",
      "line": 49
    },
    {
      "id": "tests/auth_tests/test_migrations.py:ProxyModelWithDifferentAppLabelTests.test_migrate_backwards",
      "type": "function",
      "name": "ProxyModelWithDifferentAppLabelTests.test_migrate_backwards",
      "file": "tests/auth_tests/test_migrations.py",
      "line": 63
    },
    {
      "id": "tests/auth_tests/test_migrations.py:ProxyModelWithDifferentAppLabelTests.test_user_keeps_same_permissions_after_migrating_backward",
      "type": "function",
      "name": "ProxyModelWithDifferentAppLabelTests.test_user_keeps_same_permissions_after_migrating_backward",
      "file": "tests/auth_tests/test_migrations.py",
      "line": 71
    },
    {
      "id": "tests/auth_tests/test_migrations.py:ProxyModelWithSameAppLabelTests",
      "type": "class",
      "name": "ProxyModelWithSameAppLabelTests",
      "file": "tests/auth_tests/test_migrations.py",
      "line": 87
    },
    {
      "id": "tests/auth_tests/test_migrations.py:ProxyModelWithSameAppLabelTests.setUp",
      "type": "function",
      "name": "ProxyModelWithSameAppLabelTests.setUp",
      "file": "tests/auth_tests/test_migrations.py",
      "line": 94
    },
    {
      "id": "tests/auth_tests/test_migrations.py:ProxyModelWithSameAppLabelTests.test_proxy_model_permissions_contenttype",
      "type": "function",
      "name": "ProxyModelWithSameAppLabelTests.test_proxy_model_permissions_contenttype",
      "file": "tests/auth_tests/test_migrations.py",
      "line": 113
    },
    {
      "id": "tests/auth_tests/test_migrations.py:ProxyModelWithSameAppLabelTests.test_user_still_has_proxy_model_permissions",
      "type": "function",
      "name": "ProxyModelWithSameAppLabelTests.test_user_still_has_proxy_model_permissions",
      "file": "tests/auth_tests/test_migrations.py",
      "line": 123
    },
    {
      "id": "tests/auth_tests/test_migrations.py:ProxyModelWithSameAppLabelTests.test_migrate_backwards",
      "type": "function",
      "name": "ProxyModelWithSameAppLabelTests.test_migrate_backwards",
      "file": "tests/auth_tests/test_migrations.py",
      "line": 135
    },
    {
      "id": "tests/auth_tests/test_migrations.py:ProxyModelWithSameAppLabelTests.test_user_keeps_same_permissions_after_migrating_backward",
      "type": "function",
      "name": "ProxyModelWithSameAppLabelTests.test_user_keeps_same_permissions_after_migrating_backward",
      "file": "tests/auth_tests/test_migrations.py",
      "line": 143
    },
    {
      "id": "tests/auth_tests/urls_custom_user_admin.py",
      "type": "file",
      "name": "urls_custom_user_admin.py",
      "file": "tests/auth_tests/urls_custom_user_admin.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/urls_custom_user_admin.py:CustomUserAdmin",
      "type": "class",
      "name": "CustomUserAdmin",
      "file": "tests/auth_tests/urls_custom_user_admin.py",
      "line": 9
    },
    {
      "id": "tests/auth_tests/urls_custom_user_admin.py:CustomUserAdmin.log_change",
      "type": "function",
      "name": "CustomUserAdmin.log_change",
      "file": "tests/auth_tests/urls_custom_user_admin.py",
      "line": 10
    },
    {
      "id": "tests/auth_tests/test_views.py",
      "type": "file",
      "name": "test_views.py",
      "file": "tests/auth_tests/test_views.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/test_views.py:AuthViewsTestCase",
      "type": "class",
      "name": "AuthViewsTestCase",
      "file": "tests/auth_tests/test_views.py",
      "line": 47
    },
    {
      "id": "tests/auth_tests/test_views.py:AuthViewsTestCase.setUpTestData",
      "type": "function",
      "name": "AuthViewsTestCase.setUpTestData",
      "file": "tests/auth_tests/test_views.py",
      "line": 53
    },
    {
      "id": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "function",
      "name": "AuthViewsTestCase.login",
      "file": "tests/auth_tests/test_views.py",
      "line": 57
    },
    {
      "id": "tests/auth_tests/test_views.py:AuthViewsTestCase.logout",
      "type": "function",
      "name": "AuthViewsTestCase.logout",
      "file": "tests/auth_tests/test_views.py",
      "line": 65
    },
    {
      "id": "tests/auth_tests/test_views.py:AuthViewsTestCase.assertFormError",
      "type": "function",
      "name": "AuthViewsTestCase.assertFormError",
      "file": "tests/auth_tests/test_views.py",
      "line": 70
    },
    {
      "id": "tests/auth_tests/test_views.py:AuthViewNamedURLTests",
      "type": "class",
      "name": "AuthViewNamedURLTests",
      "file": "tests/auth_tests/test_views.py",
      "line": 77
    },
    {
      "id": "tests/auth_tests/test_views.py:AuthViewNamedURLTests.test_named_urls",
      "type": "function",
      "name": "AuthViewNamedURLTests.test_named_urls",
      "file": "tests/auth_tests/test_views.py",
      "line": 79
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest",
      "type": "class",
      "name": "PasswordResetTest",
      "file": "tests/auth_tests/test_views.py",
      "line": 102
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest.setUp",
      "type": "function",
      "name": "PasswordResetTest.setUp",
      "file": "tests/auth_tests/test_views.py",
      "line": 104
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest.test_email_not_found",
      "type": "function",
      "name": "PasswordResetTest.test_email_not_found",
      "file": "tests/auth_tests/test_views.py",
      "line": 107
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest.test_email_found",
      "type": "function",
      "name": "PasswordResetTest.test_email_found",
      "file": "tests/auth_tests/test_views.py",
      "line": 116
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest.test_extra_email_context",
      "type": "function",
      "name": "PasswordResetTest.test_extra_email_context",
      "file": "tests/auth_tests/test_views.py",
      "line": 127
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest.test_html_mail_template",
      "type": "function",
      "name": "PasswordResetTest.test_html_mail_template",
      "file": "tests/auth_tests/test_views.py",
      "line": 139
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest.test_email_found_custom_from",
      "type": "function",
      "name": "PasswordResetTest.test_email_found_custom_from",
      "file": "tests/auth_tests/test_views.py",
      "line": 155
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest.test_poisoned_http_host",
      "type": "function",
      "name": "PasswordResetTest.test_poisoned_http_host",
      "file": "tests/auth_tests/test_views.py",
      "line": 164
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest.test_poisoned_http_host_admin_site",
      "type": "function",
      "name": "PasswordResetTest.test_poisoned_http_host_admin_site",
      "file": "tests/auth_tests/test_views.py",
      "line": 184
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest._test_confirm_start",
      "type": "function",
      "name": "PasswordResetTest._test_confirm_start",
      "file": "tests/auth_tests/test_views.py",
      "line": 195
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest._read_signup_email",
      "type": "function",
      "name": "PasswordResetTest._read_signup_email",
      "file": "tests/auth_tests/test_views.py",
      "line": 201
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_valid",
      "type": "function",
      "name": "PasswordResetTest.test_confirm_valid",
      "file": "tests/auth_tests/test_views.py",
      "line": 206
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_invalid",
      "type": "function",
      "name": "PasswordResetTest.test_confirm_invalid",
      "file": "tests/auth_tests/test_views.py",
      "line": 212
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_invalid_user",
      "type": "function",
      "name": "PasswordResetTest.test_confirm_invalid_user",
      "file": "tests/auth_tests/test_views.py",
      "line": 221
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_overflow_user",
      "type": "function",
      "name": "PasswordResetTest.test_confirm_overflow_user",
      "file": "tests/auth_tests/test_views.py",
      "line": 226
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_invalid_post",
      "type": "function",
      "name": "PasswordResetTest.test_confirm_invalid_post",
      "file": "tests/auth_tests/test_views.py",
      "line": 231
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_invalid_hash",
      "type": "function",
      "name": "PasswordResetTest.test_confirm_invalid_hash",
      "file": "tests/auth_tests/test_views.py",
      "line": 244
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_complete",
      "type": "function",
      "name": "PasswordResetTest.test_confirm_complete",
      "file": "tests/auth_tests/test_views.py",
      "line": 261
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_different_passwords",
      "type": "function",
      "name": "PasswordResetTest.test_confirm_different_passwords",
      "file": "tests/auth_tests/test_views.py",
      "line": 274
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest.test_reset_redirect_default",
      "type": "function",
      "name": "PasswordResetTest.test_reset_redirect_default",
      "file": "tests/auth_tests/test_views.py",
      "line": 279
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest.test_reset_custom_redirect",
      "type": "function",
      "name": "PasswordResetTest.test_reset_custom_redirect",
      "file": "tests/auth_tests/test_views.py",
      "line": 283
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest.test_reset_custom_redirect_named",
      "type": "function",
      "name": "PasswordResetTest.test_reset_custom_redirect_named",
      "file": "tests/auth_tests/test_views.py",
      "line": 287
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_redirect_default",
      "type": "function",
      "name": "PasswordResetTest.test_confirm_redirect_default",
      "file": "tests/auth_tests/test_views.py",
      "line": 291
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_redirect_custom",
      "type": "function",
      "name": "PasswordResetTest.test_confirm_redirect_custom",
      "file": "tests/auth_tests/test_views.py",
      "line": 296
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_redirect_custom_named",
      "type": "function",
      "name": "PasswordResetTest.test_confirm_redirect_custom_named",
      "file": "tests/auth_tests/test_views.py",
      "line": 302
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_login_post_reset",
      "type": "function",
      "name": "PasswordResetTest.test_confirm_login_post_reset",
      "file": "tests/auth_tests/test_views.py",
      "line": 308
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_login_post_reset_custom_backend",
      "type": "function",
      "name": "PasswordResetTest.test_confirm_login_post_reset_custom_backend",
      "file": "tests/auth_tests/test_views.py",
      "line": 321
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_login_post_reset_already_logged_in",
      "type": "function",
      "name": "PasswordResetTest.test_confirm_login_post_reset_already_logged_in",
      "file": "tests/auth_tests/test_views.py",
      "line": 331
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_display_user_from_form",
      "type": "function",
      "name": "PasswordResetTest.test_confirm_display_user_from_form",
      "file": "tests/auth_tests/test_views.py",
      "line": 339
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_link_redirects_to_set_password_page",
      "type": "function",
      "name": "PasswordResetTest.test_confirm_link_redirects_to_set_password_page",
      "file": "tests/auth_tests/test_views.py",
      "line": 353
    },
    {
      "id": "tests/auth_tests/test_views.py:PasswordResetTest.test_invalid_link_if_going_directly_to_the_final_reset_password_url",
      "type": "function",
      "name": "PasswordResetTest.test_invalid_link_if_going_directly_to_the_final_reset_password_url",
      "file": "tests/auth_tests/test_views.py",
      "line": 364
    },
    {
      "id": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest",
      "type": "class",
      "name": "CustomUserPasswordResetTest",
      "file": "tests/auth_tests/test_views.py",
      "line": 372
    },
    {
      "id": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest.setUpTestData",
      "type": "function",
      "name": "CustomUserPasswordResetTest.setUpTestData",
      "file": "tests/auth_tests/test_views.py",
      "line": 376
    },
    {
      "id": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest.setUp",
      "type": "function",
      "name": "CustomUserPasswordResetTest.setUp",
      "file": "tests/auth_tests/test_views.py",
      "line": 384
    },
    {
      "id": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest._test_confirm_start",
      "type": "function",
      "name": "CustomUserPasswordResetTest._test_confirm_start",
      "file": "tests/auth_tests/test_views.py",
      "line": 387
    },
    {
      "id": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest._read_signup_email",
      "type": "function",
      "name": "CustomUserPasswordResetTest._read_signup_email",
      "file": "tests/auth_tests/test_views.py",
      "line": 394
    },
    {
      "id": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest.test_confirm_valid_custom_user",
      "type": "function",
      "name": "CustomUserPasswordResetTest.test_confirm_valid_custom_user",
      "file": "tests/auth_tests/test_views.py",
      "line": 399
    },
    {
      "id": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest",
      "type": "class",
      "name": "UUIDUserPasswordResetTest",
      "file": "tests/auth_tests/test_views.py",
      "line": 413
    },
    {
      "id": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest._test_confirm_start",
      "type": "function",
      "name": "UUIDUserPasswordResetTest._test_confirm_start",
      "file": "tests/auth_tests/test_views.py",
      "line": 415
    },
    {
      "id": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest.test_confirm_invalid_uuid",
      "type": "function",
      "name": "UUIDUserPasswordResetTest.test_confirm_invalid_uuid",
      "file": "tests/auth_tests/test_views.py",
      "line": 424
    },
    {
      "id": "tests/auth_tests/test_views.py:ChangePasswordTest",
      "type": "class",
      "name": "ChangePasswordTest",
      "file": "tests/auth_tests/test_views.py",
      "line": 433
    },
    {
      "id": "tests/auth_tests/test_views.py:ChangePasswordTest.fail_login",
      "type": "function",
      "name": "ChangePasswordTest.fail_login",
      "file": "tests/auth_tests/test_views.py",
      "line": 435
    },
    {
      "id": "tests/auth_tests/test_views.py:ChangePasswordTest.logout",
      "type": "function",
      "name": "ChangePasswordTest.logout",
      "file": "tests/auth_tests/test_views.py",
      "line": 444
    },
    {
      "id": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_fails_with_invalid_old_password",
      "type": "function",
      "name": "ChangePasswordTest.test_password_change_fails_with_invalid_old_password",
      "file": "tests/auth_tests/test_views.py",
      "line": 447
    },
    {
      "id": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_fails_with_mismatched_passwords",
      "type": "function",
      "name": "ChangePasswordTest.test_password_change_fails_with_mismatched_passwords",
      "file": "tests/auth_tests/test_views.py",
      "line": 456
    },
    {
      "id": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_succeeds",
      "type": "function",
      "name": "ChangePasswordTest.test_password_change_succeeds",
      "file": "tests/auth_tests/test_views.py",
      "line": 465
    },
    {
      "id": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_done_succeeds",
      "type": "function",
      "name": "ChangePasswordTest.test_password_change_done_succeeds",
      "file": "tests/auth_tests/test_views.py",
      "line": 475
    },
    {
      "id": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_done_fails",
      "type": "function",
      "name": "ChangePasswordTest.test_password_change_done_fails",
      "file": "tests/auth_tests/test_views.py",
      "line": 485
    },
    {
      "id": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_redirect_default",
      "type": "function",
      "name": "ChangePasswordTest.test_password_change_redirect_default",
      "file": "tests/auth_tests/test_views.py",
      "line": 489
    },
    {
      "id": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_redirect_custom",
      "type": "function",
      "name": "ChangePasswordTest.test_password_change_redirect_custom",
      "file": "tests/auth_tests/test_views.py",
      "line": 498
    },
    {
      "id": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_redirect_custom_named",
      "type": "function",
      "name": "ChangePasswordTest.test_password_change_redirect_custom_named",
      "file": "tests/auth_tests/test_views.py",
      "line": 507
    },
    {
      "id": "tests/auth_tests/test_views.py:SessionAuthenticationTests",
      "type": "class",
      "name": "SessionAuthenticationTests",
      "file": "tests/auth_tests/test_views.py",
      "line": 517
    },
    {
      "id": "tests/auth_tests/test_views.py:SessionAuthenticationTests.test_user_password_change_updates_session",
      "type": "function",
      "name": "SessionAuthenticationTests.test_user_password_change_updates_session",
      "file": "tests/auth_tests/test_views.py",
      "line": 518
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginTest",
      "type": "class",
      "name": "LoginTest",
      "file": "tests/auth_tests/test_views.py",
      "line": 536
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginTest.test_current_site_in_context_after_login",
      "type": "function",
      "name": "LoginTest.test_current_site_in_context_after_login",
      "file": "tests/auth_tests/test_views.py",
      "line": 538
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginTest.test_security_check",
      "type": "function",
      "name": "LoginTest.test_security_check",
      "file": "tests/auth_tests/test_views.py",
      "line": 550
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginTest.test_security_check_https",
      "type": "function",
      "name": "LoginTest.test_security_check_https",
      "file": "tests/auth_tests/test_views.py",
      "line": 602
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginTest.test_login_form_contains_request",
      "type": "function",
      "name": "LoginTest.test_login_form_contains_request",
      "file": "tests/auth_tests/test_views.py",
      "line": 619
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginTest.test_login_csrf_rotate",
      "type": "function",
      "name": "LoginTest.test_login_csrf_rotate",
      "file": "tests/auth_tests/test_views.py",
      "line": 629
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginTest.test_session_key_flushed_on_login",
      "type": "function",
      "name": "LoginTest.test_session_key_flushed_on_login",
      "file": "tests/auth_tests/test_views.py",
      "line": 663
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginTest.test_session_key_flushed_on_login_after_password_change",
      "type": "function",
      "name": "LoginTest.test_session_key_flushed_on_login_after_password_change",
      "file": "tests/auth_tests/test_views.py",
      "line": 675
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginTest.test_login_session_without_hash_session_key",
      "type": "function",
      "name": "LoginTest.test_login_session_without_hash_session_key",
      "file": "tests/auth_tests/test_views.py",
      "line": 693
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginURLSettings",
      "type": "class",
      "name": "LoginURLSettings",
      "file": "tests/auth_tests/test_views.py",
      "line": 710
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginURLSettings.assertLoginURLEquals",
      "type": "function",
      "name": "LoginURLSettings.assertLoginURLEquals",
      "file": "tests/auth_tests/test_views.py",
      "line": 712
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginURLSettings.test_standard_login_url",
      "type": "function",
      "name": "LoginURLSettings.test_standard_login_url",
      "file": "tests/auth_tests/test_views.py",
      "line": 717
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginURLSettings.test_named_login_url",
      "type": "function",
      "name": "LoginURLSettings.test_named_login_url",
      "file": "tests/auth_tests/test_views.py",
      "line": 721
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginURLSettings.test_remote_login_url",
      "type": "function",
      "name": "LoginURLSettings.test_remote_login_url",
      "file": "tests/auth_tests/test_views.py",
      "line": 725
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginURLSettings.test_https_login_url",
      "type": "function",
      "name": "LoginURLSettings.test_https_login_url",
      "file": "tests/auth_tests/test_views.py",
      "line": 731
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginURLSettings.test_login_url_with_querystring",
      "type": "function",
      "name": "LoginURLSettings.test_login_url_with_querystring",
      "file": "tests/auth_tests/test_views.py",
      "line": 737
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginURLSettings.test_remote_login_url_with_next_querystring",
      "type": "function",
      "name": "LoginURLSettings.test_remote_login_url_with_next_querystring",
      "file": "tests/auth_tests/test_views.py",
      "line": 741
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginURLSettings.test_lazy_login_url",
      "type": "function",
      "name": "LoginURLSettings.test_lazy_login_url",
      "file": "tests/auth_tests/test_views.py",
      "line": 747
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginRedirectUrlTest",
      "type": "class",
      "name": "LoginRedirectUrlTest",
      "file": "tests/auth_tests/test_views.py",
      "line": 751
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginRedirectUrlTest.assertLoginRedirectURLEqual",
      "type": "function",
      "name": "LoginRedirectUrlTest.assertLoginRedirectURLEqual",
      "file": "tests/auth_tests/test_views.py",
      "line": 753
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginRedirectUrlTest.test_default",
      "type": "function",
      "name": "LoginRedirectUrlTest.test_default",
      "file": "tests/auth_tests/test_views.py",
      "line": 757
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginRedirectUrlTest.test_custom",
      "type": "function",
      "name": "LoginRedirectUrlTest.test_custom",
      "file": "tests/auth_tests/test_views.py",
      "line": 761
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginRedirectUrlTest.test_named",
      "type": "function",
      "name": "LoginRedirectUrlTest.test_named",
      "file": "tests/auth_tests/test_views.py",
      "line": 765
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginRedirectUrlTest.test_remote",
      "type": "function",
      "name": "LoginRedirectUrlTest.test_remote",
      "file": "tests/auth_tests/test_views.py",
      "line": 769
    },
    {
      "id": "tests/auth_tests/test_views.py:RedirectToLoginTests",
      "type": "class",
      "name": "RedirectToLoginTests",
      "file": "tests/auth_tests/test_views.py",
      "line": 773
    },
    {
      "id": "tests/auth_tests/test_views.py:RedirectToLoginTests.test_redirect_to_login_with_lazy",
      "type": "function",
      "name": "RedirectToLoginTests.test_redirect_to_login_with_lazy",
      "file": "tests/auth_tests/test_views.py",
      "line": 776
    },
    {
      "id": "tests/auth_tests/test_views.py:RedirectToLoginTests.test_redirect_to_login_with_lazy_and_unicode",
      "type": "function",
      "name": "RedirectToLoginTests.test_redirect_to_login_with_lazy_and_unicode",
      "file": "tests/auth_tests/test_views.py",
      "line": 782
    },
    {
      "id": "tests/auth_tests/test_views.py:LogoutThenLoginTests",
      "type": "class",
      "name": "LogoutThenLoginTests",
      "file": "tests/auth_tests/test_views.py",
      "line": 788
    },
    {
      "id": "tests/auth_tests/test_views.py:LogoutThenLoginTests.confirm_logged_out",
      "type": "function",
      "name": "LogoutThenLoginTests.confirm_logged_out",
      "file": "tests/auth_tests/test_views.py",
      "line": 791
    },
    {
      "id": "tests/auth_tests/test_views.py:LogoutThenLoginTests.test_default_logout_then_login",
      "type": "function",
      "name": "LogoutThenLoginTests.test_default_logout_then_login",
      "file": "tests/auth_tests/test_views.py",
      "line": 795
    },
    {
      "id": "tests/auth_tests/test_views.py:LogoutThenLoginTests.test_logout_then_login_with_custom_login",
      "type": "function",
      "name": "LogoutThenLoginTests.test_logout_then_login_with_custom_login",
      "file": "tests/auth_tests/test_views.py",
      "line": 804
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser",
      "type": "class",
      "name": "LoginRedirectAuthenticatedUser",
      "file": "tests/auth_tests/test_views.py",
      "line": 814
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_default",
      "type": "function",
      "name": "LoginRedirectAuthenticatedUser.test_default",
      "file": "tests/auth_tests/test_views.py",
      "line": 818
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_guest",
      "type": "function",
      "name": "LoginRedirectAuthenticatedUser.test_guest",
      "file": "tests/auth_tests/test_views.py",
      "line": 825
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_redirect",
      "type": "function",
      "name": "LoginRedirectAuthenticatedUser.test_redirect",
      "file": "tests/auth_tests/test_views.py",
      "line": 830
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_redirect_url",
      "type": "function",
      "name": "LoginRedirectAuthenticatedUser.test_redirect_url",
      "file": "tests/auth_tests/test_views.py",
      "line": 837
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_redirect_param",
      "type": "function",
      "name": "LoginRedirectAuthenticatedUser.test_redirect_param",
      "file": "tests/auth_tests/test_views.py",
      "line": 843
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_redirect_loop",
      "type": "function",
      "name": "LoginRedirectAuthenticatedUser.test_redirect_loop",
      "file": "tests/auth_tests/test_views.py",
      "line": 850
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_permission_required_not_logged_in",
      "type": "function",
      "name": "LoginRedirectAuthenticatedUser.test_permission_required_not_logged_in",
      "file": "tests/auth_tests/test_views.py",
      "line": 868
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_permission_required_logged_in",
      "type": "function",
      "name": "LoginRedirectAuthenticatedUser.test_permission_required_logged_in",
      "file": "tests/auth_tests/test_views.py",
      "line": 881
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginSuccessURLAllowedHostsTest",
      "type": "class",
      "name": "LoginSuccessURLAllowedHostsTest",
      "file": "tests/auth_tests/test_views.py",
      "line": 896
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginSuccessURLAllowedHostsTest.test_success_url_allowed_hosts_same_host",
      "type": "function",
      "name": "LoginSuccessURLAllowedHostsTest.test_success_url_allowed_hosts_same_host",
      "file": "tests/auth_tests/test_views.py",
      "line": 897
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginSuccessURLAllowedHostsTest.test_success_url_allowed_hosts_safe_host",
      "type": "function",
      "name": "LoginSuccessURLAllowedHostsTest.test_success_url_allowed_hosts_safe_host",
      "file": "tests/auth_tests/test_views.py",
      "line": 906
    },
    {
      "id": "tests/auth_tests/test_views.py:LoginSuccessURLAllowedHostsTest.test_success_url_allowed_hosts_unsafe_host",
      "type": "function",
      "name": "LoginSuccessURLAllowedHostsTest.test_success_url_allowed_hosts_unsafe_host",
      "file": "tests/auth_tests/test_views.py",
      "line": 915
    },
    {
      "id": "tests/auth_tests/test_views.py:LogoutTest",
      "type": "class",
      "name": "LogoutTest",
      "file": "tests/auth_tests/test_views.py",
      "line": 925
    },
    {
      "id": "tests/auth_tests/test_views.py:LogoutTest.confirm_logged_out",
      "type": "function",
      "name": "LogoutTest.confirm_logged_out",
      "file": "tests/auth_tests/test_views.py",
      "line": 927
    },
    {
      "id": "tests/auth_tests/test_views.py:LogoutTest.test_logout_default",
      "type": "function",
      "name": "LogoutTest.test_logout_default",
      "file": "tests/auth_tests/test_views.py",
      "line": 930
    },
    {
      "id": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_post",
      "type": "function",
      "name": "LogoutTest.test_logout_with_post",
      "file": "tests/auth_tests/test_views.py",
      "line": 937
    },
    {
      "id": "tests/auth_tests/test_views.py:LogoutTest.test_14377",
      "type": "function",
      "name": "LogoutTest.test_14377",
      "file": "tests/auth_tests/test_views.py",
      "line": 943
    },
    {
      "id": "tests/auth_tests/test_views.py:LogoutTest.test_logout_doesnt_cache",
      "type": "function",
      "name": "LogoutTest.test_logout_doesnt_cache",
      "file": "tests/auth_tests/test_views.py",
      "line": 949
    },
    {
      "id": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_overridden_redirect_url",
      "type": "function",
      "name": "LogoutTest.test_logout_with_overridden_redirect_url",
      "file": "tests/auth_tests/test_views.py",
      "line": 957
    },
    {
      "id": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_next_page_specified",
      "type": "function",
      "name": "LogoutTest.test_logout_with_next_page_specified",
      "file": "tests/auth_tests/test_views.py",
      "line": 968
    },
    {
      "id": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_redirect_argument",
      "type": "function",
      "name": "LogoutTest.test_logout_with_redirect_argument",
      "file": "tests/auth_tests/test_views.py",
      "line": 975
    },
    {
      "id": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_custom_redirect_argument",
      "type": "function",
      "name": "LogoutTest.test_logout_with_custom_redirect_argument",
      "file": "tests/auth_tests/test_views.py",
      "line": 982
    },
    {
      "id": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_named_redirect",
      "type": "function",
      "name": "LogoutTest.test_logout_with_named_redirect",
      "file": "tests/auth_tests/test_views.py",
      "line": 989
    },
    {
      "id": "tests/auth_tests/test_views.py:LogoutTest.test_success_url_allowed_hosts_same_host",
      "type": "function",
      "name": "LogoutTest.test_success_url_allowed_hosts_same_host",
      "file": "tests/auth_tests/test_views.py",
      "line": 996
    },
    {
      "id": "tests/auth_tests/test_views.py:LogoutTest.test_success_url_allowed_hosts_safe_host",
      "type": "function",
      "name": "LogoutTest.test_success_url_allowed_hosts_safe_host",
      "file": "tests/auth_tests/test_views.py",
      "line": 1002
    },
    {
      "id": "tests/auth_tests/test_views.py:LogoutTest.test_success_url_allowed_hosts_unsafe_host",
      "type": "function",
      "name": "LogoutTest.test_success_url_allowed_hosts_unsafe_host",
      "file": "tests/auth_tests/test_views.py",
      "line": 1008
    },
    {
      "id": "tests/auth_tests/test_views.py:LogoutTest.test_security_check",
      "type": "function",
      "name": "LogoutTest.test_security_check",
      "file": "tests/auth_tests/test_views.py",
      "line": 1014
    },
    {
      "id": "tests/auth_tests/test_views.py:LogoutTest.test_security_check_https",
      "type": "function",
      "name": "LogoutTest.test_security_check_https",
      "file": "tests/auth_tests/test_views.py",
      "line": 1064
    },
    {
      "id": "tests/auth_tests/test_views.py:LogoutTest.test_logout_preserve_language",
      "type": "function",
      "name": "LogoutTest.test_logout_preserve_language",
      "file": "tests/auth_tests/test_views.py",
      "line": 1077
    },
    {
      "id": "tests/auth_tests/test_views.py:LogoutTest.test_logout_redirect_url_setting",
      "type": "function",
      "name": "LogoutTest.test_logout_redirect_url_setting",
      "file": "tests/auth_tests/test_views.py",
      "line": 1090
    },
    {
      "id": "tests/auth_tests/test_views.py:LogoutTest.test_logout_redirect_url_named_setting",
      "type": "function",
      "name": "LogoutTest.test_logout_redirect_url_named_setting",
      "file": "tests/auth_tests/test_views.py",
      "line": 1096
    },
    {
      "id": "tests/auth_tests/test_views.py:get_perm",
      "type": "function",
      "name": "get_perm",
      "file": "tests/auth_tests/test_views.py",
      "line": 1102
    },
    {
      "id": "tests/auth_tests/test_views.py:ChangelistTests",
      "type": "class",
      "name": "ChangelistTests",
      "file": "tests/auth_tests/test_views.py",
      "line": 1110
    },
    {
      "id": "tests/auth_tests/test_views.py:ChangelistTests.setUpTestData",
      "type": "function",
      "name": "ChangelistTests.setUpTestData",
      "file": "tests/auth_tests/test_views.py",
      "line": 1113
    },
    {
      "id": "tests/auth_tests/test_views.py:ChangelistTests.setUp",
      "type": "function",
      "name": "ChangelistTests.setUp",
      "file": "tests/auth_tests/test_views.py",
      "line": 1118
    },
    {
      "id": "tests/auth_tests/test_views.py:ChangelistTests.get_user_data",
      "type": "function",
      "name": "ChangelistTests.get_user_data",
      "file": "tests/auth_tests/test_views.py",
      "line": 1123
    },
    {
      "id": "tests/auth_tests/test_views.py:ChangelistTests.test_changelist_disallows_password_lookups",
      "type": "function",
      "name": "ChangelistTests.test_changelist_disallows_password_lookups",
      "file": "tests/auth_tests/test_views.py",
      "line": 1145
    },
    {
      "id": "tests/auth_tests/test_views.py:ChangelistTests.test_user_change_email",
      "type": "function",
      "name": "ChangelistTests.test_user_change_email",
      "file": "tests/auth_tests/test_views.py",
      "line": 1151
    },
    {
      "id": "tests/auth_tests/test_views.py:ChangelistTests.test_user_not_change",
      "type": "function",
      "name": "ChangelistTests.test_user_not_change",
      "file": "tests/auth_tests/test_views.py",
      "line": 1162
    },
    {
      "id": "tests/auth_tests/test_views.py:ChangelistTests.test_user_change_password",
      "type": "function",
      "name": "ChangelistTests.test_user_change_password",
      "file": "tests/auth_tests/test_views.py",
      "line": 1171
    },
    {
      "id": "tests/auth_tests/test_views.py:ChangelistTests.test_user_change_different_user_password",
      "type": "function",
      "name": "ChangelistTests.test_user_change_different_user_password",
      "file": "tests/auth_tests/test_views.py",
      "line": 1199
    },
    {
      "id": "tests/auth_tests/test_views.py:ChangelistTests.test_password_change_bad_url",
      "type": "function",
      "name": "ChangelistTests.test_password_change_bad_url",
      "file": "tests/auth_tests/test_views.py",
      "line": 1214
    },
    {
      "id": "tests/auth_tests/test_views.py:ChangelistTests.test_user_change_password_passes_user_to_has_change_permission",
      "type": "function",
      "name": "ChangelistTests.test_user_change_password_passes_user_to_has_change_permission",
      "file": "tests/auth_tests/test_views.py",
      "line": 1219
    },
    {
      "id": "tests/auth_tests/test_views.py:ChangelistTests.test_view_user_password_is_readonly",
      "type": "function",
      "name": "ChangelistTests.test_view_user_password_is_readonly",
      "file": "tests/auth_tests/test_views.py",
      "line": 1225
    },
    {
      "id": "tests/auth_tests/test_views.py:UUIDUserTests",
      "type": "class",
      "name": "UUIDUserTests",
      "file": "tests/auth_tests/test_views.py",
      "line": 1258
    },
    {
      "id": "tests/auth_tests/test_views.py:UUIDUserTests.test_admin_password_change",
      "type": "function",
      "name": "UUIDUserTests.test_admin_password_change",
      "file": "tests/auth_tests/test_views.py",
      "line": 1260
    },
    {
      "id": "tests/auth_tests/test_hashers.py",
      "type": "file",
      "name": "test_hashers.py",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/test_hashers.py:PBKDF2SingleIterationHasher",
      "type": "class",
      "name": "PBKDF2SingleIterationHasher",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 33
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass",
      "type": "class",
      "name": "TestUtilsHashPass",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 38
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_simple",
      "type": "function",
      "name": "TestUtilsHashPass.test_simple",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 40
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_pbkdf2",
      "type": "function",
      "name": "TestUtilsHashPass.test_pbkdf2",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 53
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_sha1",
      "type": "function",
      "name": "TestUtilsHashPass.test_sha1",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 68
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_md5",
      "type": "function",
      "name": "TestUtilsHashPass.test_md5",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 83
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_unsalted_md5",
      "type": "function",
      "name": "TestUtilsHashPass.test_unsalted_md5",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 98
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_unsalted_sha1",
      "type": "function",
      "name": "TestUtilsHashPass.test_unsalted_sha1",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 117
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_crypt",
      "type": "function",
      "name": "TestUtilsHashPass.test_crypt",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 136
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_bcrypt_sha256",
      "type": "function",
      "name": "TestUtilsHashPass.test_bcrypt_sha256",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 151
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_bcrypt",
      "type": "function",
      "name": "TestUtilsHashPass.test_bcrypt",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 176
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_bcrypt_upgrade",
      "type": "function",
      "name": "TestUtilsHashPass.test_bcrypt_upgrade",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 192
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_bcrypt_upgrade.setter",
      "type": "function",
      "name": "TestUtilsHashPass.test_bcrypt_upgrade.setter",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 207
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_bcrypt_harden_runtime",
      "type": "function",
      "name": "TestUtilsHashPass.test_bcrypt_harden_runtime",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 225
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_unusable",
      "type": "function",
      "name": "TestUtilsHashPass.test_unusable",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 246
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_unspecified_password",
      "type": "function",
      "name": "TestUtilsHashPass.test_unspecified_password",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 262
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_bad_algorithm",
      "type": "function",
      "name": "TestUtilsHashPass.test_bad_algorithm",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 269
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_is_password_usable",
      "type": "function",
      "name": "TestUtilsHashPass.test_is_password_usable",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 279
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_low_level_pbkdf2",
      "type": "function",
      "name": "TestUtilsHashPass.test_low_level_pbkdf2",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 285
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_low_level_pbkdf2_sha1",
      "type": "function",
      "name": "TestUtilsHashPass.test_low_level_pbkdf2_sha1",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 291
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_upgrade",
      "type": "function",
      "name": "TestUtilsHashPass.test_upgrade",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 304
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_upgrade.setter",
      "type": "function",
      "name": "TestUtilsHashPass.test_upgrade.setter",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 311
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_no_upgrade",
      "type": "function",
      "name": "TestUtilsHashPass.test_no_upgrade",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 316
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_no_upgrade.setter",
      "type": "function",
      "name": "TestUtilsHashPass.test_no_upgrade.setter",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 320
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_no_upgrade_on_incorrect_pass",
      "type": "function",
      "name": "TestUtilsHashPass.test_no_upgrade_on_incorrect_pass",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 332
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_no_upgrade_on_incorrect_pass.setter",
      "type": "function",
      "name": "TestUtilsHashPass.test_no_upgrade_on_incorrect_pass.setter",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 339
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_pbkdf2_upgrade",
      "type": "function",
      "name": "TestUtilsHashPass.test_pbkdf2_upgrade",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 344
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_pbkdf2_upgrade.setter",
      "type": "function",
      "name": "TestUtilsHashPass.test_pbkdf2_upgrade.setter",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 359
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_pbkdf2_harden_runtime",
      "type": "function",
      "name": "TestUtilsHashPass.test_pbkdf2_harden_runtime",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 375
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_pbkdf2_upgrade_new_hasher",
      "type": "function",
      "name": "TestUtilsHashPass.test_pbkdf2_upgrade_new_hasher",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 394
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_pbkdf2_upgrade_new_hasher.setter",
      "type": "function",
      "name": "TestUtilsHashPass.test_pbkdf2_upgrade_new_hasher.setter",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 401
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_check_password_calls_harden_runtime",
      "type": "function",
      "name": "TestUtilsHashPass.test_check_password_calls_harden_runtime",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 422
    },
    {
      "id": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests",
      "type": "class",
      "name": "BasePasswordHasherTests",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 437
    },
    {
      "id": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests.setUp",
      "type": "function",
      "name": "BasePasswordHasherTests.setUp",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 440
    },
    {
      "id": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests.test_load_library_no_algorithm",
      "type": "function",
      "name": "BasePasswordHasherTests.test_load_library_no_algorithm",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 443
    },
    {
      "id": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests.test_load_library_importerror",
      "type": "function",
      "name": "BasePasswordHasherTests.test_load_library_importerror",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 448
    },
    {
      "id": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests.test_attributes",
      "type": "function",
      "name": "BasePasswordHasherTests.test_attributes",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 454
    },
    {
      "id": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests.test_encode",
      "type": "function",
      "name": "BasePasswordHasherTests.test_encode",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 458
    },
    {
      "id": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests.test_harden_runtime",
      "type": "function",
      "name": "BasePasswordHasherTests.test_harden_runtime",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 463
    },
    {
      "id": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests.test_must_update",
      "type": "function",
      "name": "BasePasswordHasherTests.test_must_update",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 468
    },
    {
      "id": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests.test_safe_summary",
      "type": "function",
      "name": "BasePasswordHasherTests.test_safe_summary",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 471
    },
    {
      "id": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests.test_verify",
      "type": "function",
      "name": "BasePasswordHasherTests.test_verify",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 476
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPassArgon2",
      "type": "class",
      "name": "TestUtilsHashPassArgon2",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 484
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPassArgon2.test_argon2",
      "type": "function",
      "name": "TestUtilsHashPassArgon2.test_argon2",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 486
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPassArgon2.test_argon2_upgrade",
      "type": "function",
      "name": "TestUtilsHashPassArgon2.test_argon2_upgrade",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 507
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPassArgon2.test_argon2_version_upgrade",
      "type": "function",
      "name": "TestUtilsHashPassArgon2.test_argon2_version_upgrade",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 512
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPassArgon2.test_argon2_version_upgrade.setter",
      "type": "function",
      "name": "TestUtilsHashPassArgon2.test_argon2_version_upgrade.setter",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 520
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPassArgon2._test_argon2_upgrade",
      "type": "function",
      "name": "TestUtilsHashPassArgon2._test_argon2_upgrade",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 537
    },
    {
      "id": "tests/auth_tests/test_hashers.py:TestUtilsHashPassArgon2._test_argon2_upgrade.setter",
      "type": "function",
      "name": "TestUtilsHashPassArgon2._test_argon2_upgrade.setter",
      "file": "tests/auth_tests/test_hashers.py",
      "line": 552
    },
    {
      "id": "tests/auth_tests/test_validators.py",
      "type": "file",
      "name": "test_validators.py",
      "file": "tests/auth_tests/test_validators.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/test_validators.py:PasswordValidationTest",
      "type": "class",
      "name": "PasswordValidationTest",
      "file": "tests/auth_tests/test_validators.py",
      "line": 25
    },
    {
      "id": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_get_default_password_validators",
      "type": "function",
      "name": "PasswordValidationTest.test_get_default_password_validators",
      "file": "tests/auth_tests/test_validators.py",
      "line": 26
    },
    {
      "id": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_get_password_validators_custom",
      "type": "function",
      "name": "PasswordValidationTest.test_get_password_validators_custom",
      "file": "tests/auth_tests/test_validators.py",
      "line": 33
    },
    {
      "id": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_validate_password",
      "type": "function",
      "name": "PasswordValidationTest.test_validate_password",
      "file": "tests/auth_tests/test_validators.py",
      "line": 41
    },
    {
      "id": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_password_changed",
      "type": "function",
      "name": "PasswordValidationTest.test_password_changed",
      "file": "tests/auth_tests/test_validators.py",
      "line": 57
    },
    {
      "id": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_password_changed_with_custom_validator",
      "type": "function",
      "name": "PasswordValidationTest.test_password_changed_with_custom_validator",
      "file": "tests/auth_tests/test_validators.py",
      "line": 60
    },
    {
      "id": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_password_changed_with_custom_validator.Validator",
      "type": "class",
      "name": "PasswordValidationTest.test_password_changed_with_custom_validator.Validator",
      "file": "tests/auth_tests/test_validators.py",
      "line": 61
    },
    {
      "id": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_password_changed_with_custom_validator.Validator.password_changed",
      "type": "function",
      "name": "PasswordValidationTest.test_password_changed_with_custom_validator.Validator.password_changed",
      "file": "tests/auth_tests/test_validators.py",
      "line": 62
    },
    {
      "id": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_password_validators_help_texts",
      "type": "function",
      "name": "PasswordValidationTest.test_password_validators_help_texts",
      "file": "tests/auth_tests/test_validators.py",
      "line": 72
    },
    {
      "id": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_password_validators_help_text_html",
      "type": "function",
      "name": "PasswordValidationTest.test_password_validators_help_text_html",
      "file": "tests/auth_tests/test_validators.py",
      "line": 79
    },
    {
      "id": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_password_validators_help_text_html_escaping",
      "type": "function",
      "name": "PasswordValidationTest.test_password_validators_help_text_html_escaping",
      "file": "tests/auth_tests/test_validators.py",
      "line": 84
    },
    {
      "id": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_password_validators_help_text_html_escaping.AmpersandValidator",
      "type": "class",
      "name": "PasswordValidationTest.test_password_validators_help_text_html_escaping.AmpersandValidator",
      "file": "tests/auth_tests/test_validators.py",
      "line": 85
    },
    {
      "id": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_password_validators_help_text_html_escaping.AmpersandValidator.get_help_text",
      "type": "function",
      "name": "PasswordValidationTest.test_password_validators_help_text_html_escaping.AmpersandValidator.get_help_text",
      "file": "tests/auth_tests/test_validators.py",
      "line": 86
    },
    {
      "id": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_empty_password_validator_help_text_html",
      "type": "function",
      "name": "PasswordValidationTest.test_empty_password_validator_help_text_html",
      "file": "tests/auth_tests/test_validators.py",
      "line": 94
    },
    {
      "id": "tests/auth_tests/test_validators.py:MinimumLengthValidatorTest",
      "type": "class",
      "name": "MinimumLengthValidatorTest",
      "file": "tests/auth_tests/test_validators.py",
      "line": 98
    },
    {
      "id": "tests/auth_tests/test_validators.py:MinimumLengthValidatorTest.test_validate",
      "type": "function",
      "name": "MinimumLengthValidatorTest.test_validate",
      "file": "tests/auth_tests/test_validators.py",
      "line": 99
    },
    {
      "id": "tests/auth_tests/test_validators.py:MinimumLengthValidatorTest.test_help_text",
      "type": "function",
      "name": "MinimumLengthValidatorTest.test_help_text",
      "file": "tests/auth_tests/test_validators.py",
      "line": 113
    },
    {
      "id": "tests/auth_tests/test_validators.py:UserAttributeSimilarityValidatorTest",
      "type": "class",
      "name": "UserAttributeSimilarityValidatorTest",
      "file": "tests/auth_tests/test_validators.py",
      "line": 120
    },
    {
      "id": "tests/auth_tests/test_validators.py:UserAttributeSimilarityValidatorTest.test_validate",
      "type": "function",
      "name": "UserAttributeSimilarityValidatorTest.test_validate",
      "file": "tests/auth_tests/test_validators.py",
      "line": 121
    },
    {
      "id": "tests/auth_tests/test_validators.py:UserAttributeSimilarityValidatorTest.test_validate_property",
      "type": "function",
      "name": "UserAttributeSimilarityValidatorTest.test_validate_property",
      "file": "tests/auth_tests/test_validators.py",
      "line": 166
    },
    {
      "id": "tests/auth_tests/test_validators.py:UserAttributeSimilarityValidatorTest.test_validate_property.TestUser",
      "type": "class",
      "name": "UserAttributeSimilarityValidatorTest.test_validate_property.TestUser",
      "file": "tests/auth_tests/test_validators.py",
      "line": 167
    },
    {
      "id": "tests/auth_tests/test_validators.py:UserAttributeSimilarityValidatorTest.test_validate_property.TestUser.username",
      "type": "function",
      "name": "UserAttributeSimilarityValidatorTest.test_validate_property.TestUser.username",
      "file": "tests/auth_tests/test_validators.py",
      "line": 171
    },
    {
      "id": "tests/auth_tests/test_validators.py:UserAttributeSimilarityValidatorTest.test_help_text",
      "type": "function",
      "name": "UserAttributeSimilarityValidatorTest.test_help_text",
      "file": "tests/auth_tests/test_validators.py",
      "line": 178
    },
    {
      "id": "tests/auth_tests/test_validators.py:CommonPasswordValidatorTest",
      "type": "class",
      "name": "CommonPasswordValidatorTest",
      "file": "tests/auth_tests/test_validators.py",
      "line": 185
    },
    {
      "id": "tests/auth_tests/test_validators.py:CommonPasswordValidatorTest.test_validate",
      "type": "function",
      "name": "CommonPasswordValidatorTest.test_validate",
      "file": "tests/auth_tests/test_validators.py",
      "line": 186
    },
    {
      "id": "tests/auth_tests/test_validators.py:CommonPasswordValidatorTest.test_validate_custom_list",
      "type": "function",
      "name": "CommonPasswordValidatorTest.test_validate_custom_list",
      "file": "tests/auth_tests/test_validators.py",
      "line": 194
    },
    {
      "id": "tests/auth_tests/test_validators.py:CommonPasswordValidatorTest.test_validate_django_supplied_file",
      "type": "function",
      "name": "CommonPasswordValidatorTest.test_validate_django_supplied_file",
      "file": "tests/auth_tests/test_validators.py",
      "line": 205
    },
    {
      "id": "tests/auth_tests/test_validators.py:CommonPasswordValidatorTest.test_help_text",
      "type": "function",
      "name": "CommonPasswordValidatorTest.test_help_text",
      "file": "tests/auth_tests/test_validators.py",
      "line": 210
    },
    {
      "id": "tests/auth_tests/test_validators.py:NumericPasswordValidatorTest",
      "type": "class",
      "name": "NumericPasswordValidatorTest",
      "file": "tests/auth_tests/test_validators.py",
      "line": 217
    },
    {
      "id": "tests/auth_tests/test_validators.py:NumericPasswordValidatorTest.test_validate",
      "type": "function",
      "name": "NumericPasswordValidatorTest.test_validate",
      "file": "tests/auth_tests/test_validators.py",
      "line": 218
    },
    {
      "id": "tests/auth_tests/test_validators.py:NumericPasswordValidatorTest.test_help_text",
      "type": "function",
      "name": "NumericPasswordValidatorTest.test_help_text",
      "file": "tests/auth_tests/test_validators.py",
      "line": 227
    },
    {
      "id": "tests/auth_tests/test_validators.py:UsernameValidatorsTests",
      "type": "class",
      "name": "UsernameValidatorsTests",
      "file": "tests/auth_tests/test_validators.py",
      "line": 234
    },
    {
      "id": "tests/auth_tests/test_validators.py:UsernameValidatorsTests.test_unicode_validator",
      "type": "function",
      "name": "UsernameValidatorsTests.test_unicode_validator",
      "file": "tests/auth_tests/test_validators.py",
      "line": 235
    },
    {
      "id": "tests/auth_tests/test_validators.py:UsernameValidatorsTests.test_ascii_validator",
      "type": "function",
      "name": "UsernameValidatorsTests.test_ascii_validator",
      "file": "tests/auth_tests/test_validators.py",
      "line": 251
    },
    {
      "id": "tests/auth_tests/test_mixins.py",
      "type": "file",
      "name": "test_mixins.py",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/test_mixins.py:AlwaysTrueMixin",
      "type": "class",
      "name": "AlwaysTrueMixin",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 14
    },
    {
      "id": "tests/auth_tests/test_mixins.py:AlwaysTrueMixin.test_func",
      "type": "function",
      "name": "AlwaysTrueMixin.test_func",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 16
    },
    {
      "id": "tests/auth_tests/test_mixins.py:AlwaysFalseMixin",
      "type": "class",
      "name": "AlwaysFalseMixin",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 20
    },
    {
      "id": "tests/auth_tests/test_mixins.py:AlwaysFalseMixin.test_func",
      "type": "function",
      "name": "AlwaysFalseMixin.test_func",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 22
    },
    {
      "id": "tests/auth_tests/test_mixins.py:EmptyResponseView",
      "type": "class",
      "name": "EmptyResponseView",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 26
    },
    {
      "id": "tests/auth_tests/test_mixins.py:EmptyResponseView.get",
      "type": "function",
      "name": "EmptyResponseView.get",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 27
    },
    {
      "id": "tests/auth_tests/test_mixins.py:AlwaysTrueView",
      "type": "class",
      "name": "AlwaysTrueView",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 31
    },
    {
      "id": "tests/auth_tests/test_mixins.py:AlwaysFalseView",
      "type": "class",
      "name": "AlwaysFalseView",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 35
    },
    {
      "id": "tests/auth_tests/test_mixins.py:StackedMixinsView1",
      "type": "class",
      "name": "StackedMixinsView1",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 39
    },
    {
      "id": "tests/auth_tests/test_mixins.py:StackedMixinsView2",
      "type": "class",
      "name": "StackedMixinsView2",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 44
    },
    {
      "id": "tests/auth_tests/test_mixins.py:AccessMixinTests",
      "type": "class",
      "name": "AccessMixinTests",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 49
    },
    {
      "id": "tests/auth_tests/test_mixins.py:AccessMixinTests.test_stacked_mixins_success",
      "type": "function",
      "name": "AccessMixinTests.test_stacked_mixins_success",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 53
    },
    {
      "id": "tests/auth_tests/test_mixins.py:AccessMixinTests.test_stacked_mixins_missing_permission",
      "type": "function",
      "name": "AccessMixinTests.test_stacked_mixins_missing_permission",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 68
    },
    {
      "id": "tests/auth_tests/test_mixins.py:AccessMixinTests.test_access_mixin_permission_denied_response",
      "type": "function",
      "name": "AccessMixinTests.test_access_mixin_permission_denied_response",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 83
    },
    {
      "id": "tests/auth_tests/test_mixins.py:AccessMixinTests.test_stacked_mixins_not_logged_in",
      "type": "function",
      "name": "AccessMixinTests.test_stacked_mixins_not_logged_in",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 98
    },
    {
      "id": "tests/auth_tests/test_mixins.py:UserPassesTestTests",
      "type": "class",
      "name": "UserPassesTestTests",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 114
    },
    {
      "id": "tests/auth_tests/test_mixins.py:UserPassesTestTests._test_redirect",
      "type": "function",
      "name": "UserPassesTestTests._test_redirect",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 118
    },
    {
      "id": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_default",
      "type": "function",
      "name": "UserPassesTestTests.test_default",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 127
    },
    {
      "id": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_custom_redirect_url",
      "type": "function",
      "name": "UserPassesTestTests.test_custom_redirect_url",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 130
    },
    {
      "id": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_custom_redirect_url.AView",
      "type": "class",
      "name": "UserPassesTestTests.test_custom_redirect_url.AView",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 131
    },
    {
      "id": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_custom_redirect_parameter",
      "type": "function",
      "name": "UserPassesTestTests.test_custom_redirect_parameter",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 136
    },
    {
      "id": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_custom_redirect_parameter.AView",
      "type": "class",
      "name": "UserPassesTestTests.test_custom_redirect_parameter.AView",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 137
    },
    {
      "id": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_no_redirect_parameter",
      "type": "function",
      "name": "UserPassesTestTests.test_no_redirect_parameter",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 142
    },
    {
      "id": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_no_redirect_parameter.AView",
      "type": "class",
      "name": "UserPassesTestTests.test_no_redirect_parameter.AView",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 143
    },
    {
      "id": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_raise_exception",
      "type": "function",
      "name": "UserPassesTestTests.test_raise_exception",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 148
    },
    {
      "id": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_raise_exception.AView",
      "type": "class",
      "name": "UserPassesTestTests.test_raise_exception.AView",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 149
    },
    {
      "id": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_raise_exception_custom_message",
      "type": "function",
      "name": "UserPassesTestTests.test_raise_exception_custom_message",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 157
    },
    {
      "id": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_raise_exception_custom_message.AView",
      "type": "class",
      "name": "UserPassesTestTests.test_raise_exception_custom_message.AView",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 160
    },
    {
      "id": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_raise_exception_custom_message_function",
      "type": "function",
      "name": "UserPassesTestTests.test_raise_exception_custom_message_function",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 171
    },
    {
      "id": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_raise_exception_custom_message_function.AView",
      "type": "class",
      "name": "UserPassesTestTests.test_raise_exception_custom_message_function.AView",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 174
    },
    {
      "id": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_raise_exception_custom_message_function.AView.get_permission_denied_message",
      "type": "function",
      "name": "UserPassesTestTests.test_raise_exception_custom_message_function.AView.get_permission_denied_message",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 177
    },
    {
      "id": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_user_passes",
      "type": "function",
      "name": "UserPassesTestTests.test_user_passes",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 187
    },
    {
      "id": "tests/auth_tests/test_mixins.py:LoginRequiredMixinTests",
      "type": "class",
      "name": "LoginRequiredMixinTests",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 195
    },
    {
      "id": "tests/auth_tests/test_mixins.py:LoginRequiredMixinTests.setUpTestData",
      "type": "function",
      "name": "LoginRequiredMixinTests.setUpTestData",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 200
    },
    {
      "id": "tests/auth_tests/test_mixins.py:LoginRequiredMixinTests.test_login_required",
      "type": "function",
      "name": "LoginRequiredMixinTests.test_login_required",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 203
    },
    {
      "id": "tests/auth_tests/test_mixins.py:LoginRequiredMixinTests.test_login_required.AView",
      "type": "class",
      "name": "LoginRequiredMixinTests.test_login_required.AView",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 208
    },
    {
      "id": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests",
      "type": "class",
      "name": "PermissionsRequiredMixinTests",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 224
    },
    {
      "id": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.setUpTestData",
      "type": "function",
      "name": "PermissionsRequiredMixinTests.setUpTestData",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 229
    },
    {
      "id": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.test_many_permissions_pass",
      "type": "function",
      "name": "PermissionsRequiredMixinTests.test_many_permissions_pass",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 234
    },
    {
      "id": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.test_many_permissions_pass.AView",
      "type": "class",
      "name": "PermissionsRequiredMixinTests.test_many_permissions_pass.AView",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 235
    },
    {
      "id": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.test_single_permission_pass",
      "type": "function",
      "name": "PermissionsRequiredMixinTests.test_single_permission_pass",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 243
    },
    {
      "id": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.test_single_permission_pass.AView",
      "type": "class",
      "name": "PermissionsRequiredMixinTests.test_single_permission_pass.AView",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 244
    },
    {
      "id": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.test_permissioned_denied_redirect",
      "type": "function",
      "name": "PermissionsRequiredMixinTests.test_permissioned_denied_redirect",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 252
    },
    {
      "id": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.test_permissioned_denied_redirect.AView",
      "type": "class",
      "name": "PermissionsRequiredMixinTests.test_permissioned_denied_redirect.AView",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 253
    },
    {
      "id": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.test_permissioned_denied_exception_raised",
      "type": "function",
      "name": "PermissionsRequiredMixinTests.test_permissioned_denied_exception_raised",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 268
    },
    {
      "id": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.test_permissioned_denied_exception_raised.AView",
      "type": "class",
      "name": "PermissionsRequiredMixinTests.test_permissioned_denied_exception_raised.AView",
      "file": "tests/auth_tests/test_mixins.py",
      "line": 269
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py",
      "type": "file",
      "name": "test_auth_backends.py",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:CountingMD5PasswordHasher",
      "type": "class",
      "name": "CountingMD5PasswordHasher",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 23
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:CountingMD5PasswordHasher.encode",
      "type": "function",
      "name": "CountingMD5PasswordHasher.encode",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 28
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest",
      "type": "class",
      "name": "BaseModelBackendTest",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 33
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.setUp",
      "type": "function",
      "name": "BaseModelBackendTest.setUp",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 42
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.tearDown",
      "type": "function",
      "name": "BaseModelBackendTest.tearDown",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 49
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_has_perm",
      "type": "function",
      "name": "BaseModelBackendTest.test_has_perm",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 56
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_custom_perms",
      "type": "function",
      "name": "BaseModelBackendTest.test_custom_perms",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 74
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_has_no_object_perm",
      "type": "function",
      "name": "BaseModelBackendTest.test_has_no_object_perm",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 111
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_anonymous_has_no_permissions",
      "type": "function",
      "name": "BaseModelBackendTest.test_anonymous_has_no_permissions",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 123
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_inactive_has_no_permissions",
      "type": "function",
      "name": "BaseModelBackendTest.test_inactive_has_no_permissions",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 149
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_get_all_superuser_permissions",
      "type": "function",
      "name": "BaseModelBackendTest.test_get_all_superuser_permissions",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 177
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_authentication_timing",
      "type": "function",
      "name": "BaseModelBackendTest.test_authentication_timing",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 183
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:ModelBackendTest",
      "type": "class",
      "name": "ModelBackendTest",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 199
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:ModelBackendTest.create_users",
      "type": "function",
      "name": "ModelBackendTest.create_users",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 206
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:ModelBackendTest.test_authenticate_inactive",
      "type": "function",
      "name": "ModelBackendTest.test_authenticate_inactive",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 214
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:ModelBackendTest.test_authenticate_user_without_is_active_field",
      "type": "function",
      "name": "ModelBackendTest.test_authenticate_user_without_is_active_field",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 224
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:ExtensionUserModelBackendTest",
      "type": "class",
      "name": "ExtensionUserModelBackendTest",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 235
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:ExtensionUserModelBackendTest.create_users",
      "type": "function",
      "name": "ExtensionUserModelBackendTest.create_users",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 254
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:CustomPermissionsUserModelBackendTest",
      "type": "class",
      "name": "CustomPermissionsUserModelBackendTest",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 270
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:CustomPermissionsUserModelBackendTest.create_users",
      "type": "function",
      "name": "CustomPermissionsUserModelBackendTest.create_users",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 281
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:CustomUserModelBackendAuthenticateTest",
      "type": "class",
      "name": "CustomUserModelBackendAuthenticateTest",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 295
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:CustomUserModelBackendAuthenticateTest.test_authenticate",
      "type": "function",
      "name": "CustomUserModelBackendAuthenticateTest.test_authenticate",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 301
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:UUIDUserTests",
      "type": "class",
      "name": "UUIDUserTests",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 312
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:UUIDUserTests.test_login",
      "type": "function",
      "name": "UUIDUserTests.test_login",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 314
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:TestObj",
      "type": "class",
      "name": "TestObj",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 323
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend",
      "type": "class",
      "name": "SimpleRowlevelBackend",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 327
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.has_perm",
      "type": "function",
      "name": "SimpleRowlevelBackend.has_perm",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 328
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.has_module_perms",
      "type": "function",
      "name": "SimpleRowlevelBackend.has_module_perms",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 341
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.get_all_permissions",
      "type": "function",
      "name": "SimpleRowlevelBackend.get_all_permissions",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 344
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.get_group_permissions",
      "type": "function",
      "name": "SimpleRowlevelBackend.get_group_permissions",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 358
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:RowlevelBackendTest",
      "type": "class",
      "name": "RowlevelBackendTest",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 374
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:RowlevelBackendTest.setUpTestData",
      "type": "function",
      "name": "RowlevelBackendTest.setUpTestData",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 380
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:RowlevelBackendTest.tearDown",
      "type": "function",
      "name": "RowlevelBackendTest.tearDown",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 385
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:RowlevelBackendTest.test_has_perm",
      "type": "function",
      "name": "RowlevelBackendTest.test_has_perm",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 391
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:RowlevelBackendTest.test_get_all_permissions",
      "type": "function",
      "name": "RowlevelBackendTest.test_get_all_permissions",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 400
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:RowlevelBackendTest.test_get_group_permissions",
      "type": "function",
      "name": "RowlevelBackendTest.test_get_group_permissions",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 405
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest",
      "type": "class",
      "name": "AnonymousUserBackendTest",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 414
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest.setUp",
      "type": "function",
      "name": "AnonymousUserBackendTest.setUp",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 419
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest.test_has_perm",
      "type": "function",
      "name": "AnonymousUserBackendTest.test_has_perm",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 422
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest.test_has_perms",
      "type": "function",
      "name": "AnonymousUserBackendTest.test_has_perms",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 426
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest.test_has_module_perms",
      "type": "function",
      "name": "AnonymousUserBackendTest.test_has_module_perms",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 430
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest.test_get_all_permissions",
      "type": "function",
      "name": "AnonymousUserBackendTest.test_get_all_permissions",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 434
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:NoBackendsTest",
      "type": "class",
      "name": "NoBackendsTest",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 439
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:NoBackendsTest.setUpTestData",
      "type": "function",
      "name": "NoBackendsTest.setUpTestData",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 444
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:NoBackendsTest.test_raises_exception",
      "type": "function",
      "name": "NoBackendsTest.test_raises_exception",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 447
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:InActiveUserBackendTest",
      "type": "class",
      "name": "InActiveUserBackendTest",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 457
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:InActiveUserBackendTest.setUpTestData",
      "type": "function",
      "name": "InActiveUserBackendTest.setUpTestData",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 463
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:InActiveUserBackendTest.test_has_perm",
      "type": "function",
      "name": "InActiveUserBackendTest.test_has_perm",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 468
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:InActiveUserBackendTest.test_has_module_perms",
      "type": "function",
      "name": "InActiveUserBackendTest.test_has_module_perms",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 472
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend",
      "type": "class",
      "name": "PermissionDeniedBackend",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 477
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.authenticate",
      "type": "function",
      "name": "PermissionDeniedBackend.authenticate",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 482
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.has_perm",
      "type": "function",
      "name": "PermissionDeniedBackend.has_perm",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 485
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.has_module_perms",
      "type": "function",
      "name": "PermissionDeniedBackend.has_module_perms",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 488
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest",
      "type": "class",
      "name": "PermissionDeniedBackendTest",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 492
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.setUpTestData",
      "type": "function",
      "name": "PermissionDeniedBackendTest.setUpTestData",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 499
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.setUp",
      "type": "function",
      "name": "PermissionDeniedBackendTest.setUp",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 502
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.tearDown",
      "type": "function",
      "name": "PermissionDeniedBackendTest.tearDown",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 506
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.user_login_failed_listener",
      "type": "function",
      "name": "PermissionDeniedBackendTest.user_login_failed_listener",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 509
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.test_permission_denied",
      "type": "function",
      "name": "PermissionDeniedBackendTest.test_permission_denied",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 513
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.test_authenticates",
      "type": "function",
      "name": "PermissionDeniedBackendTest.test_authenticates",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 520
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.test_has_perm_denied",
      "type": "function",
      "name": "PermissionDeniedBackendTest.test_has_perm_denied",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 524
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.test_has_perm",
      "type": "function",
      "name": "PermissionDeniedBackendTest.test_has_perm",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 533
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:NewModelBackend",
      "type": "class",
      "name": "NewModelBackend",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 542
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:ChangedBackendSettingsTest",
      "type": "class",
      "name": "ChangedBackendSettingsTest",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 546
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:ChangedBackendSettingsTest.setUpTestData",
      "type": "function",
      "name": "ChangedBackendSettingsTest.setUpTestData",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 557
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:ChangedBackendSettingsTest.test_changed_backend_settings",
      "type": "function",
      "name": "ChangedBackendSettingsTest.test_changed_backend_settings",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 561
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:TypeErrorBackend",
      "type": "class",
      "name": "TypeErrorBackend",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 586
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:TypeErrorBackend.authenticate",
      "type": "function",
      "name": "TypeErrorBackend.authenticate",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 591
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:SkippedBackend",
      "type": "class",
      "name": "SkippedBackend",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 595
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:SkippedBackend.authenticate",
      "type": "function",
      "name": "SkippedBackend.authenticate",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 596
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:AuthenticateTests",
      "type": "class",
      "name": "AuthenticateTests",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 601
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:AuthenticateTests.setUpTestData",
      "type": "function",
      "name": "AuthenticateTests.setUpTestData",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 603
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:AuthenticateTests.test_type_error_raised",
      "type": "function",
      "name": "AuthenticateTests.test_type_error_raised",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 607
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:AuthenticateTests.test_skips_backends_without_arguments",
      "type": "function",
      "name": "AuthenticateTests.test_skips_backends_without_arguments",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 616
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:ImproperlyConfiguredUserModelTest",
      "type": "class",
      "name": "ImproperlyConfiguredUserModelTest",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 624
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:ImproperlyConfiguredUserModelTest.setUpTestData",
      "type": "function",
      "name": "ImproperlyConfiguredUserModelTest.setUpTestData",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 630
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:ImproperlyConfiguredUserModelTest.setUp",
      "type": "function",
      "name": "ImproperlyConfiguredUserModelTest.setUp",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 633
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:ImproperlyConfiguredUserModelTest.test_does_not_shadow_exception",
      "type": "function",
      "name": "ImproperlyConfiguredUserModelTest.test_does_not_shadow_exception",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 637
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:ImportedModelBackend",
      "type": "class",
      "name": "ImportedModelBackend",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 650
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:CustomModelBackend",
      "type": "class",
      "name": "CustomModelBackend",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 654
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:OtherModelBackend",
      "type": "class",
      "name": "OtherModelBackend",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 658
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:ImportedBackendTests",
      "type": "class",
      "name": "ImportedBackendTests",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 662
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:ImportedBackendTests.test_backend_path",
      "type": "function",
      "name": "ImportedBackendTests.test_backend_path",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 671
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:SelectingBackendTests",
      "type": "class",
      "name": "SelectingBackendTests",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 681
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:SelectingBackendTests.assertBackendInSession",
      "type": "function",
      "name": "SelectingBackendTests.assertBackendInSession",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 687
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:SelectingBackendTests.test_backend_path_login_without_authenticate_single_backend",
      "type": "function",
      "name": "SelectingBackendTests.test_backend_path_login_without_authenticate_single_backend",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 693
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:SelectingBackendTests.test_backend_path_login_without_authenticate_multiple_backends",
      "type": "function",
      "name": "SelectingBackendTests.test_backend_path_login_without_authenticate_multiple_backends",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 699
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:SelectingBackendTests.test_non_string_backend",
      "type": "function",
      "name": "SelectingBackendTests.test_non_string_backend",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 709
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:SelectingBackendTests.test_backend_path_login_with_explicit_backends",
      "type": "function",
      "name": "SelectingBackendTests.test_backend_path_login_with_explicit_backends",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 719
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:AllowAllUsersModelBackendTest",
      "type": "class",
      "name": "AllowAllUsersModelBackendTest",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 726
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:AllowAllUsersModelBackendTest.setUpTestData",
      "type": "function",
      "name": "AllowAllUsersModelBackendTest.setUpTestData",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 733
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:AllowAllUsersModelBackendTest.test_authenticate",
      "type": "function",
      "name": "AllowAllUsersModelBackendTest.test_authenticate",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 739
    },
    {
      "id": "tests/auth_tests/test_auth_backends.py:AllowAllUsersModelBackendTest.test_get_user",
      "type": "function",
      "name": "AllowAllUsersModelBackendTest.test_get_user",
      "file": "tests/auth_tests/test_auth_backends.py",
      "line": 743
    },
    {
      "id": "tests/auth_tests/test_remote_user.py",
      "type": "file",
      "name": "test_remote_user.py",
      "file": "tests/auth_tests/test_remote_user.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/test_remote_user.py:RemoteUserTest",
      "type": "class",
      "name": "RemoteUserTest",
      "file": "tests/auth_tests/test_remote_user.py",
      "line": 13
    },
    {
      "id": "tests/auth_tests/test_remote_user.py:RemoteUserTest.setUp",
      "type": "function",
      "name": "RemoteUserTest.setUp",
      "file": "tests/auth_tests/test_remote_user.py",
      "line": 24
    },
    {
      "id": "tests/auth_tests/test_remote_user.py:RemoteUserTest.tearDown",
      "type": "function",
      "name": "RemoteUserTest.tearDown",
      "file": "tests/auth_tests/test_remote_user.py",
      "line": 31
    },
    {
      "id": "tests/auth_tests/test_remote_user.py:RemoteUserTest.test_no_remote_user",
      "type": "function",
      "name": "RemoteUserTest.test_no_remote_user",
      "file": "tests/auth_tests/test_remote_user.py",
      "line": 34
    },
    {
      "id": "tests/auth_tests/test_remote_user.py:RemoteUserTest.test_unknown_user",
      "type": "function",
      "name": "RemoteUserTest.test_unknown_user",
      "file": "tests/auth_tests/test_remote_user.py",
      "line": 53
    },
    {
      "id": "tests/auth_tests/test_remote_user.py:RemoteUserTest.test_known_user",
      "type": "function",
      "name": "RemoteUserTest.test_known_user",
      "file": "tests/auth_tests/test_remote_user.py",
      "line": 68
    },
    {
      "id": "tests/auth_tests/test_remote_user.py:RemoteUserTest.test_last_login",
      "type": "function",
      "name": "RemoteUserTest.test_last_login",
      "file": "tests/auth_tests/test_remote_user.py",
      "line": 86
    },
    {
      "id": "tests/auth_tests/test_remote_user.py:RemoteUserTest.test_header_disappears",
      "type": "function",
      "name": "RemoteUserTest.test_header_disappears",
      "file": "tests/auth_tests/test_remote_user.py",
      "line": 110
    },
    {
      "id": "tests/auth_tests/test_remote_user.py:RemoteUserTest.test_user_switch_forces_new_login",
      "type": "function",
      "name": "RemoteUserTest.test_user_switch_forces_new_login",
      "file": "tests/auth_tests/test_remote_user.py",
      "line": 131
    },
    {
      "id": "tests/auth_tests/test_remote_user.py:RemoteUserTest.test_inactive_user",
      "type": "function",
      "name": "RemoteUserTest.test_inactive_user",
      "file": "tests/auth_tests/test_remote_user.py",
      "line": 149
    },
    {
      "id": "tests/auth_tests/test_remote_user.py:RemoteUserNoCreateBackend",
      "type": "class",
      "name": "RemoteUserNoCreateBackend",
      "file": "tests/auth_tests/test_remote_user.py",
      "line": 155
    },
    {
      "id": "tests/auth_tests/test_remote_user.py:RemoteUserNoCreateTest",
      "type": "class",
      "name": "RemoteUserNoCreateTest",
      "file": "tests/auth_tests/test_remote_user.py",
      "line": 160
    },
    {
      "id": "tests/auth_tests/test_remote_user.py:RemoteUserNoCreateTest.test_unknown_user",
      "type": "function",
      "name": "RemoteUserNoCreateTest.test_unknown_user",
      "file": "tests/auth_tests/test_remote_user.py",
      "line": 168
    },
    {
      "id": "tests/auth_tests/test_remote_user.py:AllowAllUsersRemoteUserBackendTest",
      "type": "class",
      "name": "AllowAllUsersRemoteUserBackendTest",
      "file": "tests/auth_tests/test_remote_user.py",
      "line": 175
    },
    {
      "id": "tests/auth_tests/test_remote_user.py:AllowAllUsersRemoteUserBackendTest.test_inactive_user",
      "type": "function",
      "name": "AllowAllUsersRemoteUserBackendTest.test_inactive_user",
      "file": "tests/auth_tests/test_remote_user.py",
      "line": 179
    },
    {
      "id": "tests/auth_tests/test_remote_user.py:CustomRemoteUserBackend",
      "type": "class",
      "name": "CustomRemoteUserBackend",
      "file": "tests/auth_tests/test_remote_user.py",
      "line": 185
    },
    {
      "id": "tests/auth_tests/test_remote_user.py:CustomRemoteUserBackend.clean_username",
      "type": "function",
      "name": "CustomRemoteUserBackend.clean_username",
      "file": "tests/auth_tests/test_remote_user.py",
      "line": 190
    },
    {
      "id": "tests/auth_tests/test_remote_user.py:CustomRemoteUserBackend.configure_user",
      "type": "function",
      "name": "CustomRemoteUserBackend.configure_user",
      "file": "tests/auth_tests/test_remote_user.py",
      "line": 196
    },
    {
      "id": "tests/auth_tests/test_remote_user.py:RemoteUserCustomTest",
      "type": "class",
      "name": "RemoteUserCustomTest",
      "file": "tests/auth_tests/test_remote_user.py",
      "line": 205
    },
    {
      "id": "tests/auth_tests/test_remote_user.py:RemoteUserCustomTest.test_known_user",
      "type": "function",
      "name": "RemoteUserCustomTest.test_known_user",
      "file": "tests/auth_tests/test_remote_user.py",
      "line": 217
    },
    {
      "id": "tests/auth_tests/test_remote_user.py:RemoteUserCustomTest.test_unknown_user",
      "type": "function",
      "name": "RemoteUserCustomTest.test_unknown_user",
      "file": "tests/auth_tests/test_remote_user.py",
      "line": 226
    },
    {
      "id": "tests/auth_tests/test_remote_user.py:CustomHeaderMiddleware",
      "type": "class",
      "name": "CustomHeaderMiddleware",
      "file": "tests/auth_tests/test_remote_user.py",
      "line": 243
    },
    {
      "id": "tests/auth_tests/test_remote_user.py:CustomHeaderRemoteUserTest",
      "type": "class",
      "name": "CustomHeaderRemoteUserTest",
      "file": "tests/auth_tests/test_remote_user.py",
      "line": 250
    },
    {
      "id": "tests/auth_tests/test_remote_user.py:PersistentRemoteUserTest",
      "type": "class",
      "name": "PersistentRemoteUserTest",
      "file": "tests/auth_tests/test_remote_user.py",
      "line": 261
    },
    {
      "id": "tests/auth_tests/test_remote_user.py:PersistentRemoteUserTest.test_header_disappears",
      "type": "function",
      "name": "PersistentRemoteUserTest.test_header_disappears",
      "file": "tests/auth_tests/test_remote_user.py",
      "line": 269
    },
    {
      "id": "tests/auth_tests/settings.py",
      "type": "file",
      "name": "settings.py",
      "file": "tests/auth_tests/settings.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/test_models.py",
      "type": "file",
      "name": "test_models.py",
      "file": "tests/auth_tests/test_models.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/test_models.py:NaturalKeysTestCase",
      "type": "class",
      "name": "NaturalKeysTestCase",
      "file": "tests/auth_tests/test_models.py",
      "line": 19
    },
    {
      "id": "tests/auth_tests/test_models.py:NaturalKeysTestCase.test_user_natural_key",
      "type": "function",
      "name": "NaturalKeysTestCase.test_user_natural_key",
      "file": "tests/auth_tests/test_models.py",
      "line": 21
    },
    {
      "id": "tests/auth_tests/test_models.py:NaturalKeysTestCase.test_group_natural_key",
      "type": "function",
      "name": "NaturalKeysTestCase.test_group_natural_key",
      "file": "tests/auth_tests/test_models.py",
      "line": 26
    },
    {
      "id": "tests/auth_tests/test_models.py:LoadDataWithoutNaturalKeysTestCase",
      "type": "class",
      "name": "LoadDataWithoutNaturalKeysTestCase",
      "file": "tests/auth_tests/test_models.py",
      "line": 31
    },
    {
      "id": "tests/auth_tests/test_models.py:LoadDataWithoutNaturalKeysTestCase.test_user_is_created_and_added_to_group",
      "type": "function",
      "name": "LoadDataWithoutNaturalKeysTestCase.test_user_is_created_and_added_to_group",
      "file": "tests/auth_tests/test_models.py",
      "line": 34
    },
    {
      "id": "tests/auth_tests/test_models.py:LoadDataWithNaturalKeysTestCase",
      "type": "class",
      "name": "LoadDataWithNaturalKeysTestCase",
      "file": "tests/auth_tests/test_models.py",
      "line": 40
    },
    {
      "id": "tests/auth_tests/test_models.py:LoadDataWithNaturalKeysTestCase.test_user_is_created_and_added_to_group",
      "type": "function",
      "name": "LoadDataWithNaturalKeysTestCase.test_user_is_created_and_added_to_group",
      "file": "tests/auth_tests/test_models.py",
      "line": 43
    },
    {
      "id": "tests/auth_tests/test_models.py:LoadDataWithNaturalKeysAndMultipleDatabasesTestCase",
      "type": "class",
      "name": "LoadDataWithNaturalKeysAndMultipleDatabasesTestCase",
      "file": "tests/auth_tests/test_models.py",
      "line": 49
    },
    {
      "id": "tests/auth_tests/test_models.py:LoadDataWithNaturalKeysAndMultipleDatabasesTestCase.test_load_data_with_user_permissions",
      "type": "function",
      "name": "LoadDataWithNaturalKeysAndMultipleDatabasesTestCase.test_load_data_with_user_permissions",
      "file": "tests/auth_tests/test_models.py",
      "line": 52
    },
    {
      "id": "tests/auth_tests/test_models.py:UserManagerTestCase",
      "type": "class",
      "name": "UserManagerTestCase",
      "file": "tests/auth_tests/test_models.py",
      "line": 103
    },
    {
      "id": "tests/auth_tests/test_models.py:UserManagerTestCase.test_create_user",
      "type": "function",
      "name": "UserManagerTestCase.test_create_user",
      "file": "tests/auth_tests/test_models.py",
      "line": 105
    },
    {
      "id": "tests/auth_tests/test_models.py:UserManagerTestCase.test_create_user_email_domain_normalize_rfc3696",
      "type": "function",
      "name": "UserManagerTestCase.test_create_user_email_domain_normalize_rfc3696",
      "file": "tests/auth_tests/test_models.py",
      "line": 112
    },
    {
      "id": "tests/auth_tests/test_models.py:UserManagerTestCase.test_create_user_email_domain_normalize",
      "type": "function",
      "name": "UserManagerTestCase.test_create_user_email_domain_normalize",
      "file": "tests/auth_tests/test_models.py",
      "line": 118
    },
    {
      "id": "tests/auth_tests/test_models.py:UserManagerTestCase.test_create_user_email_domain_normalize_with_whitespace",
      "type": "function",
      "name": "UserManagerTestCase.test_create_user_email_domain_normalize_with_whitespace",
      "file": "tests/auth_tests/test_models.py",
      "line": 122
    },
    {
      "id": "tests/auth_tests/test_models.py:UserManagerTestCase.test_empty_username",
      "type": "function",
      "name": "UserManagerTestCase.test_empty_username",
      "file": "tests/auth_tests/test_models.py",
      "line": 126
    },
    {
      "id": "tests/auth_tests/test_models.py:UserManagerTestCase.test_create_user_is_staff",
      "type": "function",
      "name": "UserManagerTestCase.test_create_user_is_staff",
      "file": "tests/auth_tests/test_models.py",
      "line": 130
    },
    {
      "id": "tests/auth_tests/test_models.py:UserManagerTestCase.test_create_super_user_raises_error_on_false_is_superuser",
      "type": "function",
      "name": "UserManagerTestCase.test_create_super_user_raises_error_on_false_is_superuser",
      "file": "tests/auth_tests/test_models.py",
      "line": 137
    },
    {
      "id": "tests/auth_tests/test_models.py:UserManagerTestCase.test_create_superuser_raises_error_on_false_is_staff",
      "type": "function",
      "name": "UserManagerTestCase.test_create_superuser_raises_error_on_false_is_staff",
      "file": "tests/auth_tests/test_models.py",
      "line": 144
    },
    {
      "id": "tests/auth_tests/test_models.py:UserManagerTestCase.test_make_random_password",
      "type": "function",
      "name": "UserManagerTestCase.test_make_random_password",
      "file": "tests/auth_tests/test_models.py",
      "line": 151
    },
    {
      "id": "tests/auth_tests/test_models.py:AbstractBaseUserTests",
      "type": "class",
      "name": "AbstractBaseUserTests",
      "file": "tests/auth_tests/test_models.py",
      "line": 159
    },
    {
      "id": "tests/auth_tests/test_models.py:AbstractBaseUserTests.test_has_usable_password",
      "type": "function",
      "name": "AbstractBaseUserTests.test_has_usable_password",
      "file": "tests/auth_tests/test_models.py",
      "line": 161
    },
    {
      "id": "tests/auth_tests/test_models.py:AbstractBaseUserTests.test_normalize_username",
      "type": "function",
      "name": "AbstractBaseUserTests.test_normalize_username",
      "file": "tests/auth_tests/test_models.py",
      "line": 168
    },
    {
      "id": "tests/auth_tests/test_models.py:AbstractBaseUserTests.test_clean_normalize_username",
      "type": "function",
      "name": "AbstractBaseUserTests.test_clean_normalize_username",
      "file": "tests/auth_tests/test_models.py",
      "line": 171
    },
    {
      "id": "tests/auth_tests/test_models.py:AbstractBaseUserTests.test_default_email",
      "type": "function",
      "name": "AbstractBaseUserTests.test_default_email",
      "file": "tests/auth_tests/test_models.py",
      "line": 183
    },
    {
      "id": "tests/auth_tests/test_models.py:AbstractBaseUserTests.test_custom_email",
      "type": "function",
      "name": "AbstractBaseUserTests.test_custom_email",
      "file": "tests/auth_tests/test_models.py",
      "line": 187
    },
    {
      "id": "tests/auth_tests/test_models.py:AbstractUserTestCase",
      "type": "class",
      "name": "AbstractUserTestCase",
      "file": "tests/auth_tests/test_models.py",
      "line": 192
    },
    {
      "id": "tests/auth_tests/test_models.py:AbstractUserTestCase.test_email_user",
      "type": "function",
      "name": "AbstractUserTestCase.test_email_user",
      "file": "tests/auth_tests/test_models.py",
      "line": 193
    },
    {
      "id": "tests/auth_tests/test_models.py:AbstractUserTestCase.test_last_login_default",
      "type": "function",
      "name": "AbstractUserTestCase.test_last_login_default",
      "file": "tests/auth_tests/test_models.py",
      "line": 216
    },
    {
      "id": "tests/auth_tests/test_models.py:AbstractUserTestCase.test_user_clean_normalize_email",
      "type": "function",
      "name": "AbstractUserTestCase.test_user_clean_normalize_email",
      "file": "tests/auth_tests/test_models.py",
      "line": 223
    },
    {
      "id": "tests/auth_tests/test_models.py:AbstractUserTestCase.test_user_double_save",
      "type": "function",
      "name": "AbstractUserTestCase.test_user_double_save",
      "file": "tests/auth_tests/test_models.py",
      "line": 228
    },
    {
      "id": "tests/auth_tests/test_models.py:AbstractUserTestCase.test_check_password_upgrade",
      "type": "function",
      "name": "AbstractUserTestCase.test_check_password_upgrade",
      "file": "tests/auth_tests/test_models.py",
      "line": 241
    },
    {
      "id": "tests/auth_tests/test_models.py:IsActiveTestCase",
      "type": "class",
      "name": "IsActiveTestCase",
      "file": "tests/auth_tests/test_models.py",
      "line": 264
    },
    {
      "id": "tests/auth_tests/test_models.py:IsActiveTestCase.test_builtin_user_isactive",
      "type": "function",
      "name": "IsActiveTestCase.test_builtin_user_isactive",
      "file": "tests/auth_tests/test_models.py",
      "line": 269
    },
    {
      "id": "tests/auth_tests/test_models.py:IsActiveTestCase.test_is_active_field_default",
      "type": "function",
      "name": "IsActiveTestCase.test_is_active_field_default",
      "file": "tests/auth_tests/test_models.py",
      "line": 280
    },
    {
      "id": "tests/auth_tests/test_models.py:TestCreateSuperUserSignals",
      "type": "class",
      "name": "TestCreateSuperUserSignals",
      "file": "tests/auth_tests/test_models.py",
      "line": 296
    },
    {
      "id": "tests/auth_tests/test_models.py:TestCreateSuperUserSignals.post_save_listener",
      "type": "function",
      "name": "TestCreateSuperUserSignals.post_save_listener",
      "file": "tests/auth_tests/test_models.py",
      "line": 300
    },
    {
      "id": "tests/auth_tests/test_models.py:TestCreateSuperUserSignals.setUp",
      "type": "function",
      "name": "TestCreateSuperUserSignals.setUp",
      "file": "tests/auth_tests/test_models.py",
      "line": 303
    },
    {
      "id": "tests/auth_tests/test_models.py:TestCreateSuperUserSignals.tearDown",
      "type": "function",
      "name": "TestCreateSuperUserSignals.tearDown",
      "file": "tests/auth_tests/test_models.py",
      "line": 307
    },
    {
      "id": "tests/auth_tests/test_models.py:TestCreateSuperUserSignals.test_create_user",
      "type": "function",
      "name": "TestCreateSuperUserSignals.test_create_user",
      "file": "tests/auth_tests/test_models.py",
      "line": 310
    },
    {
      "id": "tests/auth_tests/test_models.py:TestCreateSuperUserSignals.test_create_superuser",
      "type": "function",
      "name": "TestCreateSuperUserSignals.test_create_superuser",
      "file": "tests/auth_tests/test_models.py",
      "line": 314
    },
    {
      "id": "tests/auth_tests/test_models.py:AnonymousUserTests",
      "type": "class",
      "name": "AnonymousUserTests",
      "file": "tests/auth_tests/test_models.py",
      "line": 319
    },
    {
      "id": "tests/auth_tests/test_models.py:AnonymousUserTests.setUp",
      "type": "function",
      "name": "AnonymousUserTests.setUp",
      "file": "tests/auth_tests/test_models.py",
      "line": 322
    },
    {
      "id": "tests/auth_tests/test_models.py:AnonymousUserTests.test_properties",
      "type": "function",
      "name": "AnonymousUserTests.test_properties",
      "file": "tests/auth_tests/test_models.py",
      "line": 325
    },
    {
      "id": "tests/auth_tests/test_models.py:AnonymousUserTests.test_str",
      "type": "function",
      "name": "AnonymousUserTests.test_str",
      "file": "tests/auth_tests/test_models.py",
      "line": 338
    },
    {
      "id": "tests/auth_tests/test_models.py:AnonymousUserTests.test_eq",
      "type": "function",
      "name": "AnonymousUserTests.test_eq",
      "file": "tests/auth_tests/test_models.py",
      "line": 341
    },
    {
      "id": "tests/auth_tests/test_models.py:AnonymousUserTests.test_hash",
      "type": "function",
      "name": "AnonymousUserTests.test_hash",
      "file": "tests/auth_tests/test_models.py",
      "line": 345
    },
    {
      "id": "tests/auth_tests/test_models.py:AnonymousUserTests.test_int",
      "type": "function",
      "name": "AnonymousUserTests.test_int",
      "file": "tests/auth_tests/test_models.py",
      "line": 348
    },
    {
      "id": "tests/auth_tests/test_models.py:AnonymousUserTests.test_delete",
      "type": "function",
      "name": "AnonymousUserTests.test_delete",
      "file": "tests/auth_tests/test_models.py",
      "line": 356
    },
    {
      "id": "tests/auth_tests/test_models.py:AnonymousUserTests.test_save",
      "type": "function",
      "name": "AnonymousUserTests.test_save",
      "file": "tests/auth_tests/test_models.py",
      "line": 360
    },
    {
      "id": "tests/auth_tests/test_models.py:AnonymousUserTests.test_set_password",
      "type": "function",
      "name": "AnonymousUserTests.test_set_password",
      "file": "tests/auth_tests/test_models.py",
      "line": 364
    },
    {
      "id": "tests/auth_tests/test_models.py:AnonymousUserTests.test_check_password",
      "type": "function",
      "name": "AnonymousUserTests.test_check_password",
      "file": "tests/auth_tests/test_models.py",
      "line": 368
    },
    {
      "id": "tests/auth_tests/test_models.py:GroupTests",
      "type": "class",
      "name": "GroupTests",
      "file": "tests/auth_tests/test_models.py",
      "line": 373
    },
    {
      "id": "tests/auth_tests/test_models.py:GroupTests.test_str",
      "type": "function",
      "name": "GroupTests.test_str",
      "file": "tests/auth_tests/test_models.py",
      "line": 374
    },
    {
      "id": "tests/auth_tests/test_models.py:PermissionTests",
      "type": "class",
      "name": "PermissionTests",
      "file": "tests/auth_tests/test_models.py",
      "line": 379
    },
    {
      "id": "tests/auth_tests/test_models.py:PermissionTests.test_str",
      "type": "function",
      "name": "PermissionTests.test_str",
      "file": "tests/auth_tests/test_models.py",
      "line": 380
    },
    {
      "id": "tests/auth_tests/test_checks.py",
      "type": "file",
      "name": "test_checks.py",
      "file": "tests/auth_tests/test_checks.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/test_checks.py:UserModelChecksTests",
      "type": "class",
      "name": "UserModelChecksTests",
      "file": "tests/auth_tests/test_checks.py",
      "line": 17
    },
    {
      "id": "tests/auth_tests/test_checks.py:UserModelChecksTests.test_required_fields_is_list",
      "type": "function",
      "name": "UserModelChecksTests.test_required_fields_is_list",
      "file": "tests/auth_tests/test_checks.py",
      "line": 19
    },
    {
      "id": "tests/auth_tests/test_checks.py:UserModelChecksTests.test_required_fields_is_list.CustomUserNonListRequiredFields",
      "type": "class",
      "name": "UserModelChecksTests.test_required_fields_is_list.CustomUserNonListRequiredFields",
      "file": "tests/auth_tests/test_checks.py",
      "line": 21
    },
    {
      "id": "tests/auth_tests/test_checks.py:UserModelChecksTests.test_username_not_in_required_fields",
      "type": "function",
      "name": "UserModelChecksTests.test_username_not_in_required_fields",
      "file": "tests/auth_tests/test_checks.py",
      "line": 38
    },
    {
      "id": "tests/auth_tests/test_checks.py:UserModelChecksTests.test_username_not_in_required_fields.CustomUserBadRequiredFields",
      "type": "class",
      "name": "UserModelChecksTests.test_username_not_in_required_fields.CustomUserBadRequiredFields",
      "file": "tests/auth_tests/test_checks.py",
      "line": 40
    },
    {
      "id": "tests/auth_tests/test_checks.py:UserModelChecksTests.test_username_non_unique",
      "type": "function",
      "name": "UserModelChecksTests.test_username_non_unique",
      "file": "tests/auth_tests/test_checks.py",
      "line": 58
    },
    {
      "id": "tests/auth_tests/test_checks.py:UserModelChecksTests.test_is_anonymous_authenticated_methods",
      "type": "function",
      "name": "UserModelChecksTests.test_is_anonymous_authenticated_methods",
      "file": "tests/auth_tests/test_checks.py",
      "line": 85
    },
    {
      "id": "tests/auth_tests/test_checks.py:UserModelChecksTests.test_is_anonymous_authenticated_methods.BadUser",
      "type": "class",
      "name": "UserModelChecksTests.test_is_anonymous_authenticated_methods.BadUser",
      "file": "tests/auth_tests/test_checks.py",
      "line": 89
    },
    {
      "id": "tests/auth_tests/test_checks.py:UserModelChecksTests.test_is_anonymous_authenticated_methods.BadUser.is_anonymous",
      "type": "function",
      "name": "UserModelChecksTests.test_is_anonymous_authenticated_methods.BadUser.is_anonymous",
      "file": "tests/auth_tests/test_checks.py",
      "line": 93
    },
    {
      "id": "tests/auth_tests/test_checks.py:UserModelChecksTests.test_is_anonymous_authenticated_methods.BadUser.is_authenticated",
      "type": "function",
      "name": "UserModelChecksTests.test_is_anonymous_authenticated_methods.BadUser.is_authenticated",
      "file": "tests/auth_tests/test_checks.py",
      "line": 96
    },
    {
      "id": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests",
      "type": "class",
      "name": "ModelsPermissionsChecksTests",
      "file": "tests/auth_tests/test_checks.py",
      "line": 120
    },
    {
      "id": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_clashing_default_permissions",
      "type": "function",
      "name": "ModelsPermissionsChecksTests.test_clashing_default_permissions",
      "file": "tests/auth_tests/test_checks.py",
      "line": 121
    },
    {
      "id": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_clashing_default_permissions.Checked",
      "type": "class",
      "name": "ModelsPermissionsChecksTests.test_clashing_default_permissions.Checked",
      "file": "tests/auth_tests/test_checks.py",
      "line": 122
    },
    {
      "id": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_clashing_default_permissions.Checked.Meta",
      "type": "class",
      "name": "ModelsPermissionsChecksTests.test_clashing_default_permissions.Checked.Meta",
      "file": "tests/auth_tests/test_checks.py",
      "line": 123
    },
    {
      "id": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_non_clashing_custom_permissions",
      "type": "function",
      "name": "ModelsPermissionsChecksTests.test_non_clashing_custom_permissions",
      "file": "tests/auth_tests/test_checks.py",
      "line": 137
    },
    {
      "id": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_non_clashing_custom_permissions.Checked",
      "type": "class",
      "name": "ModelsPermissionsChecksTests.test_non_clashing_custom_permissions.Checked",
      "file": "tests/auth_tests/test_checks.py",
      "line": 138
    },
    {
      "id": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_non_clashing_custom_permissions.Checked.Meta",
      "type": "class",
      "name": "ModelsPermissionsChecksTests.test_non_clashing_custom_permissions.Checked.Meta",
      "file": "tests/auth_tests/test_checks.py",
      "line": 139
    },
    {
      "id": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_clashing_custom_permissions",
      "type": "function",
      "name": "ModelsPermissionsChecksTests.test_clashing_custom_permissions",
      "file": "tests/auth_tests/test_checks.py",
      "line": 147
    },
    {
      "id": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_clashing_custom_permissions.Checked",
      "type": "class",
      "name": "ModelsPermissionsChecksTests.test_clashing_custom_permissions.Checked",
      "file": "tests/auth_tests/test_checks.py",
      "line": 148
    },
    {
      "id": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_clashing_custom_permissions.Checked.Meta",
      "type": "class",
      "name": "ModelsPermissionsChecksTests.test_clashing_custom_permissions.Checked.Meta",
      "file": "tests/auth_tests/test_checks.py",
      "line": 149
    },
    {
      "id": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_verbose_name_max_length",
      "type": "function",
      "name": "ModelsPermissionsChecksTests.test_verbose_name_max_length",
      "file": "tests/auth_tests/test_checks.py",
      "line": 165
    },
    {
      "id": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_verbose_name_max_length.Checked",
      "type": "class",
      "name": "ModelsPermissionsChecksTests.test_verbose_name_max_length.Checked",
      "file": "tests/auth_tests/test_checks.py",
      "line": 166
    },
    {
      "id": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_verbose_name_max_length.Checked.Meta",
      "type": "class",
      "name": "ModelsPermissionsChecksTests.test_verbose_name_max_length.Checked.Meta",
      "file": "tests/auth_tests/test_checks.py",
      "line": 167
    },
    {
      "id": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_custom_permission_name_max_length",
      "type": "function",
      "name": "ModelsPermissionsChecksTests.test_custom_permission_name_max_length",
      "file": "tests/auth_tests/test_checks.py",
      "line": 179
    },
    {
      "id": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_custom_permission_name_max_length.Checked",
      "type": "class",
      "name": "ModelsPermissionsChecksTests.test_custom_permission_name_max_length.Checked",
      "file": "tests/auth_tests/test_checks.py",
      "line": 182
    },
    {
      "id": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_custom_permission_name_max_length.Checked.Meta",
      "type": "class",
      "name": "ModelsPermissionsChecksTests.test_custom_permission_name_max_length.Checked.Meta",
      "file": "tests/auth_tests/test_checks.py",
      "line": 183
    },
    {
      "id": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_empty_default_permissions",
      "type": "function",
      "name": "ModelsPermissionsChecksTests.test_empty_default_permissions",
      "file": "tests/auth_tests/test_checks.py",
      "line": 197
    },
    {
      "id": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_empty_default_permissions.Checked",
      "type": "class",
      "name": "ModelsPermissionsChecksTests.test_empty_default_permissions.Checked",
      "file": "tests/auth_tests/test_checks.py",
      "line": 198
    },
    {
      "id": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_empty_default_permissions.Checked.Meta",
      "type": "class",
      "name": "ModelsPermissionsChecksTests.test_empty_default_permissions.Checked.Meta",
      "file": "tests/auth_tests/test_checks.py",
      "line": 199
    },
    {
      "id": "tests/auth_tests/urls.py",
      "type": "file",
      "name": "urls.py",
      "file": "tests/auth_tests/urls.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/urls.py:CustomRequestAuthenticationForm",
      "type": "class",
      "name": "CustomRequestAuthenticationForm",
      "file": "tests/auth_tests/urls.py",
      "line": 14
    },
    {
      "id": "tests/auth_tests/urls.py:remote_user_auth_view",
      "type": "function",
      "name": "remote_user_auth_view",
      "file": "tests/auth_tests/urls.py",
      "line": 21
    },
    {
      "id": "tests/auth_tests/urls.py:auth_processor_no_attr_access",
      "type": "function",
      "name": "auth_processor_no_attr_access",
      "file": "tests/auth_tests/urls.py",
      "line": 28
    },
    {
      "id": "tests/auth_tests/urls.py:auth_processor_attr_access",
      "type": "function",
      "name": "auth_processor_attr_access",
      "file": "tests/auth_tests/urls.py",
      "line": 36
    },
    {
      "id": "tests/auth_tests/urls.py:auth_processor_user",
      "type": "function",
      "name": "auth_processor_user",
      "file": "tests/auth_tests/urls.py",
      "line": 43
    },
    {
      "id": "tests/auth_tests/urls.py:auth_processor_perms",
      "type": "function",
      "name": "auth_processor_perms",
      "file": "tests/auth_tests/urls.py",
      "line": 47
    },
    {
      "id": "tests/auth_tests/urls.py:auth_processor_perm_in_perms",
      "type": "function",
      "name": "auth_processor_perm_in_perms",
      "file": "tests/auth_tests/urls.py",
      "line": 51
    },
    {
      "id": "tests/auth_tests/urls.py:auth_processor_messages",
      "type": "function",
      "name": "auth_processor_messages",
      "file": "tests/auth_tests/urls.py",
      "line": 55
    },
    {
      "id": "tests/auth_tests/urls.py:userpage",
      "type": "function",
      "name": "userpage",
      "file": "tests/auth_tests/urls.py",
      "line": 60
    },
    {
      "id": "tests/auth_tests/urls.py:permission_required_redirect",
      "type": "function",
      "name": "permission_required_redirect",
      "file": "tests/auth_tests/urls.py",
      "line": 65
    },
    {
      "id": "tests/auth_tests/urls.py:permission_required_exception",
      "type": "function",
      "name": "permission_required_exception",
      "file": "tests/auth_tests/urls.py",
      "line": 70
    },
    {
      "id": "tests/auth_tests/urls.py:login_and_permission_required_exception",
      "type": "function",
      "name": "login_and_permission_required_exception",
      "file": "tests/auth_tests/urls.py",
      "line": 76
    },
    {
      "id": "tests/auth_tests/backend_alias.py",
      "type": "file",
      "name": "backend_alias.py",
      "file": "tests/auth_tests/backend_alias.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/test_remote_user_deprecation.py",
      "type": "file",
      "name": "test_remote_user_deprecation.py",
      "file": "tests/auth_tests/test_remote_user_deprecation.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/test_remote_user_deprecation.py:CustomRemoteUserBackend",
      "type": "class",
      "name": "CustomRemoteUserBackend",
      "file": "tests/auth_tests/test_remote_user_deprecation.py",
      "line": 8
    },
    {
      "id": "tests/auth_tests/test_remote_user_deprecation.py:CustomRemoteUserBackend.configure_user",
      "type": "function",
      "name": "CustomRemoteUserBackend.configure_user",
      "file": "tests/auth_tests/test_remote_user_deprecation.py",
      "line": 10
    },
    {
      "id": "tests/auth_tests/test_remote_user_deprecation.py:RemoteUserCustomTest",
      "type": "class",
      "name": "RemoteUserCustomTest",
      "file": "tests/auth_tests/test_remote_user_deprecation.py",
      "line": 17
    },
    {
      "id": "tests/auth_tests/test_remote_user_deprecation.py:RemoteUserCustomTest.setUp",
      "type": "function",
      "name": "RemoteUserCustomTest.setUp",
      "file": "tests/auth_tests/test_remote_user_deprecation.py",
      "line": 22
    },
    {
      "id": "tests/auth_tests/test_remote_user_deprecation.py:RemoteUserCustomTest.tearDown",
      "type": "function",
      "name": "RemoteUserCustomTest.tearDown",
      "file": "tests/auth_tests/test_remote_user_deprecation.py",
      "line": 29
    },
    {
      "id": "tests/auth_tests/test_remote_user_deprecation.py:RemoteUserCustomTest.test_configure_user_deprecation_warning",
      "type": "function",
      "name": "RemoteUserCustomTest.test_configure_user_deprecation_warning",
      "file": "tests/auth_tests/test_remote_user_deprecation.py",
      "line": 32
    },
    {
      "id": "tests/auth_tests/test_admin_multidb.py",
      "type": "file",
      "name": "test_admin_multidb.py",
      "file": "tests/auth_tests/test_admin_multidb.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/test_admin_multidb.py:Router",
      "type": "class",
      "name": "Router",
      "file": "tests/auth_tests/test_admin_multidb.py",
      "line": 11
    },
    {
      "id": "tests/auth_tests/test_admin_multidb.py:Router.db_for_read",
      "type": "function",
      "name": "Router.db_for_read",
      "file": "tests/auth_tests/test_admin_multidb.py",
      "line": 14
    },
    {
      "id": "tests/auth_tests/test_admin_multidb.py:MultiDatabaseTests",
      "type": "class",
      "name": "MultiDatabaseTests",
      "file": "tests/auth_tests/test_admin_multidb.py",
      "line": 29
    },
    {
      "id": "tests/auth_tests/test_admin_multidb.py:MultiDatabaseTests.setUpTestData",
      "type": "function",
      "name": "MultiDatabaseTests.setUpTestData",
      "file": "tests/auth_tests/test_admin_multidb.py",
      "line": 33
    },
    {
      "id": "tests/auth_tests/test_admin_multidb.py:MultiDatabaseTests.test_add_view",
      "type": "function",
      "name": "MultiDatabaseTests.test_add_view",
      "file": "tests/auth_tests/test_admin_multidb.py",
      "line": 42
    },
    {
      "id": "tests/auth_tests/test_tokens.py",
      "type": "file",
      "name": "test_tokens.py",
      "file": "tests/auth_tests/test_tokens.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/test_tokens.py:TokenGeneratorTest",
      "type": "class",
      "name": "TokenGeneratorTest",
      "file": "tests/auth_tests/test_tokens.py",
      "line": 9
    },
    {
      "id": "tests/auth_tests/test_tokens.py:TokenGeneratorTest.test_make_token",
      "type": "function",
      "name": "TokenGeneratorTest.test_make_token",
      "file": "tests/auth_tests/test_tokens.py",
      "line": 11
    },
    {
      "id": "tests/auth_tests/test_tokens.py:TokenGeneratorTest.test_10265",
      "type": "function",
      "name": "TokenGeneratorTest.test_10265",
      "file": "tests/auth_tests/test_tokens.py",
      "line": 17
    },
    {
      "id": "tests/auth_tests/test_tokens.py:TokenGeneratorTest.test_timeout",
      "type": "function",
      "name": "TokenGeneratorTest.test_timeout",
      "file": "tests/auth_tests/test_tokens.py",
      "line": 30
    },
    {
      "id": "tests/auth_tests/test_tokens.py:TokenGeneratorTest.test_timeout.Mocked",
      "type": "class",
      "name": "TokenGeneratorTest.test_timeout.Mocked",
      "file": "tests/auth_tests/test_tokens.py",
      "line": 36
    },
    {
      "id": "tests/auth_tests/test_tokens.py:TokenGeneratorTest.test_timeout.Mocked._today",
      "type": "function",
      "name": "TokenGeneratorTest.test_timeout.Mocked._today",
      "file": "tests/auth_tests/test_tokens.py",
      "line": 40
    },
    {
      "id": "tests/auth_tests/test_tokens.py:TokenGeneratorTest.test_check_token_with_nonexistent_token_and_user",
      "type": "function",
      "name": "TokenGeneratorTest.test_check_token_with_nonexistent_token_and_user",
      "file": "tests/auth_tests/test_tokens.py",
      "line": 51
    },
    {
      "id": "tests/auth_tests/test_tokens.py:TokenGeneratorTest.test_token_with_different_secret",
      "type": "function",
      "name": "TokenGeneratorTest.test_token_with_different_secret",
      "file": "tests/auth_tests/test_tokens.py",
      "line": 58
    },
    {
      "id": "tests/auth_tests/models",
      "type": "directory",
      "name": "models",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/auth_tests/models/custom_user.py",
      "type": "file",
      "name": "custom_user.py",
      "file": "tests/auth_tests/models/custom_user.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/models/custom_user.py:CustomUserManager",
      "type": "class",
      "name": "CustomUserManager",
      "file": "tests/auth_tests/models/custom_user.py",
      "line": 11
    },
    {
      "id": "tests/auth_tests/models/custom_user.py:CustomUserManager.create_user",
      "type": "function",
      "name": "CustomUserManager.create_user",
      "file": "tests/auth_tests/models/custom_user.py",
      "line": 12
    },
    {
      "id": "tests/auth_tests/models/custom_user.py:CustomUserManager.create_superuser",
      "type": "function",
      "name": "CustomUserManager.create_superuser",
      "file": "tests/auth_tests/models/custom_user.py",
      "line": 29
    },
    {
      "id": "tests/auth_tests/models/custom_user.py:CustomUser",
      "type": "class",
      "name": "CustomUser",
      "file": "tests/auth_tests/models/custom_user.py",
      "line": 36
    },
    {
      "id": "tests/auth_tests/models/custom_user.py:CustomUser.__str__",
      "type": "function",
      "name": "CustomUser.__str__",
      "file": "tests/auth_tests/models/custom_user.py",
      "line": 48
    },
    {
      "id": "tests/auth_tests/models/custom_user.py:CustomUser.get_group_permissions",
      "type": "function",
      "name": "CustomUser.get_group_permissions",
      "file": "tests/auth_tests/models/custom_user.py",
      "line": 52
    },
    {
      "id": "tests/auth_tests/models/custom_user.py:CustomUser.get_all_permissions",
      "type": "function",
      "name": "CustomUser.get_all_permissions",
      "file": "tests/auth_tests/models/custom_user.py",
      "line": 55
    },
    {
      "id": "tests/auth_tests/models/custom_user.py:CustomUser.has_perm",
      "type": "function",
      "name": "CustomUser.has_perm",
      "file": "tests/auth_tests/models/custom_user.py",
      "line": 58
    },
    {
      "id": "tests/auth_tests/models/custom_user.py:CustomUser.has_perms",
      "type": "function",
      "name": "CustomUser.has_perms",
      "file": "tests/auth_tests/models/custom_user.py",
      "line": 61
    },
    {
      "id": "tests/auth_tests/models/custom_user.py:CustomUser.has_module_perms",
      "type": "function",
      "name": "CustomUser.has_module_perms",
      "file": "tests/auth_tests/models/custom_user.py",
      "line": 64
    },
    {
      "id": "tests/auth_tests/models/custom_user.py:CustomUser.is_staff",
      "type": "function",
      "name": "CustomUser.is_staff",
      "file": "tests/auth_tests/models/custom_user.py",
      "line": 69
    },
    {
      "id": "tests/auth_tests/models/custom_user.py:RemoveGroupsAndPermissions",
      "type": "class",
      "name": "RemoveGroupsAndPermissions",
      "file": "tests/auth_tests/models/custom_user.py",
      "line": 73
    },
    {
      "id": "tests/auth_tests/models/custom_user.py:RemoveGroupsAndPermissions.__enter__",
      "type": "function",
      "name": "RemoveGroupsAndPermissions.__enter__",
      "file": "tests/auth_tests/models/custom_user.py",
      "line": 79
    },
    {
      "id": "tests/auth_tests/models/custom_user.py:RemoveGroupsAndPermissions.__exit__",
      "type": "function",
      "name": "RemoveGroupsAndPermissions.__exit__",
      "file": "tests/auth_tests/models/custom_user.py",
      "line": 89
    },
    {
      "id": "tests/auth_tests/models/custom_user.py:CustomUserWithoutIsActiveField",
      "type": "class",
      "name": "CustomUserWithoutIsActiveField",
      "file": "tests/auth_tests/models/custom_user.py",
      "line": 94
    },
    {
      "id": "tests/auth_tests/models/custom_user.py:ExtensionUser",
      "type": "class",
      "name": "ExtensionUser",
      "file": "tests/auth_tests/models/custom_user.py",
      "line": 107
    },
    {
      "id": "tests/auth_tests/models/no_password.py",
      "type": "file",
      "name": "no_password.py",
      "file": "tests/auth_tests/models/no_password.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/models/no_password.py:UserManager",
      "type": "class",
      "name": "UserManager",
      "file": "tests/auth_tests/models/no_password.py",
      "line": 5
    },
    {
      "id": "tests/auth_tests/models/no_password.py:UserManager._create_user",
      "type": "function",
      "name": "UserManager._create_user",
      "file": "tests/auth_tests/models/no_password.py",
      "line": 6
    },
    {
      "id": "tests/auth_tests/models/no_password.py:UserManager.create_superuser",
      "type": "function",
      "name": "UserManager.create_superuser",
      "file": "tests/auth_tests/models/no_password.py",
      "line": 11
    },
    {
      "id": "tests/auth_tests/models/no_password.py:NoPasswordUser",
      "type": "class",
      "name": "NoPasswordUser",
      "file": "tests/auth_tests/models/no_password.py",
      "line": 15
    },
    {
      "id": "tests/auth_tests/models/invalid_models.py",
      "type": "file",
      "name": "invalid_models.py",
      "file": "tests/auth_tests/models/invalid_models.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/models/invalid_models.py:CustomUserNonUniqueUsername",
      "type": "class",
      "name": "CustomUserNonUniqueUsername",
      "file": "tests/auth_tests/models/invalid_models.py",
      "line": 5
    },
    {
      "id": "tests/auth_tests/models/proxy.py",
      "type": "file",
      "name": "proxy.py",
      "file": "tests/auth_tests/models/proxy.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/models/proxy.py:Concrete",
      "type": "class",
      "name": "Concrete",
      "file": "tests/auth_tests/models/proxy.py",
      "line": 5
    },
    {
      "id": "tests/auth_tests/models/proxy.py:Proxy",
      "type": "class",
      "name": "Proxy",
      "file": "tests/auth_tests/models/proxy.py",
      "line": 9
    },
    {
      "id": "tests/auth_tests/models/proxy.py:Proxy.Meta",
      "type": "class",
      "name": "Proxy.Meta",
      "file": "tests/auth_tests/models/proxy.py",
      "line": 10
    },
    {
      "id": "tests/auth_tests/models/proxy.py:UserProxy",
      "type": "class",
      "name": "UserProxy",
      "file": "tests/auth_tests/models/proxy.py",
      "line": 17
    },
    {
      "id": "tests/auth_tests/models/proxy.py:UserProxy.Meta",
      "type": "class",
      "name": "UserProxy.Meta",
      "file": "tests/auth_tests/models/proxy.py",
      "line": 18
    },
    {
      "id": "tests/auth_tests/models/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/auth_tests/models/__init__.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/models/with_custom_email_field.py",
      "type": "file",
      "name": "with_custom_email_field.py",
      "file": "tests/auth_tests/models/with_custom_email_field.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/models/with_custom_email_field.py:CustomEmailFieldUserManager",
      "type": "class",
      "name": "CustomEmailFieldUserManager",
      "file": "tests/auth_tests/models/with_custom_email_field.py",
      "line": 6
    },
    {
      "id": "tests/auth_tests/models/with_custom_email_field.py:CustomEmailFieldUserManager.create_user",
      "type": "function",
      "name": "CustomEmailFieldUserManager.create_user",
      "file": "tests/auth_tests/models/with_custom_email_field.py",
      "line": 7
    },
    {
      "id": "tests/auth_tests/models/with_custom_email_field.py:CustomEmailField",
      "type": "class",
      "name": "CustomEmailField",
      "file": "tests/auth_tests/models/with_custom_email_field.py",
      "line": 15
    },
    {
      "id": "tests/auth_tests/models/custom_permissions.py",
      "type": "file",
      "name": "custom_permissions.py",
      "file": "tests/auth_tests/models/custom_permissions.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/models/custom_permissions.py:CustomPermissionsUserManager",
      "type": "class",
      "name": "CustomPermissionsUserManager",
      "file": "tests/auth_tests/models/custom_permissions.py",
      "line": 12
    },
    {
      "id": "tests/auth_tests/models/custom_permissions.py:CustomPermissionsUserManager.create_superuser",
      "type": "function",
      "name": "CustomPermissionsUserManager.create_superuser",
      "file": "tests/auth_tests/models/custom_permissions.py",
      "line": 13
    },
    {
      "id": "tests/auth_tests/models/custom_permissions.py:CustomPermissionsUser",
      "type": "class",
      "name": "CustomPermissionsUser",
      "file": "tests/auth_tests/models/custom_permissions.py",
      "line": 21
    },
    {
      "id": "tests/auth_tests/models/custom_permissions.py:CustomPermissionsUser.__str__",
      "type": "function",
      "name": "CustomPermissionsUser.__str__",
      "file": "tests/auth_tests/models/custom_permissions.py",
      "line": 30
    },
    {
      "id": "tests/auth_tests/models/with_integer_username.py",
      "type": "file",
      "name": "with_integer_username.py",
      "file": "tests/auth_tests/models/with_integer_username.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/models/with_integer_username.py:IntegerUsernameUserManager",
      "type": "class",
      "name": "IntegerUsernameUserManager",
      "file": "tests/auth_tests/models/with_integer_username.py",
      "line": 5
    },
    {
      "id": "tests/auth_tests/models/with_integer_username.py:IntegerUsernameUserManager.create_user",
      "type": "function",
      "name": "IntegerUsernameUserManager.create_user",
      "file": "tests/auth_tests/models/with_integer_username.py",
      "line": 6
    },
    {
      "id": "tests/auth_tests/models/with_integer_username.py:IntegerUsernameUserManager.get_by_natural_key",
      "type": "function",
      "name": "IntegerUsernameUserManager.get_by_natural_key",
      "file": "tests/auth_tests/models/with_integer_username.py",
      "line": 12
    },
    {
      "id": "tests/auth_tests/models/with_integer_username.py:IntegerUsernameUser",
      "type": "class",
      "name": "IntegerUsernameUser",
      "file": "tests/auth_tests/models/with_integer_username.py",
      "line": 16
    },
    {
      "id": "tests/auth_tests/models/minimal.py",
      "type": "file",
      "name": "minimal.py",
      "file": "tests/auth_tests/models/minimal.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/models/minimal.py:MinimalUser",
      "type": "class",
      "name": "MinimalUser",
      "file": "tests/auth_tests/models/minimal.py",
      "line": 4
    },
    {
      "id": "tests/auth_tests/models/uuid_pk.py",
      "type": "file",
      "name": "uuid_pk.py",
      "file": "tests/auth_tests/models/uuid_pk.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/models/uuid_pk.py:UUIDUser",
      "type": "class",
      "name": "UUIDUser",
      "file": "tests/auth_tests/models/uuid_pk.py",
      "line": 9
    },
    {
      "id": "tests/auth_tests/models/is_active.py",
      "type": "file",
      "name": "is_active.py",
      "file": "tests/auth_tests/models/is_active.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/models/is_active.py:IsActiveTestUser1",
      "type": "class",
      "name": "IsActiveTestUser1",
      "file": "tests/auth_tests/models/is_active.py",
      "line": 5
    },
    {
      "id": "tests/auth_tests/models/with_foreign_key.py",
      "type": "file",
      "name": "with_foreign_key.py",
      "file": "tests/auth_tests/models/with_foreign_key.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/models/with_foreign_key.py:Email",
      "type": "class",
      "name": "Email",
      "file": "tests/auth_tests/models/with_foreign_key.py",
      "line": 5
    },
    {
      "id": "tests/auth_tests/models/with_foreign_key.py:CustomUserWithFKManager",
      "type": "class",
      "name": "CustomUserWithFKManager",
      "file": "tests/auth_tests/models/with_foreign_key.py",
      "line": 9
    },
    {
      "id": "tests/auth_tests/models/with_foreign_key.py:CustomUserWithFKManager.create_superuser",
      "type": "function",
      "name": "CustomUserWithFKManager.create_superuser",
      "file": "tests/auth_tests/models/with_foreign_key.py",
      "line": 10
    },
    {
      "id": "tests/auth_tests/models/with_foreign_key.py:CustomUserWithFK",
      "type": "class",
      "name": "CustomUserWithFK",
      "file": "tests/auth_tests/models/with_foreign_key.py",
      "line": 17
    },
    {
      "id": "tests/auth_tests/models/with_last_login_attr.py",
      "type": "file",
      "name": "with_last_login_attr.py",
      "file": "tests/auth_tests/models/with_last_login_attr.py",
      "line": 0
    },
    {
      "id": "tests/auth_tests/models/with_last_login_attr.py:UserWithDisabledLastLoginField",
      "type": "class",
      "name": "UserWithDisabledLastLoginField",
      "file": "tests/auth_tests/models/with_last_login_attr.py",
      "line": 4
    },
    {
      "id": "tests/transaction_hooks",
      "type": "directory",
      "name": "transaction_hooks",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/transaction_hooks/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/transaction_hooks/models.py",
      "line": 0
    },
    {
      "id": "tests/transaction_hooks/models.py:Thing",
      "type": "class",
      "name": "Thing",
      "file": "tests/transaction_hooks/models.py",
      "line": 4
    },
    {
      "id": "tests/transaction_hooks/models.py:Thing.__str__",
      "type": "function",
      "name": "Thing.__str__",
      "file": "tests/transaction_hooks/models.py",
      "line": 7
    },
    {
      "id": "tests/transaction_hooks/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/transaction_hooks/__init__.py",
      "line": 0
    },
    {
      "id": "tests/transaction_hooks/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/transaction_hooks/tests.py",
      "line": 0
    },
    {
      "id": "tests/transaction_hooks/tests.py:ForcedError",
      "type": "class",
      "name": "ForcedError",
      "file": "tests/transaction_hooks/tests.py",
      "line": 7
    },
    {
      "id": "tests/transaction_hooks/tests.py:TestConnectionOnCommit",
      "type": "class",
      "name": "TestConnectionOnCommit",
      "file": "tests/transaction_hooks/tests.py",
      "line": 11
    },
    {
      "id": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.setUp",
      "type": "function",
      "name": "TestConnectionOnCommit.setUp",
      "file": "tests/transaction_hooks/tests.py",
      "line": 20
    },
    {
      "id": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.notify",
      "type": "function",
      "name": "TestConnectionOnCommit.notify",
      "file": "tests/transaction_hooks/tests.py",
      "line": 23
    },
    {
      "id": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.do",
      "type": "function",
      "name": "TestConnectionOnCommit.do",
      "file": "tests/transaction_hooks/tests.py",
      "line": 28
    },
    {
      "id": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.assertDone",
      "type": "function",
      "name": "TestConnectionOnCommit.assertDone",
      "file": "tests/transaction_hooks/tests.py",
      "line": 33
    },
    {
      "id": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.assertNotified",
      "type": "function",
      "name": "TestConnectionOnCommit.assertNotified",
      "file": "tests/transaction_hooks/tests.py",
      "line": 37
    },
    {
      "id": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_executes_immediately_if_no_transaction",
      "type": "function",
      "name": "TestConnectionOnCommit.test_executes_immediately_if_no_transaction",
      "file": "tests/transaction_hooks/tests.py",
      "line": 40
    },
    {
      "id": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_delays_execution_until_after_transaction_commit",
      "type": "function",
      "name": "TestConnectionOnCommit.test_delays_execution_until_after_transaction_commit",
      "file": "tests/transaction_hooks/tests.py",
      "line": 44
    },
    {
      "id": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_does_not_execute_if_transaction_rolled_back",
      "type": "function",
      "name": "TestConnectionOnCommit.test_does_not_execute_if_transaction_rolled_back",
      "file": "tests/transaction_hooks/tests.py",
      "line": 50
    },
    {
      "id": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_executes_only_after_final_transaction_committed",
      "type": "function",
      "name": "TestConnectionOnCommit.test_executes_only_after_final_transaction_committed",
      "file": "tests/transaction_hooks/tests.py",
      "line": 60
    },
    {
      "id": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_discards_hooks_from_rolled_back_savepoint",
      "type": "function",
      "name": "TestConnectionOnCommit.test_discards_hooks_from_rolled_back_savepoint",
      "file": "tests/transaction_hooks/tests.py",
      "line": 68
    },
    {
      "id": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_no_hooks_run_from_failed_transaction",
      "type": "function",
      "name": "TestConnectionOnCommit.test_no_hooks_run_from_failed_transaction",
      "file": "tests/transaction_hooks/tests.py",
      "line": 87
    },
    {
      "id": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_inner_savepoint_rolled_back_with_outer",
      "type": "function",
      "name": "TestConnectionOnCommit.test_inner_savepoint_rolled_back_with_outer",
      "file": "tests/transaction_hooks/tests.py",
      "line": 99
    },
    {
      "id": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_no_savepoints_atomic_merged_with_outer",
      "type": "function",
      "name": "TestConnectionOnCommit.test_no_savepoints_atomic_merged_with_outer",
      "file": "tests/transaction_hooks/tests.py",
      "line": 112
    },
    {
      "id": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_inner_savepoint_does_not_affect_outer",
      "type": "function",
      "name": "TestConnectionOnCommit.test_inner_savepoint_does_not_affect_outer",
      "file": "tests/transaction_hooks/tests.py",
      "line": 124
    },
    {
      "id": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_runs_hooks_in_order_registered",
      "type": "function",
      "name": "TestConnectionOnCommit.test_runs_hooks_in_order_registered",
      "file": "tests/transaction_hooks/tests.py",
      "line": 136
    },
    {
      "id": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_hooks_cleared_after_successful_commit",
      "type": "function",
      "name": "TestConnectionOnCommit.test_hooks_cleared_after_successful_commit",
      "file": "tests/transaction_hooks/tests.py",
      "line": 145
    },
    {
      "id": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_hooks_cleared_after_rollback",
      "type": "function",
      "name": "TestConnectionOnCommit.test_hooks_cleared_after_rollback",
      "file": "tests/transaction_hooks/tests.py",
      "line": 153
    },
    {
      "id": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_hooks_cleared_on_reconnect",
      "type": "function",
      "name": "TestConnectionOnCommit.test_hooks_cleared_on_reconnect",
      "file": "tests/transaction_hooks/tests.py",
      "line": 167
    },
    {
      "id": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_error_in_hook_doesnt_prevent_clearing_hooks",
      "type": "function",
      "name": "TestConnectionOnCommit.test_error_in_hook_doesnt_prevent_clearing_hooks",
      "file": "tests/transaction_hooks/tests.py",
      "line": 179
    },
    {
      "id": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_db_query_in_hook",
      "type": "function",
      "name": "TestConnectionOnCommit.test_db_query_in_hook",
      "file": "tests/transaction_hooks/tests.py",
      "line": 191
    },
    {
      "id": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_transaction_in_hook",
      "type": "function",
      "name": "TestConnectionOnCommit.test_transaction_in_hook",
      "file": "tests/transaction_hooks/tests.py",
      "line": 200
    },
    {
      "id": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_transaction_in_hook.on_commit",
      "type": "function",
      "name": "TestConnectionOnCommit.test_transaction_in_hook.on_commit",
      "file": "tests/transaction_hooks/tests.py",
      "line": 201
    },
    {
      "id": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_hook_in_hook",
      "type": "function",
      "name": "TestConnectionOnCommit.test_hook_in_hook",
      "file": "tests/transaction_hooks/tests.py",
      "line": 211
    },
    {
      "id": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_hook_in_hook.on_commit",
      "type": "function",
      "name": "TestConnectionOnCommit.test_hook_in_hook.on_commit",
      "file": "tests/transaction_hooks/tests.py",
      "line": 212
    },
    {
      "id": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_raises_exception_non_autocommit_mode",
      "type": "function",
      "name": "TestConnectionOnCommit.test_raises_exception_non_autocommit_mode",
      "file": "tests/transaction_hooks/tests.py",
      "line": 225
    },
    {
      "id": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_raises_exception_non_autocommit_mode.should_never_be_called",
      "type": "function",
      "name": "TestConnectionOnCommit.test_raises_exception_non_autocommit_mode.should_never_be_called",
      "file": "tests/transaction_hooks/tests.py",
      "line": 226
    },
    {
      "id": "tests/migrations",
      "type": "directory",
      "name": "migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_optimizer.py",
      "type": "file",
      "name": "test_optimizer.py",
      "file": "tests/migrations/test_optimizer.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests",
      "type": "class",
      "name": "OptimizerTests",
      "file": "tests/migrations/test_optimizer.py",
      "line": 10
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.optimize",
      "type": "function",
      "name": "OptimizerTests.optimize",
      "file": "tests/migrations/test_optimizer.py",
      "line": 15
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.serialize",
      "type": "function",
      "name": "OptimizerTests.serialize",
      "file": "tests/migrations/test_optimizer.py",
      "line": 22
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.assertOptimizesTo",
      "type": "function",
      "name": "OptimizerTests.assertOptimizesTo",
      "file": "tests/migrations/test_optimizer.py",
      "line": 25
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.assertDoesNotOptimize",
      "type": "function",
      "name": "OptimizerTests.assertDoesNotOptimize",
      "file": "tests/migrations/test_optimizer.py",
      "line": 39
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_single",
      "type": "function",
      "name": "OptimizerTests.test_single",
      "file": "tests/migrations/test_optimizer.py",
      "line": 42
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_delete_model",
      "type": "function",
      "name": "OptimizerTests.test_create_delete_model",
      "file": "tests/migrations/test_optimizer.py",
      "line": 53
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_rename_model",
      "type": "function",
      "name": "OptimizerTests.test_create_rename_model",
      "file": "tests/migrations/test_optimizer.py",
      "line": 65
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_rename_model_self",
      "type": "function",
      "name": "OptimizerTests.test_rename_model_self",
      "file": "tests/migrations/test_optimizer.py",
      "line": 92
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_alter_model_options",
      "type": "function",
      "name": "OptimizerTests.test_create_alter_model_options",
      "file": "tests/migrations/test_optimizer.py",
      "line": 106
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests._test_create_alter_foo_delete_model",
      "type": "function",
      "name": "OptimizerTests._test_create_alter_foo_delete_model",
      "file": "tests/migrations/test_optimizer.py",
      "line": 117
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_alter_unique_delete_model",
      "type": "function",
      "name": "OptimizerTests.test_create_alter_unique_delete_model",
      "file": "tests/migrations/test_optimizer.py",
      "line": 132
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_alter_index_delete_model",
      "type": "function",
      "name": "OptimizerTests.test_create_alter_index_delete_model",
      "file": "tests/migrations/test_optimizer.py",
      "line": 135
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_alter_owrt_delete_model",
      "type": "function",
      "name": "OptimizerTests.test_create_alter_owrt_delete_model",
      "file": "tests/migrations/test_optimizer.py",
      "line": 138
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests._test_alter_alter_model",
      "type": "function",
      "name": "OptimizerTests._test_alter_alter_model",
      "file": "tests/migrations/test_optimizer.py",
      "line": 141
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_alter_alter_table_model",
      "type": "function",
      "name": "OptimizerTests.test_alter_alter_table_model",
      "file": "tests/migrations/test_optimizer.py",
      "line": 156
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_alter_alter_unique_model",
      "type": "function",
      "name": "OptimizerTests.test_alter_alter_unique_model",
      "file": "tests/migrations/test_optimizer.py",
      "line": 162
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_alter_alter_index_model",
      "type": "function",
      "name": "OptimizerTests.test_alter_alter_index_model",
      "file": "tests/migrations/test_optimizer.py",
      "line": 168
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_alter_alter_owrt_model",
      "type": "function",
      "name": "OptimizerTests.test_alter_alter_owrt_model",
      "file": "tests/migrations/test_optimizer.py",
      "line": 174
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_optimize_through_create",
      "type": "function",
      "name": "OptimizerTests.test_optimize_through_create",
      "file": "tests/migrations/test_optimizer.py",
      "line": 180
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_add_field",
      "type": "function",
      "name": "OptimizerTests.test_create_model_add_field",
      "file": "tests/migrations/test_optimizer.py",
      "line": 298
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_reordering",
      "type": "function",
      "name": "OptimizerTests.test_create_model_reordering",
      "file": "tests/migrations/test_optimizer.py",
      "line": 328
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_reordering_circular_fk",
      "type": "function",
      "name": "OptimizerTests.test_create_model_reordering_circular_fk",
      "file": "tests/migrations/test_optimizer.py",
      "line": 349
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_no_reordering_for_unrelated_fk",
      "type": "function",
      "name": "OptimizerTests.test_create_model_no_reordering_for_unrelated_fk",
      "file": "tests/migrations/test_optimizer.py",
      "line": 371
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_no_reordering_of_inherited_model",
      "type": "function",
      "name": "OptimizerTests.test_create_model_no_reordering_of_inherited_model",
      "file": "tests/migrations/test_optimizer.py",
      "line": 384
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_add_field_not_through_m2m_through",
      "type": "function",
      "name": "OptimizerTests.test_create_model_add_field_not_through_m2m_through",
      "file": "tests/migrations/test_optimizer.py",
      "line": 416
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_alter_field",
      "type": "function",
      "name": "OptimizerTests.test_create_model_alter_field",
      "file": "tests/migrations/test_optimizer.py",
      "line": 437
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_rename_field",
      "type": "function",
      "name": "OptimizerTests.test_create_model_rename_field",
      "file": "tests/migrations/test_optimizer.py",
      "line": 466
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_add_field_rename_field",
      "type": "function",
      "name": "OptimizerTests.test_add_field_rename_field",
      "file": "tests/migrations/test_optimizer.py",
      "line": 495
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_alter_field_rename_field",
      "type": "function",
      "name": "OptimizerTests.test_alter_field_rename_field",
      "file": "tests/migrations/test_optimizer.py",
      "line": 509
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_remove_field",
      "type": "function",
      "name": "OptimizerTests.test_create_model_remove_field",
      "file": "tests/migrations/test_optimizer.py",
      "line": 526
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_add_field_alter_field",
      "type": "function",
      "name": "OptimizerTests.test_add_field_alter_field",
      "file": "tests/migrations/test_optimizer.py",
      "line": 558
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_add_field_delete_field",
      "type": "function",
      "name": "OptimizerTests.test_add_field_delete_field",
      "file": "tests/migrations/test_optimizer.py",
      "line": 572
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_alter_field_delete_field",
      "type": "function",
      "name": "OptimizerTests.test_alter_field_delete_field",
      "file": "tests/migrations/test_optimizer.py",
      "line": 584
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests._test_create_alter_foo_field",
      "type": "function",
      "name": "OptimizerTests._test_create_alter_foo_field",
      "file": "tests/migrations/test_optimizer.py",
      "line": 598
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_alter_unique_field",
      "type": "function",
      "name": "OptimizerTests.test_create_alter_unique_field",
      "file": "tests/migrations/test_optimizer.py",
      "line": 768
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_alter_index_field",
      "type": "function",
      "name": "OptimizerTests.test_create_alter_index_field",
      "file": "tests/migrations/test_optimizer.py",
      "line": 771
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_alter_owrt_field",
      "type": "function",
      "name": "OptimizerTests.test_create_alter_owrt_field",
      "file": "tests/migrations/test_optimizer.py",
      "line": 774
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_optimize_through_fields",
      "type": "function",
      "name": "OptimizerTests.test_optimize_through_fields",
      "file": "tests/migrations/test_optimizer.py",
      "line": 777
    },
    {
      "id": "tests/migrations/test_optimizer.py:OptimizerTests.test_optimize_elidable_operation",
      "type": "function",
      "name": "OptimizerTests.test_optimize_elidable_operation",
      "file": "tests/migrations/test_optimizer.py",
      "line": 802
    },
    {
      "id": "tests/migrations/test_loader.py",
      "type": "file",
      "name": "test_loader.py",
      "file": "tests/migrations/test_loader.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_loader.py:RecorderTests",
      "type": "class",
      "name": "RecorderTests",
      "file": "tests/migrations/test_loader.py",
      "line": 15
    },
    {
      "id": "tests/migrations/test_loader.py:RecorderTests.test_apply",
      "type": "function",
      "name": "RecorderTests.test_apply",
      "file": "tests/migrations/test_loader.py",
      "line": 21
    },
    {
      "id": "tests/migrations/test_loader.py:LoaderTests",
      "type": "class",
      "name": "LoaderTests",
      "file": "tests/migrations/test_loader.py",
      "line": 48
    },
    {
      "id": "tests/migrations/test_loader.py:LoaderTests.test_load",
      "type": "function",
      "name": "LoaderTests.test_load",
      "file": "tests/migrations/test_loader.py",
      "line": 56
    },
    {
      "id": "tests/migrations/test_loader.py:LoaderTests.test_plan_handles_repeated_migrations",
      "type": "function",
      "name": "LoaderTests.test_plan_handles_repeated_migrations",
      "file": "tests/migrations/test_loader.py",
      "line": 94
    },
    {
      "id": "tests/migrations/test_loader.py:LoaderTests.test_load_unmigrated_dependency",
      "type": "function",
      "name": "LoaderTests.test_load_unmigrated_dependency",
      "file": "tests/migrations/test_loader.py",
      "line": 106
    },
    {
      "id": "tests/migrations/test_loader.py:LoaderTests.test_run_before",
      "type": "function",
      "name": "LoaderTests.test_run_before",
      "file": "tests/migrations/test_loader.py",
      "line": 131
    },
    {
      "id": "tests/migrations/test_loader.py:LoaderTests.test_first",
      "type": "function",
      "name": "LoaderTests.test_first",
      "file": "tests/migrations/test_loader.py",
      "line": 151
    },
    {
      "id": "tests/migrations/test_loader.py:LoaderTests.test_name_match",
      "type": "function",
      "name": "LoaderTests.test_name_match",
      "file": "tests/migrations/test_loader.py",
      "line": 167
    },
    {
      "id": "tests/migrations/test_loader.py:LoaderTests.test_load_import_error",
      "type": "function",
      "name": "LoaderTests.test_load_import_error",
      "file": "tests/migrations/test_loader.py",
      "line": 179
    },
    {
      "id": "tests/migrations/test_loader.py:LoaderTests.test_load_module_file",
      "type": "function",
      "name": "LoaderTests.test_load_module_file",
      "file": "tests/migrations/test_loader.py",
      "line": 184
    },
    {
      "id": "tests/migrations/test_loader.py:LoaderTests.test_load_empty_dir",
      "type": "function",
      "name": "LoaderTests.test_load_empty_dir",
      "file": "tests/migrations/test_loader.py",
      "line": 192
    },
    {
      "id": "tests/migrations/test_loader.py:LoaderTests.test_marked_as_migrated",
      "type": "function",
      "name": "LoaderTests.test_marked_as_migrated",
      "file": "tests/migrations/test_loader.py",
      "line": 203
    },
    {
      "id": "tests/migrations/test_loader.py:LoaderTests.test_marked_as_unmigrated",
      "type": "function",
      "name": "LoaderTests.test_marked_as_unmigrated",
      "file": "tests/migrations/test_loader.py",
      "line": 215
    },
    {
      "id": "tests/migrations/test_loader.py:LoaderTests.test_explicit_missing_module",
      "type": "function",
      "name": "LoaderTests.test_explicit_missing_module",
      "file": "tests/migrations/test_loader.py",
      "line": 227
    },
    {
      "id": "tests/migrations/test_loader.py:LoaderTests.test_loading_squashed",
      "type": "function",
      "name": "LoaderTests.test_loading_squashed",
      "file": "tests/migrations/test_loader.py",
      "line": 240
    },
    {
      "id": "tests/migrations/test_loader.py:LoaderTests.test_loading_squashed_complex",
      "type": "function",
      "name": "LoaderTests.test_loading_squashed_complex",
      "file": "tests/migrations/test_loader.py",
      "line": 259
    },
    {
      "id": "tests/migrations/test_loader.py:LoaderTests.test_loading_squashed_complex.num_nodes",
      "type": "function",
      "name": "LoaderTests.test_loading_squashed_complex.num_nodes",
      "file": "tests/migrations/test_loader.py",
      "line": 266
    },
    {
      "id": "tests/migrations/test_loader.py:LoaderTests.test_loading_squashed_complex_multi_apps",
      "type": "function",
      "name": "LoaderTests.test_loading_squashed_complex_multi_apps",
      "file": "tests/migrations/test_loader.py",
      "line": 313
    },
    {
      "id": "tests/migrations/test_loader.py:LoaderTests.test_loading_squashed_complex_multi_apps_partially_applied",
      "type": "function",
      "name": "LoaderTests.test_loading_squashed_complex_multi_apps_partially_applied",
      "file": "tests/migrations/test_loader.py",
      "line": 334
    },
    {
      "id": "tests/migrations/test_loader.py:LoaderTests.test_loading_squashed_erroneous",
      "type": "function",
      "name": "LoaderTests.test_loading_squashed_erroneous",
      "file": "tests/migrations/test_loader.py",
      "line": 352
    },
    {
      "id": "tests/migrations/test_loader.py:LoaderTests.test_loading_squashed_erroneous.num_nodes",
      "type": "function",
      "name": "LoaderTests.test_loading_squashed_erroneous.num_nodes",
      "file": "tests/migrations/test_loader.py",
      "line": 359
    },
    {
      "id": "tests/migrations/test_loader.py:LoaderTests.test_check_consistent_history",
      "type": "function",
      "name": "LoaderTests.test_check_consistent_history",
      "file": "tests/migrations/test_loader.py",
      "line": 407
    },
    {
      "id": "tests/migrations/test_loader.py:LoaderTests.test_check_consistent_history_squashed",
      "type": "function",
      "name": "LoaderTests.test_check_consistent_history_squashed",
      "file": "tests/migrations/test_loader.py",
      "line": 423
    },
    {
      "id": "tests/migrations/test_loader.py:LoaderTests.test_loading_squashed_ref_squashed",
      "type": "function",
      "name": "LoaderTests.test_loading_squashed_ref_squashed",
      "file": "tests/migrations/test_loader.py",
      "line": 444
    },
    {
      "id": "tests/migrations/test_loader.py:LoaderTests.test_ignore_files",
      "type": "function",
      "name": "LoaderTests.test_ignore_files",
      "file": "tests/migrations/test_loader.py",
      "line": 504
    },
    {
      "id": "tests/migrations/test_loader.py:PycLoaderTests",
      "type": "class",
      "name": "PycLoaderTests",
      "file": "tests/migrations/test_loader.py",
      "line": 512
    },
    {
      "id": "tests/migrations/test_loader.py:PycLoaderTests.test_valid",
      "type": "function",
      "name": "PycLoaderTests.test_valid",
      "file": "tests/migrations/test_loader.py",
      "line": 514
    },
    {
      "id": "tests/migrations/test_loader.py:PycLoaderTests.test_invalid",
      "type": "function",
      "name": "PycLoaderTests.test_invalid",
      "file": "tests/migrations/test_loader.py",
      "line": 527
    },
    {
      "id": "tests/migrations/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/migrations/models.py",
      "line": 0
    },
    {
      "id": "tests/migrations/models.py:CustomModelBase",
      "type": "class",
      "name": "CustomModelBase",
      "file": "tests/migrations/models.py",
      "line": 5
    },
    {
      "id": "tests/migrations/models.py:ModelWithCustomBase",
      "type": "class",
      "name": "ModelWithCustomBase",
      "file": "tests/migrations/models.py",
      "line": 9
    },
    {
      "id": "tests/migrations/models.py:UnicodeModel",
      "type": "class",
      "name": "UnicodeModel",
      "file": "tests/migrations/models.py",
      "line": 13
    },
    {
      "id": "tests/migrations/models.py:UnicodeModel.Meta",
      "type": "class",
      "name": "UnicodeModel.Meta",
      "file": "tests/migrations/models.py",
      "line": 16
    },
    {
      "id": "tests/migrations/models.py:UnicodeModel.__str__",
      "type": "function",
      "name": "UnicodeModel.__str__",
      "file": "tests/migrations/models.py",
      "line": 22
    },
    {
      "id": "tests/migrations/models.py:Unserializable",
      "type": "class",
      "name": "Unserializable",
      "file": "tests/migrations/models.py",
      "line": 26
    },
    {
      "id": "tests/migrations/models.py:UnserializableModel",
      "type": "class",
      "name": "UnserializableModel",
      "file": "tests/migrations/models.py",
      "line": 33
    },
    {
      "id": "tests/migrations/models.py:UnserializableModel.Meta",
      "type": "class",
      "name": "UnserializableModel.Meta",
      "file": "tests/migrations/models.py",
      "line": 36
    },
    {
      "id": "tests/migrations/models.py:UnmigratedModel",
      "type": "class",
      "name": "UnmigratedModel",
      "file": "tests/migrations/models.py",
      "line": 41
    },
    {
      "id": "tests/migrations/models.py:EmptyManager",
      "type": "class",
      "name": "EmptyManager",
      "file": "tests/migrations/models.py",
      "line": 49
    },
    {
      "id": "tests/migrations/models.py:FoodQuerySet",
      "type": "class",
      "name": "FoodQuerySet",
      "file": "tests/migrations/models.py",
      "line": 53
    },
    {
      "id": "tests/migrations/models.py:BaseFoodManager",
      "type": "class",
      "name": "BaseFoodManager",
      "file": "tests/migrations/models.py",
      "line": 57
    },
    {
      "id": "tests/migrations/models.py:FoodManager",
      "type": "class",
      "name": "FoodManager",
      "file": "tests/migrations/models.py",
      "line": 63
    },
    {
      "id": "tests/migrations/models.py:NoMigrationFoodManager",
      "type": "class",
      "name": "NoMigrationFoodManager",
      "file": "tests/migrations/models.py",
      "line": 67
    },
    {
      "id": "tests/migrations/test_writer.py",
      "type": "file",
      "name": "test_writer.py",
      "file": "tests/migrations/test_writer.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_writer.py:Money",
      "type": "class",
      "name": "Money",
      "file": "tests/migrations/test_writer.py",
      "line": 29
    },
    {
      "id": "tests/migrations/test_writer.py:Money.deconstruct",
      "type": "function",
      "name": "Money.deconstruct",
      "file": "tests/migrations/test_writer.py",
      "line": 30
    },
    {
      "id": "tests/migrations/test_writer.py:TestModel1",
      "type": "class",
      "name": "TestModel1",
      "file": "tests/migrations/test_writer.py",
      "line": 38
    },
    {
      "id": "tests/migrations/test_writer.py:TestModel1.upload_to",
      "type": "function",
      "name": "TestModel1.upload_to",
      "file": "tests/migrations/test_writer.py",
      "line": 39
    },
    {
      "id": "tests/migrations/test_writer.py:OperationWriterTests",
      "type": "class",
      "name": "OperationWriterTests",
      "file": "tests/migrations/test_writer.py",
      "line": 44
    },
    {
      "id": "tests/migrations/test_writer.py:OperationWriterTests.test_empty_signature",
      "type": "function",
      "name": "OperationWriterTests.test_empty_signature",
      "file": "tests/migrations/test_writer.py",
      "line": 46
    },
    {
      "id": "tests/migrations/test_writer.py:OperationWriterTests.test_args_signature",
      "type": "function",
      "name": "OperationWriterTests.test_args_signature",
      "file": "tests/migrations/test_writer.py",
      "line": 56
    },
    {
      "id": "tests/migrations/test_writer.py:OperationWriterTests.test_kwargs_signature",
      "type": "function",
      "name": "OperationWriterTests.test_kwargs_signature",
      "file": "tests/migrations/test_writer.py",
      "line": 68
    },
    {
      "id": "tests/migrations/test_writer.py:OperationWriterTests.test_args_kwargs_signature",
      "type": "function",
      "name": "OperationWriterTests.test_args_kwargs_signature",
      "file": "tests/migrations/test_writer.py",
      "line": 79
    },
    {
      "id": "tests/migrations/test_writer.py:OperationWriterTests.test_nested_args_signature",
      "type": "function",
      "name": "OperationWriterTests.test_nested_args_signature",
      "file": "tests/migrations/test_writer.py",
      "line": 92
    },
    {
      "id": "tests/migrations/test_writer.py:OperationWriterTests.test_multiline_args_signature",
      "type": "function",
      "name": "OperationWriterTests.test_multiline_args_signature",
      "file": "tests/migrations/test_writer.py",
      "line": 113
    },
    {
      "id": "tests/migrations/test_writer.py:OperationWriterTests.test_expand_args_signature",
      "type": "function",
      "name": "OperationWriterTests.test_expand_args_signature",
      "file": "tests/migrations/test_writer.py",
      "line": 125
    },
    {
      "id": "tests/migrations/test_writer.py:OperationWriterTests.test_nested_operation_expand_args_signature",
      "type": "function",
      "name": "OperationWriterTests.test_nested_operation_expand_args_signature",
      "file": "tests/migrations/test_writer.py",
      "line": 139
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests",
      "type": "class",
      "name": "WriterTests",
      "file": "tests/migrations/test_writer.py",
      "line": 163
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.safe_exec",
      "type": "function",
      "name": "WriterTests.safe_exec",
      "file": "tests/migrations/test_writer.py",
      "line": 168
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.serialize_round_trip",
      "type": "function",
      "name": "WriterTests.serialize_round_trip",
      "file": "tests/migrations/test_writer.py",
      "line": 179
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.assertSerializedEqual",
      "type": "function",
      "name": "WriterTests.assertSerializedEqual",
      "file": "tests/migrations/test_writer.py",
      "line": 183
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.assertSerializedResultEqual",
      "type": "function",
      "name": "WriterTests.assertSerializedResultEqual",
      "file": "tests/migrations/test_writer.py",
      "line": 186
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.assertSerializedFieldEqual",
      "type": "function",
      "name": "WriterTests.assertSerializedFieldEqual",
      "file": "tests/migrations/test_writer.py",
      "line": 189
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_numbers",
      "type": "function",
      "name": "WriterTests.test_serialize_numbers",
      "file": "tests/migrations/test_writer.py",
      "line": 196
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_constants",
      "type": "function",
      "name": "WriterTests.test_serialize_constants",
      "file": "tests/migrations/test_writer.py",
      "line": 215
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_strings",
      "type": "function",
      "name": "WriterTests.test_serialize_strings",
      "file": "tests/migrations/test_writer.py",
      "line": 220
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_multiline_strings",
      "type": "function",
      "name": "WriterTests.test_serialize_multiline_strings",
      "file": "tests/migrations/test_writer.py",
      "line": 228
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_collections",
      "type": "function",
      "name": "WriterTests.test_serialize_collections",
      "file": "tests/migrations/test_writer.py",
      "line": 236
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_builtin_types",
      "type": "function",
      "name": "WriterTests.test_serialize_builtin_types",
      "file": "tests/migrations/test_writer.py",
      "line": 243
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_lazy_objects",
      "type": "function",
      "name": "WriterTests.test_serialize_lazy_objects",
      "file": "tests/migrations/test_writer.py",
      "line": 250
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_enums",
      "type": "function",
      "name": "WriterTests.test_serialize_enums",
      "file": "tests/migrations/test_writer.py",
      "line": 255
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_enums.TextEnum",
      "type": "class",
      "name": "WriterTests.test_serialize_enums.TextEnum",
      "file": "tests/migrations/test_writer.py",
      "line": 256
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_enums.BinaryEnum",
      "type": "class",
      "name": "WriterTests.test_serialize_enums.BinaryEnum",
      "file": "tests/migrations/test_writer.py",
      "line": 260
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_enums.IntEnum",
      "type": "class",
      "name": "WriterTests.test_serialize_enums.IntEnum",
      "file": "tests/migrations/test_writer.py",
      "line": 264
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_uuid",
      "type": "function",
      "name": "WriterTests.test_serialize_uuid",
      "file": "tests/migrations/test_writer.py",
      "line": 309
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_functions",
      "type": "function",
      "name": "WriterTests.test_serialize_functions",
      "file": "tests/migrations/test_writer.py",
      "line": 334
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_datetime",
      "type": "function",
      "name": "WriterTests.test_serialize_datetime",
      "file": "tests/migrations/test_writer.py",
      "line": 342
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_fields",
      "type": "function",
      "name": "WriterTests.test_serialize_fields",
      "file": "tests/migrations/test_writer.py",
      "line": 364
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_settings",
      "type": "function",
      "name": "WriterTests.test_serialize_settings",
      "file": "tests/migrations/test_writer.py",
      "line": 376
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_iterators",
      "type": "function",
      "name": "WriterTests.test_serialize_iterators",
      "file": "tests/migrations/test_writer.py",
      "line": 383
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_compiled_regex",
      "type": "function",
      "name": "WriterTests.test_serialize_compiled_regex",
      "file": "tests/migrations/test_writer.py",
      "line": 389
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_class_based_validators",
      "type": "function",
      "name": "WriterTests.test_serialize_class_based_validators",
      "file": "tests/migrations/test_writer.py",
      "line": 396
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_empty_nonempty_tuple",
      "type": "function",
      "name": "WriterTests.test_serialize_empty_nonempty_tuple",
      "file": "tests/migrations/test_writer.py",
      "line": 442
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_builtins",
      "type": "function",
      "name": "WriterTests.test_serialize_builtins",
      "file": "tests/migrations/test_writer.py",
      "line": 454
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_unbound_method_reference",
      "type": "function",
      "name": "WriterTests.test_serialize_unbound_method_reference",
      "file": "tests/migrations/test_writer.py",
      "line": 459
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_local_function_reference",
      "type": "function",
      "name": "WriterTests.test_serialize_local_function_reference",
      "file": "tests/migrations/test_writer.py",
      "line": 463
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_local_function_reference.TestModel2",
      "type": "class",
      "name": "WriterTests.test_serialize_local_function_reference.TestModel2",
      "file": "tests/migrations/test_writer.py",
      "line": 465
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_local_function_reference.TestModel2.upload_to",
      "type": "function",
      "name": "WriterTests.test_serialize_local_function_reference.TestModel2.upload_to",
      "file": "tests/migrations/test_writer.py",
      "line": 466
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_managers",
      "type": "function",
      "name": "WriterTests.test_serialize_managers",
      "file": "tests/migrations/test_writer.py",
      "line": 473
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_frozensets",
      "type": "function",
      "name": "WriterTests.test_serialize_frozensets",
      "file": "tests/migrations/test_writer.py",
      "line": 482
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_set",
      "type": "function",
      "name": "WriterTests.test_serialize_set",
      "file": "tests/migrations/test_writer.py",
      "line": 486
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_timedelta",
      "type": "function",
      "name": "WriterTests.test_serialize_timedelta",
      "file": "tests/migrations/test_writer.py",
      "line": 492
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_functools_partial",
      "type": "function",
      "name": "WriterTests.test_serialize_functools_partial",
      "file": "tests/migrations/test_writer.py",
      "line": 496
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_functools_partialmethod",
      "type": "function",
      "name": "WriterTests.test_serialize_functools_partialmethod",
      "file": "tests/migrations/test_writer.py",
      "line": 503
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_serialize_type_none",
      "type": "function",
      "name": "WriterTests.test_serialize_type_none",
      "file": "tests/migrations/test_writer.py",
      "line": 511
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_simple_migration",
      "type": "function",
      "name": "WriterTests.test_simple_migration",
      "file": "tests/migrations/test_writer.py",
      "line": 514
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_migration_path",
      "type": "function",
      "name": "WriterTests.test_migration_path",
      "file": "tests/migrations/test_writer.py",
      "line": 547
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_custom_operation",
      "type": "function",
      "name": "WriterTests.test_custom_operation",
      "file": "tests/migrations/test_writer.py",
      "line": 563
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_sorted_imports",
      "type": "function",
      "name": "WriterTests.test_sorted_imports",
      "file": "tests/migrations/test_writer.py",
      "line": 582
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_migration_file_header_comments",
      "type": "function",
      "name": "WriterTests.test_migration_file_header_comments",
      "file": "tests/migrations/test_writer.py",
      "line": 602
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_models_import_omitted",
      "type": "function",
      "name": "WriterTests.test_models_import_omitted",
      "file": "tests/migrations/test_writer.py",
      "line": 627
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_deconstruct_class_arguments",
      "type": "function",
      "name": "WriterTests.test_deconstruct_class_arguments",
      "file": "tests/migrations/test_writer.py",
      "line": 643
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_deconstruct_class_arguments.DeconstructibleInstances",
      "type": "class",
      "name": "WriterTests.test_deconstruct_class_arguments.DeconstructibleInstances",
      "file": "tests/migrations/test_writer.py",
      "line": 647
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_deconstruct_class_arguments.DeconstructibleInstances.deconstruct",
      "type": "function",
      "name": "WriterTests.test_deconstruct_class_arguments.DeconstructibleInstances.deconstruct",
      "file": "tests/migrations/test_writer.py",
      "line": 648
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_register_serializer",
      "type": "function",
      "name": "WriterTests.test_register_serializer",
      "file": "tests/migrations/test_writer.py",
      "line": 654
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_register_serializer.ComplexSerializer",
      "type": "class",
      "name": "WriterTests.test_register_serializer.ComplexSerializer",
      "file": "tests/migrations/test_writer.py",
      "line": 655
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_register_serializer.ComplexSerializer.serialize",
      "type": "function",
      "name": "WriterTests.test_register_serializer.ComplexSerializer.serialize",
      "file": "tests/migrations/test_writer.py",
      "line": 656
    },
    {
      "id": "tests/migrations/test_writer.py:WriterTests.test_register_non_serializer",
      "type": "function",
      "name": "WriterTests.test_register_non_serializer",
      "file": "tests/migrations/test_writer.py",
      "line": 665
    },
    {
      "id": "tests/migrations/test_operations.py",
      "type": "file",
      "name": "test_operations.py",
      "file": "tests/migrations/test_operations.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_operations.py:Mixin",
      "type": "class",
      "name": "Mixin",
      "file": "tests/migrations/test_operations.py",
      "line": 16
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTestBase",
      "type": "class",
      "name": "OperationTestBase",
      "file": "tests/migrations/test_operations.py",
      "line": 20
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTestBase.setUpClass",
      "type": "function",
      "name": "OperationTestBase.setUpClass",
      "file": "tests/migrations/test_operations.py",
      "line": 26
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTestBase.tearDown",
      "type": "function",
      "name": "OperationTestBase.tearDown",
      "file": "tests/migrations/test_operations.py",
      "line": 30
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTestBase.cleanup_test_tables",
      "type": "function",
      "name": "OperationTestBase.cleanup_test_tables",
      "file": "tests/migrations/test_operations.py",
      "line": 34
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTestBase.apply_operations",
      "type": "function",
      "name": "OperationTestBase.apply_operations",
      "file": "tests/migrations/test_operations.py",
      "line": 43
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTestBase.unapply_operations",
      "type": "function",
      "name": "OperationTestBase.unapply_operations",
      "file": "tests/migrations/test_operations.py",
      "line": 49
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTestBase.make_test_state",
      "type": "function",
      "name": "OperationTestBase.make_test_state",
      "file": "tests/migrations/test_operations.py",
      "line": 55
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "function",
      "name": "OperationTestBase.set_up_test_model",
      "file": "tests/migrations/test_operations.py",
      "line": 65
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests",
      "type": "class",
      "name": "OperationTests",
      "file": "tests/migrations/test_operations.py",
      "line": 170
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_create_model",
      "type": "function",
      "name": "OperationTests.test_create_model",
      "file": "tests/migrations/test_operations.py",
      "line": 177
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_create_model_with_duplicate_field_name",
      "type": "function",
      "name": "OperationTests.test_create_model_with_duplicate_field_name",
      "file": "tests/migrations/test_operations.py",
      "line": 215
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_create_model_with_duplicate_base",
      "type": "function",
      "name": "OperationTests.test_create_model_with_duplicate_base",
      "file": "tests/migrations/test_operations.py",
      "line": 226
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_create_model_with_duplicate_manager_name",
      "type": "function",
      "name": "OperationTests.test_create_model_with_duplicate_manager_name",
      "file": "tests/migrations/test_operations.py",
      "line": 274
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_create_model_with_unique_after",
      "type": "function",
      "name": "OperationTests.test_create_model_with_unique_after",
      "file": "tests/migrations/test_operations.py",
      "line": 285
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_create_model_m2m",
      "type": "function",
      "name": "OperationTests.test_create_model_m2m",
      "file": "tests/migrations/test_operations.py",
      "line": 328
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_create_model_inheritance",
      "type": "function",
      "name": "OperationTests.test_create_model_inheritance",
      "file": "tests/migrations/test_operations.py",
      "line": 367
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_create_proxy_model",
      "type": "function",
      "name": "OperationTests.test_create_proxy_model",
      "file": "tests/migrations/test_operations.py",
      "line": 400
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_create_unmanaged_model",
      "type": "function",
      "name": "OperationTests.test_create_unmanaged_model",
      "file": "tests/migrations/test_operations.py",
      "line": 434
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_create_model_with_constraint",
      "type": "function",
      "name": "OperationTests.test_create_model_with_constraint",
      "file": "tests/migrations/test_operations.py",
      "line": 464
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_create_model_with_partial_unique_constraint",
      "type": "function",
      "name": "OperationTests.test_create_model_with_partial_unique_constraint",
      "file": "tests/migrations/test_operations.py",
      "line": 502
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_create_model_managers",
      "type": "function",
      "name": "OperationTests.test_create_model_managers",
      "file": "tests/migrations/test_operations.py",
      "line": 547
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_delete_model",
      "type": "function",
      "name": "OperationTests.test_delete_model",
      "file": "tests/migrations/test_operations.py",
      "line": 578
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_delete_proxy_model",
      "type": "function",
      "name": "OperationTests.test_delete_proxy_model",
      "file": "tests/migrations/test_operations.py",
      "line": 604
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_delete_mti_model",
      "type": "function",
      "name": "OperationTests.test_delete_mti_model",
      "file": "tests/migrations/test_operations.py",
      "line": 628
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_rename_model",
      "type": "function",
      "name": "OperationTests.test_rename_model",
      "file": "tests/migrations/test_operations.py",
      "line": 651
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_rename_model_state_forwards",
      "type": "function",
      "name": "OperationTests.test_rename_model_state_forwards",
      "file": "tests/migrations/test_operations.py",
      "line": 698
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_rename_model_with_self_referential_fk",
      "type": "function",
      "name": "OperationTests.test_rename_model_with_self_referential_fk",
      "file": "tests/migrations/test_operations.py",
      "line": 718
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_rename_model_with_superclass_fk",
      "type": "function",
      "name": "OperationTests.test_rename_model_with_superclass_fk",
      "file": "tests/migrations/test_operations.py",
      "line": 760
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_rename_model_with_self_referential_m2m",
      "type": "function",
      "name": "OperationTests.test_rename_model_with_self_referential_m2m",
      "file": "tests/migrations/test_operations.py",
      "line": 795
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_rename_model_with_m2m",
      "type": "function",
      "name": "OperationTests.test_rename_model_with_m2m",
      "file": "tests/migrations/test_operations.py",
      "line": 811
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_rename_m2m_target_model",
      "type": "function",
      "name": "OperationTests.test_rename_m2m_target_model",
      "file": "tests/migrations/test_operations.py",
      "line": 840
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_rename_m2m_through_model",
      "type": "function",
      "name": "OperationTests.test_rename_m2m_through_model",
      "file": "tests/migrations/test_operations.py",
      "line": 869
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_rename_m2m_model_after_rename_field",
      "type": "function",
      "name": "OperationTests.test_rename_m2m_model_after_rename_field",
      "file": "tests/migrations/test_operations.py",
      "line": 910
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_add_field",
      "type": "function",
      "name": "OperationTests.test_add_field",
      "file": "tests/migrations/test_operations.py",
      "line": 938
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_add_charfield",
      "type": "function",
      "name": "OperationTests.test_add_charfield",
      "file": "tests/migrations/test_operations.py",
      "line": 971
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_add_textfield",
      "type": "function",
      "name": "OperationTests.test_add_textfield",
      "file": "tests/migrations/test_operations.py",
      "line": 1012
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_add_binaryfield",
      "type": "function",
      "name": "OperationTests.test_add_binaryfield",
      "file": "tests/migrations/test_operations.py",
      "line": 1053
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_column_name_quoting",
      "type": "function",
      "name": "OperationTests.test_column_name_quoting",
      "file": "tests/migrations/test_operations.py",
      "line": 1095
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_add_field_preserve_default",
      "type": "function",
      "name": "OperationTests.test_add_field_preserve_default",
      "file": "tests/migrations/test_operations.py",
      "line": 1112
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_add_field_m2m",
      "type": "function",
      "name": "OperationTests.test_add_field_m2m",
      "file": "tests/migrations/test_operations.py",
      "line": 1147
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_alter_field_m2m",
      "type": "function",
      "name": "OperationTests.test_alter_field_m2m",
      "file": "tests/migrations/test_operations.py",
      "line": 1175
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_repoint_field_m2m",
      "type": "function",
      "name": "OperationTests.test_repoint_field_m2m",
      "file": "tests/migrations/test_operations.py",
      "line": 1192
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_remove_field_m2m",
      "type": "function",
      "name": "OperationTests.test_remove_field_m2m",
      "file": "tests/migrations/test_operations.py",
      "line": 1211
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_remove_field_m2m_with_through",
      "type": "function",
      "name": "OperationTests.test_remove_field_m2m_with_through",
      "file": "tests/migrations/test_operations.py",
      "line": 1228
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_remove_field",
      "type": "function",
      "name": "OperationTests.test_remove_field",
      "file": "tests/migrations/test_operations.py",
      "line": 1247
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_remove_fk",
      "type": "function",
      "name": "OperationTests.test_remove_fk",
      "file": "tests/migrations/test_operations.py",
      "line": 1273
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_alter_model_table",
      "type": "function",
      "name": "OperationTests.test_alter_model_table",
      "file": "tests/migrations/test_operations.py",
      "line": 1290
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_alter_model_table_none",
      "type": "function",
      "name": "OperationTests.test_alter_model_table_none",
      "file": "tests/migrations/test_operations.py",
      "line": 1319
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_alter_model_table_noop",
      "type": "function",
      "name": "OperationTests.test_alter_model_table_noop",
      "file": "tests/migrations/test_operations.py",
      "line": 1326
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_alter_model_table_m2m",
      "type": "function",
      "name": "OperationTests.test_alter_model_table_m2m",
      "file": "tests/migrations/test_operations.py",
      "line": 1346
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_alter_field",
      "type": "function",
      "name": "OperationTests.test_alter_field",
      "file": "tests/migrations/test_operations.py",
      "line": 1378
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_alter_field_pk",
      "type": "function",
      "name": "OperationTests.test_alter_field_pk",
      "file": "tests/migrations/test_operations.py",
      "line": 1405
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_alter_field_pk_fk",
      "type": "function",
      "name": "OperationTests.test_alter_field_pk_fk",
      "file": "tests/migrations/test_operations.py",
      "line": 1424
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_alter_field_pk_fk.assertIdTypeEqualsFkType",
      "type": "function",
      "name": "OperationTests.test_alter_field_pk_fk.assertIdTypeEqualsFkType",
      "file": "tests/migrations/test_operations.py",
      "line": 1436
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_alter_field_reloads_state_on_fk_target_changes",
      "type": "function",
      "name": "OperationTests.test_alter_field_reloads_state_on_fk_target_changes",
      "file": "tests/migrations/test_operations.py",
      "line": 1461
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_alter_field_reloads_state_on_fk_with_to_field_target_changes",
      "type": "function",
      "name": "OperationTests.test_alter_field_reloads_state_on_fk_with_to_field_target_changes",
      "file": "tests/migrations/test_operations.py",
      "line": 1486
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_rename_field_reloads_state_on_fk_target_changes",
      "type": "function",
      "name": "OperationTests.test_rename_field_reloads_state_on_fk_target_changes",
      "file": "tests/migrations/test_operations.py",
      "line": 1513
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_rename_field",
      "type": "function",
      "name": "OperationTests.test_rename_field",
      "file": "tests/migrations/test_operations.py",
      "line": 1538
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_rename_missing_field",
      "type": "function",
      "name": "OperationTests.test_rename_missing_field",
      "file": "tests/migrations/test_operations.py",
      "line": 1585
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_rename_referenced_field_state_forward",
      "type": "function",
      "name": "OperationTests.test_rename_referenced_field_state_forward",
      "file": "tests/migrations/test_operations.py",
      "line": 1591
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_alter_unique_together",
      "type": "function",
      "name": "OperationTests.test_alter_unique_together",
      "file": "tests/migrations/test_operations.py",
      "line": 1619
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_alter_unique_together_remove",
      "type": "function",
      "name": "OperationTests.test_alter_unique_together_remove",
      "file": "tests/migrations/test_operations.py",
      "line": 1660
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_add_index",
      "type": "function",
      "name": "OperationTests.test_add_index",
      "file": "tests/migrations/test_operations.py",
      "line": 1664
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_remove_index",
      "type": "function",
      "name": "OperationTests.test_remove_index",
      "file": "tests/migrations/test_operations.py",
      "line": 1696
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_add_index_state_forwards",
      "type": "function",
      "name": "OperationTests.test_add_index_state_forwards",
      "file": "tests/migrations/test_operations.py",
      "line": 1740
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_remove_index_state_forwards",
      "type": "function",
      "name": "OperationTests.test_remove_index_state_forwards",
      "file": "tests/migrations/test_operations.py",
      "line": 1751
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_alter_field_with_index",
      "type": "function",
      "name": "OperationTests.test_alter_field_with_index",
      "file": "tests/migrations/test_operations.py",
      "line": 1763
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_alter_index_together",
      "type": "function",
      "name": "OperationTests.test_alter_index_together",
      "file": "tests/migrations/test_operations.py",
      "line": 1784
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_alter_index_together_remove",
      "type": "function",
      "name": "OperationTests.test_alter_index_together_remove",
      "file": "tests/migrations/test_operations.py",
      "line": 1812
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_add_constraint",
      "type": "function",
      "name": "OperationTests.test_add_constraint",
      "file": "tests/migrations/test_operations.py",
      "line": 1817
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_remove_constraint",
      "type": "function",
      "name": "OperationTests.test_remove_constraint",
      "file": "tests/migrations/test_operations.py",
      "line": 1859
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_add_partial_unique_constraint",
      "type": "function",
      "name": "OperationTests.test_add_partial_unique_constraint",
      "file": "tests/migrations/test_operations.py",
      "line": 1900
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_remove_partial_unique_constraint",
      "type": "function",
      "name": "OperationTests.test_remove_partial_unique_constraint",
      "file": "tests/migrations/test_operations.py",
      "line": 1942
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_alter_model_options",
      "type": "function",
      "name": "OperationTests.test_alter_model_options",
      "file": "tests/migrations/test_operations.py",
      "line": 1986
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_alter_model_options_emptying",
      "type": "function",
      "name": "OperationTests.test_alter_model_options_emptying",
      "file": "tests/migrations/test_operations.py",
      "line": 2005
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_alter_order_with_respect_to",
      "type": "function",
      "name": "OperationTests.test_alter_order_with_respect_to",
      "file": "tests/migrations/test_operations.py",
      "line": 2023
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_alter_model_managers",
      "type": "function",
      "name": "OperationTests.test_alter_model_managers",
      "file": "tests/migrations/test_operations.py",
      "line": 2065
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_alter_model_managers_emptying",
      "type": "function",
      "name": "OperationTests.test_alter_model_managers_emptying",
      "file": "tests/migrations/test_operations.py",
      "line": 2101
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_alter_fk",
      "type": "function",
      "name": "OperationTests.test_alter_fk",
      "file": "tests/migrations/test_operations.py",
      "line": 2125
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_alter_fk_non_fk",
      "type": "function",
      "name": "OperationTests.test_alter_fk_non_fk",
      "file": "tests/migrations/test_operations.py",
      "line": 2152
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_run_sql",
      "type": "function",
      "name": "OperationTests.test_run_sql",
      "file": "tests/migrations/test_operations.py",
      "line": 2176
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_run_sql_params",
      "type": "function",
      "name": "OperationTests.test_run_sql_params",
      "file": "tests/migrations/test_operations.py",
      "line": 2238
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_run_sql_params_invalid",
      "type": "function",
      "name": "OperationTests.test_run_sql_params_invalid",
      "file": "tests/migrations/test_operations.py",
      "line": 2289
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_run_sql_noop",
      "type": "function",
      "name": "OperationTests.test_run_sql_noop",
      "file": "tests/migrations/test_operations.py",
      "line": 2315
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_run_python",
      "type": "function",
      "name": "OperationTests.test_run_python",
      "file": "tests/migrations/test_operations.py",
      "line": 2324
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_run_python.inner_method",
      "type": "function",
      "name": "OperationTests.test_run_python.inner_method",
      "file": "tests/migrations/test_operations.py",
      "line": 2332
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_run_python.inner_method_reverse",
      "type": "function",
      "name": "OperationTests.test_run_python.inner_method_reverse",
      "file": "tests/migrations/test_operations.py",
      "line": 2337
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_run_python.create_ponies",
      "type": "function",
      "name": "OperationTests.test_run_python.create_ponies",
      "file": "tests/migrations/test_operations.py",
      "line": 2375
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_run_python.create_shetlandponies",
      "type": "function",
      "name": "OperationTests.test_run_python.create_shetlandponies",
      "file": "tests/migrations/test_operations.py",
      "line": 2393
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_run_python_atomic",
      "type": "function",
      "name": "OperationTests.test_run_python_atomic",
      "file": "tests/migrations/test_operations.py",
      "line": 2411
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_run_python_atomic.inner_method",
      "type": "function",
      "name": "OperationTests.test_run_python_atomic.inner_method",
      "file": "tests/migrations/test_operations.py",
      "line": 2417
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_run_python_related_assignment",
      "type": "function",
      "name": "OperationTests.test_run_python_related_assignment",
      "file": "tests/migrations/test_operations.py",
      "line": 2479
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_run_python_related_assignment.inner_method",
      "type": "function",
      "name": "OperationTests.test_run_python_related_assignment.inner_method",
      "file": "tests/migrations/test_operations.py",
      "line": 2485
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_model_with_bigautofield",
      "type": "function",
      "name": "OperationTests.test_model_with_bigautofield",
      "file": "tests/migrations/test_operations.py",
      "line": 2536
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_model_with_bigautofield.create_data",
      "type": "function",
      "name": "OperationTests.test_model_with_bigautofield.create_data",
      "file": "tests/migrations/test_operations.py",
      "line": 2540
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_autofield_foreignfield_growth",
      "type": "function",
      "name": "OperationTests.test_autofield_foreignfield_growth",
      "file": "tests/migrations/test_operations.py",
      "line": 2588
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_autofield_foreignfield_growth.create_initial_data",
      "type": "function",
      "name": "OperationTests.test_autofield_foreignfield_growth.create_initial_data",
      "file": "tests/migrations/test_operations.py",
      "line": 2592
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_autofield_foreignfield_growth.create_big_data",
      "type": "function",
      "name": "OperationTests.test_autofield_foreignfield_growth.create_big_data",
      "file": "tests/migrations/test_operations.py",
      "line": 2599
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_run_python_noop",
      "type": "function",
      "name": "OperationTests.test_run_python_noop",
      "file": "tests/migrations/test_operations.py",
      "line": 2674
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_separate_database_and_state",
      "type": "function",
      "name": "OperationTests.test_separate_database_and_state",
      "file": "tests/migrations/test_operations.py",
      "line": 2685
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_separate_database_and_state2",
      "type": "function",
      "name": "OperationTests.test_separate_database_and_state2",
      "file": "tests/migrations/test_operations.py",
      "line": 2722
    },
    {
      "id": "tests/migrations/test_operations.py:OperationTests.test_separate_database_and_state2.assertModelsAndTables",
      "type": "function",
      "name": "OperationTests.test_separate_database_and_state2.assertModelsAndTables",
      "file": "tests/migrations/test_operations.py",
      "line": 2773
    },
    {
      "id": "tests/migrations/test_operations.py:SwappableOperationTests",
      "type": "class",
      "name": "SwappableOperationTests",
      "file": "tests/migrations/test_operations.py",
      "line": 2802
    },
    {
      "id": "tests/migrations/test_operations.py:SwappableOperationTests.test_create_ignore_swapped",
      "type": "function",
      "name": "SwappableOperationTests.test_create_ignore_swapped",
      "file": "tests/migrations/test_operations.py",
      "line": 2812
    },
    {
      "id": "tests/migrations/test_operations.py:SwappableOperationTests.test_delete_ignore_swapped",
      "type": "function",
      "name": "SwappableOperationTests.test_delete_ignore_swapped",
      "file": "tests/migrations/test_operations.py",
      "line": 2843
    },
    {
      "id": "tests/migrations/test_operations.py:SwappableOperationTests.test_add_field_ignore_swapped",
      "type": "function",
      "name": "SwappableOperationTests.test_add_field_ignore_swapped",
      "file": "tests/migrations/test_operations.py",
      "line": 2860
    },
    {
      "id": "tests/migrations/test_operations.py:SwappableOperationTests.test_indexes_ignore_swapped",
      "type": "function",
      "name": "SwappableOperationTests.test_indexes_ignore_swapped",
      "file": "tests/migrations/test_operations.py",
      "line": 2882
    },
    {
      "id": "tests/migrations/test_operations.py:TestCreateModel",
      "type": "class",
      "name": "TestCreateModel",
      "file": "tests/migrations/test_operations.py",
      "line": 2900
    },
    {
      "id": "tests/migrations/test_operations.py:TestCreateModel.test_references_model_mixin",
      "type": "function",
      "name": "TestCreateModel.test_references_model_mixin",
      "file": "tests/migrations/test_operations.py",
      "line": 2902
    },
    {
      "id": "tests/migrations/test_operations.py:FieldOperationTests",
      "type": "class",
      "name": "FieldOperationTests",
      "file": "tests/migrations/test_operations.py",
      "line": 2906
    },
    {
      "id": "tests/migrations/test_operations.py:FieldOperationTests.test_references_model",
      "type": "function",
      "name": "FieldOperationTests.test_references_model",
      "file": "tests/migrations/test_operations.py",
      "line": 2907
    },
    {
      "id": "tests/migrations/test_operations.py:FieldOperationTests.test_references_field_by_name",
      "type": "function",
      "name": "FieldOperationTests.test_references_field_by_name",
      "file": "tests/migrations/test_operations.py",
      "line": 2916
    },
    {
      "id": "tests/migrations/test_operations.py:FieldOperationTests.test_references_field_by_remote_field_model",
      "type": "function",
      "name": "FieldOperationTests.test_references_field_by_remote_field_model",
      "file": "tests/migrations/test_operations.py",
      "line": 2920
    },
    {
      "id": "tests/migrations/test_operations.py:FieldOperationTests.test_references_field_by_from_fields",
      "type": "function",
      "name": "FieldOperationTests.test_references_field_by_from_fields",
      "file": "tests/migrations/test_operations.py",
      "line": 2925
    },
    {
      "id": "tests/migrations/test_operations.py:FieldOperationTests.test_references_field_by_to_fields",
      "type": "function",
      "name": "FieldOperationTests.test_references_field_by_to_fields",
      "file": "tests/migrations/test_operations.py",
      "line": 2934
    },
    {
      "id": "tests/migrations/test_operations.py:FieldOperationTests.test_references_field_by_through",
      "type": "function",
      "name": "FieldOperationTests.test_references_field_by_through",
      "file": "tests/migrations/test_operations.py",
      "line": 2940
    },
    {
      "id": "tests/migrations/test_operations.py:FieldOperationTests.test_reference_field_by_through_fields",
      "type": "function",
      "name": "FieldOperationTests.test_reference_field_by_through_fields",
      "file": "tests/migrations/test_operations.py",
      "line": 2946
    },
    {
      "id": "tests/migrations/test_multidb.py",
      "type": "file",
      "name": "test_multidb.py",
      "file": "tests/migrations/test_multidb.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_multidb.py:AgnosticRouter",
      "type": "class",
      "name": "AgnosticRouter",
      "file": "tests/migrations/test_multidb.py",
      "line": 8
    },
    {
      "id": "tests/migrations/test_multidb.py:AgnosticRouter.allow_migrate",
      "type": "function",
      "name": "AgnosticRouter.allow_migrate",
      "file": "tests/migrations/test_multidb.py",
      "line": 12
    },
    {
      "id": "tests/migrations/test_multidb.py:MigrateNothingRouter",
      "type": "class",
      "name": "MigrateNothingRouter",
      "file": "tests/migrations/test_multidb.py",
      "line": 16
    },
    {
      "id": "tests/migrations/test_multidb.py:MigrateNothingRouter.allow_migrate",
      "type": "function",
      "name": "MigrateNothingRouter.allow_migrate",
      "file": "tests/migrations/test_multidb.py",
      "line": 20
    },
    {
      "id": "tests/migrations/test_multidb.py:MigrateEverythingRouter",
      "type": "class",
      "name": "MigrateEverythingRouter",
      "file": "tests/migrations/test_multidb.py",
      "line": 24
    },
    {
      "id": "tests/migrations/test_multidb.py:MigrateEverythingRouter.allow_migrate",
      "type": "function",
      "name": "MigrateEverythingRouter.allow_migrate",
      "file": "tests/migrations/test_multidb.py",
      "line": 28
    },
    {
      "id": "tests/migrations/test_multidb.py:MigrateWhenFooRouter",
      "type": "class",
      "name": "MigrateWhenFooRouter",
      "file": "tests/migrations/test_multidb.py",
      "line": 32
    },
    {
      "id": "tests/migrations/test_multidb.py:MigrateWhenFooRouter.allow_migrate",
      "type": "function",
      "name": "MigrateWhenFooRouter.allow_migrate",
      "file": "tests/migrations/test_multidb.py",
      "line": 36
    },
    {
      "id": "tests/migrations/test_multidb.py:MultiDBOperationTests",
      "type": "class",
      "name": "MultiDBOperationTests",
      "file": "tests/migrations/test_multidb.py",
      "line": 40
    },
    {
      "id": "tests/migrations/test_multidb.py:MultiDBOperationTests._test_create_model",
      "type": "function",
      "name": "MultiDBOperationTests._test_create_model",
      "file": "tests/migrations/test_multidb.py",
      "line": 43
    },
    {
      "id": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_create_model",
      "type": "function",
      "name": "MultiDBOperationTests.test_create_model",
      "file": "tests/migrations/test_multidb.py",
      "line": 69
    },
    {
      "id": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_create_model2",
      "type": "function",
      "name": "MultiDBOperationTests.test_create_model2",
      "file": "tests/migrations/test_multidb.py",
      "line": 76
    },
    {
      "id": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_create_model3",
      "type": "function",
      "name": "MultiDBOperationTests.test_create_model3",
      "file": "tests/migrations/test_multidb.py",
      "line": 83
    },
    {
      "id": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_create_model4",
      "type": "function",
      "name": "MultiDBOperationTests.test_create_model4",
      "file": "tests/migrations/test_multidb.py",
      "line": 89
    },
    {
      "id": "tests/migrations/test_multidb.py:MultiDBOperationTests._test_run_sql",
      "type": "function",
      "name": "MultiDBOperationTests._test_run_sql",
      "file": "tests/migrations/test_multidb.py",
      "line": 100
    },
    {
      "id": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_run_sql_migrate_nothing_router",
      "type": "function",
      "name": "MultiDBOperationTests.test_run_sql_migrate_nothing_router",
      "file": "tests/migrations/test_multidb.py",
      "line": 125
    },
    {
      "id": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_run_sql_migrate_foo_router_without_hints",
      "type": "function",
      "name": "MultiDBOperationTests.test_run_sql_migrate_foo_router_without_hints",
      "file": "tests/migrations/test_multidb.py",
      "line": 129
    },
    {
      "id": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_run_sql_migrate_foo_router_with_hints",
      "type": "function",
      "name": "MultiDBOperationTests.test_run_sql_migrate_foo_router_with_hints",
      "file": "tests/migrations/test_multidb.py",
      "line": 133
    },
    {
      "id": "tests/migrations/test_multidb.py:MultiDBOperationTests._test_run_python",
      "type": "function",
      "name": "MultiDBOperationTests._test_run_python",
      "file": "tests/migrations/test_multidb.py",
      "line": 136
    },
    {
      "id": "tests/migrations/test_multidb.py:MultiDBOperationTests._test_run_python.inner_method",
      "type": "function",
      "name": "MultiDBOperationTests._test_run_python.inner_method",
      "file": "tests/migrations/test_multidb.py",
      "line": 141
    },
    {
      "id": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_run_python_migrate_nothing_router",
      "type": "function",
      "name": "MultiDBOperationTests.test_run_python_migrate_nothing_router",
      "file": "tests/migrations/test_multidb.py",
      "line": 162
    },
    {
      "id": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_run_python_migrate_foo_router_without_hints",
      "type": "function",
      "name": "MultiDBOperationTests.test_run_python_migrate_foo_router_without_hints",
      "file": "tests/migrations/test_multidb.py",
      "line": 166
    },
    {
      "id": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_run_python_migrate_foo_router_with_hints",
      "type": "function",
      "name": "MultiDBOperationTests.test_run_python_migrate_foo_router_with_hints",
      "file": "tests/migrations/test_multidb.py",
      "line": 170
    },
    {
      "id": "tests/migrations/test_exceptions.py",
      "type": "file",
      "name": "test_exceptions.py",
      "file": "tests/migrations/test_exceptions.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_exceptions.py:ExceptionTests",
      "type": "class",
      "name": "ExceptionTests",
      "file": "tests/migrations/test_exceptions.py",
      "line": 5
    },
    {
      "id": "tests/migrations/test_exceptions.py:ExceptionTests.test_node_not_found_error_repr",
      "type": "function",
      "name": "ExceptionTests.test_node_not_found_error_repr",
      "file": "tests/migrations/test_exceptions.py",
      "line": 6
    },
    {
      "id": "tests/migrations/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_state.py",
      "type": "file",
      "name": "test_state.py",
      "file": "tests/migrations/test_state.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_state.py:StateTests",
      "type": "class",
      "name": "StateTests",
      "file": "tests/migrations/test_state.py",
      "line": 20
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_create",
      "type": "function",
      "name": "StateTests.test_create",
      "file": "tests/migrations/test_state.py",
      "line": 25
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_create.Author",
      "type": "class",
      "name": "StateTests.test_create.Author",
      "file": "tests/migrations/test_state.py",
      "line": 32
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_create.Author.Meta",
      "type": "class",
      "name": "StateTests.test_create.Author.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 37
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_create.AuthorProxy",
      "type": "class",
      "name": "StateTests.test_create.AuthorProxy",
      "file": "tests/migrations/test_state.py",
      "line": 43
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_create.AuthorProxy.Meta",
      "type": "class",
      "name": "StateTests.test_create.AuthorProxy.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 44
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_create.SubAuthor",
      "type": "class",
      "name": "StateTests.test_create.SubAuthor",
      "file": "tests/migrations/test_state.py",
      "line": 50
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_create.SubAuthor.Meta",
      "type": "class",
      "name": "StateTests.test_create.SubAuthor.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 53
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_create.Book",
      "type": "class",
      "name": "StateTests.test_create.Book",
      "file": "tests/migrations/test_state.py",
      "line": 57
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_create.Book.Meta",
      "type": "class",
      "name": "StateTests.test_create.Book.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 62
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_create.Food",
      "type": "class",
      "name": "StateTests.test_create.Food",
      "file": "tests/migrations/test_state.py",
      "line": 69
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_create.Food.Meta",
      "type": "class",
      "name": "StateTests.test_create.Food.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 75
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_create.FoodNoManagers",
      "type": "class",
      "name": "StateTests.test_create.FoodNoManagers",
      "file": "tests/migrations/test_state.py",
      "line": 79
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_create.FoodNoManagers.Meta",
      "type": "class",
      "name": "StateTests.test_create.FoodNoManagers.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 81
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_create.FoodNoDefaultManager",
      "type": "class",
      "name": "StateTests.test_create.FoodNoDefaultManager",
      "file": "tests/migrations/test_state.py",
      "line": 85
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_create.FoodNoDefaultManager.Meta",
      "type": "class",
      "name": "StateTests.test_create.FoodNoDefaultManager.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 91
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_create.FoodOrderedManagers",
      "type": "class",
      "name": "StateTests.test_create.FoodOrderedManagers",
      "file": "tests/migrations/test_state.py",
      "line": 98
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_create.FoodOrderedManagers.Meta",
      "type": "class",
      "name": "StateTests.test_create.FoodOrderedManagers.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 106
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_custom_default_manager_added_to_the_model_state",
      "type": "function",
      "name": "StateTests.test_custom_default_manager_added_to_the_model_state",
      "file": "tests/migrations/test_state.py",
      "line": 187
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_custom_default_manager_added_to_the_model_state.Author",
      "type": "class",
      "name": "StateTests.test_custom_default_manager_added_to_the_model_state.Author",
      "file": "tests/migrations/test_state.py",
      "line": 195
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_custom_default_manager_added_to_the_model_state.Author.Meta",
      "type": "class",
      "name": "StateTests.test_custom_default_manager_added_to_the_model_state.Author.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 199
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_custom_default_manager_named_objects_with_false_migration_flag",
      "type": "function",
      "name": "StateTests.test_custom_default_manager_named_objects_with_false_migration_flag",
      "file": "tests/migrations/test_state.py",
      "line": 207
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_custom_default_manager_named_objects_with_false_migration_flag.Author",
      "type": "class",
      "name": "StateTests.test_custom_default_manager_named_objects_with_false_migration_flag.Author",
      "file": "tests/migrations/test_state.py",
      "line": 215
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_custom_default_manager_named_objects_with_false_migration_flag.Author.Meta",
      "type": "class",
      "name": "StateTests.test_custom_default_manager_named_objects_with_false_migration_flag.Author.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 218
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_no_duplicate_managers",
      "type": "function",
      "name": "StateTests.test_no_duplicate_managers",
      "file": "tests/migrations/test_state.py",
      "line": 226
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_no_duplicate_managers.PersonManager",
      "type": "class",
      "name": "StateTests.test_no_duplicate_managers.PersonManager",
      "file": "tests/migrations/test_state.py",
      "line": 234
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_no_duplicate_managers.Person",
      "type": "class",
      "name": "StateTests.test_no_duplicate_managers.Person",
      "file": "tests/migrations/test_state.py",
      "line": 237
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_no_duplicate_managers.Person.Meta",
      "type": "class",
      "name": "StateTests.test_no_duplicate_managers.Person.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 240
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_no_duplicate_managers.BossManager",
      "type": "class",
      "name": "StateTests.test_no_duplicate_managers.BossManager",
      "file": "tests/migrations/test_state.py",
      "line": 243
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_no_duplicate_managers.Boss",
      "type": "class",
      "name": "StateTests.test_no_duplicate_managers.Boss",
      "file": "tests/migrations/test_state.py",
      "line": 246
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_no_duplicate_managers.Boss.Meta",
      "type": "class",
      "name": "StateTests.test_no_duplicate_managers.Boss.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 249
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_custom_default_manager",
      "type": "function",
      "name": "StateTests.test_custom_default_manager",
      "file": "tests/migrations/test_state.py",
      "line": 257
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_custom_default_manager.Author",
      "type": "class",
      "name": "StateTests.test_custom_default_manager.Author",
      "file": "tests/migrations/test_state.py",
      "line": 260
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_custom_default_manager.Author.Meta",
      "type": "class",
      "name": "StateTests.test_custom_default_manager.Author.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 264
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_custom_base_manager",
      "type": "function",
      "name": "StateTests.test_custom_base_manager",
      "file": "tests/migrations/test_state.py",
      "line": 274
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_custom_base_manager.Author",
      "type": "class",
      "name": "StateTests.test_custom_base_manager.Author",
      "file": "tests/migrations/test_state.py",
      "line": 277
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_custom_base_manager.Author.Meta",
      "type": "class",
      "name": "StateTests.test_custom_base_manager.Author.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 281
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_custom_base_manager.Author2",
      "type": "class",
      "name": "StateTests.test_custom_base_manager.Author2",
      "file": "tests/migrations/test_state.py",
      "line": 286
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_custom_base_manager.Author2.Meta",
      "type": "class",
      "name": "StateTests.test_custom_base_manager.Author2.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 290
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_apps_bulk_update",
      "type": "function",
      "name": "StateTests.test_apps_bulk_update",
      "file": "tests/migrations/test_state.py",
      "line": 310
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render",
      "type": "function",
      "name": "StateTests.test_render",
      "file": "tests/migrations/test_state.py",
      "line": 326
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_model_inheritance",
      "type": "function",
      "name": "StateTests.test_render_model_inheritance",
      "file": "tests/migrations/test_state.py",
      "line": 387
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_model_inheritance.Book",
      "type": "class",
      "name": "StateTests.test_render_model_inheritance.Book",
      "file": "tests/migrations/test_state.py",
      "line": 388
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_model_inheritance.Book.Meta",
      "type": "class",
      "name": "StateTests.test_render_model_inheritance.Book.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 391
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_model_inheritance.Novel",
      "type": "class",
      "name": "StateTests.test_render_model_inheritance.Novel",
      "file": "tests/migrations/test_state.py",
      "line": 395
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_model_inheritance.Novel.Meta",
      "type": "class",
      "name": "StateTests.test_render_model_inheritance.Novel.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 396
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance",
      "type": "function",
      "name": "StateTests.test_render_model_with_multiple_inheritance",
      "file": "tests/migrations/test_state.py",
      "line": 412
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.Foo",
      "type": "class",
      "name": "StateTests.test_render_model_with_multiple_inheritance.Foo",
      "file": "tests/migrations/test_state.py",
      "line": 413
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.Foo.Meta",
      "type": "class",
      "name": "StateTests.test_render_model_with_multiple_inheritance.Foo.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 414
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.Bar",
      "type": "class",
      "name": "StateTests.test_render_model_with_multiple_inheritance.Bar",
      "file": "tests/migrations/test_state.py",
      "line": 418
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.Bar.Meta",
      "type": "class",
      "name": "StateTests.test_render_model_with_multiple_inheritance.Bar.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 419
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.FooBar",
      "type": "class",
      "name": "StateTests.test_render_model_with_multiple_inheritance.FooBar",
      "file": "tests/migrations/test_state.py",
      "line": 423
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.FooBar.Meta",
      "type": "class",
      "name": "StateTests.test_render_model_with_multiple_inheritance.FooBar.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 424
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.AbstractSubFooBar",
      "type": "class",
      "name": "StateTests.test_render_model_with_multiple_inheritance.AbstractSubFooBar",
      "file": "tests/migrations/test_state.py",
      "line": 428
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.AbstractSubFooBar.Meta",
      "type": "class",
      "name": "StateTests.test_render_model_with_multiple_inheritance.AbstractSubFooBar.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 429
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.SubFooBar",
      "type": "class",
      "name": "StateTests.test_render_model_with_multiple_inheritance.SubFooBar",
      "file": "tests/migrations/test_state.py",
      "line": 433
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.SubFooBar.Meta",
      "type": "class",
      "name": "StateTests.test_render_model_with_multiple_inheritance.SubFooBar.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 434
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies",
      "type": "function",
      "name": "StateTests.test_render_project_dependencies",
      "file": "tests/migrations/test_state.py",
      "line": 455
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.A",
      "type": "class",
      "name": "StateTests.test_render_project_dependencies.A",
      "file": "tests/migrations/test_state.py",
      "line": 462
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.A.Meta",
      "type": "class",
      "name": "StateTests.test_render_project_dependencies.A.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 463
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.B",
      "type": "class",
      "name": "StateTests.test_render_project_dependencies.B",
      "file": "tests/migrations/test_state.py",
      "line": 467
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.B.Meta",
      "type": "class",
      "name": "StateTests.test_render_project_dependencies.B.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 468
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.C",
      "type": "class",
      "name": "StateTests.test_render_project_dependencies.C",
      "file": "tests/migrations/test_state.py",
      "line": 472
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.C.Meta",
      "type": "class",
      "name": "StateTests.test_render_project_dependencies.C.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 473
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.D",
      "type": "class",
      "name": "StateTests.test_render_project_dependencies.D",
      "file": "tests/migrations/test_state.py",
      "line": 477
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.D.Meta",
      "type": "class",
      "name": "StateTests.test_render_project_dependencies.D.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 478
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.E",
      "type": "class",
      "name": "StateTests.test_render_project_dependencies.E",
      "file": "tests/migrations/test_state.py",
      "line": 482
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.E.Meta",
      "type": "class",
      "name": "StateTests.test_render_project_dependencies.E.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 483
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.F",
      "type": "class",
      "name": "StateTests.test_render_project_dependencies.F",
      "file": "tests/migrations/test_state.py",
      "line": 488
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.F.Meta",
      "type": "class",
      "name": "StateTests.test_render_project_dependencies.F.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 489
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_unique_app_labels",
      "type": "function",
      "name": "StateTests.test_render_unique_app_labels",
      "file": "tests/migrations/test_state.py",
      "line": 514
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_unique_app_labels.A",
      "type": "class",
      "name": "StateTests.test_render_unique_app_labels.A",
      "file": "tests/migrations/test_state.py",
      "line": 520
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_unique_app_labels.A.Meta",
      "type": "class",
      "name": "StateTests.test_render_unique_app_labels.A.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 521
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_unique_app_labels.B",
      "type": "class",
      "name": "StateTests.test_render_unique_app_labels.B",
      "file": "tests/migrations/test_state.py",
      "line": 524
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_render_unique_app_labels.B.Meta",
      "type": "class",
      "name": "StateTests.test_render_unique_app_labels.B.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 525
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_add_relations",
      "type": "function",
      "name": "StateTests.test_add_relations",
      "file": "tests/migrations/test_state.py",
      "line": 534
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_add_relations.A",
      "type": "class",
      "name": "StateTests.test_add_relations.A",
      "file": "tests/migrations/test_state.py",
      "line": 541
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_add_relations.A.Meta",
      "type": "class",
      "name": "StateTests.test_add_relations.A.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 542
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_add_relations.B",
      "type": "class",
      "name": "StateTests.test_add_relations.B",
      "file": "tests/migrations/test_state.py",
      "line": 546
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_add_relations.B.Meta",
      "type": "class",
      "name": "StateTests.test_add_relations.B.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 547
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_add_relations.C",
      "type": "class",
      "name": "StateTests.test_add_relations.C",
      "file": "tests/migrations/test_state.py",
      "line": 551
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_add_relations.C.Meta",
      "type": "class",
      "name": "StateTests.test_add_relations.C.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 552
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_remove_relations",
      "type": "function",
      "name": "StateTests.test_remove_relations",
      "file": "tests/migrations/test_state.py",
      "line": 594
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_remove_relations.A",
      "type": "class",
      "name": "StateTests.test_remove_relations.A",
      "file": "tests/migrations/test_state.py",
      "line": 601
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_remove_relations.A.Meta",
      "type": "class",
      "name": "StateTests.test_remove_relations.A.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 602
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_remove_relations.B",
      "type": "class",
      "name": "StateTests.test_remove_relations.B",
      "file": "tests/migrations/test_state.py",
      "line": 606
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_remove_relations.B.Meta",
      "type": "class",
      "name": "StateTests.test_remove_relations.B.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 609
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_remove_relations.get_model_a",
      "type": "function",
      "name": "StateTests.test_remove_relations.get_model_a",
      "file": "tests/migrations/test_state.py",
      "line": 613
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_self_relation",
      "type": "function",
      "name": "StateTests.test_self_relation",
      "file": "tests/migrations/test_state.py",
      "line": 645
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_self_relation.A",
      "type": "class",
      "name": "StateTests.test_self_relation.A",
      "file": "tests/migrations/test_state.py",
      "line": 650
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_self_relation.A.Meta",
      "type": "class",
      "name": "StateTests.test_self_relation.A.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 653
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_self_relation.get_model_a",
      "type": "function",
      "name": "StateTests.test_self_relation.get_model_a",
      "file": "tests/migrations/test_state.py",
      "line": 656
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_equality",
      "type": "function",
      "name": "StateTests.test_equality",
      "file": "tests/migrations/test_state.py",
      "line": 694
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_dangling_references_throw_error",
      "type": "function",
      "name": "StateTests.test_dangling_references_throw_error",
      "file": "tests/migrations/test_state.py",
      "line": 735
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_dangling_references_throw_error.Author",
      "type": "class",
      "name": "StateTests.test_dangling_references_throw_error.Author",
      "file": "tests/migrations/test_state.py",
      "line": 738
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_dangling_references_throw_error.Author.Meta",
      "type": "class",
      "name": "StateTests.test_dangling_references_throw_error.Author.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 741
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_dangling_references_throw_error.Publisher",
      "type": "class",
      "name": "StateTests.test_dangling_references_throw_error.Publisher",
      "file": "tests/migrations/test_state.py",
      "line": 745
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_dangling_references_throw_error.Publisher.Meta",
      "type": "class",
      "name": "StateTests.test_dangling_references_throw_error.Publisher.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 748
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_dangling_references_throw_error.Book",
      "type": "class",
      "name": "StateTests.test_dangling_references_throw_error.Book",
      "file": "tests/migrations/test_state.py",
      "line": 752
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_dangling_references_throw_error.Book.Meta",
      "type": "class",
      "name": "StateTests.test_dangling_references_throw_error.Book.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 756
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_dangling_references_throw_error.Magazine",
      "type": "class",
      "name": "StateTests.test_dangling_references_throw_error.Magazine",
      "file": "tests/migrations/test_state.py",
      "line": 760
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_dangling_references_throw_error.Magazine.Meta",
      "type": "class",
      "name": "StateTests.test_dangling_references_throw_error.Magazine.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 763
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_real_apps",
      "type": "function",
      "name": "StateTests.test_real_apps",
      "file": "tests/migrations/test_state.py",
      "line": 814
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_real_apps.TestModel",
      "type": "class",
      "name": "StateTests.test_real_apps.TestModel",
      "file": "tests/migrations/test_state.py",
      "line": 821
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_real_apps.TestModel.Meta",
      "type": "class",
      "name": "StateTests.test_real_apps.TestModel.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 824
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_ignore_order_wrt",
      "type": "function",
      "name": "StateTests.test_ignore_order_wrt",
      "file": "tests/migrations/test_state.py",
      "line": 843
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_ignore_order_wrt.Author",
      "type": "class",
      "name": "StateTests.test_ignore_order_wrt.Author",
      "file": "tests/migrations/test_state.py",
      "line": 850
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_ignore_order_wrt.Author.Meta",
      "type": "class",
      "name": "StateTests.test_ignore_order_wrt.Author.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 853
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_ignore_order_wrt.Book",
      "type": "class",
      "name": "StateTests.test_ignore_order_wrt.Book",
      "file": "tests/migrations/test_state.py",
      "line": 857
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_ignore_order_wrt.Book.Meta",
      "type": "class",
      "name": "StateTests.test_ignore_order_wrt.Book.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 860
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_manager_refer_correct_model_version",
      "type": "function",
      "name": "StateTests.test_manager_refer_correct_model_version",
      "file": "tests/migrations/test_state.py",
      "line": 874
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_choices_iterator",
      "type": "function",
      "name": "StateTests.test_choices_iterator",
      "file": "tests/migrations/test_state.py",
      "line": 911
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_choices_iterator.Author",
      "type": "class",
      "name": "StateTests.test_choices_iterator.Author",
      "file": "tests/migrations/test_state.py",
      "line": 919
    },
    {
      "id": "tests/migrations/test_state.py:StateTests.test_choices_iterator.Author.Meta",
      "type": "class",
      "name": "StateTests.test_choices_iterator.Author.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 923
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests",
      "type": "class",
      "name": "ModelStateTests",
      "file": "tests/migrations/test_state.py",
      "line": 932
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_custom_model_base",
      "type": "function",
      "name": "ModelStateTests.test_custom_model_base",
      "file": "tests/migrations/test_state.py",
      "line": 933
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_bound_field_sanity_check",
      "type": "function",
      "name": "ModelStateTests.test_bound_field_sanity_check",
      "file": "tests/migrations/test_state.py",
      "line": 937
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_sanity_check_to",
      "type": "function",
      "name": "ModelStateTests.test_sanity_check_to",
      "file": "tests/migrations/test_state.py",
      "line": 943
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_sanity_check_through",
      "type": "function",
      "name": "ModelStateTests.test_sanity_check_through",
      "file": "tests/migrations/test_state.py",
      "line": 952
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_sanity_index_name",
      "type": "function",
      "name": "ModelStateTests.test_sanity_index_name",
      "file": "tests/migrations/test_state.py",
      "line": 962
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_fields_immutability",
      "type": "function",
      "name": "ModelStateTests.test_fields_immutability",
      "file": "tests/migrations/test_state.py",
      "line": 969
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_repr",
      "type": "function",
      "name": "ModelStateTests.test_repr",
      "file": "tests/migrations/test_state.py",
      "line": 979
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable",
      "type": "function",
      "name": "ModelStateTests.test_create_swappable",
      "file": "tests/migrations/test_state.py",
      "line": 990
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable.Author",
      "type": "class",
      "name": "ModelStateTests.test_create_swappable.Author",
      "file": "tests/migrations/test_state.py",
      "line": 996
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable.Author.Meta",
      "type": "class",
      "name": "ModelStateTests.test_create_swappable.Author.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 1001
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract",
      "type": "function",
      "name": "ModelStateTests.test_create_swappable_from_abstract",
      "file": "tests/migrations/test_state.py",
      "line": 1018
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract.SearchableLocation",
      "type": "class",
      "name": "ModelStateTests.test_create_swappable_from_abstract.SearchableLocation",
      "file": "tests/migrations/test_state.py",
      "line": 1025
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract.SearchableLocation.Meta",
      "type": "class",
      "name": "ModelStateTests.test_create_swappable_from_abstract.SearchableLocation.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 1028
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract.Station",
      "type": "class",
      "name": "ModelStateTests.test_create_swappable_from_abstract.Station",
      "file": "tests/migrations/test_state.py",
      "line": 1032
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract.Station.Meta",
      "type": "class",
      "name": "ModelStateTests.test_create_swappable_from_abstract.Station.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 1035
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract.BusStation",
      "type": "class",
      "name": "ModelStateTests.test_create_swappable_from_abstract.BusStation",
      "file": "tests/migrations/test_state.py",
      "line": 1038
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract.BusStation.Meta",
      "type": "class",
      "name": "ModelStateTests.test_create_swappable_from_abstract.BusStation.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 1042
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_custom_manager_swappable",
      "type": "function",
      "name": "ModelStateTests.test_custom_manager_swappable",
      "file": "tests/migrations/test_state.py",
      "line": 1064
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_custom_manager_swappable.Food",
      "type": "class",
      "name": "ModelStateTests.test_custom_manager_swappable.Food",
      "file": "tests/migrations/test_state.py",
      "line": 1070
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_custom_manager_swappable.Food.Meta",
      "type": "class",
      "name": "ModelStateTests.test_custom_manager_swappable.Food.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 1076
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_order_with_respect_to_private_field",
      "type": "function",
      "name": "ModelStateTests.test_order_with_respect_to_private_field",
      "file": "tests/migrations/test_state.py",
      "line": 1088
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_order_with_respect_to_private_field.PrivateFieldModel",
      "type": "class",
      "name": "ModelStateTests.test_order_with_respect_to_private_field.PrivateFieldModel",
      "file": "tests/migrations/test_state.py",
      "line": 1089
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_order_with_respect_to_private_field.PrivateFieldModel.Meta",
      "type": "class",
      "name": "ModelStateTests.test_order_with_respect_to_private_field.PrivateFieldModel.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 1094
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_abstract_model_children_inherit_indexes",
      "type": "function",
      "name": "ModelStateTests.test_abstract_model_children_inherit_indexes",
      "file": "tests/migrations/test_state.py",
      "line": 1101
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_abstract_model_children_inherit_indexes.Abstract",
      "type": "class",
      "name": "ModelStateTests.test_abstract_model_children_inherit_indexes.Abstract",
      "file": "tests/migrations/test_state.py",
      "line": 1102
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_abstract_model_children_inherit_indexes.Abstract.Meta",
      "type": "class",
      "name": "ModelStateTests.test_abstract_model_children_inherit_indexes.Abstract.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 1105
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_abstract_model_children_inherit_indexes.Child1",
      "type": "class",
      "name": "ModelStateTests.test_abstract_model_children_inherit_indexes.Child1",
      "file": "tests/migrations/test_state.py",
      "line": 1110
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_abstract_model_children_inherit_indexes.Child2",
      "type": "class",
      "name": "ModelStateTests.test_abstract_model_children_inherit_indexes.Child2",
      "file": "tests/migrations/test_state.py",
      "line": 1113
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_explicit_index_name",
      "type": "function",
      "name": "ModelStateTests.test_explicit_index_name",
      "file": "tests/migrations/test_state.py",
      "line": 1128
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_explicit_index_name.TestModel",
      "type": "class",
      "name": "ModelStateTests.test_explicit_index_name.TestModel",
      "file": "tests/migrations/test_state.py",
      "line": 1129
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_explicit_index_name.TestModel.Meta",
      "type": "class",
      "name": "ModelStateTests.test_explicit_index_name.TestModel.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 1132
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_from_model_constraints",
      "type": "function",
      "name": "ModelStateTests.test_from_model_constraints",
      "file": "tests/migrations/test_state.py",
      "line": 1141
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_from_model_constraints.ModelWithConstraints",
      "type": "class",
      "name": "ModelStateTests.test_from_model_constraints.ModelWithConstraints",
      "file": "tests/migrations/test_state.py",
      "line": 1142
    },
    {
      "id": "tests/migrations/test_state.py:ModelStateTests.test_from_model_constraints.ModelWithConstraints.Meta",
      "type": "class",
      "name": "ModelStateTests.test_from_model_constraints.ModelWithConstraints.Meta",
      "file": "tests/migrations/test_state.py",
      "line": 1145
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests",
      "type": "class",
      "name": "RelatedModelsTests",
      "file": "tests/migrations/test_state.py",
      "line": 1156
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests.setUp",
      "type": "function",
      "name": "RelatedModelsTests.setUp",
      "file": "tests/migrations/test_state.py",
      "line": 1158
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests.create_model",
      "type": "function",
      "name": "RelatedModelsTests.create_model",
      "file": "tests/migrations/test_state.py",
      "line": 1161
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests.assertRelated",
      "type": "function",
      "name": "RelatedModelsTests.assertRelated",
      "file": "tests/migrations/test_state.py",
      "line": 1183
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests.test_unrelated",
      "type": "function",
      "name": "RelatedModelsTests.test_unrelated",
      "file": "tests/migrations/test_state.py",
      "line": 1189
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests.test_direct_fk",
      "type": "function",
      "name": "RelatedModelsTests.test_direct_fk",
      "file": "tests/migrations/test_state.py",
      "line": 1195
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests.test_direct_hidden_fk",
      "type": "function",
      "name": "RelatedModelsTests.test_direct_hidden_fk",
      "file": "tests/migrations/test_state.py",
      "line": 1201
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests.test_fk_through_proxy",
      "type": "function",
      "name": "RelatedModelsTests.test_fk_through_proxy",
      "file": "tests/migrations/test_state.py",
      "line": 1207
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests.test_nested_fk",
      "type": "function",
      "name": "RelatedModelsTests.test_nested_fk",
      "file": "tests/migrations/test_state.py",
      "line": 1217
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests.test_two_sided",
      "type": "function",
      "name": "RelatedModelsTests.test_two_sided",
      "file": "tests/migrations/test_state.py",
      "line": 1225
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests.test_circle",
      "type": "function",
      "name": "RelatedModelsTests.test_circle",
      "file": "tests/migrations/test_state.py",
      "line": 1231
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests.test_base",
      "type": "function",
      "name": "RelatedModelsTests.test_base",
      "file": "tests/migrations/test_state.py",
      "line": 1239
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests.test_nested_base",
      "type": "function",
      "name": "RelatedModelsTests.test_nested_base",
      "file": "tests/migrations/test_state.py",
      "line": 1245
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests.test_multiple_bases",
      "type": "function",
      "name": "RelatedModelsTests.test_multiple_bases",
      "file": "tests/migrations/test_state.py",
      "line": 1253
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests.test_multiple_nested_bases",
      "type": "function",
      "name": "RelatedModelsTests.test_multiple_nested_bases",
      "file": "tests/migrations/test_state.py",
      "line": 1261
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests.test_base_to_base_fk",
      "type": "function",
      "name": "RelatedModelsTests.test_base_to_base_fk",
      "file": "tests/migrations/test_state.py",
      "line": 1279
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests.test_base_to_subclass_fk",
      "type": "function",
      "name": "RelatedModelsTests.test_base_to_subclass_fk",
      "file": "tests/migrations/test_state.py",
      "line": 1289
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests.test_direct_m2m",
      "type": "function",
      "name": "RelatedModelsTests.test_direct_m2m",
      "file": "tests/migrations/test_state.py",
      "line": 1299
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests.test_direct_m2m_self",
      "type": "function",
      "name": "RelatedModelsTests.test_direct_m2m_self",
      "file": "tests/migrations/test_state.py",
      "line": 1305
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests.test_intermediate_m2m_self",
      "type": "function",
      "name": "RelatedModelsTests.test_intermediate_m2m_self",
      "file": "tests/migrations/test_state.py",
      "line": 1309
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests.test_intermediate_m2m",
      "type": "function",
      "name": "RelatedModelsTests.test_intermediate_m2m",
      "file": "tests/migrations/test_state.py",
      "line": 1318
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests.test_intermediate_m2m_extern_fk",
      "type": "function",
      "name": "RelatedModelsTests.test_intermediate_m2m_extern_fk",
      "file": "tests/migrations/test_state.py",
      "line": 1329
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests.test_intermediate_m2m_base",
      "type": "function",
      "name": "RelatedModelsTests.test_intermediate_m2m_base",
      "file": "tests/migrations/test_state.py",
      "line": 1343
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests.test_generic_fk",
      "type": "function",
      "name": "RelatedModelsTests.test_generic_fk",
      "file": "tests/migrations/test_state.py",
      "line": 1356
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests.test_abstract_base",
      "type": "function",
      "name": "RelatedModelsTests.test_abstract_base",
      "file": "tests/migrations/test_state.py",
      "line": 1367
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests.test_nested_abstract_base",
      "type": "function",
      "name": "RelatedModelsTests.test_nested_abstract_base",
      "file": "tests/migrations/test_state.py",
      "line": 1373
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests.test_proxy_base",
      "type": "function",
      "name": "RelatedModelsTests.test_proxy_base",
      "file": "tests/migrations/test_state.py",
      "line": 1381
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests.test_nested_proxy_base",
      "type": "function",
      "name": "RelatedModelsTests.test_nested_proxy_base",
      "file": "tests/migrations/test_state.py",
      "line": 1387
    },
    {
      "id": "tests/migrations/test_state.py:RelatedModelsTests.test_multiple_mixed_bases",
      "type": "function",
      "name": "RelatedModelsTests.test_multiple_mixed_bases",
      "file": "tests/migrations/test_state.py",
      "line": 1395
    },
    {
      "id": "tests/migrations/test_deprecated_fields.py",
      "type": "file",
      "name": "test_deprecated_fields.py",
      "file": "tests/migrations/test_deprecated_fields.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_deprecated_fields.py:Tests",
      "type": "class",
      "name": "Tests",
      "file": "tests/migrations/test_deprecated_fields.py",
      "line": 7
    },
    {
      "id": "tests/migrations/test_deprecated_fields.py:Tests.test_migrate",
      "type": "function",
      "name": "Tests.test_migrate",
      "file": "tests/migrations/test_deprecated_fields.py",
      "line": 12
    },
    {
      "id": "tests/migrations/test_commands.py",
      "type": "file",
      "name": "test_commands.py",
      "file": "tests/migrations/test_commands.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests",
      "type": "class",
      "name": "MigrateTests",
      "file": "tests/migrations/test_commands.py",
      "line": 24
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_migrate",
      "type": "function",
      "name": "MigrateTests.test_migrate",
      "file": "tests/migrations/test_commands.py",
      "line": 31
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_migrate_with_system_checks",
      "type": "function",
      "name": "MigrateTests.test_migrate_with_system_checks",
      "file": "tests/migrations/test_commands.py",
      "line": 71
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_app_without_migrations",
      "type": "function",
      "name": "MigrateTests.test_app_without_migrations",
      "file": "tests/migrations/test_commands.py",
      "line": 77
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_ambigious_prefix",
      "type": "function",
      "name": "MigrateTests.test_ambigious_prefix",
      "file": "tests/migrations/test_commands.py",
      "line": 83
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_unknown_prefix",
      "type": "function",
      "name": "MigrateTests.test_unknown_prefix",
      "file": "tests/migrations/test_commands.py",
      "line": 92
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_migrate_initial_false",
      "type": "function",
      "name": "MigrateTests.test_migrate_initial_false",
      "file": "tests/migrations/test_commands.py",
      "line": 98
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_migrate_fake_initial",
      "type": "function",
      "name": "MigrateTests.test_migrate_fake_initial",
      "file": "tests/migrations/test_commands.py",
      "line": 125
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_migrate_fake_split_initial",
      "type": "function",
      "name": "MigrateTests.test_migrate_fake_split_initial",
      "file": "tests/migrations/test_commands.py",
      "line": 201
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_migrate_conflict_exit",
      "type": "function",
      "name": "MigrateTests.test_migrate_conflict_exit",
      "file": "tests/migrations/test_commands.py",
      "line": 219
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_showmigrations_list",
      "type": "function",
      "name": "MigrateTests.test_showmigrations_list",
      "file": "tests/migrations/test_commands.py",
      "line": 227
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_showmigrations_plan",
      "type": "function",
      "name": "MigrateTests.test_showmigrations_plan",
      "file": "tests/migrations/test_commands.py",
      "line": 257
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_migrate_plan",
      "type": "function",
      "name": "MigrateTests.test_migrate_plan",
      "file": "tests/migrations/test_commands.py",
      "line": 302
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_showmigrations_no_migrations",
      "type": "function",
      "name": "MigrateTests.test_showmigrations_no_migrations",
      "file": "tests/migrations/test_commands.py",
      "line": 369
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_showmigrations_unmigrated_app",
      "type": "function",
      "name": "MigrateTests.test_showmigrations_unmigrated_app",
      "file": "tests/migrations/test_commands.py",
      "line": 375
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_showmigrations_plan_no_migrations",
      "type": "function",
      "name": "MigrateTests.test_showmigrations_plan_no_migrations",
      "file": "tests/migrations/test_commands.py",
      "line": 381
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_showmigrations_plan_squashed",
      "type": "function",
      "name": "MigrateTests.test_showmigrations_plan_squashed",
      "file": "tests/migrations/test_commands.py",
      "line": 394
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_showmigrations_plan_single_app_label",
      "type": "function",
      "name": "MigrateTests.test_showmigrations_plan_single_app_label",
      "file": "tests/migrations/test_commands.py",
      "line": 449
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_showmigrations_plan_multiple_app_labels",
      "type": "function",
      "name": "MigrateTests.test_showmigrations_plan_multiple_app_labels",
      "file": "tests/migrations/test_commands.py",
      "line": 488
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_showmigrations_plan_app_label_no_migrations",
      "type": "function",
      "name": "MigrateTests.test_showmigrations_plan_app_label_no_migrations",
      "file": "tests/migrations/test_commands.py",
      "line": 518
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_sqlmigrate_forwards",
      "type": "function",
      "name": "MigrateTests.test_sqlmigrate_forwards",
      "file": "tests/migrations/test_commands.py",
      "line": 524
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_sqlmigrate_backwards",
      "type": "function",
      "name": "MigrateTests.test_sqlmigrate_backwards",
      "file": "tests/migrations/test_commands.py",
      "line": 562
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_sqlmigrate_for_non_atomic_migration",
      "type": "function",
      "name": "MigrateTests.test_sqlmigrate_for_non_atomic_migration",
      "file": "tests/migrations/test_commands.py",
      "line": 607
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_regression_22823_unmigrated_fk_to_migrated_model",
      "type": "function",
      "name": "MigrateTests.test_regression_22823_unmigrated_fk_to_migrated_model",
      "file": "tests/migrations/test_commands.py",
      "line": 626
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_migrate_syncdb_deferred_sql_executed_with_schemaeditor",
      "type": "function",
      "name": "MigrateTests.test_migrate_syncdb_deferred_sql_executed_with_schemaeditor",
      "file": "tests/migrations/test_commands.py",
      "line": 647
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_migrate_syncdb_app_with_migrations",
      "type": "function",
      "name": "MigrateTests.test_migrate_syncdb_app_with_migrations",
      "file": "tests/migrations/test_commands.py",
      "line": 667
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_migrate_syncdb_app_label",
      "type": "function",
      "name": "MigrateTests.test_migrate_syncdb_app_label",
      "file": "tests/migrations/test_commands.py",
      "line": 676
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_migrate_record_replaced",
      "type": "function",
      "name": "MigrateTests.test_migrate_record_replaced",
      "file": "tests/migrations/test_commands.py",
      "line": 690
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_migrate_record_squashed",
      "type": "function",
      "name": "MigrateTests.test_migrate_record_squashed",
      "file": "tests/migrations/test_commands.py",
      "line": 712
    },
    {
      "id": "tests/migrations/test_commands.py:MigrateTests.test_migrate_inconsistent_history",
      "type": "function",
      "name": "MigrateTests.test_migrate_inconsistent_history",
      "file": "tests/migrations/test_commands.py",
      "line": 735
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "type": "class",
      "name": "MakeMigrationsTests",
      "file": "tests/migrations/test_commands.py",
      "line": 749
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.setUp",
      "type": "function",
      "name": "MakeMigrationsTests.setUp",
      "file": "tests/migrations/test_commands.py",
      "line": 754
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.tearDown",
      "type": "function",
      "name": "MakeMigrationsTests.tearDown",
      "file": "tests/migrations/test_commands.py",
      "line": 758
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_files_content",
      "type": "function",
      "name": "MakeMigrationsTests.test_files_content",
      "file": "tests/migrations/test_commands.py",
      "line": 764
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_order",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_order",
      "file": "tests/migrations/test_commands.py",
      "line": 792
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_empty_connections",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_empty_connections",
      "file": "tests/migrations/test_commands.py",
      "line": 805
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_consistency_checks_respect_routers",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_consistency_checks_respect_routers",
      "file": "tests/migrations/test_commands.py",
      "line": 819
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_consistency_checks_respect_routers.patched_has_table",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_consistency_checks_respect_routers.patched_has_table",
      "file": "tests/migrations/test_commands.py",
      "line": 824
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_failing_migration",
      "type": "function",
      "name": "MakeMigrationsTests.test_failing_migration",
      "file": "tests/migrations/test_commands.py",
      "line": 870
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_conflict_exit",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_conflict_exit",
      "file": "tests/migrations/test_commands.py",
      "line": 881
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_merge_no_conflict",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_merge_no_conflict",
      "file": "tests/migrations/test_commands.py",
      "line": 899
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_empty_no_app_specified",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_empty_no_app_specified",
      "file": "tests/migrations/test_commands.py",
      "line": 908
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_empty_migration",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_empty_migration",
      "file": "tests/migrations/test_commands.py",
      "line": 916
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_disabled_migrations_for_app",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_disabled_migrations_for_app",
      "file": "tests/migrations/test_commands.py",
      "line": 936
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_no_changes_no_apps",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_no_changes_no_apps",
      "file": "tests/migrations/test_commands.py",
      "line": 948
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_no_changes",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_no_changes",
      "file": "tests/migrations/test_commands.py",
      "line": 956
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_no_apps_initial",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_no_apps_initial",
      "file": "tests/migrations/test_commands.py",
      "line": 965
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_no_init",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_no_init",
      "file": "tests/migrations/test_commands.py",
      "line": 975
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_migrations_announce",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_migrations_announce",
      "file": "tests/migrations/test_commands.py",
      "line": 982
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_no_common_ancestor",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_no_common_ancestor",
      "file": "tests/migrations/test_commands.py",
      "line": 991
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_interactive_reject",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_interactive_reject",
      "file": "tests/migrations/test_commands.py",
      "line": 1003
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_interactive_accept",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_interactive_accept",
      "file": "tests/migrations/test_commands.py",
      "line": 1014
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_default_merge_name",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_default_merge_name",
      "file": "tests/migrations/test_commands.py",
      "line": 1028
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_not_null_addition",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_non_interactive_not_null_addition",
      "file": "tests/migrations/test_commands.py",
      "line": 1038
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_not_null_addition.SillyModel",
      "type": "class",
      "name": "MakeMigrationsTests.test_makemigrations_non_interactive_not_null_addition.SillyModel",
      "file": "tests/migrations/test_commands.py",
      "line": 1043
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_not_null_addition.SillyModel.Meta",
      "type": "class",
      "name": "MakeMigrationsTests.test_makemigrations_non_interactive_not_null_addition.SillyModel.Meta",
      "file": "tests/migrations/test_commands.py",
      "line": 1047
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_not_null_alteration",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_non_interactive_not_null_alteration",
      "file": "tests/migrations/test_commands.py",
      "line": 1055
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_not_null_alteration.Author",
      "type": "class",
      "name": "MakeMigrationsTests.test_makemigrations_non_interactive_not_null_alteration.Author",
      "file": "tests/migrations/test_commands.py",
      "line": 1060
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_not_null_alteration.Author.Meta",
      "type": "class",
      "name": "MakeMigrationsTests.test_makemigrations_non_interactive_not_null_alteration.Author.Meta",
      "file": "tests/migrations/test_commands.py",
      "line": 1065
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_no_model_rename",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_non_interactive_no_model_rename",
      "file": "tests/migrations/test_commands.py",
      "line": 1073
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_no_model_rename.RenamedModel",
      "type": "class",
      "name": "MakeMigrationsTests.test_makemigrations_non_interactive_no_model_rename.RenamedModel",
      "file": "tests/migrations/test_commands.py",
      "line": 1078
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_no_model_rename.RenamedModel.Meta",
      "type": "class",
      "name": "MakeMigrationsTests.test_makemigrations_non_interactive_no_model_rename.RenamedModel.Meta",
      "file": "tests/migrations/test_commands.py",
      "line": 1081
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_no_field_rename",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_non_interactive_no_field_rename",
      "file": "tests/migrations/test_commands.py",
      "line": 1090
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_no_field_rename.SillyModel",
      "type": "class",
      "name": "MakeMigrationsTests.test_makemigrations_non_interactive_no_field_rename.SillyModel",
      "file": "tests/migrations/test_commands.py",
      "line": 1095
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_no_field_rename.SillyModel.Meta",
      "type": "class",
      "name": "MakeMigrationsTests.test_makemigrations_non_interactive_no_field_rename.SillyModel.Meta",
      "file": "tests/migrations/test_commands.py",
      "line": 1098
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_handle_merge",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_handle_merge",
      "file": "tests/migrations/test_commands.py",
      "line": 1107
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigration_merge_dry_run",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigration_merge_dry_run",
      "file": "tests/migrations/test_commands.py",
      "line": 1122
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigration_merge_dry_run_verbosity_3",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigration_merge_dry_run_verbosity_3",
      "file": "tests/migrations/test_commands.py",
      "line": 1141
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_dry_run",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_dry_run",
      "file": "tests/migrations/test_commands.py",
      "line": 1169
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_dry_run.SillyModel",
      "type": "class",
      "name": "MakeMigrationsTests.test_makemigrations_dry_run.SillyModel",
      "file": "tests/migrations/test_commands.py",
      "line": 1173
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_dry_run.SillyModel.Meta",
      "type": "class",
      "name": "MakeMigrationsTests.test_makemigrations_dry_run.SillyModel.Meta",
      "file": "tests/migrations/test_commands.py",
      "line": 1177
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_dry_run_verbosity_3",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_dry_run_verbosity_3",
      "file": "tests/migrations/test_commands.py",
      "line": 1186
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_dry_run_verbosity_3.SillyModel",
      "type": "class",
      "name": "MakeMigrationsTests.test_makemigrations_dry_run_verbosity_3.SillyModel",
      "file": "tests/migrations/test_commands.py",
      "line": 1191
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_dry_run_verbosity_3.SillyModel.Meta",
      "type": "class",
      "name": "MakeMigrationsTests.test_makemigrations_dry_run_verbosity_3.SillyModel.Meta",
      "file": "tests/migrations/test_commands.py",
      "line": 1195
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_migrations_modules_path_not_exist",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_migrations_modules_path_not_exist",
      "file": "tests/migrations/test_commands.py",
      "line": 1214
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_migrations_modules_path_not_exist.SillyModel",
      "type": "class",
      "name": "MakeMigrationsTests.test_makemigrations_migrations_modules_path_not_exist.SillyModel",
      "file": "tests/migrations/test_commands.py",
      "line": 1220
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_migrations_modules_path_not_exist.SillyModel.Meta",
      "type": "class",
      "name": "MakeMigrationsTests.test_makemigrations_migrations_modules_path_not_exist.SillyModel.Meta",
      "file": "tests/migrations/test_commands.py",
      "line": 1223
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_migrations_modules_nonexistent_toplevel_package",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_migrations_modules_nonexistent_toplevel_package",
      "file": "tests/migrations/test_commands.py",
      "line": 1239
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_interactive_by_default",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_interactive_by_default",
      "file": "tests/migrations/test_commands.py",
      "line": 1248
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_unspecified_app_with_conflict_no_merge",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_unspecified_app_with_conflict_no_merge",
      "file": "tests/migrations/test_commands.py",
      "line": 1268
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_unspecified_app_with_conflict_merge",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_unspecified_app_with_conflict_merge",
      "file": "tests/migrations/test_commands.py",
      "line": 1280
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_merge_dont_output_dependency_operations",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_merge_dont_output_dependency_operations",
      "file": "tests/migrations/test_commands.py",
      "line": 1298
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_with_custom_name",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_with_custom_name",
      "file": "tests/migrations/test_commands.py",
      "line": 1327
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_with_custom_name.cmd",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_with_custom_name.cmd",
      "file": "tests/migrations/test_commands.py",
      "line": 1333
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_with_invalid_custom_name",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_with_invalid_custom_name",
      "file": "tests/migrations/test_commands.py",
      "line": 1359
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_check",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_check",
      "file": "tests/migrations/test_commands.py",
      "line": 1364
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_migration_path_output",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_migration_path_output",
      "file": "tests/migrations/test_commands.py",
      "line": 1376
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_migration_path_output_valueerror",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_migration_path_output_valueerror",
      "file": "tests/migrations/test_commands.py",
      "line": 1388
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_inconsistent_history",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_inconsistent_history",
      "file": "tests/migrations/test_commands.py",
      "line": 1401
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_auto_now_add_interactive",
      "type": "function",
      "name": "MakeMigrationsTests.test_makemigrations_auto_now_add_interactive",
      "file": "tests/migrations/test_commands.py",
      "line": 1415
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_auto_now_add_interactive.Entry",
      "type": "class",
      "name": "MakeMigrationsTests.test_makemigrations_auto_now_add_interactive.Entry",
      "file": "tests/migrations/test_commands.py",
      "line": 1420
    },
    {
      "id": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_auto_now_add_interactive.Entry.Meta",
      "type": "class",
      "name": "MakeMigrationsTests.test_makemigrations_auto_now_add_interactive.Entry.Meta",
      "file": "tests/migrations/test_commands.py",
      "line": 1424
    },
    {
      "id": "tests/migrations/test_commands.py:SquashMigrationsTests",
      "type": "class",
      "name": "SquashMigrationsTests",
      "file": "tests/migrations/test_commands.py",
      "line": 1438
    },
    {
      "id": "tests/migrations/test_commands.py:SquashMigrationsTests.test_squashmigrations_squashes",
      "type": "function",
      "name": "SquashMigrationsTests.test_squashmigrations_squashes",
      "file": "tests/migrations/test_commands.py",
      "line": 1443
    },
    {
      "id": "tests/migrations/test_commands.py:SquashMigrationsTests.test_squashmigrations_initial_attribute",
      "type": "function",
      "name": "SquashMigrationsTests.test_squashmigrations_initial_attribute",
      "file": "tests/migrations/test_commands.py",
      "line": 1453
    },
    {
      "id": "tests/migrations/test_commands.py:SquashMigrationsTests.test_squashmigrations_optimizes",
      "type": "function",
      "name": "SquashMigrationsTests.test_squashmigrations_optimizes",
      "file": "tests/migrations/test_commands.py",
      "line": 1462
    },
    {
      "id": "tests/migrations/test_commands.py:SquashMigrationsTests.test_ticket_23799_squashmigrations_no_optimize",
      "type": "function",
      "name": "SquashMigrationsTests.test_ticket_23799_squashmigrations_no_optimize",
      "file": "tests/migrations/test_commands.py",
      "line": 1471
    },
    {
      "id": "tests/migrations/test_commands.py:SquashMigrationsTests.test_squashmigrations_valid_start",
      "type": "function",
      "name": "SquashMigrationsTests.test_squashmigrations_valid_start",
      "file": "tests/migrations/test_commands.py",
      "line": 1481
    },
    {
      "id": "tests/migrations/test_commands.py:SquashMigrationsTests.test_squashmigrations_invalid_start",
      "type": "function",
      "name": "SquashMigrationsTests.test_squashmigrations_invalid_start",
      "file": "tests/migrations/test_commands.py",
      "line": 1500
    },
    {
      "id": "tests/migrations/test_commands.py:SquashMigrationsTests.test_squashed_name_with_start_migration_name",
      "type": "function",
      "name": "SquashMigrationsTests.test_squashed_name_with_start_migration_name",
      "file": "tests/migrations/test_commands.py",
      "line": 1512
    },
    {
      "id": "tests/migrations/test_commands.py:SquashMigrationsTests.test_squashed_name_without_start_migration_name",
      "type": "function",
      "name": "SquashMigrationsTests.test_squashed_name_without_start_migration_name",
      "file": "tests/migrations/test_commands.py",
      "line": 1523
    },
    {
      "id": "tests/migrations/test_commands.py:AppLabelErrorTests",
      "type": "class",
      "name": "AppLabelErrorTests",
      "file": "tests/migrations/test_commands.py",
      "line": 1535
    },
    {
      "id": "tests/migrations/test_commands.py:AppLabelErrorTests.test_makemigrations_nonexistent_app_label",
      "type": "function",
      "name": "AppLabelErrorTests.test_makemigrations_nonexistent_app_label",
      "file": "tests/migrations/test_commands.py",
      "line": 1548
    },
    {
      "id": "tests/migrations/test_commands.py:AppLabelErrorTests.test_makemigrations_app_name_specified_as_label",
      "type": "function",
      "name": "AppLabelErrorTests.test_makemigrations_app_name_specified_as_label",
      "file": "tests/migrations/test_commands.py",
      "line": 1554
    },
    {
      "id": "tests/migrations/test_commands.py:AppLabelErrorTests.test_migrate_nonexistent_app_label",
      "type": "function",
      "name": "AppLabelErrorTests.test_migrate_nonexistent_app_label",
      "file": "tests/migrations/test_commands.py",
      "line": 1560
    },
    {
      "id": "tests/migrations/test_commands.py:AppLabelErrorTests.test_migrate_app_name_specified_as_label",
      "type": "function",
      "name": "AppLabelErrorTests.test_migrate_app_name_specified_as_label",
      "file": "tests/migrations/test_commands.py",
      "line": 1564
    },
    {
      "id": "tests/migrations/test_commands.py:AppLabelErrorTests.test_showmigrations_nonexistent_app_label",
      "type": "function",
      "name": "AppLabelErrorTests.test_showmigrations_nonexistent_app_label",
      "file": "tests/migrations/test_commands.py",
      "line": 1568
    },
    {
      "id": "tests/migrations/test_commands.py:AppLabelErrorTests.test_showmigrations_app_name_specified_as_label",
      "type": "function",
      "name": "AppLabelErrorTests.test_showmigrations_app_name_specified_as_label",
      "file": "tests/migrations/test_commands.py",
      "line": 1574
    },
    {
      "id": "tests/migrations/test_commands.py:AppLabelErrorTests.test_sqlmigrate_nonexistent_app_label",
      "type": "function",
      "name": "AppLabelErrorTests.test_sqlmigrate_nonexistent_app_label",
      "file": "tests/migrations/test_commands.py",
      "line": 1580
    },
    {
      "id": "tests/migrations/test_commands.py:AppLabelErrorTests.test_sqlmigrate_app_name_specified_as_label",
      "type": "function",
      "name": "AppLabelErrorTests.test_sqlmigrate_app_name_specified_as_label",
      "file": "tests/migrations/test_commands.py",
      "line": 1584
    },
    {
      "id": "tests/migrations/test_commands.py:AppLabelErrorTests.test_squashmigrations_nonexistent_app_label",
      "type": "function",
      "name": "AppLabelErrorTests.test_squashmigrations_nonexistent_app_label",
      "file": "tests/migrations/test_commands.py",
      "line": 1588
    },
    {
      "id": "tests/migrations/test_commands.py:AppLabelErrorTests.test_squashmigrations_app_name_specified_as_label",
      "type": "function",
      "name": "AppLabelErrorTests.test_squashmigrations_app_name_specified_as_label",
      "file": "tests/migrations/test_commands.py",
      "line": 1592
    },
    {
      "id": "tests/migrations/test_autodetector.py",
      "type": "file",
      "name": "test_autodetector.py",
      "file": "tests/migrations/test_autodetector.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_autodetector.py:DeconstructibleObject",
      "type": "class",
      "name": "DeconstructibleObject",
      "file": "tests/migrations/test_autodetector.py",
      "line": 21
    },
    {
      "id": "tests/migrations/test_autodetector.py:DeconstructibleObject.deconstruct",
      "type": "function",
      "name": "DeconstructibleObject.deconstruct",
      "file": "tests/migrations/test_autodetector.py",
      "line": 30
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "type": "class",
      "name": "AutodetectorTests",
      "file": "tests/migrations/test_autodetector.py",
      "line": 38
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.repr_changes",
      "type": "function",
      "name": "AutodetectorTests.repr_changes",
      "file": "tests/migrations/test_autodetector.py",
      "line": 460
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "function",
      "name": "AutodetectorTests.assertNumberMigrations",
      "file": "tests/migrations/test_autodetector.py",
      "line": 477
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.assertMigrationDependencies",
      "type": "function",
      "name": "AutodetectorTests.assertMigrationDependencies",
      "file": "tests/migrations/test_autodetector.py",
      "line": 486
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "function",
      "name": "AutodetectorTests.assertOperationTypes",
      "file": "tests/migrations/test_autodetector.py",
      "line": 500
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "function",
      "name": "AutodetectorTests.assertOperationAttributes",
      "file": "tests/migrations/test_autodetector.py",
      "line": 515
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationFieldAttributes",
      "type": "function",
      "name": "AutodetectorTests.assertOperationFieldAttributes",
      "file": "tests/migrations/test_autodetector.py",
      "line": 541
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.make_project_state",
      "type": "function",
      "name": "AutodetectorTests.make_project_state",
      "file": "tests/migrations/test_autodetector.py",
      "line": 574
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "function",
      "name": "AutodetectorTests.get_changes",
      "file": "tests/migrations/test_autodetector.py",
      "line": 581
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_arrange_for_graph",
      "type": "function",
      "name": "AutodetectorTests.test_arrange_for_graph",
      "file": "tests/migrations/test_autodetector.py",
      "line": 588
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_trim_apps",
      "type": "function",
      "name": "AutodetectorTests.test_trim_apps",
      "file": "tests/migrations/test_autodetector.py",
      "line": 610
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_custom_migration_name",
      "type": "function",
      "name": "AutodetectorTests.test_custom_migration_name",
      "file": "tests/migrations/test_autodetector.py",
      "line": 629
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_new_model",
      "type": "function",
      "name": "AutodetectorTests.test_new_model",
      "file": "tests/migrations/test_autodetector.py",
      "line": 654
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_old_model",
      "type": "function",
      "name": "AutodetectorTests.test_old_model",
      "file": "tests/migrations/test_autodetector.py",
      "line": 664
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_field",
      "type": "function",
      "name": "AutodetectorTests.test_add_field",
      "file": "tests/migrations/test_autodetector.py",
      "line": 672
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_date_fields_with_auto_now_not_asking_for_default",
      "type": "function",
      "name": "AutodetectorTests.test_add_date_fields_with_auto_now_not_asking_for_default",
      "file": "tests/migrations/test_autodetector.py",
      "line": 682
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_date_fields_with_auto_now_add_not_asking_for_null_addition",
      "type": "function",
      "name": "AutodetectorTests.test_add_date_fields_with_auto_now_add_not_asking_for_null_addition",
      "file": "tests/migrations/test_autodetector.py",
      "line": 693
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_date_fields_with_auto_now_add_asking_for_default",
      "type": "function",
      "name": "AutodetectorTests.test_add_date_fields_with_auto_now_add_asking_for_default",
      "file": "tests/migrations/test_autodetector.py",
      "line": 703
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_field",
      "type": "function",
      "name": "AutodetectorTests.test_remove_field",
      "file": "tests/migrations/test_autodetector.py",
      "line": 713
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_field",
      "type": "function",
      "name": "AutodetectorTests.test_alter_field",
      "file": "tests/migrations/test_autodetector.py",
      "line": 721
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_supports_functools_partial",
      "type": "function",
      "name": "AutodetectorTests.test_supports_functools_partial",
      "file": "tests/migrations/test_autodetector.py",
      "line": 729
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_supports_functools_partial._content_file_name",
      "type": "function",
      "name": "AutodetectorTests.test_supports_functools_partial._content_file_name",
      "file": "tests/migrations/test_autodetector.py",
      "line": 730
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_supports_functools_partial.content_file_name",
      "type": "function",
      "name": "AutodetectorTests.test_supports_functools_partial.content_file_name",
      "file": "tests/migrations/test_autodetector.py",
      "line": 733
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_field_to_not_null_with_default",
      "type": "function",
      "name": "AutodetectorTests.test_alter_field_to_not_null_with_default",
      "file": "tests/migrations/test_autodetector.py",
      "line": 781
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_field_to_not_null_without_default",
      "type": "function",
      "name": "AutodetectorTests.test_alter_field_to_not_null_without_default",
      "file": "tests/migrations/test_autodetector.py",
      "line": 796
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_field_to_not_null_oneoff_default",
      "type": "function",
      "name": "AutodetectorTests.test_alter_field_to_not_null_oneoff_default",
      "file": "tests/migrations/test_autodetector.py",
      "line": 812
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_field",
      "type": "function",
      "name": "AutodetectorTests.test_rename_field",
      "file": "tests/migrations/test_autodetector.py",
      "line": 824
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_field_foreign_key_to_field",
      "type": "function",
      "name": "AutodetectorTests.test_rename_field_foreign_key_to_field",
      "file": "tests/migrations/test_autodetector.py",
      "line": 834
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_foreign_object_fields",
      "type": "function",
      "name": "AutodetectorTests.test_rename_foreign_object_fields",
      "file": "tests/migrations/test_autodetector.py",
      "line": 861
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_field_preserved_db_column",
      "type": "function",
      "name": "AutodetectorTests.test_rename_field_preserved_db_column",
      "file": "tests/migrations/test_autodetector.py",
      "line": 930
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_related_field_preserved_db_column",
      "type": "function",
      "name": "AutodetectorTests.test_rename_related_field_preserved_db_column",
      "file": "tests/migrations/test_autodetector.py",
      "line": 958
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_model",
      "type": "function",
      "name": "AutodetectorTests.test_rename_model",
      "file": "tests/migrations/test_autodetector.py",
      "line": 991
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_m2m_through_model",
      "type": "function",
      "name": "AutodetectorTests.test_rename_m2m_through_model",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1006
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_model_with_renamed_rel_field",
      "type": "function",
      "name": "AutodetectorTests.test_rename_model_with_renamed_rel_field",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1021
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_model_with_fks_in_different_position",
      "type": "function",
      "name": "AutodetectorTests.test_rename_model_with_fks_in_different_position",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1041
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_model_reverse_relation_dependencies",
      "type": "function",
      "name": "AutodetectorTests.test_rename_model_reverse_relation_dependencies",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1071
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_fk_dependency",
      "type": "function",
      "name": "AutodetectorTests.test_fk_dependency",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1102
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy_fk_dependency",
      "type": "function",
      "name": "AutodetectorTests.test_proxy_fk_dependency",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1124
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_same_app_no_fk_dependency",
      "type": "function",
      "name": "AutodetectorTests.test_same_app_no_fk_dependency",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1145
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_fk_dependency",
      "type": "function",
      "name": "AutodetectorTests.test_circular_fk_dependency",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1158
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_same_app_circular_fk_dependency",
      "type": "function",
      "name": "AutodetectorTests.test_same_app_circular_fk_dependency",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1180
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_same_app_circular_fk_dependency_with_unique_together_and_indexes",
      "type": "function",
      "name": "AutodetectorTests.test_same_app_circular_fk_dependency_with_unique_together_and_indexes",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1194
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_db_table_add",
      "type": "function",
      "name": "AutodetectorTests.test_alter_db_table_add",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1210
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_db_table_change",
      "type": "function",
      "name": "AutodetectorTests.test_alter_db_table_change",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1218
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_db_table_remove",
      "type": "function",
      "name": "AutodetectorTests.test_alter_db_table_remove",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1226
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_db_table_no_changes",
      "type": "function",
      "name": "AutodetectorTests.test_alter_db_table_no_changes",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1234
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_keep_db_table_with_model_change",
      "type": "function",
      "name": "AutodetectorTests.test_keep_db_table_with_model_change",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1242
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_db_table_with_model_change",
      "type": "function",
      "name": "AutodetectorTests.test_alter_db_table_with_model_change",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1257
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_identical_regex_doesnt_alter",
      "type": "function",
      "name": "AutodetectorTests.test_identical_regex_doesnt_alter",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1273
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_different_regex_does_alter",
      "type": "function",
      "name": "AutodetectorTests.test_different_regex_does_alter",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1290
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_empty_foo_together",
      "type": "function",
      "name": "AutodetectorTests.test_empty_foo_together",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1307
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_empty_foo_together.test",
      "type": "function",
      "name": "AutodetectorTests.test_empty_foo_together.test",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1331
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_create_model_with_indexes",
      "type": "function",
      "name": "AutodetectorTests.test_create_model_with_indexes",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1352
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_indexes",
      "type": "function",
      "name": "AutodetectorTests.test_add_indexes",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1370
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_indexes",
      "type": "function",
      "name": "AutodetectorTests.test_remove_indexes",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1378
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_order_fields_indexes",
      "type": "function",
      "name": "AutodetectorTests.test_order_fields_indexes",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1386
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_create_model_with_check_constraint",
      "type": "function",
      "name": "AutodetectorTests.test_create_model_with_check_constraint",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1397
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_constraints",
      "type": "function",
      "name": "AutodetectorTests.test_add_constraints",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1415
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_constraints",
      "type": "function",
      "name": "AutodetectorTests.test_remove_constraints",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1423
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_foo_together",
      "type": "function",
      "name": "AutodetectorTests.test_add_foo_together",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1431
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_foo_together",
      "type": "function",
      "name": "AutodetectorTests.test_remove_foo_together",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1440
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_foo_together_remove_fk",
      "type": "function",
      "name": "AutodetectorTests.test_foo_together_remove_fk",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1449
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_foo_together_no_changes",
      "type": "function",
      "name": "AutodetectorTests.test_foo_together_no_changes",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1463
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_foo_together_ordering",
      "type": "function",
      "name": "AutodetectorTests.test_foo_together_ordering",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1474
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_field_and_foo_together",
      "type": "function",
      "name": "AutodetectorTests.test_add_field_and_foo_together",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1487
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_create_model_and_unique_together",
      "type": "function",
      "name": "AutodetectorTests.test_create_model_and_unique_together",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1498
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_field_and_foo_together",
      "type": "function",
      "name": "AutodetectorTests.test_remove_field_and_foo_together",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1523
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_field_and_foo_together",
      "type": "function",
      "name": "AutodetectorTests.test_rename_field_and_foo_together",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1537
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy",
      "type": "function",
      "name": "AutodetectorTests.test_proxy",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1554
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy_custom_pk",
      "type": "function",
      "name": "AutodetectorTests.test_proxy_custom_pk",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1575
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy_to_mti_with_fk_to_proxy",
      "type": "function",
      "name": "AutodetectorTests.test_proxy_to_mti_with_fk_to_proxy",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1589
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy_to_mti_with_fk_to_proxy_proxy",
      "type": "function",
      "name": "AutodetectorTests.test_proxy_to_mti_with_fk_to_proxy_proxy",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1622
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_unmanaged_create",
      "type": "function",
      "name": "AutodetectorTests.test_unmanaged_create",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1656
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_unmanaged_delete",
      "type": "function",
      "name": "AutodetectorTests.test_unmanaged_delete",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1665
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_unmanaged_to_managed",
      "type": "function",
      "name": "AutodetectorTests.test_unmanaged_to_managed",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1670
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_managed_to_unmanaged",
      "type": "function",
      "name": "AutodetectorTests.test_managed_to_unmanaged",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1680
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_unmanaged_custom_pk",
      "type": "function",
      "name": "AutodetectorTests.test_unmanaged_custom_pk",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1690
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable",
      "type": "function",
      "name": "AutodetectorTests.test_swappable",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1705
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable_changed",
      "type": "function",
      "name": "AutodetectorTests.test_swappable_changed",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1714
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_field_with_default",
      "type": "function",
      "name": "AutodetectorTests.test_add_field_with_default",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1732
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_custom_deconstructible",
      "type": "function",
      "name": "AutodetectorTests.test_custom_deconstructible",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1740
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_deconstruct_field_kwarg",
      "type": "function",
      "name": "AutodetectorTests.test_deconstruct_field_kwarg",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1749
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_deconstructible_list",
      "type": "function",
      "name": "AutodetectorTests.test_deconstructible_list",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1754
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_deconstructible_tuple",
      "type": "function",
      "name": "AutodetectorTests.test_deconstructible_tuple",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1770
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_deconstructible_dict",
      "type": "function",
      "name": "AutodetectorTests.test_deconstructible_dict",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1786
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_nested_deconstructible_objects",
      "type": "function",
      "name": "AutodetectorTests.test_nested_deconstructible_objects",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1802
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_deconstruct_type",
      "type": "function",
      "name": "AutodetectorTests.test_deconstruct_type",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1837
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_replace_string_with_foreignkey",
      "type": "function",
      "name": "AutodetectorTests.test_replace_string_with_foreignkey",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1859
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_foreign_key_removed_before_target_model",
      "type": "function",
      "name": "AutodetectorTests.test_foreign_key_removed_before_target_model",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1872
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_many_to_many",
      "type": "function",
      "name": "AutodetectorTests.test_add_many_to_many",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1888
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_many_to_many",
      "type": "function",
      "name": "AutodetectorTests.test_alter_many_to_many",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1896
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_create_with_through_model",
      "type": "function",
      "name": "AutodetectorTests.test_create_with_through_model",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1905
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_many_to_many_removed_before_through_model",
      "type": "function",
      "name": "AutodetectorTests.test_many_to_many_removed_before_through_model",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1921
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_many_to_many_removed_before_through_model_2",
      "type": "function",
      "name": "AutodetectorTests.test_many_to_many_removed_before_through_model_2",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1937
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_m2m_w_through_multistep_remove",
      "type": "function",
      "name": "AutodetectorTests.test_m2m_w_through_multistep_remove",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1955
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_concrete_field_changed_to_many_to_many",
      "type": "function",
      "name": "AutodetectorTests.test_concrete_field_changed_to_many_to_many",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1973
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_many_to_many_changed_to_concrete_field",
      "type": "function",
      "name": "AutodetectorTests.test_many_to_many_changed_to_concrete_field",
      "file": "tests/migrations/test_autodetector.py",
      "line": 1986
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_non_circular_foreignkey_dependency_removal",
      "type": "function",
      "name": "AutodetectorTests.test_non_circular_foreignkey_dependency_removal",
      "file": "tests/migrations/test_autodetector.py",
      "line": 2000
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_model_options",
      "type": "function",
      "name": "AutodetectorTests.test_alter_model_options",
      "file": "tests/migrations/test_autodetector.py",
      "line": 2013
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_model_options_proxy",
      "type": "function",
      "name": "AutodetectorTests.test_alter_model_options_proxy",
      "file": "tests/migrations/test_autodetector.py",
      "line": 2031
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_set_alter_order_with_respect_to",
      "type": "function",
      "name": "AutodetectorTests.test_set_alter_order_with_respect_to",
      "file": "tests/migrations/test_autodetector.py",
      "line": 2043
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_alter_order_with_respect_to",
      "type": "function",
      "name": "AutodetectorTests.test_add_alter_order_with_respect_to",
      "file": "tests/migrations/test_autodetector.py",
      "line": 2051
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_alter_order_with_respect_to",
      "type": "function",
      "name": "AutodetectorTests.test_remove_alter_order_with_respect_to",
      "file": "tests/migrations/test_autodetector.py",
      "line": 2063
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_model_order_with_respect_to",
      "type": "function",
      "name": "AutodetectorTests.test_add_model_order_with_respect_to",
      "file": "tests/migrations/test_autodetector.py",
      "line": 2075
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_model_managers",
      "type": "function",
      "name": "AutodetectorTests.test_alter_model_managers",
      "file": "tests/migrations/test_autodetector.py",
      "line": 2089
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable_first_inheritance",
      "type": "function",
      "name": "AutodetectorTests.test_swappable_first_inheritance",
      "file": "tests/migrations/test_autodetector.py",
      "line": 2103
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_default_related_name_option",
      "type": "function",
      "name": "AutodetectorTests.test_default_related_name_option",
      "file": "tests/migrations/test_autodetector.py",
      "line": 2112
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable_first_setting",
      "type": "function",
      "name": "AutodetectorTests.test_swappable_first_setting",
      "file": "tests/migrations/test_autodetector.py",
      "line": 2132
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_bases_first",
      "type": "function",
      "name": "AutodetectorTests.test_bases_first",
      "file": "tests/migrations/test_autodetector.py",
      "line": 2142
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_multiple_bases",
      "type": "function",
      "name": "AutodetectorTests.test_multiple_bases",
      "file": "tests/migrations/test_autodetector.py",
      "line": 2151
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy_bases_first",
      "type": "function",
      "name": "AutodetectorTests.test_proxy_bases_first",
      "file": "tests/migrations/test_autodetector.py",
      "line": 2170
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_pk_fk_included",
      "type": "function",
      "name": "AutodetectorTests.test_pk_fk_included",
      "file": "tests/migrations/test_autodetector.py",
      "line": 2180
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_first_dependency",
      "type": "function",
      "name": "AutodetectorTests.test_first_dependency",
      "file": "tests/migrations/test_autodetector.py",
      "line": 2191
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_last_dependency",
      "type": "function",
      "name": "AutodetectorTests.test_last_dependency",
      "file": "tests/migrations/test_autodetector.py",
      "line": 2209
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_fk_before_model_deletion",
      "type": "function",
      "name": "AutodetectorTests.test_alter_fk_before_model_deletion",
      "file": "tests/migrations/test_autodetector.py",
      "line": 2227
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_fk_dependency_other_app",
      "type": "function",
      "name": "AutodetectorTests.test_fk_dependency_other_app",
      "file": "tests/migrations/test_autodetector.py",
      "line": 2243
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_dependency_mixed_addcreate",
      "type": "function",
      "name": "AutodetectorTests.test_circular_dependency_mixed_addcreate",
      "file": "tests/migrations/test_autodetector.py",
      "line": 2254
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_dependency_swappable",
      "type": "function",
      "name": "AutodetectorTests.test_circular_dependency_swappable",
      "file": "tests/migrations/test_autodetector.py",
      "line": 2282
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_dependency_swappable2",
      "type": "function",
      "name": "AutodetectorTests.test_circular_dependency_swappable2",
      "file": "tests/migrations/test_autodetector.py",
      "line": 2311
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_dependency_swappable_self",
      "type": "function",
      "name": "AutodetectorTests.test_circular_dependency_swappable_self",
      "file": "tests/migrations/test_autodetector.py",
      "line": 2340
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable_circular_multi_mti",
      "type": "function",
      "name": "AutodetectorTests.test_swappable_circular_multi_mti",
      "file": "tests/migrations/test_autodetector.py",
      "line": 2357
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_blank_textfield_and_charfield",
      "type": "function",
      "name": "AutodetectorTests.test_add_blank_textfield_and_charfield",
      "file": "tests/migrations/test_autodetector.py",
      "line": 2370
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_non_blank_textfield_and_charfield",
      "type": "function",
      "name": "AutodetectorTests.test_add_non_blank_textfield_and_charfield",
      "file": "tests/migrations/test_autodetector.py",
      "line": 2382
    },
    {
      "id": "tests/migrations/test_autodetector.py:AutodetectorTests.test_mti_inheritance_model_removal",
      "type": "function",
      "name": "AutodetectorTests.test_mti_inheritance_model_removal",
      "file": "tests/migrations/test_autodetector.py",
      "line": 2394
    },
    {
      "id": "tests/migrations/test_executor.py",
      "type": "file",
      "name": "test_executor.py",
      "file": "tests/migrations/test_executor.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_executor.py:ExecutorTests",
      "type": "class",
      "name": "ExecutorTests",
      "file": "tests/migrations/test_executor.py",
      "line": 18
    },
    {
      "id": "tests/migrations/test_executor.py:ExecutorTests.test_run",
      "type": "function",
      "name": "ExecutorTests.test_run",
      "file": "tests/migrations/test_executor.py",
      "line": 29
    },
    {
      "id": "tests/migrations/test_executor.py:ExecutorTests.test_run_with_squashed",
      "type": "function",
      "name": "ExecutorTests.test_run_with_squashed",
      "file": "tests/migrations/test_executor.py",
      "line": 68
    },
    {
      "id": "tests/migrations/test_executor.py:ExecutorTests.test_non_atomic_migration",
      "type": "function",
      "name": "ExecutorTests.test_non_atomic_migration",
      "file": "tests/migrations/test_executor.py",
      "line": 108
    },
    {
      "id": "tests/migrations/test_executor.py:ExecutorTests.test_atomic_operation_in_non_atomic_migration",
      "type": "function",
      "name": "ExecutorTests.test_atomic_operation_in_non_atomic_migration",
      "file": "tests/migrations/test_executor.py",
      "line": 122
    },
    {
      "id": "tests/migrations/test_executor.py:ExecutorTests.test_empty_plan",
      "type": "function",
      "name": "ExecutorTests.test_empty_plan",
      "file": "tests/migrations/test_executor.py",
      "line": 146
    },
    {
      "id": "tests/migrations/test_executor.py:ExecutorTests.test_mixed_plan_not_supported",
      "type": "function",
      "name": "ExecutorTests.test_mixed_plan_not_supported",
      "file": "tests/migrations/test_executor.py",
      "line": 200
    },
    {
      "id": "tests/migrations/test_executor.py:ExecutorTests.test_soft_apply",
      "type": "function",
      "name": "ExecutorTests.test_soft_apply",
      "file": "tests/migrations/test_executor.py",
      "line": 255
    },
    {
      "id": "tests/migrations/test_executor.py:ExecutorTests.test_soft_apply.fake_storer",
      "type": "function",
      "name": "ExecutorTests.test_soft_apply.fake_storer",
      "file": "tests/migrations/test_executor.py",
      "line": 261
    },
    {
      "id": "tests/migrations/test_executor.py:ExecutorTests.test_custom_user",
      "type": "function",
      "name": "ExecutorTests.test_custom_user",
      "file": "tests/migrations/test_executor.py",
      "line": 319
    },
    {
      "id": "tests/migrations/test_executor.py:ExecutorTests.test_detect_soft_applied_add_field_manytomanyfield",
      "type": "function",
      "name": "ExecutorTests.test_detect_soft_applied_add_field_manytomanyfield",
      "file": "tests/migrations/test_executor.py",
      "line": 356
    },
    {
      "id": "tests/migrations/test_executor.py:ExecutorTests.test_unrelated_model_lookups_forwards",
      "type": "function",
      "name": "ExecutorTests.test_unrelated_model_lookups_forwards",
      "file": "tests/migrations/test_executor.py",
      "line": 417
    },
    {
      "id": "tests/migrations/test_executor.py:ExecutorTests.test_unrelated_model_lookups_backwards",
      "type": "function",
      "name": "ExecutorTests.test_unrelated_model_lookups_backwards",
      "file": "tests/migrations/test_executor.py",
      "line": 462
    },
    {
      "id": "tests/migrations/test_executor.py:ExecutorTests.test_unrelated_applied_migrations_mutate_state",
      "type": "function",
      "name": "ExecutorTests.test_unrelated_applied_migrations_mutate_state",
      "file": "tests/migrations/test_executor.py",
      "line": 506
    },
    {
      "id": "tests/migrations/test_executor.py:ExecutorTests.test_process_callback",
      "type": "function",
      "name": "ExecutorTests.test_process_callback",
      "file": "tests/migrations/test_executor.py",
      "line": 532
    },
    {
      "id": "tests/migrations/test_executor.py:ExecutorTests.test_process_callback.callback",
      "type": "function",
      "name": "ExecutorTests.test_process_callback.callback",
      "file": "tests/migrations/test_executor.py",
      "line": 538
    },
    {
      "id": "tests/migrations/test_executor.py:ExecutorTests.test_alter_id_type_with_fk",
      "type": "function",
      "name": "ExecutorTests.test_alter_id_type_with_fk",
      "file": "tests/migrations/test_executor.py",
      "line": 582
    },
    {
      "id": "tests/migrations/test_executor.py:ExecutorTests.test_apply_all_replaced_marks_replacement_as_applied",
      "type": "function",
      "name": "ExecutorTests.test_apply_all_replaced_marks_replacement_as_applied",
      "file": "tests/migrations/test_executor.py",
      "line": 613
    },
    {
      "id": "tests/migrations/test_executor.py:ExecutorTests.test_migrate_marks_replacement_applied_even_if_it_did_nothing",
      "type": "function",
      "name": "ExecutorTests.test_migrate_marks_replacement_applied_even_if_it_did_nothing",
      "file": "tests/migrations/test_executor.py",
      "line": 636
    },
    {
      "id": "tests/migrations/test_executor.py:ExecutorTests.test_migrations_applied_and_recorded_atomically",
      "type": "function",
      "name": "ExecutorTests.test_migrations_applied_and_recorded_atomically",
      "file": "tests/migrations/test_executor.py",
      "line": 660
    },
    {
      "id": "tests/migrations/test_executor.py:FakeLoader",
      "type": "class",
      "name": "FakeLoader",
      "file": "tests/migrations/test_executor.py",
      "line": 673
    },
    {
      "id": "tests/migrations/test_executor.py:FakeMigration",
      "type": "class",
      "name": "FakeMigration",
      "file": "tests/migrations/test_executor.py",
      "line": 679
    },
    {
      "id": "tests/migrations/test_executor.py:FakeMigration.__repr__",
      "type": "function",
      "name": "FakeMigration.__repr__",
      "file": "tests/migrations/test_executor.py",
      "line": 684
    },
    {
      "id": "tests/migrations/test_executor.py:ExecutorUnitTests",
      "type": "class",
      "name": "ExecutorUnitTests",
      "file": "tests/migrations/test_executor.py",
      "line": 688
    },
    {
      "id": "tests/migrations/test_executor.py:ExecutorUnitTests.test_minimize_rollbacks",
      "type": "function",
      "name": "ExecutorUnitTests.test_minimize_rollbacks",
      "file": "tests/migrations/test_executor.py",
      "line": 690
    },
    {
      "id": "tests/migrations/test_executor.py:ExecutorUnitTests.test_minimize_rollbacks_branchy",
      "type": "function",
      "name": "ExecutorUnitTests.test_minimize_rollbacks_branchy",
      "file": "tests/migrations/test_executor.py",
      "line": 720
    },
    {
      "id": "tests/migrations/test_executor.py:ExecutorUnitTests.test_backwards_nothing_to_do",
      "type": "function",
      "name": "ExecutorUnitTests.test_backwards_nothing_to_do",
      "file": "tests/migrations/test_executor.py",
      "line": 765
    },
    {
      "id": "tests/migrations/test_questioner.py",
      "type": "file",
      "name": "test_questioner.py",
      "file": "tests/migrations/test_questioner.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_questioner.py:QuestionerTests",
      "type": "class",
      "name": "QuestionerTests",
      "file": "tests/migrations/test_questioner.py",
      "line": 11
    },
    {
      "id": "tests/migrations/test_questioner.py:QuestionerTests.test_ask_initial_with_disabled_migrations",
      "type": "function",
      "name": "QuestionerTests.test_ask_initial_with_disabled_migrations",
      "file": "tests/migrations/test_questioner.py",
      "line": 16
    },
    {
      "id": "tests/migrations/test_questioner.py:QuestionerTests.test_timedelta_default",
      "type": "function",
      "name": "QuestionerTests.test_timedelta_default",
      "file": "tests/migrations/test_questioner.py",
      "line": 21
    },
    {
      "id": "tests/migrations/test_base.py",
      "type": "file",
      "name": "test_base.py",
      "file": "tests/migrations/test_base.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_base.py:MigrationTestBase",
      "type": "class",
      "name": "MigrationTestBase",
      "file": "tests/migrations/test_base.py",
      "line": 15
    },
    {
      "id": "tests/migrations/test_base.py:MigrationTestBase.tearDown",
      "type": "function",
      "name": "MigrationTestBase.tearDown",
      "file": "tests/migrations/test_base.py",
      "line": 23
    },
    {
      "id": "tests/migrations/test_base.py:MigrationTestBase.get_table_description",
      "type": "function",
      "name": "MigrationTestBase.get_table_description",
      "file": "tests/migrations/test_base.py",
      "line": 29
    },
    {
      "id": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "function",
      "name": "MigrationTestBase.assertTableExists",
      "file": "tests/migrations/test_base.py",
      "line": 33
    },
    {
      "id": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "function",
      "name": "MigrationTestBase.assertTableNotExists",
      "file": "tests/migrations/test_base.py",
      "line": 37
    },
    {
      "id": "tests/migrations/test_base.py:MigrationTestBase.assertColumnExists",
      "type": "function",
      "name": "MigrationTestBase.assertColumnExists",
      "file": "tests/migrations/test_base.py",
      "line": 41
    },
    {
      "id": "tests/migrations/test_base.py:MigrationTestBase.assertColumnNotExists",
      "type": "function",
      "name": "MigrationTestBase.assertColumnNotExists",
      "file": "tests/migrations/test_base.py",
      "line": 44
    },
    {
      "id": "tests/migrations/test_base.py:MigrationTestBase._get_column_allows_null",
      "type": "function",
      "name": "MigrationTestBase._get_column_allows_null",
      "file": "tests/migrations/test_base.py",
      "line": 47
    },
    {
      "id": "tests/migrations/test_base.py:MigrationTestBase.assertColumnNull",
      "type": "function",
      "name": "MigrationTestBase.assertColumnNull",
      "file": "tests/migrations/test_base.py",
      "line": 50
    },
    {
      "id": "tests/migrations/test_base.py:MigrationTestBase.assertColumnNotNull",
      "type": "function",
      "name": "MigrationTestBase.assertColumnNotNull",
      "file": "tests/migrations/test_base.py",
      "line": 53
    },
    {
      "id": "tests/migrations/test_base.py:MigrationTestBase.assertIndexExists",
      "type": "function",
      "name": "MigrationTestBase.assertIndexExists",
      "file": "tests/migrations/test_base.py",
      "line": 56
    },
    {
      "id": "tests/migrations/test_base.py:MigrationTestBase.assertIndexNotExists",
      "type": "function",
      "name": "MigrationTestBase.assertIndexNotExists",
      "file": "tests/migrations/test_base.py",
      "line": 67
    },
    {
      "id": "tests/migrations/test_base.py:MigrationTestBase.assertConstraintExists",
      "type": "function",
      "name": "MigrationTestBase.assertConstraintExists",
      "file": "tests/migrations/test_base.py",
      "line": 70
    },
    {
      "id": "tests/migrations/test_base.py:MigrationTestBase.assertConstraintNotExists",
      "type": "function",
      "name": "MigrationTestBase.assertConstraintNotExists",
      "file": "tests/migrations/test_base.py",
      "line": 78
    },
    {
      "id": "tests/migrations/test_base.py:MigrationTestBase.assertFKExists",
      "type": "function",
      "name": "MigrationTestBase.assertFKExists",
      "file": "tests/migrations/test_base.py",
      "line": 81
    },
    {
      "id": "tests/migrations/test_base.py:MigrationTestBase.assertFKNotExists",
      "type": "function",
      "name": "MigrationTestBase.assertFKNotExists",
      "file": "tests/migrations/test_base.py",
      "line": 92
    },
    {
      "id": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "function",
      "name": "MigrationTestBase.temporary_migration_module",
      "file": "tests/migrations/test_base.py",
      "line": 96
    },
    {
      "id": "tests/migrations/test_graph.py",
      "type": "file",
      "name": "test_graph.py",
      "file": "tests/migrations/test_graph.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_graph.py:GraphTests",
      "type": "class",
      "name": "GraphTests",
      "file": "tests/migrations/test_graph.py",
      "line": 8
    },
    {
      "id": "tests/migrations/test_graph.py:GraphTests.test_simple_graph",
      "type": "function",
      "name": "GraphTests.test_simple_graph",
      "file": "tests/migrations/test_graph.py",
      "line": 13
    },
    {
      "id": "tests/migrations/test_graph.py:GraphTests.test_complex_graph",
      "type": "function",
      "name": "GraphTests.test_complex_graph",
      "file": "tests/migrations/test_graph.py",
      "line": 67
    },
    {
      "id": "tests/migrations/test_graph.py:GraphTests.test_circular_graph",
      "type": "function",
      "name": "GraphTests.test_circular_graph",
      "file": "tests/migrations/test_graph.py",
      "line": 128
    },
    {
      "id": "tests/migrations/test_graph.py:GraphTests.test_circular_graph_2",
      "type": "function",
      "name": "GraphTests.test_circular_graph_2",
      "file": "tests/migrations/test_graph.py",
      "line": 148
    },
    {
      "id": "tests/migrations/test_graph.py:GraphTests.test_iterative_dfs",
      "type": "function",
      "name": "GraphTests.test_iterative_dfs",
      "file": "tests/migrations/test_graph.py",
      "line": 160
    },
    {
      "id": "tests/migrations/test_graph.py:GraphTests.test_iterative_dfs_complexity",
      "type": "function",
      "name": "GraphTests.test_iterative_dfs_complexity",
      "file": "tests/migrations/test_graph.py",
      "line": 179
    },
    {
      "id": "tests/migrations/test_graph.py:GraphTests.test_plan_invalid_node",
      "type": "function",
      "name": "GraphTests.test_plan_invalid_node",
      "file": "tests/migrations/test_graph.py",
      "line": 203
    },
    {
      "id": "tests/migrations/test_graph.py:GraphTests.test_missing_parent_nodes",
      "type": "function",
      "name": "GraphTests.test_missing_parent_nodes",
      "file": "tests/migrations/test_graph.py",
      "line": 216
    },
    {
      "id": "tests/migrations/test_graph.py:GraphTests.test_missing_child_nodes",
      "type": "function",
      "name": "GraphTests.test_missing_child_nodes",
      "file": "tests/migrations/test_graph.py",
      "line": 232
    },
    {
      "id": "tests/migrations/test_graph.py:GraphTests.test_validate_consistency_missing_parent",
      "type": "function",
      "name": "GraphTests.test_validate_consistency_missing_parent",
      "file": "tests/migrations/test_graph.py",
      "line": 243
    },
    {
      "id": "tests/migrations/test_graph.py:GraphTests.test_validate_consistency_missing_child",
      "type": "function",
      "name": "GraphTests.test_validate_consistency_missing_child",
      "file": "tests/migrations/test_graph.py",
      "line": 251
    },
    {
      "id": "tests/migrations/test_graph.py:GraphTests.test_validate_consistency_no_error",
      "type": "function",
      "name": "GraphTests.test_validate_consistency_no_error",
      "file": "tests/migrations/test_graph.py",
      "line": 259
    },
    {
      "id": "tests/migrations/test_graph.py:GraphTests.test_validate_consistency_dummy",
      "type": "function",
      "name": "GraphTests.test_validate_consistency_dummy",
      "file": "tests/migrations/test_graph.py",
      "line": 266
    },
    {
      "id": "tests/migrations/test_graph.py:GraphTests.test_remove_replaced_nodes",
      "type": "function",
      "name": "GraphTests.test_remove_replaced_nodes",
      "file": "tests/migrations/test_graph.py",
      "line": 281
    },
    {
      "id": "tests/migrations/test_graph.py:GraphTests.test_remove_replacement_node",
      "type": "function",
      "name": "GraphTests.test_remove_replacement_node",
      "file": "tests/migrations/test_graph.py",
      "line": 324
    },
    {
      "id": "tests/migrations/test_graph.py:GraphTests.test_infinite_loop",
      "type": "function",
      "name": "GraphTests.test_infinite_loop",
      "file": "tests/migrations/test_graph.py",
      "line": 364
    },
    {
      "id": "tests/migrations/test_graph.py:GraphTests.test_stringify",
      "type": "function",
      "name": "GraphTests.test_stringify",
      "file": "tests/migrations/test_graph.py",
      "line": 391
    },
    {
      "id": "tests/migrations/test_graph.py:NodeTests",
      "type": "class",
      "name": "NodeTests",
      "file": "tests/migrations/test_graph.py",
      "line": 408
    },
    {
      "id": "tests/migrations/test_graph.py:NodeTests.test_node_repr",
      "type": "function",
      "name": "NodeTests.test_node_repr",
      "file": "tests/migrations/test_graph.py",
      "line": 409
    },
    {
      "id": "tests/migrations/test_graph.py:NodeTests.test_dummynode_repr",
      "type": "function",
      "name": "NodeTests.test_dummynode_repr",
      "file": "tests/migrations/test_graph.py",
      "line": 413
    },
    {
      "id": "tests/migrations/routers.py",
      "type": "file",
      "name": "routers.py",
      "file": "tests/migrations/routers.py",
      "line": 0
    },
    {
      "id": "tests/migrations/routers.py:EmptyRouter",
      "type": "class",
      "name": "EmptyRouter",
      "file": "tests/migrations/routers.py",
      "line": 1
    },
    {
      "id": "tests/migrations/routers.py:TestRouter",
      "type": "class",
      "name": "TestRouter",
      "file": "tests/migrations/routers.py",
      "line": 5
    },
    {
      "id": "tests/migrations/routers.py:TestRouter.allow_migrate",
      "type": "function",
      "name": "TestRouter.allow_migrate",
      "file": "tests/migrations/routers.py",
      "line": 6
    },
    {
      "id": "tests/migrations/migrations_test_apps",
      "type": "directory",
      "name": "migrations_test_apps",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict",
      "type": "directory",
      "name": "unspecified_app_with_conflict",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/models.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations",
      "type": "directory",
      "name": "migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/0002_second.py",
      "type": "file",
      "name": "0002_second.py",
      "file": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/0002_second.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/0002_second.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/0002_second.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/0002_conflicting_second.py",
      "type": "file",
      "name": "0002_conflicting_second.py",
      "file": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/0002_conflicting_second.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/0002_conflicting_second.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/0002_conflicting_second.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_a",
      "type": "directory",
      "name": "lookuperror_a",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_a/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/migrations/migrations_test_apps/lookuperror_a/models.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_a/models.py:A1",
      "type": "class",
      "name": "A1",
      "file": "tests/migrations/migrations_test_apps/lookuperror_a/models.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_a/models.py:A2",
      "type": "class",
      "name": "A2",
      "file": "tests/migrations/migrations_test_apps/lookuperror_a/models.py",
      "line": 8
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_a/models.py:A3",
      "type": "class",
      "name": "A3",
      "file": "tests/migrations/migrations_test_apps/lookuperror_a/models.py",
      "line": 12
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_a/models.py:A4",
      "type": "class",
      "name": "A4",
      "file": "tests/migrations/migrations_test_apps/lookuperror_a/models.py",
      "line": 17
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_a/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/lookuperror_a/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_a/migrations",
      "type": "directory",
      "name": "migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0002_a2.py",
      "type": "file",
      "name": "0002_a2.py",
      "file": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0002_a2.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0002_a2.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0002_a2.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0003_a3.py",
      "type": "file",
      "name": "0003_a3.py",
      "file": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0003_a3.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0003_a3.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0003_a3.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0004_a4.py",
      "type": "file",
      "name": "0004_a4.py",
      "file": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0004_a4.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0004_a4.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0004_a4.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies",
      "type": "directory",
      "name": "conflicting_app_with_dependencies",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations",
      "type": "directory",
      "name": "migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/0002_second.py",
      "type": "file",
      "name": "0002_second.py",
      "file": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/0002_second.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/0002_second.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/0002_second.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/0002_conflicting_second.py",
      "type": "file",
      "name": "0002_conflicting_second.py",
      "file": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/0002_conflicting_second.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/0002_conflicting_second.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/0002_conflicting_second.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/migrated_unapplied_app",
      "type": "directory",
      "name": "migrated_unapplied_app",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/migrated_unapplied_app/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/migrations/migrations_test_apps/migrated_unapplied_app/models.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/migrated_unapplied_app/models.py:OtherAuthor",
      "type": "class",
      "name": "OtherAuthor",
      "file": "tests/migrations/migrations_test_apps/migrated_unapplied_app/models.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/migrated_unapplied_app/models.py:OtherAuthor.Meta",
      "type": "class",
      "name": "OtherAuthor.Meta",
      "file": "tests/migrations/migrations_test_apps/migrated_unapplied_app/models.py",
      "line": 11
    },
    {
      "id": "tests/migrations/migrations_test_apps/migrated_unapplied_app/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/migrated_unapplied_app/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/migrated_unapplied_app/migrations",
      "type": "directory",
      "name": "migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/migrated_unapplied_app/migrations/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/migrated_unapplied_app/migrations/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/migrated_unapplied_app/migrations/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/migrations_test_apps/migrated_unapplied_app/migrations/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/migrated_unapplied_app/migrations/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/migrations_test_apps/migrated_unapplied_app/migrations/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/unmigrated_app_syncdb",
      "type": "directory",
      "name": "unmigrated_app_syncdb",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/unmigrated_app_syncdb/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/migrations/migrations_test_apps/unmigrated_app_syncdb/models.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/unmigrated_app_syncdb/models.py:Classroom",
      "type": "class",
      "name": "Classroom",
      "file": "tests/migrations/migrations_test_apps/unmigrated_app_syncdb/models.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/unmigrated_app_syncdb/models.py:Lesson",
      "type": "class",
      "name": "Lesson",
      "file": "tests/migrations/migrations_test_apps/unmigrated_app_syncdb/models.py",
      "line": 8
    },
    {
      "id": "tests/migrations/migrations_test_apps/unmigrated_app_syncdb/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/unmigrated_app_syncdb/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/without_init_file",
      "type": "directory",
      "name": "without_init_file",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/without_init_file/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/without_init_file/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/alter_fk",
      "type": "directory",
      "name": "alter_fk",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/alter_fk/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/alter_fk/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/alter_fk/author_app",
      "type": "directory",
      "name": "author_app",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/alter_fk/author_app/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/alter_fk/author_app/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/alter_fk/author_app/migrations",
      "type": "directory",
      "name": "migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/alter_fk/author_app/migrations/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/alter_fk/author_app/migrations/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/alter_fk/author_app/migrations/0002_alter_id.py",
      "type": "file",
      "name": "0002_alter_id.py",
      "file": "tests/migrations/migrations_test_apps/alter_fk/author_app/migrations/0002_alter_id.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/alter_fk/author_app/migrations/0002_alter_id.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/migrations_test_apps/alter_fk/author_app/migrations/0002_alter_id.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/alter_fk/author_app/migrations/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/migrations_test_apps/alter_fk/author_app/migrations/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/alter_fk/author_app/migrations/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/migrations_test_apps/alter_fk/author_app/migrations/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/alter_fk/book_app",
      "type": "directory",
      "name": "book_app",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/alter_fk/book_app/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/alter_fk/book_app/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/alter_fk/book_app/migrations",
      "type": "directory",
      "name": "migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/alter_fk/book_app/migrations/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/alter_fk/book_app/migrations/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/alter_fk/book_app/migrations/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/migrations_test_apps/alter_fk/book_app/migrations/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/alter_fk/book_app/migrations/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/migrations_test_apps/alter_fk/book_app/migrations/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/unmigrated_app",
      "type": "directory",
      "name": "unmigrated_app",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/unmigrated_app/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/migrations/migrations_test_apps/unmigrated_app/models.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/unmigrated_app/models.py:SillyModel",
      "type": "class",
      "name": "SillyModel",
      "file": "tests/migrations/migrations_test_apps/unmigrated_app/models.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/unmigrated_app/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/unmigrated_app/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/mutate_state_b",
      "type": "directory",
      "name": "mutate_state_b",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/mutate_state_b/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/mutate_state_b/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/mutate_state_b/migrations",
      "type": "directory",
      "name": "migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/mutate_state_b/migrations/0002_add_field.py",
      "type": "file",
      "name": "0002_add_field.py",
      "file": "tests/migrations/migrations_test_apps/mutate_state_b/migrations/0002_add_field.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/mutate_state_b/migrations/0002_add_field.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/migrations_test_apps/mutate_state_b/migrations/0002_add_field.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/mutate_state_b/migrations/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/mutate_state_b/migrations/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/mutate_state_b/migrations/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/migrations_test_apps/mutate_state_b/migrations/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/mutate_state_b/migrations/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/migrations_test_apps/mutate_state_b/migrations/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/unmigrated_app_simple",
      "type": "directory",
      "name": "unmigrated_app_simple",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/unmigrated_app_simple/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/migrations/migrations_test_apps/unmigrated_app_simple/models.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/unmigrated_app_simple/models.py:UnmigratedModel",
      "type": "class",
      "name": "UnmigratedModel",
      "file": "tests/migrations/migrations_test_apps/unmigrated_app_simple/models.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/unmigrated_app_simple/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/unmigrated_app_simple/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_c",
      "type": "directory",
      "name": "lookuperror_c",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_c/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/migrations/migrations_test_apps/lookuperror_c/models.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_c/models.py:C1",
      "type": "class",
      "name": "C1",
      "file": "tests/migrations/migrations_test_apps/lookuperror_c/models.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_c/models.py:C2",
      "type": "class",
      "name": "C2",
      "file": "tests/migrations/migrations_test_apps/lookuperror_c/models.py",
      "line": 8
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_c/models.py:C3",
      "type": "class",
      "name": "C3",
      "file": "tests/migrations/migrations_test_apps/lookuperror_c/models.py",
      "line": 12
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_c/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/lookuperror_c/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_c/migrations",
      "type": "directory",
      "name": "migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_c/migrations/0002_c2.py",
      "type": "file",
      "name": "0002_c2.py",
      "file": "tests/migrations/migrations_test_apps/lookuperror_c/migrations/0002_c2.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_c/migrations/0002_c2.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/migrations_test_apps/lookuperror_c/migrations/0002_c2.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_c/migrations/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/lookuperror_c/migrations/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_c/migrations/0003_c3.py",
      "type": "file",
      "name": "0003_c3.py",
      "file": "tests/migrations/migrations_test_apps/lookuperror_c/migrations/0003_c3.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_c/migrations/0003_c3.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/migrations_test_apps/lookuperror_c/migrations/0003_c3.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_c/migrations/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/migrations_test_apps/lookuperror_c/migrations/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_c/migrations/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/migrations_test_apps/lookuperror_c/migrations/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_b",
      "type": "directory",
      "name": "lookuperror_b",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_b/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/migrations/migrations_test_apps/lookuperror_b/models.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_b/models.py:B1",
      "type": "class",
      "name": "B1",
      "file": "tests/migrations/migrations_test_apps/lookuperror_b/models.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_b/models.py:B2",
      "type": "class",
      "name": "B2",
      "file": "tests/migrations/migrations_test_apps/lookuperror_b/models.py",
      "line": 8
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_b/models.py:B3",
      "type": "class",
      "name": "B3",
      "file": "tests/migrations/migrations_test_apps/lookuperror_b/models.py",
      "line": 12
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_b/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/lookuperror_b/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_b/migrations",
      "type": "directory",
      "name": "migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_b/migrations/0002_b2.py",
      "type": "file",
      "name": "0002_b2.py",
      "file": "tests/migrations/migrations_test_apps/lookuperror_b/migrations/0002_b2.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_b/migrations/0002_b2.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/migrations_test_apps/lookuperror_b/migrations/0002_b2.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_b/migrations/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/lookuperror_b/migrations/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_b/migrations/0003_b3.py",
      "type": "file",
      "name": "0003_b3.py",
      "file": "tests/migrations/migrations_test_apps/lookuperror_b/migrations/0003_b3.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_b/migrations/0003_b3.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/migrations_test_apps/lookuperror_b/migrations/0003_b3.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_b/migrations/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/migrations_test_apps/lookuperror_b/migrations/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/lookuperror_b/migrations/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/migrations_test_apps/lookuperror_b/migrations/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/normal",
      "type": "directory",
      "name": "normal",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/normal/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/normal/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/migrated_app",
      "type": "directory",
      "name": "migrated_app",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/migrated_app/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/migrations/migrations_test_apps/migrated_app/models.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/migrated_app/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/migrated_app/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/migrated_app/migrations",
      "type": "directory",
      "name": "migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/migrated_app/migrations/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/migrated_app/migrations/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/migrated_app/migrations/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/migrations_test_apps/migrated_app/migrations/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/migrated_app/migrations/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/migrations_test_apps/migrated_app/migrations/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/migrations_test_apps/with_package_model",
      "type": "directory",
      "name": "with_package_model",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/with_package_model/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/with_package_model/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/with_package_model/models",
      "type": "directory",
      "name": "models",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/with_package_model/models/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/with_package_model/models/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/mutate_state_a",
      "type": "directory",
      "name": "mutate_state_a",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/mutate_state_a/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/mutate_state_a/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/mutate_state_a/migrations",
      "type": "directory",
      "name": "migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/mutate_state_a/migrations/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/migrations_test_apps/mutate_state_a/migrations/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/mutate_state_a/migrations/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/migrations_test_apps/mutate_state_a/migrations/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/migrations_test_apps/mutate_state_a/migrations/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/migrations_test_apps/mutate_state_a/migrations/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/related_models_app",
      "type": "directory",
      "name": "related_models_app",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/related_models_app/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/related_models_app/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_unmigdep",
      "type": "directory",
      "name": "test_migrations_unmigdep",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_unmigdep/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations_unmigdep/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_unmigdep/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/test_migrations_unmigdep/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_unmigdep/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_unmigdep/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_fake_split_initial",
      "type": "directory",
      "name": "test_migrations_fake_split_initial",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_fake_split_initial/0002_second.py",
      "type": "file",
      "name": "0002_second.py",
      "file": "tests/migrations/test_migrations_fake_split_initial/0002_second.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_fake_split_initial/0002_second.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_fake_split_initial/0002_second.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_fake_split_initial/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations_fake_split_initial/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_fake_split_initial/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/test_migrations_fake_split_initial/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_fake_split_initial/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_fake_split_initial/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_atomic_operation",
      "type": "directory",
      "name": "test_migrations_atomic_operation",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_atomic_operation/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations_atomic_operation/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_atomic_operation/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/test_migrations_atomic_operation/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_atomic_operation/0001_initial.py:raise_error",
      "type": "function",
      "name": "raise_error",
      "file": "tests/migrations/test_migrations_atomic_operation/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_atomic_operation/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_atomic_operation/0001_initial.py",
      "line": 11
    },
    {
      "id": "tests/migrations/test_migrations",
      "type": "directory",
      "name": "test_migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations/0002_second.py",
      "type": "file",
      "name": "0002_second.py",
      "file": "tests/migrations/test_migrations/0002_second.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations/0002_second.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations/0002_second.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/test_migrations/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_initial_false",
      "type": "directory",
      "name": "test_migrations_initial_false",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_initial_false/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations_initial_false/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_initial_false/0001_not_initial.py",
      "type": "file",
      "name": "0001_not_initial.py",
      "file": "tests/migrations/test_migrations_initial_false/0001_not_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_initial_false/0001_not_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_initial_false/0001_not_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_conflict",
      "type": "directory",
      "name": "test_migrations_conflict",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_conflict/0002_second.py",
      "type": "file",
      "name": "0002_second.py",
      "file": "tests/migrations/test_migrations_conflict/0002_second.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_conflict/0002_second.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_conflict/0002_second.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_conflict/0002_conflicting_second.py",
      "type": "file",
      "name": "0002_conflicting_second.py",
      "file": "tests/migrations/test_migrations_conflict/0002_conflicting_second.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_conflict/0002_conflicting_second.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_conflict/0002_conflicting_second.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_conflict/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations_conflict/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_conflict/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/test_migrations_conflict/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_conflict/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_conflict/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_run_before",
      "type": "directory",
      "name": "test_migrations_run_before",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_run_before/0002_second.py",
      "type": "file",
      "name": "0002_second.py",
      "file": "tests/migrations/test_migrations_run_before/0002_second.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_run_before/0002_second.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_run_before/0002_second.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_run_before/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations_run_before/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_run_before/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/test_migrations_run_before/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_run_before/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_run_before/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_run_before/0003_third.py",
      "type": "file",
      "name": "0003_third.py",
      "file": "tests/migrations/test_migrations_run_before/0003_third.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_run_before/0003_third.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_run_before/0003_third.py",
      "line": 4
    },
    {
      "id": "tests/migrations/deprecated_field_migrations",
      "type": "directory",
      "name": "deprecated_field_migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/deprecated_field_migrations/0002_remove_ipaddressfield_ip.py",
      "type": "file",
      "name": "0002_remove_ipaddressfield_ip.py",
      "file": "tests/migrations/deprecated_field_migrations/0002_remove_ipaddressfield_ip.py",
      "line": 0
    },
    {
      "id": "tests/migrations/deprecated_field_migrations/0002_remove_ipaddressfield_ip.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/deprecated_field_migrations/0002_remove_ipaddressfield_ip.py",
      "line": 4
    },
    {
      "id": "tests/migrations/deprecated_field_migrations/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/deprecated_field_migrations/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/deprecated_field_migrations/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/deprecated_field_migrations/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/deprecated_field_migrations/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/deprecated_field_migrations/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_add_many_to_many_field_initial",
      "type": "directory",
      "name": "test_add_many_to_many_field_initial",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_add_many_to_many_field_initial/0002_initial.py",
      "type": "file",
      "name": "0002_initial.py",
      "file": "tests/migrations/test_add_many_to_many_field_initial/0002_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_add_many_to_many_field_initial/0002_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_add_many_to_many_field_initial/0002_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_add_many_to_many_field_initial/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_add_many_to_many_field_initial/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_add_many_to_many_field_initial/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/test_add_many_to_many_field_initial/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_add_many_to_many_field_initial/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_add_many_to_many_field_initial/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_bad_pyc",
      "type": "directory",
      "name": "test_migrations_bad_pyc",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_bad_pyc/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations_bad_pyc/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex",
      "type": "directory",
      "name": "test_migrations_squashed_complex",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex/4_auto.py",
      "type": "file",
      "name": "4_auto.py",
      "file": "tests/migrations/test_migrations_squashed_complex/4_auto.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex/4_auto.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_complex/4_auto.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex/3_squashed_5.py",
      "type": "file",
      "name": "3_squashed_5.py",
      "file": "tests/migrations/test_migrations_squashed_complex/3_squashed_5.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex/3_squashed_5.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_complex/3_squashed_5.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex/5_auto.py",
      "type": "file",
      "name": "5_auto.py",
      "file": "tests/migrations/test_migrations_squashed_complex/5_auto.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex/5_auto.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_complex/5_auto.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex/7_auto.py",
      "type": "file",
      "name": "7_auto.py",
      "file": "tests/migrations/test_migrations_squashed_complex/7_auto.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex/7_auto.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_complex/7_auto.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations_squashed_complex/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex/6_auto.py",
      "type": "file",
      "name": "6_auto.py",
      "file": "tests/migrations/test_migrations_squashed_complex/6_auto.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex/6_auto.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_complex/6_auto.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex/3_auto.py",
      "type": "file",
      "name": "3_auto.py",
      "file": "tests/migrations/test_migrations_squashed_complex/3_auto.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex/3_auto.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_complex/3_auto.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex/2_auto.py",
      "type": "file",
      "name": "2_auto.py",
      "file": "tests/migrations/test_migrations_squashed_complex/2_auto.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex/2_auto.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_complex/2_auto.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex/1_auto.py",
      "type": "file",
      "name": "1_auto.py",
      "file": "tests/migrations/test_migrations_squashed_complex/1_auto.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex/1_auto.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_complex/1_auto.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_custom_user",
      "type": "directory",
      "name": "test_migrations_custom_user",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_custom_user/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations_custom_user/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_custom_user/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/test_migrations_custom_user/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_custom_user/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_custom_user/0001_initial.py",
      "line": 5
    },
    {
      "id": "tests/migrations/test_migrations_order",
      "type": "directory",
      "name": "test_migrations_order",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_order/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations_order/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_order/0001.py",
      "type": "file",
      "name": "0001.py",
      "file": "tests/migrations/test_migrations_order/0001.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_order/0001.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_order/0001.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed",
      "type": "directory",
      "name": "test_migrations_squashed",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed/0002_second.py",
      "type": "file",
      "name": "0002_second.py",
      "file": "tests/migrations/test_migrations_squashed/0002_second.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed/0002_second.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed/0002_second.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed/0001_squashed_0002.py",
      "type": "file",
      "name": "0001_squashed_0002.py",
      "file": "tests/migrations/test_migrations_squashed/0001_squashed_0002.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed/0001_squashed_0002.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed/0001_squashed_0002.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations_squashed/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/test_migrations_squashed/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_plan",
      "type": "directory",
      "name": "test_migrations_plan",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_plan/0002_second.py",
      "type": "file",
      "name": "0002_second.py",
      "file": "tests/migrations/test_migrations_plan/0002_second.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_plan/0002_second.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_plan/0002_second.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_plan/0004_fourth.py",
      "type": "file",
      "name": "0004_fourth.py",
      "file": "tests/migrations/test_migrations_plan/0004_fourth.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_plan/0004_fourth.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_plan/0004_fourth.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_plan/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations_plan/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_plan/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/test_migrations_plan/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_plan/0001_initial.py:grow_tail",
      "type": "function",
      "name": "grow_tail",
      "file": "tests/migrations/test_migrations_plan/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_plan/0001_initial.py:shrink_tail",
      "type": "function",
      "name": "shrink_tail",
      "file": "tests/migrations/test_migrations_plan/0001_initial.py",
      "line": 9
    },
    {
      "id": "tests/migrations/test_migrations_plan/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_plan/0001_initial.py",
      "line": 14
    },
    {
      "id": "tests/migrations/test_migrations_plan/0003_third.py",
      "type": "file",
      "name": "0003_third.py",
      "file": "tests/migrations/test_migrations_plan/0003_third.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_plan/0003_third.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_plan/0003_third.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_non_atomic",
      "type": "directory",
      "name": "test_migrations_non_atomic",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_non_atomic/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations_non_atomic/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_non_atomic/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/test_migrations_non_atomic/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_non_atomic/0001_initial.py:raise_error",
      "type": "function",
      "name": "raise_error",
      "file": "tests/migrations/test_migrations_non_atomic/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_non_atomic/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_non_atomic/0001_initial.py",
      "line": 11
    },
    {
      "id": "tests/migrations/test_migrations_empty",
      "type": "directory",
      "name": "test_migrations_empty",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_empty/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations_empty/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_auto_now_add",
      "type": "directory",
      "name": "test_auto_now_add",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_auto_now_add/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_auto_now_add/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_auto_now_add/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/test_auto_now_add/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_auto_now_add/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_auto_now_add/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_clashing_prefix",
      "type": "directory",
      "name": "test_migrations_clashing_prefix",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_clashing_prefix/ab.py",
      "type": "file",
      "name": "ab.py",
      "file": "tests/migrations/test_migrations_clashing_prefix/ab.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_clashing_prefix/ab.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_clashing_prefix/ab.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_clashing_prefix/a.py",
      "type": "file",
      "name": "a.py",
      "file": "tests/migrations/test_migrations_clashing_prefix/a.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_clashing_prefix/a.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_clashing_prefix/a.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_clashing_prefix/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations_clashing_prefix/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_erroneous",
      "type": "directory",
      "name": "test_migrations_squashed_erroneous",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_erroneous/3_squashed_5.py",
      "type": "file",
      "name": "3_squashed_5.py",
      "file": "tests/migrations/test_migrations_squashed_erroneous/3_squashed_5.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_erroneous/3_squashed_5.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_erroneous/3_squashed_5.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_erroneous/7_auto.py",
      "type": "file",
      "name": "7_auto.py",
      "file": "tests/migrations/test_migrations_squashed_erroneous/7_auto.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_erroneous/7_auto.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_erroneous/7_auto.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_erroneous/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations_squashed_erroneous/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_erroneous/6_auto.py",
      "type": "file",
      "name": "6_auto.py",
      "file": "tests/migrations/test_migrations_squashed_erroneous/6_auto.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_erroneous/6_auto.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_erroneous/6_auto.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_erroneous/2_auto.py",
      "type": "file",
      "name": "2_auto.py",
      "file": "tests/migrations/test_migrations_squashed_erroneous/2_auto.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_erroneous/2_auto.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_erroneous/2_auto.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_erroneous/1_auto.py",
      "type": "file",
      "name": "1_auto.py",
      "file": "tests/migrations/test_migrations_squashed_erroneous/1_auto.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_erroneous/1_auto.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_erroneous/1_auto.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_no_ancestor",
      "type": "directory",
      "name": "test_migrations_no_ancestor",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_no_ancestor/0002_second.py",
      "type": "file",
      "name": "0002_second.py",
      "file": "tests/migrations/test_migrations_no_ancestor/0002_second.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_no_ancestor/0002_second.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_no_ancestor/0002_second.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_no_ancestor/0002_conflicting_second.py",
      "type": "file",
      "name": "0002_conflicting_second.py",
      "file": "tests/migrations/test_migrations_no_ancestor/0002_conflicting_second.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_no_ancestor/0002_conflicting_second.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_no_ancestor/0002_conflicting_second.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_no_ancestor/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations_no_ancestor/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_no_ancestor/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/test_migrations_no_ancestor/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_no_ancestor/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_no_ancestor/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_private",
      "type": "directory",
      "name": "test_migrations_private",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_private/~util.py",
      "type": "file",
      "name": "~util.py",
      "file": "tests/migrations/test_migrations_private/~util.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_private/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations_private/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_private/.util.py",
      "type": "file",
      "name": ".util.py",
      "file": "tests/migrations/test_migrations_private/.util.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_private/_util.py",
      "type": "file",
      "name": "_util.py",
      "file": "tests/migrations/test_migrations_private/_util.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_private/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/test_migrations_private/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_private/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_private/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_first",
      "type": "directory",
      "name": "test_migrations_first",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_first/second.py",
      "type": "file",
      "name": "second.py",
      "file": "tests/migrations/test_migrations_first/second.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_first/second.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_first/second.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_first/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations_first/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_first/thefirst.py",
      "type": "file",
      "name": "thefirst.py",
      "file": "tests/migrations/test_migrations_first/thefirst.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_first/thefirst.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_first/thefirst.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_extra",
      "type": "directory",
      "name": "test_migrations_squashed_extra",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_extra/0002_second.py",
      "type": "file",
      "name": "0002_second.py",
      "file": "tests/migrations/test_migrations_squashed_extra/0002_second.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_extra/0002_second.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_extra/0002_second.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_extra/0001_squashed_0002.py",
      "type": "file",
      "name": "0001_squashed_0002.py",
      "file": "tests/migrations/test_migrations_squashed_extra/0001_squashed_0002.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_extra/0001_squashed_0002.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_extra/0001_squashed_0002.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_extra/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations_squashed_extra/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_extra/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/test_migrations_squashed_extra/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_extra/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_extra/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_extra/0003_third.py",
      "type": "file",
      "name": "0003_third.py",
      "file": "tests/migrations/test_migrations_squashed_extra/0003_third.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_extra/0003_third.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_extra/0003_third.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_ref_squashed",
      "type": "directory",
      "name": "test_migrations_squashed_ref_squashed",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_ref_squashed/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations_squashed_ref_squashed/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_ref_squashed/app2",
      "type": "directory",
      "name": "app2",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_ref_squashed/app2/1_squashed_2.py",
      "type": "file",
      "name": "1_squashed_2.py",
      "file": "tests/migrations/test_migrations_squashed_ref_squashed/app2/1_squashed_2.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_ref_squashed/app2/1_squashed_2.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_ref_squashed/app2/1_squashed_2.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_ref_squashed/app2/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations_squashed_ref_squashed/app2/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_ref_squashed/app2/2_auto.py",
      "type": "file",
      "name": "2_auto.py",
      "file": "tests/migrations/test_migrations_squashed_ref_squashed/app2/2_auto.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_ref_squashed/app2/2_auto.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_ref_squashed/app2/2_auto.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_ref_squashed/app2/1_auto.py",
      "type": "file",
      "name": "1_auto.py",
      "file": "tests/migrations/test_migrations_squashed_ref_squashed/app2/1_auto.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_ref_squashed/app2/1_auto.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_ref_squashed/app2/1_auto.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_ref_squashed/app1",
      "type": "directory",
      "name": "app1",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_ref_squashed/app1/4_auto.py",
      "type": "file",
      "name": "4_auto.py",
      "file": "tests/migrations/test_migrations_squashed_ref_squashed/app1/4_auto.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_ref_squashed/app1/4_auto.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_ref_squashed/app1/4_auto.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_ref_squashed/app1/2_squashed_3.py",
      "type": "file",
      "name": "2_squashed_3.py",
      "file": "tests/migrations/test_migrations_squashed_ref_squashed/app1/2_squashed_3.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_ref_squashed/app1/2_squashed_3.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_ref_squashed/app1/2_squashed_3.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_ref_squashed/app1/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations_squashed_ref_squashed/app1/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_ref_squashed/app1/3_auto.py",
      "type": "file",
      "name": "3_auto.py",
      "file": "tests/migrations/test_migrations_squashed_ref_squashed/app1/3_auto.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_ref_squashed/app1/3_auto.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_ref_squashed/app1/3_auto.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_ref_squashed/app1/2_auto.py",
      "type": "file",
      "name": "2_auto.py",
      "file": "tests/migrations/test_migrations_squashed_ref_squashed/app1/2_auto.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_ref_squashed/app1/2_auto.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_ref_squashed/app1/2_auto.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_ref_squashed/app1/1_auto.py",
      "type": "file",
      "name": "1_auto.py",
      "file": "tests/migrations/test_migrations_squashed_ref_squashed/app1/1_auto.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_ref_squashed/app1/1_auto.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_ref_squashed/app1/1_auto.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex_multi_apps",
      "type": "directory",
      "name": "test_migrations_squashed_complex_multi_apps",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex_multi_apps/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations_squashed_complex_multi_apps/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2",
      "type": "directory",
      "name": "app2",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2/1_squashed_2.py",
      "type": "file",
      "name": "1_squashed_2.py",
      "file": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2/1_squashed_2.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2/1_squashed_2.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2/1_squashed_2.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2/2_auto.py",
      "type": "file",
      "name": "2_auto.py",
      "file": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2/2_auto.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2/2_auto.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2/2_auto.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2/1_auto.py",
      "type": "file",
      "name": "1_auto.py",
      "file": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2/1_auto.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2/1_auto.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2/1_auto.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1",
      "type": "directory",
      "name": "app1",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/4_auto.py",
      "type": "file",
      "name": "4_auto.py",
      "file": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/4_auto.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/4_auto.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/4_auto.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/2_squashed_3.py",
      "type": "file",
      "name": "2_squashed_3.py",
      "file": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/2_squashed_3.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/2_squashed_3.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/2_squashed_3.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/3_auto.py",
      "type": "file",
      "name": "3_auto.py",
      "file": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/3_auto.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/3_auto.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/3_auto.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/2_auto.py",
      "type": "file",
      "name": "2_auto.py",
      "file": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/2_auto.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/2_auto.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/2_auto.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/1_auto.py",
      "type": "file",
      "name": "1_auto.py",
      "file": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/1_auto.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/1_auto.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/1_auto.py",
      "line": 4
    },
    {
      "id": "tests/migrations/faulty_migrations",
      "type": "directory",
      "name": "faulty_migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/faulty_migrations/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/faulty_migrations/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/faulty_migrations/file.py",
      "type": "file",
      "name": "file.py",
      "file": "tests/migrations/faulty_migrations/file.py",
      "line": 0
    },
    {
      "id": "tests/migrations/faulty_migrations/namespace",
      "type": "directory",
      "name": "namespace",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/faulty_migrations/namespace/foo",
      "type": "directory",
      "name": "foo",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/faulty_migrations/namespace/foo/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/faulty_migrations/namespace/foo/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_no_changes",
      "type": "directory",
      "name": "test_migrations_no_changes",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_no_changes/0002_second.py",
      "type": "file",
      "name": "0002_second.py",
      "file": "tests/migrations/test_migrations_no_changes/0002_second.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_no_changes/0002_second.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_no_changes/0002_second.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_no_changes/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations_no_changes/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_no_changes/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/test_migrations_no_changes/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_no_changes/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_no_changes/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_no_changes/0003_third.py",
      "type": "file",
      "name": "0003_third.py",
      "file": "tests/migrations/test_migrations_no_changes/0003_third.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_no_changes/0003_third.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_no_changes/0003_third.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_backwards_deps_1",
      "type": "directory",
      "name": "test_migrations_backwards_deps_1",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_backwards_deps_1/0002_second.py",
      "type": "file",
      "name": "0002_second.py",
      "file": "tests/migrations/test_migrations_backwards_deps_1/0002_second.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_backwards_deps_1/0002_second.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_backwards_deps_1/0002_second.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_backwards_deps_1/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/test_migrations_backwards_deps_1/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_backwards_deps_1/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_backwards_deps_1/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrations/test_migrations_no_default",
      "type": "directory",
      "name": "test_migrations_no_default",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_no_default/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrations/test_migrations_no_default/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_no_default/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrations/test_migrations_no_default/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrations/test_migrations_no_default/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrations/test_migrations_no_default/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/migrate_signals",
      "type": "directory",
      "name": "migrate_signals",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrate_signals/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/migrate_signals/models.py",
      "line": 0
    },
    {
      "id": "tests/migrate_signals/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrate_signals/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrate_signals/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/migrate_signals/tests.py",
      "line": 0
    },
    {
      "id": "tests/migrate_signals/tests.py:Receiver",
      "type": "class",
      "name": "Receiver",
      "file": "tests/migrate_signals/tests.py",
      "line": 16
    },
    {
      "id": "tests/migrate_signals/tests.py:Receiver.__call__",
      "type": "function",
      "name": "Receiver.__call__",
      "file": "tests/migrate_signals/tests.py",
      "line": 22
    },
    {
      "id": "tests/migrate_signals/tests.py:OneTimeReceiver",
      "type": "class",
      "name": "OneTimeReceiver",
      "file": "tests/migrate_signals/tests.py",
      "line": 27
    },
    {
      "id": "tests/migrate_signals/tests.py:OneTimeReceiver.__call__",
      "type": "function",
      "name": "OneTimeReceiver.__call__",
      "file": "tests/migrate_signals/tests.py",
      "line": 39
    },
    {
      "id": "tests/migrate_signals/tests.py:MigrateSignalTests",
      "type": "class",
      "name": "MigrateSignalTests",
      "file": "tests/migrate_signals/tests.py",
      "line": 61
    },
    {
      "id": "tests/migrate_signals/tests.py:MigrateSignalTests.test_call_time",
      "type": "function",
      "name": "MigrateSignalTests.test_call_time",
      "file": "tests/migrate_signals/tests.py",
      "line": 65
    },
    {
      "id": "tests/migrate_signals/tests.py:MigrateSignalTests.test_args",
      "type": "function",
      "name": "MigrateSignalTests.test_args",
      "file": "tests/migrate_signals/tests.py",
      "line": 69
    },
    {
      "id": "tests/migrate_signals/tests.py:MigrateSignalTests.test_migrations_only",
      "type": "function",
      "name": "MigrateSignalTests.test_migrations_only",
      "file": "tests/migrate_signals/tests.py",
      "line": 89
    },
    {
      "id": "tests/migrate_signals/custom_migrations",
      "type": "directory",
      "name": "custom_migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrate_signals/custom_migrations/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/migrate_signals/custom_migrations/__init__.py",
      "line": 0
    },
    {
      "id": "tests/migrate_signals/custom_migrations/0001_initial.py",
      "type": "file",
      "name": "0001_initial.py",
      "file": "tests/migrate_signals/custom_migrations/0001_initial.py",
      "line": 0
    },
    {
      "id": "tests/migrate_signals/custom_migrations/0001_initial.py:Migration",
      "type": "class",
      "name": "Migration",
      "file": "tests/migrate_signals/custom_migrations/0001_initial.py",
      "line": 4
    },
    {
      "id": "tests/m2m_multiple",
      "type": "directory",
      "name": "m2m_multiple",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/m2m_multiple/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/m2m_multiple/models.py",
      "line": 0
    },
    {
      "id": "tests/m2m_multiple/models.py:Category",
      "type": "class",
      "name": "Category",
      "file": "tests/m2m_multiple/models.py",
      "line": 13
    },
    {
      "id": "tests/m2m_multiple/models.py:Category.Meta",
      "type": "class",
      "name": "Category.Meta",
      "file": "tests/m2m_multiple/models.py",
      "line": 16
    },
    {
      "id": "tests/m2m_multiple/models.py:Category.__str__",
      "type": "function",
      "name": "Category.__str__",
      "file": "tests/m2m_multiple/models.py",
      "line": 19
    },
    {
      "id": "tests/m2m_multiple/models.py:Article",
      "type": "class",
      "name": "Article",
      "file": "tests/m2m_multiple/models.py",
      "line": 23
    },
    {
      "id": "tests/m2m_multiple/models.py:Article.Meta",
      "type": "class",
      "name": "Article.Meta",
      "file": "tests/m2m_multiple/models.py",
      "line": 29
    },
    {
      "id": "tests/m2m_multiple/models.py:Article.__str__",
      "type": "function",
      "name": "Article.__str__",
      "file": "tests/m2m_multiple/models.py",
      "line": 32
    },
    {
      "id": "tests/m2m_multiple/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/m2m_multiple/__init__.py",
      "line": 0
    },
    {
      "id": "tests/m2m_multiple/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/m2m_multiple/tests.py",
      "line": 0
    },
    {
      "id": "tests/m2m_multiple/tests.py:M2MMultipleTests",
      "type": "class",
      "name": "M2MMultipleTests",
      "file": "tests/m2m_multiple/tests.py",
      "line": 8
    },
    {
      "id": "tests/m2m_multiple/tests.py:M2MMultipleTests.test_multiple",
      "type": "function",
      "name": "M2MMultipleTests.test_multiple",
      "file": "tests/m2m_multiple/tests.py",
      "line": 9
    },
    {
      "id": "tests/bulk_create",
      "type": "directory",
      "name": "bulk_create",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/bulk_create/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/bulk_create/models.py",
      "line": 0
    },
    {
      "id": "tests/bulk_create/models.py:Country",
      "type": "class",
      "name": "Country",
      "file": "tests/bulk_create/models.py",
      "line": 14
    },
    {
      "id": "tests/bulk_create/models.py:ProxyCountry",
      "type": "class",
      "name": "ProxyCountry",
      "file": "tests/bulk_create/models.py",
      "line": 20
    },
    {
      "id": "tests/bulk_create/models.py:ProxyCountry.Meta",
      "type": "class",
      "name": "ProxyCountry.Meta",
      "file": "tests/bulk_create/models.py",
      "line": 21
    },
    {
      "id": "tests/bulk_create/models.py:ProxyProxyCountry",
      "type": "class",
      "name": "ProxyProxyCountry",
      "file": "tests/bulk_create/models.py",
      "line": 25
    },
    {
      "id": "tests/bulk_create/models.py:ProxyProxyCountry.Meta",
      "type": "class",
      "name": "ProxyProxyCountry.Meta",
      "file": "tests/bulk_create/models.py",
      "line": 26
    },
    {
      "id": "tests/bulk_create/models.py:ProxyMultiCountry",
      "type": "class",
      "name": "ProxyMultiCountry",
      "file": "tests/bulk_create/models.py",
      "line": 30
    },
    {
      "id": "tests/bulk_create/models.py:ProxyMultiProxyCountry",
      "type": "class",
      "name": "ProxyMultiProxyCountry",
      "file": "tests/bulk_create/models.py",
      "line": 34
    },
    {
      "id": "tests/bulk_create/models.py:ProxyMultiProxyCountry.Meta",
      "type": "class",
      "name": "ProxyMultiProxyCountry.Meta",
      "file": "tests/bulk_create/models.py",
      "line": 35
    },
    {
      "id": "tests/bulk_create/models.py:Place",
      "type": "class",
      "name": "Place",
      "file": "tests/bulk_create/models.py",
      "line": 39
    },
    {
      "id": "tests/bulk_create/models.py:Place.Meta",
      "type": "class",
      "name": "Place.Meta",
      "file": "tests/bulk_create/models.py",
      "line": 42
    },
    {
      "id": "tests/bulk_create/models.py:Restaurant",
      "type": "class",
      "name": "Restaurant",
      "file": "tests/bulk_create/models.py",
      "line": 46
    },
    {
      "id": "tests/bulk_create/models.py:Pizzeria",
      "type": "class",
      "name": "Pizzeria",
      "file": "tests/bulk_create/models.py",
      "line": 50
    },
    {
      "id": "tests/bulk_create/models.py:State",
      "type": "class",
      "name": "State",
      "file": "tests/bulk_create/models.py",
      "line": 54
    },
    {
      "id": "tests/bulk_create/models.py:TwoFields",
      "type": "class",
      "name": "TwoFields",
      "file": "tests/bulk_create/models.py",
      "line": 58
    },
    {
      "id": "tests/bulk_create/models.py:NoFields",
      "type": "class",
      "name": "NoFields",
      "file": "tests/bulk_create/models.py",
      "line": 63
    },
    {
      "id": "tests/bulk_create/models.py:NullableFields",
      "type": "class",
      "name": "NullableFields",
      "file": "tests/bulk_create/models.py",
      "line": 67
    },
    {
      "id": "tests/bulk_create/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/bulk_create/__init__.py",
      "line": 0
    },
    {
      "id": "tests/bulk_create/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/bulk_create/tests.py",
      "line": 0
    },
    {
      "id": "tests/bulk_create/tests.py:BulkCreateTests",
      "type": "class",
      "name": "BulkCreateTests",
      "file": "tests/bulk_create/tests.py",
      "line": 17
    },
    {
      "id": "tests/bulk_create/tests.py:BulkCreateTests.setUp",
      "type": "function",
      "name": "BulkCreateTests.setUp",
      "file": "tests/bulk_create/tests.py",
      "line": 18
    },
    {
      "id": "tests/bulk_create/tests.py:BulkCreateTests.test_simple",
      "type": "function",
      "name": "BulkCreateTests.test_simple",
      "file": "tests/bulk_create/tests.py",
      "line": 26
    },
    {
      "id": "tests/bulk_create/tests.py:BulkCreateTests.test_efficiency",
      "type": "function",
      "name": "BulkCreateTests.test_efficiency",
      "file": "tests/bulk_create/tests.py",
      "line": 38
    },
    {
      "id": "tests/bulk_create/tests.py:BulkCreateTests.test_long_non_ascii_text",
      "type": "function",
      "name": "BulkCreateTests.test_long_non_ascii_text",
      "file": "tests/bulk_create/tests.py",
      "line": 43
    },
    {
      "id": "tests/bulk_create/tests.py:BulkCreateTests.test_multi_table_inheritance_unsupported",
      "type": "function",
      "name": "BulkCreateTests.test_multi_table_inheritance_unsupported",
      "file": "tests/bulk_create/tests.py",
      "line": 52
    },
    {
      "id": "tests/bulk_create/tests.py:BulkCreateTests.test_proxy_inheritance_supported",
      "type": "function",
      "name": "BulkCreateTests.test_proxy_inheritance_supported",
      "file": "tests/bulk_create/tests.py",
      "line": 67
    },
    {
      "id": "tests/bulk_create/tests.py:BulkCreateTests.test_non_auto_increment_pk",
      "type": "function",
      "name": "BulkCreateTests.test_non_auto_increment_pk",
      "file": "tests/bulk_create/tests.py",
      "line": 83
    },
    {
      "id": "tests/bulk_create/tests.py:BulkCreateTests.test_non_auto_increment_pk_efficiency",
      "type": "function",
      "name": "BulkCreateTests.test_non_auto_increment_pk_efficiency",
      "file": "tests/bulk_create/tests.py",
      "line": 93
    },
    {
      "id": "tests/bulk_create/tests.py:BulkCreateTests.test_zero_as_autoval",
      "type": "function",
      "name": "BulkCreateTests.test_zero_as_autoval",
      "file": "tests/bulk_create/tests.py",
      "line": 104
    },
    {
      "id": "tests/bulk_create/tests.py:BulkCreateTests.test_batch_same_vals",
      "type": "function",
      "name": "BulkCreateTests.test_batch_same_vals",
      "file": "tests/bulk_create/tests.py",
      "line": 115
    },
    {
      "id": "tests/bulk_create/tests.py:BulkCreateTests.test_large_batch",
      "type": "function",
      "name": "BulkCreateTests.test_large_batch",
      "file": "tests/bulk_create/tests.py",
      "line": 123
    },
    {
      "id": "tests/bulk_create/tests.py:BulkCreateTests.test_large_single_field_batch",
      "type": "function",
      "name": "BulkCreateTests.test_large_single_field_batch",
      "file": "tests/bulk_create/tests.py",
      "line": 134
    },
    {
      "id": "tests/bulk_create/tests.py:BulkCreateTests.test_large_batch_efficiency",
      "type": "function",
      "name": "BulkCreateTests.test_large_batch_efficiency",
      "file": "tests/bulk_create/tests.py",
      "line": 142
    },
    {
      "id": "tests/bulk_create/tests.py:BulkCreateTests.test_large_batch_mixed",
      "type": "function",
      "name": "BulkCreateTests.test_large_batch_mixed",
      "file": "tests/bulk_create/tests.py",
      "line": 150
    },
    {
      "id": "tests/bulk_create/tests.py:BulkCreateTests.test_large_batch_mixed_efficiency",
      "type": "function",
      "name": "BulkCreateTests.test_large_batch_mixed_efficiency",
      "file": "tests/bulk_create/tests.py",
      "line": 167
    },
    {
      "id": "tests/bulk_create/tests.py:BulkCreateTests.test_explicit_batch_size",
      "type": "function",
      "name": "BulkCreateTests.test_explicit_batch_size",
      "file": "tests/bulk_create/tests.py",
      "line": 179
    },
    {
      "id": "tests/bulk_create/tests.py:BulkCreateTests.test_empty_model",
      "type": "function",
      "name": "BulkCreateTests.test_empty_model",
      "file": "tests/bulk_create/tests.py",
      "line": 194
    },
    {
      "id": "tests/bulk_create/tests.py:BulkCreateTests.test_explicit_batch_size_efficiency",
      "type": "function",
      "name": "BulkCreateTests.test_explicit_batch_size_efficiency",
      "file": "tests/bulk_create/tests.py",
      "line": 199
    },
    {
      "id": "tests/bulk_create/tests.py:BulkCreateTests.test_bulk_insert_expressions",
      "type": "function",
      "name": "BulkCreateTests.test_bulk_insert_expressions",
      "file": "tests/bulk_create/tests.py",
      "line": 208
    },
    {
      "id": "tests/bulk_create/tests.py:BulkCreateTests.test_bulk_insert_nullable_fields",
      "type": "function",
      "name": "BulkCreateTests.test_bulk_insert_nullable_fields",
      "file": "tests/bulk_create/tests.py",
      "line": 217
    },
    {
      "id": "tests/bulk_create/tests.py:BulkCreateTests.test_set_pk_and_insert_single_item",
      "type": "function",
      "name": "BulkCreateTests.test_set_pk_and_insert_single_item",
      "file": "tests/bulk_create/tests.py",
      "line": 230
    },
    {
      "id": "tests/bulk_create/tests.py:BulkCreateTests.test_set_pk_and_query_efficiency",
      "type": "function",
      "name": "BulkCreateTests.test_set_pk_and_query_efficiency",
      "file": "tests/bulk_create/tests.py",
      "line": 237
    },
    {
      "id": "tests/bulk_create/tests.py:BulkCreateTests.test_set_state",
      "type": "function",
      "name": "BulkCreateTests.test_set_state",
      "file": "tests/bulk_create/tests.py",
      "line": 247
    },
    {
      "id": "tests/bulk_create/tests.py:BulkCreateTests.test_set_state_with_pk_specified",
      "type": "function",
      "name": "BulkCreateTests.test_set_state_with_pk_specified",
      "file": "tests/bulk_create/tests.py",
      "line": 256
    },
    {
      "id": "tests/bulk_create/tests.py:BulkCreateTests.test_ignore_conflicts_value_error",
      "type": "function",
      "name": "BulkCreateTests.test_ignore_conflicts_value_error",
      "file": "tests/bulk_create/tests.py",
      "line": 266
    },
    {
      "id": "tests/bulk_create/tests.py:BulkCreateTests.test_ignore_conflicts_ignore",
      "type": "function",
      "name": "BulkCreateTests.test_ignore_conflicts_ignore",
      "file": "tests/bulk_create/tests.py",
      "line": 272
    },
    {
      "id": "tests/filtered_relation",
      "type": "directory",
      "name": "filtered_relation",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/filtered_relation/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/filtered_relation/models.py",
      "line": 0
    },
    {
      "id": "tests/filtered_relation/models.py:Author",
      "type": "class",
      "name": "Author",
      "file": "tests/filtered_relation/models.py",
      "line": 8
    },
    {
      "id": "tests/filtered_relation/models.py:Author.__str__",
      "type": "function",
      "name": "Author.__str__",
      "file": "tests/filtered_relation/models.py",
      "line": 19
    },
    {
      "id": "tests/filtered_relation/models.py:Editor",
      "type": "class",
      "name": "Editor",
      "file": "tests/filtered_relation/models.py",
      "line": 23
    },
    {
      "id": "tests/filtered_relation/models.py:Editor.__str__",
      "type": "function",
      "name": "Editor.__str__",
      "file": "tests/filtered_relation/models.py",
      "line": 26
    },
    {
      "id": "tests/filtered_relation/models.py:Book",
      "type": "class",
      "name": "Book",
      "file": "tests/filtered_relation/models.py",
      "line": 30
    },
    {
      "id": "tests/filtered_relation/models.py:Book.__str__",
      "type": "function",
      "name": "Book.__str__",
      "file": "tests/filtered_relation/models.py",
      "line": 50
    },
    {
      "id": "tests/filtered_relation/models.py:Borrower",
      "type": "class",
      "name": "Borrower",
      "file": "tests/filtered_relation/models.py",
      "line": 54
    },
    {
      "id": "tests/filtered_relation/models.py:Borrower.__str__",
      "type": "function",
      "name": "Borrower.__str__",
      "file": "tests/filtered_relation/models.py",
      "line": 57
    },
    {
      "id": "tests/filtered_relation/models.py:Reservation",
      "type": "class",
      "name": "Reservation",
      "file": "tests/filtered_relation/models.py",
      "line": 61
    },
    {
      "id": "tests/filtered_relation/models.py:Reservation.__str__",
      "type": "function",
      "name": "Reservation.__str__",
      "file": "tests/filtered_relation/models.py",
      "line": 82
    },
    {
      "id": "tests/filtered_relation/models.py:RentalSession",
      "type": "class",
      "name": "RentalSession",
      "file": "tests/filtered_relation/models.py",
      "line": 86
    },
    {
      "id": "tests/filtered_relation/models.py:RentalSession.__str__",
      "type": "function",
      "name": "RentalSession.__str__",
      "file": "tests/filtered_relation/models.py",
      "line": 107
    },
    {
      "id": "tests/filtered_relation/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/filtered_relation/__init__.py",
      "line": 0
    },
    {
      "id": "tests/filtered_relation/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/filtered_relation/tests.py",
      "line": 0
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "type": "class",
      "name": "FilteredRelationTests",
      "file": "tests/filtered_relation/tests.py",
      "line": 9
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.setUpTestData",
      "type": "function",
      "name": "FilteredRelationTests.setUpTestData",
      "file": "tests/filtered_relation/tests.py",
      "line": 12
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_select_related",
      "type": "function",
      "name": "FilteredRelationTests.test_select_related",
      "file": "tests/filtered_relation/tests.py",
      "line": 41
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_select_related_foreign_key",
      "type": "function",
      "name": "FilteredRelationTests.test_select_related_foreign_key",
      "file": "tests/filtered_relation/tests.py",
      "line": 53
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_select_related_foreign_key_for_update_of",
      "type": "function",
      "name": "FilteredRelationTests.test_select_related_foreign_key_for_update_of",
      "file": "tests/filtered_relation/tests.py",
      "line": 66
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_without_join",
      "type": "function",
      "name": "FilteredRelationTests.test_without_join",
      "file": "tests/filtered_relation/tests.py",
      "line": 79
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_with_join",
      "type": "function",
      "name": "FilteredRelationTests.test_with_join",
      "file": "tests/filtered_relation/tests.py",
      "line": 87
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_with_join_and_complex_condition",
      "type": "function",
      "name": "FilteredRelationTests.test_with_join_and_complex_condition",
      "file": "tests/filtered_relation/tests.py",
      "line": 95
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_internal_queryset_alias_mapping",
      "type": "function",
      "name": "FilteredRelationTests.test_internal_queryset_alias_mapping",
      "file": "tests/filtered_relation/tests.py",
      "line": 108
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_with_multiple_filter",
      "type": "function",
      "name": "FilteredRelationTests.test_with_multiple_filter",
      "file": "tests/filtered_relation/tests.py",
      "line": 117
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_multiple_times",
      "type": "function",
      "name": "FilteredRelationTests.test_multiple_times",
      "file": "tests/filtered_relation/tests.py",
      "line": 128
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_exclude_relation_with_join",
      "type": "function",
      "name": "FilteredRelationTests.test_exclude_relation_with_join",
      "file": "tests/filtered_relation/tests.py",
      "line": 136
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_with_m2m",
      "type": "function",
      "name": "FilteredRelationTests.test_with_m2m",
      "file": "tests/filtered_relation/tests.py",
      "line": 144
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_with_m2m_deep",
      "type": "function",
      "name": "FilteredRelationTests.test_with_m2m_deep",
      "file": "tests/filtered_relation/tests.py",
      "line": 152
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_with_m2m_multijoin",
      "type": "function",
      "name": "FilteredRelationTests.test_with_m2m_multijoin",
      "file": "tests/filtered_relation/tests.py",
      "line": 160
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_values_list",
      "type": "function",
      "name": "FilteredRelationTests.test_values_list",
      "file": "tests/filtered_relation/tests.py",
      "line": 168
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_values",
      "type": "function",
      "name": "FilteredRelationTests.test_values",
      "file": "tests/filtered_relation/tests.py",
      "line": 176
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_extra",
      "type": "function",
      "name": "FilteredRelationTests.test_extra",
      "file": "tests/filtered_relation/tests.py",
      "line": 184
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_union",
      "type": "function",
      "name": "FilteredRelationTests.test_union",
      "file": "tests/filtered_relation/tests.py",
      "line": 193
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_intersection",
      "type": "function",
      "name": "FilteredRelationTests.test_intersection",
      "file": "tests/filtered_relation/tests.py",
      "line": 203
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_difference",
      "type": "function",
      "name": "FilteredRelationTests.test_difference",
      "file": "tests/filtered_relation/tests.py",
      "line": 213
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_select_for_update",
      "type": "function",
      "name": "FilteredRelationTests.test_select_for_update",
      "file": "tests/filtered_relation/tests.py",
      "line": 222
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_defer",
      "type": "function",
      "name": "FilteredRelationTests.test_defer",
      "file": "tests/filtered_relation/tests.py",
      "line": 230
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_only_not_supported",
      "type": "function",
      "name": "FilteredRelationTests.test_only_not_supported",
      "file": "tests/filtered_relation/tests.py",
      "line": 240
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_as_subquery",
      "type": "function",
      "name": "FilteredRelationTests.test_as_subquery",
      "file": "tests/filtered_relation/tests.py",
      "line": 247
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_with_foreign_key_error",
      "type": "function",
      "name": "FilteredRelationTests.test_with_foreign_key_error",
      "file": "tests/filtered_relation/tests.py",
      "line": 254
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_with_foreign_key_on_condition_error",
      "type": "function",
      "name": "FilteredRelationTests.test_with_foreign_key_on_condition_error",
      "file": "tests/filtered_relation/tests.py",
      "line": 267
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_with_empty_relation_name_error",
      "type": "function",
      "name": "FilteredRelationTests.test_with_empty_relation_name_error",
      "file": "tests/filtered_relation/tests.py",
      "line": 277
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_with_condition_as_expression_error",
      "type": "function",
      "name": "FilteredRelationTests.test_with_condition_as_expression_error",
      "file": "tests/filtered_relation/tests.py",
      "line": 281
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_with_prefetch_related",
      "type": "function",
      "name": "FilteredRelationTests.test_with_prefetch_related",
      "file": "tests/filtered_relation/tests.py",
      "line": 289
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationTests.test_with_generic_foreign_key",
      "type": "function",
      "name": "FilteredRelationTests.test_with_generic_foreign_key",
      "file": "tests/filtered_relation/tests.py",
      "line": 301
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationAggregationTests",
      "type": "class",
      "name": "FilteredRelationAggregationTests",
      "file": "tests/filtered_relation/tests.py",
      "line": 313
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationAggregationTests.setUpTestData",
      "type": "function",
      "name": "FilteredRelationAggregationTests.setUpTestData",
      "file": "tests/filtered_relation/tests.py",
      "line": 316
    },
    {
      "id": "tests/filtered_relation/tests.py:FilteredRelationAggregationTests.test_aggregate",
      "type": "function",
      "name": "FilteredRelationAggregationTests.test_aggregate",
      "file": "tests/filtered_relation/tests.py",
      "line": 349
    },
    {
      "id": "tests/m2m_through_regress",
      "type": "directory",
      "name": "m2m_through_regress",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/m2m_through_regress/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/m2m_through_regress/models.py",
      "line": 0
    },
    {
      "id": "tests/m2m_through_regress/models.py:Membership",
      "type": "class",
      "name": "Membership",
      "file": "tests/m2m_through_regress/models.py",
      "line": 6
    },
    {
      "id": "tests/m2m_through_regress/models.py:Membership.__str__",
      "type": "function",
      "name": "Membership.__str__",
      "file": "tests/m2m_through_regress/models.py",
      "line": 11
    },
    {
      "id": "tests/m2m_through_regress/models.py:UserMembership",
      "type": "class",
      "name": "UserMembership",
      "file": "tests/m2m_through_regress/models.py",
      "line": 16
    },
    {
      "id": "tests/m2m_through_regress/models.py:UserMembership.__str__",
      "type": "function",
      "name": "UserMembership.__str__",
      "file": "tests/m2m_through_regress/models.py",
      "line": 22
    },
    {
      "id": "tests/m2m_through_regress/models.py:Person",
      "type": "class",
      "name": "Person",
      "file": "tests/m2m_through_regress/models.py",
      "line": 26
    },
    {
      "id": "tests/m2m_through_regress/models.py:Person.__str__",
      "type": "function",
      "name": "Person.__str__",
      "file": "tests/m2m_through_regress/models.py",
      "line": 29
    },
    {
      "id": "tests/m2m_through_regress/models.py:Group",
      "type": "class",
      "name": "Group",
      "file": "tests/m2m_through_regress/models.py",
      "line": 33
    },
    {
      "id": "tests/m2m_through_regress/models.py:Group.__str__",
      "type": "function",
      "name": "Group.__str__",
      "file": "tests/m2m_through_regress/models.py",
      "line": 39
    },
    {
      "id": "tests/m2m_through_regress/models.py:Car",
      "type": "class",
      "name": "Car",
      "file": "tests/m2m_through_regress/models.py",
      "line": 44
    },
    {
      "id": "tests/m2m_through_regress/models.py:Car.__str__",
      "type": "function",
      "name": "Car.__str__",
      "file": "tests/m2m_through_regress/models.py",
      "line": 48
    },
    {
      "id": "tests/m2m_through_regress/models.py:Driver",
      "type": "class",
      "name": "Driver",
      "file": "tests/m2m_through_regress/models.py",
      "line": 52
    },
    {
      "id": "tests/m2m_through_regress/models.py:Driver.Meta",
      "type": "class",
      "name": "Driver.Meta",
      "file": "tests/m2m_through_regress/models.py",
      "line": 55
    },
    {
      "id": "tests/m2m_through_regress/models.py:Driver.__str__",
      "type": "function",
      "name": "Driver.__str__",
      "file": "tests/m2m_through_regress/models.py",
      "line": 58
    },
    {
      "id": "tests/m2m_through_regress/models.py:CarDriver",
      "type": "class",
      "name": "CarDriver",
      "file": "tests/m2m_through_regress/models.py",
      "line": 62
    },
    {
      "id": "tests/m2m_through_regress/models.py:CarDriver.__str__",
      "type": "function",
      "name": "CarDriver.__str__",
      "file": "tests/m2m_through_regress/models.py",
      "line": 66
    },
    {
      "id": "tests/m2m_through_regress/models.py:Event",
      "type": "class",
      "name": "Event",
      "file": "tests/m2m_through_regress/models.py",
      "line": 71
    },
    {
      "id": "tests/m2m_through_regress/models.py:Competitor",
      "type": "class",
      "name": "Competitor",
      "file": "tests/m2m_through_regress/models.py",
      "line": 82
    },
    {
      "id": "tests/m2m_through_regress/models.py:IndividualCompetitor",
      "type": "class",
      "name": "IndividualCompetitor",
      "file": "tests/m2m_through_regress/models.py",
      "line": 86
    },
    {
      "id": "tests/m2m_through_regress/models.py:CompetingTeam",
      "type": "class",
      "name": "CompetingTeam",
      "file": "tests/m2m_through_regress/models.py",
      "line": 90
    },
    {
      "id": "tests/m2m_through_regress/models.py:ProxiedIndividualCompetitor",
      "type": "class",
      "name": "ProxiedIndividualCompetitor",
      "file": "tests/m2m_through_regress/models.py",
      "line": 94
    },
    {
      "id": "tests/m2m_through_regress/models.py:ProxiedIndividualCompetitor.Meta",
      "type": "class",
      "name": "ProxiedIndividualCompetitor.Meta",
      "file": "tests/m2m_through_regress/models.py",
      "line": 95
    },
    {
      "id": "tests/m2m_through_regress/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/m2m_through_regress/__init__.py",
      "line": 0
    },
    {
      "id": "tests/m2m_through_regress/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 0
    },
    {
      "id": "tests/m2m_through_regress/tests.py:M2MThroughTestCase",
      "type": "class",
      "name": "M2MThroughTestCase",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 12
    },
    {
      "id": "tests/m2m_through_regress/tests.py:M2MThroughTestCase.setUpTestData",
      "type": "function",
      "name": "M2MThroughTestCase.setUpTestData",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 14
    },
    {
      "id": "tests/m2m_through_regress/tests.py:M2MThroughTestCase.test_retrieve_reverse_m2m_items",
      "type": "function",
      "name": "M2MThroughTestCase.test_retrieve_reverse_m2m_items",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 34
    },
    {
      "id": "tests/m2m_through_regress/tests.py:M2MThroughTestCase.test_retrieve_forward_m2m_items",
      "type": "function",
      "name": "M2MThroughTestCase.test_retrieve_forward_m2m_items",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 43
    },
    {
      "id": "tests/m2m_through_regress/tests.py:M2MThroughTestCase.test_retrieve_reverse_m2m_items_via_custom_id_intermediary",
      "type": "function",
      "name": "M2MThroughTestCase.test_retrieve_reverse_m2m_items_via_custom_id_intermediary",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 50
    },
    {
      "id": "tests/m2m_through_regress/tests.py:M2MThroughTestCase.test_retrieve_forward_m2m_items_via_custom_id_intermediary",
      "type": "function",
      "name": "M2MThroughTestCase.test_retrieve_forward_m2m_items_via_custom_id_intermediary",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 59
    },
    {
      "id": "tests/m2m_through_regress/tests.py:M2MThroughTestCase.test_join_trimming_forwards",
      "type": "function",
      "name": "M2MThroughTestCase.test_join_trimming_forwards",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 66
    },
    {
      "id": "tests/m2m_through_regress/tests.py:M2MThroughTestCase.test_join_trimming_reverse",
      "type": "function",
      "name": "M2MThroughTestCase.test_join_trimming_reverse",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 77
    },
    {
      "id": "tests/m2m_through_regress/tests.py:M2MThroughSerializationTestCase",
      "type": "class",
      "name": "M2MThroughSerializationTestCase",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 85
    },
    {
      "id": "tests/m2m_through_regress/tests.py:M2MThroughSerializationTestCase.setUpTestData",
      "type": "function",
      "name": "M2MThroughSerializationTestCase.setUpTestData",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 87
    },
    {
      "id": "tests/m2m_through_regress/tests.py:M2MThroughSerializationTestCase.test_serialization",
      "type": "function",
      "name": "M2MThroughSerializationTestCase.test_serialization",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 92
    },
    {
      "id": "tests/m2m_through_regress/tests.py:ToFieldThroughTests",
      "type": "class",
      "name": "ToFieldThroughTests",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 126
    },
    {
      "id": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.setUpTestData",
      "type": "function",
      "name": "ToFieldThroughTests.setUpTestData",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 128
    },
    {
      "id": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.test_to_field",
      "type": "function",
      "name": "ToFieldThroughTests.test_to_field",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 141
    },
    {
      "id": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.test_to_field_reverse",
      "type": "function",
      "name": "ToFieldThroughTests.test_to_field_reverse",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 147
    },
    {
      "id": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.test_to_field_clear_reverse",
      "type": "function",
      "name": "ToFieldThroughTests.test_to_field_clear_reverse",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 153
    },
    {
      "id": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.test_to_field_clear",
      "type": "function",
      "name": "ToFieldThroughTests.test_to_field_clear",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 158
    },
    {
      "id": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.test_add",
      "type": "function",
      "name": "ToFieldThroughTests.test_add",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 168
    },
    {
      "id": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.test_m2m_relations_unusable_on_null_to_field",
      "type": "function",
      "name": "ToFieldThroughTests.test_m2m_relations_unusable_on_null_to_field",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 180
    },
    {
      "id": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.test_m2m_relations_unusable_on_null_pk_obj",
      "type": "function",
      "name": "ToFieldThroughTests.test_m2m_relations_unusable_on_null_pk_obj",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 189
    },
    {
      "id": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.test_add_related_null",
      "type": "function",
      "name": "ToFieldThroughTests.test_add_related_null",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 197
    },
    {
      "id": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.test_add_reverse",
      "type": "function",
      "name": "ToFieldThroughTests.test_add_reverse",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 203
    },
    {
      "id": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.test_add_null_reverse",
      "type": "function",
      "name": "ToFieldThroughTests.test_add_null_reverse",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 216
    },
    {
      "id": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.test_add_null_reverse_related",
      "type": "function",
      "name": "ToFieldThroughTests.test_add_null_reverse_related",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 222
    },
    {
      "id": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.test_remove",
      "type": "function",
      "name": "ToFieldThroughTests.test_remove",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 231
    },
    {
      "id": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.test_remove_reverse",
      "type": "function",
      "name": "ToFieldThroughTests.test_remove_reverse",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 240
    },
    {
      "id": "tests/m2m_through_regress/tests.py:ThroughLoadDataTestCase",
      "type": "class",
      "name": "ThroughLoadDataTestCase",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 250
    },
    {
      "id": "tests/m2m_through_regress/tests.py:ThroughLoadDataTestCase.test_sequence_creation",
      "type": "function",
      "name": "ThroughLoadDataTestCase.test_sequence_creation",
      "file": "tests/m2m_through_regress/tests.py",
      "line": 253
    },
    {
      "id": "tests/m2m_through_regress/test_multitable.py",
      "type": "file",
      "name": "test_multitable.py",
      "file": "tests/m2m_through_regress/test_multitable.py",
      "line": 0
    },
    {
      "id": "tests/m2m_through_regress/test_multitable.py:MultiTableTests",
      "type": "class",
      "name": "MultiTableTests",
      "file": "tests/m2m_through_regress/test_multitable.py",
      "line": 8
    },
    {
      "id": "tests/m2m_through_regress/test_multitable.py:MultiTableTests.setUpTestData",
      "type": "function",
      "name": "MultiTableTests.setUpTestData",
      "file": "tests/m2m_through_regress/test_multitable.py",
      "line": 10
    },
    {
      "id": "tests/m2m_through_regress/test_multitable.py:MultiTableTests.test_m2m_query",
      "type": "function",
      "name": "MultiTableTests.test_m2m_query",
      "file": "tests/m2m_through_regress/test_multitable.py",
      "line": 23
    },
    {
      "id": "tests/m2m_through_regress/test_multitable.py:MultiTableTests.test_m2m_reverse_query",
      "type": "function",
      "name": "MultiTableTests.test_m2m_reverse_query",
      "file": "tests/m2m_through_regress/test_multitable.py",
      "line": 27
    },
    {
      "id": "tests/m2m_through_regress/test_multitable.py:MultiTableTests.test_m2m_query_proxied",
      "type": "function",
      "name": "MultiTableTests.test_m2m_query_proxied",
      "file": "tests/m2m_through_regress/test_multitable.py",
      "line": 31
    },
    {
      "id": "tests/m2m_through_regress/test_multitable.py:MultiTableTests.test_m2m_reverse_query_proxied",
      "type": "function",
      "name": "MultiTableTests.test_m2m_reverse_query_proxied",
      "file": "tests/m2m_through_regress/test_multitable.py",
      "line": 35
    },
    {
      "id": "tests/m2m_through_regress/test_multitable.py:MultiTableTests.test_m2m_prefetch_proxied",
      "type": "function",
      "name": "MultiTableTests.test_m2m_prefetch_proxied",
      "file": "tests/m2m_through_regress/test_multitable.py",
      "line": 39
    },
    {
      "id": "tests/m2m_through_regress/test_multitable.py:MultiTableTests.test_m2m_prefetch_reverse_proxied",
      "type": "function",
      "name": "MultiTableTests.test_m2m_prefetch_reverse_proxied",
      "file": "tests/m2m_through_regress/test_multitable.py",
      "line": 45
    },
    {
      "id": "tests/select_related",
      "type": "directory",
      "name": "select_related",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/select_related/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/select_related/models.py",
      "line": 0
    },
    {
      "id": "tests/select_related/models.py:Domain",
      "type": "class",
      "name": "Domain",
      "file": "tests/select_related/models.py",
      "line": 19
    },
    {
      "id": "tests/select_related/models.py:Domain.__str__",
      "type": "function",
      "name": "Domain.__str__",
      "file": "tests/select_related/models.py",
      "line": 22
    },
    {
      "id": "tests/select_related/models.py:Kingdom",
      "type": "class",
      "name": "Kingdom",
      "file": "tests/select_related/models.py",
      "line": 26
    },
    {
      "id": "tests/select_related/models.py:Kingdom.__str__",
      "type": "function",
      "name": "Kingdom.__str__",
      "file": "tests/select_related/models.py",
      "line": 30
    },
    {
      "id": "tests/select_related/models.py:Phylum",
      "type": "class",
      "name": "Phylum",
      "file": "tests/select_related/models.py",
      "line": 34
    },
    {
      "id": "tests/select_related/models.py:Phylum.__str__",
      "type": "function",
      "name": "Phylum.__str__",
      "file": "tests/select_related/models.py",
      "line": 38
    },
    {
      "id": "tests/select_related/models.py:Klass",
      "type": "class",
      "name": "Klass",
      "file": "tests/select_related/models.py",
      "line": 42
    },
    {
      "id": "tests/select_related/models.py:Klass.__str__",
      "type": "function",
      "name": "Klass.__str__",
      "file": "tests/select_related/models.py",
      "line": 46
    },
    {
      "id": "tests/select_related/models.py:Order",
      "type": "class",
      "name": "Order",
      "file": "tests/select_related/models.py",
      "line": 50
    },
    {
      "id": "tests/select_related/models.py:Order.__str__",
      "type": "function",
      "name": "Order.__str__",
      "file": "tests/select_related/models.py",
      "line": 54
    },
    {
      "id": "tests/select_related/models.py:Family",
      "type": "class",
      "name": "Family",
      "file": "tests/select_related/models.py",
      "line": 58
    },
    {
      "id": "tests/select_related/models.py:Family.__str__",
      "type": "function",
      "name": "Family.__str__",
      "file": "tests/select_related/models.py",
      "line": 62
    },
    {
      "id": "tests/select_related/models.py:Genus",
      "type": "class",
      "name": "Genus",
      "file": "tests/select_related/models.py",
      "line": 66
    },
    {
      "id": "tests/select_related/models.py:Genus.__str__",
      "type": "function",
      "name": "Genus.__str__",
      "file": "tests/select_related/models.py",
      "line": 70
    },
    {
      "id": "tests/select_related/models.py:Species",
      "type": "class",
      "name": "Species",
      "file": "tests/select_related/models.py",
      "line": 74
    },
    {
      "id": "tests/select_related/models.py:Species.__str__",
      "type": "function",
      "name": "Species.__str__",
      "file": "tests/select_related/models.py",
      "line": 78
    },
    {
      "id": "tests/select_related/models.py:HybridSpecies",
      "type": "class",
      "name": "HybridSpecies",
      "file": "tests/select_related/models.py",
      "line": 84
    },
    {
      "id": "tests/select_related/models.py:HybridSpecies.__str__",
      "type": "function",
      "name": "HybridSpecies.__str__",
      "file": "tests/select_related/models.py",
      "line": 89
    },
    {
      "id": "tests/select_related/models.py:Topping",
      "type": "class",
      "name": "Topping",
      "file": "tests/select_related/models.py",
      "line": 93
    },
    {
      "id": "tests/select_related/models.py:Topping.__str__",
      "type": "function",
      "name": "Topping.__str__",
      "file": "tests/select_related/models.py",
      "line": 96
    },
    {
      "id": "tests/select_related/models.py:Pizza",
      "type": "class",
      "name": "Pizza",
      "file": "tests/select_related/models.py",
      "line": 100
    },
    {
      "id": "tests/select_related/models.py:Pizza.__str__",
      "type": "function",
      "name": "Pizza.__str__",
      "file": "tests/select_related/models.py",
      "line": 104
    },
    {
      "id": "tests/select_related/models.py:TaggedItem",
      "type": "class",
      "name": "TaggedItem",
      "file": "tests/select_related/models.py",
      "line": 108
    },
    {
      "id": "tests/select_related/models.py:TaggedItem.__str__",
      "type": "function",
      "name": "TaggedItem.__str__",
      "file": "tests/select_related/models.py",
      "line": 115
    },
    {
      "id": "tests/select_related/models.py:Bookmark",
      "type": "class",
      "name": "Bookmark",
      "file": "tests/select_related/models.py",
      "line": 119
    },
    {
      "id": "tests/select_related/models.py:Bookmark.__str__",
      "type": "function",
      "name": "Bookmark.__str__",
      "file": "tests/select_related/models.py",
      "line": 123
    },
    {
      "id": "tests/select_related/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/select_related/__init__.py",
      "line": 0
    },
    {
      "id": "tests/select_related/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/select_related/tests.py",
      "line": 0
    },
    {
      "id": "tests/select_related/tests.py:SelectRelatedTests",
      "type": "class",
      "name": "SelectRelatedTests",
      "file": "tests/select_related/tests.py",
      "line": 10
    },
    {
      "id": "tests/select_related/tests.py:SelectRelatedTests.create_tree",
      "type": "function",
      "name": "SelectRelatedTests.create_tree",
      "file": "tests/select_related/tests.py",
      "line": 13
    },
    {
      "id": "tests/select_related/tests.py:SelectRelatedTests.setUpTestData",
      "type": "function",
      "name": "SelectRelatedTests.setUpTestData",
      "file": "tests/select_related/tests.py",
      "line": 33
    },
    {
      "id": "tests/select_related/tests.py:SelectRelatedTests.test_access_fks_without_select_related",
      "type": "function",
      "name": "SelectRelatedTests.test_access_fks_without_select_related",
      "file": "tests/select_related/tests.py",
      "line": 39
    },
    {
      "id": "tests/select_related/tests.py:SelectRelatedTests.test_access_fks_with_select_related",
      "type": "function",
      "name": "SelectRelatedTests.test_access_fks_with_select_related",
      "file": "tests/select_related/tests.py",
      "line": 48
    },
    {
      "id": "tests/select_related/tests.py:SelectRelatedTests.test_list_without_select_related",
      "type": "function",
      "name": "SelectRelatedTests.test_list_without_select_related",
      "file": "tests/select_related/tests.py",
      "line": 62
    },
    {
      "id": "tests/select_related/tests.py:SelectRelatedTests.test_list_with_select_related",
      "type": "function",
      "name": "SelectRelatedTests.test_list_with_select_related",
      "file": "tests/select_related/tests.py",
      "line": 77
    },
    {
      "id": "tests/select_related/tests.py:SelectRelatedTests.test_list_with_depth",
      "type": "function",
      "name": "SelectRelatedTests.test_list_with_depth",
      "file": "tests/select_related/tests.py",
      "line": 92
    },
    {
      "id": "tests/select_related/tests.py:SelectRelatedTests.test_select_related_with_extra",
      "type": "function",
      "name": "SelectRelatedTests.test_select_related_with_extra",
      "file": "tests/select_related/tests.py",
      "line": 103
    },
    {
      "id": "tests/select_related/tests.py:SelectRelatedTests.test_certain_fields",
      "type": "function",
      "name": "SelectRelatedTests.test_certain_fields",
      "file": "tests/select_related/tests.py",
      "line": 109
    },
    {
      "id": "tests/select_related/tests.py:SelectRelatedTests.test_more_certain_fields",
      "type": "function",
      "name": "SelectRelatedTests.test_more_certain_fields",
      "file": "tests/select_related/tests.py",
      "line": 122
    },
    {
      "id": "tests/select_related/tests.py:SelectRelatedTests.test_field_traversal",
      "type": "function",
      "name": "SelectRelatedTests.test_field_traversal",
      "file": "tests/select_related/tests.py",
      "line": 133
    },
    {
      "id": "tests/select_related/tests.py:SelectRelatedTests.test_none_clears_list",
      "type": "function",
      "name": "SelectRelatedTests.test_none_clears_list",
      "file": "tests/select_related/tests.py",
      "line": 140
    },
    {
      "id": "tests/select_related/tests.py:SelectRelatedTests.test_chaining",
      "type": "function",
      "name": "SelectRelatedTests.test_chaining",
      "file": "tests/select_related/tests.py",
      "line": 144
    },
    {
      "id": "tests/select_related/tests.py:SelectRelatedTests.test_reverse_relation_caching",
      "type": "function",
      "name": "SelectRelatedTests.test_reverse_relation_caching",
      "file": "tests/select_related/tests.py",
      "line": 153
    },
    {
      "id": "tests/select_related/tests.py:SelectRelatedTests.test_select_related_after_values",
      "type": "function",
      "name": "SelectRelatedTests.test_select_related_after_values",
      "file": "tests/select_related/tests.py",
      "line": 162
    },
    {
      "id": "tests/select_related/tests.py:SelectRelatedTests.test_select_related_after_values_list",
      "type": "function",
      "name": "SelectRelatedTests.test_select_related_after_values_list",
      "file": "tests/select_related/tests.py",
      "line": 170
    },
    {
      "id": "tests/select_related/tests.py:SelectRelatedValidationTests",
      "type": "class",
      "name": "SelectRelatedValidationTests",
      "file": "tests/select_related/tests.py",
      "line": 179
    },
    {
      "id": "tests/select_related/tests.py:SelectRelatedValidationTests.test_non_relational_field",
      "type": "function",
      "name": "SelectRelatedValidationTests.test_non_relational_field",
      "file": "tests/select_related/tests.py",
      "line": 187
    },
    {
      "id": "tests/select_related/tests.py:SelectRelatedValidationTests.test_non_relational_field_nested",
      "type": "function",
      "name": "SelectRelatedValidationTests.test_non_relational_field_nested",
      "file": "tests/select_related/tests.py",
      "line": 197
    },
    {
      "id": "tests/select_related/tests.py:SelectRelatedValidationTests.test_many_to_many_field",
      "type": "function",
      "name": "SelectRelatedValidationTests.test_many_to_many_field",
      "file": "tests/select_related/tests.py",
      "line": 201
    },
    {
      "id": "tests/select_related/tests.py:SelectRelatedValidationTests.test_reverse_relational_field",
      "type": "function",
      "name": "SelectRelatedValidationTests.test_reverse_relational_field",
      "file": "tests/select_related/tests.py",
      "line": 205
    },
    {
      "id": "tests/select_related/tests.py:SelectRelatedValidationTests.test_invalid_field",
      "type": "function",
      "name": "SelectRelatedValidationTests.test_invalid_field",
      "file": "tests/select_related/tests.py",
      "line": 209
    },
    {
      "id": "tests/select_related/tests.py:SelectRelatedValidationTests.test_generic_relations",
      "type": "function",
      "name": "SelectRelatedValidationTests.test_generic_relations",
      "file": "tests/select_related/tests.py",
      "line": 219
    },
    {
      "id": "tests/admin_default_site",
      "type": "directory",
      "name": "admin_default_site",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_default_site/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/admin_default_site/__init__.py",
      "line": 0
    },
    {
      "id": "tests/admin_default_site/apps.py",
      "type": "file",
      "name": "apps.py",
      "file": "tests/admin_default_site/apps.py",
      "line": 0
    },
    {
      "id": "tests/admin_default_site/apps.py:MyCustomAdminConfig",
      "type": "class",
      "name": "MyCustomAdminConfig",
      "file": "tests/admin_default_site/apps.py",
      "line": 4
    },
    {
      "id": "tests/admin_default_site/sites.py",
      "type": "file",
      "name": "sites.py",
      "file": "tests/admin_default_site/sites.py",
      "line": 0
    },
    {
      "id": "tests/admin_default_site/sites.py:CustomAdminSite",
      "type": "class",
      "name": "CustomAdminSite",
      "file": "tests/admin_default_site/sites.py",
      "line": 4
    },
    {
      "id": "tests/admin_default_site/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/admin_default_site/tests.py",
      "line": 0
    },
    {
      "id": "tests/admin_default_site/tests.py:CustomAdminSiteTests",
      "type": "class",
      "name": "CustomAdminSiteTests",
      "file": "tests/admin_default_site/tests.py",
      "line": 14
    },
    {
      "id": "tests/admin_default_site/tests.py:CustomAdminSiteTests.setUp",
      "type": "function",
      "name": "CustomAdminSiteTests.setUp",
      "file": "tests/admin_default_site/tests.py",
      "line": 16
    },
    {
      "id": "tests/admin_default_site/tests.py:CustomAdminSiteTests.tearDown",
      "type": "function",
      "name": "CustomAdminSiteTests.tearDown",
      "file": "tests/admin_default_site/tests.py",
      "line": 22
    },
    {
      "id": "tests/admin_default_site/tests.py:CustomAdminSiteTests.test_use_custom_admin_site",
      "type": "function",
      "name": "CustomAdminSiteTests.test_use_custom_admin_site",
      "file": "tests/admin_default_site/tests.py",
      "line": 25
    },
    {
      "id": "tests/admin_default_site/tests.py:DefaultAdminSiteTests",
      "type": "class",
      "name": "DefaultAdminSiteTests",
      "file": "tests/admin_default_site/tests.py",
      "line": 29
    },
    {
      "id": "tests/admin_default_site/tests.py:DefaultAdminSiteTests.test_use_default_admin_site",
      "type": "function",
      "name": "DefaultAdminSiteTests.test_use_default_admin_site",
      "file": "tests/admin_default_site/tests.py",
      "line": 30
    },
    {
      "id": "tests/no_models",
      "type": "directory",
      "name": "no_models",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/no_models/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/no_models/__init__.py",
      "line": 0
    },
    {
      "id": "tests/no_models/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/no_models/tests.py",
      "line": 0
    },
    {
      "id": "tests/no_models/tests.py:NoModelTests",
      "type": "class",
      "name": "NoModelTests",
      "file": "tests/no_models/tests.py",
      "line": 5
    },
    {
      "id": "tests/no_models/tests.py:NoModelTests.test_no_models",
      "type": "function",
      "name": "NoModelTests.test_no_models",
      "file": "tests/no_models/tests.py",
      "line": 7
    },
    {
      "id": "tests/dates",
      "type": "directory",
      "name": "dates",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/dates/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/dates/models.py",
      "line": 0
    },
    {
      "id": "tests/dates/models.py:Article",
      "type": "class",
      "name": "Article",
      "file": "tests/dates/models.py",
      "line": 5
    },
    {
      "id": "tests/dates/models.py:Article.__str__",
      "type": "function",
      "name": "Article.__str__",
      "file": "tests/dates/models.py",
      "line": 12
    },
    {
      "id": "tests/dates/models.py:Comment",
      "type": "class",
      "name": "Comment",
      "file": "tests/dates/models.py",
      "line": 16
    },
    {
      "id": "tests/dates/models.py:Comment.__str__",
      "type": "function",
      "name": "Comment.__str__",
      "file": "tests/dates/models.py",
      "line": 22
    },
    {
      "id": "tests/dates/models.py:Category",
      "type": "class",
      "name": "Category",
      "file": "tests/dates/models.py",
      "line": 26
    },
    {
      "id": "tests/dates/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/dates/__init__.py",
      "line": 0
    },
    {
      "id": "tests/dates/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/dates/tests.py",
      "line": 0
    },
    {
      "id": "tests/dates/tests.py:DatesTests",
      "type": "class",
      "name": "DatesTests",
      "file": "tests/dates/tests.py",
      "line": 11
    },
    {
      "id": "tests/dates/tests.py:DatesTests.test_related_model_traverse",
      "type": "function",
      "name": "DatesTests.test_related_model_traverse",
      "file": "tests/dates/tests.py",
      "line": 12
    },
    {
      "id": "tests/dates/tests.py:DatesTests.test_dates_fails_when_no_arguments_are_provided",
      "type": "function",
      "name": "DatesTests.test_dates_fails_when_no_arguments_are_provided",
      "file": "tests/dates/tests.py",
      "line": 87
    },
    {
      "id": "tests/dates/tests.py:DatesTests.test_dates_fails_when_given_invalid_field_argument",
      "type": "function",
      "name": "DatesTests.test_dates_fails_when_given_invalid_field_argument",
      "file": "tests/dates/tests.py",
      "line": 91
    },
    {
      "id": "tests/dates/tests.py:DatesTests.test_dates_fails_when_given_invalid_kind_argument",
      "type": "function",
      "name": "DatesTests.test_dates_fails_when_given_invalid_kind_argument",
      "file": "tests/dates/tests.py",
      "line": 101
    },
    {
      "id": "tests/dates/tests.py:DatesTests.test_dates_fails_when_given_invalid_order_argument",
      "type": "function",
      "name": "DatesTests.test_dates_fails_when_given_invalid_order_argument",
      "file": "tests/dates/tests.py",
      "line": 106
    },
    {
      "id": "tests/dates/tests.py:DatesTests.test_dates_trunc_datetime_fields",
      "type": "function",
      "name": "DatesTests.test_dates_trunc_datetime_fields",
      "file": "tests/dates/tests.py",
      "line": 111
    },
    {
      "id": "tests/dates/tests.py:DatesTests.test_dates_avoid_datetime_cast",
      "type": "function",
      "name": "DatesTests.test_dates_avoid_datetime_cast",
      "file": "tests/dates/tests.py",
      "line": 129
    },
    {
      "id": "tests/get_earliest_or_latest",
      "type": "directory",
      "name": "get_earliest_or_latest",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/get_earliest_or_latest/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/get_earliest_or_latest/models.py",
      "line": 0
    },
    {
      "id": "tests/get_earliest_or_latest/models.py:Article",
      "type": "class",
      "name": "Article",
      "file": "tests/get_earliest_or_latest/models.py",
      "line": 4
    },
    {
      "id": "tests/get_earliest_or_latest/models.py:Article.Meta",
      "type": "class",
      "name": "Article.Meta",
      "file": "tests/get_earliest_or_latest/models.py",
      "line": 9
    },
    {
      "id": "tests/get_earliest_or_latest/models.py:Person",
      "type": "class",
      "name": "Person",
      "file": "tests/get_earliest_or_latest/models.py",
      "line": 13
    },
    {
      "id": "tests/get_earliest_or_latest/models.py:IndexErrorQuerySet",
      "type": "class",
      "name": "IndexErrorQuerySet",
      "file": "tests/get_earliest_or_latest/models.py",
      "line": 21
    },
    {
      "id": "tests/get_earliest_or_latest/models.py:IndexErrorQuerySet.__iter__",
      "type": "function",
      "name": "IndexErrorQuerySet.__iter__",
      "file": "tests/get_earliest_or_latest/models.py",
      "line": 26
    },
    {
      "id": "tests/get_earliest_or_latest/models.py:IndexErrorArticle",
      "type": "class",
      "name": "IndexErrorArticle",
      "file": "tests/get_earliest_or_latest/models.py",
      "line": 30
    },
    {
      "id": "tests/get_earliest_or_latest/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/get_earliest_or_latest/__init__.py",
      "line": 0
    },
    {
      "id": "tests/get_earliest_or_latest/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/get_earliest_or_latest/tests.py",
      "line": 0
    },
    {
      "id": "tests/get_earliest_or_latest/tests.py:EarliestOrLatestTests",
      "type": "class",
      "name": "EarliestOrLatestTests",
      "file": "tests/get_earliest_or_latest/tests.py",
      "line": 8
    },
    {
      "id": "tests/get_earliest_or_latest/tests.py:EarliestOrLatestTests.setUpClass",
      "type": "function",
      "name": "EarliestOrLatestTests.setUpClass",
      "file": "tests/get_earliest_or_latest/tests.py",
      "line": 12
    },
    {
      "id": "tests/get_earliest_or_latest/tests.py:EarliestOrLatestTests.tearDown",
      "type": "function",
      "name": "EarliestOrLatestTests.tearDown",
      "file": "tests/get_earliest_or_latest/tests.py",
      "line": 16
    },
    {
      "id": "tests/get_earliest_or_latest/tests.py:EarliestOrLatestTests.test_earliest",
      "type": "function",
      "name": "EarliestOrLatestTests.test_earliest",
      "file": "tests/get_earliest_or_latest/tests.py",
      "line": 19
    },
    {
      "id": "tests/get_earliest_or_latest/tests.py:EarliestOrLatestTests.test_latest",
      "type": "function",
      "name": "EarliestOrLatestTests.test_latest",
      "file": "tests/get_earliest_or_latest/tests.py",
      "line": 84
    },
    {
      "id": "tests/get_earliest_or_latest/tests.py:EarliestOrLatestTests.test_latest_manual",
      "type": "function",
      "name": "EarliestOrLatestTests.test_latest_manual",
      "file": "tests/get_earliest_or_latest/tests.py",
      "line": 146
    },
    {
      "id": "tests/get_earliest_or_latest/tests.py:TestFirstLast",
      "type": "class",
      "name": "TestFirstLast",
      "file": "tests/get_earliest_or_latest/tests.py",
      "line": 160
    },
    {
      "id": "tests/get_earliest_or_latest/tests.py:TestFirstLast.test_first",
      "type": "function",
      "name": "TestFirstLast.test_first",
      "file": "tests/get_earliest_or_latest/tests.py",
      "line": 162
    },
    {
      "id": "tests/get_earliest_or_latest/tests.py:TestFirstLast.test_last",
      "type": "function",
      "name": "TestFirstLast.test_last",
      "file": "tests/get_earliest_or_latest/tests.py",
      "line": 170
    },
    {
      "id": "tests/get_earliest_or_latest/tests.py:TestFirstLast.test_index_error_not_suppressed",
      "type": "function",
      "name": "TestFirstLast.test_index_error_not_suppressed",
      "file": "tests/get_earliest_or_latest/tests.py",
      "line": 179
    },
    {
      "id": "tests/get_earliest_or_latest/tests.py:TestFirstLast.test_index_error_not_suppressed.check",
      "type": "function",
      "name": "TestFirstLast.test_index_error_not_suppressed.check",
      "file": "tests/get_earliest_or_latest/tests.py",
      "line": 184
    },
    {
      "id": "tests/sessions_tests",
      "type": "directory",
      "name": "sessions_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/sessions_tests/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/sessions_tests/models.py",
      "line": 0
    },
    {
      "id": "tests/sessions_tests/models.py:CustomSession",
      "type": "class",
      "name": "CustomSession",
      "file": "tests/sessions_tests/models.py",
      "line": 11
    },
    {
      "id": "tests/sessions_tests/models.py:CustomSession.get_session_store_class",
      "type": "function",
      "name": "CustomSession.get_session_store_class",
      "file": "tests/sessions_tests/models.py",
      "line": 18
    },
    {
      "id": "tests/sessions_tests/models.py:SessionStore",
      "type": "class",
      "name": "SessionStore",
      "file": "tests/sessions_tests/models.py",
      "line": 22
    },
    {
      "id": "tests/sessions_tests/models.py:SessionStore.get_model_class",
      "type": "function",
      "name": "SessionStore.get_model_class",
      "file": "tests/sessions_tests/models.py",
      "line": 28
    },
    {
      "id": "tests/sessions_tests/models.py:SessionStore.create_model_instance",
      "type": "function",
      "name": "SessionStore.create_model_instance",
      "file": "tests/sessions_tests/models.py",
      "line": 31
    },
    {
      "id": "tests/sessions_tests/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/sessions_tests/__init__.py",
      "line": 0
    },
    {
      "id": "tests/sessions_tests/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/sessions_tests/tests.py",
      "line": 0
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "type": "class",
      "name": "SessionTestsMixin",
      "file": "tests/sessions_tests/tests.py",
      "line": 40
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.setUp",
      "type": "function",
      "name": "SessionTestsMixin.setUp",
      "file": "tests/sessions_tests/tests.py",
      "line": 47
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.tearDown",
      "type": "function",
      "name": "SessionTestsMixin.tearDown",
      "file": "tests/sessions_tests/tests.py",
      "line": 50
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_new_session",
      "type": "function",
      "name": "SessionTestsMixin.test_new_session",
      "file": "tests/sessions_tests/tests.py",
      "line": 56
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_get_empty",
      "type": "function",
      "name": "SessionTestsMixin.test_get_empty",
      "file": "tests/sessions_tests/tests.py",
      "line": 60
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_store",
      "type": "function",
      "name": "SessionTestsMixin.test_store",
      "file": "tests/sessions_tests/tests.py",
      "line": 63
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_pop",
      "type": "function",
      "name": "SessionTestsMixin.test_pop",
      "file": "tests/sessions_tests/tests.py",
      "line": 68
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_pop_default",
      "type": "function",
      "name": "SessionTestsMixin.test_pop_default",
      "file": "tests/sessions_tests/tests.py",
      "line": 79
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_pop_default_named_argument",
      "type": "function",
      "name": "SessionTestsMixin.test_pop_default_named_argument",
      "file": "tests/sessions_tests/tests.py",
      "line": 85
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_pop_no_default_keyerror_raised",
      "type": "function",
      "name": "SessionTestsMixin.test_pop_no_default_keyerror_raised",
      "file": "tests/sessions_tests/tests.py",
      "line": 90
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_setdefault",
      "type": "function",
      "name": "SessionTestsMixin.test_setdefault",
      "file": "tests/sessions_tests/tests.py",
      "line": 94
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_update",
      "type": "function",
      "name": "SessionTestsMixin.test_update",
      "file": "tests/sessions_tests/tests.py",
      "line": 100
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_has_key",
      "type": "function",
      "name": "SessionTestsMixin.test_has_key",
      "file": "tests/sessions_tests/tests.py",
      "line": 106
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_values",
      "type": "function",
      "name": "SessionTestsMixin.test_values",
      "file": "tests/sessions_tests/tests.py",
      "line": 114
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_keys",
      "type": "function",
      "name": "SessionTestsMixin.test_keys",
      "file": "tests/sessions_tests/tests.py",
      "line": 124
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_items",
      "type": "function",
      "name": "SessionTestsMixin.test_items",
      "file": "tests/sessions_tests/tests.py",
      "line": 132
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_clear",
      "type": "function",
      "name": "SessionTestsMixin.test_clear",
      "file": "tests/sessions_tests/tests.py",
      "line": 140
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_save",
      "type": "function",
      "name": "SessionTestsMixin.test_save",
      "file": "tests/sessions_tests/tests.py",
      "line": 150
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_delete",
      "type": "function",
      "name": "SessionTestsMixin.test_delete",
      "file": "tests/sessions_tests/tests.py",
      "line": 154
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_flush",
      "type": "function",
      "name": "SessionTestsMixin.test_flush",
      "file": "tests/sessions_tests/tests.py",
      "line": 159
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_cycle",
      "type": "function",
      "name": "SessionTestsMixin.test_cycle",
      "file": "tests/sessions_tests/tests.py",
      "line": 170
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_cycle_with_no_session_cache",
      "type": "function",
      "name": "SessionTestsMixin.test_cycle_with_no_session_cache",
      "file": "tests/sessions_tests/tests.py",
      "line": 180
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_save_doesnt_clear_data",
      "type": "function",
      "name": "SessionTestsMixin.test_save_doesnt_clear_data",
      "file": "tests/sessions_tests/tests.py",
      "line": 189
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_invalid_key",
      "type": "function",
      "name": "SessionTestsMixin.test_invalid_key",
      "file": "tests/sessions_tests/tests.py",
      "line": 194
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_session_key_empty_string_invalid",
      "type": "function",
      "name": "SessionTestsMixin.test_session_key_empty_string_invalid",
      "file": "tests/sessions_tests/tests.py",
      "line": 208
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_session_key_too_short_invalid",
      "type": "function",
      "name": "SessionTestsMixin.test_session_key_too_short_invalid",
      "file": "tests/sessions_tests/tests.py",
      "line": 213
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_session_key_valid_string_saved",
      "type": "function",
      "name": "SessionTestsMixin.test_session_key_valid_string_saved",
      "file": "tests/sessions_tests/tests.py",
      "line": 218
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_session_key_is_read_only",
      "type": "function",
      "name": "SessionTestsMixin.test_session_key_is_read_only",
      "file": "tests/sessions_tests/tests.py",
      "line": 223
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_session_key_is_read_only.set_session_key",
      "type": "function",
      "name": "SessionTestsMixin.test_session_key_is_read_only.set_session_key",
      "file": "tests/sessions_tests/tests.py",
      "line": 224
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_default_expiry",
      "type": "function",
      "name": "SessionTestsMixin.test_default_expiry",
      "file": "tests/sessions_tests/tests.py",
      "line": 230
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_custom_expiry_seconds",
      "type": "function",
      "name": "SessionTestsMixin.test_custom_expiry_seconds",
      "file": "tests/sessions_tests/tests.py",
      "line": 239
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_custom_expiry_timedelta",
      "type": "function",
      "name": "SessionTestsMixin.test_custom_expiry_timedelta",
      "file": "tests/sessions_tests/tests.py",
      "line": 250
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_custom_expiry_datetime",
      "type": "function",
      "name": "SessionTestsMixin.test_custom_expiry_datetime",
      "file": "tests/sessions_tests/tests.py",
      "line": 267
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_custom_expiry_reset",
      "type": "function",
      "name": "SessionTestsMixin.test_custom_expiry_reset",
      "file": "tests/sessions_tests/tests.py",
      "line": 278
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_get_expire_at_browser_close",
      "type": "function",
      "name": "SessionTestsMixin.test_get_expire_at_browser_close",
      "file": "tests/sessions_tests/tests.py",
      "line": 284
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_decode",
      "type": "function",
      "name": "SessionTestsMixin.test_decode",
      "file": "tests/sessions_tests/tests.py",
      "line": 307
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_decode_failure_logged_to_security",
      "type": "function",
      "name": "SessionTestsMixin.test_decode_failure_logged_to_security",
      "file": "tests/sessions_tests/tests.py",
      "line": 313
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_actual_expiry",
      "type": "function",
      "name": "SessionTestsMixin.test_actual_expiry",
      "file": "tests/sessions_tests/tests.py",
      "line": 320
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_session_load_does_not_create_record",
      "type": "function",
      "name": "SessionTestsMixin.test_session_load_does_not_create_record",
      "file": "tests/sessions_tests/tests.py",
      "line": 341
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionTestsMixin.test_session_save_does_not_resurrect_session_logged_out_in_other_context",
      "type": "function",
      "name": "SessionTestsMixin.test_session_save_does_not_resurrect_session_logged_out_in_other_context",
      "file": "tests/sessions_tests/tests.py",
      "line": 355
    },
    {
      "id": "tests/sessions_tests/tests.py:DatabaseSessionTests",
      "type": "class",
      "name": "DatabaseSessionTests",
      "file": "tests/sessions_tests/tests.py",
      "line": 378
    },
    {
      "id": "tests/sessions_tests/tests.py:DatabaseSessionTests.model",
      "type": "function",
      "name": "DatabaseSessionTests.model",
      "file": "tests/sessions_tests/tests.py",
      "line": 384
    },
    {
      "id": "tests/sessions_tests/tests.py:DatabaseSessionTests.test_session_str",
      "type": "function",
      "name": "DatabaseSessionTests.test_session_str",
      "file": "tests/sessions_tests/tests.py",
      "line": 387
    },
    {
      "id": "tests/sessions_tests/tests.py:DatabaseSessionTests.test_session_get_decoded",
      "type": "function",
      "name": "DatabaseSessionTests.test_session_get_decoded",
      "file": "tests/sessions_tests/tests.py",
      "line": 397
    },
    {
      "id": "tests/sessions_tests/tests.py:DatabaseSessionTests.test_sessionmanager_save",
      "type": "function",
      "name": "DatabaseSessionTests.test_sessionmanager_save",
      "file": "tests/sessions_tests/tests.py",
      "line": 409
    },
    {
      "id": "tests/sessions_tests/tests.py:DatabaseSessionTests.test_clearsessions_command",
      "type": "function",
      "name": "DatabaseSessionTests.test_clearsessions_command",
      "file": "tests/sessions_tests/tests.py",
      "line": 424
    },
    {
      "id": "tests/sessions_tests/tests.py:DatabaseSessionWithTimeZoneTests",
      "type": "class",
      "name": "DatabaseSessionWithTimeZoneTests",
      "file": "tests/sessions_tests/tests.py",
      "line": 450
    },
    {
      "id": "tests/sessions_tests/tests.py:CustomDatabaseSessionTests",
      "type": "class",
      "name": "CustomDatabaseSessionTests",
      "file": "tests/sessions_tests/tests.py",
      "line": 454
    },
    {
      "id": "tests/sessions_tests/tests.py:CustomDatabaseSessionTests.test_extra_session_field",
      "type": "function",
      "name": "CustomDatabaseSessionTests.test_extra_session_field",
      "file": "tests/sessions_tests/tests.py",
      "line": 458
    },
    {
      "id": "tests/sessions_tests/tests.py:CacheDBSessionTests",
      "type": "class",
      "name": "CacheDBSessionTests",
      "file": "tests/sessions_tests/tests.py",
      "line": 477
    },
    {
      "id": "tests/sessions_tests/tests.py:CacheDBSessionTests.test_exists_searches_cache_first",
      "type": "function",
      "name": "CacheDBSessionTests.test_exists_searches_cache_first",
      "file": "tests/sessions_tests/tests.py",
      "line": 481
    },
    {
      "id": "tests/sessions_tests/tests.py:CacheDBSessionTests.test_load_overlong_key",
      "type": "function",
      "name": "CacheDBSessionTests.test_load_overlong_key",
      "file": "tests/sessions_tests/tests.py",
      "line": 488
    },
    {
      "id": "tests/sessions_tests/tests.py:CacheDBSessionTests.test_non_default_cache",
      "type": "function",
      "name": "CacheDBSessionTests.test_non_default_cache",
      "file": "tests/sessions_tests/tests.py",
      "line": 493
    },
    {
      "id": "tests/sessions_tests/tests.py:CacheDBSessionWithTimeZoneTests",
      "type": "class",
      "name": "CacheDBSessionWithTimeZoneTests",
      "file": "tests/sessions_tests/tests.py",
      "line": 500
    },
    {
      "id": "tests/sessions_tests/tests.py:FileSessionTests",
      "type": "class",
      "name": "FileSessionTests",
      "file": "tests/sessions_tests/tests.py",
      "line": 505
    },
    {
      "id": "tests/sessions_tests/tests.py:FileSessionTests.setUp",
      "type": "function",
      "name": "FileSessionTests.setUp",
      "file": "tests/sessions_tests/tests.py",
      "line": 509
    },
    {
      "id": "tests/sessions_tests/tests.py:FileSessionTests.tearDown",
      "type": "function",
      "name": "FileSessionTests.tearDown",
      "file": "tests/sessions_tests/tests.py",
      "line": 518
    },
    {
      "id": "tests/sessions_tests/tests.py:FileSessionTests.test_configuration_check",
      "type": "function",
      "name": "FileSessionTests.test_configuration_check",
      "file": "tests/sessions_tests/tests.py",
      "line": 526
    },
    {
      "id": "tests/sessions_tests/tests.py:FileSessionTests.test_invalid_key_backslash",
      "type": "function",
      "name": "FileSessionTests.test_invalid_key_backslash",
      "file": "tests/sessions_tests/tests.py",
      "line": 532
    },
    {
      "id": "tests/sessions_tests/tests.py:FileSessionTests.test_invalid_key_forwardslash",
      "type": "function",
      "name": "FileSessionTests.test_invalid_key_forwardslash",
      "file": "tests/sessions_tests/tests.py",
      "line": 540
    },
    {
      "id": "tests/sessions_tests/tests.py:FileSessionTests.test_clearsessions_command",
      "type": "function",
      "name": "FileSessionTests.test_clearsessions_command",
      "file": "tests/sessions_tests/tests.py",
      "line": 549
    },
    {
      "id": "tests/sessions_tests/tests.py:FileSessionTests.test_clearsessions_command.count_sessions",
      "type": "function",
      "name": "FileSessionTests.test_clearsessions_command.count_sessions",
      "file": "tests/sessions_tests/tests.py",
      "line": 556
    },
    {
      "id": "tests/sessions_tests/tests.py:CacheSessionTests",
      "type": "class",
      "name": "CacheSessionTests",
      "file": "tests/sessions_tests/tests.py",
      "line": 589
    },
    {
      "id": "tests/sessions_tests/tests.py:CacheSessionTests.test_load_overlong_key",
      "type": "function",
      "name": "CacheSessionTests.test_load_overlong_key",
      "file": "tests/sessions_tests/tests.py",
      "line": 595
    },
    {
      "id": "tests/sessions_tests/tests.py:CacheSessionTests.test_default_cache",
      "type": "function",
      "name": "CacheSessionTests.test_default_cache",
      "file": "tests/sessions_tests/tests.py",
      "line": 599
    },
    {
      "id": "tests/sessions_tests/tests.py:CacheSessionTests.test_non_default_cache",
      "type": "function",
      "name": "CacheSessionTests.test_non_default_cache",
      "file": "tests/sessions_tests/tests.py",
      "line": 612
    },
    {
      "id": "tests/sessions_tests/tests.py:CacheSessionTests.test_create_and_save",
      "type": "function",
      "name": "CacheSessionTests.test_create_and_save",
      "file": "tests/sessions_tests/tests.py",
      "line": 620
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionMiddlewareTests",
      "type": "class",
      "name": "SessionMiddlewareTests",
      "file": "tests/sessions_tests/tests.py",
      "line": 627
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionMiddlewareTests.test_secure_session_cookie",
      "type": "function",
      "name": "SessionMiddlewareTests.test_secure_session_cookie",
      "file": "tests/sessions_tests/tests.py",
      "line": 631
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionMiddlewareTests.test_httponly_session_cookie",
      "type": "function",
      "name": "SessionMiddlewareTests.test_httponly_session_cookie",
      "file": "tests/sessions_tests/tests.py",
      "line": 645
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionMiddlewareTests.test_samesite_session_cookie",
      "type": "function",
      "name": "SessionMiddlewareTests.test_samesite_session_cookie",
      "file": "tests/sessions_tests/tests.py",
      "line": 663
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionMiddlewareTests.test_no_httponly_session_cookie",
      "type": "function",
      "name": "SessionMiddlewareTests.test_no_httponly_session_cookie",
      "file": "tests/sessions_tests/tests.py",
      "line": 673
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionMiddlewareTests.test_session_save_on_500",
      "type": "function",
      "name": "SessionMiddlewareTests.test_session_save_on_500",
      "file": "tests/sessions_tests/tests.py",
      "line": 690
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionMiddlewareTests.test_session_update_error_redirect",
      "type": "function",
      "name": "SessionMiddlewareTests.test_session_update_error_redirect",
      "file": "tests/sessions_tests/tests.py",
      "line": 706
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionMiddlewareTests.test_session_delete_on_end",
      "type": "function",
      "name": "SessionMiddlewareTests.test_session_delete_on_end",
      "file": "tests/sessions_tests/tests.py",
      "line": 726
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionMiddlewareTests.test_session_delete_on_end_with_custom_domain_and_path",
      "type": "function",
      "name": "SessionMiddlewareTests.test_session_delete_on_end_with_custom_domain_and_path",
      "file": "tests/sessions_tests/tests.py",
      "line": 753
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionMiddlewareTests.test_flush_empty_without_session_cookie_doesnt_set_cookie",
      "type": "function",
      "name": "SessionMiddlewareTests.test_flush_empty_without_session_cookie_doesnt_set_cookie",
      "file": "tests/sessions_tests/tests.py",
      "line": 781
    },
    {
      "id": "tests/sessions_tests/tests.py:SessionMiddlewareTests.test_empty_session_saved",
      "type": "function",
      "name": "SessionMiddlewareTests.test_empty_session_saved",
      "file": "tests/sessions_tests/tests.py",
      "line": 798
    },
    {
      "id": "tests/sessions_tests/tests.py:CookieSessionTests",
      "type": "class",
      "name": "CookieSessionTests",
      "file": "tests/sessions_tests/tests.py",
      "line": 839
    },
    {
      "id": "tests/sessions_tests/tests.py:CookieSessionTests.test_save",
      "type": "function",
      "name": "CookieSessionTests.test_save",
      "file": "tests/sessions_tests/tests.py",
      "line": 843
    },
    {
      "id": "tests/sessions_tests/tests.py:CookieSessionTests.test_cycle",
      "type": "function",
      "name": "CookieSessionTests.test_cycle",
      "file": "tests/sessions_tests/tests.py",
      "line": 850
    },
    {
      "id": "tests/sessions_tests/tests.py:CookieSessionTests.test_actual_expiry",
      "type": "function",
      "name": "CookieSessionTests.test_actual_expiry",
      "file": "tests/sessions_tests/tests.py",
      "line": 860
    },
    {
      "id": "tests/sessions_tests/tests.py:CookieSessionTests.test_unpickling_exception",
      "type": "function",
      "name": "CookieSessionTests.test_unpickling_exception",
      "file": "tests/sessions_tests/tests.py",
      "line": 864
    },
    {
      "id": "tests/sessions_tests/tests.py:CookieSessionTests.test_session_load_does_not_create_record",
      "type": "function",
      "name": "CookieSessionTests.test_session_load_does_not_create_record",
      "file": "tests/sessions_tests/tests.py",
      "line": 874
    },
    {
      "id": "tests/sessions_tests/tests.py:CookieSessionTests.test_session_save_does_not_resurrect_session_logged_out_in_other_context",
      "type": "function",
      "name": "CookieSessionTests.test_session_save_does_not_resurrect_session_logged_out_in_other_context",
      "file": "tests/sessions_tests/tests.py",
      "line": 878
    },
    {
      "id": "tests/proxy_model_inheritance",
      "type": "directory",
      "name": "proxy_model_inheritance",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/proxy_model_inheritance/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/proxy_model_inheritance/models.py",
      "line": 0
    },
    {
      "id": "tests/proxy_model_inheritance/models.py:ConcreteModel",
      "type": "class",
      "name": "ConcreteModel",
      "file": "tests/proxy_model_inheritance/models.py",
      "line": 5
    },
    {
      "id": "tests/proxy_model_inheritance/models.py:ProxyModel",
      "type": "class",
      "name": "ProxyModel",
      "file": "tests/proxy_model_inheritance/models.py",
      "line": 9
    },
    {
      "id": "tests/proxy_model_inheritance/models.py:ProxyModel.Meta",
      "type": "class",
      "name": "ProxyModel.Meta",
      "file": "tests/proxy_model_inheritance/models.py",
      "line": 10
    },
    {
      "id": "tests/proxy_model_inheritance/models.py:ConcreteModelSubclass",
      "type": "class",
      "name": "ConcreteModelSubclass",
      "file": "tests/proxy_model_inheritance/models.py",
      "line": 14
    },
    {
      "id": "tests/proxy_model_inheritance/models.py:ConcreteModelSubclassProxy",
      "type": "class",
      "name": "ConcreteModelSubclassProxy",
      "file": "tests/proxy_model_inheritance/models.py",
      "line": 18
    },
    {
      "id": "tests/proxy_model_inheritance/models.py:ConcreteModelSubclassProxy.Meta",
      "type": "class",
      "name": "ConcreteModelSubclassProxy.Meta",
      "file": "tests/proxy_model_inheritance/models.py",
      "line": 19
    },
    {
      "id": "tests/proxy_model_inheritance/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/proxy_model_inheritance/__init__.py",
      "line": 0
    },
    {
      "id": "tests/proxy_model_inheritance/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/proxy_model_inheritance/tests.py",
      "line": 0
    },
    {
      "id": "tests/proxy_model_inheritance/tests.py:ProxyModelInheritanceTests",
      "type": "class",
      "name": "ProxyModelInheritanceTests",
      "file": "tests/proxy_model_inheritance/tests.py",
      "line": 13
    },
    {
      "id": "tests/proxy_model_inheritance/tests.py:ProxyModelInheritanceTests.test_table_exists",
      "type": "function",
      "name": "ProxyModelInheritanceTests.test_table_exists",
      "file": "tests/proxy_model_inheritance/tests.py",
      "line": 21
    },
    {
      "id": "tests/proxy_model_inheritance/tests.py:MultiTableInheritanceProxyTest",
      "type": "class",
      "name": "MultiTableInheritanceProxyTest",
      "file": "tests/proxy_model_inheritance/tests.py",
      "line": 31
    },
    {
      "id": "tests/proxy_model_inheritance/tests.py:MultiTableInheritanceProxyTest.test_model_subclass_proxy",
      "type": "function",
      "name": "MultiTableInheritanceProxyTest.test_model_subclass_proxy",
      "file": "tests/proxy_model_inheritance/tests.py",
      "line": 33
    },
    {
      "id": "tests/proxy_model_inheritance/tests.py:MultiTableInheritanceProxyTest.test_deletion_through_intermediate_proxy",
      "type": "function",
      "name": "MultiTableInheritanceProxyTest.test_deletion_through_intermediate_proxy",
      "file": "tests/proxy_model_inheritance/tests.py",
      "line": 45
    },
    {
      "id": "tests/proxy_model_inheritance/app2",
      "type": "directory",
      "name": "app2",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/proxy_model_inheritance/app2/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/proxy_model_inheritance/app2/models.py",
      "line": 0
    },
    {
      "id": "tests/proxy_model_inheritance/app2/models.py:NiceModel",
      "type": "class",
      "name": "NiceModel",
      "file": "tests/proxy_model_inheritance/app2/models.py",
      "line": 4
    },
    {
      "id": "tests/proxy_model_inheritance/app2/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/proxy_model_inheritance/app2/__init__.py",
      "line": 0
    },
    {
      "id": "tests/proxy_model_inheritance/app1",
      "type": "directory",
      "name": "app1",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/proxy_model_inheritance/app1/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/proxy_model_inheritance/app1/models.py",
      "line": 0
    },
    {
      "id": "tests/proxy_model_inheritance/app1/models.py:ProxyModel",
      "type": "class",
      "name": "ProxyModel",
      "file": "tests/proxy_model_inheritance/app1/models.py",
      "line": 4
    },
    {
      "id": "tests/proxy_model_inheritance/app1/models.py:ProxyModel.Meta",
      "type": "class",
      "name": "ProxyModel.Meta",
      "file": "tests/proxy_model_inheritance/app1/models.py",
      "line": 5
    },
    {
      "id": "tests/proxy_model_inheritance/app1/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/proxy_model_inheritance/app1/__init__.py",
      "line": 0
    },
    {
      "id": "tests/foreign_object",
      "type": "directory",
      "name": "foreign_object",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/foreign_object/test_forms.py",
      "type": "file",
      "name": "test_forms.py",
      "file": "tests/foreign_object/test_forms.py",
      "line": 0
    },
    {
      "id": "tests/foreign_object/test_forms.py:FormsTests",
      "type": "class",
      "name": "FormsTests",
      "file": "tests/foreign_object/test_forms.py",
      "line": 9
    },
    {
      "id": "tests/foreign_object/test_forms.py:FormsTests.ArticleForm",
      "type": "class",
      "name": "FormsTests.ArticleForm",
      "file": "tests/foreign_object/test_forms.py",
      "line": 12
    },
    {
      "id": "tests/foreign_object/test_forms.py:FormsTests.ArticleForm.Meta",
      "type": "class",
      "name": "FormsTests.ArticleForm.Meta",
      "file": "tests/foreign_object/test_forms.py",
      "line": 13
    },
    {
      "id": "tests/foreign_object/test_forms.py:FormsTests.test_foreign_object_form",
      "type": "function",
      "name": "FormsTests.test_foreign_object_form",
      "file": "tests/foreign_object/test_forms.py",
      "line": 17
    },
    {
      "id": "tests/foreign_object/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/foreign_object/__init__.py",
      "line": 0
    },
    {
      "id": "tests/foreign_object/test_empty_join.py",
      "type": "file",
      "name": "test_empty_join.py",
      "file": "tests/foreign_object/test_empty_join.py",
      "line": 0
    },
    {
      "id": "tests/foreign_object/test_empty_join.py:RestrictedConditionsTests",
      "type": "class",
      "name": "RestrictedConditionsTests",
      "file": "tests/foreign_object/test_empty_join.py",
      "line": 6
    },
    {
      "id": "tests/foreign_object/test_empty_join.py:RestrictedConditionsTests.setUpTestData",
      "type": "function",
      "name": "RestrictedConditionsTests.setUpTestData",
      "file": "tests/foreign_object/test_empty_join.py",
      "line": 8
    },
    {
      "id": "tests/foreign_object/test_empty_join.py:RestrictedConditionsTests.test_restrictions_with_no_joining_columns",
      "type": "function",
      "name": "RestrictedConditionsTests.test_restrictions_with_no_joining_columns",
      "file": "tests/foreign_object/test_empty_join.py",
      "line": 19
    },
    {
      "id": "tests/foreign_object/test_empty_join.py:RestrictedConditionsTests.test_empty_join_conditions",
      "type": "function",
      "name": "RestrictedConditionsTests.test_empty_join_conditions",
      "file": "tests/foreign_object/test_empty_join.py",
      "line": 44
    },
    {
      "id": "tests/foreign_object/test_agnostic_order_trimjoin.py",
      "type": "file",
      "name": "test_agnostic_order_trimjoin.py",
      "file": "tests/foreign_object/test_agnostic_order_trimjoin.py",
      "line": 0
    },
    {
      "id": "tests/foreign_object/test_agnostic_order_trimjoin.py:TestLookupQuery",
      "type": "class",
      "name": "TestLookupQuery",
      "file": "tests/foreign_object/test_agnostic_order_trimjoin.py",
      "line": 8
    },
    {
      "id": "tests/foreign_object/test_agnostic_order_trimjoin.py:TestLookupQuery.setUpTestData",
      "type": "function",
      "name": "TestLookupQuery.setUpTestData",
      "file": "tests/foreign_object/test_agnostic_order_trimjoin.py",
      "line": 11
    },
    {
      "id": "tests/foreign_object/test_agnostic_order_trimjoin.py:TestLookupQuery.test_deep_mixed_forward",
      "type": "function",
      "name": "TestLookupQuery.test_deep_mixed_forward",
      "file": "tests/foreign_object/test_agnostic_order_trimjoin.py",
      "line": 16
    },
    {
      "id": "tests/foreign_object/test_agnostic_order_trimjoin.py:TestLookupQuery.test_deep_mixed_backward",
      "type": "function",
      "name": "TestLookupQuery.test_deep_mixed_backward",
      "file": "tests/foreign_object/test_agnostic_order_trimjoin.py",
      "line": 23
    },
    {
      "id": "tests/foreign_object/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/foreign_object/tests.py",
      "line": 0
    },
    {
      "id": "tests/foreign_object/tests.py:MultiColumnFKTests",
      "type": "class",
      "name": "MultiColumnFKTests",
      "file": "tests/foreign_object/tests.py",
      "line": 20
    },
    {
      "id": "tests/foreign_object/tests.py:MultiColumnFKTests.setUpTestData",
      "type": "function",
      "name": "MultiColumnFKTests.setUpTestData",
      "file": "tests/foreign_object/tests.py",
      "line": 22
    },
    {
      "id": "tests/foreign_object/tests.py:MultiColumnFKTests.test_get_succeeds_on_multicolumn_match",
      "type": "function",
      "name": "MultiColumnFKTests.test_get_succeeds_on_multicolumn_match",
      "file": "tests/foreign_object/tests.py",
      "line": 41
    },
    {
      "id": "tests/foreign_object/tests.py:MultiColumnFKTests.test_get_fails_on_multicolumn_mismatch",
      "type": "function",
      "name": "MultiColumnFKTests.test_get_fails_on_multicolumn_mismatch",
      "file": "tests/foreign_object/tests.py",
      "line": 50
    },
    {
      "id": "tests/foreign_object/tests.py:MultiColumnFKTests.test_reverse_query_returns_correct_result",
      "type": "function",
      "name": "MultiColumnFKTests.test_reverse_query_returns_correct_result",
      "file": "tests/foreign_object/tests.py",
      "line": 59
    },
    {
      "id": "tests/foreign_object/tests.py:MultiColumnFKTests.test_query_filters_correctly",
      "type": "function",
      "name": "MultiColumnFKTests.test_query_filters_correctly",
      "file": "tests/foreign_object/tests.py",
      "line": 74
    },
    {
      "id": "tests/foreign_object/tests.py:MultiColumnFKTests.test_reverse_query_filters_correctly",
      "type": "function",
      "name": "MultiColumnFKTests.test_reverse_query_filters_correctly",
      "file": "tests/foreign_object/tests.py",
      "line": 94
    },
    {
      "id": "tests/foreign_object/tests.py:MultiColumnFKTests.test_forward_in_lookup_filters_correctly",
      "type": "function",
      "name": "MultiColumnFKTests.test_forward_in_lookup_filters_correctly",
      "file": "tests/foreign_object/tests.py",
      "line": 119
    },
    {
      "id": "tests/foreign_object/tests.py:MultiColumnFKTests.test_double_nested_query",
      "type": "function",
      "name": "MultiColumnFKTests.test_double_nested_query",
      "file": "tests/foreign_object/tests.py",
      "line": 143
    },
    {
      "id": "tests/foreign_object/tests.py:MultiColumnFKTests.test_select_related_foreignkey_forward_works",
      "type": "function",
      "name": "MultiColumnFKTests.test_select_related_foreignkey_forward_works",
      "file": "tests/foreign_object/tests.py",
      "line": 167
    },
    {
      "id": "tests/foreign_object/tests.py:MultiColumnFKTests.test_prefetch_foreignkey_forward_works",
      "type": "function",
      "name": "MultiColumnFKTests.test_prefetch_foreignkey_forward_works",
      "file": "tests/foreign_object/tests.py",
      "line": 177
    },
    {
      "id": "tests/foreign_object/tests.py:MultiColumnFKTests.test_prefetch_foreignkey_reverse_works",
      "type": "function",
      "name": "MultiColumnFKTests.test_prefetch_foreignkey_reverse_works",
      "file": "tests/foreign_object/tests.py",
      "line": 188
    },
    {
      "id": "tests/foreign_object/tests.py:MultiColumnFKTests.test_m2m_through_forward_returns_valid_members",
      "type": "function",
      "name": "MultiColumnFKTests.test_m2m_through_forward_returns_valid_members",
      "file": "tests/foreign_object/tests.py",
      "line": 203
    },
    {
      "id": "tests/foreign_object/tests.py:MultiColumnFKTests.test_m2m_through_reverse_returns_valid_members",
      "type": "function",
      "name": "MultiColumnFKTests.test_m2m_through_reverse_returns_valid_members",
      "file": "tests/foreign_object/tests.py",
      "line": 222
    },
    {
      "id": "tests/foreign_object/tests.py:MultiColumnFKTests.test_m2m_through_forward_ignores_invalid_members",
      "type": "function",
      "name": "MultiColumnFKTests.test_m2m_through_forward_ignores_invalid_members",
      "file": "tests/foreign_object/tests.py",
      "line": 241
    },
    {
      "id": "tests/foreign_object/tests.py:MultiColumnFKTests.test_m2m_through_reverse_ignores_invalid_members",
      "type": "function",
      "name": "MultiColumnFKTests.test_m2m_through_reverse_ignores_invalid_members",
      "file": "tests/foreign_object/tests.py",
      "line": 257
    },
    {
      "id": "tests/foreign_object/tests.py:MultiColumnFKTests.test_m2m_through_on_self_works",
      "type": "function",
      "name": "MultiColumnFKTests.test_m2m_through_on_self_works",
      "file": "tests/foreign_object/tests.py",
      "line": 273
    },
    {
      "id": "tests/foreign_object/tests.py:MultiColumnFKTests.test_m2m_through_on_self_ignores_mismatch_columns",
      "type": "function",
      "name": "MultiColumnFKTests.test_m2m_through_on_self_ignores_mismatch_columns",
      "file": "tests/foreign_object/tests.py",
      "line": 288
    },
    {
      "id": "tests/foreign_object/tests.py:MultiColumnFKTests.test_prefetch_related_m2m_forward_works",
      "type": "function",
      "name": "MultiColumnFKTests.test_prefetch_related_m2m_forward_works",
      "file": "tests/foreign_object/tests.py",
      "line": 300
    },
    {
      "id": "tests/foreign_object/tests.py:MultiColumnFKTests.test_prefetch_related_m2m_reverse_works",
      "type": "function",
      "name": "MultiColumnFKTests.test_prefetch_related_m2m_reverse_works",
      "file": "tests/foreign_object/tests.py",
      "line": 311
    },
    {
      "id": "tests/foreign_object/tests.py:MultiColumnFKTests.test_translations",
      "type": "function",
      "name": "MultiColumnFKTests.test_translations",
      "file": "tests/foreign_object/tests.py",
      "line": 322
    },
    {
      "id": "tests/foreign_object/tests.py:MultiColumnFKTests.test_foreign_key_raises_informative_does_not_exist",
      "type": "function",
      "name": "MultiColumnFKTests.test_foreign_key_raises_informative_does_not_exist",
      "file": "tests/foreign_object/tests.py",
      "line": 359
    },
    {
      "id": "tests/foreign_object/tests.py:MultiColumnFKTests.test_foreign_key_related_query_name",
      "type": "function",
      "name": "MultiColumnFKTests.test_foreign_key_related_query_name",
      "file": "tests/foreign_object/tests.py",
      "line": 364
    },
    {
      "id": "tests/foreign_object/tests.py:MultiColumnFKTests.test_many_to_many_related_query_name",
      "type": "function",
      "name": "MultiColumnFKTests.test_many_to_many_related_query_name",
      "file": "tests/foreign_object/tests.py",
      "line": 377
    },
    {
      "id": "tests/foreign_object/tests.py:MultiColumnFKTests.test_inheritance",
      "type": "function",
      "name": "MultiColumnFKTests.test_inheritance",
      "file": "tests/foreign_object/tests.py",
      "line": 392
    },
    {
      "id": "tests/foreign_object/tests.py:MultiColumnFKTests.test_batch_create_foreign_object",
      "type": "function",
      "name": "MultiColumnFKTests.test_batch_create_foreign_object",
      "file": "tests/foreign_object/tests.py",
      "line": 407
    },
    {
      "id": "tests/foreign_object/tests.py:MultiColumnFKTests.test_isnull_lookup",
      "type": "function",
      "name": "MultiColumnFKTests.test_isnull_lookup",
      "file": "tests/foreign_object/tests.py",
      "line": 411
    },
    {
      "id": "tests/foreign_object/tests.py:TestModelCheckTests",
      "type": "class",
      "name": "TestModelCheckTests",
      "file": "tests/foreign_object/tests.py",
      "line": 424
    },
    {
      "id": "tests/foreign_object/tests.py:TestModelCheckTests.test_check_composite_foreign_object",
      "type": "function",
      "name": "TestModelCheckTests.test_check_composite_foreign_object",
      "file": "tests/foreign_object/tests.py",
      "line": 427
    },
    {
      "id": "tests/foreign_object/tests.py:TestModelCheckTests.test_check_composite_foreign_object.Parent",
      "type": "class",
      "name": "TestModelCheckTests.test_check_composite_foreign_object.Parent",
      "file": "tests/foreign_object/tests.py",
      "line": 428
    },
    {
      "id": "tests/foreign_object/tests.py:TestModelCheckTests.test_check_composite_foreign_object.Parent.Meta",
      "type": "class",
      "name": "TestModelCheckTests.test_check_composite_foreign_object.Parent.Meta",
      "file": "tests/foreign_object/tests.py",
      "line": 432
    },
    {
      "id": "tests/foreign_object/tests.py:TestModelCheckTests.test_check_composite_foreign_object.Child",
      "type": "class",
      "name": "TestModelCheckTests.test_check_composite_foreign_object.Child",
      "file": "tests/foreign_object/tests.py",
      "line": 435
    },
    {
      "id": "tests/foreign_object/tests.py:TestModelCheckTests.test_check_subset_composite_foreign_object",
      "type": "function",
      "name": "TestModelCheckTests.test_check_subset_composite_foreign_object",
      "file": "tests/foreign_object/tests.py",
      "line": 450
    },
    {
      "id": "tests/foreign_object/tests.py:TestModelCheckTests.test_check_subset_composite_foreign_object.Parent",
      "type": "class",
      "name": "TestModelCheckTests.test_check_subset_composite_foreign_object.Parent",
      "file": "tests/foreign_object/tests.py",
      "line": 451
    },
    {
      "id": "tests/foreign_object/tests.py:TestModelCheckTests.test_check_subset_composite_foreign_object.Parent.Meta",
      "type": "class",
      "name": "TestModelCheckTests.test_check_subset_composite_foreign_object.Parent.Meta",
      "file": "tests/foreign_object/tests.py",
      "line": 456
    },
    {
      "id": "tests/foreign_object/tests.py:TestModelCheckTests.test_check_subset_composite_foreign_object.Child",
      "type": "class",
      "name": "TestModelCheckTests.test_check_subset_composite_foreign_object.Child",
      "file": "tests/foreign_object/tests.py",
      "line": 459
    },
    {
      "id": "tests/foreign_object/tests.py:TestExtraJoinFilterQ",
      "type": "class",
      "name": "TestExtraJoinFilterQ",
      "file": "tests/foreign_object/tests.py",
      "line": 475
    },
    {
      "id": "tests/foreign_object/tests.py:TestExtraJoinFilterQ.test_extra_join_filter_q",
      "type": "function",
      "name": "TestExtraJoinFilterQ.test_extra_join_filter_q",
      "file": "tests/foreign_object/tests.py",
      "line": 477
    },
    {
      "id": "tests/foreign_object/models",
      "type": "directory",
      "name": "models",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/foreign_object/models/person.py",
      "type": "file",
      "name": "person.py",
      "file": "tests/foreign_object/models/person.py",
      "line": 0
    },
    {
      "id": "tests/foreign_object/models/person.py:Country",
      "type": "class",
      "name": "Country",
      "file": "tests/foreign_object/models/person.py",
      "line": 6
    },
    {
      "id": "tests/foreign_object/models/person.py:Country.__str__",
      "type": "function",
      "name": "Country.__str__",
      "file": "tests/foreign_object/models/person.py",
      "line": 10
    },
    {
      "id": "tests/foreign_object/models/person.py:Person",
      "type": "class",
      "name": "Person",
      "file": "tests/foreign_object/models/person.py",
      "line": 14
    },
    {
      "id": "tests/foreign_object/models/person.py:Person.Meta",
      "type": "class",
      "name": "Person.Meta",
      "file": "tests/foreign_object/models/person.py",
      "line": 28
    },
    {
      "id": "tests/foreign_object/models/person.py:Person.__str__",
      "type": "function",
      "name": "Person.__str__",
      "file": "tests/foreign_object/models/person.py",
      "line": 31
    },
    {
      "id": "tests/foreign_object/models/person.py:Group",
      "type": "class",
      "name": "Group",
      "file": "tests/foreign_object/models/person.py",
      "line": 35
    },
    {
      "id": "tests/foreign_object/models/person.py:Group.Meta",
      "type": "class",
      "name": "Group.Meta",
      "file": "tests/foreign_object/models/person.py",
      "line": 41
    },
    {
      "id": "tests/foreign_object/models/person.py:Group.__str__",
      "type": "function",
      "name": "Group.__str__",
      "file": "tests/foreign_object/models/person.py",
      "line": 44
    },
    {
      "id": "tests/foreign_object/models/person.py:Membership",
      "type": "class",
      "name": "Membership",
      "file": "tests/foreign_object/models/person.py",
      "line": 48
    },
    {
      "id": "tests/foreign_object/models/person.py:Membership.Meta",
      "type": "class",
      "name": "Membership.Meta",
      "file": "tests/foreign_object/models/person.py",
      "line": 70
    },
    {
      "id": "tests/foreign_object/models/person.py:Membership.__str__",
      "type": "function",
      "name": "Membership.__str__",
      "file": "tests/foreign_object/models/person.py",
      "line": 73
    },
    {
      "id": "tests/foreign_object/models/person.py:Friendship",
      "type": "class",
      "name": "Friendship",
      "file": "tests/foreign_object/models/person.py",
      "line": 78
    },
    {
      "id": "tests/foreign_object/models/empty_join.py",
      "type": "file",
      "name": "empty_join.py",
      "file": "tests/foreign_object/models/empty_join.py",
      "line": 0
    },
    {
      "id": "tests/foreign_object/models/empty_join.py:CustomForeignObjectRel",
      "type": "class",
      "name": "CustomForeignObjectRel",
      "file": "tests/foreign_object/models/empty_join.py",
      "line": 9
    },
    {
      "id": "tests/foreign_object/models/empty_join.py:CustomForeignObjectRel.foreign_related_fields",
      "type": "function",
      "name": "CustomForeignObjectRel.foreign_related_fields",
      "file": "tests/foreign_object/models/empty_join.py",
      "line": 15
    },
    {
      "id": "tests/foreign_object/models/empty_join.py:CustomForeignObjectRel.get_attname",
      "type": "function",
      "name": "CustomForeignObjectRel.get_attname",
      "file": "tests/foreign_object/models/empty_join.py",
      "line": 18
    },
    {
      "id": "tests/foreign_object/models/empty_join.py:StartsWithRelation",
      "type": "class",
      "name": "StartsWithRelation",
      "file": "tests/foreign_object/models/empty_join.py",
      "line": 22
    },
    {
      "id": "tests/foreign_object/models/empty_join.py:StartsWithRelation.field",
      "type": "function",
      "name": "StartsWithRelation.field",
      "file": "tests/foreign_object/models/empty_join.py",
      "line": 42
    },
    {
      "id": "tests/foreign_object/models/empty_join.py:StartsWithRelation.get_extra_restriction",
      "type": "function",
      "name": "StartsWithRelation.get_extra_restriction",
      "file": "tests/foreign_object/models/empty_join.py",
      "line": 48
    },
    {
      "id": "tests/foreign_object/models/empty_join.py:StartsWithRelation.get_joining_columns",
      "type": "function",
      "name": "StartsWithRelation.get_joining_columns",
      "file": "tests/foreign_object/models/empty_join.py",
      "line": 53
    },
    {
      "id": "tests/foreign_object/models/empty_join.py:StartsWithRelation.get_path_info",
      "type": "function",
      "name": "StartsWithRelation.get_path_info",
      "file": "tests/foreign_object/models/empty_join.py",
      "line": 56
    },
    {
      "id": "tests/foreign_object/models/empty_join.py:StartsWithRelation.get_reverse_path_info",
      "type": "function",
      "name": "StartsWithRelation.get_reverse_path_info",
      "file": "tests/foreign_object/models/empty_join.py",
      "line": 69
    },
    {
      "id": "tests/foreign_object/models/empty_join.py:StartsWithRelation.contribute_to_class",
      "type": "function",
      "name": "StartsWithRelation.contribute_to_class",
      "file": "tests/foreign_object/models/empty_join.py",
      "line": 82
    },
    {
      "id": "tests/foreign_object/models/empty_join.py:BrokenContainsRelation",
      "type": "class",
      "name": "BrokenContainsRelation",
      "file": "tests/foreign_object/models/empty_join.py",
      "line": 87
    },
    {
      "id": "tests/foreign_object/models/empty_join.py:BrokenContainsRelation.get_extra_restriction",
      "type": "function",
      "name": "BrokenContainsRelation.get_extra_restriction",
      "file": "tests/foreign_object/models/empty_join.py",
      "line": 92
    },
    {
      "id": "tests/foreign_object/models/empty_join.py:SlugPage",
      "type": "class",
      "name": "SlugPage",
      "file": "tests/foreign_object/models/empty_join.py",
      "line": 96
    },
    {
      "id": "tests/foreign_object/models/empty_join.py:SlugPage.Meta",
      "type": "class",
      "name": "SlugPage.Meta",
      "file": "tests/foreign_object/models/empty_join.py",
      "line": 110
    },
    {
      "id": "tests/foreign_object/models/empty_join.py:SlugPage.__str__",
      "type": "function",
      "name": "SlugPage.__str__",
      "file": "tests/foreign_object/models/empty_join.py",
      "line": 113
    },
    {
      "id": "tests/foreign_object/models/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/foreign_object/models/__init__.py",
      "line": 0
    },
    {
      "id": "tests/foreign_object/models/customers.py",
      "type": "file",
      "name": "customers.py",
      "file": "tests/foreign_object/models/customers.py",
      "line": 0
    },
    {
      "id": "tests/foreign_object/models/customers.py:Address",
      "type": "class",
      "name": "Address",
      "file": "tests/foreign_object/models/customers.py",
      "line": 5
    },
    {
      "id": "tests/foreign_object/models/customers.py:Address.Meta",
      "type": "class",
      "name": "Address.Meta",
      "file": "tests/foreign_object/models/customers.py",
      "line": 9
    },
    {
      "id": "tests/foreign_object/models/customers.py:Customer",
      "type": "class",
      "name": "Customer",
      "file": "tests/foreign_object/models/customers.py",
      "line": 15
    },
    {
      "id": "tests/foreign_object/models/customers.py:Customer.Meta",
      "type": "class",
      "name": "Customer.Meta",
      "file": "tests/foreign_object/models/customers.py",
      "line": 25
    },
    {
      "id": "tests/foreign_object/models/customers.py:Contact",
      "type": "class",
      "name": "Contact",
      "file": "tests/foreign_object/models/customers.py",
      "line": 31
    },
    {
      "id": "tests/foreign_object/models/article.py",
      "type": "file",
      "name": "article.py",
      "file": "tests/foreign_object/models/article.py",
      "line": 0
    },
    {
      "id": "tests/foreign_object/models/article.py:ArticleTranslationDescriptor",
      "type": "class",
      "name": "ArticleTranslationDescriptor",
      "file": "tests/foreign_object/models/article.py",
      "line": 6
    },
    {
      "id": "tests/foreign_object/models/article.py:ArticleTranslationDescriptor.__set__",
      "type": "function",
      "name": "ArticleTranslationDescriptor.__set__",
      "file": "tests/foreign_object/models/article.py",
      "line": 10
    },
    {
      "id": "tests/foreign_object/models/article.py:ColConstraint",
      "type": "class",
      "name": "ColConstraint",
      "file": "tests/foreign_object/models/article.py",
      "line": 18
    },
    {
      "id": "tests/foreign_object/models/article.py:ColConstraint.as_sql",
      "type": "function",
      "name": "ColConstraint.as_sql",
      "file": "tests/foreign_object/models/article.py",
      "line": 23
    },
    {
      "id": "tests/foreign_object/models/article.py:ActiveTranslationField",
      "type": "class",
      "name": "ActiveTranslationField",
      "file": "tests/foreign_object/models/article.py",
      "line": 28
    },
    {
      "id": "tests/foreign_object/models/article.py:ActiveTranslationField.get_extra_restriction",
      "type": "function",
      "name": "ActiveTranslationField.get_extra_restriction",
      "file": "tests/foreign_object/models/article.py",
      "line": 35
    },
    {
      "id": "tests/foreign_object/models/article.py:ActiveTranslationField.get_extra_descriptor_filter",
      "type": "function",
      "name": "ActiveTranslationField.get_extra_descriptor_filter",
      "file": "tests/foreign_object/models/article.py",
      "line": 38
    },
    {
      "id": "tests/foreign_object/models/article.py:ActiveTranslationField.contribute_to_class",
      "type": "function",
      "name": "ActiveTranslationField.contribute_to_class",
      "file": "tests/foreign_object/models/article.py",
      "line": 41
    },
    {
      "id": "tests/foreign_object/models/article.py:ActiveTranslationFieldWithQ",
      "type": "class",
      "name": "ActiveTranslationFieldWithQ",
      "file": "tests/foreign_object/models/article.py",
      "line": 46
    },
    {
      "id": "tests/foreign_object/models/article.py:ActiveTranslationFieldWithQ.get_extra_descriptor_filter",
      "type": "function",
      "name": "ActiveTranslationFieldWithQ.get_extra_descriptor_filter",
      "file": "tests/foreign_object/models/article.py",
      "line": 47
    },
    {
      "id": "tests/foreign_object/models/article.py:Article",
      "type": "class",
      "name": "Article",
      "file": "tests/foreign_object/models/article.py",
      "line": 51
    },
    {
      "id": "tests/foreign_object/models/article.py:Article.__str__",
      "type": "function",
      "name": "Article.__str__",
      "file": "tests/foreign_object/models/article.py",
      "line": 70
    },
    {
      "id": "tests/foreign_object/models/article.py:NewsArticle",
      "type": "class",
      "name": "NewsArticle",
      "file": "tests/foreign_object/models/article.py",
      "line": 77
    },
    {
      "id": "tests/foreign_object/models/article.py:ArticleTranslation",
      "type": "class",
      "name": "ArticleTranslation",
      "file": "tests/foreign_object/models/article.py",
      "line": 81
    },
    {
      "id": "tests/foreign_object/models/article.py:ArticleTranslation.Meta",
      "type": "class",
      "name": "ArticleTranslation.Meta",
      "file": "tests/foreign_object/models/article.py",
      "line": 88
    },
    {
      "id": "tests/foreign_object/models/article.py:ArticleTag",
      "type": "class",
      "name": "ArticleTag",
      "file": "tests/foreign_object/models/article.py",
      "line": 92
    },
    {
      "id": "tests/foreign_object/models/article.py:ArticleIdea",
      "type": "class",
      "name": "ArticleIdea",
      "file": "tests/foreign_object/models/article.py",
      "line": 102
    },
    {
      "id": "tests/generic_inline_admin",
      "type": "directory",
      "name": "generic_inline_admin",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/generic_inline_admin/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/generic_inline_admin/models.py",
      "line": 0
    },
    {
      "id": "tests/generic_inline_admin/models.py:Episode",
      "type": "class",
      "name": "Episode",
      "file": "tests/generic_inline_admin/models.py",
      "line": 8
    },
    {
      "id": "tests/generic_inline_admin/models.py:Media",
      "type": "class",
      "name": "Media",
      "file": "tests/generic_inline_admin/models.py",
      "line": 14
    },
    {
      "id": "tests/generic_inline_admin/models.py:Media.__str__",
      "type": "function",
      "name": "Media.__str__",
      "file": "tests/generic_inline_admin/models.py",
      "line": 25
    },
    {
      "id": "tests/generic_inline_admin/models.py:Category",
      "type": "class",
      "name": "Category",
      "file": "tests/generic_inline_admin/models.py",
      "line": 32
    },
    {
      "id": "tests/generic_inline_admin/models.py:PhoneNumber",
      "type": "class",
      "name": "PhoneNumber",
      "file": "tests/generic_inline_admin/models.py",
      "line": 36
    },
    {
      "id": "tests/generic_inline_admin/models.py:PhoneNumber.Meta",
      "type": "class",
      "name": "PhoneNumber.Meta",
      "file": "tests/generic_inline_admin/models.py",
      "line": 43
    },
    {
      "id": "tests/generic_inline_admin/models.py:Contact",
      "type": "class",
      "name": "Contact",
      "file": "tests/generic_inline_admin/models.py",
      "line": 47
    },
    {
      "id": "tests/generic_inline_admin/models.py:EpisodePermanent",
      "type": "class",
      "name": "EpisodePermanent",
      "file": "tests/generic_inline_admin/models.py",
      "line": 55
    },
    {
      "id": "tests/generic_inline_admin/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/generic_inline_admin/__init__.py",
      "line": 0
    },
    {
      "id": "tests/generic_inline_admin/admin.py",
      "type": "file",
      "name": "admin.py",
      "file": "tests/generic_inline_admin/admin.py",
      "line": 0
    },
    {
      "id": "tests/generic_inline_admin/admin.py:MediaInline",
      "type": "class",
      "name": "MediaInline",
      "file": "tests/generic_inline_admin/admin.py",
      "line": 11
    },
    {
      "id": "tests/generic_inline_admin/admin.py:EpisodeAdmin",
      "type": "class",
      "name": "EpisodeAdmin",
      "file": "tests/generic_inline_admin/admin.py",
      "line": 15
    },
    {
      "id": "tests/generic_inline_admin/admin.py:PhoneNumberInline",
      "type": "class",
      "name": "PhoneNumberInline",
      "file": "tests/generic_inline_admin/admin.py",
      "line": 21
    },
    {
      "id": "tests/generic_inline_admin/admin.py:MediaPermanentInline",
      "type": "class",
      "name": "MediaPermanentInline",
      "file": "tests/generic_inline_admin/admin.py",
      "line": 25
    },
    {
      "id": "tests/generic_inline_admin/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 0
    },
    {
      "id": "tests/generic_inline_admin/tests.py:TestDataMixin",
      "type": "class",
      "name": "TestDataMixin",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 17
    },
    {
      "id": "tests/generic_inline_admin/tests.py:TestDataMixin.setUpTestData",
      "type": "function",
      "name": "TestDataMixin.setUpTestData",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 20
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericAdminViewTest",
      "type": "class",
      "name": "GenericAdminViewTest",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 25
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericAdminViewTest.setUp",
      "type": "function",
      "name": "GenericAdminViewTest.setUp",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 27
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericAdminViewTest.test_basic_add_GET",
      "type": "function",
      "name": "GenericAdminViewTest.test_basic_add_GET",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 40
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericAdminViewTest.test_basic_edit_GET",
      "type": "function",
      "name": "GenericAdminViewTest.test_basic_edit_GET",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 47
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericAdminViewTest.test_basic_add_POST",
      "type": "function",
      "name": "GenericAdminViewTest.test_basic_add_POST",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 56
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericAdminViewTest.test_basic_edit_POST",
      "type": "function",
      "name": "GenericAdminViewTest.test_basic_edit_POST",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 70
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest",
      "type": "class",
      "name": "GenericInlineAdminParametersTest",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 93
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.setUp",
      "type": "function",
      "name": "GenericInlineAdminParametersTest.setUp",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 96
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest._create_object",
      "type": "function",
      "name": "GenericInlineAdminParametersTest._create_object",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 99
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_no_param",
      "type": "function",
      "name": "GenericInlineAdminParametersTest.test_no_param",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 110
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_extra_param",
      "type": "function",
      "name": "GenericInlineAdminParametersTest.test_extra_param",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 120
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_extra_param.ExtraInline",
      "type": "class",
      "name": "GenericInlineAdminParametersTest.test_extra_param.ExtraInline",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 124
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.testMaxNumParam",
      "type": "function",
      "name": "GenericInlineAdminParametersTest.testMaxNumParam",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 139
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.testMaxNumParam.MaxNumInline",
      "type": "class",
      "name": "GenericInlineAdminParametersTest.testMaxNumParam.MaxNumInline",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 143
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_min_num_param",
      "type": "function",
      "name": "GenericInlineAdminParametersTest.test_min_num_param",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 159
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_min_num_param.MinNumInline",
      "type": "class",
      "name": "GenericInlineAdminParametersTest.test_min_num_param.MinNumInline",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 163
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_get_extra",
      "type": "function",
      "name": "GenericInlineAdminParametersTest.test_get_extra",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 179
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_get_extra.GetExtraInline",
      "type": "class",
      "name": "GenericInlineAdminParametersTest.test_get_extra.GetExtraInline",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 181
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_get_extra.GetExtraInline.get_extra",
      "type": "function",
      "name": "GenericInlineAdminParametersTest.test_get_extra.GetExtraInline.get_extra",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 185
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_get_min_num",
      "type": "function",
      "name": "GenericInlineAdminParametersTest.test_get_min_num",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 198
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_get_min_num.GetMinNumInline",
      "type": "class",
      "name": "GenericInlineAdminParametersTest.test_get_min_num.GetMinNumInline",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 200
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_get_min_num.GetMinNumInline.get_min_num",
      "type": "function",
      "name": "GenericInlineAdminParametersTest.test_get_min_num.GetMinNumInline.get_min_num",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 204
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_get_max_num",
      "type": "function",
      "name": "GenericInlineAdminParametersTest.test_get_max_num",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 217
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_get_max_num.GetMaxNumInline",
      "type": "class",
      "name": "GenericInlineAdminParametersTest.test_get_max_num.GetMaxNumInline",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 219
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_get_max_num.GetMaxNumInline.get_max_num",
      "type": "function",
      "name": "GenericInlineAdminParametersTest.test_get_max_num.GetMaxNumInline.get_max_num",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 223
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineAdminWithUniqueTogetherTest",
      "type": "class",
      "name": "GenericInlineAdminWithUniqueTogetherTest",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 238
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineAdminWithUniqueTogetherTest.setUp",
      "type": "function",
      "name": "GenericInlineAdminWithUniqueTogetherTest.setUp",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 240
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineAdminWithUniqueTogetherTest.test_add",
      "type": "function",
      "name": "GenericInlineAdminWithUniqueTogetherTest.test_add",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 243
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineAdminWithUniqueTogetherTest.test_delete",
      "type": "function",
      "name": "GenericInlineAdminWithUniqueTogetherTest.test_delete",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 260
    },
    {
      "id": "tests/generic_inline_admin/tests.py:NoInlineDeletionTest",
      "type": "class",
      "name": "NoInlineDeletionTest",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 273
    },
    {
      "id": "tests/generic_inline_admin/tests.py:NoInlineDeletionTest.test_no_deletion",
      "type": "function",
      "name": "NoInlineDeletionTest.test_no_deletion",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 275
    },
    {
      "id": "tests/generic_inline_admin/tests.py:MockRequest",
      "type": "class",
      "name": "MockRequest",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 282
    },
    {
      "id": "tests/generic_inline_admin/tests.py:MockSuperUser",
      "type": "class",
      "name": "MockSuperUser",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 286
    },
    {
      "id": "tests/generic_inline_admin/tests.py:MockSuperUser.has_perm",
      "type": "function",
      "name": "MockSuperUser.has_perm",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 287
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest",
      "type": "class",
      "name": "GenericInlineModelAdminTest",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 296
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.setUp",
      "type": "function",
      "name": "GenericInlineModelAdminTest.setUp",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 298
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_formset_kwargs",
      "type": "function",
      "name": "GenericInlineModelAdminTest.test_get_formset_kwargs",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 301
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude_with_readonly",
      "type": "function",
      "name": "GenericInlineModelAdminTest.test_custom_form_meta_exclude_with_readonly",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 314
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude_with_readonly.MediaForm",
      "type": "class",
      "name": "GenericInlineModelAdminTest.test_custom_form_meta_exclude_with_readonly.MediaForm",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 320
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude_with_readonly.MediaForm.Meta",
      "type": "class",
      "name": "GenericInlineModelAdminTest.test_custom_form_meta_exclude_with_readonly.MediaForm.Meta",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 322
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude_with_readonly.MediaInline",
      "type": "class",
      "name": "GenericInlineModelAdminTest.test_custom_form_meta_exclude_with_readonly.MediaInline",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 326
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude_with_readonly.EpisodeAdmin",
      "type": "class",
      "name": "GenericInlineModelAdminTest.test_custom_form_meta_exclude_with_readonly.EpisodeAdmin",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 331
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude",
      "type": "function",
      "name": "GenericInlineModelAdminTest.test_custom_form_meta_exclude",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 341
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude.MediaForm",
      "type": "class",
      "name": "GenericInlineModelAdminTest.test_custom_form_meta_exclude.MediaForm",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 350
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude.MediaForm.Meta",
      "type": "class",
      "name": "GenericInlineModelAdminTest.test_custom_form_meta_exclude.MediaForm.Meta",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 352
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude.MediaInline",
      "type": "class",
      "name": "GenericInlineModelAdminTest.test_custom_form_meta_exclude.MediaInline",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 373
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude.EpisodeAdmin",
      "type": "class",
      "name": "GenericInlineModelAdminTest.test_custom_form_meta_exclude.EpisodeAdmin",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 377
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_fieldsets",
      "type": "function",
      "name": "GenericInlineModelAdminTest.test_get_fieldsets",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 387
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_fieldsets.MediaForm",
      "type": "class",
      "name": "GenericInlineModelAdminTest.test_get_fieldsets.MediaForm",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 390
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_fieldsets.MediaForm.Meta",
      "type": "class",
      "name": "GenericInlineModelAdminTest.test_get_fieldsets.MediaForm.Meta",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 391
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_fieldsets.MediaInline",
      "type": "class",
      "name": "GenericInlineModelAdminTest.test_get_fieldsets.MediaInline",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 395
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_fieldsets.MediaInline.get_fieldsets",
      "type": "function",
      "name": "GenericInlineModelAdminTest.test_get_fieldsets.MediaInline.get_fieldsets",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 400
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_formsets_with_inlines_returns_tuples",
      "type": "function",
      "name": "GenericInlineModelAdminTest.test_get_formsets_with_inlines_returns_tuples",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 407
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_formsets_with_inlines_returns_tuples.MediaForm",
      "type": "class",
      "name": "GenericInlineModelAdminTest.test_get_formsets_with_inlines_returns_tuples.MediaForm",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 411
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_formsets_with_inlines_returns_tuples.MediaForm.Meta",
      "type": "class",
      "name": "GenericInlineModelAdminTest.test_get_formsets_with_inlines_returns_tuples.MediaForm.Meta",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 412
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_formsets_with_inlines_returns_tuples.MediaInline",
      "type": "class",
      "name": "GenericInlineModelAdminTest.test_get_formsets_with_inlines_returns_tuples.MediaInline",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 416
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_formsets_with_inlines_returns_tuples.AlternateInline",
      "type": "class",
      "name": "GenericInlineModelAdminTest.test_get_formsets_with_inlines_returns_tuples.AlternateInline",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 420
    },
    {
      "id": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_formsets_with_inlines_returns_tuples.EpisodeAdmin",
      "type": "class",
      "name": "GenericInlineModelAdminTest.test_get_formsets_with_inlines_returns_tuples.EpisodeAdmin",
      "file": "tests/generic_inline_admin/tests.py",
      "line": 424
    },
    {
      "id": "tests/generic_inline_admin/urls.py",
      "type": "file",
      "name": "urls.py",
      "file": "tests/generic_inline_admin/urls.py",
      "line": 0
    },
    {
      "id": "tests/custom_methods",
      "type": "directory",
      "name": "custom_methods",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/custom_methods/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/custom_methods/models.py",
      "line": 0
    },
    {
      "id": "tests/custom_methods/models.py:Article",
      "type": "class",
      "name": "Article",
      "file": "tests/custom_methods/models.py",
      "line": 12
    },
    {
      "id": "tests/custom_methods/models.py:Article.__str__",
      "type": "function",
      "name": "Article.__str__",
      "file": "tests/custom_methods/models.py",
      "line": 16
    },
    {
      "id": "tests/custom_methods/models.py:Article.was_published_today",
      "type": "function",
      "name": "Article.was_published_today",
      "file": "tests/custom_methods/models.py",
      "line": 19
    },
    {
      "id": "tests/custom_methods/models.py:Article.articles_from_same_day_1",
      "type": "function",
      "name": "Article.articles_from_same_day_1",
      "file": "tests/custom_methods/models.py",
      "line": 22
    },
    {
      "id": "tests/custom_methods/models.py:Article.articles_from_same_day_2",
      "type": "function",
      "name": "Article.articles_from_same_day_2",
      "file": "tests/custom_methods/models.py",
      "line": 25
    },
    {
      "id": "tests/custom_methods/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/custom_methods/__init__.py",
      "line": 0
    },
    {
      "id": "tests/custom_methods/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/custom_methods/tests.py",
      "line": 0
    },
    {
      "id": "tests/custom_methods/tests.py:MethodsTests",
      "type": "class",
      "name": "MethodsTests",
      "file": "tests/custom_methods/tests.py",
      "line": 8
    },
    {
      "id": "tests/custom_methods/tests.py:MethodsTests.test_custom_methods",
      "type": "function",
      "name": "MethodsTests.test_custom_methods",
      "file": "tests/custom_methods/tests.py",
      "line": 9
    },
    {
      "id": "tests/model_formsets_regress",
      "type": "directory",
      "name": "model_formsets_regress",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/model_formsets_regress/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/model_formsets_regress/models.py",
      "line": 0
    },
    {
      "id": "tests/model_formsets_regress/models.py:User",
      "type": "class",
      "name": "User",
      "file": "tests/model_formsets_regress/models.py",
      "line": 4
    },
    {
      "id": "tests/model_formsets_regress/models.py:UserSite",
      "type": "class",
      "name": "UserSite",
      "file": "tests/model_formsets_regress/models.py",
      "line": 9
    },
    {
      "id": "tests/model_formsets_regress/models.py:UserProfile",
      "type": "class",
      "name": "UserProfile",
      "file": "tests/model_formsets_regress/models.py",
      "line": 14
    },
    {
      "id": "tests/model_formsets_regress/models.py:UserPreferences",
      "type": "class",
      "name": "UserPreferences",
      "file": "tests/model_formsets_regress/models.py",
      "line": 19
    },
    {
      "id": "tests/model_formsets_regress/models.py:ProfileNetwork",
      "type": "class",
      "name": "ProfileNetwork",
      "file": "tests/model_formsets_regress/models.py",
      "line": 28
    },
    {
      "id": "tests/model_formsets_regress/models.py:Place",
      "type": "class",
      "name": "Place",
      "file": "tests/model_formsets_regress/models.py",
      "line": 34
    },
    {
      "id": "tests/model_formsets_regress/models.py:Restaurant",
      "type": "class",
      "name": "Restaurant",
      "file": "tests/model_formsets_regress/models.py",
      "line": 38
    },
    {
      "id": "tests/model_formsets_regress/models.py:Manager",
      "type": "class",
      "name": "Manager",
      "file": "tests/model_formsets_regress/models.py",
      "line": 42
    },
    {
      "id": "tests/model_formsets_regress/models.py:Network",
      "type": "class",
      "name": "Network",
      "file": "tests/model_formsets_regress/models.py",
      "line": 47
    },
    {
      "id": "tests/model_formsets_regress/models.py:Host",
      "type": "class",
      "name": "Host",
      "file": "tests/model_formsets_regress/models.py",
      "line": 51
    },
    {
      "id": "tests/model_formsets_regress/models.py:Host.__str__",
      "type": "function",
      "name": "Host.__str__",
      "file": "tests/model_formsets_regress/models.py",
      "line": 55
    },
    {
      "id": "tests/model_formsets_regress/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/model_formsets_regress/__init__.py",
      "line": 0
    },
    {
      "id": "tests/model_formsets_regress/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 0
    },
    {
      "id": "tests/model_formsets_regress/tests.py:InlineFormsetTests",
      "type": "class",
      "name": "InlineFormsetTests",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 16
    },
    {
      "id": "tests/model_formsets_regress/tests.py:InlineFormsetTests.test_formset_over_to_field",
      "type": "function",
      "name": "InlineFormsetTests.test_formset_over_to_field",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 17
    },
    {
      "id": "tests/model_formsets_regress/tests.py:InlineFormsetTests.test_formset_over_inherited_model",
      "type": "function",
      "name": "InlineFormsetTests.test_formset_over_inherited_model",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 93
    },
    {
      "id": "tests/model_formsets_regress/tests.py:InlineFormsetTests.test_inline_model_with_to_field",
      "type": "function",
      "name": "InlineFormsetTests.test_inline_model_with_to_field",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 160
    },
    {
      "id": "tests/model_formsets_regress/tests.py:InlineFormsetTests.test_inline_model_with_primary_to_field",
      "type": "function",
      "name": "InlineFormsetTests.test_inline_model_with_primary_to_field",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 174
    },
    {
      "id": "tests/model_formsets_regress/tests.py:InlineFormsetTests.test_inline_model_with_to_field_to_rel",
      "type": "function",
      "name": "InlineFormsetTests.test_inline_model_with_to_field_to_rel",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 182
    },
    {
      "id": "tests/model_formsets_regress/tests.py:InlineFormsetTests.test_formset_with_none_instance",
      "type": "function",
      "name": "InlineFormsetTests.test_formset_with_none_instance",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 199
    },
    {
      "id": "tests/model_formsets_regress/tests.py:InlineFormsetTests.test_empty_fields_on_modelformset",
      "type": "function",
      "name": "InlineFormsetTests.test_empty_fields_on_modelformset",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 209
    },
    {
      "id": "tests/model_formsets_regress/tests.py:InlineFormsetTests.test_save_as_new_with_new_inlines",
      "type": "function",
      "name": "InlineFormsetTests.test_save_as_new_with_new_inlines",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 220
    },
    {
      "id": "tests/model_formsets_regress/tests.py:InlineFormsetTests.test_initial_data",
      "type": "function",
      "name": "InlineFormsetTests.test_initial_data",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 252
    },
    {
      "id": "tests/model_formsets_regress/tests.py:FormsetTests",
      "type": "class",
      "name": "FormsetTests",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 263
    },
    {
      "id": "tests/model_formsets_regress/tests.py:FormsetTests.test_error_class",
      "type": "function",
      "name": "FormsetTests.test_error_class",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 264
    },
    {
      "id": "tests/model_formsets_regress/tests.py:FormsetTests.test_initial_data",
      "type": "function",
      "name": "FormsetTests.test_initial_data",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 289
    },
    {
      "id": "tests/model_formsets_regress/tests.py:FormsetTests.test_extraneous_query_is_not_run",
      "type": "function",
      "name": "FormsetTests.test_extraneous_query_is_not_run",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 297
    },
    {
      "id": "tests/model_formsets_regress/tests.py:CustomWidget",
      "type": "class",
      "name": "CustomWidget",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 310
    },
    {
      "id": "tests/model_formsets_regress/tests.py:UserSiteForm",
      "type": "class",
      "name": "UserSiteForm",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 314
    },
    {
      "id": "tests/model_formsets_regress/tests.py:UserSiteForm.Meta",
      "type": "class",
      "name": "UserSiteForm.Meta",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 315
    },
    {
      "id": "tests/model_formsets_regress/tests.py:Callback",
      "type": "class",
      "name": "Callback",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 325
    },
    {
      "id": "tests/model_formsets_regress/tests.py:Callback.__call__",
      "type": "function",
      "name": "Callback.__call__",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 330
    },
    {
      "id": "tests/model_formsets_regress/tests.py:FormfieldCallbackTests",
      "type": "class",
      "name": "FormfieldCallbackTests",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 335
    },
    {
      "id": "tests/model_formsets_regress/tests.py:FormfieldCallbackTests.test_inlineformset_factory_default",
      "type": "function",
      "name": "FormfieldCallbackTests.test_inlineformset_factory_default",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 342
    },
    {
      "id": "tests/model_formsets_regress/tests.py:FormfieldCallbackTests.test_modelformset_factory_default",
      "type": "function",
      "name": "FormfieldCallbackTests.test_modelformset_factory_default",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 350
    },
    {
      "id": "tests/model_formsets_regress/tests.py:FormfieldCallbackTests.assertCallbackCalled",
      "type": "function",
      "name": "FormfieldCallbackTests.assertCallbackCalled",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 358
    },
    {
      "id": "tests/model_formsets_regress/tests.py:FormfieldCallbackTests.test_inlineformset_custom_callback",
      "type": "function",
      "name": "FormfieldCallbackTests.test_inlineformset_custom_callback",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 367
    },
    {
      "id": "tests/model_formsets_regress/tests.py:FormfieldCallbackTests.test_modelformset_custom_callback",
      "type": "function",
      "name": "FormfieldCallbackTests.test_modelformset_custom_callback",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 373
    },
    {
      "id": "tests/model_formsets_regress/tests.py:BaseCustomDeleteFormSet",
      "type": "class",
      "name": "BaseCustomDeleteFormSet",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 379
    },
    {
      "id": "tests/model_formsets_regress/tests.py:BaseCustomDeleteFormSet.add_fields",
      "type": "function",
      "name": "BaseCustomDeleteFormSet.add_fields",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 386
    },
    {
      "id": "tests/model_formsets_regress/tests.py:BaseCustomDeleteFormSet._should_delete_form",
      "type": "function",
      "name": "BaseCustomDeleteFormSet._should_delete_form",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 392
    },
    {
      "id": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests",
      "type": "class",
      "name": "FormfieldShouldDeleteFormTests",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 396
    },
    {
      "id": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests.BaseCustomDeleteModelFormSet",
      "type": "class",
      "name": "FormfieldShouldDeleteFormTests.BaseCustomDeleteModelFormSet",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 401
    },
    {
      "id": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests.CustomDeleteUserForm",
      "type": "class",
      "name": "FormfieldShouldDeleteFormTests.CustomDeleteUserForm",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 404
    },
    {
      "id": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests.CustomDeleteUserForm.Meta",
      "type": "class",
      "name": "FormfieldShouldDeleteFormTests.CustomDeleteUserForm.Meta",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 406
    },
    {
      "id": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests.CustomDeleteUserForm.should_delete",
      "type": "function",
      "name": "FormfieldShouldDeleteFormTests.CustomDeleteUserForm.should_delete",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 410
    },
    {
      "id": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests.test_init_database",
      "type": "function",
      "name": "FormfieldShouldDeleteFormTests.test_init_database",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 438
    },
    {
      "id": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests.test_no_delete",
      "type": "function",
      "name": "FormfieldShouldDeleteFormTests.test_no_delete",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 444
    },
    {
      "id": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests.test_all_delete",
      "type": "function",
      "name": "FormfieldShouldDeleteFormTests.test_all_delete",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 461
    },
    {
      "id": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests.test_custom_delete",
      "type": "function",
      "name": "FormfieldShouldDeleteFormTests.test_custom_delete",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 479
    },
    {
      "id": "tests/model_formsets_regress/tests.py:RedeleteTests",
      "type": "class",
      "name": "RedeleteTests",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 505
    },
    {
      "id": "tests/model_formsets_regress/tests.py:RedeleteTests.test_resubmit",
      "type": "function",
      "name": "RedeleteTests.test_resubmit",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 506
    },
    {
      "id": "tests/model_formsets_regress/tests.py:RedeleteTests.test_delete_already_deleted",
      "type": "function",
      "name": "RedeleteTests.test_delete_already_deleted",
      "file": "tests/model_formsets_regress/tests.py",
      "line": 532
    },
    {
      "id": "tests/signing",
      "type": "directory",
      "name": "signing",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/signing/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/signing/__init__.py",
      "line": 0
    },
    {
      "id": "tests/signing/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/signing/tests.py",
      "line": 0
    },
    {
      "id": "tests/signing/tests.py:TestSigner",
      "type": "class",
      "name": "TestSigner",
      "file": "tests/signing/tests.py",
      "line": 8
    },
    {
      "id": "tests/signing/tests.py:TestSigner.test_signature",
      "type": "function",
      "name": "TestSigner.test_signature",
      "file": "tests/signing/tests.py",
      "line": 10
    },
    {
      "id": "tests/signing/tests.py:TestSigner.test_signature_with_salt",
      "type": "function",
      "name": "TestSigner.test_signature_with_salt",
      "file": "tests/signing/tests.py",
      "line": 25
    },
    {
      "id": "tests/signing/tests.py:TestSigner.test_sign_unsign",
      "type": "function",
      "name": "TestSigner.test_sign_unsign",
      "file": "tests/signing/tests.py",
      "line": 36
    },
    {
      "id": "tests/signing/tests.py:TestSigner.test_unsign_detects_tampering",
      "type": "function",
      "name": "TestSigner.test_unsign_detects_tampering",
      "file": "tests/signing/tests.py",
      "line": 52
    },
    {
      "id": "tests/signing/tests.py:TestSigner.test_dumps_loads",
      "type": "function",
      "name": "TestSigner.test_dumps_loads",
      "file": "tests/signing/tests.py",
      "line": 68
    },
    {
      "id": "tests/signing/tests.py:TestSigner.test_decode_detects_tampering",
      "type": "function",
      "name": "TestSigner.test_decode_detects_tampering",
      "file": "tests/signing/tests.py",
      "line": 81
    },
    {
      "id": "tests/signing/tests.py:TestSigner.test_works_with_non_ascii_keys",
      "type": "function",
      "name": "TestSigner.test_works_with_non_ascii_keys",
      "file": "tests/signing/tests.py",
      "line": 99
    },
    {
      "id": "tests/signing/tests.py:TestSigner.test_valid_sep",
      "type": "function",
      "name": "TestSigner.test_valid_sep",
      "file": "tests/signing/tests.py",
      "line": 105
    },
    {
      "id": "tests/signing/tests.py:TestSigner.test_invalid_sep",
      "type": "function",
      "name": "TestSigner.test_invalid_sep",
      "file": "tests/signing/tests.py",
      "line": 111
    },
    {
      "id": "tests/signing/tests.py:TestTimestampSigner",
      "type": "class",
      "name": "TestTimestampSigner",
      "file": "tests/signing/tests.py",
      "line": 120
    },
    {
      "id": "tests/signing/tests.py:TestTimestampSigner.test_timestamp_signer",
      "type": "function",
      "name": "TestTimestampSigner.test_timestamp_signer",
      "file": "tests/signing/tests.py",
      "line": 122
    },
    {
      "id": "tests/middleware_exceptions",
      "type": "directory",
      "name": "middleware_exceptions",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/middleware_exceptions/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/middleware_exceptions/__init__.py",
      "line": 0
    },
    {
      "id": "tests/middleware_exceptions/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/middleware_exceptions/tests.py",
      "line": 0
    },
    {
      "id": "tests/middleware_exceptions/tests.py:MiddlewareTests",
      "type": "class",
      "name": "MiddlewareTests",
      "file": "tests/middleware_exceptions/tests.py",
      "line": 9
    },
    {
      "id": "tests/middleware_exceptions/tests.py:MiddlewareTests.tearDown",
      "type": "function",
      "name": "MiddlewareTests.tearDown",
      "file": "tests/middleware_exceptions/tests.py",
      "line": 10
    },
    {
      "id": "tests/middleware_exceptions/tests.py:MiddlewareTests.test_process_view_return_none",
      "type": "function",
      "name": "MiddlewareTests.test_process_view_return_none",
      "file": "tests/middleware_exceptions/tests.py",
      "line": 14
    },
    {
      "id": "tests/middleware_exceptions/tests.py:MiddlewareTests.test_process_view_return_response",
      "type": "function",
      "name": "MiddlewareTests.test_process_view_return_response",
      "file": "tests/middleware_exceptions/tests.py",
      "line": 20
    },
    {
      "id": "tests/middleware_exceptions/tests.py:MiddlewareTests.test_templateresponse_from_process_view_rendered",
      "type": "function",
      "name": "MiddlewareTests.test_templateresponse_from_process_view_rendered",
      "file": "tests/middleware_exceptions/tests.py",
      "line": 28
    },
    {
      "id": "tests/middleware_exceptions/tests.py:MiddlewareTests.test_templateresponse_from_process_view_passed_to_process_template_response",
      "type": "function",
      "name": "MiddlewareTests.test_templateresponse_from_process_view_passed_to_process_template_response",
      "file": "tests/middleware_exceptions/tests.py",
      "line": 41
    },
    {
      "id": "tests/middleware_exceptions/tests.py:MiddlewareTests.test_process_template_response",
      "type": "function",
      "name": "MiddlewareTests.test_process_template_response",
      "file": "tests/middleware_exceptions/tests.py",
      "line": 55
    },
    {
      "id": "tests/middleware_exceptions/tests.py:MiddlewareTests.test_process_template_response_returns_none",
      "type": "function",
      "name": "MiddlewareTests.test_process_template_response_returns_none",
      "file": "tests/middleware_exceptions/tests.py",
      "line": 60
    },
    {
      "id": "tests/middleware_exceptions/tests.py:MiddlewareTests.test_view_exception_converted_before_middleware",
      "type": "function",
      "name": "MiddlewareTests.test_view_exception_converted_before_middleware",
      "file": "tests/middleware_exceptions/tests.py",
      "line": 69
    },
    {
      "id": "tests/middleware_exceptions/tests.py:MiddlewareTests.test_view_exception_handled_by_process_exception",
      "type": "function",
      "name": "MiddlewareTests.test_view_exception_handled_by_process_exception",
      "file": "tests/middleware_exceptions/tests.py",
      "line": 75
    },
    {
      "id": "tests/middleware_exceptions/tests.py:MiddlewareTests.test_response_from_process_exception_short_circuits_remainder",
      "type": "function",
      "name": "MiddlewareTests.test_response_from_process_exception_short_circuits_remainder",
      "file": "tests/middleware_exceptions/tests.py",
      "line": 83
    },
    {
      "id": "tests/middleware_exceptions/tests.py:MiddlewareTests.test_exception_in_middleware_converted_before_prior_middleware",
      "type": "function",
      "name": "MiddlewareTests.test_exception_in_middleware_converted_before_prior_middleware",
      "file": "tests/middleware_exceptions/tests.py",
      "line": 92
    },
    {
      "id": "tests/middleware_exceptions/tests.py:MiddlewareTests.test_exception_in_render_passed_to_process_exception",
      "type": "function",
      "name": "MiddlewareTests.test_exception_in_render_passed_to_process_exception",
      "file": "tests/middleware_exceptions/tests.py",
      "line": 98
    },
    {
      "id": "tests/middleware_exceptions/tests.py:RootUrlconfTests",
      "type": "class",
      "name": "RootUrlconfTests",
      "file": "tests/middleware_exceptions/tests.py",
      "line": 104
    },
    {
      "id": "tests/middleware_exceptions/tests.py:RootUrlconfTests.test_missing_root_urlconf",
      "type": "function",
      "name": "RootUrlconfTests.test_missing_root_urlconf",
      "file": "tests/middleware_exceptions/tests.py",
      "line": 107
    },
    {
      "id": "tests/middleware_exceptions/tests.py:MyMiddleware",
      "type": "class",
      "name": "MyMiddleware",
      "file": "tests/middleware_exceptions/tests.py",
      "line": 115
    },
    {
      "id": "tests/middleware_exceptions/tests.py:MyMiddleware.process_request",
      "type": "function",
      "name": "MyMiddleware.process_request",
      "file": "tests/middleware_exceptions/tests.py",
      "line": 120
    },
    {
      "id": "tests/middleware_exceptions/tests.py:MyMiddlewareWithExceptionMessage",
      "type": "class",
      "name": "MyMiddlewareWithExceptionMessage",
      "file": "tests/middleware_exceptions/tests.py",
      "line": 124
    },
    {
      "id": "tests/middleware_exceptions/tests.py:MyMiddlewareWithExceptionMessage.process_request",
      "type": "function",
      "name": "MyMiddlewareWithExceptionMessage.process_request",
      "file": "tests/middleware_exceptions/tests.py",
      "line": 129
    },
    {
      "id": "tests/middleware_exceptions/tests.py:MiddlewareNotUsedTests",
      "type": "class",
      "name": "MiddlewareNotUsedTests",
      "file": "tests/middleware_exceptions/tests.py",
      "line": 138
    },
    {
      "id": "tests/middleware_exceptions/tests.py:MiddlewareNotUsedTests.test_raise_exception",
      "type": "function",
      "name": "MiddlewareNotUsedTests.test_raise_exception",
      "file": "tests/middleware_exceptions/tests.py",
      "line": 142
    },
    {
      "id": "tests/middleware_exceptions/tests.py:MiddlewareNotUsedTests.test_log",
      "type": "function",
      "name": "MiddlewareNotUsedTests.test_log",
      "file": "tests/middleware_exceptions/tests.py",
      "line": 148
    },
    {
      "id": "tests/middleware_exceptions/tests.py:MiddlewareNotUsedTests.test_log_custom_message",
      "type": "function",
      "name": "MiddlewareNotUsedTests.test_log_custom_message",
      "file": "tests/middleware_exceptions/tests.py",
      "line": 157
    },
    {
      "id": "tests/middleware_exceptions/tests.py:MiddlewareNotUsedTests.test_do_not_log_when_debug_is_false",
      "type": "function",
      "name": "MiddlewareNotUsedTests.test_do_not_log_when_debug_is_false",
      "file": "tests/middleware_exceptions/tests.py",
      "line": 166
    },
    {
      "id": "tests/middleware_exceptions/urls.py",
      "type": "file",
      "name": "urls.py",
      "file": "tests/middleware_exceptions/urls.py",
      "line": 0
    },
    {
      "id": "tests/middleware_exceptions/middleware.py",
      "type": "file",
      "name": "middleware.py",
      "file": "tests/middleware_exceptions/middleware.py",
      "line": 0
    },
    {
      "id": "tests/middleware_exceptions/middleware.py:BaseMiddleware",
      "type": "class",
      "name": "BaseMiddleware",
      "file": "tests/middleware_exceptions/middleware.py",
      "line": 8
    },
    {
      "id": "tests/middleware_exceptions/middleware.py:BaseMiddleware.__call__",
      "type": "function",
      "name": "BaseMiddleware.__call__",
      "file": "tests/middleware_exceptions/middleware.py",
      "line": 12
    },
    {
      "id": "tests/middleware_exceptions/middleware.py:ProcessExceptionMiddleware",
      "type": "class",
      "name": "ProcessExceptionMiddleware",
      "file": "tests/middleware_exceptions/middleware.py",
      "line": 16
    },
    {
      "id": "tests/middleware_exceptions/middleware.py:ProcessExceptionMiddleware.process_exception",
      "type": "function",
      "name": "ProcessExceptionMiddleware.process_exception",
      "file": "tests/middleware_exceptions/middleware.py",
      "line": 17
    },
    {
      "id": "tests/middleware_exceptions/middleware.py:ProcessExceptionLogMiddleware",
      "type": "class",
      "name": "ProcessExceptionLogMiddleware",
      "file": "tests/middleware_exceptions/middleware.py",
      "line": 21
    },
    {
      "id": "tests/middleware_exceptions/middleware.py:ProcessExceptionLogMiddleware.process_exception",
      "type": "function",
      "name": "ProcessExceptionLogMiddleware.process_exception",
      "file": "tests/middleware_exceptions/middleware.py",
      "line": 22
    },
    {
      "id": "tests/middleware_exceptions/middleware.py:ProcessExceptionExcMiddleware",
      "type": "class",
      "name": "ProcessExceptionExcMiddleware",
      "file": "tests/middleware_exceptions/middleware.py",
      "line": 26
    },
    {
      "id": "tests/middleware_exceptions/middleware.py:ProcessExceptionExcMiddleware.process_exception",
      "type": "function",
      "name": "ProcessExceptionExcMiddleware.process_exception",
      "file": "tests/middleware_exceptions/middleware.py",
      "line": 27
    },
    {
      "id": "tests/middleware_exceptions/middleware.py:ProcessViewMiddleware",
      "type": "class",
      "name": "ProcessViewMiddleware",
      "file": "tests/middleware_exceptions/middleware.py",
      "line": 31
    },
    {
      "id": "tests/middleware_exceptions/middleware.py:ProcessViewMiddleware.process_view",
      "type": "function",
      "name": "ProcessViewMiddleware.process_view",
      "file": "tests/middleware_exceptions/middleware.py",
      "line": 32
    },
    {
      "id": "tests/middleware_exceptions/middleware.py:ProcessViewNoneMiddleware",
      "type": "class",
      "name": "ProcessViewNoneMiddleware",
      "file": "tests/middleware_exceptions/middleware.py",
      "line": 36
    },
    {
      "id": "tests/middleware_exceptions/middleware.py:ProcessViewNoneMiddleware.process_view",
      "type": "function",
      "name": "ProcessViewNoneMiddleware.process_view",
      "file": "tests/middleware_exceptions/middleware.py",
      "line": 37
    },
    {
      "id": "tests/middleware_exceptions/middleware.py:ProcessViewTemplateResponseMiddleware",
      "type": "class",
      "name": "ProcessViewTemplateResponseMiddleware",
      "file": "tests/middleware_exceptions/middleware.py",
      "line": 42
    },
    {
      "id": "tests/middleware_exceptions/middleware.py:ProcessViewTemplateResponseMiddleware.process_view",
      "type": "function",
      "name": "ProcessViewTemplateResponseMiddleware.process_view",
      "file": "tests/middleware_exceptions/middleware.py",
      "line": 43
    },
    {
      "id": "tests/middleware_exceptions/middleware.py:TemplateResponseMiddleware",
      "type": "class",
      "name": "TemplateResponseMiddleware",
      "file": "tests/middleware_exceptions/middleware.py",
      "line": 48
    },
    {
      "id": "tests/middleware_exceptions/middleware.py:TemplateResponseMiddleware.process_template_response",
      "type": "function",
      "name": "TemplateResponseMiddleware.process_template_response",
      "file": "tests/middleware_exceptions/middleware.py",
      "line": 49
    },
    {
      "id": "tests/middleware_exceptions/middleware.py:LogMiddleware",
      "type": "class",
      "name": "LogMiddleware",
      "file": "tests/middleware_exceptions/middleware.py",
      "line": 54
    },
    {
      "id": "tests/middleware_exceptions/middleware.py:LogMiddleware.__call__",
      "type": "function",
      "name": "LogMiddleware.__call__",
      "file": "tests/middleware_exceptions/middleware.py",
      "line": 55
    },
    {
      "id": "tests/middleware_exceptions/middleware.py:NoTemplateResponseMiddleware",
      "type": "class",
      "name": "NoTemplateResponseMiddleware",
      "file": "tests/middleware_exceptions/middleware.py",
      "line": 61
    },
    {
      "id": "tests/middleware_exceptions/middleware.py:NoTemplateResponseMiddleware.process_template_response",
      "type": "function",
      "name": "NoTemplateResponseMiddleware.process_template_response",
      "file": "tests/middleware_exceptions/middleware.py",
      "line": 62
    },
    {
      "id": "tests/middleware_exceptions/middleware.py:NotFoundMiddleware",
      "type": "class",
      "name": "NotFoundMiddleware",
      "file": "tests/middleware_exceptions/middleware.py",
      "line": 66
    },
    {
      "id": "tests/middleware_exceptions/middleware.py:NotFoundMiddleware.__call__",
      "type": "function",
      "name": "NotFoundMiddleware.__call__",
      "file": "tests/middleware_exceptions/middleware.py",
      "line": 67
    },
    {
      "id": "tests/middleware_exceptions/views.py",
      "type": "file",
      "name": "views.py",
      "file": "tests/middleware_exceptions/views.py",
      "line": 0
    },
    {
      "id": "tests/middleware_exceptions/views.py:normal_view",
      "type": "function",
      "name": "normal_view",
      "file": "tests/middleware_exceptions/views.py",
      "line": 7
    },
    {
      "id": "tests/middleware_exceptions/views.py:template_response",
      "type": "function",
      "name": "template_response",
      "file": "tests/middleware_exceptions/views.py",
      "line": 11
    },
    {
      "id": "tests/middleware_exceptions/views.py:server_error",
      "type": "function",
      "name": "server_error",
      "file": "tests/middleware_exceptions/views.py",
      "line": 16
    },
    {
      "id": "tests/middleware_exceptions/views.py:permission_denied",
      "type": "function",
      "name": "permission_denied",
      "file": "tests/middleware_exceptions/views.py",
      "line": 20
    },
    {
      "id": "tests/middleware_exceptions/views.py:exception_in_render",
      "type": "function",
      "name": "exception_in_render",
      "file": "tests/middleware_exceptions/views.py",
      "line": 24
    },
    {
      "id": "tests/middleware_exceptions/views.py:exception_in_render.CustomHttpResponse",
      "type": "class",
      "name": "exception_in_render.CustomHttpResponse",
      "file": "tests/middleware_exceptions/views.py",
      "line": 25
    },
    {
      "id": "tests/middleware_exceptions/views.py:exception_in_render.CustomHttpResponse.render",
      "type": "function",
      "name": "exception_in_render.CustomHttpResponse.render",
      "file": "tests/middleware_exceptions/views.py",
      "line": 26
    },
    {
      "id": "tests/admin_filters",
      "type": "directory",
      "name": "admin_filters",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_filters/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/admin_filters/models.py",
      "line": 0
    },
    {
      "id": "tests/admin_filters/models.py:Book",
      "type": "class",
      "name": "Book",
      "file": "tests/admin_filters/models.py",
      "line": 9
    },
    {
      "id": "tests/admin_filters/models.py:Book.__str__",
      "type": "function",
      "name": "Book.__str__",
      "file": "tests/admin_filters/models.py",
      "line": 37
    },
    {
      "id": "tests/admin_filters/models.py:Department",
      "type": "class",
      "name": "Department",
      "file": "tests/admin_filters/models.py",
      "line": 41
    },
    {
      "id": "tests/admin_filters/models.py:Department.__str__",
      "type": "function",
      "name": "Department.__str__",
      "file": "tests/admin_filters/models.py",
      "line": 45
    },
    {
      "id": "tests/admin_filters/models.py:Employee",
      "type": "class",
      "name": "Employee",
      "file": "tests/admin_filters/models.py",
      "line": 49
    },
    {
      "id": "tests/admin_filters/models.py:Employee.__str__",
      "type": "function",
      "name": "Employee.__str__",
      "file": "tests/admin_filters/models.py",
      "line": 53
    },
    {
      "id": "tests/admin_filters/models.py:TaggedItem",
      "type": "class",
      "name": "TaggedItem",
      "file": "tests/admin_filters/models.py",
      "line": 57
    },
    {
      "id": "tests/admin_filters/models.py:TaggedItem.__str__",
      "type": "function",
      "name": "TaggedItem.__str__",
      "file": "tests/admin_filters/models.py",
      "line": 63
    },
    {
      "id": "tests/admin_filters/models.py:Bookmark",
      "type": "class",
      "name": "Bookmark",
      "file": "tests/admin_filters/models.py",
      "line": 67
    },
    {
      "id": "tests/admin_filters/models.py:Bookmark.__str__",
      "type": "function",
      "name": "Bookmark.__str__",
      "file": "tests/admin_filters/models.py",
      "line": 78
    },
    {
      "id": "tests/admin_filters/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/admin_filters/__init__.py",
      "line": 0
    },
    {
      "id": "tests/admin_filters/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/admin_filters/tests.py",
      "line": 0
    },
    {
      "id": "tests/admin_filters/tests.py:select_by",
      "type": "function",
      "name": "select_by",
      "file": "tests/admin_filters/tests.py",
      "line": 18
    },
    {
      "id": "tests/admin_filters/tests.py:DecadeListFilter",
      "type": "class",
      "name": "DecadeListFilter",
      "file": "tests/admin_filters/tests.py",
      "line": 22
    },
    {
      "id": "tests/admin_filters/tests.py:DecadeListFilter.lookups",
      "type": "function",
      "name": "DecadeListFilter.lookups",
      "file": "tests/admin_filters/tests.py",
      "line": 24
    },
    {
      "id": "tests/admin_filters/tests.py:DecadeListFilter.queryset",
      "type": "function",
      "name": "DecadeListFilter.queryset",
      "file": "tests/admin_filters/tests.py",
      "line": 32
    },
    {
      "id": "tests/admin_filters/tests.py:NotNinetiesListFilter",
      "type": "class",
      "name": "NotNinetiesListFilter",
      "file": "tests/admin_filters/tests.py",
      "line": 42
    },
    {
      "id": "tests/admin_filters/tests.py:NotNinetiesListFilter.lookups",
      "type": "function",
      "name": "NotNinetiesListFilter.lookups",
      "file": "tests/admin_filters/tests.py",
      "line": 46
    },
    {
      "id": "tests/admin_filters/tests.py:NotNinetiesListFilter.queryset",
      "type": "function",
      "name": "NotNinetiesListFilter.queryset",
      "file": "tests/admin_filters/tests.py",
      "line": 51
    },
    {
      "id": "tests/admin_filters/tests.py:DecadeListFilterWithTitleAndParameter",
      "type": "class",
      "name": "DecadeListFilterWithTitleAndParameter",
      "file": "tests/admin_filters/tests.py",
      "line": 58
    },
    {
      "id": "tests/admin_filters/tests.py:DecadeListFilterWithoutTitle",
      "type": "class",
      "name": "DecadeListFilterWithoutTitle",
      "file": "tests/admin_filters/tests.py",
      "line": 63
    },
    {
      "id": "tests/admin_filters/tests.py:DecadeListFilterWithoutParameter",
      "type": "class",
      "name": "DecadeListFilterWithoutParameter",
      "file": "tests/admin_filters/tests.py",
      "line": 67
    },
    {
      "id": "tests/admin_filters/tests.py:DecadeListFilterWithNoneReturningLookups",
      "type": "class",
      "name": "DecadeListFilterWithNoneReturningLookups",
      "file": "tests/admin_filters/tests.py",
      "line": 71
    },
    {
      "id": "tests/admin_filters/tests.py:DecadeListFilterWithNoneReturningLookups.lookups",
      "type": "function",
      "name": "DecadeListFilterWithNoneReturningLookups.lookups",
      "file": "tests/admin_filters/tests.py",
      "line": 73
    },
    {
      "id": "tests/admin_filters/tests.py:DecadeListFilterWithFailingQueryset",
      "type": "class",
      "name": "DecadeListFilterWithFailingQueryset",
      "file": "tests/admin_filters/tests.py",
      "line": 77
    },
    {
      "id": "tests/admin_filters/tests.py:DecadeListFilterWithFailingQueryset.queryset",
      "type": "function",
      "name": "DecadeListFilterWithFailingQueryset.queryset",
      "file": "tests/admin_filters/tests.py",
      "line": 79
    },
    {
      "id": "tests/admin_filters/tests.py:DecadeListFilterWithQuerysetBasedLookups",
      "type": "class",
      "name": "DecadeListFilterWithQuerysetBasedLookups",
      "file": "tests/admin_filters/tests.py",
      "line": 83
    },
    {
      "id": "tests/admin_filters/tests.py:DecadeListFilterWithQuerysetBasedLookups.lookups",
      "type": "function",
      "name": "DecadeListFilterWithQuerysetBasedLookups.lookups",
      "file": "tests/admin_filters/tests.py",
      "line": 85
    },
    {
      "id": "tests/admin_filters/tests.py:DecadeListFilterParameterEndsWith__In",
      "type": "class",
      "name": "DecadeListFilterParameterEndsWith__In",
      "file": "tests/admin_filters/tests.py",
      "line": 95
    },
    {
      "id": "tests/admin_filters/tests.py:DecadeListFilterParameterEndsWith__Isnull",
      "type": "class",
      "name": "DecadeListFilterParameterEndsWith__Isnull",
      "file": "tests/admin_filters/tests.py",
      "line": 100
    },
    {
      "id": "tests/admin_filters/tests.py:DepartmentListFilterLookupWithNonStringValue",
      "type": "class",
      "name": "DepartmentListFilterLookupWithNonStringValue",
      "file": "tests/admin_filters/tests.py",
      "line": 105
    },
    {
      "id": "tests/admin_filters/tests.py:DepartmentListFilterLookupWithNonStringValue.lookups",
      "type": "function",
      "name": "DepartmentListFilterLookupWithNonStringValue.lookups",
      "file": "tests/admin_filters/tests.py",
      "line": 109
    },
    {
      "id": "tests/admin_filters/tests.py:DepartmentListFilterLookupWithNonStringValue.queryset",
      "type": "function",
      "name": "DepartmentListFilterLookupWithNonStringValue.queryset",
      "file": "tests/admin_filters/tests.py",
      "line": 116
    },
    {
      "id": "tests/admin_filters/tests.py:DepartmentListFilterLookupWithUnderscoredParameter",
      "type": "class",
      "name": "DepartmentListFilterLookupWithUnderscoredParameter",
      "file": "tests/admin_filters/tests.py",
      "line": 121
    },
    {
      "id": "tests/admin_filters/tests.py:DepartmentListFilterLookupWithDynamicValue",
      "type": "class",
      "name": "DepartmentListFilterLookupWithDynamicValue",
      "file": "tests/admin_filters/tests.py",
      "line": 125
    },
    {
      "id": "tests/admin_filters/tests.py:DepartmentListFilterLookupWithDynamicValue.lookups",
      "type": "function",
      "name": "DepartmentListFilterLookupWithDynamicValue.lookups",
      "file": "tests/admin_filters/tests.py",
      "line": 127
    },
    {
      "id": "tests/admin_filters/tests.py:CustomUserAdmin",
      "type": "class",
      "name": "CustomUserAdmin",
      "file": "tests/admin_filters/tests.py",
      "line": 136
    },
    {
      "id": "tests/admin_filters/tests.py:BookAdmin",
      "type": "class",
      "name": "BookAdmin",
      "file": "tests/admin_filters/tests.py",
      "line": 140
    },
    {
      "id": "tests/admin_filters/tests.py:BookAdmin2",
      "type": "class",
      "name": "BookAdmin2",
      "file": "tests/admin_filters/tests.py",
      "line": 145
    },
    {
      "id": "tests/admin_filters/tests.py:BookAdminWithTupleBooleanFilter",
      "type": "class",
      "name": "BookAdminWithTupleBooleanFilter",
      "file": "tests/admin_filters/tests.py",
      "line": 149
    },
    {
      "id": "tests/admin_filters/tests.py:BookAdminWithUnderscoreLookupAndTuple",
      "type": "class",
      "name": "BookAdminWithUnderscoreLookupAndTuple",
      "file": "tests/admin_filters/tests.py",
      "line": 160
    },
    {
      "id": "tests/admin_filters/tests.py:BookAdminWithCustomQueryset",
      "type": "class",
      "name": "BookAdminWithCustomQueryset",
      "file": "tests/admin_filters/tests.py",
      "line": 171
    },
    {
      "id": "tests/admin_filters/tests.py:BookAdminWithCustomQueryset.get_queryset",
      "type": "function",
      "name": "BookAdminWithCustomQueryset.get_queryset",
      "file": "tests/admin_filters/tests.py",
      "line": 179
    },
    {
      "id": "tests/admin_filters/tests.py:BookAdminRelatedOnlyFilter",
      "type": "class",
      "name": "BookAdminRelatedOnlyFilter",
      "file": "tests/admin_filters/tests.py",
      "line": 183
    },
    {
      "id": "tests/admin_filters/tests.py:DecadeFilterBookAdmin",
      "type": "class",
      "name": "DecadeFilterBookAdmin",
      "file": "tests/admin_filters/tests.py",
      "line": 193
    },
    {
      "id": "tests/admin_filters/tests.py:NotNinetiesListFilterAdmin",
      "type": "class",
      "name": "NotNinetiesListFilterAdmin",
      "file": "tests/admin_filters/tests.py",
      "line": 198
    },
    {
      "id": "tests/admin_filters/tests.py:DecadeFilterBookAdminWithoutTitle",
      "type": "class",
      "name": "DecadeFilterBookAdminWithoutTitle",
      "file": "tests/admin_filters/tests.py",
      "line": 202
    },
    {
      "id": "tests/admin_filters/tests.py:DecadeFilterBookAdminWithoutParameter",
      "type": "class",
      "name": "DecadeFilterBookAdminWithoutParameter",
      "file": "tests/admin_filters/tests.py",
      "line": 206
    },
    {
      "id": "tests/admin_filters/tests.py:DecadeFilterBookAdminWithNoneReturningLookups",
      "type": "class",
      "name": "DecadeFilterBookAdminWithNoneReturningLookups",
      "file": "tests/admin_filters/tests.py",
      "line": 210
    },
    {
      "id": "tests/admin_filters/tests.py:DecadeFilterBookAdminWithFailingQueryset",
      "type": "class",
      "name": "DecadeFilterBookAdminWithFailingQueryset",
      "file": "tests/admin_filters/tests.py",
      "line": 214
    },
    {
      "id": "tests/admin_filters/tests.py:DecadeFilterBookAdminWithQuerysetBasedLookups",
      "type": "class",
      "name": "DecadeFilterBookAdminWithQuerysetBasedLookups",
      "file": "tests/admin_filters/tests.py",
      "line": 218
    },
    {
      "id": "tests/admin_filters/tests.py:DecadeFilterBookAdminParameterEndsWith__In",
      "type": "class",
      "name": "DecadeFilterBookAdminParameterEndsWith__In",
      "file": "tests/admin_filters/tests.py",
      "line": 222
    },
    {
      "id": "tests/admin_filters/tests.py:DecadeFilterBookAdminParameterEndsWith__Isnull",
      "type": "class",
      "name": "DecadeFilterBookAdminParameterEndsWith__Isnull",
      "file": "tests/admin_filters/tests.py",
      "line": 226
    },
    {
      "id": "tests/admin_filters/tests.py:EmployeeAdmin",
      "type": "class",
      "name": "EmployeeAdmin",
      "file": "tests/admin_filters/tests.py",
      "line": 230
    },
    {
      "id": "tests/admin_filters/tests.py:DepartmentFilterEmployeeAdmin",
      "type": "class",
      "name": "DepartmentFilterEmployeeAdmin",
      "file": "tests/admin_filters/tests.py",
      "line": 235
    },
    {
      "id": "tests/admin_filters/tests.py:DepartmentFilterUnderscoredEmployeeAdmin",
      "type": "class",
      "name": "DepartmentFilterUnderscoredEmployeeAdmin",
      "file": "tests/admin_filters/tests.py",
      "line": 239
    },
    {
      "id": "tests/admin_filters/tests.py:DepartmentFilterDynamicValueBookAdmin",
      "type": "class",
      "name": "DepartmentFilterDynamicValueBookAdmin",
      "file": "tests/admin_filters/tests.py",
      "line": 243
    },
    {
      "id": "tests/admin_filters/tests.py:BookmarkAdminGenericRelation",
      "type": "class",
      "name": "BookmarkAdminGenericRelation",
      "file": "tests/admin_filters/tests.py",
      "line": 247
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests",
      "type": "class",
      "name": "ListFiltersTests",
      "file": "tests/admin_filters/tests.py",
      "line": 251
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.setUpTestData",
      "type": "function",
      "name": "ListFiltersTests.setUpTestData",
      "file": "tests/admin_filters/tests.py",
      "line": 255
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_choicesfieldlistfilter_has_none_choice",
      "type": "function",
      "name": "ListFiltersTests.test_choicesfieldlistfilter_has_none_choice",
      "file": "tests/admin_filters/tests.py",
      "line": 301
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_choicesfieldlistfilter_has_none_choice.BookmarkChoicesAdmin",
      "type": "class",
      "name": "ListFiltersTests.test_choicesfieldlistfilter_has_none_choice.BookmarkChoicesAdmin",
      "file": "tests/admin_filters/tests.py",
      "line": 305
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_datefieldlistfilter",
      "type": "function",
      "name": "ListFiltersTests.test_datefieldlistfilter",
      "file": "tests/admin_filters/tests.py",
      "line": 318
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_datefieldlistfilter_with_time_zone_support",
      "type": "function",
      "name": "ListFiltersTests.test_datefieldlistfilter_with_time_zone_support",
      "file": "tests/admin_filters/tests.py",
      "line": 468
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_allvaluesfieldlistfilter",
      "type": "function",
      "name": "ListFiltersTests.test_allvaluesfieldlistfilter",
      "file": "tests/admin_filters/tests.py",
      "line": 472
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_allvaluesfieldlistfilter_custom_qs",
      "type": "function",
      "name": "ListFiltersTests.test_allvaluesfieldlistfilter_custom_qs",
      "file": "tests/admin_filters/tests.py",
      "line": 501
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_foreignkey",
      "type": "function",
      "name": "ListFiltersTests.test_relatedfieldlistfilter_foreignkey",
      "file": "tests/admin_filters/tests.py",
      "line": 518
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_foreignkey_ordering",
      "type": "function",
      "name": "ListFiltersTests.test_relatedfieldlistfilter_foreignkey_ordering",
      "file": "tests/admin_filters/tests.py",
      "line": 557
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_foreignkey_ordering.EmployeeAdminWithOrdering",
      "type": "class",
      "name": "ListFiltersTests.test_relatedfieldlistfilter_foreignkey_ordering.EmployeeAdminWithOrdering",
      "file": "tests/admin_filters/tests.py",
      "line": 559
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_foreignkey_ordering.BookAdmin",
      "type": "class",
      "name": "ListFiltersTests.test_relatedfieldlistfilter_foreignkey_ordering.BookAdmin",
      "file": "tests/admin_filters/tests.py",
      "line": 562
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_foreignkey_ordering_reverse",
      "type": "function",
      "name": "ListFiltersTests.test_relatedfieldlistfilter_foreignkey_ordering_reverse",
      "file": "tests/admin_filters/tests.py",
      "line": 576
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_foreignkey_ordering_reverse.EmployeeAdminWithOrdering",
      "type": "class",
      "name": "ListFiltersTests.test_relatedfieldlistfilter_foreignkey_ordering_reverse.EmployeeAdminWithOrdering",
      "file": "tests/admin_filters/tests.py",
      "line": 577
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_foreignkey_ordering_reverse.BookAdmin",
      "type": "class",
      "name": "ListFiltersTests.test_relatedfieldlistfilter_foreignkey_ordering_reverse.BookAdmin",
      "file": "tests/admin_filters/tests.py",
      "line": 580
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_manytomany",
      "type": "function",
      "name": "ListFiltersTests.test_relatedfieldlistfilter_manytomany",
      "file": "tests/admin_filters/tests.py",
      "line": 594
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_reverse_relationships",
      "type": "function",
      "name": "ListFiltersTests.test_relatedfieldlistfilter_reverse_relationships",
      "file": "tests/admin_filters/tests.py",
      "line": 632
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedonlyfieldlistfilter_foreignkey",
      "type": "function",
      "name": "ListFiltersTests.test_relatedonlyfieldlistfilter_foreignkey",
      "file": "tests/admin_filters/tests.py",
      "line": 699
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedonlyfieldlistfilter_underscorelookup_foreignkey",
      "type": "function",
      "name": "ListFiltersTests.test_relatedonlyfieldlistfilter_underscorelookup_foreignkey",
      "file": "tests/admin_filters/tests.py",
      "line": 711
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedonlyfieldlistfilter_manytomany",
      "type": "function",
      "name": "ListFiltersTests.test_relatedonlyfieldlistfilter_manytomany",
      "file": "tests/admin_filters/tests.py",
      "line": 732
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_listfilter_genericrelation",
      "type": "function",
      "name": "ListFiltersTests.test_listfilter_genericrelation",
      "file": "tests/admin_filters/tests.py",
      "line": 744
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_booleanfieldlistfilter",
      "type": "function",
      "name": "ListFiltersTests.test_booleanfieldlistfilter",
      "file": "tests/admin_filters/tests.py",
      "line": 763
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_booleanfieldlistfilter_tuple",
      "type": "function",
      "name": "ListFiltersTests.test_booleanfieldlistfilter_tuple",
      "file": "tests/admin_filters/tests.py",
      "line": 767
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.verify_booleanfieldlistfilter",
      "type": "function",
      "name": "ListFiltersTests.verify_booleanfieldlistfilter",
      "file": "tests/admin_filters/tests.py",
      "line": 771
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_booleanfieldlistfilter_nullbooleanfield",
      "type": "function",
      "name": "ListFiltersTests.test_booleanfieldlistfilter_nullbooleanfield",
      "file": "tests/admin_filters/tests.py",
      "line": 821
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_fieldlistfilter_underscorelookup_tuple",
      "type": "function",
      "name": "ListFiltersTests.test_fieldlistfilter_underscorelookup_tuple",
      "file": "tests/admin_filters/tests.py",
      "line": 873
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_fieldlistfilter_invalid_lookup_parameters",
      "type": "function",
      "name": "ListFiltersTests.test_fieldlistfilter_invalid_lookup_parameters",
      "file": "tests/admin_filters/tests.py",
      "line": 891
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_simplelistfilter",
      "type": "function",
      "name": "ListFiltersTests.test_simplelistfilter",
      "file": "tests/admin_filters/tests.py",
      "line": 899
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_listfilter_without_title",
      "type": "function",
      "name": "ListFiltersTests.test_listfilter_without_title",
      "file": "tests/admin_filters/tests.py",
      "line": 996
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_simplelistfilter_without_parameter",
      "type": "function",
      "name": "ListFiltersTests.test_simplelistfilter_without_parameter",
      "file": "tests/admin_filters/tests.py",
      "line": 1007
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_simplelistfilter_with_none_returning_lookups",
      "type": "function",
      "name": "ListFiltersTests.test_simplelistfilter_with_none_returning_lookups",
      "file": "tests/admin_filters/tests.py",
      "line": 1018
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_filter_with_failing_queryset",
      "type": "function",
      "name": "ListFiltersTests.test_filter_with_failing_queryset",
      "file": "tests/admin_filters/tests.py",
      "line": 1030
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_simplelistfilter_with_queryset_based_lookups",
      "type": "function",
      "name": "ListFiltersTests.test_simplelistfilter_with_queryset_based_lookups",
      "file": "tests/admin_filters/tests.py",
      "line": 1041
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_two_characters_long_field",
      "type": "function",
      "name": "ListFiltersTests.test_two_characters_long_field",
      "file": "tests/admin_filters/tests.py",
      "line": 1064
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_parameter_ends_with__in__or__isnull",
      "type": "function",
      "name": "ListFiltersTests.test_parameter_ends_with__in__or__isnull",
      "file": "tests/admin_filters/tests.py",
      "line": 1083
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_lookup_with_non_string_value",
      "type": "function",
      "name": "ListFiltersTests.test_lookup_with_non_string_value",
      "file": "tests/admin_filters/tests.py",
      "line": 1124
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_lookup_with_non_string_value_underscored",
      "type": "function",
      "name": "ListFiltersTests.test_lookup_with_non_string_value_underscored",
      "file": "tests/admin_filters/tests.py",
      "line": 1145
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_fk_with_to_field",
      "type": "function",
      "name": "ListFiltersTests.test_fk_with_to_field",
      "file": "tests/admin_filters/tests.py",
      "line": 1166
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_lookup_with_dynamic_value",
      "type": "function",
      "name": "ListFiltersTests.test_lookup_with_dynamic_value",
      "file": "tests/admin_filters/tests.py",
      "line": 1222
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_lookup_with_dynamic_value._test_choices",
      "type": "function",
      "name": "ListFiltersTests.test_lookup_with_dynamic_value._test_choices",
      "file": "tests/admin_filters/tests.py",
      "line": 1228
    },
    {
      "id": "tests/admin_filters/tests.py:ListFiltersTests.test_list_filter_queryset_filtered_by_default",
      "type": "function",
      "name": "ListFiltersTests.test_list_filter_queryset_filtered_by_default",
      "file": "tests/admin_filters/tests.py",
      "line": 1245
    },
    {
      "id": "tests/raw_query",
      "type": "directory",
      "name": "raw_query",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/raw_query/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/raw_query/models.py",
      "line": 0
    },
    {
      "id": "tests/raw_query/models.py:Author",
      "type": "class",
      "name": "Author",
      "file": "tests/raw_query/models.py",
      "line": 4
    },
    {
      "id": "tests/raw_query/models.py:Book",
      "type": "class",
      "name": "Book",
      "file": "tests/raw_query/models.py",
      "line": 19
    },
    {
      "id": "tests/raw_query/models.py:BookFkAsPk",
      "type": "class",
      "name": "BookFkAsPk",
      "file": "tests/raw_query/models.py",
      "line": 26
    },
    {
      "id": "tests/raw_query/models.py:Coffee",
      "type": "class",
      "name": "Coffee",
      "file": "tests/raw_query/models.py",
      "line": 30
    },
    {
      "id": "tests/raw_query/models.py:MixedCaseIDColumn",
      "type": "class",
      "name": "MixedCaseIDColumn",
      "file": "tests/raw_query/models.py",
      "line": 35
    },
    {
      "id": "tests/raw_query/models.py:Reviewer",
      "type": "class",
      "name": "Reviewer",
      "file": "tests/raw_query/models.py",
      "line": 39
    },
    {
      "id": "tests/raw_query/models.py:FriendlyAuthor",
      "type": "class",
      "name": "FriendlyAuthor",
      "file": "tests/raw_query/models.py",
      "line": 43
    },
    {
      "id": "tests/raw_query/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/raw_query/__init__.py",
      "line": 0
    },
    {
      "id": "tests/raw_query/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/raw_query/tests.py",
      "line": 0
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests",
      "type": "class",
      "name": "RawQueryTests",
      "file": "tests/raw_query/tests.py",
      "line": 14
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.setUpTestData",
      "type": "function",
      "name": "RawQueryTests.setUpTestData",
      "file": "tests/raw_query/tests.py",
      "line": 17
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.assertSuccessfulRawQuery",
      "type": "function",
      "name": "RawQueryTests.assertSuccessfulRawQuery",
      "file": "tests/raw_query/tests.py",
      "line": 48
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.assertProcessed",
      "type": "function",
      "name": "RawQueryTests.assertProcessed",
      "file": "tests/raw_query/tests.py",
      "line": 57
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.assertNoAnnotations",
      "type": "function",
      "name": "RawQueryTests.assertNoAnnotations",
      "file": "tests/raw_query/tests.py",
      "line": 79
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.assertAnnotations",
      "type": "function",
      "name": "RawQueryTests.assertAnnotations",
      "file": "tests/raw_query/tests.py",
      "line": 85
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.test_rawqueryset_repr",
      "type": "function",
      "name": "RawQueryTests.test_rawqueryset_repr",
      "file": "tests/raw_query/tests.py",
      "line": 95
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.test_simple_raw_query",
      "type": "function",
      "name": "RawQueryTests.test_simple_raw_query",
      "file": "tests/raw_query/tests.py",
      "line": 100
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.test_raw_query_lazy",
      "type": "function",
      "name": "RawQueryTests.test_raw_query_lazy",
      "file": "tests/raw_query/tests.py",
      "line": 108
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.test_FK_raw_query",
      "type": "function",
      "name": "RawQueryTests.test_FK_raw_query",
      "file": "tests/raw_query/tests.py",
      "line": 118
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.test_db_column_handler",
      "type": "function",
      "name": "RawQueryTests.test_db_column_handler",
      "file": "tests/raw_query/tests.py",
      "line": 126
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.test_pk_with_mixed_case_db_column",
      "type": "function",
      "name": "RawQueryTests.test_pk_with_mixed_case_db_column",
      "file": "tests/raw_query/tests.py",
      "line": 135
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.test_order_handler",
      "type": "function",
      "name": "RawQueryTests.test_order_handler",
      "file": "tests/raw_query/tests.py",
      "line": 143
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.test_translations",
      "type": "function",
      "name": "RawQueryTests.test_translations",
      "file": "tests/raw_query/tests.py",
      "line": 159
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.test_params",
      "type": "function",
      "name": "RawQueryTests.test_params",
      "file": "tests/raw_query/tests.py",
      "line": 169
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.test_pyformat_params",
      "type": "function",
      "name": "RawQueryTests.test_pyformat_params",
      "file": "tests/raw_query/tests.py",
      "line": 184
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.test_query_representation",
      "type": "function",
      "name": "RawQueryTests.test_query_representation",
      "file": "tests/raw_query/tests.py",
      "line": 198
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.test_many_to_many",
      "type": "function",
      "name": "RawQueryTests.test_many_to_many",
      "file": "tests/raw_query/tests.py",
      "line": 212
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.test_extra_conversions",
      "type": "function",
      "name": "RawQueryTests.test_extra_conversions",
      "file": "tests/raw_query/tests.py",
      "line": 220
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.test_missing_fields",
      "type": "function",
      "name": "RawQueryTests.test_missing_fields",
      "file": "tests/raw_query/tests.py",
      "line": 229
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.test_missing_fields_without_PK",
      "type": "function",
      "name": "RawQueryTests.test_missing_fields_without_PK",
      "file": "tests/raw_query/tests.py",
      "line": 236
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.test_annotations",
      "type": "function",
      "name": "RawQueryTests.test_annotations",
      "file": "tests/raw_query/tests.py",
      "line": 241
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.test_white_space_query",
      "type": "function",
      "name": "RawQueryTests.test_white_space_query",
      "file": "tests/raw_query/tests.py",
      "line": 257
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.test_multiple_iterations",
      "type": "function",
      "name": "RawQueryTests.test_multiple_iterations",
      "file": "tests/raw_query/tests.py",
      "line": 262
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.test_get_item",
      "type": "function",
      "name": "RawQueryTests.test_get_item",
      "file": "tests/raw_query/tests.py",
      "line": 281
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.test_inheritance",
      "type": "function",
      "name": "RawQueryTests.test_inheritance",
      "file": "tests/raw_query/tests.py",
      "line": 293
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.test_query_count",
      "type": "function",
      "name": "RawQueryTests.test_query_count",
      "file": "tests/raw_query/tests.py",
      "line": 300
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.test_subquery_in_raw_sql",
      "type": "function",
      "name": "RawQueryTests.test_subquery_in_raw_sql",
      "file": "tests/raw_query/tests.py",
      "line": 303
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.test_db_column_name_is_used_in_raw_query",
      "type": "function",
      "name": "RawQueryTests.test_db_column_name_is_used_in_raw_query",
      "file": "tests/raw_query/tests.py",
      "line": 306
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.test_decimal_parameter",
      "type": "function",
      "name": "RawQueryTests.test_decimal_parameter",
      "file": "tests/raw_query/tests.py",
      "line": 317
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.test_result_caching",
      "type": "function",
      "name": "RawQueryTests.test_result_caching",
      "file": "tests/raw_query/tests.py",
      "line": 322
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.test_iterator",
      "type": "function",
      "name": "RawQueryTests.test_iterator",
      "file": "tests/raw_query/tests.py",
      "line": 328
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.test_bool",
      "type": "function",
      "name": "RawQueryTests.test_bool",
      "file": "tests/raw_query/tests.py",
      "line": 334
    },
    {
      "id": "tests/raw_query/tests.py:RawQueryTests.test_len",
      "type": "function",
      "name": "RawQueryTests.test_len",
      "file": "tests/raw_query/tests.py",
      "line": 338
    },
    {
      "id": "tests/model_regress",
      "type": "directory",
      "name": "model_regress",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/model_regress/models.py",
      "type": "file",
      "name": "models.py",
      "file": "tests/model_regress/models.py",
      "line": 0
    },
    {
      "id": "tests/model_regress/models.py:Article",
      "type": "class",
      "name": "Article",
      "file": "tests/model_regress/models.py",
      "line": 9
    },
    {
      "id": "tests/model_regress/models.py:Article.Meta",
      "type": "class",
      "name": "Article.Meta",
      "file": "tests/model_regress/models.py",
      "line": 16
    },
    {
      "id": "tests/model_regress/models.py:Article.__str__",
      "type": "function",
      "name": "Article.__str__",
      "file": "tests/model_regress/models.py",
      "line": 21
    },
    {
      "id": "tests/model_regress/models.py:Movie",
      "type": "class",
      "name": "Movie",
      "file": "tests/model_regress/models.py",
      "line": 25
    },
    {
      "id": "tests/model_regress/models.py:Party",
      "type": "class",
      "name": "Party",
      "file": "tests/model_regress/models.py",
      "line": 31
    },
    {
      "id": "tests/model_regress/models.py:Event",
      "type": "class",
      "name": "Event",
      "file": "tests/model_regress/models.py",
      "line": 35
    },
    {
      "id": "tests/model_regress/models.py:Department",
      "type": "class",
      "name": "Department",
      "file": "tests/model_regress/models.py",
      "line": 39
    },
    {
      "id": "tests/model_regress/models.py:Department.__str__",
      "type": "function",
      "name": "Department.__str__",
      "file": "tests/model_regress/models.py",
      "line": 43
    },
    {
      "id": "tests/model_regress/models.py:Worker",
      "type": "class",
      "name": "Worker",
      "file": "tests/model_regress/models.py",
      "line": 47
    },
    {
      "id": "tests/model_regress/models.py:Worker.__str__",
      "type": "function",
      "name": "Worker.__str__",
      "file": "tests/model_regress/models.py",
      "line": 51
    },
    {
      "id": "tests/model_regress/models.py:NonAutoPK",
      "type": "class",
      "name": "NonAutoPK",
      "file": "tests/model_regress/models.py",
      "line": 55
    },
    {
      "id": "tests/model_regress/models.py:Model1",
      "type": "class",
      "name": "Model1",
      "file": "tests/model_regress/models.py",
      "line": 60
    },
    {
      "id": "tests/model_regress/models.py:Model2",
      "type": "class",
      "name": "Model2",
      "file": "tests/model_regress/models.py",
      "line": 64
    },
    {
      "id": "tests/model_regress/models.py:Model3",
      "type": "class",
      "name": "Model3",
      "file": "tests/model_regress/models.py",
      "line": 68
    },
    {
      "id": "tests/model_regress/test_pickle.py",
      "type": "file",
      "name": "test_pickle.py",
      "file": "tests/model_regress/test_pickle.py",
      "line": 0
    },
    {
      "id": "tests/model_regress/test_pickle.py:ModelPickleTests",
      "type": "class",
      "name": "ModelPickleTests",
      "file": "tests/model_regress/test_pickle.py",
      "line": 8
    },
    {
      "id": "tests/model_regress/test_pickle.py:ModelPickleTests.test_missing_django_version_unpickling",
      "type": "function",
      "name": "ModelPickleTests.test_missing_django_version_unpickling",
      "file": "tests/model_regress/test_pickle.py",
      "line": 9
    },
    {
      "id": "tests/model_regress/test_pickle.py:ModelPickleTests.test_missing_django_version_unpickling.MissingDjangoVersion",
      "type": "class",
      "name": "ModelPickleTests.test_missing_django_version_unpickling.MissingDjangoVersion",
      "file": "tests/model_regress/test_pickle.py",
      "line": 14
    },
    {
      "id": "tests/model_regress/test_pickle.py:ModelPickleTests.test_missing_django_version_unpickling.MissingDjangoVersion.__reduce__",
      "type": "function",
      "name": "ModelPickleTests.test_missing_django_version_unpickling.MissingDjangoVersion.__reduce__",
      "file": "tests/model_regress/test_pickle.py",
      "line": 17
    },
    {
      "id": "tests/model_regress/test_pickle.py:ModelPickleTests.test_unsupported_unpickle",
      "type": "function",
      "name": "ModelPickleTests.test_unsupported_unpickle",
      "file": "tests/model_regress/test_pickle.py",
      "line": 28
    },
    {
      "id": "tests/model_regress/test_pickle.py:ModelPickleTests.test_unsupported_unpickle.DifferentDjangoVersion",
      "type": "class",
      "name": "ModelPickleTests.test_unsupported_unpickle.DifferentDjangoVersion",
      "file": "tests/model_regress/test_pickle.py",
      "line": 33
    },
    {
      "id": "tests/model_regress/test_pickle.py:ModelPickleTests.test_unsupported_unpickle.DifferentDjangoVersion.__reduce__",
      "type": "function",
      "name": "ModelPickleTests.test_unsupported_unpickle.DifferentDjangoVersion.__reduce__",
      "file": "tests/model_regress/test_pickle.py",
      "line": 36
    },
    {
      "id": "tests/model_regress/test_pickle.py:ModelPickleTests.test_with_getstate",
      "type": "function",
      "name": "ModelPickleTests.test_with_getstate",
      "file": "tests/model_regress/test_pickle.py",
      "line": 47
    },
    {
      "id": "tests/model_regress/test_pickle.py:ModelPickleTests.test_with_getstate.PickledModel",
      "type": "class",
      "name": "ModelPickleTests.test_with_getstate.PickledModel",
      "file": "tests/model_regress/test_pickle.py",
      "line": 51
    },
    {
      "id": "tests/model_regress/test_pickle.py:ModelPickleTests.test_with_getstate.PickledModel.__getstate__",
      "type": "function",
      "name": "ModelPickleTests.test_with_getstate.PickledModel.__getstate__",
      "file": "tests/model_regress/test_pickle.py",
      "line": 52
    },
    {
      "id": "tests/model_regress/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/model_regress/__init__.py",
      "line": 0
    },
    {
      "id": "tests/model_regress/test_state.py",
      "type": "file",
      "name": "test_state.py",
      "file": "tests/model_regress/test_state.py",
      "line": 0
    },
    {
      "id": "tests/model_regress/test_state.py:ModelStateTests",
      "type": "class",
      "name": "ModelStateTests",
      "file": "tests/model_regress/test_state.py",
      "line": 5
    },
    {
      "id": "tests/model_regress/test_state.py:ModelStateTests.test_fields_cache_descriptor",
      "type": "function",
      "name": "ModelStateTests.test_fields_cache_descriptor",
      "file": "tests/model_regress/test_state.py",
      "line": 7
    },
    {
      "id": "tests/model_regress/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/model_regress/tests.py",
      "line": 0
    },
    {
      "id": "tests/model_regress/tests.py:ModelTests",
      "type": "class",
      "name": "ModelTests",
      "file": "tests/model_regress/tests.py",
      "line": 16
    },
    {
      "id": "tests/model_regress/tests.py:ModelTests.test_model_init_too_many_args",
      "type": "function",
      "name": "ModelTests.test_model_init_too_many_args",
      "file": "tests/model_regress/tests.py",
      "line": 17
    },
    {
      "id": "tests/model_regress/tests.py:ModelTests.test_related_gte_lookup",
      "type": "function",
      "name": "ModelTests.test_related_gte_lookup",
      "file": "tests/model_regress/tests.py",
      "line": 24
    },
    {
      "id": "tests/model_regress/tests.py:ModelTests.test_related_lte_lookup",
      "type": "function",
      "name": "ModelTests.test_related_lte_lookup",
      "file": "tests/model_regress/tests.py",
      "line": 30
    },
    {
      "id": "tests/model_regress/tests.py:ModelTests.test_sql_insert_compiler_return_id_attribute",
      "type": "function",
      "name": "ModelTests.test_sql_insert_compiler_return_id_attribute",
      "file": "tests/model_regress/tests.py",
      "line": 36
    },
    {
      "id": "tests/model_regress/tests.py:ModelTests.test_empty_choice",
      "type": "function",
      "name": "ModelTests.test_empty_choice",
      "file": "tests/model_regress/tests.py",
      "line": 46
    },
    {
      "id": "tests/model_regress/tests.py:ModelTests.test_long_textfield",
      "type": "function",
      "name": "ModelTests.test_long_textfield",
      "file": "tests/model_regress/tests.py",
      "line": 59
    },
    {
      "id": "tests/model_regress/tests.py:ModelTests.test_long_unicode_textfield",
      "type": "function",
      "name": "ModelTests.test_long_unicode_textfield",
      "file": "tests/model_regress/tests.py",
      "line": 70
    },
    {
      "id": "tests/model_regress/tests.py:ModelTests.test_date_lookup",
      "type": "function",
      "name": "ModelTests.test_date_lookup",
      "file": "tests/model_regress/tests.py",
      "line": 81
    },
    {
      "id": "tests/model_regress/tests.py:ModelTests.test_date_filter_null",
      "type": "function",
      "name": "ModelTests.test_date_filter_null",
      "file": "tests/model_regress/tests.py",
      "line": 148
    },
    {
      "id": "tests/model_regress/tests.py:ModelTests.test_get_next_prev_by_field",
      "type": "function",
      "name": "ModelTests.test_get_next_prev_by_field",
      "file": "tests/model_regress/tests.py",
      "line": 162
    },
    {
      "id": "tests/model_regress/tests.py:ModelTests.test_get_next_prev_by_field_unsaved",
      "type": "function",
      "name": "ModelTests.test_get_next_prev_by_field_unsaved",
      "file": "tests/model_regress/tests.py",
      "line": 176
    },
    {
      "id": "tests/model_regress/tests.py:ModelTests.test_primary_key_foreign_key_types",
      "type": "function",
      "name": "ModelTests.test_primary_key_foreign_key_types",
      "file": "tests/model_regress/tests.py",
      "line": 183
    },
    {
      "id": "tests/model_regress/tests.py:ModelTests.test_timezones",
      "type": "function",
      "name": "ModelTests.test_timezones",
      "file": "tests/model_regress/tests.py",
      "line": 190
    },
    {
      "id": "tests/model_regress/tests.py:ModelTests.test_chained_fks",
      "type": "function",
      "name": "ModelTests.test_chained_fks",
      "file": "tests/model_regress/tests.py",
      "line": 207
    },
    {
      "id": "tests/model_regress/tests.py:ModelValidationTest",
      "type": "class",
      "name": "ModelValidationTest",
      "file": "tests/model_regress/tests.py",
      "line": 221
    },
    {
      "id": "tests/model_regress/tests.py:ModelValidationTest.test_pk_validation",
      "type": "function",
      "name": "ModelValidationTest.test_pk_validation",
      "file": "tests/model_regress/tests.py",
      "line": 222
    },
    {
      "id": "tests/model_regress/tests.py:EvaluateMethodTest",
      "type": "class",
      "name": "EvaluateMethodTest",
      "file": "tests/model_regress/tests.py",
      "line": 229
    },
    {
      "id": "tests/model_regress/tests.py:EvaluateMethodTest.test_model_with_evaluate_method",
      "type": "function",
      "name": "EvaluateMethodTest.test_model_with_evaluate_method",
      "file": "tests/model_regress/tests.py",
      "line": 234
    },
    {
      "id": "tests/template_tests",
      "type": "directory",
      "name": "template_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/template_tests/test_parser.py",
      "type": "file",
      "name": "test_parser.py",
      "file": "tests/template_tests/test_parser.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/test_parser.py:ParserTests",
      "type": "class",
      "name": "ParserTests",
      "file": "tests/template_tests/test_parser.py",
      "line": 12
    },
    {
      "id": "tests/template_tests/test_parser.py:ParserTests.test_token_smart_split",
      "type": "function",
      "name": "ParserTests.test_token_smart_split",
      "file": "tests/template_tests/test_parser.py",
      "line": 14
    },
    {
      "id": "tests/template_tests/test_parser.py:ParserTests.test_filter_parsing",
      "type": "function",
      "name": "ParserTests.test_filter_parsing",
      "file": "tests/template_tests/test_parser.py",
      "line": 22
    },
    {
      "id": "tests/template_tests/test_parser.py:ParserTests.test_filter_parsing.fe_test",
      "type": "function",
      "name": "ParserTests.test_filter_parsing.fe_test",
      "file": "tests/template_tests/test_parser.py",
      "line": 26
    },
    {
      "id": "tests/template_tests/test_parser.py:ParserTests.test_variable_parsing",
      "type": "function",
      "name": "ParserTests.test_variable_parsing",
      "file": "tests/template_tests/test_parser.py",
      "line": 47
    },
    {
      "id": "tests/template_tests/test_parser.py:ParserTests.test_filter_args_count",
      "type": "function",
      "name": "ParserTests.test_filter_args_count",
      "file": "tests/template_tests/test_parser.py",
      "line": 76
    },
    {
      "id": "tests/template_tests/test_parser.py:ParserTests.test_filter_args_count.no_arguments",
      "type": "function",
      "name": "ParserTests.test_filter_args_count.no_arguments",
      "file": "tests/template_tests/test_parser.py",
      "line": 81
    },
    {
      "id": "tests/template_tests/test_parser.py:ParserTests.test_filter_args_count.one_argument",
      "type": "function",
      "name": "ParserTests.test_filter_args_count.one_argument",
      "file": "tests/template_tests/test_parser.py",
      "line": 85
    },
    {
      "id": "tests/template_tests/test_parser.py:ParserTests.test_filter_args_count.one_opt_argument",
      "type": "function",
      "name": "ParserTests.test_filter_args_count.one_opt_argument",
      "file": "tests/template_tests/test_parser.py",
      "line": 89
    },
    {
      "id": "tests/template_tests/test_parser.py:ParserTests.test_filter_args_count.two_arguments",
      "type": "function",
      "name": "ParserTests.test_filter_args_count.two_arguments",
      "file": "tests/template_tests/test_parser.py",
      "line": 93
    },
    {
      "id": "tests/template_tests/test_parser.py:ParserTests.test_filter_args_count.two_one_opt_arg",
      "type": "function",
      "name": "ParserTests.test_filter_args_count.two_one_opt_arg",
      "file": "tests/template_tests/test_parser.py",
      "line": 97
    },
    {
      "id": "tests/template_tests/test_library.py",
      "type": "file",
      "name": "test_library.py",
      "file": "tests/template_tests/test_library.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/test_library.py:FilterRegistrationTests",
      "type": "class",
      "name": "FilterRegistrationTests",
      "file": "tests/template_tests/test_library.py",
      "line": 6
    },
    {
      "id": "tests/template_tests/test_library.py:FilterRegistrationTests.setUp",
      "type": "function",
      "name": "FilterRegistrationTests.setUp",
      "file": "tests/template_tests/test_library.py",
      "line": 8
    },
    {
      "id": "tests/template_tests/test_library.py:FilterRegistrationTests.test_filter",
      "type": "function",
      "name": "FilterRegistrationTests.test_filter",
      "file": "tests/template_tests/test_library.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/test_library.py:FilterRegistrationTests.test_filter.func",
      "type": "function",
      "name": "FilterRegistrationTests.test_filter.func",
      "file": "tests/template_tests/test_library.py",
      "line": 13
    },
    {
      "id": "tests/template_tests/test_library.py:FilterRegistrationTests.test_filter_parens",
      "type": "function",
      "name": "FilterRegistrationTests.test_filter_parens",
      "file": "tests/template_tests/test_library.py",
      "line": 17
    },
    {
      "id": "tests/template_tests/test_library.py:FilterRegistrationTests.test_filter_parens.func",
      "type": "function",
      "name": "FilterRegistrationTests.test_filter_parens.func",
      "file": "tests/template_tests/test_library.py",
      "line": 19
    },
    {
      "id": "tests/template_tests/test_library.py:FilterRegistrationTests.test_filter_name_arg",
      "type": "function",
      "name": "FilterRegistrationTests.test_filter_name_arg",
      "file": "tests/template_tests/test_library.py",
      "line": 23
    },
    {
      "id": "tests/template_tests/test_library.py:FilterRegistrationTests.test_filter_name_arg.func",
      "type": "function",
      "name": "FilterRegistrationTests.test_filter_name_arg.func",
      "file": "tests/template_tests/test_library.py",
      "line": 25
    },
    {
      "id": "tests/template_tests/test_library.py:FilterRegistrationTests.test_filter_name_kwarg",
      "type": "function",
      "name": "FilterRegistrationTests.test_filter_name_kwarg",
      "file": "tests/template_tests/test_library.py",
      "line": 29
    },
    {
      "id": "tests/template_tests/test_library.py:FilterRegistrationTests.test_filter_name_kwarg.func",
      "type": "function",
      "name": "FilterRegistrationTests.test_filter_name_kwarg.func",
      "file": "tests/template_tests/test_library.py",
      "line": 31
    },
    {
      "id": "tests/template_tests/test_library.py:FilterRegistrationTests.test_filter_call",
      "type": "function",
      "name": "FilterRegistrationTests.test_filter_call",
      "file": "tests/template_tests/test_library.py",
      "line": 35
    },
    {
      "id": "tests/template_tests/test_library.py:FilterRegistrationTests.test_filter_call.func",
      "type": "function",
      "name": "FilterRegistrationTests.test_filter_call.func",
      "file": "tests/template_tests/test_library.py",
      "line": 36
    },
    {
      "id": "tests/template_tests/test_library.py:FilterRegistrationTests.test_filter_invalid",
      "type": "function",
      "name": "FilterRegistrationTests.test_filter_invalid",
      "file": "tests/template_tests/test_library.py",
      "line": 41
    },
    {
      "id": "tests/template_tests/test_library.py:InclusionTagRegistrationTests",
      "type": "class",
      "name": "InclusionTagRegistrationTests",
      "file": "tests/template_tests/test_library.py",
      "line": 47
    },
    {
      "id": "tests/template_tests/test_library.py:InclusionTagRegistrationTests.setUp",
      "type": "function",
      "name": "InclusionTagRegistrationTests.setUp",
      "file": "tests/template_tests/test_library.py",
      "line": 49
    },
    {
      "id": "tests/template_tests/test_library.py:InclusionTagRegistrationTests.test_inclusion_tag",
      "type": "function",
      "name": "InclusionTagRegistrationTests.test_inclusion_tag",
      "file": "tests/template_tests/test_library.py",
      "line": 52
    },
    {
      "id": "tests/template_tests/test_library.py:InclusionTagRegistrationTests.test_inclusion_tag.func",
      "type": "function",
      "name": "InclusionTagRegistrationTests.test_inclusion_tag.func",
      "file": "tests/template_tests/test_library.py",
      "line": 54
    },
    {
      "id": "tests/template_tests/test_library.py:InclusionTagRegistrationTests.test_inclusion_tag_name",
      "type": "function",
      "name": "InclusionTagRegistrationTests.test_inclusion_tag_name",
      "file": "tests/template_tests/test_library.py",
      "line": 58
    },
    {
      "id": "tests/template_tests/test_library.py:InclusionTagRegistrationTests.test_inclusion_tag_name.func",
      "type": "function",
      "name": "InclusionTagRegistrationTests.test_inclusion_tag_name.func",
      "file": "tests/template_tests/test_library.py",
      "line": 60
    },
    {
      "id": "tests/template_tests/test_library.py:SimpleTagRegistrationTests",
      "type": "class",
      "name": "SimpleTagRegistrationTests",
      "file": "tests/template_tests/test_library.py",
      "line": 65
    },
    {
      "id": "tests/template_tests/test_library.py:SimpleTagRegistrationTests.setUp",
      "type": "function",
      "name": "SimpleTagRegistrationTests.setUp",
      "file": "tests/template_tests/test_library.py",
      "line": 67
    },
    {
      "id": "tests/template_tests/test_library.py:SimpleTagRegistrationTests.test_simple_tag",
      "type": "function",
      "name": "SimpleTagRegistrationTests.test_simple_tag",
      "file": "tests/template_tests/test_library.py",
      "line": 70
    },
    {
      "id": "tests/template_tests/test_library.py:SimpleTagRegistrationTests.test_simple_tag.func",
      "type": "function",
      "name": "SimpleTagRegistrationTests.test_simple_tag.func",
      "file": "tests/template_tests/test_library.py",
      "line": 72
    },
    {
      "id": "tests/template_tests/test_library.py:SimpleTagRegistrationTests.test_simple_tag_parens",
      "type": "function",
      "name": "SimpleTagRegistrationTests.test_simple_tag_parens",
      "file": "tests/template_tests/test_library.py",
      "line": 76
    },
    {
      "id": "tests/template_tests/test_library.py:SimpleTagRegistrationTests.test_simple_tag_parens.func",
      "type": "function",
      "name": "SimpleTagRegistrationTests.test_simple_tag_parens.func",
      "file": "tests/template_tests/test_library.py",
      "line": 78
    },
    {
      "id": "tests/template_tests/test_library.py:SimpleTagRegistrationTests.test_simple_tag_name_kwarg",
      "type": "function",
      "name": "SimpleTagRegistrationTests.test_simple_tag_name_kwarg",
      "file": "tests/template_tests/test_library.py",
      "line": 82
    },
    {
      "id": "tests/template_tests/test_library.py:SimpleTagRegistrationTests.test_simple_tag_name_kwarg.func",
      "type": "function",
      "name": "SimpleTagRegistrationTests.test_simple_tag_name_kwarg.func",
      "file": "tests/template_tests/test_library.py",
      "line": 84
    },
    {
      "id": "tests/template_tests/test_library.py:SimpleTagRegistrationTests.test_simple_tag_invalid",
      "type": "function",
      "name": "SimpleTagRegistrationTests.test_simple_tag_invalid",
      "file": "tests/template_tests/test_library.py",
      "line": 88
    },
    {
      "id": "tests/template_tests/test_library.py:TagRegistrationTests",
      "type": "class",
      "name": "TagRegistrationTests",
      "file": "tests/template_tests/test_library.py",
      "line": 94
    },
    {
      "id": "tests/template_tests/test_library.py:TagRegistrationTests.setUp",
      "type": "function",
      "name": "TagRegistrationTests.setUp",
      "file": "tests/template_tests/test_library.py",
      "line": 96
    },
    {
      "id": "tests/template_tests/test_library.py:TagRegistrationTests.test_tag",
      "type": "function",
      "name": "TagRegistrationTests.test_tag",
      "file": "tests/template_tests/test_library.py",
      "line": 99
    },
    {
      "id": "tests/template_tests/test_library.py:TagRegistrationTests.test_tag.func",
      "type": "function",
      "name": "TagRegistrationTests.test_tag.func",
      "file": "tests/template_tests/test_library.py",
      "line": 101
    },
    {
      "id": "tests/template_tests/test_library.py:TagRegistrationTests.test_tag_parens",
      "type": "function",
      "name": "TagRegistrationTests.test_tag_parens",
      "file": "tests/template_tests/test_library.py",
      "line": 105
    },
    {
      "id": "tests/template_tests/test_library.py:TagRegistrationTests.test_tag_parens.func",
      "type": "function",
      "name": "TagRegistrationTests.test_tag_parens.func",
      "file": "tests/template_tests/test_library.py",
      "line": 107
    },
    {
      "id": "tests/template_tests/test_library.py:TagRegistrationTests.test_tag_name_arg",
      "type": "function",
      "name": "TagRegistrationTests.test_tag_name_arg",
      "file": "tests/template_tests/test_library.py",
      "line": 111
    },
    {
      "id": "tests/template_tests/test_library.py:TagRegistrationTests.test_tag_name_arg.func",
      "type": "function",
      "name": "TagRegistrationTests.test_tag_name_arg.func",
      "file": "tests/template_tests/test_library.py",
      "line": 113
    },
    {
      "id": "tests/template_tests/test_library.py:TagRegistrationTests.test_tag_name_kwarg",
      "type": "function",
      "name": "TagRegistrationTests.test_tag_name_kwarg",
      "file": "tests/template_tests/test_library.py",
      "line": 117
    },
    {
      "id": "tests/template_tests/test_library.py:TagRegistrationTests.test_tag_name_kwarg.func",
      "type": "function",
      "name": "TagRegistrationTests.test_tag_name_kwarg.func",
      "file": "tests/template_tests/test_library.py",
      "line": 119
    },
    {
      "id": "tests/template_tests/test_library.py:TagRegistrationTests.test_tag_call",
      "type": "function",
      "name": "TagRegistrationTests.test_tag_call",
      "file": "tests/template_tests/test_library.py",
      "line": 123
    },
    {
      "id": "tests/template_tests/test_library.py:TagRegistrationTests.test_tag_call.func",
      "type": "function",
      "name": "TagRegistrationTests.test_tag_call.func",
      "file": "tests/template_tests/test_library.py",
      "line": 124
    },
    {
      "id": "tests/template_tests/test_library.py:TagRegistrationTests.test_tag_invalid",
      "type": "function",
      "name": "TagRegistrationTests.test_tag_invalid",
      "file": "tests/template_tests/test_library.py",
      "line": 129
    },
    {
      "id": "tests/template_tests/test_extends.py",
      "type": "file",
      "name": "test_extends.py",
      "file": "tests/template_tests/test_extends.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/test_extends.py:ExtendsBehaviorTests",
      "type": "class",
      "name": "ExtendsBehaviorTests",
      "file": "tests/template_tests/test_extends.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/test_extends.py:ExtendsBehaviorTests.test_normal_extend",
      "type": "function",
      "name": "ExtendsBehaviorTests.test_normal_extend",
      "file": "tests/template_tests/test_extends.py",
      "line": 13
    },
    {
      "id": "tests/template_tests/test_extends.py:ExtendsBehaviorTests.test_extend_recursive",
      "type": "function",
      "name": "ExtendsBehaviorTests.test_extend_recursive",
      "file": "tests/template_tests/test_extends.py",
      "line": 19
    },
    {
      "id": "tests/template_tests/test_extends.py:ExtendsBehaviorTests.test_extend_missing",
      "type": "function",
      "name": "ExtendsBehaviorTests.test_extend_missing",
      "file": "tests/template_tests/test_extends.py",
      "line": 29
    },
    {
      "id": "tests/template_tests/test_extends.py:ExtendsBehaviorTests.test_recursive_multiple_loaders",
      "type": "function",
      "name": "ExtendsBehaviorTests.test_recursive_multiple_loaders",
      "file": "tests/template_tests/test_extends.py",
      "line": 39
    },
    {
      "id": "tests/template_tests/test_extends.py:ExtendsBehaviorTests.test_extend_self_error",
      "type": "function",
      "name": "ExtendsBehaviorTests.test_extend_self_error",
      "file": "tests/template_tests/test_extends.py",
      "line": 60
    },
    {
      "id": "tests/template_tests/test_extends.py:ExtendsBehaviorTests.test_extend_cached",
      "type": "function",
      "name": "ExtendsBehaviorTests.test_extend_cached",
      "file": "tests/template_tests/test_extends.py",
      "line": 70
    },
    {
      "id": "tests/template_tests/test_extends.py:ExtendsBehaviorTests.test_unique_history_per_loader",
      "type": "function",
      "name": "ExtendsBehaviorTests.test_unique_history_per_loader",
      "file": "tests/template_tests/test_extends.py",
      "line": 102
    },
    {
      "id": "tests/template_tests/test_extends.py:ExtendsBehaviorTests.test_block_override_in_extended_included_template",
      "type": "function",
      "name": "ExtendsBehaviorTests.test_block_override_in_extended_included_template",
      "file": "tests/template_tests/test_extends.py",
      "line": 121
    },
    {
      "id": "tests/template_tests/test_engine.py",
      "type": "file",
      "name": "test_engine.py",
      "file": "tests/template_tests/test_engine.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/test_engine.py:RenderToStringTest",
      "type": "class",
      "name": "RenderToStringTest",
      "file": "tests/template_tests/test_engine.py",
      "line": 13
    },
    {
      "id": "tests/template_tests/test_engine.py:RenderToStringTest.setUp",
      "type": "function",
      "name": "RenderToStringTest.setUp",
      "file": "tests/template_tests/test_engine.py",
      "line": 15
    },
    {
      "id": "tests/template_tests/test_engine.py:RenderToStringTest.test_basic_context",
      "type": "function",
      "name": "RenderToStringTest.test_basic_context",
      "file": "tests/template_tests/test_engine.py",
      "line": 18
    },
    {
      "id": "tests/template_tests/test_engine.py:GetDefaultTests",
      "type": "class",
      "name": "GetDefaultTests",
      "file": "tests/template_tests/test_engine.py",
      "line": 25
    },
    {
      "id": "tests/template_tests/test_engine.py:GetDefaultTests.test_no_engines_configured",
      "type": "function",
      "name": "GetDefaultTests.test_no_engines_configured",
      "file": "tests/template_tests/test_engine.py",
      "line": 28
    },
    {
      "id": "tests/template_tests/test_engine.py:GetDefaultTests.test_single_engine_configured",
      "type": "function",
      "name": "GetDefaultTests.test_single_engine_configured",
      "file": "tests/template_tests/test_engine.py",
      "line": 38
    },
    {
      "id": "tests/template_tests/test_engine.py:GetDefaultTests.test_multiple_engines_configured",
      "type": "function",
      "name": "GetDefaultTests.test_multiple_engines_configured",
      "file": "tests/template_tests/test_engine.py",
      "line": 50
    },
    {
      "id": "tests/template_tests/test_engine.py:LoaderTests",
      "type": "class",
      "name": "LoaderTests",
      "file": "tests/template_tests/test_engine.py",
      "line": 54
    },
    {
      "id": "tests/template_tests/test_engine.py:LoaderTests.test_origin",
      "type": "function",
      "name": "LoaderTests.test_origin",
      "file": "tests/template_tests/test_engine.py",
      "line": 56
    },
    {
      "id": "tests/template_tests/test_engine.py:LoaderTests.test_loader_priority",
      "type": "function",
      "name": "LoaderTests.test_loader_priority",
      "file": "tests/template_tests/test_engine.py",
      "line": 61
    },
    {
      "id": "tests/template_tests/test_engine.py:LoaderTests.test_cached_loader_priority",
      "type": "function",
      "name": "LoaderTests.test_cached_loader_priority",
      "file": "tests/template_tests/test_engine.py",
      "line": 73
    },
    {
      "id": "tests/template_tests/test_response.py",
      "type": "file",
      "name": "test_response.py",
      "file": "tests/template_tests/test_response.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/test_response.py:test_processor",
      "type": "function",
      "name": "test_processor",
      "file": "tests/template_tests/test_response.py",
      "line": 18
    },
    {
      "id": "tests/template_tests/test_response.py:CustomURLConfMiddleware",
      "type": "class",
      "name": "CustomURLConfMiddleware",
      "file": "tests/template_tests/test_response.py",
      "line": 26
    },
    {
      "id": "tests/template_tests/test_response.py:CustomURLConfMiddleware.process_request",
      "type": "function",
      "name": "CustomURLConfMiddleware.process_request",
      "file": "tests/template_tests/test_response.py",
      "line": 27
    },
    {
      "id": "tests/template_tests/test_response.py:SimpleTemplateResponseTest",
      "type": "class",
      "name": "SimpleTemplateResponseTest",
      "file": "tests/template_tests/test_response.py",
      "line": 31
    },
    {
      "id": "tests/template_tests/test_response.py:SimpleTemplateResponseTest._response",
      "type": "function",
      "name": "SimpleTemplateResponseTest._response",
      "file": "tests/template_tests/test_response.py",
      "line": 33
    },
    {
      "id": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_template_resolving",
      "type": "function",
      "name": "SimpleTemplateResponseTest.test_template_resolving",
      "file": "tests/template_tests/test_response.py",
      "line": 37
    },
    {
      "id": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_explicit_baking",
      "type": "function",
      "name": "SimpleTemplateResponseTest.test_explicit_baking",
      "file": "tests/template_tests/test_response.py",
      "line": 51
    },
    {
      "id": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_render",
      "type": "function",
      "name": "SimpleTemplateResponseTest.test_render",
      "file": "tests/template_tests/test_response.py",
      "line": 58
    },
    {
      "id": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_iteration_unrendered",
      "type": "function",
      "name": "SimpleTemplateResponseTest.test_iteration_unrendered",
      "file": "tests/template_tests/test_response.py",
      "line": 74
    },
    {
      "id": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_iteration_unrendered.iteration",
      "type": "function",
      "name": "SimpleTemplateResponseTest.test_iteration_unrendered.iteration",
      "file": "tests/template_tests/test_response.py",
      "line": 79
    },
    {
      "id": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_iteration_rendered",
      "type": "function",
      "name": "SimpleTemplateResponseTest.test_iteration_rendered",
      "file": "tests/template_tests/test_response.py",
      "line": 86
    },
    {
      "id": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_content_access_unrendered",
      "type": "function",
      "name": "SimpleTemplateResponseTest.test_content_access_unrendered",
      "file": "tests/template_tests/test_response.py",
      "line": 92
    },
    {
      "id": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_content_access_rendered",
      "type": "function",
      "name": "SimpleTemplateResponseTest.test_content_access_rendered",
      "file": "tests/template_tests/test_response.py",
      "line": 100
    },
    {
      "id": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_set_content",
      "type": "function",
      "name": "SimpleTemplateResponseTest.test_set_content",
      "file": "tests/template_tests/test_response.py",
      "line": 105
    },
    {
      "id": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_dict_context",
      "type": "function",
      "name": "SimpleTemplateResponseTest.test_dict_context",
      "file": "tests/template_tests/test_response.py",
      "line": 115
    },
    {
      "id": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_kwargs",
      "type": "function",
      "name": "SimpleTemplateResponseTest.test_kwargs",
      "file": "tests/template_tests/test_response.py",
      "line": 122
    },
    {
      "id": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_args",
      "type": "function",
      "name": "SimpleTemplateResponseTest.test_args",
      "file": "tests/template_tests/test_response.py",
      "line": 128
    },
    {
      "id": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_using",
      "type": "function",
      "name": "SimpleTemplateResponseTest.test_using",
      "file": "tests/template_tests/test_response.py",
      "line": 134
    },
    {
      "id": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_post_callbacks",
      "type": "function",
      "name": "SimpleTemplateResponseTest.test_post_callbacks",
      "file": "tests/template_tests/test_response.py",
      "line": 142
    },
    {
      "id": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_post_callbacks.post1",
      "type": "function",
      "name": "SimpleTemplateResponseTest.test_post_callbacks.post1",
      "file": "tests/template_tests/test_response.py",
      "line": 146
    },
    {
      "id": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_post_callbacks.post2",
      "type": "function",
      "name": "SimpleTemplateResponseTest.test_post_callbacks.post2",
      "file": "tests/template_tests/test_response.py",
      "line": 149
    },
    {
      "id": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_pickling",
      "type": "function",
      "name": "SimpleTemplateResponseTest.test_pickling",
      "file": "tests/template_tests/test_response.py",
      "line": 161
    },
    {
      "id": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_repickling",
      "type": "function",
      "name": "SimpleTemplateResponseTest.test_repickling",
      "file": "tests/template_tests/test_response.py",
      "line": 191
    },
    {
      "id": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_pickling_cookie",
      "type": "function",
      "name": "SimpleTemplateResponseTest.test_pickling_cookie",
      "file": "tests/template_tests/test_response.py",
      "line": 204
    },
    {
      "id": "tests/template_tests/test_response.py:TemplateResponseTest",
      "type": "class",
      "name": "TemplateResponseTest",
      "file": "tests/template_tests/test_response.py",
      "line": 226
    },
    {
      "id": "tests/template_tests/test_response.py:TemplateResponseTest._response",
      "type": "function",
      "name": "TemplateResponseTest._response",
      "file": "tests/template_tests/test_response.py",
      "line": 229
    },
    {
      "id": "tests/template_tests/test_response.py:TemplateResponseTest.test_render",
      "type": "function",
      "name": "TemplateResponseTest.test_render",
      "file": "tests/template_tests/test_response.py",
      "line": 234
    },
    {
      "id": "tests/template_tests/test_response.py:TemplateResponseTest.test_render_with_requestcontext",
      "type": "function",
      "name": "TemplateResponseTest.test_render_with_requestcontext",
      "file": "tests/template_tests/test_response.py",
      "line": 238
    },
    {
      "id": "tests/template_tests/test_response.py:TemplateResponseTest.test_context_processor_priority",
      "type": "function",
      "name": "TemplateResponseTest.test_context_processor_priority",
      "file": "tests/template_tests/test_response.py",
      "line": 243
    },
    {
      "id": "tests/template_tests/test_response.py:TemplateResponseTest.test_kwargs",
      "type": "function",
      "name": "TemplateResponseTest.test_kwargs",
      "file": "tests/template_tests/test_response.py",
      "line": 249
    },
    {
      "id": "tests/template_tests/test_response.py:TemplateResponseTest.test_args",
      "type": "function",
      "name": "TemplateResponseTest.test_args",
      "file": "tests/template_tests/test_response.py",
      "line": 254
    },
    {
      "id": "tests/template_tests/test_response.py:TemplateResponseTest.test_using",
      "type": "function",
      "name": "TemplateResponseTest.test_using",
      "file": "tests/template_tests/test_response.py",
      "line": 261
    },
    {
      "id": "tests/template_tests/test_response.py:TemplateResponseTest.test_pickling",
      "type": "function",
      "name": "TemplateResponseTest.test_pickling",
      "file": "tests/template_tests/test_response.py",
      "line": 270
    },
    {
      "id": "tests/template_tests/test_response.py:TemplateResponseTest.test_repickling",
      "type": "function",
      "name": "TemplateResponseTest.test_repickling",
      "file": "tests/template_tests/test_response.py",
      "line": 308
    },
    {
      "id": "tests/template_tests/test_response.py:CustomURLConfTest",
      "type": "class",
      "name": "CustomURLConfTest",
      "file": "tests/template_tests/test_response.py",
      "line": 324
    },
    {
      "id": "tests/template_tests/test_response.py:CustomURLConfTest.test_custom_urlconf",
      "type": "function",
      "name": "CustomURLConfTest.test_custom_urlconf",
      "file": "tests/template_tests/test_response.py",
      "line": 326
    },
    {
      "id": "tests/template_tests/test_response.py:CacheMiddlewareTest",
      "type": "class",
      "name": "CacheMiddlewareTest",
      "file": "tests/template_tests/test_response.py",
      "line": 340
    },
    {
      "id": "tests/template_tests/test_response.py:CacheMiddlewareTest.test_middleware_caching",
      "type": "function",
      "name": "CacheMiddlewareTest.test_middleware_caching",
      "file": "tests/template_tests/test_response.py",
      "line": 342
    },
    {
      "id": "tests/template_tests/test_logging.py",
      "type": "file",
      "name": "test_logging.py",
      "file": "tests/template_tests/test_logging.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/test_logging.py:VariableResolveLoggingTests",
      "type": "class",
      "name": "VariableResolveLoggingTests",
      "file": "tests/template_tests/test_logging.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent",
      "type": "function",
      "name": "VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent",
      "file": "tests/template_tests/test_logging.py",
      "line": 10
    },
    {
      "id": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject",
      "type": "class",
      "name": "VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject",
      "file": "tests/template_tests/test_logging.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject.SilentDoesNotExist",
      "type": "class",
      "name": "VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject.SilentDoesNotExist",
      "file": "tests/template_tests/test_logging.py",
      "line": 12
    },
    {
      "id": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject.template_name",
      "type": "function",
      "name": "VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject.template_name",
      "file": "tests/template_tests/test_logging.py",
      "line": 16
    },
    {
      "id": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject.template",
      "type": "function",
      "name": "VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject.template",
      "file": "tests/template_tests/test_logging.py",
      "line": 20
    },
    {
      "id": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject.article",
      "type": "function",
      "name": "VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject.article",
      "file": "tests/template_tests/test_logging.py",
      "line": 24
    },
    {
      "id": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject.__iter__",
      "type": "function",
      "name": "VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject.__iter__",
      "file": "tests/template_tests/test_logging.py",
      "line": 27
    },
    {
      "id": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject.__getitem__",
      "type": "function",
      "name": "VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject.__getitem__",
      "file": "tests/template_tests/test_logging.py",
      "line": 30
    },
    {
      "id": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_not_silent",
      "type": "function",
      "name": "VariableResolveLoggingTests.test_log_on_variable_does_not_exist_not_silent",
      "file": "tests/template_tests/test_logging.py",
      "line": 46
    },
    {
      "id": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_no_log_when_variable_exists",
      "type": "function",
      "name": "VariableResolveLoggingTests.test_no_log_when_variable_exists",
      "file": "tests/template_tests/test_logging.py",
      "line": 64
    },
    {
      "id": "tests/template_tests/test_smartif.py",
      "type": "file",
      "name": "test_smartif.py",
      "file": "tests/template_tests/test_smartif.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/test_smartif.py:SmartIfTests",
      "type": "class",
      "name": "SmartIfTests",
      "file": "tests/template_tests/test_smartif.py",
      "line": 6
    },
    {
      "id": "tests/template_tests/test_smartif.py:SmartIfTests.assertCalcEqual",
      "type": "function",
      "name": "SmartIfTests.assertCalcEqual",
      "file": "tests/template_tests/test_smartif.py",
      "line": 8
    },
    {
      "id": "tests/template_tests/test_smartif.py:SmartIfTests.test_not",
      "type": "function",
      "name": "SmartIfTests.test_not",
      "file": "tests/template_tests/test_smartif.py",
      "line": 14
    },
    {
      "id": "tests/template_tests/test_smartif.py:SmartIfTests.test_or",
      "type": "function",
      "name": "SmartIfTests.test_or",
      "file": "tests/template_tests/test_smartif.py",
      "line": 21
    },
    {
      "id": "tests/template_tests/test_smartif.py:SmartIfTests.test_in",
      "type": "function",
      "name": "SmartIfTests.test_in",
      "file": "tests/template_tests/test_smartif.py",
      "line": 26
    },
    {
      "id": "tests/template_tests/test_smartif.py:SmartIfTests.test_not_in",
      "type": "function",
      "name": "SmartIfTests.test_not_in",
      "file": "tests/template_tests/test_smartif.py",
      "line": 32
    },
    {
      "id": "tests/template_tests/test_smartif.py:SmartIfTests.test_precedence",
      "type": "function",
      "name": "SmartIfTests.test_precedence",
      "file": "tests/template_tests/test_smartif.py",
      "line": 39
    },
    {
      "id": "tests/template_tests/test_origin.py",
      "type": "file",
      "name": "test_origin.py",
      "file": "tests/template_tests/test_origin.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/test_origin.py:OriginTestCase",
      "type": "class",
      "name": "OriginTestCase",
      "file": "tests/template_tests/test_origin.py",
      "line": 8
    },
    {
      "id": "tests/template_tests/test_origin.py:OriginTestCase.setUp",
      "type": "function",
      "name": "OriginTestCase.setUp",
      "file": "tests/template_tests/test_origin.py",
      "line": 9
    },
    {
      "id": "tests/template_tests/test_origin.py:OriginTestCase.test_origin_compares_equal",
      "type": "function",
      "name": "OriginTestCase.test_origin_compares_equal",
      "file": "tests/template_tests/test_origin.py",
      "line": 12
    },
    {
      "id": "tests/template_tests/test_origin.py:OriginTestCase.test_origin_compares_not_equal",
      "type": "function",
      "name": "OriginTestCase.test_origin_compares_not_equal",
      "file": "tests/template_tests/test_origin.py",
      "line": 19
    },
    {
      "id": "tests/template_tests/alternate_urls.py",
      "type": "file",
      "name": "alternate_urls.py",
      "file": "tests/template_tests/alternate_urls.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/template_tests/__init__.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/test_loaders.py",
      "type": "file",
      "name": "test_loaders.py",
      "file": "tests/template_tests/test_loaders.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/test_loaders.py:CachedLoaderTests",
      "type": "class",
      "name": "CachedLoaderTests",
      "file": "tests/template_tests/test_loaders.py",
      "line": 15
    },
    {
      "id": "tests/template_tests/test_loaders.py:CachedLoaderTests.setUp",
      "type": "function",
      "name": "CachedLoaderTests.setUp",
      "file": "tests/template_tests/test_loaders.py",
      "line": 17
    },
    {
      "id": "tests/template_tests/test_loaders.py:CachedLoaderTests.test_get_template",
      "type": "function",
      "name": "CachedLoaderTests.test_get_template",
      "file": "tests/template_tests/test_loaders.py",
      "line": 27
    },
    {
      "id": "tests/template_tests/test_loaders.py:CachedLoaderTests.test_get_template_missing_debug_off",
      "type": "function",
      "name": "CachedLoaderTests.test_get_template_missing_debug_off",
      "file": "tests/template_tests/test_loaders.py",
      "line": 42
    },
    {
      "id": "tests/template_tests/test_loaders.py:CachedLoaderTests.test_get_template_missing_debug_on",
      "type": "function",
      "name": "CachedLoaderTests.test_get_template_missing_debug_on",
      "file": "tests/template_tests/test_loaders.py",
      "line": 54
    },
    {
      "id": "tests/template_tests/test_loaders.py:CachedLoaderTests.test_cached_exception_no_traceback",
      "type": "function",
      "name": "CachedLoaderTests.test_cached_exception_no_traceback",
      "file": "tests/template_tests/test_loaders.py",
      "line": 66
    },
    {
      "id": "tests/template_tests/test_loaders.py:CachedLoaderTests.test_template_name_leading_dash_caching",
      "type": "function",
      "name": "CachedLoaderTests.test_template_name_leading_dash_caching",
      "file": "tests/template_tests/test_loaders.py",
      "line": 82
    },
    {
      "id": "tests/template_tests/test_loaders.py:CachedLoaderTests.test_template_name_lazy_string",
      "type": "function",
      "name": "CachedLoaderTests.test_template_name_lazy_string",
      "file": "tests/template_tests/test_loaders.py",
      "line": 89
    },
    {
      "id": "tests/template_tests/test_loaders.py:FileSystemLoaderTests",
      "type": "class",
      "name": "FileSystemLoaderTests",
      "file": "tests/template_tests/test_loaders.py",
      "line": 97
    },
    {
      "id": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.setUpClass",
      "type": "function",
      "name": "FileSystemLoaderTests.setUpClass",
      "file": "tests/template_tests/test_loaders.py",
      "line": 100
    },
    {
      "id": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.set_dirs",
      "type": "function",
      "name": "FileSystemLoaderTests.set_dirs",
      "file": "tests/template_tests/test_loaders.py",
      "line": 105
    },
    {
      "id": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.source_checker",
      "type": "function",
      "name": "FileSystemLoaderTests.source_checker",
      "file": "tests/template_tests/test_loaders.py",
      "line": 114
    },
    {
      "id": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.source_checker.check_sources",
      "type": "function",
      "name": "FileSystemLoaderTests.source_checker.check_sources",
      "file": "tests/template_tests/test_loaders.py",
      "line": 117
    },
    {
      "id": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.test_get_template",
      "type": "function",
      "name": "FileSystemLoaderTests.test_get_template",
      "file": "tests/template_tests/test_loaders.py",
      "line": 127
    },
    {
      "id": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.test_loaders_dirs",
      "type": "function",
      "name": "FileSystemLoaderTests.test_loaders_dirs",
      "file": "tests/template_tests/test_loaders.py",
      "line": 134
    },
    {
      "id": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.test_loaders_dirs_empty",
      "type": "function",
      "name": "FileSystemLoaderTests.test_loaders_dirs_empty",
      "file": "tests/template_tests/test_loaders.py",
      "line": 139
    },
    {
      "id": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.test_directory_security",
      "type": "function",
      "name": "FileSystemLoaderTests.test_directory_security",
      "file": "tests/template_tests/test_loaders.py",
      "line": 145
    },
    {
      "id": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.test_unicode_template_name",
      "type": "function",
      "name": "FileSystemLoaderTests.test_unicode_template_name",
      "file": "tests/template_tests/test_loaders.py",
      "line": 157
    },
    {
      "id": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.test_bytestring",
      "type": "function",
      "name": "FileSystemLoaderTests.test_bytestring",
      "file": "tests/template_tests/test_loaders.py",
      "line": 161
    },
    {
      "id": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.test_unicode_dir_name",
      "type": "function",
      "name": "FileSystemLoaderTests.test_unicode_dir_name",
      "file": "tests/template_tests/test_loaders.py",
      "line": 167
    },
    {
      "id": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.test_case_sensitivity",
      "type": "function",
      "name": "FileSystemLoaderTests.test_case_sensitivity",
      "file": "tests/template_tests/test_loaders.py",
      "line": 175
    },
    {
      "id": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.test_file_does_not_exist",
      "type": "function",
      "name": "FileSystemLoaderTests.test_file_does_not_exist",
      "file": "tests/template_tests/test_loaders.py",
      "line": 180
    },
    {
      "id": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.test_permissions_error",
      "type": "function",
      "name": "FileSystemLoaderTests.test_permissions_error",
      "file": "tests/template_tests/test_loaders.py",
      "line": 188
    },
    {
      "id": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.test_notafile_error",
      "type": "function",
      "name": "FileSystemLoaderTests.test_notafile_error",
      "file": "tests/template_tests/test_loaders.py",
      "line": 197
    },
    {
      "id": "tests/template_tests/test_loaders.py:AppDirectoriesLoaderTests",
      "type": "class",
      "name": "AppDirectoriesLoaderTests",
      "file": "tests/template_tests/test_loaders.py",
      "line": 203
    },
    {
      "id": "tests/template_tests/test_loaders.py:AppDirectoriesLoaderTests.setUpClass",
      "type": "function",
      "name": "AppDirectoriesLoaderTests.setUpClass",
      "file": "tests/template_tests/test_loaders.py",
      "line": 206
    },
    {
      "id": "tests/template_tests/test_loaders.py:AppDirectoriesLoaderTests.test_get_template",
      "type": "function",
      "name": "AppDirectoriesLoaderTests.test_get_template",
      "file": "tests/template_tests/test_loaders.py",
      "line": 213
    },
    {
      "id": "tests/template_tests/test_loaders.py:AppDirectoriesLoaderTests.test_not_installed",
      "type": "function",
      "name": "AppDirectoriesLoaderTests.test_not_installed",
      "file": "tests/template_tests/test_loaders.py",
      "line": 220
    },
    {
      "id": "tests/template_tests/test_loaders.py:LocmemLoaderTests",
      "type": "class",
      "name": "LocmemLoaderTests",
      "file": "tests/template_tests/test_loaders.py",
      "line": 225
    },
    {
      "id": "tests/template_tests/test_loaders.py:LocmemLoaderTests.setUpClass",
      "type": "function",
      "name": "LocmemLoaderTests.setUpClass",
      "file": "tests/template_tests/test_loaders.py",
      "line": 228
    },
    {
      "id": "tests/template_tests/test_loaders.py:LocmemLoaderTests.test_get_template",
      "type": "function",
      "name": "LocmemLoaderTests.test_get_template",
      "file": "tests/template_tests/test_loaders.py",
      "line": 236
    },
    {
      "id": "tests/template_tests/broken_tag.py",
      "type": "file",
      "name": "broken_tag.py",
      "file": "tests/template_tests/broken_tag.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/utils.py",
      "type": "file",
      "name": "utils.py",
      "file": "tests/template_tests/utils.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/utils.py:setup",
      "type": "function",
      "name": "setup",
      "file": "tests/template_tests/utils.py",
      "line": 12
    },
    {
      "id": "tests/template_tests/utils.py:setup.decorator",
      "type": "function",
      "name": "setup.decorator",
      "file": "tests/template_tests/utils.py",
      "line": 42
    },
    {
      "id": "tests/template_tests/utils.py:setup.decorator.inner",
      "type": "function",
      "name": "setup.decorator.inner",
      "file": "tests/template_tests/utils.py",
      "line": 47
    },
    {
      "id": "tests/template_tests/utils.py:SomeException",
      "type": "class",
      "name": "SomeException",
      "file": "tests/template_tests/utils.py",
      "line": 84
    },
    {
      "id": "tests/template_tests/utils.py:SomeOtherException",
      "type": "class",
      "name": "SomeOtherException",
      "file": "tests/template_tests/utils.py",
      "line": 88
    },
    {
      "id": "tests/template_tests/utils.py:ShouldNotExecuteException",
      "type": "class",
      "name": "ShouldNotExecuteException",
      "file": "tests/template_tests/utils.py",
      "line": 92
    },
    {
      "id": "tests/template_tests/utils.py:SomeClass",
      "type": "class",
      "name": "SomeClass",
      "file": "tests/template_tests/utils.py",
      "line": 96
    },
    {
      "id": "tests/template_tests/utils.py:SomeClass.method",
      "type": "function",
      "name": "SomeClass.method",
      "file": "tests/template_tests/utils.py",
      "line": 100
    },
    {
      "id": "tests/template_tests/utils.py:SomeClass.method2",
      "type": "function",
      "name": "SomeClass.method2",
      "file": "tests/template_tests/utils.py",
      "line": 103
    },
    {
      "id": "tests/template_tests/utils.py:SomeClass.method3",
      "type": "function",
      "name": "SomeClass.method3",
      "file": "tests/template_tests/utils.py",
      "line": 106
    },
    {
      "id": "tests/template_tests/utils.py:SomeClass.method4",
      "type": "function",
      "name": "SomeClass.method4",
      "file": "tests/template_tests/utils.py",
      "line": 109
    },
    {
      "id": "tests/template_tests/utils.py:SomeClass.method5",
      "type": "function",
      "name": "SomeClass.method5",
      "file": "tests/template_tests/utils.py",
      "line": 112
    },
    {
      "id": "tests/template_tests/utils.py:SomeClass.__getitem__",
      "type": "function",
      "name": "SomeClass.__getitem__",
      "file": "tests/template_tests/utils.py",
      "line": 115
    },
    {
      "id": "tests/template_tests/utils.py:SomeClass.silent_fail_attribute",
      "type": "function",
      "name": "SomeClass.silent_fail_attribute",
      "file": "tests/template_tests/utils.py",
      "line": 123
    },
    {
      "id": "tests/template_tests/utils.py:SomeClass.noisy_fail_attribute",
      "type": "function",
      "name": "SomeClass.noisy_fail_attribute",
      "file": "tests/template_tests/utils.py",
      "line": 127
    },
    {
      "id": "tests/template_tests/utils.py:SomeClass.attribute_error_attribute",
      "type": "function",
      "name": "SomeClass.attribute_error_attribute",
      "file": "tests/template_tests/utils.py",
      "line": 131
    },
    {
      "id": "tests/template_tests/utils.py:SomeClass.type_error_attribute",
      "type": "function",
      "name": "SomeClass.type_error_attribute",
      "file": "tests/template_tests/utils.py",
      "line": 135
    },
    {
      "id": "tests/template_tests/utils.py:OtherClass",
      "type": "class",
      "name": "OtherClass",
      "file": "tests/template_tests/utils.py",
      "line": 139
    },
    {
      "id": "tests/template_tests/utils.py:OtherClass.method",
      "type": "function",
      "name": "OtherClass.method",
      "file": "tests/template_tests/utils.py",
      "line": 140
    },
    {
      "id": "tests/template_tests/utils.py:TestObj",
      "type": "class",
      "name": "TestObj",
      "file": "tests/template_tests/utils.py",
      "line": 144
    },
    {
      "id": "tests/template_tests/utils.py:TestObj.is_true",
      "type": "function",
      "name": "TestObj.is_true",
      "file": "tests/template_tests/utils.py",
      "line": 145
    },
    {
      "id": "tests/template_tests/utils.py:TestObj.is_false",
      "type": "function",
      "name": "TestObj.is_false",
      "file": "tests/template_tests/utils.py",
      "line": 148
    },
    {
      "id": "tests/template_tests/utils.py:TestObj.is_bad",
      "type": "function",
      "name": "TestObj.is_bad",
      "file": "tests/template_tests/utils.py",
      "line": 151
    },
    {
      "id": "tests/template_tests/utils.py:SilentGetItemClass",
      "type": "class",
      "name": "SilentGetItemClass",
      "file": "tests/template_tests/utils.py",
      "line": 155
    },
    {
      "id": "tests/template_tests/utils.py:SilentGetItemClass.__getitem__",
      "type": "function",
      "name": "SilentGetItemClass.__getitem__",
      "file": "tests/template_tests/utils.py",
      "line": 156
    },
    {
      "id": "tests/template_tests/utils.py:SilentAttrClass",
      "type": "class",
      "name": "SilentAttrClass",
      "file": "tests/template_tests/utils.py",
      "line": 160
    },
    {
      "id": "tests/template_tests/utils.py:SilentAttrClass.b",
      "type": "function",
      "name": "SilentAttrClass.b",
      "file": "tests/template_tests/utils.py",
      "line": 161
    },
    {
      "id": "tests/template_tests/utils.py:UTF8Class",
      "type": "class",
      "name": "UTF8Class",
      "file": "tests/template_tests/utils.py",
      "line": 166
    },
    {
      "id": "tests/template_tests/utils.py:UTF8Class.__str__",
      "type": "function",
      "name": "UTF8Class.__str__",
      "file": "tests/template_tests/utils.py",
      "line": 168
    },
    {
      "id": "tests/template_tests/utils.py:UnsafeClass",
      "type": "class",
      "name": "UnsafeClass",
      "file": "tests/template_tests/utils.py",
      "line": 173
    },
    {
      "id": "tests/template_tests/utils.py:UnsafeClass.__str__",
      "type": "function",
      "name": "UnsafeClass.__str__",
      "file": "tests/template_tests/utils.py",
      "line": 174
    },
    {
      "id": "tests/template_tests/utils.py:SafeClass",
      "type": "class",
      "name": "SafeClass",
      "file": "tests/template_tests/utils.py",
      "line": 178
    },
    {
      "id": "tests/template_tests/utils.py:SafeClass.__str__",
      "type": "function",
      "name": "SafeClass.__str__",
      "file": "tests/template_tests/utils.py",
      "line": 179
    },
    {
      "id": "tests/template_tests/test_extends_relative.py",
      "type": "file",
      "name": "test_extends_relative.py",
      "file": "tests/template_tests/test_extends_relative.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/test_extends_relative.py:ExtendsRelativeBehaviorTests",
      "type": "class",
      "name": "ExtendsRelativeBehaviorTests",
      "file": "tests/template_tests/test_extends_relative.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/test_extends_relative.py:ExtendsRelativeBehaviorTests.test_normal_extend",
      "type": "function",
      "name": "ExtendsRelativeBehaviorTests.test_normal_extend",
      "file": "tests/template_tests/test_extends_relative.py",
      "line": 13
    },
    {
      "id": "tests/template_tests/test_extends_relative.py:ExtendsRelativeBehaviorTests.test_dir1_extend",
      "type": "function",
      "name": "ExtendsRelativeBehaviorTests.test_dir1_extend",
      "file": "tests/template_tests/test_extends_relative.py",
      "line": 19
    },
    {
      "id": "tests/template_tests/test_extends_relative.py:ExtendsRelativeBehaviorTests.test_dir1_extend1",
      "type": "function",
      "name": "ExtendsRelativeBehaviorTests.test_dir1_extend1",
      "file": "tests/template_tests/test_extends_relative.py",
      "line": 25
    },
    {
      "id": "tests/template_tests/test_extends_relative.py:ExtendsRelativeBehaviorTests.test_dir1_extend2",
      "type": "function",
      "name": "ExtendsRelativeBehaviorTests.test_dir1_extend2",
      "file": "tests/template_tests/test_extends_relative.py",
      "line": 31
    },
    {
      "id": "tests/template_tests/test_extends_relative.py:ExtendsRelativeBehaviorTests.test_dir1_extend3",
      "type": "function",
      "name": "ExtendsRelativeBehaviorTests.test_dir1_extend3",
      "file": "tests/template_tests/test_extends_relative.py",
      "line": 37
    },
    {
      "id": "tests/template_tests/test_extends_relative.py:ExtendsRelativeBehaviorTests.test_dir2_extend",
      "type": "function",
      "name": "ExtendsRelativeBehaviorTests.test_dir2_extend",
      "file": "tests/template_tests/test_extends_relative.py",
      "line": 43
    },
    {
      "id": "tests/template_tests/test_extends_relative.py:ExtendsRelativeBehaviorTests.test_extend_error",
      "type": "function",
      "name": "ExtendsRelativeBehaviorTests.test_extend_error",
      "file": "tests/template_tests/test_extends_relative.py",
      "line": 49
    },
    {
      "id": "tests/template_tests/test_extends_relative.py:IncludeRelativeBehaviorTests",
      "type": "class",
      "name": "IncludeRelativeBehaviorTests",
      "file": "tests/template_tests/test_extends_relative.py",
      "line": 59
    },
    {
      "id": "tests/template_tests/test_extends_relative.py:IncludeRelativeBehaviorTests.test_normal_include",
      "type": "function",
      "name": "IncludeRelativeBehaviorTests.test_normal_include",
      "file": "tests/template_tests/test_extends_relative.py",
      "line": 61
    },
    {
      "id": "tests/template_tests/test_extends_relative.py:IncludeRelativeBehaviorTests.test_dir2_include",
      "type": "function",
      "name": "IncludeRelativeBehaviorTests.test_dir2_include",
      "file": "tests/template_tests/test_extends_relative.py",
      "line": 67
    },
    {
      "id": "tests/template_tests/test_extends_relative.py:IncludeRelativeBehaviorTests.test_include_error",
      "type": "function",
      "name": "IncludeRelativeBehaviorTests.test_include_error",
      "file": "tests/template_tests/test_extends_relative.py",
      "line": 73
    },
    {
      "id": "tests/template_tests/test_extends_relative.py:ExtendsMixedBehaviorTests",
      "type": "class",
      "name": "ExtendsMixedBehaviorTests",
      "file": "tests/template_tests/test_extends_relative.py",
      "line": 83
    },
    {
      "id": "tests/template_tests/test_extends_relative.py:ExtendsMixedBehaviorTests.test_mixing1",
      "type": "function",
      "name": "ExtendsMixedBehaviorTests.test_mixing1",
      "file": "tests/template_tests/test_extends_relative.py",
      "line": 85
    },
    {
      "id": "tests/template_tests/test_extends_relative.py:ExtendsMixedBehaviorTests.test_mixing2",
      "type": "function",
      "name": "ExtendsMixedBehaviorTests.test_mixing2",
      "file": "tests/template_tests/test_extends_relative.py",
      "line": 91
    },
    {
      "id": "tests/template_tests/test_extends_relative.py:ExtendsMixedBehaviorTests.test_mixing_loop",
      "type": "function",
      "name": "ExtendsMixedBehaviorTests.test_mixing_loop",
      "file": "tests/template_tests/test_extends_relative.py",
      "line": 97
    },
    {
      "id": "tests/template_tests/test_custom.py",
      "type": "file",
      "name": "test_custom.py",
      "file": "tests/template_tests/test_custom.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/test_custom.py:CustomFilterTests",
      "type": "class",
      "name": "CustomFilterTests",
      "file": "tests/template_tests/test_custom.py",
      "line": 18
    },
    {
      "id": "tests/template_tests/test_custom.py:CustomFilterTests.test_filter",
      "type": "function",
      "name": "CustomFilterTests.test_filter",
      "file": "tests/template_tests/test_custom.py",
      "line": 20
    },
    {
      "id": "tests/template_tests/test_custom.py:CustomFilterTests.test_decorated_filter",
      "type": "function",
      "name": "CustomFilterTests.test_decorated_filter",
      "file": "tests/template_tests/test_custom.py",
      "line": 28
    },
    {
      "id": "tests/template_tests/test_custom.py:TagTestCase",
      "type": "class",
      "name": "TagTestCase",
      "file": "tests/template_tests/test_custom.py",
      "line": 34
    },
    {
      "id": "tests/template_tests/test_custom.py:TagTestCase.setUpClass",
      "type": "function",
      "name": "TagTestCase.setUpClass",
      "file": "tests/template_tests/test_custom.py",
      "line": 37
    },
    {
      "id": "tests/template_tests/test_custom.py:TagTestCase.verify_tag",
      "type": "function",
      "name": "TagTestCase.verify_tag",
      "file": "tests/template_tests/test_custom.py",
      "line": 41
    },
    {
      "id": "tests/template_tests/test_custom.py:SimpleTagTests",
      "type": "class",
      "name": "SimpleTagTests",
      "file": "tests/template_tests/test_custom.py",
      "line": 47
    },
    {
      "id": "tests/template_tests/test_custom.py:SimpleTagTests.test_simple_tags",
      "type": "function",
      "name": "SimpleTagTests.test_simple_tags",
      "file": "tests/template_tests/test_custom.py",
      "line": 49
    },
    {
      "id": "tests/template_tests/test_custom.py:SimpleTagTests.test_simple_tag_errors",
      "type": "function",
      "name": "SimpleTagTests.test_simple_tag_errors",
      "file": "tests/template_tests/test_custom.py",
      "line": 90
    },
    {
      "id": "tests/template_tests/test_custom.py:SimpleTagTests.test_simple_tag_escaping_autoescape_off",
      "type": "function",
      "name": "SimpleTagTests.test_simple_tag_escaping_autoescape_off",
      "file": "tests/template_tests/test_custom.py",
      "line": 114
    },
    {
      "id": "tests/template_tests/test_custom.py:SimpleTagTests.test_simple_tag_naive_escaping",
      "type": "function",
      "name": "SimpleTagTests.test_simple_tag_naive_escaping",
      "file": "tests/template_tests/test_custom.py",
      "line": 119
    },
    {
      "id": "tests/template_tests/test_custom.py:SimpleTagTests.test_simple_tag_explicit_escaping",
      "type": "function",
      "name": "SimpleTagTests.test_simple_tag_explicit_escaping",
      "file": "tests/template_tests/test_custom.py",
      "line": 124
    },
    {
      "id": "tests/template_tests/test_custom.py:SimpleTagTests.test_simple_tag_format_html_escaping",
      "type": "function",
      "name": "SimpleTagTests.test_simple_tag_format_html_escaping",
      "file": "tests/template_tests/test_custom.py",
      "line": 130
    },
    {
      "id": "tests/template_tests/test_custom.py:SimpleTagTests.test_simple_tag_registration",
      "type": "function",
      "name": "SimpleTagTests.test_simple_tag_registration",
      "file": "tests/template_tests/test_custom.py",
      "line": 136
    },
    {
      "id": "tests/template_tests/test_custom.py:SimpleTagTests.test_simple_tag_missing_context",
      "type": "function",
      "name": "SimpleTagTests.test_simple_tag_missing_context",
      "file": "tests/template_tests/test_custom.py",
      "line": 147
    },
    {
      "id": "tests/template_tests/test_custom.py:InclusionTagTests",
      "type": "class",
      "name": "InclusionTagTests",
      "file": "tests/template_tests/test_custom.py",
      "line": 157
    },
    {
      "id": "tests/template_tests/test_custom.py:InclusionTagTests.test_inclusion_tags",
      "type": "function",
      "name": "InclusionTagTests.test_inclusion_tags",
      "file": "tests/template_tests/test_custom.py",
      "line": 159
    },
    {
      "id": "tests/template_tests/test_custom.py:InclusionTagTests.test_inclusion_tag_errors",
      "type": "function",
      "name": "InclusionTagTests.test_inclusion_tag_errors",
      "file": "tests/template_tests/test_custom.py",
      "line": 199
    },
    {
      "id": "tests/template_tests/test_custom.py:InclusionTagTests.test_include_tag_missing_context",
      "type": "function",
      "name": "InclusionTagTests.test_include_tag_missing_context",
      "file": "tests/template_tests/test_custom.py",
      "line": 224
    },
    {
      "id": "tests/template_tests/test_custom.py:InclusionTagTests.test_inclusion_tags_from_template",
      "type": "function",
      "name": "InclusionTagTests.test_inclusion_tags_from_template",
      "file": "tests/template_tests/test_custom.py",
      "line": 233
    },
    {
      "id": "tests/template_tests/test_custom.py:InclusionTagTests.test_inclusion_tag_registration",
      "type": "function",
      "name": "InclusionTagTests.test_inclusion_tag_registration",
      "file": "tests/template_tests/test_custom.py",
      "line": 267
    },
    {
      "id": "tests/template_tests/test_custom.py:InclusionTagTests.test_15070_use_l10n",
      "type": "function",
      "name": "InclusionTagTests.test_15070_use_l10n",
      "file": "tests/template_tests/test_custom.py",
      "line": 283
    },
    {
      "id": "tests/template_tests/test_custom.py:InclusionTagTests.test_no_render_side_effect",
      "type": "function",
      "name": "InclusionTagTests.test_no_render_side_effect",
      "file": "tests/template_tests/test_custom.py",
      "line": 295
    },
    {
      "id": "tests/template_tests/test_custom.py:InclusionTagTests.test_render_context_is_cleared",
      "type": "function",
      "name": "InclusionTagTests.test_render_context_is_cleared",
      "file": "tests/template_tests/test_custom.py",
      "line": 305
    },
    {
      "id": "tests/template_tests/test_custom.py:TemplateTagLoadingTests",
      "type": "class",
      "name": "TemplateTagLoadingTests",
      "file": "tests/template_tests/test_custom.py",
      "line": 316
    },
    {
      "id": "tests/template_tests/test_custom.py:TemplateTagLoadingTests.setUpClass",
      "type": "function",
      "name": "TemplateTagLoadingTests.setUpClass",
      "file": "tests/template_tests/test_custom.py",
      "line": 319
    },
    {
      "id": "tests/template_tests/test_custom.py:TemplateTagLoadingTests.test_load_error",
      "type": "function",
      "name": "TemplateTagLoadingTests.test_load_error",
      "file": "tests/template_tests/test_custom.py",
      "line": 323
    },
    {
      "id": "tests/template_tests/test_custom.py:TemplateTagLoadingTests.test_load_error_egg",
      "type": "function",
      "name": "TemplateTagLoadingTests.test_load_error_egg",
      "file": "tests/template_tests/test_custom.py",
      "line": 332
    },
    {
      "id": "tests/template_tests/test_custom.py:TemplateTagLoadingTests.test_load_working_egg",
      "type": "function",
      "name": "TemplateTagLoadingTests.test_load_working_egg",
      "file": "tests/template_tests/test_custom.py",
      "line": 343
    },
    {
      "id": "tests/template_tests/test_custom.py:TemplateTagLoadingTests.test_load_annotated_function",
      "type": "function",
      "name": "TemplateTagLoadingTests.test_load_annotated_function",
      "file": "tests/template_tests/test_custom.py",
      "line": 352
    },
    {
      "id": "tests/template_tests/test_context.py",
      "type": "file",
      "name": "test_context.py",
      "file": "tests/template_tests/test_context.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/test_context.py:ContextTests",
      "type": "class",
      "name": "ContextTests",
      "file": "tests/template_tests/test_context.py",
      "line": 9
    },
    {
      "id": "tests/template_tests/test_context.py:ContextTests.test_context",
      "type": "function",
      "name": "ContextTests.test_context",
      "file": "tests/template_tests/test_context.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/test_context.py:ContextTests.test_push_context_manager",
      "type": "function",
      "name": "ContextTests.test_push_context_manager",
      "file": "tests/template_tests/test_context.py",
      "line": 22
    },
    {
      "id": "tests/template_tests/test_context.py:ContextTests.test_update_context_manager",
      "type": "function",
      "name": "ContextTests.test_update_context_manager",
      "file": "tests/template_tests/test_context.py",
      "line": 33
    },
    {
      "id": "tests/template_tests/test_context.py:ContextTests.test_push_context_manager_with_context_object",
      "type": "function",
      "name": "ContextTests.test_push_context_manager_with_context_object",
      "file": "tests/template_tests/test_context.py",
      "line": 44
    },
    {
      "id": "tests/template_tests/test_context.py:ContextTests.test_update_context_manager_with_context_object",
      "type": "function",
      "name": "ContextTests.test_update_context_manager_with_context_object",
      "file": "tests/template_tests/test_context.py",
      "line": 50
    },
    {
      "id": "tests/template_tests/test_context.py:ContextTests.test_push_proper_layering",
      "type": "function",
      "name": "ContextTests.test_push_proper_layering",
      "file": "tests/template_tests/test_context.py",
      "line": 56
    },
    {
      "id": "tests/template_tests/test_context.py:ContextTests.test_update_proper_layering",
      "type": "function",
      "name": "ContextTests.test_update_proper_layering",
      "file": "tests/template_tests/test_context.py",
      "line": 70
    },
    {
      "id": "tests/template_tests/test_context.py:ContextTests.test_setdefault",
      "type": "function",
      "name": "ContextTests.test_setdefault",
      "file": "tests/template_tests/test_context.py",
      "line": 84
    },
    {
      "id": "tests/template_tests/test_context.py:ContextTests.test_resolve_on_context_method",
      "type": "function",
      "name": "ContextTests.test_resolve_on_context_method",
      "file": "tests/template_tests/test_context.py",
      "line": 95
    },
    {
      "id": "tests/template_tests/test_context.py:ContextTests.test_render_context",
      "type": "function",
      "name": "ContextTests.test_render_context",
      "file": "tests/template_tests/test_context.py",
      "line": 112
    },
    {
      "id": "tests/template_tests/test_context.py:ContextTests.test_flatten_context",
      "type": "function",
      "name": "ContextTests.test_flatten_context",
      "file": "tests/template_tests/test_context.py",
      "line": 126
    },
    {
      "id": "tests/template_tests/test_context.py:ContextTests.test_flatten_context_with_context",
      "type": "function",
      "name": "ContextTests.test_flatten_context_with_context",
      "file": "tests/template_tests/test_context.py",
      "line": 137
    },
    {
      "id": "tests/template_tests/test_context.py:ContextTests.test_context_comparable",
      "type": "function",
      "name": "ContextTests.test_context_comparable",
      "file": "tests/template_tests/test_context.py",
      "line": 151
    },
    {
      "id": "tests/template_tests/test_context.py:ContextTests.test_copy_request_context_twice",
      "type": "function",
      "name": "ContextTests.test_copy_request_context_twice",
      "file": "tests/template_tests/test_context.py",
      "line": 177
    },
    {
      "id": "tests/template_tests/test_context.py:ContextTests.test_set_upward",
      "type": "function",
      "name": "ContextTests.test_set_upward",
      "file": "tests/template_tests/test_context.py",
      "line": 183
    },
    {
      "id": "tests/template_tests/test_context.py:ContextTests.test_set_upward_empty_context",
      "type": "function",
      "name": "ContextTests.test_set_upward_empty_context",
      "file": "tests/template_tests/test_context.py",
      "line": 188
    },
    {
      "id": "tests/template_tests/test_context.py:ContextTests.test_set_upward_with_push",
      "type": "function",
      "name": "ContextTests.test_set_upward_with_push",
      "file": "tests/template_tests/test_context.py",
      "line": 193
    },
    {
      "id": "tests/template_tests/test_context.py:ContextTests.test_set_upward_with_push_no_match",
      "type": "function",
      "name": "ContextTests.test_set_upward_with_push_no_match",
      "file": "tests/template_tests/test_context.py",
      "line": 204
    },
    {
      "id": "tests/template_tests/test_context.py:RequestContextTests",
      "type": "class",
      "name": "RequestContextTests",
      "file": "tests/template_tests/test_context.py",
      "line": 215
    },
    {
      "id": "tests/template_tests/test_context.py:RequestContextTests.test_include_only",
      "type": "function",
      "name": "RequestContextTests.test_include_only",
      "file": "tests/template_tests/test_context.py",
      "line": 218
    },
    {
      "id": "tests/template_tests/test_context.py:RequestContextTests.test_stack_size",
      "type": "function",
      "name": "RequestContextTests.test_stack_size",
      "file": "tests/template_tests/test_context.py",
      "line": 233
    },
    {
      "id": "tests/template_tests/test_context.py:RequestContextTests.test_context_comparable",
      "type": "function",
      "name": "RequestContextTests.test_context_comparable",
      "file": "tests/template_tests/test_context.py",
      "line": 243
    },
    {
      "id": "tests/template_tests/test_context.py:RequestContextTests.test_modify_context_and_render",
      "type": "function",
      "name": "RequestContextTests.test_modify_context_and_render",
      "file": "tests/template_tests/test_context.py",
      "line": 256
    },
    {
      "id": "tests/template_tests/tests.py",
      "type": "file",
      "name": "tests.py",
      "file": "tests/template_tests/tests.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/tests.py:TemplateTests",
      "type": "class",
      "name": "TemplateTests",
      "file": "tests/template_tests/tests.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/tests.py:TemplateTests.test_string_origin",
      "type": "function",
      "name": "TemplateTests.test_string_origin",
      "file": "tests/template_tests/tests.py",
      "line": 13
    },
    {
      "id": "tests/template_tests/tests.py:TemplateTests.test_url_reverse_no_settings_module",
      "type": "function",
      "name": "TemplateTests.test_url_reverse_no_settings_module",
      "file": "tests/template_tests/tests.py",
      "line": 20
    },
    {
      "id": "tests/template_tests/tests.py:TemplateTests.test_url_reverse_view_name",
      "type": "function",
      "name": "TemplateTests.test_url_reverse_view_name",
      "file": "tests/template_tests/tests.py",
      "line": 30
    },
    {
      "id": "tests/template_tests/tests.py:TemplateTests.test_no_wrapped_exception",
      "type": "function",
      "name": "TemplateTests.test_no_wrapped_exception",
      "file": "tests/template_tests/tests.py",
      "line": 47
    },
    {
      "id": "tests/template_tests/tests.py:TemplateTests.test_invalid_block_suggestion",
      "type": "function",
      "name": "TemplateTests.test_invalid_block_suggestion",
      "file": "tests/template_tests/tests.py",
      "line": 63
    },
    {
      "id": "tests/template_tests/tests.py:TemplateTests.test_unknown_block_tag",
      "type": "function",
      "name": "TemplateTests.test_unknown_block_tag",
      "file": "tests/template_tests/tests.py",
      "line": 77
    },
    {
      "id": "tests/template_tests/tests.py:TemplateTests.test_compile_filter_expression_error",
      "type": "function",
      "name": "TemplateTests.test_compile_filter_expression_error",
      "file": "tests/template_tests/tests.py",
      "line": 86
    },
    {
      "id": "tests/template_tests/tests.py:TemplateTests.test_compile_tag_error",
      "type": "function",
      "name": "TemplateTests.test_compile_tag_error",
      "file": "tests/template_tests/tests.py",
      "line": 101
    },
    {
      "id": "tests/template_tests/tests.py:TemplateTests.test_compile_tag_error_27584",
      "type": "function",
      "name": "TemplateTests.test_compile_tag_error_27584",
      "file": "tests/template_tests/tests.py",
      "line": 114
    },
    {
      "id": "tests/template_tests/tests.py:TemplateTests.test_compile_tag_error_27956",
      "type": "function",
      "name": "TemplateTests.test_compile_tag_error_27956",
      "file": "tests/template_tests/tests.py",
      "line": 125
    },
    {
      "id": "tests/template_tests/tests.py:TemplateTests.test_super_errors",
      "type": "function",
      "name": "TemplateTests.test_super_errors",
      "file": "tests/template_tests/tests.py",
      "line": 137
    },
    {
      "id": "tests/template_tests/tests.py:TemplateTests.test_debug_tag_non_ascii",
      "type": "function",
      "name": "TemplateTests.test_debug_tag_non_ascii",
      "file": "tests/template_tests/tests.py",
      "line": 146
    },
    {
      "id": "tests/template_tests/tests.py:TemplateTests.test_extends_generic_template",
      "type": "function",
      "name": "TemplateTests.test_extends_generic_template",
      "file": "tests/template_tests/tests.py",
      "line": 155
    },
    {
      "id": "tests/template_tests/tests.py:TemplateTests.test_node_origin",
      "type": "function",
      "name": "TemplateTests.test_node_origin",
      "file": "tests/template_tests/tests.py",
      "line": 166
    },
    {
      "id": "tests/template_tests/urls.py",
      "type": "file",
      "name": "urls.py",
      "file": "tests/template_tests/urls.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/test_base.py",
      "type": "file",
      "name": "test_base.py",
      "file": "tests/template_tests/test_base.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/test_base.py:TemplateTests",
      "type": "class",
      "name": "TemplateTests",
      "file": "tests/template_tests/test_base.py",
      "line": 6
    },
    {
      "id": "tests/template_tests/test_base.py:TemplateTests.test_lazy_template_string",
      "type": "function",
      "name": "TemplateTests.test_lazy_template_string",
      "file": "tests/template_tests/test_base.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/test_base.py:VariableDoesNotExistTests",
      "type": "class",
      "name": "VariableDoesNotExistTests",
      "file": "tests/template_tests/test_base.py",
      "line": 12
    },
    {
      "id": "tests/template_tests/test_base.py:VariableDoesNotExistTests.test_str",
      "type": "function",
      "name": "VariableDoesNotExistTests.test_str",
      "file": "tests/template_tests/test_base.py",
      "line": 13
    },
    {
      "id": "tests/template_tests/test_base.py:VariableTests",
      "type": "class",
      "name": "VariableTests",
      "file": "tests/template_tests/test_base.py",
      "line": 18
    },
    {
      "id": "tests/template_tests/test_base.py:VariableTests.test_integer_literals",
      "type": "function",
      "name": "VariableTests.test_integer_literals",
      "file": "tests/template_tests/test_base.py",
      "line": 19
    },
    {
      "id": "tests/template_tests/test_base.py:VariableTests.test_nonliterals",
      "type": "function",
      "name": "VariableTests.test_nonliterals",
      "file": "tests/template_tests/test_base.py",
      "line": 22
    },
    {
      "id": "tests/template_tests/annotated_tag_function.py",
      "type": "file",
      "name": "annotated_tag_function.py",
      "file": "tests/template_tests/annotated_tag_function.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/annotated_tag_function.py:annotated_tag_function",
      "type": "function",
      "name": "annotated_tag_function",
      "file": "tests/template_tests/annotated_tag_function.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/test_nodelist.py",
      "type": "file",
      "name": "test_nodelist.py",
      "file": "tests/template_tests/test_nodelist.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/test_nodelist.py:NodelistTest",
      "type": "class",
      "name": "NodelistTest",
      "file": "tests/template_tests/test_nodelist.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/test_nodelist.py:NodelistTest.setUpClass",
      "type": "function",
      "name": "NodelistTest.setUpClass",
      "file": "tests/template_tests/test_nodelist.py",
      "line": 10
    },
    {
      "id": "tests/template_tests/test_nodelist.py:NodelistTest.test_for",
      "type": "function",
      "name": "NodelistTest.test_for",
      "file": "tests/template_tests/test_nodelist.py",
      "line": 14
    },
    {
      "id": "tests/template_tests/test_nodelist.py:NodelistTest.test_if",
      "type": "function",
      "name": "NodelistTest.test_if",
      "file": "tests/template_tests/test_nodelist.py",
      "line": 19
    },
    {
      "id": "tests/template_tests/test_nodelist.py:NodelistTest.test_ifequal",
      "type": "function",
      "name": "NodelistTest.test_ifequal",
      "file": "tests/template_tests/test_nodelist.py",
      "line": 24
    },
    {
      "id": "tests/template_tests/test_nodelist.py:NodelistTest.test_ifchanged",
      "type": "function",
      "name": "NodelistTest.test_ifchanged",
      "file": "tests/template_tests/test_nodelist.py",
      "line": 29
    },
    {
      "id": "tests/template_tests/test_nodelist.py:TextNodeTest",
      "type": "class",
      "name": "TextNodeTest",
      "file": "tests/template_tests/test_nodelist.py",
      "line": 35
    },
    {
      "id": "tests/template_tests/test_nodelist.py:TextNodeTest.test_textnode_repr",
      "type": "function",
      "name": "TextNodeTest.test_textnode_repr",
      "file": "tests/template_tests/test_nodelist.py",
      "line": 37
    },
    {
      "id": "tests/template_tests/test_nodelist.py:ErrorIndexTest",
      "type": "class",
      "name": "ErrorIndexTest",
      "file": "tests/template_tests/test_nodelist.py",
      "line": 48
    },
    {
      "id": "tests/template_tests/test_nodelist.py:ErrorIndexTest.test_correct_exception_index",
      "type": "function",
      "name": "ErrorIndexTest.test_correct_exception_index",
      "file": "tests/template_tests/test_nodelist.py",
      "line": 53
    },
    {
      "id": "tests/template_tests/test_callables.py",
      "type": "file",
      "name": "test_callables.py",
      "file": "tests/template_tests/test_callables.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/test_callables.py:CallableVariablesTests",
      "type": "class",
      "name": "CallableVariablesTests",
      "file": "tests/template_tests/test_callables.py",
      "line": 6
    },
    {
      "id": "tests/template_tests/test_callables.py:CallableVariablesTests.setUpClass",
      "type": "function",
      "name": "CallableVariablesTests.setUpClass",
      "file": "tests/template_tests/test_callables.py",
      "line": 9
    },
    {
      "id": "tests/template_tests/test_callables.py:CallableVariablesTests.test_callable",
      "type": "function",
      "name": "CallableVariablesTests.test_callable",
      "file": "tests/template_tests/test_callables.py",
      "line": 13
    },
    {
      "id": "tests/template_tests/test_callables.py:CallableVariablesTests.test_callable.Doodad",
      "type": "class",
      "name": "CallableVariablesTests.test_callable.Doodad",
      "file": "tests/template_tests/test_callables.py",
      "line": 15
    },
    {
      "id": "tests/template_tests/test_callables.py:CallableVariablesTests.test_callable.Doodad.__call__",
      "type": "function",
      "name": "CallableVariablesTests.test_callable.Doodad.__call__",
      "file": "tests/template_tests/test_callables.py",
      "line": 20
    },
    {
      "id": "tests/template_tests/test_callables.py:CallableVariablesTests.test_alters_data",
      "type": "function",
      "name": "CallableVariablesTests.test_alters_data",
      "file": "tests/template_tests/test_callables.py",
      "line": 42
    },
    {
      "id": "tests/template_tests/test_callables.py:CallableVariablesTests.test_alters_data.Doodad",
      "type": "class",
      "name": "CallableVariablesTests.test_alters_data.Doodad",
      "file": "tests/template_tests/test_callables.py",
      "line": 44
    },
    {
      "id": "tests/template_tests/test_callables.py:CallableVariablesTests.test_alters_data.Doodad.__call__",
      "type": "function",
      "name": "CallableVariablesTests.test_alters_data.Doodad.__call__",
      "file": "tests/template_tests/test_callables.py",
      "line": 51
    },
    {
      "id": "tests/template_tests/test_callables.py:CallableVariablesTests.test_do_not_call",
      "type": "function",
      "name": "CallableVariablesTests.test_do_not_call",
      "file": "tests/template_tests/test_callables.py",
      "line": 69
    },
    {
      "id": "tests/template_tests/test_callables.py:CallableVariablesTests.test_do_not_call.Doodad",
      "type": "class",
      "name": "CallableVariablesTests.test_do_not_call.Doodad",
      "file": "tests/template_tests/test_callables.py",
      "line": 71
    },
    {
      "id": "tests/template_tests/test_callables.py:CallableVariablesTests.test_do_not_call.Doodad.__call__",
      "type": "function",
      "name": "CallableVariablesTests.test_do_not_call.Doodad.__call__",
      "file": "tests/template_tests/test_callables.py",
      "line": 78
    },
    {
      "id": "tests/template_tests/test_callables.py:CallableVariablesTests.test_do_not_call_and_alters_data",
      "type": "function",
      "name": "CallableVariablesTests.test_do_not_call_and_alters_data",
      "file": "tests/template_tests/test_callables.py",
      "line": 98
    },
    {
      "id": "tests/template_tests/test_callables.py:CallableVariablesTests.test_do_not_call_and_alters_data.Doodad",
      "type": "class",
      "name": "CallableVariablesTests.test_do_not_call_and_alters_data.Doodad",
      "file": "tests/template_tests/test_callables.py",
      "line": 103
    },
    {
      "id": "tests/template_tests/test_callables.py:CallableVariablesTests.test_do_not_call_and_alters_data.Doodad.__call__",
      "type": "function",
      "name": "CallableVariablesTests.test_do_not_call_and_alters_data.Doodad.__call__",
      "file": "tests/template_tests/test_callables.py",
      "line": 111
    },
    {
      "id": "tests/template_tests/views.py",
      "type": "file",
      "name": "views.py",
      "file": "tests/template_tests/views.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/views.py:index",
      "type": "function",
      "name": "index",
      "file": "tests/template_tests/views.py",
      "line": 6
    },
    {
      "id": "tests/template_tests/views.py:client",
      "type": "function",
      "name": "client",
      "file": "tests/template_tests/views.py",
      "line": 10
    },
    {
      "id": "tests/template_tests/views.py:client_action",
      "type": "function",
      "name": "client_action",
      "file": "tests/template_tests/views.py",
      "line": 14
    },
    {
      "id": "tests/template_tests/views.py:client2",
      "type": "function",
      "name": "client2",
      "file": "tests/template_tests/views.py",
      "line": 18
    },
    {
      "id": "tests/template_tests/views.py:template_response_view",
      "type": "function",
      "name": "template_response_view",
      "file": "tests/template_tests/views.py",
      "line": 22
    },
    {
      "id": "tests/template_tests/views.py:snark",
      "type": "function",
      "name": "snark",
      "file": "tests/template_tests/views.py",
      "line": 26
    },
    {
      "id": "tests/template_tests/templatetags",
      "type": "directory",
      "name": "templatetags",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/template_tests/templatetags/custom.py",
      "type": "file",
      "name": "custom.py",
      "file": "tests/template_tests/templatetags/custom.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/templatetags/custom.py:trim",
      "type": "function",
      "name": "trim",
      "file": "tests/template_tests/templatetags/custom.py",
      "line": 13
    },
    {
      "id": "tests/template_tests/templatetags/custom.py:make_data_div",
      "type": "function",
      "name": "make_data_div",
      "file": "tests/template_tests/templatetags/custom.py",
      "line": 19
    },
    {
      "id": "tests/template_tests/templatetags/custom.py:noop",
      "type": "function",
      "name": "noop",
      "file": "tests/template_tests/templatetags/custom.py",
      "line": 25
    },
    {
      "id": "tests/template_tests/templatetags/custom.py:context_stack_length",
      "type": "function",
      "name": "context_stack_length",
      "file": "tests/template_tests/templatetags/custom.py",
      "line": 33
    },
    {
      "id": "tests/template_tests/templatetags/custom.py:no_params",
      "type": "function",
      "name": "no_params",
      "file": "tests/template_tests/templatetags/custom.py",
      "line": 38
    },
    {
      "id": "tests/template_tests/templatetags/custom.py:one_param",
      "type": "function",
      "name": "one_param",
      "file": "tests/template_tests/templatetags/custom.py",
      "line": 47
    },
    {
      "id": "tests/template_tests/templatetags/custom.py:explicit_no_context",
      "type": "function",
      "name": "explicit_no_context",
      "file": "tests/template_tests/templatetags/custom.py",
      "line": 56
    },
    {
      "id": "tests/template_tests/templatetags/custom.py:no_params_with_context",
      "type": "function",
      "name": "no_params_with_context",
      "file": "tests/template_tests/templatetags/custom.py",
      "line": 65
    },
    {
      "id": "tests/template_tests/templatetags/custom.py:params_and_context",
      "type": "function",
      "name": "params_and_context",
      "file": "tests/template_tests/templatetags/custom.py",
      "line": 74
    },
    {
      "id": "tests/template_tests/templatetags/custom.py:simple_two_params",
      "type": "function",
      "name": "simple_two_params",
      "file": "tests/template_tests/templatetags/custom.py",
      "line": 83
    },
    {
      "id": "tests/template_tests/templatetags/custom.py:simple_keyword_only_param",
      "type": "function",
      "name": "simple_keyword_only_param",
      "file": "tests/template_tests/templatetags/custom.py",
      "line": 92
    },
    {
      "id": "tests/template_tests/templatetags/custom.py:simple_keyword_only_default",
      "type": "function",
      "name": "simple_keyword_only_default",
      "file": "tests/template_tests/templatetags/custom.py",
      "line": 97
    },
    {
      "id": "tests/template_tests/templatetags/custom.py:simple_one_default",
      "type": "function",
      "name": "simple_one_default",
      "file": "tests/template_tests/templatetags/custom.py",
      "line": 102
    },
    {
      "id": "tests/template_tests/templatetags/custom.py:simple_unlimited_args",
      "type": "function",
      "name": "simple_unlimited_args",
      "file": "tests/template_tests/templatetags/custom.py",
      "line": 111
    },
    {
      "id": "tests/template_tests/templatetags/custom.py:simple_only_unlimited_args",
      "type": "function",
      "name": "simple_only_unlimited_args",
      "file": "tests/template_tests/templatetags/custom.py",
      "line": 122
    },
    {
      "id": "tests/template_tests/templatetags/custom.py:simple_unlimited_args_kwargs",
      "type": "function",
      "name": "simple_unlimited_args_kwargs",
      "file": "tests/template_tests/templatetags/custom.py",
      "line": 131
    },
    {
      "id": "tests/template_tests/templatetags/custom.py:simple_tag_without_context_parameter",
      "type": "function",
      "name": "simple_tag_without_context_parameter",
      "file": "tests/template_tests/templatetags/custom.py",
      "line": 145
    },
    {
      "id": "tests/template_tests/templatetags/custom.py:escape_naive",
      "type": "function",
      "name": "escape_naive",
      "file": "tests/template_tests/templatetags/custom.py",
      "line": 154
    },
    {
      "id": "tests/template_tests/templatetags/custom.py:escape_explicit",
      "type": "function",
      "name": "escape_explicit",
      "file": "tests/template_tests/templatetags/custom.py",
      "line": 160
    },
    {
      "id": "tests/template_tests/templatetags/custom.py:escape_format_html",
      "type": "function",
      "name": "escape_format_html",
      "file": "tests/template_tests/templatetags/custom.py",
      "line": 166
    },
    {
      "id": "tests/template_tests/templatetags/custom.py:current_app",
      "type": "function",
      "name": "current_app",
      "file": "tests/template_tests/templatetags/custom.py",
      "line": 172
    },
    {
      "id": "tests/template_tests/templatetags/custom.py:use_l10n",
      "type": "function",
      "name": "use_l10n",
      "file": "tests/template_tests/templatetags/custom.py",
      "line": 177
    },
    {
      "id": "tests/template_tests/templatetags/custom.py:minustwo_overridden_name",
      "type": "function",
      "name": "minustwo_overridden_name",
      "file": "tests/template_tests/templatetags/custom.py",
      "line": 182
    },
    {
      "id": "tests/template_tests/templatetags/custom.py:counter",
      "type": "function",
      "name": "counter",
      "file": "tests/template_tests/templatetags/custom.py",
      "line": 190
    },
    {
      "id": "tests/template_tests/templatetags/custom.py:CounterNode",
      "type": "class",
      "name": "CounterNode",
      "file": "tests/template_tests/templatetags/custom.py",
      "line": 194
    },
    {
      "id": "tests/template_tests/templatetags/custom.py:CounterNode.render",
      "type": "function",
      "name": "CounterNode.render",
      "file": "tests/template_tests/templatetags/custom.py",
      "line": 198
    },
    {
      "id": "tests/template_tests/templatetags/tag_27584.py",
      "type": "file",
      "name": "tag_27584.py",
      "file": "tests/template_tests/templatetags/tag_27584.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/templatetags/tag_27584.py:badtag",
      "type": "function",
      "name": "badtag",
      "file": "tests/template_tests/templatetags/tag_27584.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/templatetags/tag_27584.py:BadNode",
      "type": "class",
      "name": "BadNode",
      "file": "tests/template_tests/templatetags/tag_27584.py",
      "line": 13
    },
    {
      "id": "tests/template_tests/templatetags/tag_27584.py:BadNode.render",
      "type": "function",
      "name": "BadNode.render",
      "file": "tests/template_tests/templatetags/tag_27584.py",
      "line": 14
    },
    {
      "id": "tests/template_tests/templatetags/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/template_tests/templatetags/__init__.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/templatetags/testtags.py",
      "type": "file",
      "name": "testtags.py",
      "file": "tests/template_tests/templatetags/testtags.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/templatetags/testtags.py:EchoNode",
      "type": "class",
      "name": "EchoNode",
      "file": "tests/template_tests/templatetags/testtags.py",
      "line": 6
    },
    {
      "id": "tests/template_tests/templatetags/testtags.py:EchoNode.render",
      "type": "function",
      "name": "EchoNode.render",
      "file": "tests/template_tests/templatetags/testtags.py",
      "line": 10
    },
    {
      "id": "tests/template_tests/templatetags/testtags.py:echo",
      "type": "function",
      "name": "echo",
      "file": "tests/template_tests/templatetags/testtags.py",
      "line": 15
    },
    {
      "id": "tests/template_tests/templatetags/testtags.py:upper",
      "type": "function",
      "name": "upper",
      "file": "tests/template_tests/templatetags/testtags.py",
      "line": 23
    },
    {
      "id": "tests/template_tests/templatetags/bad_tag.py",
      "type": "file",
      "name": "bad_tag.py",
      "file": "tests/template_tests/templatetags/bad_tag.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/templatetags/bad_tag.py:badtag",
      "type": "function",
      "name": "badtag",
      "file": "tests/template_tests/templatetags/bad_tag.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/templatetags/bad_tag.py:badsimpletag",
      "type": "function",
      "name": "badsimpletag",
      "file": "tests/template_tests/templatetags/bad_tag.py",
      "line": 12
    },
    {
      "id": "tests/template_tests/templatetags/inclusion.py",
      "type": "file",
      "name": "inclusion.py",
      "file": "tests/template_tests/templatetags/inclusion.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/templatetags/inclusion.py:inclusion_no_params",
      "type": "function",
      "name": "inclusion_no_params",
      "file": "tests/template_tests/templatetags/inclusion.py",
      "line": 10
    },
    {
      "id": "tests/template_tests/templatetags/inclusion.py:inclusion_no_params_from_template",
      "type": "function",
      "name": "inclusion_no_params_from_template",
      "file": "tests/template_tests/templatetags/inclusion.py",
      "line": 19
    },
    {
      "id": "tests/template_tests/templatetags/inclusion.py:inclusion_one_param",
      "type": "function",
      "name": "inclusion_one_param",
      "file": "tests/template_tests/templatetags/inclusion.py",
      "line": 28
    },
    {
      "id": "tests/template_tests/templatetags/inclusion.py:inclusion_one_param_from_template",
      "type": "function",
      "name": "inclusion_one_param_from_template",
      "file": "tests/template_tests/templatetags/inclusion.py",
      "line": 37
    },
    {
      "id": "tests/template_tests/templatetags/inclusion.py:inclusion_explicit_no_context",
      "type": "function",
      "name": "inclusion_explicit_no_context",
      "file": "tests/template_tests/templatetags/inclusion.py",
      "line": 46
    },
    {
      "id": "tests/template_tests/templatetags/inclusion.py:inclusion_explicit_no_context_from_template",
      "type": "function",
      "name": "inclusion_explicit_no_context_from_template",
      "file": "tests/template_tests/templatetags/inclusion.py",
      "line": 55
    },
    {
      "id": "tests/template_tests/templatetags/inclusion.py:inclusion_no_params_with_context",
      "type": "function",
      "name": "inclusion_no_params_with_context",
      "file": "tests/template_tests/templatetags/inclusion.py",
      "line": 64
    },
    {
      "id": "tests/template_tests/templatetags/inclusion.py:inclusion_no_params_with_context_from_template",
      "type": "function",
      "name": "inclusion_no_params_with_context_from_template",
      "file": "tests/template_tests/templatetags/inclusion.py",
      "line": 73
    },
    {
      "id": "tests/template_tests/templatetags/inclusion.py:inclusion_params_and_context",
      "type": "function",
      "name": "inclusion_params_and_context",
      "file": "tests/template_tests/templatetags/inclusion.py",
      "line": 88
    },
    {
      "id": "tests/template_tests/templatetags/inclusion.py:inclusion_params_and_context_from_template",
      "type": "function",
      "name": "inclusion_params_and_context_from_template",
      "file": "tests/template_tests/templatetags/inclusion.py",
      "line": 99
    },
    {
      "id": "tests/template_tests/templatetags/inclusion.py:inclusion_two_params",
      "type": "function",
      "name": "inclusion_two_params",
      "file": "tests/template_tests/templatetags/inclusion.py",
      "line": 113
    },
    {
      "id": "tests/template_tests/templatetags/inclusion.py:inclusion_two_params_from_template",
      "type": "function",
      "name": "inclusion_two_params_from_template",
      "file": "tests/template_tests/templatetags/inclusion.py",
      "line": 122
    },
    {
      "id": "tests/template_tests/templatetags/inclusion.py:inclusion_one_default",
      "type": "function",
      "name": "inclusion_one_default",
      "file": "tests/template_tests/templatetags/inclusion.py",
      "line": 131
    },
    {
      "id": "tests/template_tests/templatetags/inclusion.py:inclusion_one_default_from_template",
      "type": "function",
      "name": "inclusion_one_default_from_template",
      "file": "tests/template_tests/templatetags/inclusion.py",
      "line": 140
    },
    {
      "id": "tests/template_tests/templatetags/inclusion.py:inclusion_unlimited_args",
      "type": "function",
      "name": "inclusion_unlimited_args",
      "file": "tests/template_tests/templatetags/inclusion.py",
      "line": 149
    },
    {
      "id": "tests/template_tests/templatetags/inclusion.py:inclusion_unlimited_args_from_template",
      "type": "function",
      "name": "inclusion_unlimited_args_from_template",
      "file": "tests/template_tests/templatetags/inclusion.py",
      "line": 164
    },
    {
      "id": "tests/template_tests/templatetags/inclusion.py:inclusion_only_unlimited_args",
      "type": "function",
      "name": "inclusion_only_unlimited_args",
      "file": "tests/template_tests/templatetags/inclusion.py",
      "line": 179
    },
    {
      "id": "tests/template_tests/templatetags/inclusion.py:inclusion_only_unlimited_args_from_template",
      "type": "function",
      "name": "inclusion_only_unlimited_args_from_template",
      "file": "tests/template_tests/templatetags/inclusion.py",
      "line": 192
    },
    {
      "id": "tests/template_tests/templatetags/inclusion.py:inclusion_tag_use_l10n",
      "type": "function",
      "name": "inclusion_tag_use_l10n",
      "file": "tests/template_tests/templatetags/inclusion.py",
      "line": 205
    },
    {
      "id": "tests/template_tests/templatetags/inclusion.py:inclusion_unlimited_args_kwargs",
      "type": "function",
      "name": "inclusion_unlimited_args_kwargs",
      "file": "tests/template_tests/templatetags/inclusion.py",
      "line": 214
    },
    {
      "id": "tests/template_tests/templatetags/inclusion.py:inclusion_tag_without_context_parameter",
      "type": "function",
      "name": "inclusion_tag_without_context_parameter",
      "file": "tests/template_tests/templatetags/inclusion.py",
      "line": 228
    },
    {
      "id": "tests/template_tests/templatetags/inclusion.py:inclusion_extends1",
      "type": "function",
      "name": "inclusion_extends1",
      "file": "tests/template_tests/templatetags/inclusion.py",
      "line": 237
    },
    {
      "id": "tests/template_tests/templatetags/inclusion.py:inclusion_extends2",
      "type": "function",
      "name": "inclusion_extends2",
      "file": "tests/template_tests/templatetags/inclusion.py",
      "line": 242
    },
    {
      "id": "tests/template_tests/templatetags/subpackage",
      "type": "directory",
      "name": "subpackage",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/template_tests/templatetags/subpackage/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/template_tests/templatetags/subpackage/__init__.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/templatetags/subpackage/echo.py",
      "type": "file",
      "name": "echo.py",
      "file": "tests/template_tests/templatetags/subpackage/echo.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/templatetags/subpackage/echo.py:echo2",
      "type": "function",
      "name": "echo2",
      "file": "tests/template_tests/templatetags/subpackage/echo.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/syntax_tests",
      "type": "directory",
      "name": "syntax_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_comment.py",
      "type": "file",
      "name": "test_comment.py",
      "file": "tests/template_tests/syntax_tests/test_comment.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests",
      "type": "class",
      "name": "CommentSyntaxTests",
      "file": "tests/template_tests/syntax_tests/test_comment.py",
      "line": 6
    },
    {
      "id": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_syntax01",
      "type": "function",
      "name": "CommentSyntaxTests.test_comment_syntax01",
      "file": "tests/template_tests/syntax_tests/test_comment.py",
      "line": 9
    },
    {
      "id": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_syntax02",
      "type": "function",
      "name": "CommentSyntaxTests.test_comment_syntax02",
      "file": "tests/template_tests/syntax_tests/test_comment.py",
      "line": 14
    },
    {
      "id": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_syntax03",
      "type": "function",
      "name": "CommentSyntaxTests.test_comment_syntax03",
      "file": "tests/template_tests/syntax_tests/test_comment.py",
      "line": 19
    },
    {
      "id": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_syntax04",
      "type": "function",
      "name": "CommentSyntaxTests.test_comment_syntax04",
      "file": "tests/template_tests/syntax_tests/test_comment.py",
      "line": 24
    },
    {
      "id": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_syntax05",
      "type": "function",
      "name": "CommentSyntaxTests.test_comment_syntax05",
      "file": "tests/template_tests/syntax_tests/test_comment.py",
      "line": 29
    },
    {
      "id": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_syntax06",
      "type": "function",
      "name": "CommentSyntaxTests.test_comment_syntax06",
      "file": "tests/template_tests/syntax_tests/test_comment.py",
      "line": 34
    },
    {
      "id": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_syntax07",
      "type": "function",
      "name": "CommentSyntaxTests.test_comment_syntax07",
      "file": "tests/template_tests/syntax_tests/test_comment.py",
      "line": 39
    },
    {
      "id": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_syntax08",
      "type": "function",
      "name": "CommentSyntaxTests.test_comment_syntax08",
      "file": "tests/template_tests/syntax_tests/test_comment.py",
      "line": 44
    },
    {
      "id": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_syntax09",
      "type": "function",
      "name": "CommentSyntaxTests.test_comment_syntax09",
      "file": "tests/template_tests/syntax_tests/test_comment.py",
      "line": 49
    },
    {
      "id": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_syntax10",
      "type": "function",
      "name": "CommentSyntaxTests.test_comment_syntax10",
      "file": "tests/template_tests/syntax_tests/test_comment.py",
      "line": 54
    },
    {
      "id": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_syntax11",
      "type": "function",
      "name": "CommentSyntaxTests.test_comment_syntax11",
      "file": "tests/template_tests/syntax_tests/test_comment.py",
      "line": 59
    },
    {
      "id": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_syntax12",
      "type": "function",
      "name": "CommentSyntaxTests.test_comment_syntax12",
      "file": "tests/template_tests/syntax_tests/test_comment.py",
      "line": 64
    },
    {
      "id": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_tag01",
      "type": "function",
      "name": "CommentSyntaxTests.test_comment_tag01",
      "file": "tests/template_tests/syntax_tests/test_comment.py",
      "line": 69
    },
    {
      "id": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_tag02",
      "type": "function",
      "name": "CommentSyntaxTests.test_comment_tag02",
      "file": "tests/template_tests/syntax_tests/test_comment.py",
      "line": 75
    },
    {
      "id": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_tag03",
      "type": "function",
      "name": "CommentSyntaxTests.test_comment_tag03",
      "file": "tests/template_tests/syntax_tests/test_comment.py",
      "line": 80
    },
    {
      "id": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_tag04",
      "type": "function",
      "name": "CommentSyntaxTests.test_comment_tag04",
      "file": "tests/template_tests/syntax_tests/test_comment.py",
      "line": 85
    },
    {
      "id": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_tag05",
      "type": "function",
      "name": "CommentSyntaxTests.test_comment_tag05",
      "file": "tests/template_tests/syntax_tests/test_comment.py",
      "line": 90
    },
    {
      "id": "tests/template_tests/syntax_tests/test_firstof.py",
      "type": "file",
      "name": "test_firstof.py",
      "file": "tests/template_tests/syntax_tests/test_firstof.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests",
      "type": "class",
      "name": "FirstOfTagTests",
      "file": "tests/template_tests/syntax_tests/test_firstof.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof01",
      "type": "function",
      "name": "FirstOfTagTests.test_firstof01",
      "file": "tests/template_tests/syntax_tests/test_firstof.py",
      "line": 10
    },
    {
      "id": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof02",
      "type": "function",
      "name": "FirstOfTagTests.test_firstof02",
      "file": "tests/template_tests/syntax_tests/test_firstof.py",
      "line": 15
    },
    {
      "id": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof03",
      "type": "function",
      "name": "FirstOfTagTests.test_firstof03",
      "file": "tests/template_tests/syntax_tests/test_firstof.py",
      "line": 20
    },
    {
      "id": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof04",
      "type": "function",
      "name": "FirstOfTagTests.test_firstof04",
      "file": "tests/template_tests/syntax_tests/test_firstof.py",
      "line": 25
    },
    {
      "id": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof05",
      "type": "function",
      "name": "FirstOfTagTests.test_firstof05",
      "file": "tests/template_tests/syntax_tests/test_firstof.py",
      "line": 30
    },
    {
      "id": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof06",
      "type": "function",
      "name": "FirstOfTagTests.test_firstof06",
      "file": "tests/template_tests/syntax_tests/test_firstof.py",
      "line": 35
    },
    {
      "id": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof07",
      "type": "function",
      "name": "FirstOfTagTests.test_firstof07",
      "file": "tests/template_tests/syntax_tests/test_firstof.py",
      "line": 40
    },
    {
      "id": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof08",
      "type": "function",
      "name": "FirstOfTagTests.test_firstof08",
      "file": "tests/template_tests/syntax_tests/test_firstof.py",
      "line": 45
    },
    {
      "id": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof09",
      "type": "function",
      "name": "FirstOfTagTests.test_firstof09",
      "file": "tests/template_tests/syntax_tests/test_firstof.py",
      "line": 50
    },
    {
      "id": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof10",
      "type": "function",
      "name": "FirstOfTagTests.test_firstof10",
      "file": "tests/template_tests/syntax_tests/test_firstof.py",
      "line": 55
    },
    {
      "id": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof11",
      "type": "function",
      "name": "FirstOfTagTests.test_firstof11",
      "file": "tests/template_tests/syntax_tests/test_firstof.py",
      "line": 60
    },
    {
      "id": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof12",
      "type": "function",
      "name": "FirstOfTagTests.test_firstof12",
      "file": "tests/template_tests/syntax_tests/test_firstof.py",
      "line": 65
    },
    {
      "id": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof13",
      "type": "function",
      "name": "FirstOfTagTests.test_firstof13",
      "file": "tests/template_tests/syntax_tests/test_firstof.py",
      "line": 70
    },
    {
      "id": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof14",
      "type": "function",
      "name": "FirstOfTagTests.test_firstof14",
      "file": "tests/template_tests/syntax_tests/test_firstof.py",
      "line": 75
    },
    {
      "id": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof15",
      "type": "function",
      "name": "FirstOfTagTests.test_firstof15",
      "file": "tests/template_tests/syntax_tests/test_firstof.py",
      "line": 80
    },
    {
      "id": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_all_false_arguments_asvar",
      "type": "function",
      "name": "FirstOfTagTests.test_all_false_arguments_asvar",
      "file": "tests/template_tests/syntax_tests/test_firstof.py",
      "line": 87
    },
    {
      "id": "tests/template_tests/syntax_tests/test_builtins.py",
      "type": "file",
      "name": "test_builtins.py",
      "file": "tests/template_tests/syntax_tests/test_builtins.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_builtins.py:BuiltinsTests",
      "type": "class",
      "name": "BuiltinsTests",
      "file": "tests/template_tests/syntax_tests/test_builtins.py",
      "line": 6
    },
    {
      "id": "tests/template_tests/syntax_tests/test_builtins.py:BuiltinsTests.test_builtins01",
      "type": "function",
      "name": "BuiltinsTests.test_builtins01",
      "file": "tests/template_tests/syntax_tests/test_builtins.py",
      "line": 9
    },
    {
      "id": "tests/template_tests/syntax_tests/test_builtins.py:BuiltinsTests.test_builtins02",
      "type": "function",
      "name": "BuiltinsTests.test_builtins02",
      "file": "tests/template_tests/syntax_tests/test_builtins.py",
      "line": 14
    },
    {
      "id": "tests/template_tests/syntax_tests/test_builtins.py:BuiltinsTests.test_builtins03",
      "type": "function",
      "name": "BuiltinsTests.test_builtins03",
      "file": "tests/template_tests/syntax_tests/test_builtins.py",
      "line": 19
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py",
      "type": "file",
      "name": "test_extends.py",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "type": "class",
      "name": "InheritanceTests",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 64
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance01",
      "type": "function",
      "name": "InheritanceTests.test_inheritance01",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 68
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance02",
      "type": "function",
      "name": "InheritanceTests.test_inheritance02",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 76
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance03",
      "type": "function",
      "name": "InheritanceTests.test_inheritance03",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 84
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance04",
      "type": "function",
      "name": "InheritanceTests.test_inheritance04",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 92
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance05",
      "type": "function",
      "name": "InheritanceTests.test_inheritance05",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 100
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance06",
      "type": "function",
      "name": "InheritanceTests.test_inheritance06",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 108
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance07",
      "type": "function",
      "name": "InheritanceTests.test_inheritance07",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 116
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance08",
      "type": "function",
      "name": "InheritanceTests.test_inheritance08",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 124
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance09",
      "type": "function",
      "name": "InheritanceTests.test_inheritance09",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 133
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance10",
      "type": "function",
      "name": "InheritanceTests.test_inheritance10",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 141
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance11",
      "type": "function",
      "name": "InheritanceTests.test_inheritance11",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 149
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance12",
      "type": "function",
      "name": "InheritanceTests.test_inheritance12",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 158
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance13",
      "type": "function",
      "name": "InheritanceTests.test_inheritance13",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 167
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance14",
      "type": "function",
      "name": "InheritanceTests.test_inheritance14",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 175
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance15",
      "type": "function",
      "name": "InheritanceTests.test_inheritance15",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 183
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance16",
      "type": "function",
      "name": "InheritanceTests.test_inheritance16",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 191
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance17",
      "type": "function",
      "name": "InheritanceTests.test_inheritance17",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 199
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance18",
      "type": "function",
      "name": "InheritanceTests.test_inheritance18",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 207
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance19",
      "type": "function",
      "name": "InheritanceTests.test_inheritance19",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 215
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance20",
      "type": "function",
      "name": "InheritanceTests.test_inheritance20",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 223
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance21",
      "type": "function",
      "name": "InheritanceTests.test_inheritance21",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 231
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance22",
      "type": "function",
      "name": "InheritanceTests.test_inheritance22",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 239
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance23",
      "type": "function",
      "name": "InheritanceTests.test_inheritance23",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 247
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance24",
      "type": "function",
      "name": "InheritanceTests.test_inheritance24",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 256
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance25",
      "type": "function",
      "name": "InheritanceTests.test_inheritance25",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 267
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance26",
      "type": "function",
      "name": "InheritanceTests.test_inheritance26",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 279
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance27",
      "type": "function",
      "name": "InheritanceTests.test_inheritance27",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 287
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance_28",
      "type": "function",
      "name": "InheritanceTests.test_inheritance_28",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 295
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance29",
      "type": "function",
      "name": "InheritanceTests.test_inheritance29",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 303
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance30",
      "type": "function",
      "name": "InheritanceTests.test_inheritance30",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 311
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance31",
      "type": "function",
      "name": "InheritanceTests.test_inheritance31",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 321
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance32",
      "type": "function",
      "name": "InheritanceTests.test_inheritance32",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 326
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance33",
      "type": "function",
      "name": "InheritanceTests.test_inheritance33",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 331
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance34",
      "type": "function",
      "name": "InheritanceTests.test_inheritance34",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 339
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance35",
      "type": "function",
      "name": "InheritanceTests.test_inheritance35",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 348
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance36",
      "type": "function",
      "name": "InheritanceTests.test_inheritance36",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 357
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance37",
      "type": "function",
      "name": "InheritanceTests.test_inheritance37",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 365
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance38",
      "type": "function",
      "name": "InheritanceTests.test_inheritance38",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 374
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance39",
      "type": "function",
      "name": "InheritanceTests.test_inheritance39",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 384
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance40",
      "type": "function",
      "name": "InheritanceTests.test_inheritance40",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 389
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance41",
      "type": "function",
      "name": "InheritanceTests.test_inheritance41",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 394
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance42",
      "type": "function",
      "name": "InheritanceTests.test_inheritance42",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 399
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance_empty",
      "type": "function",
      "name": "InheritanceTests.test_inheritance_empty",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 407
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_extends_duplicate",
      "type": "function",
      "name": "InheritanceTests.test_extends_duplicate",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 412
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_duplicate_block",
      "type": "function",
      "name": "InheritanceTests.test_duplicate_block",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 418
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:ExtendsNodeTests",
      "type": "class",
      "name": "ExtendsNodeTests",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 424
    },
    {
      "id": "tests/template_tests/syntax_tests/test_extends.py:ExtendsNodeTests.test_extends_node_repr",
      "type": "function",
      "name": "ExtendsNodeTests.test_extends_node_repr",
      "file": "tests/template_tests/syntax_tests/test_extends.py",
      "line": 425
    },
    {
      "id": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "type": "file",
      "name": "test_width_ratio.py",
      "file": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests",
      "type": "class",
      "name": "WidthRatioTagTests",
      "file": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio01",
      "type": "function",
      "name": "WidthRatioTagTests.test_widthratio01",
      "file": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio02",
      "type": "function",
      "name": "WidthRatioTagTests.test_widthratio02",
      "file": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "line": 16
    },
    {
      "id": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio03",
      "type": "function",
      "name": "WidthRatioTagTests.test_widthratio03",
      "file": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "line": 21
    },
    {
      "id": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio04",
      "type": "function",
      "name": "WidthRatioTagTests.test_widthratio04",
      "file": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "line": 26
    },
    {
      "id": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio05",
      "type": "function",
      "name": "WidthRatioTagTests.test_widthratio05",
      "file": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "line": 31
    },
    {
      "id": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio06",
      "type": "function",
      "name": "WidthRatioTagTests.test_widthratio06",
      "file": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "line": 36
    },
    {
      "id": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio07",
      "type": "function",
      "name": "WidthRatioTagTests.test_widthratio07",
      "file": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "line": 44
    },
    {
      "id": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio08",
      "type": "function",
      "name": "WidthRatioTagTests.test_widthratio08",
      "file": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "line": 53
    },
    {
      "id": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio09",
      "type": "function",
      "name": "WidthRatioTagTests.test_widthratio09",
      "file": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "line": 58
    },
    {
      "id": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio10",
      "type": "function",
      "name": "WidthRatioTagTests.test_widthratio10",
      "file": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "line": 63
    },
    {
      "id": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio11",
      "type": "function",
      "name": "WidthRatioTagTests.test_widthratio11",
      "file": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "line": 68
    },
    {
      "id": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio12a",
      "type": "function",
      "name": "WidthRatioTagTests.test_widthratio12a",
      "file": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "line": 78
    },
    {
      "id": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio12b",
      "type": "function",
      "name": "WidthRatioTagTests.test_widthratio12b",
      "file": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "line": 83
    },
    {
      "id": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio13a",
      "type": "function",
      "name": "WidthRatioTagTests.test_widthratio13a",
      "file": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "line": 88
    },
    {
      "id": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio13b",
      "type": "function",
      "name": "WidthRatioTagTests.test_widthratio13b",
      "file": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "line": 93
    },
    {
      "id": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio14a",
      "type": "function",
      "name": "WidthRatioTagTests.test_widthratio14a",
      "file": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "line": 98
    },
    {
      "id": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio14b",
      "type": "function",
      "name": "WidthRatioTagTests.test_widthratio14b",
      "file": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "line": 103
    },
    {
      "id": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio15",
      "type": "function",
      "name": "WidthRatioTagTests.test_widthratio15",
      "file": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "line": 108
    },
    {
      "id": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio16",
      "type": "function",
      "name": "WidthRatioTagTests.test_widthratio16",
      "file": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "line": 117
    },
    {
      "id": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio17",
      "type": "function",
      "name": "WidthRatioTagTests.test_widthratio17",
      "file": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "line": 122
    },
    {
      "id": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio18",
      "type": "function",
      "name": "WidthRatioTagTests.test_widthratio18",
      "file": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "line": 127
    },
    {
      "id": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio19",
      "type": "function",
      "name": "WidthRatioTagTests.test_widthratio19",
      "file": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "line": 132
    },
    {
      "id": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio20",
      "type": "function",
      "name": "WidthRatioTagTests.test_widthratio20",
      "file": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "line": 137
    },
    {
      "id": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio21",
      "type": "function",
      "name": "WidthRatioTagTests.test_widthratio21",
      "file": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "line": 142
    },
    {
      "id": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_zerodivisionerror_as_var",
      "type": "function",
      "name": "WidthRatioTagTests.test_zerodivisionerror_as_var",
      "file": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "line": 147
    },
    {
      "id": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_typeerror_as_var",
      "type": "function",
      "name": "WidthRatioTagTests.test_typeerror_as_var",
      "file": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "line": 152
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py",
      "type": "file",
      "name": "test_basic.py",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "type": "class",
      "name": "BasicSyntaxTests",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 13
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax01",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax01",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 16
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax02",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax02",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 24
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax03",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax03",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 33
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax04",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax04",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 41
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax06",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax06",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 52
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax07",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax07",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 60
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax08",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax08",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 68
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax09",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax09",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 76
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax10",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax10",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 84
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax11",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax11",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 92
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax12",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax12",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 104
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax13",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax13",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 115
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax14",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax14",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 120
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax15",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax15",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 125
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax16",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax16",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 130
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax17",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax17",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 135
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax18",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax18",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 140
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax19",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax19",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 149
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax20",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax20",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 161
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax20b",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax20b",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 173
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax21",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax21",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 185
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax22",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax22",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 190
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax23",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax23",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 195
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax24",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax24",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 204
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax25",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax25",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 214
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax26",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax26",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 219
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax27",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax27",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 224
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax28",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax28",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 231
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax29",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax29",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 239
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax30",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax30",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 249
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax31",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax31",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 257
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax32",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax32",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 265
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax33",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax33",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 273
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax34",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax34",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 281
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax35",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax35",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 290
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax36",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax36",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 295
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax37",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax37",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 300
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax38",
      "type": "function",
      "name": "BasicSyntaxTests.test_basic_syntax38",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 308
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_unclosed_block",
      "type": "function",
      "name": "BasicSyntaxTests.test_unclosed_block",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 316
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_unclosed_block2",
      "type": "function",
      "name": "BasicSyntaxTests.test_unclosed_block2",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 322
    },
    {
      "id": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_ignores_strings_that_look_like_format_interpolation",
      "type": "function",
      "name": "BasicSyntaxTests.test_ignores_strings_that_look_like_format_interpolation",
      "file": "tests/template_tests/syntax_tests/test_basic.py",
      "line": 328
    },
    {
      "id": "tests/template_tests/syntax_tests/test_setup.py",
      "type": "file",
      "name": "test_setup.py",
      "file": "tests/template_tests/syntax_tests/test_setup.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_setup.py:SetupTests",
      "type": "class",
      "name": "SetupTests",
      "file": "tests/template_tests/syntax_tests/test_setup.py",
      "line": 6
    },
    {
      "id": "tests/template_tests/syntax_tests/test_setup.py:SetupTests.test_setup",
      "type": "function",
      "name": "SetupTests.test_setup",
      "file": "tests/template_tests/syntax_tests/test_setup.py",
      "line": 8
    },
    {
      "id": "tests/template_tests/syntax_tests/test_setup.py:SetupTests.test_setup.method",
      "type": "function",
      "name": "SetupTests.test_setup.method",
      "file": "tests/template_tests/syntax_tests/test_setup.py",
      "line": 15
    },
    {
      "id": "tests/template_tests/syntax_tests/test_with.py",
      "type": "file",
      "name": "test_with.py",
      "file": "tests/template_tests/syntax_tests/test_with.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_with.py:WithTagTests",
      "type": "class",
      "name": "WithTagTests",
      "file": "tests/template_tests/syntax_tests/test_with.py",
      "line": 8
    },
    {
      "id": "tests/template_tests/syntax_tests/test_with.py:WithTagTests.test_with01",
      "type": "function",
      "name": "WithTagTests.test_with01",
      "file": "tests/template_tests/syntax_tests/test_with.py",
      "line": 12
    },
    {
      "id": "tests/template_tests/syntax_tests/test_with.py:WithTagTests.test_legacywith01",
      "type": "function",
      "name": "WithTagTests.test_legacywith01",
      "file": "tests/template_tests/syntax_tests/test_with.py",
      "line": 17
    },
    {
      "id": "tests/template_tests/syntax_tests/test_with.py:WithTagTests.test_with02",
      "type": "function",
      "name": "WithTagTests.test_with02",
      "file": "tests/template_tests/syntax_tests/test_with.py",
      "line": 24
    },
    {
      "id": "tests/template_tests/syntax_tests/test_with.py:WithTagTests.test_legacywith02",
      "type": "function",
      "name": "WithTagTests.test_legacywith02",
      "file": "tests/template_tests/syntax_tests/test_with.py",
      "line": 34
    },
    {
      "id": "tests/template_tests/syntax_tests/test_with.py:WithTagTests.test_with03",
      "type": "function",
      "name": "WithTagTests.test_with03",
      "file": "tests/template_tests/syntax_tests/test_with.py",
      "line": 42
    },
    {
      "id": "tests/template_tests/syntax_tests/test_with.py:WithTagTests.test_with_error01",
      "type": "function",
      "name": "WithTagTests.test_with_error01",
      "file": "tests/template_tests/syntax_tests/test_with.py",
      "line": 47
    },
    {
      "id": "tests/template_tests/syntax_tests/test_with.py:WithTagTests.test_with_error02",
      "type": "function",
      "name": "WithTagTests.test_with_error02",
      "file": "tests/template_tests/syntax_tests/test_with.py",
      "line": 52
    },
    {
      "id": "tests/template_tests/syntax_tests/test_with.py:WithNodeTests",
      "type": "class",
      "name": "WithNodeTests",
      "file": "tests/template_tests/syntax_tests/test_with.py",
      "line": 57
    },
    {
      "id": "tests/template_tests/syntax_tests/test_with.py:WithNodeTests.test_repr",
      "type": "function",
      "name": "WithNodeTests.test_repr",
      "file": "tests/template_tests/syntax_tests/test_with.py",
      "line": 58
    },
    {
      "id": "tests/template_tests/syntax_tests/test_list_index.py",
      "type": "file",
      "name": "test_list_index.py",
      "file": "tests/template_tests/syntax_tests/test_list_index.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_list_index.py:ListIndexTests",
      "type": "class",
      "name": "ListIndexTests",
      "file": "tests/template_tests/syntax_tests/test_list_index.py",
      "line": 6
    },
    {
      "id": "tests/template_tests/syntax_tests/test_list_index.py:ListIndexTests.test_list_index01",
      "type": "function",
      "name": "ListIndexTests.test_list_index01",
      "file": "tests/template_tests/syntax_tests/test_list_index.py",
      "line": 9
    },
    {
      "id": "tests/template_tests/syntax_tests/test_list_index.py:ListIndexTests.test_list_index02",
      "type": "function",
      "name": "ListIndexTests.test_list_index02",
      "file": "tests/template_tests/syntax_tests/test_list_index.py",
      "line": 18
    },
    {
      "id": "tests/template_tests/syntax_tests/test_list_index.py:ListIndexTests.test_list_index03",
      "type": "function",
      "name": "ListIndexTests.test_list_index03",
      "file": "tests/template_tests/syntax_tests/test_list_index.py",
      "line": 29
    },
    {
      "id": "tests/template_tests/syntax_tests/test_list_index.py:ListIndexTests.test_list_index04",
      "type": "function",
      "name": "ListIndexTests.test_list_index04",
      "file": "tests/template_tests/syntax_tests/test_list_index.py",
      "line": 40
    },
    {
      "id": "tests/template_tests/syntax_tests/test_list_index.py:ListIndexTests.test_list_index05",
      "type": "function",
      "name": "ListIndexTests.test_list_index05",
      "file": "tests/template_tests/syntax_tests/test_list_index.py",
      "line": 51
    },
    {
      "id": "tests/template_tests/syntax_tests/test_list_index.py:ListIndexTests.test_list_index06",
      "type": "function",
      "name": "ListIndexTests.test_list_index06",
      "file": "tests/template_tests/syntax_tests/test_list_index.py",
      "line": 59
    },
    {
      "id": "tests/template_tests/syntax_tests/test_list_index.py:ListIndexTests.test_list_index07",
      "type": "function",
      "name": "ListIndexTests.test_list_index07",
      "file": "tests/template_tests/syntax_tests/test_list_index.py",
      "line": 69
    },
    {
      "id": "tests/template_tests/syntax_tests/test_now.py",
      "type": "file",
      "name": "test_now.py",
      "file": "tests/template_tests/syntax_tests/test_now.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_now.py:NowTagTests",
      "type": "class",
      "name": "NowTagTests",
      "file": "tests/template_tests/syntax_tests/test_now.py",
      "line": 10
    },
    {
      "id": "tests/template_tests/syntax_tests/test_now.py:NowTagTests.test_now01",
      "type": "function",
      "name": "NowTagTests.test_now01",
      "file": "tests/template_tests/syntax_tests/test_now.py",
      "line": 13
    },
    {
      "id": "tests/template_tests/syntax_tests/test_now.py:NowTagTests.test_now02",
      "type": "function",
      "name": "NowTagTests.test_now02",
      "file": "tests/template_tests/syntax_tests/test_now.py",
      "line": 24
    },
    {
      "id": "tests/template_tests/syntax_tests/test_now.py:NowTagTests.test_now03",
      "type": "function",
      "name": "NowTagTests.test_now03",
      "file": "tests/template_tests/syntax_tests/test_now.py",
      "line": 29
    },
    {
      "id": "tests/template_tests/syntax_tests/test_now.py:NowTagTests.test_now04",
      "type": "function",
      "name": "NowTagTests.test_now04",
      "file": "tests/template_tests/syntax_tests/test_now.py",
      "line": 39
    },
    {
      "id": "tests/template_tests/syntax_tests/test_now.py:NowTagTests.test_now05",
      "type": "function",
      "name": "NowTagTests.test_now05",
      "file": "tests/template_tests/syntax_tests/test_now.py",
      "line": 44
    },
    {
      "id": "tests/template_tests/syntax_tests/test_now.py:NowTagTests.test_now06",
      "type": "function",
      "name": "NowTagTests.test_now06",
      "file": "tests/template_tests/syntax_tests/test_now.py",
      "line": 51
    },
    {
      "id": "tests/template_tests/syntax_tests/test_now.py:NowTagTests.test_now07",
      "type": "function",
      "name": "NowTagTests.test_now07",
      "file": "tests/template_tests/syntax_tests/test_now.py",
      "line": 58
    },
    {
      "id": "tests/template_tests/syntax_tests/test_now.py:NowTagTests.test_now_args",
      "type": "function",
      "name": "NowTagTests.test_now_args",
      "file": "tests/template_tests/syntax_tests/test_now.py",
      "line": 65
    },
    {
      "id": "tests/template_tests/syntax_tests/test_multiline.py",
      "type": "file",
      "name": "test_multiline.py",
      "file": "tests/template_tests/syntax_tests/test_multiline.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_multiline.py:MultilineTests",
      "type": "class",
      "name": "MultilineTests",
      "file": "tests/template_tests/syntax_tests/test_multiline.py",
      "line": 15
    },
    {
      "id": "tests/template_tests/syntax_tests/test_multiline.py:MultilineTests.test_multiline01",
      "type": "function",
      "name": "MultilineTests.test_multiline01",
      "file": "tests/template_tests/syntax_tests/test_multiline.py",
      "line": 18
    },
    {
      "id": "tests/template_tests/syntax_tests/test_autoescape.py",
      "type": "file",
      "name": "test_autoescape.py",
      "file": "tests/template_tests/syntax_tests/test_autoescape.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests",
      "type": "class",
      "name": "AutoescapeTagTests",
      "file": "tests/template_tests/syntax_tests/test_autoescape.py",
      "line": 8
    },
    {
      "id": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_tag01",
      "type": "function",
      "name": "AutoescapeTagTests.test_autoescape_tag01",
      "file": "tests/template_tests/syntax_tests/test_autoescape.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_tag02",
      "type": "function",
      "name": "AutoescapeTagTests.test_autoescape_tag02",
      "file": "tests/template_tests/syntax_tests/test_autoescape.py",
      "line": 16
    },
    {
      "id": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_tag03",
      "type": "function",
      "name": "AutoescapeTagTests.test_autoescape_tag03",
      "file": "tests/template_tests/syntax_tests/test_autoescape.py",
      "line": 21
    },
    {
      "id": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_tag04",
      "type": "function",
      "name": "AutoescapeTagTests.test_autoescape_tag04",
      "file": "tests/template_tests/syntax_tests/test_autoescape.py",
      "line": 30
    },
    {
      "id": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_tag05",
      "type": "function",
      "name": "AutoescapeTagTests.test_autoescape_tag05",
      "file": "tests/template_tests/syntax_tests/test_autoescape.py",
      "line": 35
    },
    {
      "id": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_tag06",
      "type": "function",
      "name": "AutoescapeTagTests.test_autoescape_tag06",
      "file": "tests/template_tests/syntax_tests/test_autoescape.py",
      "line": 42
    },
    {
      "id": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_tag07",
      "type": "function",
      "name": "AutoescapeTagTests.test_autoescape_tag07",
      "file": "tests/template_tests/syntax_tests/test_autoescape.py",
      "line": 47
    },
    {
      "id": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_tag08",
      "type": "function",
      "name": "AutoescapeTagTests.test_autoescape_tag08",
      "file": "tests/template_tests/syntax_tests/test_autoescape.py",
      "line": 55
    },
    {
      "id": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_tag09",
      "type": "function",
      "name": "AutoescapeTagTests.test_autoescape_tag09",
      "file": "tests/template_tests/syntax_tests/test_autoescape.py",
      "line": 65
    },
    {
      "id": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_tag10",
      "type": "function",
      "name": "AutoescapeTagTests.test_autoescape_tag10",
      "file": "tests/template_tests/syntax_tests/test_autoescape.py",
      "line": 70
    },
    {
      "id": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_filtertag01",
      "type": "function",
      "name": "AutoescapeTagTests.test_autoescape_filtertag01",
      "file": "tests/template_tests/syntax_tests/test_autoescape.py",
      "line": 75
    },
    {
      "id": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_ifequal01",
      "type": "function",
      "name": "AutoescapeTagTests.test_autoescape_ifequal01",
      "file": "tests/template_tests/syntax_tests/test_autoescape.py",
      "line": 85
    },
    {
      "id": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_filters01",
      "type": "function",
      "name": "AutoescapeTagTests.test_autoescape_filters01",
      "file": "tests/template_tests/syntax_tests/test_autoescape.py",
      "line": 94
    },
    {
      "id": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_filters02",
      "type": "function",
      "name": "AutoescapeTagTests.test_autoescape_filters02",
      "file": "tests/template_tests/syntax_tests/test_autoescape.py",
      "line": 99
    },
    {
      "id": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_literals01",
      "type": "function",
      "name": "AutoescapeTagTests.test_autoescape_literals01",
      "file": "tests/template_tests/syntax_tests/test_autoescape.py",
      "line": 104
    },
    {
      "id": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_stringiterations01",
      "type": "function",
      "name": "AutoescapeTagTests.test_autoescape_stringiterations01",
      "file": "tests/template_tests/syntax_tests/test_autoescape.py",
      "line": 112
    },
    {
      "id": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_lookup01",
      "type": "function",
      "name": "AutoescapeTagTests.test_autoescape_lookup01",
      "file": "tests/template_tests/syntax_tests/test_autoescape.py",
      "line": 120
    },
    {
      "id": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_invalid_arg",
      "type": "function",
      "name": "AutoescapeTagTests.test_invalid_arg",
      "file": "tests/template_tests/syntax_tests/test_autoescape.py",
      "line": 128
    },
    {
      "id": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_no_arg",
      "type": "function",
      "name": "AutoescapeTagTests.test_no_arg",
      "file": "tests/template_tests/syntax_tests/test_autoescape.py",
      "line": 134
    },
    {
      "id": "tests/template_tests/syntax_tests/test_static.py",
      "type": "file",
      "name": "test_static.py",
      "file": "tests/template_tests/syntax_tests/test_static.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests",
      "type": "class",
      "name": "StaticTagTests",
      "file": "tests/template_tests/syntax_tests/test_static.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests.test_static_prefixtag01",
      "type": "function",
      "name": "StaticTagTests.test_static_prefixtag01",
      "file": "tests/template_tests/syntax_tests/test_static.py",
      "line": 15
    },
    {
      "id": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests.test_static_prefixtag02",
      "type": "function",
      "name": "StaticTagTests.test_static_prefixtag02",
      "file": "tests/template_tests/syntax_tests/test_static.py",
      "line": 21
    },
    {
      "id": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests.test_static_prefixtag03",
      "type": "function",
      "name": "StaticTagTests.test_static_prefixtag03",
      "file": "tests/template_tests/syntax_tests/test_static.py",
      "line": 26
    },
    {
      "id": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests.test_static_prefixtag04",
      "type": "function",
      "name": "StaticTagTests.test_static_prefixtag04",
      "file": "tests/template_tests/syntax_tests/test_static.py",
      "line": 32
    },
    {
      "id": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests.test_static_prefixtag_without_as",
      "type": "function",
      "name": "StaticTagTests.test_static_prefixtag_without_as",
      "file": "tests/template_tests/syntax_tests/test_static.py",
      "line": 37
    },
    {
      "id": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests.test_static_statictag01",
      "type": "function",
      "name": "StaticTagTests.test_static_statictag01",
      "file": "tests/template_tests/syntax_tests/test_static.py",
      "line": 43
    },
    {
      "id": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests.test_static_statictag02",
      "type": "function",
      "name": "StaticTagTests.test_static_statictag02",
      "file": "tests/template_tests/syntax_tests/test_static.py",
      "line": 48
    },
    {
      "id": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests.test_static_statictag03",
      "type": "function",
      "name": "StaticTagTests.test_static_statictag03",
      "file": "tests/template_tests/syntax_tests/test_static.py",
      "line": 53
    },
    {
      "id": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests.test_static_statictag04",
      "type": "function",
      "name": "StaticTagTests.test_static_statictag04",
      "file": "tests/template_tests/syntax_tests/test_static.py",
      "line": 58
    },
    {
      "id": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests.test_static_quotes_urls",
      "type": "function",
      "name": "StaticTagTests.test_static_quotes_urls",
      "file": "tests/template_tests/syntax_tests/test_static.py",
      "line": 63
    },
    {
      "id": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests.test_static_statictag_without_path",
      "type": "function",
      "name": "StaticTagTests.test_static_statictag_without_path",
      "file": "tests/template_tests/syntax_tests/test_static.py",
      "line": 68
    },
    {
      "id": "tests/template_tests/syntax_tests/test_simple_tag.py",
      "type": "file",
      "name": "test_simple_tag.py",
      "file": "tests/template_tests/syntax_tests/test_simple_tag.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_simple_tag.py:SimpleTagTests",
      "type": "class",
      "name": "SimpleTagTests",
      "file": "tests/template_tests/syntax_tests/test_simple_tag.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/syntax_tests/test_simple_tag.py:SimpleTagTests.test_simpletag_renamed01",
      "type": "function",
      "name": "SimpleTagTests.test_simpletag_renamed01",
      "file": "tests/template_tests/syntax_tests/test_simple_tag.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/syntax_tests/test_simple_tag.py:SimpleTagTests.test_simpletag_renamed02",
      "type": "function",
      "name": "SimpleTagTests.test_simpletag_renamed02",
      "file": "tests/template_tests/syntax_tests/test_simple_tag.py",
      "line": 16
    },
    {
      "id": "tests/template_tests/syntax_tests/test_simple_tag.py:SimpleTagTests.test_simpletag_renamed03",
      "type": "function",
      "name": "SimpleTagTests.test_simpletag_renamed03",
      "file": "tests/template_tests/syntax_tests/test_simple_tag.py",
      "line": 21
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "type": "file",
      "name": "test_filter_syntax.py",
      "file": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests",
      "type": "class",
      "name": "FilterSyntaxTests",
      "file": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax01",
      "type": "function",
      "name": "FilterSyntaxTests.test_filter_syntax01",
      "file": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "line": 10
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax02",
      "type": "function",
      "name": "FilterSyntaxTests.test_filter_syntax02",
      "file": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "line": 18
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax03",
      "type": "function",
      "name": "FilterSyntaxTests.test_filter_syntax03",
      "file": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "line": 26
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax04",
      "type": "function",
      "name": "FilterSyntaxTests.test_filter_syntax04",
      "file": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "line": 34
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax05",
      "type": "function",
      "name": "FilterSyntaxTests.test_filter_syntax05",
      "file": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "line": 42
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax06",
      "type": "function",
      "name": "FilterSyntaxTests.test_filter_syntax06",
      "file": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "line": 51
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax07",
      "type": "function",
      "name": "FilterSyntaxTests.test_filter_syntax07",
      "file": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "line": 60
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax08",
      "type": "function",
      "name": "FilterSyntaxTests.test_filter_syntax08",
      "file": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "line": 72
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax08_multi_line",
      "type": "function",
      "name": "FilterSyntaxTests.test_filter_syntax08_multi_line",
      "file": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "line": 80
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax09",
      "type": "function",
      "name": "FilterSyntaxTests.test_filter_syntax09",
      "file": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "line": 89
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax10",
      "type": "function",
      "name": "FilterSyntaxTests.test_filter_syntax10",
      "file": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "line": 97
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax11",
      "type": "function",
      "name": "FilterSyntaxTests.test_filter_syntax11",
      "file": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "line": 105
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax13",
      "type": "function",
      "name": "FilterSyntaxTests.test_filter_syntax13",
      "file": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "line": 113
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax14",
      "type": "function",
      "name": "FilterSyntaxTests.test_filter_syntax14",
      "file": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "line": 125
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax15",
      "type": "function",
      "name": "FilterSyntaxTests.test_filter_syntax15",
      "file": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "line": 134
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax16",
      "type": "function",
      "name": "FilterSyntaxTests.test_filter_syntax16",
      "file": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "line": 142
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax17",
      "type": "function",
      "name": "FilterSyntaxTests.test_filter_syntax17",
      "file": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "line": 150
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax18",
      "type": "function",
      "name": "FilterSyntaxTests.test_filter_syntax18",
      "file": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "line": 158
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax19",
      "type": "function",
      "name": "FilterSyntaxTests.test_filter_syntax19",
      "file": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "line": 166
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax20",
      "type": "function",
      "name": "FilterSyntaxTests.test_filter_syntax20",
      "file": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "line": 174
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax21",
      "type": "function",
      "name": "FilterSyntaxTests.test_filter_syntax21",
      "file": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "line": 182
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax22",
      "type": "function",
      "name": "FilterSyntaxTests.test_filter_syntax22",
      "file": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "line": 194
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax23",
      "type": "function",
      "name": "FilterSyntaxTests.test_filter_syntax23",
      "file": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "line": 206
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax24",
      "type": "function",
      "name": "FilterSyntaxTests.test_filter_syntax24",
      "file": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "line": 216
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax25",
      "type": "function",
      "name": "FilterSyntaxTests.test_filter_syntax25",
      "file": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "line": 226
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_type_error_attribute",
      "type": "function",
      "name": "FilterSyntaxTests.test_type_error_attribute",
      "file": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "line": 235
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_changed.py",
      "type": "file",
      "name": "test_if_changed.py",
      "file": "tests/template_tests/syntax_tests/test_if_changed.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests",
      "type": "class",
      "name": "IfChangedTagTests",
      "file": "tests/template_tests/syntax_tests/test_if_changed.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged01",
      "type": "function",
      "name": "IfChangedTagTests.test_ifchanged01",
      "file": "tests/template_tests/syntax_tests/test_if_changed.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged02",
      "type": "function",
      "name": "IfChangedTagTests.test_ifchanged02",
      "file": "tests/template_tests/syntax_tests/test_if_changed.py",
      "line": 16
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged03",
      "type": "function",
      "name": "IfChangedTagTests.test_ifchanged03",
      "file": "tests/template_tests/syntax_tests/test_if_changed.py",
      "line": 21
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged04",
      "type": "function",
      "name": "IfChangedTagTests.test_ifchanged04",
      "file": "tests/template_tests/syntax_tests/test_if_changed.py",
      "line": 28
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged05",
      "type": "function",
      "name": "IfChangedTagTests.test_ifchanged05",
      "file": "tests/template_tests/syntax_tests/test_if_changed.py",
      "line": 35
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged06",
      "type": "function",
      "name": "IfChangedTagTests.test_ifchanged06",
      "file": "tests/template_tests/syntax_tests/test_if_changed.py",
      "line": 42
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged07",
      "type": "function",
      "name": "IfChangedTagTests.test_ifchanged07",
      "file": "tests/template_tests/syntax_tests/test_if_changed.py",
      "line": 50
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged08",
      "type": "function",
      "name": "IfChangedTagTests.test_ifchanged08",
      "file": "tests/template_tests/syntax_tests/test_if_changed.py",
      "line": 57
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged_param01",
      "type": "function",
      "name": "IfChangedTagTests.test_ifchanged_param01",
      "file": "tests/template_tests/syntax_tests/test_if_changed.py",
      "line": 66
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged_param02",
      "type": "function",
      "name": "IfChangedTagTests.test_ifchanged_param02",
      "file": "tests/template_tests/syntax_tests/test_if_changed.py",
      "line": 75
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged_param03",
      "type": "function",
      "name": "IfChangedTagTests.test_ifchanged_param03",
      "file": "tests/template_tests/syntax_tests/test_if_changed.py",
      "line": 82
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged_param04",
      "type": "function",
      "name": "IfChangedTagTests.test_ifchanged_param04",
      "file": "tests/template_tests/syntax_tests/test_if_changed.py",
      "line": 92
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged_param05",
      "type": "function",
      "name": "IfChangedTagTests.test_ifchanged_param05",
      "file": "tests/template_tests/syntax_tests/test_if_changed.py",
      "line": 106
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged_else01",
      "type": "function",
      "name": "IfChangedTagTests.test_ifchanged_else01",
      "file": "tests/template_tests/syntax_tests/test_if_changed.py",
      "line": 120
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged_else02",
      "type": "function",
      "name": "IfChangedTagTests.test_ifchanged_else02",
      "file": "tests/template_tests/syntax_tests/test_if_changed.py",
      "line": 130
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged_else03",
      "type": "function",
      "name": "IfChangedTagTests.test_ifchanged_else03",
      "file": "tests/template_tests/syntax_tests/test_if_changed.py",
      "line": 137
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged_else04",
      "type": "function",
      "name": "IfChangedTagTests.test_ifchanged_else04",
      "file": "tests/template_tests/syntax_tests/test_if_changed.py",
      "line": 144
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged_filter_ws",
      "type": "function",
      "name": "IfChangedTagTests.test_ifchanged_filter_ws",
      "file": "tests/template_tests/syntax_tests/test_if_changed.py",
      "line": 151
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTests",
      "type": "class",
      "name": "IfChangedTests",
      "file": "tests/template_tests/syntax_tests/test_if_changed.py",
      "line": 159
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTests.setUpClass",
      "type": "function",
      "name": "IfChangedTests.setUpClass",
      "file": "tests/template_tests/syntax_tests/test_if_changed.py",
      "line": 162
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTests.test_ifchanged_concurrency",
      "type": "function",
      "name": "IfChangedTests.test_ifchanged_concurrency",
      "file": "tests/template_tests/syntax_tests/test_if_changed.py",
      "line": 166
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTests.test_ifchanged_concurrency.gen",
      "type": "function",
      "name": "IfChangedTests.test_ifchanged_concurrency.gen",
      "file": "tests/template_tests/syntax_tests/test_if_changed.py",
      "line": 178
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTests.test_ifchanged_render_once",
      "type": "function",
      "name": "IfChangedTests.test_ifchanged_render_once",
      "file": "tests/template_tests/syntax_tests/test_if_changed.py",
      "line": 194
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTests.test_include",
      "type": "function",
      "name": "IfChangedTests.test_include",
      "file": "tests/template_tests/syntax_tests/test_if_changed.py",
      "line": 202
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTests.test_include_state",
      "type": "function",
      "name": "IfChangedTests.test_include_state",
      "file": "tests/template_tests/syntax_tests/test_if_changed.py",
      "line": 216
    },
    {
      "id": "tests/template_tests/syntax_tests/test_spaceless.py",
      "type": "file",
      "name": "test_spaceless.py",
      "file": "tests/template_tests/syntax_tests/test_spaceless.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_spaceless.py:SpacelessTagTests",
      "type": "class",
      "name": "SpacelessTagTests",
      "file": "tests/template_tests/syntax_tests/test_spaceless.py",
      "line": 6
    },
    {
      "id": "tests/template_tests/syntax_tests/test_spaceless.py:SpacelessTagTests.test_spaceless01",
      "type": "function",
      "name": "SpacelessTagTests.test_spaceless01",
      "file": "tests/template_tests/syntax_tests/test_spaceless.py",
      "line": 9
    },
    {
      "id": "tests/template_tests/syntax_tests/test_spaceless.py:SpacelessTagTests.test_spaceless02",
      "type": "function",
      "name": "SpacelessTagTests.test_spaceless02",
      "file": "tests/template_tests/syntax_tests/test_spaceless.py",
      "line": 14
    },
    {
      "id": "tests/template_tests/syntax_tests/test_spaceless.py:SpacelessTagTests.test_spaceless03",
      "type": "function",
      "name": "SpacelessTagTests.test_spaceless03",
      "file": "tests/template_tests/syntax_tests/test_spaceless.py",
      "line": 19
    },
    {
      "id": "tests/template_tests/syntax_tests/test_spaceless.py:SpacelessTagTests.test_spaceless04",
      "type": "function",
      "name": "SpacelessTagTests.test_spaceless04",
      "file": "tests/template_tests/syntax_tests/test_spaceless.py",
      "line": 24
    },
    {
      "id": "tests/template_tests/syntax_tests/test_spaceless.py:SpacelessTagTests.test_spaceless05",
      "type": "function",
      "name": "SpacelessTagTests.test_spaceless05",
      "file": "tests/template_tests/syntax_tests/test_spaceless.py",
      "line": 31
    },
    {
      "id": "tests/template_tests/syntax_tests/test_spaceless.py:SpacelessTagTests.test_spaceless06",
      "type": "function",
      "name": "SpacelessTagTests.test_spaceless06",
      "file": "tests/template_tests/syntax_tests/test_spaceless.py",
      "line": 36
    },
    {
      "id": "tests/template_tests/syntax_tests/test_lorem.py",
      "type": "file",
      "name": "test_lorem.py",
      "file": "tests/template_tests/syntax_tests/test_lorem.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_lorem.py:LoremTagTests",
      "type": "class",
      "name": "LoremTagTests",
      "file": "tests/template_tests/syntax_tests/test_lorem.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/syntax_tests/test_lorem.py:LoremTagTests.test_lorem1",
      "type": "function",
      "name": "LoremTagTests.test_lorem1",
      "file": "tests/template_tests/syntax_tests/test_lorem.py",
      "line": 10
    },
    {
      "id": "tests/template_tests/syntax_tests/test_lorem.py:LoremTagTests.test_lorem_random",
      "type": "function",
      "name": "LoremTagTests.test_lorem_random",
      "file": "tests/template_tests/syntax_tests/test_lorem.py",
      "line": 15
    },
    {
      "id": "tests/template_tests/syntax_tests/test_exceptions.py",
      "type": "file",
      "name": "test_exceptions.py",
      "file": "tests/template_tests/syntax_tests/test_exceptions.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_exceptions.py:ExceptionsTests",
      "type": "class",
      "name": "ExceptionsTests",
      "file": "tests/template_tests/syntax_tests/test_exceptions.py",
      "line": 8
    },
    {
      "id": "tests/template_tests/syntax_tests/test_exceptions.py:ExceptionsTests.test_exception01",
      "type": "function",
      "name": "ExceptionsTests.test_exception01",
      "file": "tests/template_tests/syntax_tests/test_exceptions.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/syntax_tests/test_exceptions.py:ExceptionsTests.test_exception02",
      "type": "function",
      "name": "ExceptionsTests.test_exception02",
      "file": "tests/template_tests/syntax_tests/test_exceptions.py",
      "line": 19
    },
    {
      "id": "tests/template_tests/syntax_tests/test_exceptions.py:ExceptionsTests.test_exception03",
      "type": "function",
      "name": "ExceptionsTests.test_exception03",
      "file": "tests/template_tests/syntax_tests/test_exceptions.py",
      "line": 35
    },
    {
      "id": "tests/template_tests/syntax_tests/test_exceptions.py:ExceptionsTests.test_exception04",
      "type": "function",
      "name": "ExceptionsTests.test_exception04",
      "file": "tests/template_tests/syntax_tests/test_exceptions.py",
      "line": 46
    },
    {
      "id": "tests/template_tests/syntax_tests/test_exceptions.py:ExceptionsTests.test_exception05",
      "type": "function",
      "name": "ExceptionsTests.test_exception05",
      "file": "tests/template_tests/syntax_tests/test_exceptions.py",
      "line": 54
    },
    {
      "id": "tests/template_tests/syntax_tests/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/template_tests/syntax_tests/__init__.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_invalid_string.py",
      "type": "file",
      "name": "test_invalid_string.py",
      "file": "tests/template_tests/syntax_tests/test_invalid_string.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_invalid_string.py:InvalidStringTests",
      "type": "class",
      "name": "InvalidStringTests",
      "file": "tests/template_tests/syntax_tests/test_invalid_string.py",
      "line": 6
    },
    {
      "id": "tests/template_tests/syntax_tests/test_invalid_string.py:InvalidStringTests.test_invalidstr01",
      "type": "function",
      "name": "InvalidStringTests.test_invalidstr01",
      "file": "tests/template_tests/syntax_tests/test_invalid_string.py",
      "line": 10
    },
    {
      "id": "tests/template_tests/syntax_tests/test_invalid_string.py:InvalidStringTests.test_invalidstr02",
      "type": "function",
      "name": "InvalidStringTests.test_invalidstr02",
      "file": "tests/template_tests/syntax_tests/test_invalid_string.py",
      "line": 18
    },
    {
      "id": "tests/template_tests/syntax_tests/test_invalid_string.py:InvalidStringTests.test_invalidstr03",
      "type": "function",
      "name": "InvalidStringTests.test_invalidstr03",
      "file": "tests/template_tests/syntax_tests/test_invalid_string.py",
      "line": 26
    },
    {
      "id": "tests/template_tests/syntax_tests/test_invalid_string.py:InvalidStringTests.test_invalidstr04",
      "type": "function",
      "name": "InvalidStringTests.test_invalidstr04",
      "file": "tests/template_tests/syntax_tests/test_invalid_string.py",
      "line": 31
    },
    {
      "id": "tests/template_tests/syntax_tests/test_invalid_string.py:InvalidStringTests.test_invalidstr04_2",
      "type": "function",
      "name": "InvalidStringTests.test_invalidstr04_2",
      "file": "tests/template_tests/syntax_tests/test_invalid_string.py",
      "line": 36
    },
    {
      "id": "tests/template_tests/syntax_tests/test_invalid_string.py:InvalidStringTests.test_invalidstr05",
      "type": "function",
      "name": "InvalidStringTests.test_invalidstr05",
      "file": "tests/template_tests/syntax_tests/test_invalid_string.py",
      "line": 41
    },
    {
      "id": "tests/template_tests/syntax_tests/test_invalid_string.py:InvalidStringTests.test_invalidstr06",
      "type": "function",
      "name": "InvalidStringTests.test_invalidstr06",
      "file": "tests/template_tests/syntax_tests/test_invalid_string.py",
      "line": 49
    },
    {
      "id": "tests/template_tests/syntax_tests/test_invalid_string.py:InvalidStringTests.test_invalidstr07",
      "type": "function",
      "name": "InvalidStringTests.test_invalidstr07",
      "file": "tests/template_tests/syntax_tests/test_invalid_string.py",
      "line": 57
    },
    {
      "id": "tests/template_tests/syntax_tests/test_regroup.py",
      "type": "file",
      "name": "test_regroup.py",
      "file": "tests/template_tests/syntax_tests/test_regroup.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests",
      "type": "class",
      "name": "RegroupTagTests",
      "file": "tests/template_tests/syntax_tests/test_regroup.py",
      "line": 9
    },
    {
      "id": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests.test_regroup01",
      "type": "function",
      "name": "RegroupTagTests.test_regroup01",
      "file": "tests/template_tests/syntax_tests/test_regroup.py",
      "line": 19
    },
    {
      "id": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests.test_regroup02",
      "type": "function",
      "name": "RegroupTagTests.test_regroup02",
      "file": "tests/template_tests/syntax_tests/test_regroup.py",
      "line": 37
    },
    {
      "id": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests.test_regroup03",
      "type": "function",
      "name": "RegroupTagTests.test_regroup03",
      "file": "tests/template_tests/syntax_tests/test_regroup.py",
      "line": 52
    },
    {
      "id": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests.test_regroup04",
      "type": "function",
      "name": "RegroupTagTests.test_regroup04",
      "file": "tests/template_tests/syntax_tests/test_regroup.py",
      "line": 72
    },
    {
      "id": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests.test_regroup05",
      "type": "function",
      "name": "RegroupTagTests.test_regroup05",
      "file": "tests/template_tests/syntax_tests/test_regroup.py",
      "line": 85
    },
    {
      "id": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests.test_regroup06",
      "type": "function",
      "name": "RegroupTagTests.test_regroup06",
      "file": "tests/template_tests/syntax_tests/test_regroup.py",
      "line": 90
    },
    {
      "id": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests.test_regroup07",
      "type": "function",
      "name": "RegroupTagTests.test_regroup07",
      "file": "tests/template_tests/syntax_tests/test_regroup.py",
      "line": 95
    },
    {
      "id": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests.test_regroup08",
      "type": "function",
      "name": "RegroupTagTests.test_regroup08",
      "file": "tests/template_tests/syntax_tests/test_regroup.py",
      "line": 100
    },
    {
      "id": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests.test_regroup_unpack",
      "type": "function",
      "name": "RegroupTagTests.test_regroup_unpack",
      "file": "tests/template_tests/syntax_tests/test_regroup.py",
      "line": 111
    },
    {
      "id": "tests/template_tests/syntax_tests/test_resetcycle.py",
      "type": "file",
      "name": "test_resetcycle.py",
      "file": "tests/template_tests/syntax_tests/test_resetcycle.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests",
      "type": "class",
      "name": "ResetCycleTagTests",
      "file": "tests/template_tests/syntax_tests/test_resetcycle.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests.test_resetcycle01",
      "type": "function",
      "name": "ResetCycleTagTests.test_resetcycle01",
      "file": "tests/template_tests/syntax_tests/test_resetcycle.py",
      "line": 10
    },
    {
      "id": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests.test_resetcycle02",
      "type": "function",
      "name": "ResetCycleTagTests.test_resetcycle02",
      "file": "tests/template_tests/syntax_tests/test_resetcycle.py",
      "line": 15
    },
    {
      "id": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests.test_resetcycle03",
      "type": "function",
      "name": "ResetCycleTagTests.test_resetcycle03",
      "file": "tests/template_tests/syntax_tests/test_resetcycle.py",
      "line": 20
    },
    {
      "id": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests.test_resetcycle04",
      "type": "function",
      "name": "ResetCycleTagTests.test_resetcycle04",
      "file": "tests/template_tests/syntax_tests/test_resetcycle.py",
      "line": 25
    },
    {
      "id": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests.test_resetcycle05",
      "type": "function",
      "name": "ResetCycleTagTests.test_resetcycle05",
      "file": "tests/template_tests/syntax_tests/test_resetcycle.py",
      "line": 30
    },
    {
      "id": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests.test_resetcycle06",
      "type": "function",
      "name": "ResetCycleTagTests.test_resetcycle06",
      "file": "tests/template_tests/syntax_tests/test_resetcycle.py",
      "line": 40
    },
    {
      "id": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests.test_resetcycle07",
      "type": "function",
      "name": "ResetCycleTagTests.test_resetcycle07",
      "file": "tests/template_tests/syntax_tests/test_resetcycle.py",
      "line": 50
    },
    {
      "id": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests.test_resetcycle08",
      "type": "function",
      "name": "ResetCycleTagTests.test_resetcycle08",
      "file": "tests/template_tests/syntax_tests/test_resetcycle.py",
      "line": 60
    },
    {
      "id": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests.test_resetcycle09",
      "type": "function",
      "name": "ResetCycleTagTests.test_resetcycle09",
      "file": "tests/template_tests/syntax_tests/test_resetcycle.py",
      "line": 71
    },
    {
      "id": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests.test_resetcycle10",
      "type": "function",
      "name": "ResetCycleTagTests.test_resetcycle10",
      "file": "tests/template_tests/syntax_tests/test_resetcycle.py",
      "line": 82
    },
    {
      "id": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests.test_resetcycle11",
      "type": "function",
      "name": "ResetCycleTagTests.test_resetcycle11",
      "file": "tests/template_tests/syntax_tests/test_resetcycle.py",
      "line": 93
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_tag.py",
      "type": "file",
      "name": "test_filter_tag.py",
      "file": "tests/template_tests/syntax_tests/test_filter_tag.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_tag.py:FilterTagTests",
      "type": "class",
      "name": "FilterTagTests",
      "file": "tests/template_tests/syntax_tests/test_filter_tag.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_tag.py:FilterTagTests.test_filter01",
      "type": "function",
      "name": "FilterTagTests.test_filter01",
      "file": "tests/template_tests/syntax_tests/test_filter_tag.py",
      "line": 10
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_tag.py:FilterTagTests.test_filter02",
      "type": "function",
      "name": "FilterTagTests.test_filter02",
      "file": "tests/template_tests/syntax_tests/test_filter_tag.py",
      "line": 15
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_tag.py:FilterTagTests.test_filter03",
      "type": "function",
      "name": "FilterTagTests.test_filter03",
      "file": "tests/template_tests/syntax_tests/test_filter_tag.py",
      "line": 20
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_tag.py:FilterTagTests.test_filter04",
      "type": "function",
      "name": "FilterTagTests.test_filter04",
      "file": "tests/template_tests/syntax_tests/test_filter_tag.py",
      "line": 25
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_tag.py:FilterTagTests.test_filter05",
      "type": "function",
      "name": "FilterTagTests.test_filter05",
      "file": "tests/template_tests/syntax_tests/test_filter_tag.py",
      "line": 30
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_tag.py:FilterTagTests.test_filter05bis",
      "type": "function",
      "name": "FilterTagTests.test_filter05bis",
      "file": "tests/template_tests/syntax_tests/test_filter_tag.py",
      "line": 35
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_tag.py:FilterTagTests.test_filter06",
      "type": "function",
      "name": "FilterTagTests.test_filter06",
      "file": "tests/template_tests/syntax_tests/test_filter_tag.py",
      "line": 40
    },
    {
      "id": "tests/template_tests/syntax_tests/test_filter_tag.py:FilterTagTests.test_filter06bis",
      "type": "function",
      "name": "FilterTagTests.test_filter06bis",
      "file": "tests/template_tests/syntax_tests/test_filter_tag.py",
      "line": 45
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py",
      "type": "file",
      "name": "test_for.py",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "type": "class",
      "name": "ForTagTests",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 8
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag01",
      "type": "function",
      "name": "ForTagTests.test_for_tag01",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 12
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag02",
      "type": "function",
      "name": "ForTagTests.test_for_tag02",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 17
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_vars01",
      "type": "function",
      "name": "ForTagTests.test_for_tag_vars01",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 22
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_vars02",
      "type": "function",
      "name": "ForTagTests.test_for_tag_vars02",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 27
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_vars03",
      "type": "function",
      "name": "ForTagTests.test_for_tag_vars03",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 32
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_vars04",
      "type": "function",
      "name": "ForTagTests.test_for_tag_vars04",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 37
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_vars05",
      "type": "function",
      "name": "ForTagTests.test_for_tag_vars05",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 43
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_vars06",
      "type": "function",
      "name": "ForTagTests.test_for_tag_vars06",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 49
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_unpack01",
      "type": "function",
      "name": "ForTagTests.test_for_tag_unpack01",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 54
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_unpack03",
      "type": "function",
      "name": "ForTagTests.test_for_tag_unpack03",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 59
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_unpack04",
      "type": "function",
      "name": "ForTagTests.test_for_tag_unpack04",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 64
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_unpack05",
      "type": "function",
      "name": "ForTagTests.test_for_tag_unpack05",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 69
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_unpack06",
      "type": "function",
      "name": "ForTagTests.test_for_tag_unpack06",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 74
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_unpack07",
      "type": "function",
      "name": "ForTagTests.test_for_tag_unpack07",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 80
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_unpack08",
      "type": "function",
      "name": "ForTagTests.test_for_tag_unpack08",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 86
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_unpack_double_quote",
      "type": "function",
      "name": "ForTagTests.test_unpack_double_quote",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 92
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_unpack_single_quote",
      "type": "function",
      "name": "ForTagTests.test_unpack_single_quote",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 98
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_unpack_vertical_bar",
      "type": "function",
      "name": "ForTagTests.test_unpack_vertical_bar",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 104
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_unpack09",
      "type": "function",
      "name": "ForTagTests.test_for_tag_unpack09",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 110
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_unpack13",
      "type": "function",
      "name": "ForTagTests.test_for_tag_unpack13",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 118
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_empty01",
      "type": "function",
      "name": "ForTagTests.test_for_tag_empty01",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 128
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_empty02",
      "type": "function",
      "name": "ForTagTests.test_for_tag_empty02",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 133
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_empty03",
      "type": "function",
      "name": "ForTagTests.test_for_tag_empty03",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 139
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_filter_ws",
      "type": "function",
      "name": "ForTagTests.test_for_tag_filter_ws",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 144
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_unpack_strs",
      "type": "function",
      "name": "ForTagTests.test_for_tag_unpack_strs",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 152
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_unpack10",
      "type": "function",
      "name": "ForTagTests.test_for_tag_unpack10",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 157
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_unpack11",
      "type": "function",
      "name": "ForTagTests.test_for_tag_unpack11",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 165
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_unpack12",
      "type": "function",
      "name": "ForTagTests.test_for_tag_unpack12",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 173
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_unpack14",
      "type": "function",
      "name": "ForTagTests.test_for_tag_unpack14",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 181
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_context",
      "type": "function",
      "name": "ForTagTests.test_for_tag_context",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 190
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_invalid_arg",
      "type": "function",
      "name": "ForTagTests.test_invalid_arg",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 203
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_invalid_in_keyword",
      "type": "function",
      "name": "ForTagTests.test_invalid_in_keyword",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 209
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForNodeTests",
      "type": "class",
      "name": "ForNodeTests",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 215
    },
    {
      "id": "tests/template_tests/syntax_tests/test_for.py:ForNodeTests.test_repr",
      "type": "function",
      "name": "ForNodeTests.test_repr",
      "file": "tests/template_tests/syntax_tests/test_for.py",
      "line": 216
    },
    {
      "id": "tests/template_tests/syntax_tests/test_verbatim.py",
      "type": "file",
      "name": "test_verbatim.py",
      "file": "tests/template_tests/syntax_tests/test_verbatim.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_verbatim.py:VerbatimTagTests",
      "type": "class",
      "name": "VerbatimTagTests",
      "file": "tests/template_tests/syntax_tests/test_verbatim.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/syntax_tests/test_verbatim.py:VerbatimTagTests.test_verbatim_tag01",
      "type": "function",
      "name": "VerbatimTagTests.test_verbatim_tag01",
      "file": "tests/template_tests/syntax_tests/test_verbatim.py",
      "line": 10
    },
    {
      "id": "tests/template_tests/syntax_tests/test_verbatim.py:VerbatimTagTests.test_verbatim_tag02",
      "type": "function",
      "name": "VerbatimTagTests.test_verbatim_tag02",
      "file": "tests/template_tests/syntax_tests/test_verbatim.py",
      "line": 15
    },
    {
      "id": "tests/template_tests/syntax_tests/test_verbatim.py:VerbatimTagTests.test_verbatim_tag03",
      "type": "function",
      "name": "VerbatimTagTests.test_verbatim_tag03",
      "file": "tests/template_tests/syntax_tests/test_verbatim.py",
      "line": 20
    },
    {
      "id": "tests/template_tests/syntax_tests/test_verbatim.py:VerbatimTagTests.test_verbatim_tag04",
      "type": "function",
      "name": "VerbatimTagTests.test_verbatim_tag04",
      "file": "tests/template_tests/syntax_tests/test_verbatim.py",
      "line": 25
    },
    {
      "id": "tests/template_tests/syntax_tests/test_verbatim.py:VerbatimTagTests.test_verbatim_tag05",
      "type": "function",
      "name": "VerbatimTagTests.test_verbatim_tag05",
      "file": "tests/template_tests/syntax_tests/test_verbatim.py",
      "line": 30
    },
    {
      "id": "tests/template_tests/syntax_tests/test_verbatim.py:VerbatimTagTests.test_verbatim_tag06",
      "type": "function",
      "name": "VerbatimTagTests.test_verbatim_tag06",
      "file": "tests/template_tests/syntax_tests/test_verbatim.py",
      "line": 36
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py",
      "type": "file",
      "name": "test_include.py",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests",
      "type": "class",
      "name": "IncludeTagTests",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 15
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include01",
      "type": "function",
      "name": "IncludeTagTests.test_include01",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 19
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include02",
      "type": "function",
      "name": "IncludeTagTests.test_include02",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 24
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include03",
      "type": "function",
      "name": "IncludeTagTests.test_include03",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 29
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include04",
      "type": "function",
      "name": "IncludeTagTests.test_include04",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 37
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include06",
      "type": "function",
      "name": "IncludeTagTests.test_include06",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 46
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include07",
      "type": "function",
      "name": "IncludeTagTests.test_include07",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 51
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include08",
      "type": "function",
      "name": "IncludeTagTests.test_include08",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 56
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include09",
      "type": "function",
      "name": "IncludeTagTests.test_include09",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 66
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include10",
      "type": "function",
      "name": "IncludeTagTests.test_include10",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 71
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include11",
      "type": "function",
      "name": "IncludeTagTests.test_include11",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 79
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include12",
      "type": "function",
      "name": "IncludeTagTests.test_include12",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 87
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include13",
      "type": "function",
      "name": "IncludeTagTests.test_include13",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 98
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include14",
      "type": "function",
      "name": "IncludeTagTests.test_include14",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 111
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include_error01",
      "type": "function",
      "name": "IncludeTagTests.test_include_error01",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 120
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include_error02",
      "type": "function",
      "name": "IncludeTagTests.test_include_error02",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 125
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include_error03",
      "type": "function",
      "name": "IncludeTagTests.test_include_error03",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 130
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include_error04",
      "type": "function",
      "name": "IncludeTagTests.test_include_error04",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 135
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include_error05",
      "type": "function",
      "name": "IncludeTagTests.test_include_error05",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 140
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include_error06",
      "type": "function",
      "name": "IncludeTagTests.test_include_error06",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 145
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include_fail1",
      "type": "function",
      "name": "IncludeTagTests.test_include_fail1",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 150
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include_fail2",
      "type": "function",
      "name": "IncludeTagTests.test_include_fail2",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 155
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include_error07",
      "type": "function",
      "name": "IncludeTagTests.test_include_error07",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 160
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include_error08",
      "type": "function",
      "name": "IncludeTagTests.test_include_error08",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 166
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include_error09",
      "type": "function",
      "name": "IncludeTagTests.test_include_error09",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 172
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include_error10",
      "type": "function",
      "name": "IncludeTagTests.test_include_error10",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 179
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include_empty",
      "type": "function",
      "name": "IncludeTagTests.test_include_empty",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 186
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTests",
      "type": "class",
      "name": "IncludeTests",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 195
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTests.test_include_missing_template",
      "type": "function",
      "name": "IncludeTests.test_include_missing_template",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 197
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTests.test_extends_include_missing_baseloader",
      "type": "function",
      "name": "IncludeTests.test_extends_include_missing_baseloader",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 208
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTests.test_extends_include_missing_cachedloader",
      "type": "function",
      "name": "IncludeTests.test_extends_include_missing_cachedloader",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 220
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTests.test_include_template_argument",
      "type": "function",
      "name": "IncludeTests.test_include_template_argument",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 238
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTests.test_include_from_loader_get_template",
      "type": "function",
      "name": "IncludeTests.test_include_from_loader_get_template",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 250
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTests.test_include_immediate_missing",
      "type": "function",
      "name": "IncludeTests.test_include_immediate_missing",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 255
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTests.test_include_recursive",
      "type": "function",
      "name": "IncludeTests.test_include_recursive",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 262
    },
    {
      "id": "tests/template_tests/syntax_tests/test_include.py:IncludeTests.test_include_cache",
      "type": "function",
      "name": "IncludeTests.test_include_cache",
      "file": "tests/template_tests/syntax_tests/test_include.py",
      "line": 282
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cycle.py",
      "type": "file",
      "name": "test_cycle.py",
      "file": "tests/template_tests/syntax_tests/test_cycle.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests",
      "type": "class",
      "name": "CycleTagTests",
      "file": "tests/template_tests/syntax_tests/test_cycle.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle01",
      "type": "function",
      "name": "CycleTagTests.test_cycle01",
      "file": "tests/template_tests/syntax_tests/test_cycle.py",
      "line": 10
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle05",
      "type": "function",
      "name": "CycleTagTests.test_cycle05",
      "file": "tests/template_tests/syntax_tests/test_cycle.py",
      "line": 16
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle07",
      "type": "function",
      "name": "CycleTagTests.test_cycle07",
      "file": "tests/template_tests/syntax_tests/test_cycle.py",
      "line": 22
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle10",
      "type": "function",
      "name": "CycleTagTests.test_cycle10",
      "file": "tests/template_tests/syntax_tests/test_cycle.py",
      "line": 28
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle11",
      "type": "function",
      "name": "CycleTagTests.test_cycle11",
      "file": "tests/template_tests/syntax_tests/test_cycle.py",
      "line": 33
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle12",
      "type": "function",
      "name": "CycleTagTests.test_cycle12",
      "file": "tests/template_tests/syntax_tests/test_cycle.py",
      "line": 38
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle13",
      "type": "function",
      "name": "CycleTagTests.test_cycle13",
      "file": "tests/template_tests/syntax_tests/test_cycle.py",
      "line": 43
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle14",
      "type": "function",
      "name": "CycleTagTests.test_cycle14",
      "file": "tests/template_tests/syntax_tests/test_cycle.py",
      "line": 48
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle15",
      "type": "function",
      "name": "CycleTagTests.test_cycle15",
      "file": "tests/template_tests/syntax_tests/test_cycle.py",
      "line": 53
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle16",
      "type": "function",
      "name": "CycleTagTests.test_cycle16",
      "file": "tests/template_tests/syntax_tests/test_cycle.py",
      "line": 58
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle17",
      "type": "function",
      "name": "CycleTagTests.test_cycle17",
      "file": "tests/template_tests/syntax_tests/test_cycle.py",
      "line": 64
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle18",
      "type": "function",
      "name": "CycleTagTests.test_cycle18",
      "file": "tests/template_tests/syntax_tests/test_cycle.py",
      "line": 69
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle19",
      "type": "function",
      "name": "CycleTagTests.test_cycle19",
      "file": "tests/template_tests/syntax_tests/test_cycle.py",
      "line": 75
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle20",
      "type": "function",
      "name": "CycleTagTests.test_cycle20",
      "file": "tests/template_tests/syntax_tests/test_cycle.py",
      "line": 80
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle21",
      "type": "function",
      "name": "CycleTagTests.test_cycle21",
      "file": "tests/template_tests/syntax_tests/test_cycle.py",
      "line": 86
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle22",
      "type": "function",
      "name": "CycleTagTests.test_cycle22",
      "file": "tests/template_tests/syntax_tests/test_cycle.py",
      "line": 91
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle23",
      "type": "function",
      "name": "CycleTagTests.test_cycle23",
      "file": "tests/template_tests/syntax_tests/test_cycle.py",
      "line": 97
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle24",
      "type": "function",
      "name": "CycleTagTests.test_cycle24",
      "file": "tests/template_tests/syntax_tests/test_cycle.py",
      "line": 106
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle25",
      "type": "function",
      "name": "CycleTagTests.test_cycle25",
      "file": "tests/template_tests/syntax_tests/test_cycle.py",
      "line": 111
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle26",
      "type": "function",
      "name": "CycleTagTests.test_cycle26",
      "file": "tests/template_tests/syntax_tests/test_cycle.py",
      "line": 116
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle27",
      "type": "function",
      "name": "CycleTagTests.test_cycle27",
      "file": "tests/template_tests/syntax_tests/test_cycle.py",
      "line": 121
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle28",
      "type": "function",
      "name": "CycleTagTests.test_cycle28",
      "file": "tests/template_tests/syntax_tests/test_cycle.py",
      "line": 126
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle29",
      "type": "function",
      "name": "CycleTagTests.test_cycle29",
      "file": "tests/template_tests/syntax_tests/test_cycle.py",
      "line": 140
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle30",
      "type": "function",
      "name": "CycleTagTests.test_cycle30",
      "file": "tests/template_tests/syntax_tests/test_cycle.py",
      "line": 159
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle_undefined",
      "type": "function",
      "name": "CycleTagTests.test_cycle_undefined",
      "file": "tests/template_tests/syntax_tests/test_cycle.py",
      "line": 177
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py",
      "type": "file",
      "name": "test_url.py",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "type": "class",
      "name": "UrlTagTests",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 9
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url01",
      "type": "function",
      "name": "UrlTagTests.test_url01",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 14
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url02",
      "type": "function",
      "name": "UrlTagTests.test_url02",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 19
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url02a",
      "type": "function",
      "name": "UrlTagTests.test_url02a",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 24
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url02b",
      "type": "function",
      "name": "UrlTagTests.test_url02b",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 29
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url02c",
      "type": "function",
      "name": "UrlTagTests.test_url02c",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 34
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url03",
      "type": "function",
      "name": "UrlTagTests.test_url03",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 39
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url04",
      "type": "function",
      "name": "UrlTagTests.test_url04",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 44
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url05",
      "type": "function",
      "name": "UrlTagTests.test_url05",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 49
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url06",
      "type": "function",
      "name": "UrlTagTests.test_url06",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 54
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url08",
      "type": "function",
      "name": "UrlTagTests.test_url08",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 59
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url09",
      "type": "function",
      "name": "UrlTagTests.test_url09",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 64
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url10",
      "type": "function",
      "name": "UrlTagTests.test_url10",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 69
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url11",
      "type": "function",
      "name": "UrlTagTests.test_url11",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 74
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url12",
      "type": "function",
      "name": "UrlTagTests.test_url12",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 79
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url13",
      "type": "function",
      "name": "UrlTagTests.test_url13",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 84
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url14",
      "type": "function",
      "name": "UrlTagTests.test_url14",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 89
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url15",
      "type": "function",
      "name": "UrlTagTests.test_url15",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 94
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url18",
      "type": "function",
      "name": "UrlTagTests.test_url18",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 99
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url19",
      "type": "function",
      "name": "UrlTagTests.test_url19",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 104
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url20",
      "type": "function",
      "name": "UrlTagTests.test_url20",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 111
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url21",
      "type": "function",
      "name": "UrlTagTests.test_url21",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 118
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail01",
      "type": "function",
      "name": "UrlTagTests.test_url_fail01",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 124
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail02",
      "type": "function",
      "name": "UrlTagTests.test_url_fail02",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 129
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail03",
      "type": "function",
      "name": "UrlTagTests.test_url_fail03",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 134
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail04",
      "type": "function",
      "name": "UrlTagTests.test_url_fail04",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 139
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail05",
      "type": "function",
      "name": "UrlTagTests.test_url_fail05",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 144
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail06",
      "type": "function",
      "name": "UrlTagTests.test_url_fail06",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 149
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail07",
      "type": "function",
      "name": "UrlTagTests.test_url_fail07",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 154
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail08",
      "type": "function",
      "name": "UrlTagTests.test_url_fail08",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 159
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail09",
      "type": "function",
      "name": "UrlTagTests.test_url_fail09",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 164
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail11",
      "type": "function",
      "name": "UrlTagTests.test_url_fail11",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 169
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail12",
      "type": "function",
      "name": "UrlTagTests.test_url_fail12",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 174
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail13",
      "type": "function",
      "name": "UrlTagTests.test_url_fail13",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 179
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail14",
      "type": "function",
      "name": "UrlTagTests.test_url_fail14",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 184
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail15",
      "type": "function",
      "name": "UrlTagTests.test_url_fail15",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 189
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail16",
      "type": "function",
      "name": "UrlTagTests.test_url_fail16",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 194
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail17",
      "type": "function",
      "name": "UrlTagTests.test_url_fail17",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 199
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail18",
      "type": "function",
      "name": "UrlTagTests.test_url_fail18",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 204
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail19",
      "type": "function",
      "name": "UrlTagTests.test_url_fail19",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 209
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_asvar01",
      "type": "function",
      "name": "UrlTagTests.test_url_asvar01",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 215
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_asvar02",
      "type": "function",
      "name": "UrlTagTests.test_url_asvar02",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 220
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_asvar03",
      "type": "function",
      "name": "UrlTagTests.test_url_asvar03",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 225
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_namespace01",
      "type": "function",
      "name": "UrlTagTests.test_url_namespace01",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 230
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_namespace02",
      "type": "function",
      "name": "UrlTagTests.test_url_namespace02",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 239
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_namespace03",
      "type": "function",
      "name": "UrlTagTests.test_url_namespace03",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 248
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_namespace_no_current_app",
      "type": "function",
      "name": "UrlTagTests.test_url_namespace_no_current_app",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 256
    },
    {
      "id": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_namespace_explicit_current_app",
      "type": "function",
      "name": "UrlTagTests.test_url_namespace_explicit_current_app",
      "file": "tests/template_tests/syntax_tests/test_url.py",
      "line": 266
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py",
      "type": "file",
      "name": "test_if.py",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "type": "class",
      "name": "IfTagTests",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 8
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag01",
      "type": "function",
      "name": "IfTagTests.test_if_tag01",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag02",
      "type": "function",
      "name": "IfTagTests.test_if_tag02",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 16
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag03",
      "type": "function",
      "name": "IfTagTests.test_if_tag03",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 21
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag04",
      "type": "function",
      "name": "IfTagTests.test_if_tag04",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 26
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag05",
      "type": "function",
      "name": "IfTagTests.test_if_tag05",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 31
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag06",
      "type": "function",
      "name": "IfTagTests.test_if_tag06",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 36
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag07",
      "type": "function",
      "name": "IfTagTests.test_if_tag07",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 41
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag08",
      "type": "function",
      "name": "IfTagTests.test_if_tag08",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 46
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag09",
      "type": "function",
      "name": "IfTagTests.test_if_tag09",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 51
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag10",
      "type": "function",
      "name": "IfTagTests.test_if_tag10",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 56
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag11",
      "type": "function",
      "name": "IfTagTests.test_if_tag11",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 61
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag12",
      "type": "function",
      "name": "IfTagTests.test_if_tag12",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 66
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag13",
      "type": "function",
      "name": "IfTagTests.test_if_tag13",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 71
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_filter01",
      "type": "function",
      "name": "IfTagTests.test_if_tag_filter01",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 77
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_filter02",
      "type": "function",
      "name": "IfTagTests.test_if_tag_filter02",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 82
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_eq01",
      "type": "function",
      "name": "IfTagTests.test_if_tag_eq01",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 88
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_eq02",
      "type": "function",
      "name": "IfTagTests.test_if_tag_eq02",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 93
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_eq03",
      "type": "function",
      "name": "IfTagTests.test_if_tag_eq03",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 98
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_eq04",
      "type": "function",
      "name": "IfTagTests.test_if_tag_eq04",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 103
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_eq05",
      "type": "function",
      "name": "IfTagTests.test_if_tag_eq05",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 108
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_noteq01",
      "type": "function",
      "name": "IfTagTests.test_if_tag_noteq01",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 114
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_noteq02",
      "type": "function",
      "name": "IfTagTests.test_if_tag_noteq02",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 119
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_noteq03",
      "type": "function",
      "name": "IfTagTests.test_if_tag_noteq03",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 124
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_noteq04",
      "type": "function",
      "name": "IfTagTests.test_if_tag_noteq04",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 129
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_noteq05",
      "type": "function",
      "name": "IfTagTests.test_if_tag_noteq05",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 134
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_gt_01",
      "type": "function",
      "name": "IfTagTests.test_if_tag_gt_01",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 140
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_gt_02",
      "type": "function",
      "name": "IfTagTests.test_if_tag_gt_02",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 145
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_gte_01",
      "type": "function",
      "name": "IfTagTests.test_if_tag_gte_01",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 150
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_gte_02",
      "type": "function",
      "name": "IfTagTests.test_if_tag_gte_02",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 155
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_lt_01",
      "type": "function",
      "name": "IfTagTests.test_if_tag_lt_01",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 160
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_lt_02",
      "type": "function",
      "name": "IfTagTests.test_if_tag_lt_02",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 165
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_lte_01",
      "type": "function",
      "name": "IfTagTests.test_if_tag_lte_01",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 170
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_lte_02",
      "type": "function",
      "name": "IfTagTests.test_if_tag_lte_02",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 175
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_in_01",
      "type": "function",
      "name": "IfTagTests.test_if_tag_in_01",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 181
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_in_02",
      "type": "function",
      "name": "IfTagTests.test_if_tag_in_02",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 186
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not_in_01",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not_in_01",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 191
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not_in_02",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not_in_02",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 196
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_and01",
      "type": "function",
      "name": "IfTagTests.test_if_tag_and01",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 202
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_and02",
      "type": "function",
      "name": "IfTagTests.test_if_tag_and02",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 207
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_and03",
      "type": "function",
      "name": "IfTagTests.test_if_tag_and03",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 212
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_and04",
      "type": "function",
      "name": "IfTagTests.test_if_tag_and04",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 217
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_and05",
      "type": "function",
      "name": "IfTagTests.test_if_tag_and05",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 222
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_and06",
      "type": "function",
      "name": "IfTagTests.test_if_tag_and06",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 227
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_and07",
      "type": "function",
      "name": "IfTagTests.test_if_tag_and07",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 232
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_and08",
      "type": "function",
      "name": "IfTagTests.test_if_tag_and08",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 237
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_or01",
      "type": "function",
      "name": "IfTagTests.test_if_tag_or01",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 243
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_or02",
      "type": "function",
      "name": "IfTagTests.test_if_tag_or02",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 248
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_or03",
      "type": "function",
      "name": "IfTagTests.test_if_tag_or03",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 253
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_or04",
      "type": "function",
      "name": "IfTagTests.test_if_tag_or04",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 258
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_or05",
      "type": "function",
      "name": "IfTagTests.test_if_tag_or05",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 263
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_or06",
      "type": "function",
      "name": "IfTagTests.test_if_tag_or06",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 268
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_or07",
      "type": "function",
      "name": "IfTagTests.test_if_tag_or07",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 273
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_or08",
      "type": "function",
      "name": "IfTagTests.test_if_tag_or08",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 278
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_or09",
      "type": "function",
      "name": "IfTagTests.test_if_tag_or09",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 283
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not01",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not01",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 292
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not02",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not02",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 297
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not06",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not06",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 302
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not07",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not07",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 307
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not08",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not08",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 312
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not09",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not09",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 317
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not10",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not10",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 322
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not11",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not11",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 327
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not12",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not12",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 332
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not13",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not13",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 337
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not14",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not14",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 342
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not15",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not15",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 347
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not16",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not16",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 352
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not17",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not17",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 357
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not18",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not18",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 362
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not19",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not19",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 367
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not20",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not20",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 372
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not21",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not21",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 377
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not22",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not22",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 382
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not23",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not23",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 387
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not24",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not24",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 392
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not25",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not25",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 397
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not26",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not26",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 402
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not27",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not27",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 407
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not28",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not28",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 412
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not29",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not29",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 417
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not30",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not30",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 422
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not31",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not31",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 427
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not32",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not32",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 432
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not33",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not33",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 437
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not34",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not34",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 442
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not35",
      "type": "function",
      "name": "IfTagTests.test_if_tag_not35",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 447
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_error01",
      "type": "function",
      "name": "IfTagTests.test_if_tag_error01",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 453
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_error02",
      "type": "function",
      "name": "IfTagTests.test_if_tag_error02",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 458
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_error03",
      "type": "function",
      "name": "IfTagTests.test_if_tag_error03",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 463
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_error04",
      "type": "function",
      "name": "IfTagTests.test_if_tag_error04",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 468
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_error05",
      "type": "function",
      "name": "IfTagTests.test_if_tag_error05",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 473
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_error06",
      "type": "function",
      "name": "IfTagTests.test_if_tag_error06",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 478
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_error07",
      "type": "function",
      "name": "IfTagTests.test_if_tag_error07",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 483
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_error08",
      "type": "function",
      "name": "IfTagTests.test_if_tag_error08",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 488
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_error09",
      "type": "function",
      "name": "IfTagTests.test_if_tag_error09",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 493
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_error10",
      "type": "function",
      "name": "IfTagTests.test_if_tag_error10",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 498
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_error11",
      "type": "function",
      "name": "IfTagTests.test_if_tag_error11",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 503
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_error12",
      "type": "function",
      "name": "IfTagTests.test_if_tag_error12",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 508
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_else_if_tag_error01",
      "type": "function",
      "name": "IfTagTests.test_else_if_tag_error01",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 513
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_shortcircuit01",
      "type": "function",
      "name": "IfTagTests.test_if_tag_shortcircuit01",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 519
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_shortcircuit02",
      "type": "function",
      "name": "IfTagTests.test_if_tag_shortcircuit02",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 527
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_badarg01",
      "type": "function",
      "name": "IfTagTests.test_if_tag_badarg01",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 536
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_badarg02",
      "type": "function",
      "name": "IfTagTests.test_if_tag_badarg02",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 542
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_badarg03",
      "type": "function",
      "name": "IfTagTests.test_if_tag_badarg03",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 547
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_badarg04",
      "type": "function",
      "name": "IfTagTests.test_if_tag_badarg04",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 552
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_single_eq",
      "type": "function",
      "name": "IfTagTests.test_if_tag_single_eq",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 557
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_is_match",
      "type": "function",
      "name": "IfTagTests.test_if_is_match",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 563
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_is_no_match",
      "type": "function",
      "name": "IfTagTests.test_if_is_no_match",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 568
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_is_variable_missing",
      "type": "function",
      "name": "IfTagTests.test_if_is_variable_missing",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 573
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_is_both_variables_missing",
      "type": "function",
      "name": "IfTagTests.test_if_is_both_variables_missing",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 578
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_is_not_match",
      "type": "function",
      "name": "IfTagTests.test_if_is_not_match",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 583
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_is_not_no_match",
      "type": "function",
      "name": "IfTagTests.test_if_is_not_no_match",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 590
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_is_not_variable_missing",
      "type": "function",
      "name": "IfTagTests.test_if_is_not_variable_missing",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 595
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_is_not_both_variables_missing",
      "type": "function",
      "name": "IfTagTests.test_if_is_not_both_variables_missing",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 600
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfNodeTests",
      "type": "class",
      "name": "IfNodeTests",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 605
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if.py:IfNodeTests.test_repr",
      "type": "function",
      "name": "IfNodeTests.test_repr",
      "file": "tests/template_tests/syntax_tests/test_if.py",
      "line": 606
    },
    {
      "id": "tests/template_tests/syntax_tests/test_template_tag.py",
      "type": "file",
      "name": "test_template_tag.py",
      "file": "tests/template_tests/syntax_tests/test_template_tag.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests",
      "type": "class",
      "name": "TemplateTagTests",
      "file": "tests/template_tests/syntax_tests/test_template_tag.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests.test_templatetag01",
      "type": "function",
      "name": "TemplateTagTests.test_templatetag01",
      "file": "tests/template_tests/syntax_tests/test_template_tag.py",
      "line": 10
    },
    {
      "id": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests.test_templatetag02",
      "type": "function",
      "name": "TemplateTagTests.test_templatetag02",
      "file": "tests/template_tests/syntax_tests/test_template_tag.py",
      "line": 15
    },
    {
      "id": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests.test_templatetag03",
      "type": "function",
      "name": "TemplateTagTests.test_templatetag03",
      "file": "tests/template_tests/syntax_tests/test_template_tag.py",
      "line": 20
    },
    {
      "id": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests.test_templatetag04",
      "type": "function",
      "name": "TemplateTagTests.test_templatetag04",
      "file": "tests/template_tests/syntax_tests/test_template_tag.py",
      "line": 25
    },
    {
      "id": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests.test_templatetag05",
      "type": "function",
      "name": "TemplateTagTests.test_templatetag05",
      "file": "tests/template_tests/syntax_tests/test_template_tag.py",
      "line": 30
    },
    {
      "id": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests.test_templatetag06",
      "type": "function",
      "name": "TemplateTagTests.test_templatetag06",
      "file": "tests/template_tests/syntax_tests/test_template_tag.py",
      "line": 35
    },
    {
      "id": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests.test_templatetag07",
      "type": "function",
      "name": "TemplateTagTests.test_templatetag07",
      "file": "tests/template_tests/syntax_tests/test_template_tag.py",
      "line": 40
    },
    {
      "id": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests.test_templatetag08",
      "type": "function",
      "name": "TemplateTagTests.test_templatetag08",
      "file": "tests/template_tests/syntax_tests/test_template_tag.py",
      "line": 45
    },
    {
      "id": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests.test_templatetag09",
      "type": "function",
      "name": "TemplateTagTests.test_templatetag09",
      "file": "tests/template_tests/syntax_tests/test_template_tag.py",
      "line": 50
    },
    {
      "id": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests.test_templatetag10",
      "type": "function",
      "name": "TemplateTagTests.test_templatetag10",
      "file": "tests/template_tests/syntax_tests/test_template_tag.py",
      "line": 55
    },
    {
      "id": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests.test_templatetag11",
      "type": "function",
      "name": "TemplateTagTests.test_templatetag11",
      "file": "tests/template_tests/syntax_tests/test_template_tag.py",
      "line": 60
    },
    {
      "id": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests.test_templatetag12",
      "type": "function",
      "name": "TemplateTagTests.test_templatetag12",
      "file": "tests/template_tests/syntax_tests/test_template_tag.py",
      "line": 65
    },
    {
      "id": "tests/template_tests/syntax_tests/test_named_endblock.py",
      "type": "file",
      "name": "test_named_endblock.py",
      "file": "tests/template_tests/syntax_tests/test_named_endblock.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_named_endblock.py:NamedEndblockTests",
      "type": "class",
      "name": "NamedEndblockTests",
      "file": "tests/template_tests/syntax_tests/test_named_endblock.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/syntax_tests/test_named_endblock.py:NamedEndblockTests.test_namedendblocks01",
      "type": "function",
      "name": "NamedEndblockTests.test_namedendblocks01",
      "file": "tests/template_tests/syntax_tests/test_named_endblock.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/syntax_tests/test_named_endblock.py:NamedEndblockTests.test_namedendblocks02",
      "type": "function",
      "name": "NamedEndblockTests.test_namedendblocks02",
      "file": "tests/template_tests/syntax_tests/test_named_endblock.py",
      "line": 18
    },
    {
      "id": "tests/template_tests/syntax_tests/test_named_endblock.py:NamedEndblockTests.test_namedendblocks03",
      "type": "function",
      "name": "NamedEndblockTests.test_namedendblocks03",
      "file": "tests/template_tests/syntax_tests/test_named_endblock.py",
      "line": 24
    },
    {
      "id": "tests/template_tests/syntax_tests/test_named_endblock.py:NamedEndblockTests.test_namedendblocks04",
      "type": "function",
      "name": "NamedEndblockTests.test_namedendblocks04",
      "file": "tests/template_tests/syntax_tests/test_named_endblock.py",
      "line": 30
    },
    {
      "id": "tests/template_tests/syntax_tests/test_named_endblock.py:NamedEndblockTests.test_namedendblocks05",
      "type": "function",
      "name": "NamedEndblockTests.test_namedendblocks05",
      "file": "tests/template_tests/syntax_tests/test_named_endblock.py",
      "line": 35
    },
    {
      "id": "tests/template_tests/syntax_tests/test_named_endblock.py:NamedEndblockTests.test_namedendblocks06",
      "type": "function",
      "name": "NamedEndblockTests.test_namedendblocks06",
      "file": "tests/template_tests/syntax_tests/test_named_endblock.py",
      "line": 42
    },
    {
      "id": "tests/template_tests/syntax_tests/test_named_endblock.py:NamedEndblockTests.test_namedendblocks07",
      "type": "function",
      "name": "NamedEndblockTests.test_namedendblocks07",
      "file": "tests/template_tests/syntax_tests/test_named_endblock.py",
      "line": 51
    },
    {
      "id": "tests/template_tests/syntax_tests/test_load.py",
      "type": "file",
      "name": "test_load.py",
      "file": "tests/template_tests/syntax_tests/test_load.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests",
      "type": "class",
      "name": "LoadTagTests",
      "file": "tests/template_tests/syntax_tests/test_load.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests.test_load01",
      "type": "function",
      "name": "LoadTagTests.test_load01",
      "file": "tests/template_tests/syntax_tests/test_load.py",
      "line": 14
    },
    {
      "id": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests.test_load02",
      "type": "function",
      "name": "LoadTagTests.test_load02",
      "file": "tests/template_tests/syntax_tests/test_load.py",
      "line": 19
    },
    {
      "id": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests.test_load03",
      "type": "function",
      "name": "LoadTagTests.test_load03",
      "file": "tests/template_tests/syntax_tests/test_load.py",
      "line": 25
    },
    {
      "id": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests.test_load04",
      "type": "function",
      "name": "LoadTagTests.test_load04",
      "file": "tests/template_tests/syntax_tests/test_load.py",
      "line": 31
    },
    {
      "id": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests.test_load05",
      "type": "function",
      "name": "LoadTagTests.test_load05",
      "file": "tests/template_tests/syntax_tests/test_load.py",
      "line": 37
    },
    {
      "id": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests.test_load06",
      "type": "function",
      "name": "LoadTagTests.test_load06",
      "file": "tests/template_tests/syntax_tests/test_load.py",
      "line": 42
    },
    {
      "id": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests.test_load07",
      "type": "function",
      "name": "LoadTagTests.test_load07",
      "file": "tests/template_tests/syntax_tests/test_load.py",
      "line": 48
    },
    {
      "id": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests.test_load08",
      "type": "function",
      "name": "LoadTagTests.test_load08",
      "file": "tests/template_tests/syntax_tests/test_load.py",
      "line": 54
    },
    {
      "id": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests.test_load09",
      "type": "function",
      "name": "LoadTagTests.test_load09",
      "file": "tests/template_tests/syntax_tests/test_load.py",
      "line": 60
    },
    {
      "id": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests.test_load10",
      "type": "function",
      "name": "LoadTagTests.test_load10",
      "file": "tests/template_tests/syntax_tests/test_load.py",
      "line": 66
    },
    {
      "id": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests.test_load12",
      "type": "function",
      "name": "LoadTagTests.test_load12",
      "file": "tests/template_tests/syntax_tests/test_load.py",
      "line": 72
    },
    {
      "id": "tests/template_tests/syntax_tests/test_numpy.py",
      "type": "file",
      "name": "test_numpy.py",
      "file": "tests/template_tests/syntax_tests/test_numpy.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_numpy.py:NumpyTests",
      "type": "class",
      "name": "NumpyTests",
      "file": "tests/template_tests/syntax_tests/test_numpy.py",
      "line": 14
    },
    {
      "id": "tests/template_tests/syntax_tests/test_numpy.py:NumpyTests.test_numpy_array_index01",
      "type": "function",
      "name": "NumpyTests.test_numpy_array_index01",
      "file": "tests/template_tests/syntax_tests/test_numpy.py",
      "line": 17
    },
    {
      "id": "tests/template_tests/syntax_tests/test_numpy.py:NumpyTests.test_numpy_array_index02",
      "type": "function",
      "name": "NumpyTests.test_numpy_array_index02",
      "file": "tests/template_tests/syntax_tests/test_numpy.py",
      "line": 29
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py",
      "type": "file",
      "name": "test_if_equal.py",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "type": "class",
      "name": "IfEqualTagTests",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 8
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal01",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal01",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal02",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal02",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 16
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal03",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal03",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 21
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal04",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal04",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 26
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal05",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal05",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 31
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal06",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal06",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 36
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal07",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal07",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 41
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal08",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal08",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 46
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal09",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal09",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 51
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal10",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal10",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 56
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_split01",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal_split01",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 62
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_split02",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal_split02",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 67
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_split03",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal_split03",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 72
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_split04",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal_split04",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 77
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_split05",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal_split05",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 82
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_split06",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal_split06",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 87
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_split07",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal_split07",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 92
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_split08",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal_split08",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 97
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_split09",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal_split09",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 102
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_split10",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal_split10",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 107
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_numeric01",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal_numeric01",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 113
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_numeric02",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal_numeric02",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 118
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_numeric03",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal_numeric03",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 123
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_numeric04",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal_numeric04",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 128
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_numeric05",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal_numeric05",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 133
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_numeric06",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal_numeric06",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 138
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_numeric07",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal_numeric07",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 143
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_numeric08",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal_numeric08",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 148
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_numeric09",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal_numeric09",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 153
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_numeric10",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal_numeric10",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 158
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_numeric11",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal_numeric11",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 163
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_numeric12",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal_numeric12",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 168
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_filter01",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal_filter01",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 174
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_filter02",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal_filter02",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 179
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_filter03",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal_filter03",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 184
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_filter04",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal_filter04",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 189
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_filter05",
      "type": "function",
      "name": "IfEqualTagTests.test_ifequal_filter05",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 194
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfNotEqualTagTests",
      "type": "class",
      "name": "IfNotEqualTagTests",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 199
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfNotEqualTagTests.test_ifnotequal01",
      "type": "function",
      "name": "IfNotEqualTagTests.test_ifnotequal01",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 202
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfNotEqualTagTests.test_ifnotequal02",
      "type": "function",
      "name": "IfNotEqualTagTests.test_ifnotequal02",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 207
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfNotEqualTagTests.test_ifnotequal03",
      "type": "function",
      "name": "IfNotEqualTagTests.test_ifnotequal03",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 212
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfNotEqualTagTests.test_ifnotequal04",
      "type": "function",
      "name": "IfNotEqualTagTests.test_ifnotequal04",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 217
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfNotEqualTagTests.test_one_var",
      "type": "function",
      "name": "IfNotEqualTagTests.test_one_var",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 222
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTests",
      "type": "class",
      "name": "IfEqualTests",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 227
    },
    {
      "id": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTests.test_repr",
      "type": "function",
      "name": "IfEqualTests.test_repr",
      "file": "tests/template_tests/syntax_tests/test_if_equal.py",
      "line": 228
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cache.py",
      "type": "file",
      "name": "test_cache.py",
      "file": "tests/template_tests/syntax_tests/test_cache.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests",
      "type": "class",
      "name": "CacheTagTests",
      "file": "tests/template_tests/syntax_tests/test_cache.py",
      "line": 8
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.tearDown",
      "type": "function",
      "name": "CacheTagTests.tearDown",
      "file": "tests/template_tests/syntax_tests/test_cache.py",
      "line": 14
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_cache03",
      "type": "function",
      "name": "CacheTagTests.test_cache03",
      "file": "tests/template_tests/syntax_tests/test_cache.py",
      "line": 18
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_cache04",
      "type": "function",
      "name": "CacheTagTests.test_cache04",
      "file": "tests/template_tests/syntax_tests/test_cache.py",
      "line": 26
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_cache05",
      "type": "function",
      "name": "CacheTagTests.test_cache05",
      "file": "tests/template_tests/syntax_tests/test_cache.py",
      "line": 32
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_cache06",
      "type": "function",
      "name": "CacheTagTests.test_cache06",
      "file": "tests/template_tests/syntax_tests/test_cache.py",
      "line": 37
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_cache07",
      "type": "function",
      "name": "CacheTagTests.test_cache07",
      "file": "tests/template_tests/syntax_tests/test_cache.py",
      "line": 45
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_cache08",
      "type": "function",
      "name": "CacheTagTests.test_cache08",
      "file": "tests/template_tests/syntax_tests/test_cache.py",
      "line": 55
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_cache11",
      "type": "function",
      "name": "CacheTagTests.test_cache11",
      "file": "tests/template_tests/syntax_tests/test_cache.py",
      "line": 66
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_cache12",
      "type": "function",
      "name": "CacheTagTests.test_cache12",
      "file": "tests/template_tests/syntax_tests/test_cache.py",
      "line": 71
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_cache13",
      "type": "function",
      "name": "CacheTagTests.test_cache13",
      "file": "tests/template_tests/syntax_tests/test_cache.py",
      "line": 76
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_cache14",
      "type": "function",
      "name": "CacheTagTests.test_cache14",
      "file": "tests/template_tests/syntax_tests/test_cache.py",
      "line": 81
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_cache15",
      "type": "function",
      "name": "CacheTagTests.test_cache15",
      "file": "tests/template_tests/syntax_tests/test_cache.py",
      "line": 86
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_cache16",
      "type": "function",
      "name": "CacheTagTests.test_cache16",
      "file": "tests/template_tests/syntax_tests/test_cache.py",
      "line": 91
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_cache17",
      "type": "function",
      "name": "CacheTagTests.test_cache17",
      "file": "tests/template_tests/syntax_tests/test_cache.py",
      "line": 99
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_cache18",
      "type": "function",
      "name": "CacheTagTests.test_cache18",
      "file": "tests/template_tests/syntax_tests/test_cache.py",
      "line": 118
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_none_timeout",
      "type": "function",
      "name": "CacheTagTests.test_none_timeout",
      "file": "tests/template_tests/syntax_tests/test_cache.py",
      "line": 129
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cache.py:CacheTests",
      "type": "class",
      "name": "CacheTests",
      "file": "tests/template_tests/syntax_tests/test_cache.py",
      "line": 137
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cache.py:CacheTests.setUpClass",
      "type": "function",
      "name": "CacheTests.setUpClass",
      "file": "tests/template_tests/syntax_tests/test_cache.py",
      "line": 140
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cache.py:CacheTests.test_cache_regression_20130",
      "type": "function",
      "name": "CacheTests.test_cache_regression_20130",
      "file": "tests/template_tests/syntax_tests/test_cache.py",
      "line": 144
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cache.py:CacheTests.test_cache_fragment_cache",
      "type": "function",
      "name": "CacheTests.test_cache_fragment_cache",
      "file": "tests/template_tests/syntax_tests/test_cache.py",
      "line": 159
    },
    {
      "id": "tests/template_tests/syntax_tests/test_cache.py:CacheTests.test_cache_missing_backend",
      "type": "function",
      "name": "CacheTests.test_cache_missing_backend",
      "file": "tests/template_tests/syntax_tests/test_cache.py",
      "line": 174
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n",
      "type": "directory",
      "name": "i18n",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "type": "file",
      "name": "test_trans.py",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests",
      "type": "class",
      "name": "I18nTransTagTests",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 14
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_i18n01",
      "type": "function",
      "name": "I18nTransTagTests.test_i18n01",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 18
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_i18n02",
      "type": "function",
      "name": "I18nTransTagTests.test_i18n02",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 24
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_i18n06",
      "type": "function",
      "name": "I18nTransTagTests.test_i18n06",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 30
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_i18n09",
      "type": "function",
      "name": "I18nTransTagTests.test_i18n09",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 37
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_i18n20",
      "type": "function",
      "name": "I18nTransTagTests.test_i18n20",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 44
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_i18n22",
      "type": "function",
      "name": "I18nTransTagTests.test_i18n22",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 49
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_i18n23",
      "type": "function",
      "name": "I18nTransTagTests.test_i18n23",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 54
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_i18n24",
      "type": "function",
      "name": "I18nTransTagTests.test_i18n24",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 61
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_i18n25",
      "type": "function",
      "name": "I18nTransTagTests.test_i18n25",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 67
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_i18n35",
      "type": "function",
      "name": "I18nTransTagTests.test_i18n35",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 74
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_i18n36",
      "type": "function",
      "name": "I18nTransTagTests.test_i18n36",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 81
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_syntax_error_no_arguments",
      "type": "function",
      "name": "I18nTransTagTests.test_syntax_error_no_arguments",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 87
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_syntax_error_bad_option",
      "type": "function",
      "name": "I18nTransTagTests.test_syntax_error_bad_option",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 93
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_syntax_error_missing_assignment",
      "type": "function",
      "name": "I18nTransTagTests.test_syntax_error_missing_assignment",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 99
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_syntax_error_missing_context",
      "type": "function",
      "name": "I18nTransTagTests.test_syntax_error_missing_context",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 105
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_syntax_error_context_as",
      "type": "function",
      "name": "I18nTransTagTests.test_syntax_error_context_as",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 111
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_syntax_error_context_noop",
      "type": "function",
      "name": "I18nTransTagTests.test_syntax_error_context_noop",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 117
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_syntax_error_duplicate_option",
      "type": "function",
      "name": "I18nTransTagTests.test_syntax_error_duplicate_option",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 123
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_trans_tag_using_a_string_that_looks_like_str_fmt",
      "type": "function",
      "name": "I18nTransTagTests.test_trans_tag_using_a_string_that_looks_like_str_fmt",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 129
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:TranslationTransTagTests",
      "type": "class",
      "name": "TranslationTransTagTests",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 134
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:TranslationTransTagTests.test_template_tags_pgettext",
      "type": "function",
      "name": "TranslationTransTagTests.test_template_tags_pgettext",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 137
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:MultipleLocaleActivationTransTagTests",
      "type": "class",
      "name": "MultipleLocaleActivationTransTagTests",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 180
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:MultipleLocaleActivationTransTagTests.test_single_locale_activation",
      "type": "function",
      "name": "MultipleLocaleActivationTransTagTests.test_single_locale_activation",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 182
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:MultipleLocaleActivationTransTagTests.test_multiple_locale_trans",
      "type": "function",
      "name": "MultipleLocaleActivationTransTagTests.test_multiple_locale_trans",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 190
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:MultipleLocaleActivationTransTagTests.test_multiple_locale_deactivate_trans",
      "type": "function",
      "name": "MultipleLocaleActivationTransTagTests.test_multiple_locale_deactivate_trans",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 196
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:MultipleLocaleActivationTransTagTests.test_multiple_locale_direct_switch_trans",
      "type": "function",
      "name": "MultipleLocaleActivationTransTagTests.test_multiple_locale_direct_switch_trans",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 202
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:LocalizeNodeTests",
      "type": "class",
      "name": "LocalizeNodeTests",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 209
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_trans.py:LocalizeNodeTests.test_repr",
      "type": "function",
      "name": "LocalizeNodeTests.test_repr",
      "file": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "line": 210
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/template_tests/syntax_tests/i18n/__init__.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_get_available_languages.py",
      "type": "file",
      "name": "test_get_available_languages.py",
      "file": "tests/template_tests/syntax_tests/i18n/test_get_available_languages.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_get_available_languages.py:GetAvailableLanguagesTagTests",
      "type": "class",
      "name": "GetAvailableLanguagesTagTests",
      "file": "tests/template_tests/syntax_tests/i18n/test_get_available_languages.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_get_available_languages.py:GetAvailableLanguagesTagTests.test_i18n12",
      "type": "function",
      "name": "GetAvailableLanguagesTagTests.test_i18n12",
      "file": "tests/template_tests/syntax_tests/i18n/test_get_available_languages.py",
      "line": 13
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_get_available_languages.py:GetAvailableLanguagesTagTests.test_no_as_var",
      "type": "function",
      "name": "GetAvailableLanguagesTagTests.test_no_as_var",
      "file": "tests/template_tests/syntax_tests/i18n/test_get_available_languages.py",
      "line": 18
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_get_language_info.py",
      "type": "file",
      "name": "test_get_language_info.py",
      "file": "tests/template_tests/syntax_tests/i18n/test_get_language_info.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_get_language_info.py:I18nGetLanguageInfoTagTests",
      "type": "class",
      "name": "I18nGetLanguageInfoTagTests",
      "file": "tests/template_tests/syntax_tests/i18n/test_get_language_info.py",
      "line": 8
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_get_language_info.py:I18nGetLanguageInfoTagTests.test_i18n28_2",
      "type": "function",
      "name": "I18nGetLanguageInfoTagTests.test_i18n28_2",
      "file": "tests/template_tests/syntax_tests/i18n/test_get_language_info.py",
      "line": 18
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_get_language_info.py:I18nGetLanguageInfoTagTests.test_i18n29",
      "type": "function",
      "name": "I18nGetLanguageInfoTagTests.test_i18n29",
      "file": "tests/template_tests/syntax_tests/i18n/test_get_language_info.py",
      "line": 25
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_get_language_info.py:I18nGetLanguageInfoTagTests.test_i18n38",
      "type": "function",
      "name": "I18nGetLanguageInfoTagTests.test_i18n38",
      "file": "tests/template_tests/syntax_tests/i18n/test_get_language_info.py",
      "line": 34
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_get_language_info.py:I18nGetLanguageInfoTagTests.test_no_for_as",
      "type": "function",
      "name": "I18nGetLanguageInfoTagTests.test_no_for_as",
      "file": "tests/template_tests/syntax_tests/i18n/test_get_language_info.py",
      "line": 40
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_get_current_language.py",
      "type": "file",
      "name": "test_get_current_language.py",
      "file": "tests/template_tests/syntax_tests/i18n/test_get_current_language.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_get_current_language.py:I18nGetCurrentLanguageTagTests",
      "type": "class",
      "name": "I18nGetCurrentLanguageTagTests",
      "file": "tests/template_tests/syntax_tests/i18n/test_get_current_language.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_get_current_language.py:I18nGetCurrentLanguageTagTests.test_no_as_var",
      "type": "function",
      "name": "I18nGetCurrentLanguageTagTests.test_no_as_var",
      "file": "tests/template_tests/syntax_tests/i18n/test_get_current_language.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "type": "file",
      "name": "test_blocktrans.py",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "type": "class",
      "name": "I18nBlockTransTagTests",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 14
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n03",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_i18n03",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 18
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n04",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_i18n04",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 24
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_legacyi18n04",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_legacyi18n04",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 31
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n05",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_i18n05",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 37
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n07",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_i18n07",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 45
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_legacyi18n07",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_legacyi18n07",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 53
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n08",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_i18n08",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 61
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_legacyi18n08",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_legacyi18n08",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 69
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n17",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_i18n17",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 76
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n18",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_i18n18",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 86
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n19",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_i18n19",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 91
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n21",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_i18n21",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 96
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_legacyi18n17",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_legacyi18n17",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 102
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_legacyi18n18",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_legacyi18n18",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 109
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n26",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_i18n26",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 116
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_legacyi18n26",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_legacyi18n26",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 126
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n27",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_i18n27",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 133
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_legacyi18n27",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_legacyi18n27",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 142
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n28",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_i18n28",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 149
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_legacyi18n28",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_legacyi18n28",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 157
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n34",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_i18n34",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 164
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n34_2",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_i18n34_2",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 172
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n34_3",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_i18n34_3",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 180
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n37",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_i18n37",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 191
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n39",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_i18n39",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 200
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n40",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_i18n40",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 210
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n41",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_i18n41",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 220
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_blocktrans_syntax_error_missing_assignment",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_blocktrans_syntax_error_missing_assignment",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 226
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_blocktrans_tag_using_a_string_that_looks_like_str_fmt",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_blocktrans_tag_using_a_string_that_looks_like_str_fmt",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 232
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_with_block",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_with_block",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 237
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_with_for",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_with_for",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 243
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_variable_twice",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_variable_twice",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 249
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_no_args_with",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_no_args_with",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 254
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_count",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_count",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 260
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_plural_bad_syntax",
      "type": "function",
      "name": "I18nBlockTransTagTests.test_plural_bad_syntax",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 270
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:TranslationBlockTransTagTests",
      "type": "class",
      "name": "TranslationBlockTransTagTests",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 276
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:TranslationBlockTransTagTests.test_template_tags_pgettext",
      "type": "function",
      "name": "TranslationBlockTransTagTests.test_template_tags_pgettext",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 279
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:TranslationBlockTransTagTests.test_bad_placeholder_1",
      "type": "function",
      "name": "TranslationBlockTransTagTests.test_bad_placeholder_1",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 388
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:TranslationBlockTransTagTests.test_bad_placeholder_2",
      "type": "function",
      "name": "TranslationBlockTransTagTests.test_bad_placeholder_2",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 399
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:MultipleLocaleActivationBlockTransTests",
      "type": "class",
      "name": "MultipleLocaleActivationBlockTransTests",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 411
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:MultipleLocaleActivationBlockTransTests.test_single_locale_activation",
      "type": "function",
      "name": "MultipleLocaleActivationBlockTransTests.test_single_locale_activation",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 413
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:MultipleLocaleActivationBlockTransTests.test_multiple_locale_btrans",
      "type": "function",
      "name": "MultipleLocaleActivationBlockTransTests.test_multiple_locale_btrans",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 424
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:MultipleLocaleActivationBlockTransTests.test_multiple_locale_deactivate_btrans",
      "type": "function",
      "name": "MultipleLocaleActivationBlockTransTests.test_multiple_locale_deactivate_btrans",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 430
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:MultipleLocaleActivationBlockTransTests.test_multiple_locale_direct_switch_btrans",
      "type": "function",
      "name": "MultipleLocaleActivationBlockTransTests.test_multiple_locale_direct_switch_btrans",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 436
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:MiscTests",
      "type": "class",
      "name": "MiscTests",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 443
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:MiscTests.test_percent_in_translatable_block",
      "type": "function",
      "name": "MiscTests.test_percent_in_translatable_block",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 446
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:MiscTests.test_percent_formatting_in_blocktrans",
      "type": "function",
      "name": "MiscTests.test_percent_formatting_in_blocktrans",
      "file": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "line": 459
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py",
      "type": "file",
      "name": "test_get_language_info_list.py",
      "file": "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py:GetLanguageInfoListTests",
      "type": "class",
      "name": "GetLanguageInfoListTests",
      "file": "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py",
      "line": 8
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py:GetLanguageInfoListTests.test_i18n30",
      "type": "function",
      "name": "GetLanguageInfoListTests.test_i18n30",
      "file": "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py",
      "line": 18
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py:GetLanguageInfoListTests.test_i18n31",
      "type": "function",
      "name": "GetLanguageInfoListTests.test_i18n31",
      "file": "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py",
      "line": 26
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py:GetLanguageInfoListTests.test_i18n38_2",
      "type": "function",
      "name": "GetLanguageInfoListTests.test_i18n38_2",
      "file": "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py",
      "line": 39
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py:GetLanguageInfoListTests.test_no_for_as",
      "type": "function",
      "name": "GetLanguageInfoListTests.test_no_for_as",
      "file": "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py",
      "line": 49
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_get_current_language_bidi.py",
      "type": "file",
      "name": "test_get_current_language_bidi.py",
      "file": "tests/template_tests/syntax_tests/i18n/test_get_current_language_bidi.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_get_current_language_bidi.py:I18nGetCurrentLanguageBidiTagTests",
      "type": "class",
      "name": "I18nGetCurrentLanguageBidiTagTests",
      "file": "tests/template_tests/syntax_tests/i18n/test_get_current_language_bidi.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_get_current_language_bidi.py:I18nGetCurrentLanguageBidiTagTests.test_no_as_var",
      "type": "function",
      "name": "I18nGetCurrentLanguageBidiTagTests.test_no_as_var",
      "file": "tests/template_tests/syntax_tests/i18n/test_get_current_language_bidi.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_filters.py",
      "type": "file",
      "name": "test_filters.py",
      "file": "tests/template_tests/syntax_tests/i18n/test_filters.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_filters.py:I18nFiltersTests",
      "type": "class",
      "name": "I18nFiltersTests",
      "file": "tests/template_tests/syntax_tests/i18n/test_filters.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_filters.py:I18nFiltersTests.test_i18n32",
      "type": "function",
      "name": "I18nFiltersTests.test_i18n32",
      "file": "tests/template_tests/syntax_tests/i18n/test_filters.py",
      "line": 16
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_filters.py:I18nFiltersTests.test_i18n33",
      "type": "function",
      "name": "I18nFiltersTests.test_i18n33",
      "file": "tests/template_tests/syntax_tests/i18n/test_filters.py",
      "line": 27
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_filters.py:I18nFiltersTests.test_i18n38_2",
      "type": "function",
      "name": "I18nFiltersTests.test_i18n38_2",
      "file": "tests/template_tests/syntax_tests/i18n/test_filters.py",
      "line": 40
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      "type": "file",
      "name": "test_underscore_syntax.py",
      "file": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests",
      "type": "class",
      "name": "MultipleLocaleActivationTests",
      "file": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      "line": 9
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests.test_single_locale_activation",
      "type": "function",
      "name": "MultipleLocaleActivationTests.test_single_locale_activation",
      "file": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests.test_multiple_locale_filter",
      "type": "function",
      "name": "MultipleLocaleActivationTests.test_multiple_locale_filter",
      "file": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      "line": 21
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests.test_multiple_locale_filter_deactivate",
      "type": "function",
      "name": "MultipleLocaleActivationTests.test_multiple_locale_filter_deactivate",
      "file": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      "line": 27
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests.test_multiple_locale_filter_direct_switch",
      "type": "function",
      "name": "MultipleLocaleActivationTests.test_multiple_locale_filter_direct_switch",
      "file": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      "line": 33
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests.test_multiple_locale",
      "type": "function",
      "name": "MultipleLocaleActivationTests.test_multiple_locale",
      "file": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      "line": 41
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests.test_multiple_locale_deactivate",
      "type": "function",
      "name": "MultipleLocaleActivationTests.test_multiple_locale_deactivate",
      "file": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      "line": 47
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests.test_multiple_locale_direct_switch",
      "type": "function",
      "name": "MultipleLocaleActivationTests.test_multiple_locale_direct_switch",
      "file": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      "line": 53
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests.test_multiple_locale_loadi18n",
      "type": "function",
      "name": "MultipleLocaleActivationTests.test_multiple_locale_loadi18n",
      "file": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      "line": 61
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests.test_multiple_locale_loadi18n_deactivate",
      "type": "function",
      "name": "MultipleLocaleActivationTests.test_multiple_locale_loadi18n_deactivate",
      "file": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      "line": 67
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests.test_multiple_locale_loadi18n_direct_switch",
      "type": "function",
      "name": "MultipleLocaleActivationTests.test_multiple_locale_loadi18n_direct_switch",
      "file": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      "line": 73
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:I18nStringLiteralTests",
      "type": "class",
      "name": "I18nStringLiteralTests",
      "file": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      "line": 80
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:I18nStringLiteralTests.test_i18n13",
      "type": "function",
      "name": "I18nStringLiteralTests.test_i18n13",
      "file": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      "line": 85
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:I18nStringLiteralTests.test_i18n14",
      "type": "function",
      "name": "I18nStringLiteralTests.test_i18n14",
      "file": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      "line": 92
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:I18nStringLiteralTests.test_i18n15",
      "type": "function",
      "name": "I18nStringLiteralTests.test_i18n15",
      "file": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      "line": 98
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:I18nStringLiteralTests.test_i18n16",
      "type": "function",
      "name": "I18nStringLiteralTests.test_i18n16",
      "file": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      "line": 104
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_language.py",
      "type": "file",
      "name": "test_language.py",
      "file": "tests/template_tests/syntax_tests/i18n/test_language.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_language.py:I18nLanguageTagTests",
      "type": "class",
      "name": "I18nLanguageTagTests",
      "file": "tests/template_tests/syntax_tests/i18n/test_language.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/test_language.py:I18nLanguageTagTests.test_no_arg",
      "type": "function",
      "name": "I18nLanguageTagTests.test_no_arg",
      "file": "tests/template_tests/syntax_tests/i18n/test_language.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/base.py",
      "type": "file",
      "name": "base.py",
      "file": "tests/template_tests/syntax_tests/i18n/base.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/base.py:MultipleLocaleActivationTestCase",
      "type": "class",
      "name": "MultipleLocaleActivationTestCase",
      "file": "tests/template_tests/syntax_tests/i18n/base.py",
      "line": 14
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/base.py:MultipleLocaleActivationTestCase.setUp",
      "type": "function",
      "name": "MultipleLocaleActivationTestCase.setUp",
      "file": "tests/template_tests/syntax_tests/i18n/base.py",
      "line": 20
    },
    {
      "id": "tests/template_tests/syntax_tests/i18n/base.py:MultipleLocaleActivationTestCase.tearDown",
      "type": "function",
      "name": "MultipleLocaleActivationTestCase.tearDown",
      "file": "tests/template_tests/syntax_tests/i18n/base.py",
      "line": 23
    },
    {
      "id": "tests/template_tests/filter_tests",
      "type": "directory",
      "name": "filter_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_capfirst.py",
      "type": "file",
      "name": "test_capfirst.py",
      "file": "tests/template_tests/filter_tests/test_capfirst.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_capfirst.py:CapfirstTests",
      "type": "class",
      "name": "CapfirstTests",
      "file": "tests/template_tests/filter_tests/test_capfirst.py",
      "line": 8
    },
    {
      "id": "tests/template_tests/filter_tests/test_capfirst.py:CapfirstTests.test_capfirst01",
      "type": "function",
      "name": "CapfirstTests.test_capfirst01",
      "file": "tests/template_tests/filter_tests/test_capfirst.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/filter_tests/test_capfirst.py:CapfirstTests.test_capfirst02",
      "type": "function",
      "name": "CapfirstTests.test_capfirst02",
      "file": "tests/template_tests/filter_tests/test_capfirst.py",
      "line": 16
    },
    {
      "id": "tests/template_tests/filter_tests/test_capfirst.py:FunctionTests",
      "type": "class",
      "name": "FunctionTests",
      "file": "tests/template_tests/filter_tests/test_capfirst.py",
      "line": 21
    },
    {
      "id": "tests/template_tests/filter_tests/test_capfirst.py:FunctionTests.test_capfirst",
      "type": "function",
      "name": "FunctionTests.test_capfirst",
      "file": "tests/template_tests/filter_tests/test_capfirst.py",
      "line": 23
    },
    {
      "id": "tests/template_tests/filter_tests/test_pluralize.py",
      "type": "file",
      "name": "test_pluralize.py",
      "file": "tests/template_tests/filter_tests/test_pluralize.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_pluralize.py:PluralizeTests",
      "type": "class",
      "name": "PluralizeTests",
      "file": "tests/template_tests/filter_tests/test_pluralize.py",
      "line": 9
    },
    {
      "id": "tests/template_tests/filter_tests/test_pluralize.py:PluralizeTests.check_values",
      "type": "function",
      "name": "PluralizeTests.check_values",
      "file": "tests/template_tests/filter_tests/test_pluralize.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/filter_tests/test_pluralize.py:PluralizeTests.test_no_arguments",
      "type": "function",
      "name": "PluralizeTests.test_no_arguments",
      "file": "tests/template_tests/filter_tests/test_pluralize.py",
      "line": 18
    },
    {
      "id": "tests/template_tests/filter_tests/test_pluralize.py:PluralizeTests.test_suffix",
      "type": "function",
      "name": "PluralizeTests.test_suffix",
      "file": "tests/template_tests/filter_tests/test_pluralize.py",
      "line": 22
    },
    {
      "id": "tests/template_tests/filter_tests/test_pluralize.py:PluralizeTests.test_singular_and_plural_suffix",
      "type": "function",
      "name": "PluralizeTests.test_singular_and_plural_suffix",
      "file": "tests/template_tests/filter_tests/test_pluralize.py",
      "line": 26
    },
    {
      "id": "tests/template_tests/filter_tests/test_pluralize.py:FunctionTests",
      "type": "class",
      "name": "FunctionTests",
      "file": "tests/template_tests/filter_tests/test_pluralize.py",
      "line": 30
    },
    {
      "id": "tests/template_tests/filter_tests/test_pluralize.py:FunctionTests.test_integers",
      "type": "function",
      "name": "FunctionTests.test_integers",
      "file": "tests/template_tests/filter_tests/test_pluralize.py",
      "line": 32
    },
    {
      "id": "tests/template_tests/filter_tests/test_pluralize.py:FunctionTests.test_floats",
      "type": "function",
      "name": "FunctionTests.test_floats",
      "file": "tests/template_tests/filter_tests/test_pluralize.py",
      "line": 37
    },
    {
      "id": "tests/template_tests/filter_tests/test_pluralize.py:FunctionTests.test_decimals",
      "type": "function",
      "name": "FunctionTests.test_decimals",
      "file": "tests/template_tests/filter_tests/test_pluralize.py",
      "line": 41
    },
    {
      "id": "tests/template_tests/filter_tests/test_pluralize.py:FunctionTests.test_lists",
      "type": "function",
      "name": "FunctionTests.test_lists",
      "file": "tests/template_tests/filter_tests/test_pluralize.py",
      "line": 46
    },
    {
      "id": "tests/template_tests/filter_tests/test_pluralize.py:FunctionTests.test_suffixes",
      "type": "function",
      "name": "FunctionTests.test_suffixes",
      "file": "tests/template_tests/filter_tests/test_pluralize.py",
      "line": 51
    },
    {
      "id": "tests/template_tests/filter_tests/test_pluralize.py:FunctionTests.test_no_len_type",
      "type": "function",
      "name": "FunctionTests.test_no_len_type",
      "file": "tests/template_tests/filter_tests/test_pluralize.py",
      "line": 60
    },
    {
      "id": "tests/template_tests/filter_tests/test_pluralize.py:FunctionTests.test_value_error",
      "type": "function",
      "name": "FunctionTests.test_value_error",
      "file": "tests/template_tests/filter_tests/test_pluralize.py",
      "line": 64
    },
    {
      "id": "tests/template_tests/filter_tests/test_lower.py",
      "type": "file",
      "name": "test_lower.py",
      "file": "tests/template_tests/filter_tests/test_lower.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_lower.py:LowerTests",
      "type": "class",
      "name": "LowerTests",
      "file": "tests/template_tests/filter_tests/test_lower.py",
      "line": 8
    },
    {
      "id": "tests/template_tests/filter_tests/test_lower.py:LowerTests.test_lower01",
      "type": "function",
      "name": "LowerTests.test_lower01",
      "file": "tests/template_tests/filter_tests/test_lower.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/filter_tests/test_lower.py:LowerTests.test_lower02",
      "type": "function",
      "name": "LowerTests.test_lower02",
      "file": "tests/template_tests/filter_tests/test_lower.py",
      "line": 16
    },
    {
      "id": "tests/template_tests/filter_tests/test_lower.py:FunctionTests",
      "type": "class",
      "name": "FunctionTests",
      "file": "tests/template_tests/filter_tests/test_lower.py",
      "line": 21
    },
    {
      "id": "tests/template_tests/filter_tests/test_lower.py:FunctionTests.test_lower",
      "type": "function",
      "name": "FunctionTests.test_lower",
      "file": "tests/template_tests/filter_tests/test_lower.py",
      "line": 23
    },
    {
      "id": "tests/template_tests/filter_tests/test_lower.py:FunctionTests.test_unicode",
      "type": "function",
      "name": "FunctionTests.test_unicode",
      "file": "tests/template_tests/filter_tests/test_lower.py",
      "line": 26
    },
    {
      "id": "tests/template_tests/filter_tests/test_lower.py:FunctionTests.test_non_string_input",
      "type": "function",
      "name": "FunctionTests.test_non_string_input",
      "file": "tests/template_tests/filter_tests/test_lower.py",
      "line": 30
    },
    {
      "id": "tests/template_tests/filter_tests/timezone_utils.py",
      "type": "file",
      "name": "timezone_utils.py",
      "file": "tests/template_tests/filter_tests/timezone_utils.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/timezone_utils.py:TimezoneTestCase",
      "type": "class",
      "name": "TimezoneTestCase",
      "file": "tests/template_tests/filter_tests/timezone_utils.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/filter_tests/timezone_utils.py:TimezoneTestCase.setUp",
      "type": "function",
      "name": "TimezoneTestCase.setUp",
      "file": "tests/template_tests/filter_tests/timezone_utils.py",
      "line": 9
    },
    {
      "id": "tests/template_tests/filter_tests/test_filesizeformat.py",
      "type": "file",
      "name": "test_filesizeformat.py",
      "file": "tests/template_tests/filter_tests/test_filesizeformat.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_filesizeformat.py:FunctionTests",
      "type": "class",
      "name": "FunctionTests",
      "file": "tests/template_tests/filter_tests/test_filesizeformat.py",
      "line": 6
    },
    {
      "id": "tests/template_tests/filter_tests/test_filesizeformat.py:FunctionTests.test_formats",
      "type": "function",
      "name": "FunctionTests.test_formats",
      "file": "tests/template_tests/filter_tests/test_filesizeformat.py",
      "line": 8
    },
    {
      "id": "tests/template_tests/filter_tests/test_filesizeformat.py:FunctionTests.test_localized_formats",
      "type": "function",
      "name": "FunctionTests.test_localized_formats",
      "file": "tests/template_tests/filter_tests/test_filesizeformat.py",
      "line": 24
    },
    {
      "id": "tests/template_tests/filter_tests/test_filesizeformat.py:FunctionTests.test_negative_numbers",
      "type": "function",
      "name": "FunctionTests.test_negative_numbers",
      "file": "tests/template_tests/filter_tests/test_filesizeformat.py",
      "line": 41
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py",
      "type": "file",
      "name": "test_urlize.py",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests",
      "type": "class",
      "name": "UrlizeTests",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 9
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests.test_urlize01",
      "type": "function",
      "name": "UrlizeTests.test_urlize01",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 12
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests.test_urlize02",
      "type": "function",
      "name": "UrlizeTests.test_urlize02",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 24
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests.test_urlize03",
      "type": "function",
      "name": "UrlizeTests.test_urlize03",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 36
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests.test_urlize04",
      "type": "function",
      "name": "UrlizeTests.test_urlize04",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 41
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests.test_urlize05",
      "type": "function",
      "name": "UrlizeTests.test_urlize05",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 48
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests.test_urlize06",
      "type": "function",
      "name": "UrlizeTests.test_urlize06",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 53
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests.test_urlize07",
      "type": "function",
      "name": "UrlizeTests.test_urlize07",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 59
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests.test_urlize08",
      "type": "function",
      "name": "UrlizeTests.test_urlize08",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 67
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests.test_urlize09",
      "type": "function",
      "name": "UrlizeTests.test_urlize09",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 75
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "type": "class",
      "name": "FunctionTests",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 83
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_urls",
      "type": "function",
      "name": "FunctionTests.test_urls",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 85
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_url_split_chars",
      "type": "function",
      "name": "FunctionTests.test_url_split_chars",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 107
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_email",
      "type": "function",
      "name": "FunctionTests.test_email",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 127
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_word_with_dot",
      "type": "function",
      "name": "FunctionTests.test_word_with_dot",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 133
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_https",
      "type": "function",
      "name": "FunctionTests.test_https",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 136
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_quoting",
      "type": "function",
      "name": "FunctionTests.test_quoting",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 142
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_urlencoded",
      "type": "function",
      "name": "FunctionTests.test_urlencoded",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 153
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_unicode",
      "type": "function",
      "name": "FunctionTests.test_unicode",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 165
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_parenthesis",
      "type": "function",
      "name": "FunctionTests.test_parenthesis",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 172
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_nofollow",
      "type": "function",
      "name": "FunctionTests.test_nofollow",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 187
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_idn",
      "type": "function",
      "name": "FunctionTests.test_idn",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 197
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_malformed",
      "type": "function",
      "name": "FunctionTests.test_malformed",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 206
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_tlds",
      "type": "function",
      "name": "FunctionTests.test_tlds",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 214
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_invalid_email",
      "type": "function",
      "name": "FunctionTests.test_invalid_email",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 220
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_uppercase",
      "type": "function",
      "name": "FunctionTests.test_uppercase",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 227
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_trailing_period",
      "type": "function",
      "name": "FunctionTests.test_trailing_period",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 236
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_trailing_multiple_punctuation",
      "type": "function",
      "name": "FunctionTests.test_trailing_multiple_punctuation",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 245
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_brackets",
      "type": "function",
      "name": "FunctionTests.test_brackets",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 263
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_wrapping_characters",
      "type": "function",
      "name": "FunctionTests.test_wrapping_characters",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 281
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_ipv4",
      "type": "function",
      "name": "FunctionTests.test_ipv4",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 299
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_ipv6",
      "type": "function",
      "name": "FunctionTests.test_ipv6",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 305
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_quotation_marks",
      "type": "function",
      "name": "FunctionTests.test_quotation_marks",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 311
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_quote_commas",
      "type": "function",
      "name": "FunctionTests.test_quote_commas",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 340
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_exclamation_marks",
      "type": "function",
      "name": "FunctionTests.test_exclamation_marks",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 349
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_non_string_input",
      "type": "function",
      "name": "FunctionTests.test_non_string_input",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 371
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_autoescape",
      "type": "function",
      "name": "FunctionTests.test_autoescape",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 374
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_autoescape_off",
      "type": "function",
      "name": "FunctionTests.test_autoescape_off",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 380
    },
    {
      "id": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_lazystring",
      "type": "function",
      "name": "FunctionTests.test_lazystring",
      "file": "tests/template_tests/filter_tests/test_urlize.py",
      "line": 386
    },
    {
      "id": "tests/template_tests/filter_tests/test_first.py",
      "type": "file",
      "name": "test_first.py",
      "file": "tests/template_tests/filter_tests/test_first.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_first.py:FirstTests",
      "type": "class",
      "name": "FirstTests",
      "file": "tests/template_tests/filter_tests/test_first.py",
      "line": 8
    },
    {
      "id": "tests/template_tests/filter_tests/test_first.py:FirstTests.test_first01",
      "type": "function",
      "name": "FirstTests.test_first01",
      "file": "tests/template_tests/filter_tests/test_first.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/filter_tests/test_first.py:FirstTests.test_first02",
      "type": "function",
      "name": "FirstTests.test_first02",
      "file": "tests/template_tests/filter_tests/test_first.py",
      "line": 16
    },
    {
      "id": "tests/template_tests/filter_tests/test_first.py:FunctionTests",
      "type": "class",
      "name": "FunctionTests",
      "file": "tests/template_tests/filter_tests/test_first.py",
      "line": 21
    },
    {
      "id": "tests/template_tests/filter_tests/test_first.py:FunctionTests.test_list",
      "type": "function",
      "name": "FunctionTests.test_list",
      "file": "tests/template_tests/filter_tests/test_first.py",
      "line": 23
    },
    {
      "id": "tests/template_tests/filter_tests/test_first.py:FunctionTests.test_empty_string",
      "type": "function",
      "name": "FunctionTests.test_empty_string",
      "file": "tests/template_tests/filter_tests/test_first.py",
      "line": 26
    },
    {
      "id": "tests/template_tests/filter_tests/test_first.py:FunctionTests.test_string",
      "type": "function",
      "name": "FunctionTests.test_string",
      "file": "tests/template_tests/filter_tests/test_first.py",
      "line": 29
    },
    {
      "id": "tests/template_tests/filter_tests/test_slugify.py",
      "type": "file",
      "name": "test_slugify.py",
      "file": "tests/template_tests/filter_tests/test_slugify.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_slugify.py:SlugifyTests",
      "type": "class",
      "name": "SlugifyTests",
      "file": "tests/template_tests/filter_tests/test_slugify.py",
      "line": 9
    },
    {
      "id": "tests/template_tests/filter_tests/test_slugify.py:SlugifyTests.test_slugify01",
      "type": "function",
      "name": "SlugifyTests.test_slugify01",
      "file": "tests/template_tests/filter_tests/test_slugify.py",
      "line": 16
    },
    {
      "id": "tests/template_tests/filter_tests/test_slugify.py:SlugifyTests.test_slugify02",
      "type": "function",
      "name": "SlugifyTests.test_slugify02",
      "file": "tests/template_tests/filter_tests/test_slugify.py",
      "line": 21
    },
    {
      "id": "tests/template_tests/filter_tests/test_slugify.py:FunctionTests",
      "type": "class",
      "name": "FunctionTests",
      "file": "tests/template_tests/filter_tests/test_slugify.py",
      "line": 26
    },
    {
      "id": "tests/template_tests/filter_tests/test_slugify.py:FunctionTests.test_slugify",
      "type": "function",
      "name": "FunctionTests.test_slugify",
      "file": "tests/template_tests/filter_tests/test_slugify.py",
      "line": 28
    },
    {
      "id": "tests/template_tests/filter_tests/test_slugify.py:FunctionTests.test_unicode",
      "type": "function",
      "name": "FunctionTests.test_unicode",
      "file": "tests/template_tests/filter_tests/test_slugify.py",
      "line": 34
    },
    {
      "id": "tests/template_tests/filter_tests/test_slugify.py:FunctionTests.test_non_string_input",
      "type": "function",
      "name": "FunctionTests.test_non_string_input",
      "file": "tests/template_tests/filter_tests/test_slugify.py",
      "line": 40
    },
    {
      "id": "tests/template_tests/filter_tests/test_slugify.py:FunctionTests.test_slugify_lazy_string",
      "type": "function",
      "name": "FunctionTests.test_slugify_lazy_string",
      "file": "tests/template_tests/filter_tests/test_slugify.py",
      "line": 43
    },
    {
      "id": "tests/template_tests/filter_tests/test_safe.py",
      "type": "file",
      "name": "test_safe.py",
      "file": "tests/template_tests/filter_tests/test_safe.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_safe.py:SafeTests",
      "type": "class",
      "name": "SafeTests",
      "file": "tests/template_tests/filter_tests/test_safe.py",
      "line": 6
    },
    {
      "id": "tests/template_tests/filter_tests/test_safe.py:SafeTests.test_safe01",
      "type": "function",
      "name": "SafeTests.test_safe01",
      "file": "tests/template_tests/filter_tests/test_safe.py",
      "line": 9
    },
    {
      "id": "tests/template_tests/filter_tests/test_safe.py:SafeTests.test_safe02",
      "type": "function",
      "name": "SafeTests.test_safe02",
      "file": "tests/template_tests/filter_tests/test_safe.py",
      "line": 14
    },
    {
      "id": "tests/template_tests/filter_tests/test_cut.py",
      "type": "file",
      "name": "test_cut.py",
      "file": "tests/template_tests/filter_tests/test_cut.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_cut.py:CutTests",
      "type": "class",
      "name": "CutTests",
      "file": "tests/template_tests/filter_tests/test_cut.py",
      "line": 8
    },
    {
      "id": "tests/template_tests/filter_tests/test_cut.py:CutTests.test_cut01",
      "type": "function",
      "name": "CutTests.test_cut01",
      "file": "tests/template_tests/filter_tests/test_cut.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/filter_tests/test_cut.py:CutTests.test_cut02",
      "type": "function",
      "name": "CutTests.test_cut02",
      "file": "tests/template_tests/filter_tests/test_cut.py",
      "line": 16
    },
    {
      "id": "tests/template_tests/filter_tests/test_cut.py:CutTests.test_cut03",
      "type": "function",
      "name": "CutTests.test_cut03",
      "file": "tests/template_tests/filter_tests/test_cut.py",
      "line": 21
    },
    {
      "id": "tests/template_tests/filter_tests/test_cut.py:CutTests.test_cut04",
      "type": "function",
      "name": "CutTests.test_cut04",
      "file": "tests/template_tests/filter_tests/test_cut.py",
      "line": 26
    },
    {
      "id": "tests/template_tests/filter_tests/test_cut.py:CutTests.test_cut05",
      "type": "function",
      "name": "CutTests.test_cut05",
      "file": "tests/template_tests/filter_tests/test_cut.py",
      "line": 33
    },
    {
      "id": "tests/template_tests/filter_tests/test_cut.py:CutTests.test_cut06",
      "type": "function",
      "name": "CutTests.test_cut06",
      "file": "tests/template_tests/filter_tests/test_cut.py",
      "line": 38
    },
    {
      "id": "tests/template_tests/filter_tests/test_cut.py:FunctionTests",
      "type": "class",
      "name": "FunctionTests",
      "file": "tests/template_tests/filter_tests/test_cut.py",
      "line": 43
    },
    {
      "id": "tests/template_tests/filter_tests/test_cut.py:FunctionTests.test_character",
      "type": "function",
      "name": "FunctionTests.test_character",
      "file": "tests/template_tests/filter_tests/test_cut.py",
      "line": 45
    },
    {
      "id": "tests/template_tests/filter_tests/test_cut.py:FunctionTests.test_characters",
      "type": "function",
      "name": "FunctionTests.test_characters",
      "file": "tests/template_tests/filter_tests/test_cut.py",
      "line": 48
    },
    {
      "id": "tests/template_tests/filter_tests/test_cut.py:FunctionTests.test_non_matching_string",
      "type": "function",
      "name": "FunctionTests.test_non_matching_string",
      "file": "tests/template_tests/filter_tests/test_cut.py",
      "line": 51
    },
    {
      "id": "tests/template_tests/filter_tests/test_cut.py:FunctionTests.test_non_string_input",
      "type": "function",
      "name": "FunctionTests.test_non_string_input",
      "file": "tests/template_tests/filter_tests/test_cut.py",
      "line": 54
    },
    {
      "id": "tests/template_tests/filter_tests/test_iriencode.py",
      "type": "file",
      "name": "test_iriencode.py",
      "file": "tests/template_tests/filter_tests/test_iriencode.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_iriencode.py:IriencodeTests",
      "type": "class",
      "name": "IriencodeTests",
      "file": "tests/template_tests/filter_tests/test_iriencode.py",
      "line": 8
    },
    {
      "id": "tests/template_tests/filter_tests/test_iriencode.py:IriencodeTests.test_iriencode01",
      "type": "function",
      "name": "IriencodeTests.test_iriencode01",
      "file": "tests/template_tests/filter_tests/test_iriencode.py",
      "line": 14
    },
    {
      "id": "tests/template_tests/filter_tests/test_iriencode.py:IriencodeTests.test_iriencode02",
      "type": "function",
      "name": "IriencodeTests.test_iriencode02",
      "file": "tests/template_tests/filter_tests/test_iriencode.py",
      "line": 19
    },
    {
      "id": "tests/template_tests/filter_tests/test_iriencode.py:IriencodeTests.test_iriencode03",
      "type": "function",
      "name": "IriencodeTests.test_iriencode03",
      "file": "tests/template_tests/filter_tests/test_iriencode.py",
      "line": 24
    },
    {
      "id": "tests/template_tests/filter_tests/test_iriencode.py:IriencodeTests.test_iriencode04",
      "type": "function",
      "name": "IriencodeTests.test_iriencode04",
      "file": "tests/template_tests/filter_tests/test_iriencode.py",
      "line": 29
    },
    {
      "id": "tests/template_tests/filter_tests/test_iriencode.py:FunctionTests",
      "type": "class",
      "name": "FunctionTests",
      "file": "tests/template_tests/filter_tests/test_iriencode.py",
      "line": 34
    },
    {
      "id": "tests/template_tests/filter_tests/test_iriencode.py:FunctionTests.test_unicode",
      "type": "function",
      "name": "FunctionTests.test_unicode",
      "file": "tests/template_tests/filter_tests/test_iriencode.py",
      "line": 36
    },
    {
      "id": "tests/template_tests/filter_tests/test_iriencode.py:FunctionTests.test_urlencoded",
      "type": "function",
      "name": "FunctionTests.test_urlencoded",
      "file": "tests/template_tests/filter_tests/test_iriencode.py",
      "line": 39
    },
    {
      "id": "tests/template_tests/filter_tests/test_yesno.py",
      "type": "file",
      "name": "test_yesno.py",
      "file": "tests/template_tests/filter_tests/test_yesno.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_yesno.py:YesNoTests",
      "type": "class",
      "name": "YesNoTests",
      "file": "tests/template_tests/filter_tests/test_yesno.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/filter_tests/test_yesno.py:YesNoTests.test_true",
      "type": "function",
      "name": "YesNoTests.test_true",
      "file": "tests/template_tests/filter_tests/test_yesno.py",
      "line": 9
    },
    {
      "id": "tests/template_tests/filter_tests/test_yesno.py:FunctionTests",
      "type": "class",
      "name": "FunctionTests",
      "file": "tests/template_tests/filter_tests/test_yesno.py",
      "line": 14
    },
    {
      "id": "tests/template_tests/filter_tests/test_yesno.py:FunctionTests.test_true",
      "type": "function",
      "name": "FunctionTests.test_true",
      "file": "tests/template_tests/filter_tests/test_yesno.py",
      "line": 16
    },
    {
      "id": "tests/template_tests/filter_tests/test_yesno.py:FunctionTests.test_false",
      "type": "function",
      "name": "FunctionTests.test_false",
      "file": "tests/template_tests/filter_tests/test_yesno.py",
      "line": 19
    },
    {
      "id": "tests/template_tests/filter_tests/test_yesno.py:FunctionTests.test_none",
      "type": "function",
      "name": "FunctionTests.test_none",
      "file": "tests/template_tests/filter_tests/test_yesno.py",
      "line": 22
    },
    {
      "id": "tests/template_tests/filter_tests/test_yesno.py:FunctionTests.test_true_arguments",
      "type": "function",
      "name": "FunctionTests.test_true_arguments",
      "file": "tests/template_tests/filter_tests/test_yesno.py",
      "line": 25
    },
    {
      "id": "tests/template_tests/filter_tests/test_yesno.py:FunctionTests.test_false_arguments",
      "type": "function",
      "name": "FunctionTests.test_false_arguments",
      "file": "tests/template_tests/filter_tests/test_yesno.py",
      "line": 28
    },
    {
      "id": "tests/template_tests/filter_tests/test_yesno.py:FunctionTests.test_none_two_arguments",
      "type": "function",
      "name": "FunctionTests.test_none_two_arguments",
      "file": "tests/template_tests/filter_tests/test_yesno.py",
      "line": 31
    },
    {
      "id": "tests/template_tests/filter_tests/test_yesno.py:FunctionTests.test_none_three_arguments",
      "type": "function",
      "name": "FunctionTests.test_none_three_arguments",
      "file": "tests/template_tests/filter_tests/test_yesno.py",
      "line": 34
    },
    {
      "id": "tests/template_tests/filter_tests/test_yesno.py:FunctionTests.test_invalid_value",
      "type": "function",
      "name": "FunctionTests.test_invalid_value",
      "file": "tests/template_tests/filter_tests/test_yesno.py",
      "line": 37
    },
    {
      "id": "tests/template_tests/filter_tests/test_autoescape.py",
      "type": "file",
      "name": "test_autoescape.py",
      "file": "tests/template_tests/filter_tests/test_autoescape.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_autoescape.py:AutoescapeStringfilterTests",
      "type": "class",
      "name": "AutoescapeStringfilterTests",
      "file": "tests/template_tests/filter_tests/test_autoescape.py",
      "line": 6
    },
    {
      "id": "tests/template_tests/filter_tests/test_autoescape.py:AutoescapeStringfilterTests.test_autoescape_stringfilter01",
      "type": "function",
      "name": "AutoescapeStringfilterTests.test_autoescape_stringfilter01",
      "file": "tests/template_tests/filter_tests/test_autoescape.py",
      "line": 12
    },
    {
      "id": "tests/template_tests/filter_tests/test_autoescape.py:AutoescapeStringfilterTests.test_autoescape_stringfilter02",
      "type": "function",
      "name": "AutoescapeStringfilterTests.test_autoescape_stringfilter02",
      "file": "tests/template_tests/filter_tests/test_autoescape.py",
      "line": 17
    },
    {
      "id": "tests/template_tests/filter_tests/test_autoescape.py:AutoescapeStringfilterTests.test_autoescape_stringfilter03",
      "type": "function",
      "name": "AutoescapeStringfilterTests.test_autoescape_stringfilter03",
      "file": "tests/template_tests/filter_tests/test_autoescape.py",
      "line": 22
    },
    {
      "id": "tests/template_tests/filter_tests/test_autoescape.py:AutoescapeStringfilterTests.test_autoescape_stringfilter04",
      "type": "function",
      "name": "AutoescapeStringfilterTests.test_autoescape_stringfilter04",
      "file": "tests/template_tests/filter_tests/test_autoescape.py",
      "line": 27
    },
    {
      "id": "tests/template_tests/filter_tests/test_linenumbers.py",
      "type": "file",
      "name": "test_linenumbers.py",
      "file": "tests/template_tests/filter_tests/test_linenumbers.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_linenumbers.py:LinenumbersTests",
      "type": "class",
      "name": "LinenumbersTests",
      "file": "tests/template_tests/filter_tests/test_linenumbers.py",
      "line": 8
    },
    {
      "id": "tests/template_tests/filter_tests/test_linenumbers.py:LinenumbersTests.test_linenumbers01",
      "type": "function",
      "name": "LinenumbersTests.test_linenumbers01",
      "file": "tests/template_tests/filter_tests/test_linenumbers.py",
      "line": 15
    },
    {
      "id": "tests/template_tests/filter_tests/test_linenumbers.py:LinenumbersTests.test_linenumbers02",
      "type": "function",
      "name": "LinenumbersTests.test_linenumbers02",
      "file": "tests/template_tests/filter_tests/test_linenumbers.py",
      "line": 23
    },
    {
      "id": "tests/template_tests/filter_tests/test_linenumbers.py:FunctionTests",
      "type": "class",
      "name": "FunctionTests",
      "file": "tests/template_tests/filter_tests/test_linenumbers.py",
      "line": 31
    },
    {
      "id": "tests/template_tests/filter_tests/test_linenumbers.py:FunctionTests.test_linenumbers",
      "type": "function",
      "name": "FunctionTests.test_linenumbers",
      "file": "tests/template_tests/filter_tests/test_linenumbers.py",
      "line": 33
    },
    {
      "id": "tests/template_tests/filter_tests/test_linenumbers.py:FunctionTests.test_linenumbers2",
      "type": "function",
      "name": "FunctionTests.test_linenumbers2",
      "file": "tests/template_tests/filter_tests/test_linenumbers.py",
      "line": 36
    },
    {
      "id": "tests/template_tests/filter_tests/test_linenumbers.py:FunctionTests.test_non_string_input",
      "type": "function",
      "name": "FunctionTests.test_non_string_input",
      "file": "tests/template_tests/filter_tests/test_linenumbers.py",
      "line": 42
    },
    {
      "id": "tests/template_tests/filter_tests/test_linenumbers.py:FunctionTests.test_autoescape",
      "type": "function",
      "name": "FunctionTests.test_autoescape",
      "file": "tests/template_tests/filter_tests/test_linenumbers.py",
      "line": 45
    },
    {
      "id": "tests/template_tests/filter_tests/test_linenumbers.py:FunctionTests.test_autoescape_off",
      "type": "function",
      "name": "FunctionTests.test_autoescape_off",
      "file": "tests/template_tests/filter_tests/test_linenumbers.py",
      "line": 51
    },
    {
      "id": "tests/template_tests/filter_tests/test_time.py",
      "type": "file",
      "name": "test_time.py",
      "file": "tests/template_tests/filter_tests/test_time.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_time.py:TimeTests",
      "type": "class",
      "name": "TimeTests",
      "file": "tests/template_tests/filter_tests/test_time.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/filter_tests/test_time.py:TimeTests.test_time00",
      "type": "function",
      "name": "TimeTests.test_time00",
      "file": "tests/template_tests/filter_tests/test_time.py",
      "line": 17
    },
    {
      "id": "tests/template_tests/filter_tests/test_time.py:TimeTests.test_time00_l10n",
      "type": "function",
      "name": "TimeTests.test_time00_l10n",
      "file": "tests/template_tests/filter_tests/test_time.py",
      "line": 23
    },
    {
      "id": "tests/template_tests/filter_tests/test_time.py:TimeTests.test_time01",
      "type": "function",
      "name": "TimeTests.test_time01",
      "file": "tests/template_tests/filter_tests/test_time.py",
      "line": 29
    },
    {
      "id": "tests/template_tests/filter_tests/test_time.py:TimeTests.test_time02",
      "type": "function",
      "name": "TimeTests.test_time02",
      "file": "tests/template_tests/filter_tests/test_time.py",
      "line": 34
    },
    {
      "id": "tests/template_tests/filter_tests/test_time.py:TimeTests.test_time03",
      "type": "function",
      "name": "TimeTests.test_time03",
      "file": "tests/template_tests/filter_tests/test_time.py",
      "line": 39
    },
    {
      "id": "tests/template_tests/filter_tests/test_time.py:TimeTests.test_time04",
      "type": "function",
      "name": "TimeTests.test_time04",
      "file": "tests/template_tests/filter_tests/test_time.py",
      "line": 44
    },
    {
      "id": "tests/template_tests/filter_tests/test_time.py:TimeTests.test_time05",
      "type": "function",
      "name": "TimeTests.test_time05",
      "file": "tests/template_tests/filter_tests/test_time.py",
      "line": 49
    },
    {
      "id": "tests/template_tests/filter_tests/test_time.py:TimeTests.test_time06",
      "type": "function",
      "name": "TimeTests.test_time06",
      "file": "tests/template_tests/filter_tests/test_time.py",
      "line": 54
    },
    {
      "id": "tests/template_tests/filter_tests/test_time.py:FunctionTests",
      "type": "class",
      "name": "FunctionTests",
      "file": "tests/template_tests/filter_tests/test_time.py",
      "line": 59
    },
    {
      "id": "tests/template_tests/filter_tests/test_time.py:FunctionTests.test_no_args",
      "type": "function",
      "name": "FunctionTests.test_no_args",
      "file": "tests/template_tests/filter_tests/test_time.py",
      "line": 61
    },
    {
      "id": "tests/template_tests/filter_tests/test_time.py:FunctionTests.test_inputs",
      "type": "function",
      "name": "FunctionTests.test_inputs",
      "file": "tests/template_tests/filter_tests/test_time.py",
      "line": 65
    },
    {
      "id": "tests/template_tests/filter_tests/test_rjust.py",
      "type": "file",
      "name": "test_rjust.py",
      "file": "tests/template_tests/filter_tests/test_rjust.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_rjust.py:RjustTests",
      "type": "class",
      "name": "RjustTests",
      "file": "tests/template_tests/filter_tests/test_rjust.py",
      "line": 8
    },
    {
      "id": "tests/template_tests/filter_tests/test_rjust.py:RjustTests.test_rjust01",
      "type": "function",
      "name": "RjustTests.test_rjust01",
      "file": "tests/template_tests/filter_tests/test_rjust.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/filter_tests/test_rjust.py:RjustTests.test_rjust02",
      "type": "function",
      "name": "RjustTests.test_rjust02",
      "file": "tests/template_tests/filter_tests/test_rjust.py",
      "line": 16
    },
    {
      "id": "tests/template_tests/filter_tests/test_rjust.py:FunctionTests",
      "type": "class",
      "name": "FunctionTests",
      "file": "tests/template_tests/filter_tests/test_rjust.py",
      "line": 21
    },
    {
      "id": "tests/template_tests/filter_tests/test_rjust.py:FunctionTests.test_rjust",
      "type": "function",
      "name": "FunctionTests.test_rjust",
      "file": "tests/template_tests/filter_tests/test_rjust.py",
      "line": 23
    },
    {
      "id": "tests/template_tests/filter_tests/test_rjust.py:FunctionTests.test_less_than_string_length",
      "type": "function",
      "name": "FunctionTests.test_less_than_string_length",
      "file": "tests/template_tests/filter_tests/test_rjust.py",
      "line": 26
    },
    {
      "id": "tests/template_tests/filter_tests/test_rjust.py:FunctionTests.test_non_string_input",
      "type": "function",
      "name": "FunctionTests.test_non_string_input",
      "file": "tests/template_tests/filter_tests/test_rjust.py",
      "line": 29
    },
    {
      "id": "tests/template_tests/filter_tests/test_addslashes.py",
      "type": "file",
      "name": "test_addslashes.py",
      "file": "tests/template_tests/filter_tests/test_addslashes.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_addslashes.py:AddslashesTests",
      "type": "class",
      "name": "AddslashesTests",
      "file": "tests/template_tests/filter_tests/test_addslashes.py",
      "line": 8
    },
    {
      "id": "tests/template_tests/filter_tests/test_addslashes.py:AddslashesTests.test_addslashes01",
      "type": "function",
      "name": "AddslashesTests.test_addslashes01",
      "file": "tests/template_tests/filter_tests/test_addslashes.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/filter_tests/test_addslashes.py:AddslashesTests.test_addslashes02",
      "type": "function",
      "name": "AddslashesTests.test_addslashes02",
      "file": "tests/template_tests/filter_tests/test_addslashes.py",
      "line": 16
    },
    {
      "id": "tests/template_tests/filter_tests/test_addslashes.py:FunctionTests",
      "type": "class",
      "name": "FunctionTests",
      "file": "tests/template_tests/filter_tests/test_addslashes.py",
      "line": 21
    },
    {
      "id": "tests/template_tests/filter_tests/test_addslashes.py:FunctionTests.test_quotes",
      "type": "function",
      "name": "FunctionTests.test_quotes",
      "file": "tests/template_tests/filter_tests/test_addslashes.py",
      "line": 23
    },
    {
      "id": "tests/template_tests/filter_tests/test_addslashes.py:FunctionTests.test_backslashes",
      "type": "function",
      "name": "FunctionTests.test_backslashes",
      "file": "tests/template_tests/filter_tests/test_addslashes.py",
      "line": 29
    },
    {
      "id": "tests/template_tests/filter_tests/test_addslashes.py:FunctionTests.test_non_string_input",
      "type": "function",
      "name": "FunctionTests.test_non_string_input",
      "file": "tests/template_tests/filter_tests/test_addslashes.py",
      "line": 32
    },
    {
      "id": "tests/template_tests/filter_tests/test_force_escape.py",
      "type": "file",
      "name": "test_force_escape.py",
      "file": "tests/template_tests/filter_tests/test_force_escape.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_force_escape.py:ForceEscapeTests",
      "type": "class",
      "name": "ForceEscapeTests",
      "file": "tests/template_tests/filter_tests/test_force_escape.py",
      "line": 8
    },
    {
      "id": "tests/template_tests/filter_tests/test_force_escape.py:ForceEscapeTests.test_force_escape01",
      "type": "function",
      "name": "ForceEscapeTests.test_force_escape01",
      "file": "tests/template_tests/filter_tests/test_force_escape.py",
      "line": 15
    },
    {
      "id": "tests/template_tests/filter_tests/test_force_escape.py:ForceEscapeTests.test_force_escape02",
      "type": "function",
      "name": "ForceEscapeTests.test_force_escape02",
      "file": "tests/template_tests/filter_tests/test_force_escape.py",
      "line": 20
    },
    {
      "id": "tests/template_tests/filter_tests/test_force_escape.py:ForceEscapeTests.test_force_escape03",
      "type": "function",
      "name": "ForceEscapeTests.test_force_escape03",
      "file": "tests/template_tests/filter_tests/test_force_escape.py",
      "line": 25
    },
    {
      "id": "tests/template_tests/filter_tests/test_force_escape.py:ForceEscapeTests.test_force_escape04",
      "type": "function",
      "name": "ForceEscapeTests.test_force_escape04",
      "file": "tests/template_tests/filter_tests/test_force_escape.py",
      "line": 30
    },
    {
      "id": "tests/template_tests/filter_tests/test_force_escape.py:ForceEscapeTests.test_force_escape05",
      "type": "function",
      "name": "ForceEscapeTests.test_force_escape05",
      "file": "tests/template_tests/filter_tests/test_force_escape.py",
      "line": 37
    },
    {
      "id": "tests/template_tests/filter_tests/test_force_escape.py:ForceEscapeTests.test_force_escape06",
      "type": "function",
      "name": "ForceEscapeTests.test_force_escape06",
      "file": "tests/template_tests/filter_tests/test_force_escape.py",
      "line": 42
    },
    {
      "id": "tests/template_tests/filter_tests/test_force_escape.py:ForceEscapeTests.test_force_escape07",
      "type": "function",
      "name": "ForceEscapeTests.test_force_escape07",
      "file": "tests/template_tests/filter_tests/test_force_escape.py",
      "line": 47
    },
    {
      "id": "tests/template_tests/filter_tests/test_force_escape.py:ForceEscapeTests.test_force_escape08",
      "type": "function",
      "name": "ForceEscapeTests.test_force_escape08",
      "file": "tests/template_tests/filter_tests/test_force_escape.py",
      "line": 52
    },
    {
      "id": "tests/template_tests/filter_tests/test_force_escape.py:FunctionTests",
      "type": "class",
      "name": "FunctionTests",
      "file": "tests/template_tests/filter_tests/test_force_escape.py",
      "line": 57
    },
    {
      "id": "tests/template_tests/filter_tests/test_force_escape.py:FunctionTests.test_escape",
      "type": "function",
      "name": "FunctionTests.test_escape",
      "file": "tests/template_tests/filter_tests/test_force_escape.py",
      "line": 59
    },
    {
      "id": "tests/template_tests/filter_tests/test_force_escape.py:FunctionTests.test_unicode",
      "type": "function",
      "name": "FunctionTests.test_unicode",
      "file": "tests/template_tests/filter_tests/test_force_escape.py",
      "line": 64
    },
    {
      "id": "tests/template_tests/filter_tests/test_linebreaksbr.py",
      "type": "file",
      "name": "test_linebreaksbr.py",
      "file": "tests/template_tests/filter_tests/test_linebreaksbr.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_linebreaksbr.py:LinebreaksbrTests",
      "type": "class",
      "name": "LinebreaksbrTests",
      "file": "tests/template_tests/filter_tests/test_linebreaksbr.py",
      "line": 8
    },
    {
      "id": "tests/template_tests/filter_tests/test_linebreaksbr.py:LinebreaksbrTests.test_linebreaksbr01",
      "type": "function",
      "name": "LinebreaksbrTests.test_linebreaksbr01",
      "file": "tests/template_tests/filter_tests/test_linebreaksbr.py",
      "line": 15
    },
    {
      "id": "tests/template_tests/filter_tests/test_linebreaksbr.py:LinebreaksbrTests.test_linebreaksbr02",
      "type": "function",
      "name": "LinebreaksbrTests.test_linebreaksbr02",
      "file": "tests/template_tests/filter_tests/test_linebreaksbr.py",
      "line": 20
    },
    {
      "id": "tests/template_tests/filter_tests/test_linebreaksbr.py:FunctionTests",
      "type": "class",
      "name": "FunctionTests",
      "file": "tests/template_tests/filter_tests/test_linebreaksbr.py",
      "line": 25
    },
    {
      "id": "tests/template_tests/filter_tests/test_linebreaksbr.py:FunctionTests.test_newline",
      "type": "function",
      "name": "FunctionTests.test_newline",
      "file": "tests/template_tests/filter_tests/test_linebreaksbr.py",
      "line": 27
    },
    {
      "id": "tests/template_tests/filter_tests/test_linebreaksbr.py:FunctionTests.test_carriage",
      "type": "function",
      "name": "FunctionTests.test_carriage",
      "file": "tests/template_tests/filter_tests/test_linebreaksbr.py",
      "line": 30
    },
    {
      "id": "tests/template_tests/filter_tests/test_linebreaksbr.py:FunctionTests.test_carriage_newline",
      "type": "function",
      "name": "FunctionTests.test_carriage_newline",
      "file": "tests/template_tests/filter_tests/test_linebreaksbr.py",
      "line": 33
    },
    {
      "id": "tests/template_tests/filter_tests/test_linebreaksbr.py:FunctionTests.test_non_string_input",
      "type": "function",
      "name": "FunctionTests.test_non_string_input",
      "file": "tests/template_tests/filter_tests/test_linebreaksbr.py",
      "line": 36
    },
    {
      "id": "tests/template_tests/filter_tests/test_linebreaksbr.py:FunctionTests.test_autoescape",
      "type": "function",
      "name": "FunctionTests.test_autoescape",
      "file": "tests/template_tests/filter_tests/test_linebreaksbr.py",
      "line": 39
    },
    {
      "id": "tests/template_tests/filter_tests/test_linebreaksbr.py:FunctionTests.test_autoescape_off",
      "type": "function",
      "name": "FunctionTests.test_autoescape_off",
      "file": "tests/template_tests/filter_tests/test_linebreaksbr.py",
      "line": 45
    },
    {
      "id": "tests/template_tests/filter_tests/test_timeuntil.py",
      "type": "file",
      "name": "test_timeuntil.py",
      "file": "tests/template_tests/filter_tests/test_timeuntil.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests",
      "type": "class",
      "name": "TimeuntilTests",
      "file": "tests/template_tests/filter_tests/test_timeuntil.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_timeuntil01",
      "type": "function",
      "name": "TimeuntilTests.test_timeuntil01",
      "file": "tests/template_tests/filter_tests/test_timeuntil.py",
      "line": 15
    },
    {
      "id": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_timeuntil02",
      "type": "function",
      "name": "TimeuntilTests.test_timeuntil02",
      "file": "tests/template_tests/filter_tests/test_timeuntil.py",
      "line": 20
    },
    {
      "id": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_timeuntil03",
      "type": "function",
      "name": "TimeuntilTests.test_timeuntil03",
      "file": "tests/template_tests/filter_tests/test_timeuntil.py",
      "line": 25
    },
    {
      "id": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_timeuntil04",
      "type": "function",
      "name": "TimeuntilTests.test_timeuntil04",
      "file": "tests/template_tests/filter_tests/test_timeuntil.py",
      "line": 33
    },
    {
      "id": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_timeuntil05",
      "type": "function",
      "name": "TimeuntilTests.test_timeuntil05",
      "file": "tests/template_tests/filter_tests/test_timeuntil.py",
      "line": 41
    },
    {
      "id": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_timeuntil06",
      "type": "function",
      "name": "TimeuntilTests.test_timeuntil06",
      "file": "tests/template_tests/filter_tests/test_timeuntil.py",
      "line": 50
    },
    {
      "id": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_timeuntil07",
      "type": "function",
      "name": "TimeuntilTests.test_timeuntil07",
      "file": "tests/template_tests/filter_tests/test_timeuntil.py",
      "line": 55
    },
    {
      "id": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_timeuntil08",
      "type": "function",
      "name": "TimeuntilTests.test_timeuntil08",
      "file": "tests/template_tests/filter_tests/test_timeuntil.py",
      "line": 62
    },
    {
      "id": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_timeuntil09",
      "type": "function",
      "name": "TimeuntilTests.test_timeuntil09",
      "file": "tests/template_tests/filter_tests/test_timeuntil.py",
      "line": 67
    },
    {
      "id": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_timeuntil10",
      "type": "function",
      "name": "TimeuntilTests.test_timeuntil10",
      "file": "tests/template_tests/filter_tests/test_timeuntil.py",
      "line": 74
    },
    {
      "id": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_timeuntil11",
      "type": "function",
      "name": "TimeuntilTests.test_timeuntil11",
      "file": "tests/template_tests/filter_tests/test_timeuntil.py",
      "line": 80
    },
    {
      "id": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_timeuntil12",
      "type": "function",
      "name": "TimeuntilTests.test_timeuntil12",
      "file": "tests/template_tests/filter_tests/test_timeuntil.py",
      "line": 85
    },
    {
      "id": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_timeuntil13",
      "type": "function",
      "name": "TimeuntilTests.test_timeuntil13",
      "file": "tests/template_tests/filter_tests/test_timeuntil.py",
      "line": 91
    },
    {
      "id": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_timeuntil14",
      "type": "function",
      "name": "TimeuntilTests.test_timeuntil14",
      "file": "tests/template_tests/filter_tests/test_timeuntil.py",
      "line": 96
    },
    {
      "id": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_naive_aware_type_error",
      "type": "function",
      "name": "TimeuntilTests.test_naive_aware_type_error",
      "file": "tests/template_tests/filter_tests/test_timeuntil.py",
      "line": 101
    },
    {
      "id": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_aware_naive_type_error",
      "type": "function",
      "name": "TimeuntilTests.test_aware_naive_type_error",
      "file": "tests/template_tests/filter_tests/test_timeuntil.py",
      "line": 106
    },
    {
      "id": "tests/template_tests/filter_tests/test_timeuntil.py:FunctionTests",
      "type": "class",
      "name": "FunctionTests",
      "file": "tests/template_tests/filter_tests/test_timeuntil.py",
      "line": 111
    },
    {
      "id": "tests/template_tests/filter_tests/test_timeuntil.py:FunctionTests.test_until_now",
      "type": "function",
      "name": "FunctionTests.test_until_now",
      "file": "tests/template_tests/filter_tests/test_timeuntil.py",
      "line": 113
    },
    {
      "id": "tests/template_tests/filter_tests/test_timeuntil.py:FunctionTests.test_no_args",
      "type": "function",
      "name": "FunctionTests.test_no_args",
      "file": "tests/template_tests/filter_tests/test_timeuntil.py",
      "line": 116
    },
    {
      "id": "tests/template_tests/filter_tests/test_timeuntil.py:FunctionTests.test_explicit_date",
      "type": "function",
      "name": "FunctionTests.test_explicit_date",
      "file": "tests/template_tests/filter_tests/test_timeuntil.py",
      "line": 119
    },
    {
      "id": "tests/template_tests/filter_tests/test_truncatechars_html.py",
      "type": "file",
      "name": "test_truncatechars_html.py",
      "file": "tests/template_tests/filter_tests/test_truncatechars_html.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_truncatechars_html.py:FunctionTests",
      "type": "class",
      "name": "FunctionTests",
      "file": "tests/template_tests/filter_tests/test_truncatechars_html.py",
      "line": 5
    },
    {
      "id": "tests/template_tests/filter_tests/test_truncatechars_html.py:FunctionTests.test_truncate_zero",
      "type": "function",
      "name": "FunctionTests.test_truncate_zero",
      "file": "tests/template_tests/filter_tests/test_truncatechars_html.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/filter_tests/test_truncatechars_html.py:FunctionTests.test_truncate",
      "type": "function",
      "name": "FunctionTests.test_truncate",
      "file": "tests/template_tests/filter_tests/test_truncatechars_html.py",
      "line": 10
    },
    {
      "id": "tests/template_tests/filter_tests/test_truncatechars_html.py:FunctionTests.test_truncate2",
      "type": "function",
      "name": "FunctionTests.test_truncate2",
      "file": "tests/template_tests/filter_tests/test_truncatechars_html.py",
      "line": 16
    },
    {
      "id": "tests/template_tests/filter_tests/test_truncatechars_html.py:FunctionTests.test_truncate3",
      "type": "function",
      "name": "FunctionTests.test_truncate3",
      "file": "tests/template_tests/filter_tests/test_truncatechars_html.py",
      "line": 22
    },
    {
      "id": "tests/template_tests/filter_tests/test_truncatechars_html.py:FunctionTests.test_truncate_unicode",
      "type": "function",
      "name": "FunctionTests.test_truncate_unicode",
      "file": "tests/template_tests/filter_tests/test_truncatechars_html.py",
      "line": 28
    },
    {
      "id": "tests/template_tests/filter_tests/test_truncatechars_html.py:FunctionTests.test_truncate_something",
      "type": "function",
      "name": "FunctionTests.test_truncate_something",
      "file": "tests/template_tests/filter_tests/test_truncatechars_html.py",
      "line": 31
    },
    {
      "id": "tests/template_tests/filter_tests/test_truncatechars_html.py:FunctionTests.test_invalid_arg",
      "type": "function",
      "name": "FunctionTests.test_invalid_arg",
      "file": "tests/template_tests/filter_tests/test_truncatechars_html.py",
      "line": 34
    },
    {
      "id": "tests/template_tests/filter_tests/test_join.py",
      "type": "file",
      "name": "test_join.py",
      "file": "tests/template_tests/filter_tests/test_join.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_join.py:JoinTests",
      "type": "class",
      "name": "JoinTests",
      "file": "tests/template_tests/filter_tests/test_join.py",
      "line": 8
    },
    {
      "id": "tests/template_tests/filter_tests/test_join.py:JoinTests.test_join01",
      "type": "function",
      "name": "JoinTests.test_join01",
      "file": "tests/template_tests/filter_tests/test_join.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/filter_tests/test_join.py:JoinTests.test_join02",
      "type": "function",
      "name": "JoinTests.test_join02",
      "file": "tests/template_tests/filter_tests/test_join.py",
      "line": 16
    },
    {
      "id": "tests/template_tests/filter_tests/test_join.py:JoinTests.test_join03",
      "type": "function",
      "name": "JoinTests.test_join03",
      "file": "tests/template_tests/filter_tests/test_join.py",
      "line": 21
    },
    {
      "id": "tests/template_tests/filter_tests/test_join.py:JoinTests.test_join04",
      "type": "function",
      "name": "JoinTests.test_join04",
      "file": "tests/template_tests/filter_tests/test_join.py",
      "line": 26
    },
    {
      "id": "tests/template_tests/filter_tests/test_join.py:JoinTests.test_join05",
      "type": "function",
      "name": "JoinTests.test_join05",
      "file": "tests/template_tests/filter_tests/test_join.py",
      "line": 32
    },
    {
      "id": "tests/template_tests/filter_tests/test_join.py:JoinTests.test_join06",
      "type": "function",
      "name": "JoinTests.test_join06",
      "file": "tests/template_tests/filter_tests/test_join.py",
      "line": 37
    },
    {
      "id": "tests/template_tests/filter_tests/test_join.py:JoinTests.test_join07",
      "type": "function",
      "name": "JoinTests.test_join07",
      "file": "tests/template_tests/filter_tests/test_join.py",
      "line": 42
    },
    {
      "id": "tests/template_tests/filter_tests/test_join.py:JoinTests.test_join08",
      "type": "function",
      "name": "JoinTests.test_join08",
      "file": "tests/template_tests/filter_tests/test_join.py",
      "line": 47
    },
    {
      "id": "tests/template_tests/filter_tests/test_join.py:FunctionTests",
      "type": "class",
      "name": "FunctionTests",
      "file": "tests/template_tests/filter_tests/test_join.py",
      "line": 52
    },
    {
      "id": "tests/template_tests/filter_tests/test_join.py:FunctionTests.test_list",
      "type": "function",
      "name": "FunctionTests.test_list",
      "file": "tests/template_tests/filter_tests/test_join.py",
      "line": 54
    },
    {
      "id": "tests/template_tests/filter_tests/test_join.py:FunctionTests.test_autoescape",
      "type": "function",
      "name": "FunctionTests.test_autoescape",
      "file": "tests/template_tests/filter_tests/test_join.py",
      "line": 57
    },
    {
      "id": "tests/template_tests/filter_tests/test_join.py:FunctionTests.test_autoescape_off",
      "type": "function",
      "name": "FunctionTests.test_autoescape_off",
      "file": "tests/template_tests/filter_tests/test_join.py",
      "line": 63
    },
    {
      "id": "tests/template_tests/filter_tests/test_join.py:FunctionTests.test_noniterable_arg",
      "type": "function",
      "name": "FunctionTests.test_noniterable_arg",
      "file": "tests/template_tests/filter_tests/test_join.py",
      "line": 69
    },
    {
      "id": "tests/template_tests/filter_tests/test_join.py:FunctionTests.test_noniterable_arg_autoescape_off",
      "type": "function",
      "name": "FunctionTests.test_noniterable_arg_autoescape_off",
      "file": "tests/template_tests/filter_tests/test_join.py",
      "line": 73
    },
    {
      "id": "tests/template_tests/filter_tests/test_truncatewords_html.py",
      "type": "file",
      "name": "test_truncatewords_html.py",
      "file": "tests/template_tests/filter_tests/test_truncatewords_html.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_truncatewords_html.py:FunctionTests",
      "type": "class",
      "name": "FunctionTests",
      "file": "tests/template_tests/filter_tests/test_truncatewords_html.py",
      "line": 5
    },
    {
      "id": "tests/template_tests/filter_tests/test_truncatewords_html.py:FunctionTests.test_truncate_zero",
      "type": "function",
      "name": "FunctionTests.test_truncate_zero",
      "file": "tests/template_tests/filter_tests/test_truncatewords_html.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/filter_tests/test_truncatewords_html.py:FunctionTests.test_truncate",
      "type": "function",
      "name": "FunctionTests.test_truncate",
      "file": "tests/template_tests/filter_tests/test_truncatewords_html.py",
      "line": 10
    },
    {
      "id": "tests/template_tests/filter_tests/test_truncatewords_html.py:FunctionTests.test_truncate2",
      "type": "function",
      "name": "FunctionTests.test_truncate2",
      "file": "tests/template_tests/filter_tests/test_truncatewords_html.py",
      "line": 16
    },
    {
      "id": "tests/template_tests/filter_tests/test_truncatewords_html.py:FunctionTests.test_truncate3",
      "type": "function",
      "name": "FunctionTests.test_truncate3",
      "file": "tests/template_tests/filter_tests/test_truncatewords_html.py",
      "line": 22
    },
    {
      "id": "tests/template_tests/filter_tests/test_truncatewords_html.py:FunctionTests.test_truncate4",
      "type": "function",
      "name": "FunctionTests.test_truncate4",
      "file": "tests/template_tests/filter_tests/test_truncatewords_html.py",
      "line": 28
    },
    {
      "id": "tests/template_tests/filter_tests/test_truncatewords_html.py:FunctionTests.test_truncate_unicode",
      "type": "function",
      "name": "FunctionTests.test_truncate_unicode",
      "file": "tests/template_tests/filter_tests/test_truncatewords_html.py",
      "line": 34
    },
    {
      "id": "tests/template_tests/filter_tests/test_truncatewords_html.py:FunctionTests.test_truncate_complex",
      "type": "function",
      "name": "FunctionTests.test_truncate_complex",
      "file": "tests/template_tests/filter_tests/test_truncatewords_html.py",
      "line": 37
    },
    {
      "id": "tests/template_tests/filter_tests/test_truncatewords_html.py:FunctionTests.test_invalid_arg",
      "type": "function",
      "name": "FunctionTests.test_invalid_arg",
      "file": "tests/template_tests/filter_tests/test_truncatewords_html.py",
      "line": 43
    },
    {
      "id": "tests/template_tests/filter_tests/test_truncatechars.py",
      "type": "file",
      "name": "test_truncatechars.py",
      "file": "tests/template_tests/filter_tests/test_truncatechars.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_truncatechars.py:TruncatecharsTests",
      "type": "class",
      "name": "TruncatecharsTests",
      "file": "tests/template_tests/filter_tests/test_truncatechars.py",
      "line": 6
    },
    {
      "id": "tests/template_tests/filter_tests/test_truncatechars.py:TruncatecharsTests.test_truncatechars01",
      "type": "function",
      "name": "TruncatecharsTests.test_truncatechars01",
      "file": "tests/template_tests/filter_tests/test_truncatechars.py",
      "line": 9
    },
    {
      "id": "tests/template_tests/filter_tests/test_truncatechars.py:TruncatecharsTests.test_truncatechars02",
      "type": "function",
      "name": "TruncatecharsTests.test_truncatechars02",
      "file": "tests/template_tests/filter_tests/test_truncatechars.py",
      "line": 14
    },
    {
      "id": "tests/template_tests/filter_tests/test_truncatechars.py:TruncatecharsTests.test_fail_silently_incorrect_arg",
      "type": "function",
      "name": "TruncatecharsTests.test_fail_silently_incorrect_arg",
      "file": "tests/template_tests/filter_tests/test_truncatechars.py",
      "line": 19
    },
    {
      "id": "tests/template_tests/filter_tests/test_dictsortreversed.py",
      "type": "file",
      "name": "test_dictsortreversed.py",
      "file": "tests/template_tests/filter_tests/test_dictsortreversed.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_dictsortreversed.py:FunctionTests",
      "type": "class",
      "name": "FunctionTests",
      "file": "tests/template_tests/filter_tests/test_dictsortreversed.py",
      "line": 5
    },
    {
      "id": "tests/template_tests/filter_tests/test_dictsortreversed.py:FunctionTests.test_sort",
      "type": "function",
      "name": "FunctionTests.test_sort",
      "file": "tests/template_tests/filter_tests/test_dictsortreversed.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/filter_tests/test_dictsortreversed.py:FunctionTests.test_sort_list_of_tuples",
      "type": "function",
      "name": "FunctionTests.test_sort_list_of_tuples",
      "file": "tests/template_tests/filter_tests/test_dictsortreversed.py",
      "line": 22
    },
    {
      "id": "tests/template_tests/filter_tests/test_dictsortreversed.py:FunctionTests.test_sort_list_of_tuple_like_dicts",
      "type": "function",
      "name": "FunctionTests.test_sort_list_of_tuple_like_dicts",
      "file": "tests/template_tests/filter_tests/test_dictsortreversed.py",
      "line": 27
    },
    {
      "id": "tests/template_tests/filter_tests/test_dictsortreversed.py:FunctionTests.test_invalid_values",
      "type": "function",
      "name": "FunctionTests.test_invalid_values",
      "file": "tests/template_tests/filter_tests/test_dictsortreversed.py",
      "line": 40
    },
    {
      "id": "tests/template_tests/filter_tests/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "tests/template_tests/filter_tests/__init__.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_add.py",
      "type": "file",
      "name": "test_add.py",
      "file": "tests/template_tests/filter_tests/test_add.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_add.py:AddTests",
      "type": "class",
      "name": "AddTests",
      "file": "tests/template_tests/filter_tests/test_add.py",
      "line": 9
    },
    {
      "id": "tests/template_tests/filter_tests/test_add.py:AddTests.test_add01",
      "type": "function",
      "name": "AddTests.test_add01",
      "file": "tests/template_tests/filter_tests/test_add.py",
      "line": 15
    },
    {
      "id": "tests/template_tests/filter_tests/test_add.py:AddTests.test_add02",
      "type": "function",
      "name": "AddTests.test_add02",
      "file": "tests/template_tests/filter_tests/test_add.py",
      "line": 20
    },
    {
      "id": "tests/template_tests/filter_tests/test_add.py:AddTests.test_add03",
      "type": "function",
      "name": "AddTests.test_add03",
      "file": "tests/template_tests/filter_tests/test_add.py",
      "line": 25
    },
    {
      "id": "tests/template_tests/filter_tests/test_add.py:AddTests.test_add04",
      "type": "function",
      "name": "AddTests.test_add04",
      "file": "tests/template_tests/filter_tests/test_add.py",
      "line": 30
    },
    {
      "id": "tests/template_tests/filter_tests/test_add.py:AddTests.test_add05",
      "type": "function",
      "name": "AddTests.test_add05",
      "file": "tests/template_tests/filter_tests/test_add.py",
      "line": 35
    },
    {
      "id": "tests/template_tests/filter_tests/test_add.py:AddTests.test_add06",
      "type": "function",
      "name": "AddTests.test_add06",
      "file": "tests/template_tests/filter_tests/test_add.py",
      "line": 40
    },
    {
      "id": "tests/template_tests/filter_tests/test_add.py:AddTests.test_add07",
      "type": "function",
      "name": "AddTests.test_add07",
      "file": "tests/template_tests/filter_tests/test_add.py",
      "line": 45
    },
    {
      "id": "tests/template_tests/filter_tests/test_add.py:FunctionTests",
      "type": "class",
      "name": "FunctionTests",
      "file": "tests/template_tests/filter_tests/test_add.py",
      "line": 50
    },
    {
      "id": "tests/template_tests/filter_tests/test_add.py:FunctionTests.test_add",
      "type": "function",
      "name": "FunctionTests.test_add",
      "file": "tests/template_tests/filter_tests/test_add.py",
      "line": 52
    },
    {
      "id": "tests/template_tests/filter_tests/test_ljust.py",
      "type": "file",
      "name": "test_ljust.py",
      "file": "tests/template_tests/filter_tests/test_ljust.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_ljust.py:LjustTests",
      "type": "class",
      "name": "LjustTests",
      "file": "tests/template_tests/filter_tests/test_ljust.py",
      "line": 8
    },
    {
      "id": "tests/template_tests/filter_tests/test_ljust.py:LjustTests.test_ljust01",
      "type": "function",
      "name": "LjustTests.test_ljust01",
      "file": "tests/template_tests/filter_tests/test_ljust.py",
      "line": 11
    },
    {
      "id": "tests/template_tests/filter_tests/test_ljust.py:LjustTests.test_ljust02",
      "type": "function",
      "name": "LjustTests.test_ljust02",
      "file": "tests/template_tests/filter_tests/test_ljust.py",
      "line": 16
    },
    {
      "id": "tests/template_tests/filter_tests/test_ljust.py:FunctionTests",
      "type": "class",
      "name": "FunctionTests",
      "file": "tests/template_tests/filter_tests/test_ljust.py",
      "line": 21
    },
    {
      "id": "tests/template_tests/filter_tests/test_ljust.py:FunctionTests.test_ljust",
      "type": "function",
      "name": "FunctionTests.test_ljust",
      "file": "tests/template_tests/filter_tests/test_ljust.py",
      "line": 23
    },
    {
      "id": "tests/template_tests/filter_tests/test_ljust.py:FunctionTests.test_less_than_string_length",
      "type": "function",
      "name": "FunctionTests.test_less_than_string_length",
      "file": "tests/template_tests/filter_tests/test_ljust.py",
      "line": 27
    },
    {
      "id": "tests/template_tests/filter_tests/test_ljust.py:FunctionTests.test_non_string_input",
      "type": "function",
      "name": "FunctionTests.test_non_string_input",
      "file": "tests/template_tests/filter_tests/test_ljust.py",
      "line": 30
    },
    {
      "id": "tests/template_tests/filter_tests/test_title.py",
      "type": "file",
      "name": "test_title.py",
      "file": "tests/template_tests/filter_tests/test_title.py",
      "line": 0
    },
    {
      "id": "tests/template_tests/filter_tests/test_title.py:TitleTests",
      "type": "class",
      "name": "TitleTests",
      "file": "tests/template_tests/filter_tests/test_title.py",
      "line": 7
    },
    {
      "id": "tests/template_tests/filter_tests/test_title.py:TitleTests.test_title1",
      "type": "function",
      "name": "TitleTests.test_title1",
      "file": "tests/template_tests/filter_tests/test_title.py",
      "line": 10
    },
    {
      "id": "tests/template_tests/filter_tests/test_title.py:TitleTests.test_title2",
      "type": "function",
      "name": "TitleTests.test_title2",
      "file": "tests/template_tests/filter_tests/test_title.py",
      "line": 15
    },
    {
      "id": "tests/template_tests/filter_tests/test_title.py:FunctionTests",
      "type": "class",
      "name": "FunctionTests",
      "file": "tests/template_tests/filter_tests/test_title.py",
      "line": 20
    },
    {
      "id": "tests/template_tests/filter_tests/test_title.py:FunctionTests.test_title",
      "type": "function",
      "name": "FunctionTests.test_title",
      "file": "tests/template_tests/filter_tests/test_title.py",
      "line": 22
    },
    {
      "id": "tests/template_tests/filter_tests/test_title.py:FunctionTests.test_unicode",
      "type": "function",
      "name": "FunctionTests.test_unicode",
      "file": "tests/template_tests/filter_tests/test_title.py",
      "line": 25
    },
    {
      "id": "tests/template_tests/filter_tests/test_title.py:FunctionTests.test_non_string_input",
      "type": "function",
      "name": "FunctionTests.test_non_string_input",
      "file": "tests/template_tests/filter_tests/test_title.py",
      "line": 28
    },
    {
      "id": "tests/db_functions",
      "type": "directory",
      "name": "db_functions",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/db_functions/datetime",
      "type": "directory",
      "name": "datetime",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/db_functions/math",
      "type": "directory",
      "name": "math",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/db_functions/window",
      "type": "directory",
      "name": "window",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/db_functions/comparison",
      "type": "directory",
      "name": "comparison",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/db_functions/text",
      "type": "directory",
      "name": "text",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/m2m_recursive",
      "type": "directory",
      "name": "m2m_recursive",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/generic_relations_regress",
      "type": "directory",
      "name": "generic_relations_regress",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/cache",
      "type": "directory",
      "name": "cache",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/field_subclassing",
      "type": "directory",
      "name": "field_subclassing",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/custom_lookups",
      "type": "directory",
      "name": "custom_lookups",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/empty",
      "type": "directory",
      "name": "empty",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/empty/no_models",
      "type": "directory",
      "name": "no_models",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/defer",
      "type": "directory",
      "name": "defer",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/update",
      "type": "directory",
      "name": "update",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/constraints",
      "type": "directory",
      "name": "constraints",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/delete",
      "type": "directory",
      "name": "delete",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/select_related_regress",
      "type": "directory",
      "name": "select_related_regress",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_changelist",
      "type": "directory",
      "name": "admin_changelist",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/model_inheritance",
      "type": "directory",
      "name": "model_inheritance",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/generic_relations",
      "type": "directory",
      "name": "generic_relations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/resolve_url",
      "type": "directory",
      "name": "resolve_url",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/decorators",
      "type": "directory",
      "name": "decorators",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/context_processors",
      "type": "directory",
      "name": "context_processors",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/urlpatterns_reverse",
      "type": "directory",
      "name": "urlpatterns_reverse",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/urlpatterns_reverse/translations",
      "type": "directory",
      "name": "translations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/urlpatterns_reverse/translations/locale",
      "type": "directory",
      "name": "locale",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/urlpatterns_reverse/translations/locale/de",
      "type": "directory",
      "name": "de",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/urlpatterns_reverse/translations/locale/fr",
      "type": "directory",
      "name": "fr",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/test_utils",
      "type": "directory",
      "name": "test_utils",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/file_uploads",
      "type": "directory",
      "name": "file_uploads",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/get_object_or_404",
      "type": "directory",
      "name": "get_object_or_404",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/mail",
      "type": "directory",
      "name": "mail",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/shell",
      "type": "directory",
      "name": "shell",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/null_fk_ordering",
      "type": "directory",
      "name": "null_fk_ordering",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/fixtures_model_package",
      "type": "directory",
      "name": "fixtures_model_package",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/fixtures_model_package/models",
      "type": "directory",
      "name": "models",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/forms_tests",
      "type": "directory",
      "name": "forms_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/forms_tests/field_tests",
      "type": "directory",
      "name": "field_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/forms_tests/field_tests/filepathfield_test_dir",
      "type": "directory",
      "name": "filepathfield_test_dir",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/forms_tests/field_tests/filepathfield_test_dir/h",
      "type": "directory",
      "name": "h",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/forms_tests/field_tests/filepathfield_test_dir/j",
      "type": "directory",
      "name": "j",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/forms_tests/field_tests/filepathfield_test_dir/c",
      "type": "directory",
      "name": "c",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/forms_tests/field_tests/filepathfield_test_dir/c/f",
      "type": "directory",
      "name": "f",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/forms_tests/tests",
      "type": "directory",
      "name": "tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/forms_tests/widget_tests",
      "type": "directory",
      "name": "widget_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/choices",
      "type": "directory",
      "name": "choices",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/timezones",
      "type": "directory",
      "name": "timezones",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/dispatch",
      "type": "directory",
      "name": "dispatch",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/inline_formsets",
      "type": "directory",
      "name": "inline_formsets",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/datatypes",
      "type": "directory",
      "name": "datatypes",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/backends",
      "type": "directory",
      "name": "backends",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/backends/postgresql",
      "type": "directory",
      "name": "postgresql",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/backends/oracle",
      "type": "directory",
      "name": "oracle",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/backends/sqlite",
      "type": "directory",
      "name": "sqlite",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/backends/mysql",
      "type": "directory",
      "name": "mysql",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/backends/base",
      "type": "directory",
      "name": "base",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/inspectdb",
      "type": "directory",
      "name": "inspectdb",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/conditional_processing",
      "type": "directory",
      "name": "conditional_processing",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/signals",
      "type": "directory",
      "name": "signals",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/wsgi",
      "type": "directory",
      "name": "wsgi",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations2",
      "type": "directory",
      "name": "migrations2",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations2/test_migrations_2_no_deps",
      "type": "directory",
      "name": "test_migrations_2_no_deps",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations2/test_migrations_2_first",
      "type": "directory",
      "name": "test_migrations_2_first",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migrations2/test_migrations_2",
      "type": "directory",
      "name": "test_migrations_2",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/file_storage",
      "type": "directory",
      "name": "file_storage",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/view_tests",
      "type": "directory",
      "name": "view_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/view_tests/templatetags",
      "type": "directory",
      "name": "templatetags",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/view_tests/tests",
      "type": "directory",
      "name": "tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/view_tests/app5",
      "type": "directory",
      "name": "app5",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/view_tests/app2",
      "type": "directory",
      "name": "app2",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/view_tests/app3",
      "type": "directory",
      "name": "app3",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/view_tests/app4",
      "type": "directory",
      "name": "app4",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/view_tests/app1",
      "type": "directory",
      "name": "app1",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/view_tests/app0",
      "type": "directory",
      "name": "app0",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/template_loader",
      "type": "directory",
      "name": "template_loader",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/save_delete_hooks",
      "type": "directory",
      "name": "save_delete_hooks",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/messages_tests",
      "type": "directory",
      "name": "messages_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_docs",
      "type": "directory",
      "name": "admin_docs",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/check_framework",
      "type": "directory",
      "name": "check_framework",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/check_framework/urls",
      "type": "directory",
      "name": "urls",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/check_framework/urls/path_compatibility",
      "type": "directory",
      "name": "path_compatibility",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/test_exceptions",
      "type": "directory",
      "name": "test_exceptions",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/responses",
      "type": "directory",
      "name": "responses",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/select_for_update",
      "type": "directory",
      "name": "select_for_update",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migration_test_data_persistence",
      "type": "directory",
      "name": "migration_test_data_persistence",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/migration_test_data_persistence/migrations",
      "type": "directory",
      "name": "migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/queries",
      "type": "directory",
      "name": "queries",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/m2m_intermediary",
      "type": "directory",
      "name": "m2m_intermediary",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/basic",
      "type": "directory",
      "name": "basic",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/model_options",
      "type": "directory",
      "name": "model_options",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/model_options/models",
      "type": "directory",
      "name": "models",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/nested_foreign_keys",
      "type": "directory",
      "name": "nested_foreign_keys",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/import_error_package",
      "type": "directory",
      "name": "import_error_package",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/app_loading",
      "type": "directory",
      "name": "app_loading",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/app_loading/not_installed",
      "type": "directory",
      "name": "not_installed",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/lookup",
      "type": "directory",
      "name": "lookup",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/reverse_lookup",
      "type": "directory",
      "name": "reverse_lookup",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/logging_tests",
      "type": "directory",
      "name": "logging_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/invalid_models_tests",
      "type": "directory",
      "name": "invalid_models_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/introspection",
      "type": "directory",
      "name": "introspection",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/urlpatterns",
      "type": "directory",
      "name": "urlpatterns",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_custom_urls",
      "type": "directory",
      "name": "admin_custom_urls",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/swappable_models",
      "type": "directory",
      "name": "swappable_models",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/many_to_one_null",
      "type": "directory",
      "name": "many_to_one_null",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/user_commands",
      "type": "directory",
      "name": "user_commands",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/user_commands/management",
      "type": "directory",
      "name": "management",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/user_commands/management/commands",
      "type": "directory",
      "name": "commands",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/contenttypes_tests",
      "type": "directory",
      "name": "contenttypes_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/contenttypes_tests/operations_migrations",
      "type": "directory",
      "name": "operations_migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/order_with_respect_to",
      "type": "directory",
      "name": "order_with_respect_to",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/requests",
      "type": "directory",
      "name": "requests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/from_db_value",
      "type": "directory",
      "name": "from_db_value",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_views",
      "type": "directory",
      "name": "admin_views",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/managers_regress",
      "type": "directory",
      "name": "managers_regress",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_registration",
      "type": "directory",
      "name": "admin_registration",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/template_backends",
      "type": "directory",
      "name": "template_backends",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/template_backends/apps",
      "type": "directory",
      "name": "apps",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/template_backends/apps/importerror",
      "type": "directory",
      "name": "importerror",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/template_backends/apps/importerror/templatetags",
      "type": "directory",
      "name": "templatetags",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/template_backends/apps/good",
      "type": "directory",
      "name": "good",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/template_backends/apps/good/templatetags",
      "type": "directory",
      "name": "templatetags",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/template_backends/apps/good/templatetags/subpackage",
      "type": "directory",
      "name": "subpackage",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/annotations",
      "type": "directory",
      "name": "annotations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/schema",
      "type": "directory",
      "name": "schema",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_scripts",
      "type": "directory",
      "name": "admin_scripts",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_scripts/broken_app",
      "type": "directory",
      "name": "broken_app",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_scripts/app_raising_warning",
      "type": "directory",
      "name": "app_raising_warning",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_scripts/simple_app",
      "type": "directory",
      "name": "simple_app",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_scripts/simple_app/management",
      "type": "directory",
      "name": "management",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_scripts/simple_app/management/commands",
      "type": "directory",
      "name": "commands",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_scripts/app_waiting_migration",
      "type": "directory",
      "name": "app_waiting_migration",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_scripts/app_waiting_migration/migrations",
      "type": "directory",
      "name": "migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_scripts/custom_templates",
      "type": "directory",
      "name": "custom_templates",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_scripts/custom_templates/app_template",
      "type": "directory",
      "name": "app_template",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_scripts/custom_templates/project_template",
      "type": "directory",
      "name": "project_template",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_scripts/custom_templates/project_template/project_name",
      "type": "directory",
      "name": "project_name",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_scripts/custom_templates/project_template/additional_dir",
      "type": "directory",
      "name": "additional_dir",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_scripts/management",
      "type": "directory",
      "name": "management",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_scripts/management/commands",
      "type": "directory",
      "name": "commands",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_scripts/app_with_import",
      "type": "directory",
      "name": "app_with_import",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_scripts/another_app_waiting_migration",
      "type": "directory",
      "name": "another_app_waiting_migration",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_scripts/another_app_waiting_migration/migrations",
      "type": "directory",
      "name": "migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_scripts/app_raising_messages",
      "type": "directory",
      "name": "app_raising_messages",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_scripts/complex_app",
      "type": "directory",
      "name": "complex_app",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_scripts/complex_app/admin",
      "type": "directory",
      "name": "admin",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_scripts/complex_app/management",
      "type": "directory",
      "name": "management",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_scripts/complex_app/management/commands",
      "type": "directory",
      "name": "commands",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_scripts/complex_app/models",
      "type": "directory",
      "name": "models",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/custom_pk",
      "type": "directory",
      "name": "custom_pk",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/reserved_names",
      "type": "directory",
      "name": "reserved_names",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/model_meta",
      "type": "directory",
      "name": "model_meta",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/syndication_tests",
      "type": "directory",
      "name": "syndication_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/transactions",
      "type": "directory",
      "name": "transactions",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/multiple_database",
      "type": "directory",
      "name": "multiple_database",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/serializers",
      "type": "directory",
      "name": "serializers",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/serializers/models",
      "type": "directory",
      "name": "models",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/custom_managers",
      "type": "directory",
      "name": "custom_managers",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/absolute_url_overrides",
      "type": "directory",
      "name": "absolute_url_overrides",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/model_indexes",
      "type": "directory",
      "name": "model_indexes",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/staticfiles_tests",
      "type": "directory",
      "name": "staticfiles_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/staticfiles_tests/urls",
      "type": "directory",
      "name": "urls",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/staticfiles_tests/apps",
      "type": "directory",
      "name": "apps",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/staticfiles_tests/apps/test",
      "type": "directory",
      "name": "test",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/staticfiles_tests/apps/no_label",
      "type": "directory",
      "name": "no_label",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/utils_tests",
      "type": "directory",
      "name": "utils_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/utils_tests/test_module",
      "type": "directory",
      "name": "test_module",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/utils_tests/test_module/child_module",
      "type": "directory",
      "name": "child_module",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/httpwrappers",
      "type": "directory",
      "name": "httpwrappers",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/dbshell",
      "type": "directory",
      "name": "dbshell",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/project_template",
      "type": "directory",
      "name": "project_template",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/properties",
      "type": "directory",
      "name": "properties",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/model_package",
      "type": "directory",
      "name": "model_package",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/model_package/models",
      "type": "directory",
      "name": "models",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/version",
      "type": "directory",
      "name": "version",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/test_client_regress",
      "type": "directory",
      "name": "test_client_regress",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/modeladmin",
      "type": "directory",
      "name": "modeladmin",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_checks",
      "type": "directory",
      "name": "admin_checks",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_inlines",
      "type": "directory",
      "name": "admin_inlines",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_autodiscover",
      "type": "directory",
      "name": "admin_autodiscover",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/datetimes",
      "type": "directory",
      "name": "datetimes",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/ordering",
      "type": "directory",
      "name": "ordering",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/expressions_window",
      "type": "directory",
      "name": "expressions_window",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/m2o_recursive",
      "type": "directory",
      "name": "m2o_recursive",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/sites_framework",
      "type": "directory",
      "name": "sites_framework",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/sites_framework/migrations",
      "type": "directory",
      "name": "migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/many_to_one",
      "type": "directory",
      "name": "many_to_one",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/extra_regress",
      "type": "directory",
      "name": "extra_regress",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/prefetch_related",
      "type": "directory",
      "name": "prefetch_related",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/builtin_server",
      "type": "directory",
      "name": "builtin_server",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/defer_regress",
      "type": "directory",
      "name": "defer_regress",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/model_fields",
      "type": "directory",
      "name": "model_fields",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/test_client",
      "type": "directory",
      "name": "test_client",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/one_to_one",
      "type": "directory",
      "name": "one_to_one",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/deprecation",
      "type": "directory",
      "name": "deprecation",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/humanize_tests",
      "type": "directory",
      "name": "humanize_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/expressions",
      "type": "directory",
      "name": "expressions",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/shortcuts",
      "type": "directory",
      "name": "shortcuts",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/sitemaps_tests",
      "type": "directory",
      "name": "sitemaps_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/sitemaps_tests/urls",
      "type": "directory",
      "name": "urls",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/csrf_tests",
      "type": "directory",
      "name": "csrf_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/model_formsets",
      "type": "directory",
      "name": "model_formsets",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/files",
      "type": "directory",
      "name": "files",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/get_or_create",
      "type": "directory",
      "name": "get_or_create",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/m2m_and_m2o",
      "type": "directory",
      "name": "m2m_and_m2o",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/field_defaults",
      "type": "directory",
      "name": "field_defaults",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/fixtures",
      "type": "directory",
      "name": "fixtures",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/null_fk",
      "type": "directory",
      "name": "null_fk",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/queryset_pickle",
      "type": "directory",
      "name": "queryset_pickle",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/force_insert_update",
      "type": "directory",
      "name": "force_insert_update",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/null_queries",
      "type": "directory",
      "name": "null_queries",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/db_utils",
      "type": "directory",
      "name": "db_utils",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/validators",
      "type": "directory",
      "name": "validators",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/custom_columns",
      "type": "directory",
      "name": "custom_columns",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/postgres_tests",
      "type": "directory",
      "name": "postgres_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/postgres_tests/migrations",
      "type": "directory",
      "name": "migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/postgres_tests/array_index_migrations",
      "type": "directory",
      "name": "array_index_migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/postgres_tests/array_default_migrations",
      "type": "directory",
      "name": "array_default_migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/or_lookups",
      "type": "directory",
      "name": "or_lookups",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/known_related_objects",
      "type": "directory",
      "name": "known_related_objects",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/custom_migration_operations",
      "type": "directory",
      "name": "custom_migration_operations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_widgets",
      "type": "directory",
      "name": "admin_widgets",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/select_related_onetoone",
      "type": "directory",
      "name": "select_related_onetoone",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/delete_regress",
      "type": "directory",
      "name": "delete_regress",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/i18n",
      "type": "directory",
      "name": "i18n",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/i18n/patterns",
      "type": "directory",
      "name": "patterns",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/i18n/patterns/urls",
      "type": "directory",
      "name": "urls",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/i18n/exclude",
      "type": "directory",
      "name": "exclude",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/i18n/territorial_fallback",
      "type": "directory",
      "name": "territorial_fallback",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/i18n/other",
      "type": "directory",
      "name": "other",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/i18n/other/locale",
      "type": "directory",
      "name": "locale",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/i18n/other/locale/de",
      "type": "directory",
      "name": "de",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/i18n/other/locale/fr",
      "type": "directory",
      "name": "fr",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/i18n/sampleproject",
      "type": "directory",
      "name": "sampleproject",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/i18n/sampleproject/sampleproject",
      "type": "directory",
      "name": "sampleproject",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/i18n/resolution",
      "type": "directory",
      "name": "resolution",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/i18n/project_dir",
      "type": "directory",
      "name": "project_dir",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/i18n/project_dir/app_with_locale",
      "type": "directory",
      "name": "app_with_locale",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/i18n/project_dir/app_no_locale",
      "type": "directory",
      "name": "app_no_locale",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/i18n/commands",
      "type": "directory",
      "name": "commands",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/i18n/contenttypes",
      "type": "directory",
      "name": "contenttypes",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/i18n/other2",
      "type": "directory",
      "name": "other2",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/i18n/other2/locale",
      "type": "directory",
      "name": "locale",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/i18n/other2/locale/de",
      "type": "directory",
      "name": "de",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/m2m_through",
      "type": "directory",
      "name": "m2m_through",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/proxy_models",
      "type": "directory",
      "name": "proxy_models",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/max_lengths",
      "type": "directory",
      "name": "max_lengths",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/admin_ordering",
      "type": "directory",
      "name": "admin_ordering",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/update_only_fields",
      "type": "directory",
      "name": "update_only_fields",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/test_runner_apps",
      "type": "directory",
      "name": "test_runner_apps",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/test_runner_apps/databases",
      "type": "directory",
      "name": "databases",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/test_runner_apps/tagged",
      "type": "directory",
      "name": "tagged",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/test_runner_apps/simple",
      "type": "directory",
      "name": "simple",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/test_runner_apps/sample",
      "type": "directory",
      "name": "sample",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/test_runner_apps/sample/tests",
      "type": "directory",
      "name": "tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/aggregation_regress",
      "type": "directory",
      "name": "aggregation_regress",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/bash_completion",
      "type": "directory",
      "name": "bash_completion",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/bash_completion/management",
      "type": "directory",
      "name": "management",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/bash_completion/management/commands",
      "type": "directory",
      "name": "commands",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/m2m_regress",
      "type": "directory",
      "name": "m2m_regress",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/apps",
      "type": "directory",
      "name": "apps",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/apps/namespace_package_base",
      "type": "directory",
      "name": "namespace_package_base",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/apps/namespace_package_base/nsapp",
      "type": "directory",
      "name": "nsapp",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/apps/default_config_app",
      "type": "directory",
      "name": "default_config_app",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/sites_tests",
      "type": "directory",
      "name": "sites_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/string_lookup",
      "type": "directory",
      "name": "string_lookup",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/redirects_tests",
      "type": "directory",
      "name": "redirects_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/handlers",
      "type": "directory",
      "name": "handlers",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/servers",
      "type": "directory",
      "name": "servers",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/servers/another_app",
      "type": "directory",
      "name": "another_app",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/model_inheritance_regress",
      "type": "directory",
      "name": "model_inheritance_regress",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/str",
      "type": "directory",
      "name": "str",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/base",
      "type": "directory",
      "name": "base",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/settings_tests",
      "type": "directory",
      "name": "settings_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/validation",
      "type": "directory",
      "name": "validation",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/field_deconstruction",
      "type": "directory",
      "name": "field_deconstruction",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/many_to_many",
      "type": "directory",
      "name": "many_to_many",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/m2m_signals",
      "type": "directory",
      "name": "m2m_signals",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/gis_tests",
      "type": "directory",
      "name": "gis_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/gis_tests/maps",
      "type": "directory",
      "name": "maps",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/gis_tests/gdal_tests",
      "type": "directory",
      "name": "gdal_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/gis_tests/geos_tests",
      "type": "directory",
      "name": "geos_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/gis_tests/geoapp",
      "type": "directory",
      "name": "geoapp",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/gis_tests/layermap",
      "type": "directory",
      "name": "layermap",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/gis_tests/geoadmin",
      "type": "directory",
      "name": "geoadmin",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/gis_tests/geogapp",
      "type": "directory",
      "name": "geogapp",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/gis_tests/relatedapp",
      "type": "directory",
      "name": "relatedapp",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/gis_tests/rasterapp",
      "type": "directory",
      "name": "rasterapp",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/gis_tests/geo3d",
      "type": "directory",
      "name": "geo3d",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/gis_tests/inspectapp",
      "type": "directory",
      "name": "inspectapp",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/gis_tests/data",
      "type": "directory",
      "name": "data",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/gis_tests/data/rasters",
      "type": "directory",
      "name": "rasters",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/gis_tests/gis_migrations",
      "type": "directory",
      "name": "gis_migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/gis_tests/gis_migrations/migrations",
      "type": "directory",
      "name": "migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/indexes",
      "type": "directory",
      "name": "indexes",
      "file": "",
      "line": 0
    },
    {
      "id": "tests/db_typecasts",
      "type": "directory",
      "name": "db_typecasts",
      "file": "",
      "line": 0
    },
    {
      "id": "docs",
      "type": "directory",
      "name": "docs",
      "file": "",
      "line": 0
    },
    {
      "id": "docs/_ext",
      "type": "directory",
      "name": "_ext",
      "file": "",
      "line": 0
    },
    {
      "id": "scripts",
      "type": "directory",
      "name": "scripts",
      "file": "",
      "line": 0
    },
    {
      "id": "django",
      "type": "directory",
      "name": "django",
      "file": "",
      "line": 0
    },
    {
      "id": "django/templatetags",
      "type": "directory",
      "name": "templatetags",
      "file": "",
      "line": 0
    },
    {
      "id": "django/middleware",
      "type": "directory",
      "name": "middleware",
      "file": "",
      "line": 0
    },
    {
      "id": "django/forms",
      "type": "directory",
      "name": "forms",
      "file": "",
      "line": 0
    },
    {
      "id": "django/core",
      "type": "directory",
      "name": "core",
      "file": "",
      "line": 0
    },
    {
      "id": "django/core/cache",
      "type": "directory",
      "name": "cache",
      "file": "",
      "line": 0
    },
    {
      "id": "django/core/cache/backends",
      "type": "directory",
      "name": "backends",
      "file": "",
      "line": 0
    },
    {
      "id": "django/core/mail",
      "type": "directory",
      "name": "mail",
      "file": "",
      "line": 0
    },
    {
      "id": "django/core/mail/backends",
      "type": "directory",
      "name": "backends",
      "file": "",
      "line": 0
    },
    {
      "id": "django/core/checks",
      "type": "directory",
      "name": "checks",
      "file": "",
      "line": 0
    },
    {
      "id": "django/core/checks/compatibility",
      "type": "directory",
      "name": "compatibility",
      "file": "",
      "line": 0
    },
    {
      "id": "django/core/checks/security",
      "type": "directory",
      "name": "security",
      "file": "",
      "line": 0
    },
    {
      "id": "django/core/management",
      "type": "directory",
      "name": "management",
      "file": "",
      "line": 0
    },
    {
      "id": "django/core/management/commands",
      "type": "directory",
      "name": "commands",
      "file": "",
      "line": 0
    },
    {
      "id": "django/core/serializers",
      "type": "directory",
      "name": "serializers",
      "file": "",
      "line": 0
    },
    {
      "id": "django/core/files",
      "type": "directory",
      "name": "files",
      "file": "",
      "line": 0
    },
    {
      "id": "django/core/handlers",
      "type": "directory",
      "name": "handlers",
      "file": "",
      "line": 0
    },
    {
      "id": "django/core/servers",
      "type": "directory",
      "name": "servers",
      "file": "",
      "line": 0
    },
    {
      "id": "django/test",
      "type": "directory",
      "name": "test",
      "file": "",
      "line": 0
    },
    {
      "id": "django/bin",
      "type": "directory",
      "name": "bin",
      "file": "",
      "line": 0
    },
    {
      "id": "django/dispatch",
      "type": "directory",
      "name": "dispatch",
      "file": "",
      "line": 0
    },
    {
      "id": "django/template",
      "type": "directory",
      "name": "template",
      "file": "",
      "line": 0
    },
    {
      "id": "django/template/backends",
      "type": "directory",
      "name": "backends",
      "file": "",
      "line": 0
    },
    {
      "id": "django/template/loaders",
      "type": "directory",
      "name": "loaders",
      "file": "",
      "line": 0
    },
    {
      "id": "django/utils",
      "type": "directory",
      "name": "utils",
      "file": "",
      "line": 0
    },
    {
      "id": "django/utils/translation",
      "type": "directory",
      "name": "translation",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib",
      "type": "directory",
      "name": "contrib",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/syndication",
      "type": "directory",
      "name": "syndication",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/messages",
      "type": "directory",
      "name": "messages",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/messages/storage",
      "type": "directory",
      "name": "storage",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/auth",
      "type": "directory",
      "name": "auth",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/auth/migrations",
      "type": "directory",
      "name": "migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/auth/management",
      "type": "directory",
      "name": "management",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/auth/management/commands",
      "type": "directory",
      "name": "commands",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/auth/handlers",
      "type": "directory",
      "name": "handlers",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/admin",
      "type": "directory",
      "name": "admin",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/admin/templatetags",
      "type": "directory",
      "name": "templatetags",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/admin/migrations",
      "type": "directory",
      "name": "migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/admin/bin",
      "type": "directory",
      "name": "bin",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/admin/views",
      "type": "directory",
      "name": "views",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/staticfiles",
      "type": "directory",
      "name": "staticfiles",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/staticfiles/management",
      "type": "directory",
      "name": "management",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/staticfiles/management/commands",
      "type": "directory",
      "name": "commands",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/flatpages",
      "type": "directory",
      "name": "flatpages",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/flatpages/templatetags",
      "type": "directory",
      "name": "templatetags",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/flatpages/migrations",
      "type": "directory",
      "name": "migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/sites",
      "type": "directory",
      "name": "sites",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/sites/migrations",
      "type": "directory",
      "name": "migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/postgres",
      "type": "directory",
      "name": "postgres",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/postgres/forms",
      "type": "directory",
      "name": "forms",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/postgres/aggregates",
      "type": "directory",
      "name": "aggregates",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/postgres/fields",
      "type": "directory",
      "name": "fields",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/redirects",
      "type": "directory",
      "name": "redirects",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/redirects/migrations",
      "type": "directory",
      "name": "migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/sessions",
      "type": "directory",
      "name": "sessions",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/sessions/migrations",
      "type": "directory",
      "name": "migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/sessions/backends",
      "type": "directory",
      "name": "backends",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/sessions/management",
      "type": "directory",
      "name": "management",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/sessions/management/commands",
      "type": "directory",
      "name": "commands",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/sitemaps",
      "type": "directory",
      "name": "sitemaps",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/sitemaps/management",
      "type": "directory",
      "name": "management",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/sitemaps/management/commands",
      "type": "directory",
      "name": "commands",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/humanize",
      "type": "directory",
      "name": "humanize",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/humanize/templatetags",
      "type": "directory",
      "name": "templatetags",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/contenttypes",
      "type": "directory",
      "name": "contenttypes",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/contenttypes/migrations",
      "type": "directory",
      "name": "migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/contenttypes/management",
      "type": "directory",
      "name": "management",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/contenttypes/management/commands",
      "type": "directory",
      "name": "commands",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/gis",
      "type": "directory",
      "name": "gis",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/gis/geos",
      "type": "directory",
      "name": "geos",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/gis/geos/prototypes",
      "type": "directory",
      "name": "prototypes",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/gis/forms",
      "type": "directory",
      "name": "forms",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/gis/gdal",
      "type": "directory",
      "name": "gdal",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/gis/gdal/prototypes",
      "type": "directory",
      "name": "prototypes",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/gis/gdal/raster",
      "type": "directory",
      "name": "raster",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/gis/admin",
      "type": "directory",
      "name": "admin",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/gis/management",
      "type": "directory",
      "name": "management",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/gis/management/commands",
      "type": "directory",
      "name": "commands",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/gis/utils",
      "type": "directory",
      "name": "utils",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/gis/serializers",
      "type": "directory",
      "name": "serializers",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/gis/sitemaps",
      "type": "directory",
      "name": "sitemaps",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/gis/db",
      "type": "directory",
      "name": "db",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/gis/db/backends",
      "type": "directory",
      "name": "backends",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/gis/db/backends/oracle",
      "type": "directory",
      "name": "oracle",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/gis/db/backends/postgis",
      "type": "directory",
      "name": "postgis",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/gis/db/backends/mysql",
      "type": "directory",
      "name": "mysql",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/gis/db/backends/spatialite",
      "type": "directory",
      "name": "spatialite",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/gis/db/backends/base",
      "type": "directory",
      "name": "base",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/gis/db/models",
      "type": "directory",
      "name": "models",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/gis/db/models/sql",
      "type": "directory",
      "name": "sql",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/gis/geoip2",
      "type": "directory",
      "name": "geoip2",
      "file": "",
      "line": 0
    },
    {
      "id": "django/contrib/admindocs",
      "type": "directory",
      "name": "admindocs",
      "file": "",
      "line": 0
    },
    {
      "id": "django/http",
      "type": "directory",
      "name": "http",
      "file": "",
      "line": 0
    },
    {
      "id": "django/urls",
      "type": "directory",
      "name": "urls",
      "file": "",
      "line": 0
    },
    {
      "id": "django/db",
      "type": "directory",
      "name": "db",
      "file": "",
      "line": 0
    },
    {
      "id": "django/db/migrations",
      "type": "directory",
      "name": "migrations",
      "file": "",
      "line": 0
    },
    {
      "id": "django/db/migrations/operations",
      "type": "directory",
      "name": "operations",
      "file": "",
      "line": 0
    },
    {
      "id": "django/db/backends",
      "type": "directory",
      "name": "backends",
      "file": "",
      "line": 0
    },
    {
      "id": "django/db/backends/postgresql",
      "type": "directory",
      "name": "postgresql",
      "file": "",
      "line": 0
    },
    {
      "id": "django/db/backends/dummy",
      "type": "directory",
      "name": "dummy",
      "file": "",
      "line": 0
    },
    {
      "id": "django/db/backends/oracle",
      "type": "directory",
      "name": "oracle",
      "file": "",
      "line": 0
    },
    {
      "id": "django/db/backends/sqlite3",
      "type": "directory",
      "name": "sqlite3",
      "file": "",
      "line": 0
    },
    {
      "id": "django/db/backends/mysql",
      "type": "directory",
      "name": "mysql",
      "file": "",
      "line": 0
    },
    {
      "id": "django/db/backends/base",
      "type": "directory",
      "name": "base",
      "file": "",
      "line": 0
    },
    {
      "id": "django/db/models",
      "type": "directory",
      "name": "models",
      "file": "",
      "line": 0
    },
    {
      "id": "django/db/models/functions",
      "type": "directory",
      "name": "functions",
      "file": "",
      "line": 0
    },
    {
      "id": "django/db/models/fields",
      "type": "directory",
      "name": "fields",
      "file": "",
      "line": 0
    },
    {
      "id": "django/db/models/sql",
      "type": "directory",
      "name": "sql",
      "file": "",
      "line": 0
    },
    {
      "id": "django/views",
      "type": "directory",
      "name": "views",
      "file": "",
      "line": 0
    },
    {
      "id": "django/views/decorators",
      "type": "directory",
      "name": "decorators",
      "file": "",
      "line": 0
    },
    {
      "id": "django/views/generic",
      "type": "directory",
      "name": "generic",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf",
      "type": "directory",
      "name": "conf",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale",
      "type": "directory",
      "name": "locale",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/sl",
      "type": "directory",
      "name": "sl",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/sk",
      "type": "directory",
      "name": "sk",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/pl",
      "type": "directory",
      "name": "pl",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/vi",
      "type": "directory",
      "name": "vi",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/sq",
      "type": "directory",
      "name": "sq",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/de_CH",
      "type": "directory",
      "name": "de_CH",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/sv",
      "type": "directory",
      "name": "sv",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/ga",
      "type": "directory",
      "name": "ga",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/he",
      "type": "directory",
      "name": "he",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/km",
      "type": "directory",
      "name": "km",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/nn",
      "type": "directory",
      "name": "nn",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/da",
      "type": "directory",
      "name": "da",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/es_NI",
      "type": "directory",
      "name": "es_NI",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/mn",
      "type": "directory",
      "name": "mn",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/pt_BR",
      "type": "directory",
      "name": "pt_BR",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/es_CO",
      "type": "directory",
      "name": "es_CO",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/ja",
      "type": "directory",
      "name": "ja",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/el",
      "type": "directory",
      "name": "el",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/lv",
      "type": "directory",
      "name": "lv",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/fy",
      "type": "directory",
      "name": "fy",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/it",
      "type": "directory",
      "name": "it",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/ca",
      "type": "directory",
      "name": "ca",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/is",
      "type": "directory",
      "name": "is",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/cs",
      "type": "directory",
      "name": "cs",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/te",
      "type": "directory",
      "name": "te",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/zh_Hans",
      "type": "directory",
      "name": "zh_Hans",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/ru",
      "type": "directory",
      "name": "ru",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/zh_Hant",
      "type": "directory",
      "name": "zh_Hant",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/ro",
      "type": "directory",
      "name": "ro",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/pt",
      "type": "directory",
      "name": "pt",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/uk",
      "type": "directory",
      "name": "uk",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/sr",
      "type": "directory",
      "name": "sr",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/en_AU",
      "type": "directory",
      "name": "en_AU",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/en_GB",
      "type": "directory",
      "name": "en_GB",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/es_PR",
      "type": "directory",
      "name": "es_PR",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/ml",
      "type": "directory",
      "name": "ml",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/es_MX",
      "type": "directory",
      "name": "es_MX",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/mk",
      "type": "directory",
      "name": "mk",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/kn",
      "type": "directory",
      "name": "kn",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/bs",
      "type": "directory",
      "name": "bs",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/ar",
      "type": "directory",
      "name": "ar",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/gl",
      "type": "directory",
      "name": "gl",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/hr",
      "type": "directory",
      "name": "hr",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/hu",
      "type": "directory",
      "name": "hu",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/nl",
      "type": "directory",
      "name": "nl",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/bg",
      "type": "directory",
      "name": "bg",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/bn",
      "type": "directory",
      "name": "bn",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/es_AR",
      "type": "directory",
      "name": "es_AR",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/nb",
      "type": "directory",
      "name": "nb",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/hi",
      "type": "directory",
      "name": "hi",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/ka",
      "type": "directory",
      "name": "ka",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/de",
      "type": "directory",
      "name": "de",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/az",
      "type": "directory",
      "name": "az",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/gd",
      "type": "directory",
      "name": "gd",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/ko",
      "type": "directory",
      "name": "ko",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/fi",
      "type": "directory",
      "name": "fi",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/sr_Latn",
      "type": "directory",
      "name": "sr_Latn",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/eo",
      "type": "directory",
      "name": "eo",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/id",
      "type": "directory",
      "name": "id",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/fr",
      "type": "directory",
      "name": "fr",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/es",
      "type": "directory",
      "name": "es",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/et",
      "type": "directory",
      "name": "et",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/en",
      "type": "directory",
      "name": "en",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/fa",
      "type": "directory",
      "name": "fa",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/lt",
      "type": "directory",
      "name": "lt",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/cy",
      "type": "directory",
      "name": "cy",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/eu",
      "type": "directory",
      "name": "eu",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/ta",
      "type": "directory",
      "name": "ta",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/th",
      "type": "directory",
      "name": "th",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/locale/tr",
      "type": "directory",
      "name": "tr",
      "file": "",
      "line": 0
    },
    {
      "id": "django/conf/urls",
      "type": "directory",
      "name": "urls",
      "file": "",
      "line": 0
    },
    {
      "id": "django/apps",
      "type": "directory",
      "name": "apps",
      "file": "",
      "line": 0
    }
  ],
  "edges": [
    {
      "source": "/",
      "target": "setup.py",
      "type": "contains"
    },
    {
      "source": "/",
      "target": "tests",
      "type": "contains"
    },
    {
      "source": "/",
      "target": "docs",
      "type": "contains"
    },
    {
      "source": "/",
      "target": "scripts",
      "type": "contains"
    },
    {
      "source": "/",
      "target": "django",
      "type": "contains"
    },
    {
      "source": "setup.py",
      "target": "setup.py:read",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/urls.py",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/runtests.py",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/test_sqlite.py",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/generic_views",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/mutually_referential",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/signed_cookies_tests",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/expressions_case",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/model_forms",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/fixtures_regress",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/aggregation",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/middleware",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/test_runner",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/admin_utils",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/unmanaged_models",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/flatpages_tests",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/pagination",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/auth_tests",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/transaction_hooks",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/migrations",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/migrate_signals",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/m2m_multiple",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/bulk_create",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/filtered_relation",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/m2m_through_regress",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/select_related",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/admin_default_site",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/no_models",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/dates",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/get_earliest_or_latest",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/sessions_tests",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/proxy_model_inheritance",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/foreign_object",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/generic_inline_admin",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/custom_methods",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/model_formsets_regress",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/signing",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/middleware_exceptions",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/admin_filters",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/raw_query",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/model_regress",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/template_tests",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/db_functions",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/m2m_recursive",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/generic_relations_regress",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/cache",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/field_subclassing",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/custom_lookups",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/empty",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/defer",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/update",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/constraints",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/delete",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/select_related_regress",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/admin_changelist",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/model_inheritance",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/generic_relations",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/resolve_url",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/decorators",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/context_processors",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/urlpatterns_reverse",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/test_utils",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/file_uploads",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/get_object_or_404",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/mail",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/shell",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/null_fk_ordering",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/fixtures_model_package",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/forms_tests",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/choices",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/timezones",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/dispatch",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/inline_formsets",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/datatypes",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/backends",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/inspectdb",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/conditional_processing",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/signals",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/wsgi",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/migrations2",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/file_storage",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/view_tests",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/template_loader",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/save_delete_hooks",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/messages_tests",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/admin_docs",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/check_framework",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/test_exceptions",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/responses",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/select_for_update",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/migration_test_data_persistence",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/queries",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/m2m_intermediary",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/basic",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/model_options",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/nested_foreign_keys",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/import_error_package",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/app_loading",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/lookup",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/reverse_lookup",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/logging_tests",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/invalid_models_tests",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/introspection",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/urlpatterns",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/admin_custom_urls",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/swappable_models",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/many_to_one_null",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/user_commands",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/contenttypes_tests",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/order_with_respect_to",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/requests",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/from_db_value",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/admin_views",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/managers_regress",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/admin_registration",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/template_backends",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/annotations",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/schema",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/admin_scripts",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/custom_pk",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/reserved_names",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/model_meta",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/syndication_tests",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/transactions",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/multiple_database",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/serializers",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/custom_managers",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/absolute_url_overrides",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/model_indexes",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/staticfiles_tests",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/utils_tests",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/httpwrappers",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/dbshell",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/project_template",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/properties",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/model_package",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/version",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/test_client_regress",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/modeladmin",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/admin_checks",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/admin_inlines",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/admin_autodiscover",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/datetimes",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/ordering",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/expressions_window",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/m2o_recursive",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/sites_framework",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/many_to_one",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/extra_regress",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/prefetch_related",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/builtin_server",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/defer_regress",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/model_fields",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/test_client",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/one_to_one",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/deprecation",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/humanize_tests",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/expressions",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/shortcuts",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/sitemaps_tests",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/csrf_tests",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/model_formsets",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/files",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/get_or_create",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/m2m_and_m2o",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/field_defaults",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/fixtures",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/null_fk",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/queryset_pickle",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/force_insert_update",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/null_queries",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/db_utils",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/validators",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/custom_columns",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/postgres_tests",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/or_lookups",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/known_related_objects",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/custom_migration_operations",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/admin_widgets",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/select_related_onetoone",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/delete_regress",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/i18n",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/m2m_through",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/proxy_models",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/max_lengths",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/admin_ordering",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/update_only_fields",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/test_runner_apps",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/aggregation_regress",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/bash_completion",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/m2m_regress",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/apps",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/sites_tests",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/string_lookup",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/redirects_tests",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/handlers",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/servers",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/model_inheritance_regress",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/str",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/base",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/settings_tests",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/validation",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/field_deconstruction",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/many_to_many",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/m2m_signals",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/gis_tests",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/indexes",
      "type": "contains"
    },
    {
      "source": "tests",
      "target": "tests/db_typecasts",
      "type": "contains"
    },
    {
      "source": "tests/runtests.py",
      "target": "tests/runtests.py:get_test_modules",
      "type": "contains"
    },
    {
      "source": "tests/runtests.py",
      "target": "tests/runtests.py:get_installed",
      "type": "contains"
    },
    {
      "source": "tests/runtests.py",
      "target": "tests/runtests.py:setup",
      "type": "contains"
    },
    {
      "source": "tests/runtests.py",
      "target": "tests/runtests.py:teardown",
      "type": "contains"
    },
    {
      "source": "tests/runtests.py",
      "target": "tests/runtests.py:actual_test_processes",
      "type": "contains"
    },
    {
      "source": "tests/runtests.py",
      "target": "tests/runtests.py:ActionSelenium",
      "type": "contains"
    },
    {
      "source": "tests/runtests.py",
      "target": "tests/runtests.py:django_tests",
      "type": "contains"
    },
    {
      "source": "tests/runtests.py",
      "target": "tests/runtests.py:get_subprocess_args",
      "type": "contains"
    },
    {
      "source": "tests/runtests.py",
      "target": "tests/runtests.py:bisect_tests",
      "type": "contains"
    },
    {
      "source": "tests/runtests.py",
      "target": "tests/runtests.py:paired_tests",
      "type": "contains"
    },
    {
      "source": "tests/runtests.py:setup",
      "target": "tests/runtests.py:setup.no_available_apps",
      "type": "contains"
    },
    {
      "source": "tests/runtests.py:setup",
      "target": "tests/runtests.py:get_installed",
      "type": "invokes"
    },
    {
      "source": "tests/runtests.py:setup",
      "target": "tests/runtests.py:get_test_modules",
      "type": "invokes"
    },
    {
      "source": "tests/runtests.py:ActionSelenium",
      "target": "tests/runtests.py:ActionSelenium.__call__",
      "type": "contains"
    },
    {
      "source": "tests/runtests.py:django_tests",
      "target": "tests/runtests.py:get_installed",
      "type": "invokes"
    },
    {
      "source": "tests/runtests.py:django_tests",
      "target": "tests/runtests.py:teardown",
      "type": "invokes"
    },
    {
      "source": "tests/runtests.py:django_tests",
      "target": "tests/runtests.py:actual_test_processes",
      "type": "invokes"
    },
    {
      "source": "tests/runtests.py:django_tests",
      "target": "tests/runtests.py:setup",
      "type": "invokes"
    },
    {
      "source": "tests/runtests.py:bisect_tests",
      "target": "tests/runtests.py:get_installed",
      "type": "invokes"
    },
    {
      "source": "tests/runtests.py:bisect_tests",
      "target": "tests/runtests.py:teardown",
      "type": "invokes"
    },
    {
      "source": "tests/runtests.py:bisect_tests",
      "target": "tests/runtests.py:setup",
      "type": "invokes"
    },
    {
      "source": "tests/runtests.py:bisect_tests",
      "target": "tests/runtests.py:get_subprocess_args",
      "type": "invokes"
    },
    {
      "source": "tests/runtests.py:paired_tests",
      "target": "tests/runtests.py:get_installed",
      "type": "invokes"
    },
    {
      "source": "tests/runtests.py:paired_tests",
      "target": "tests/runtests.py:teardown",
      "type": "invokes"
    },
    {
      "source": "tests/runtests.py:paired_tests",
      "target": "tests/runtests.py:setup",
      "type": "invokes"
    },
    {
      "source": "tests/runtests.py:paired_tests",
      "target": "tests/runtests.py:get_subprocess_args",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views",
      "target": "tests/generic_views/test_list.py",
      "type": "contains"
    },
    {
      "source": "tests/generic_views",
      "target": "tests/generic_views/test_detail.py",
      "type": "contains"
    },
    {
      "source": "tests/generic_views",
      "target": "tests/generic_views/models.py",
      "type": "contains"
    },
    {
      "source": "tests/generic_views",
      "target": "tests/generic_views/test_dates.py",
      "type": "contains"
    },
    {
      "source": "tests/generic_views",
      "target": "tests/generic_views/test_edit.py",
      "type": "contains"
    },
    {
      "source": "tests/generic_views",
      "target": "tests/generic_views/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/generic_views",
      "target": "tests/generic_views/forms.py",
      "type": "contains"
    },
    {
      "source": "tests/generic_views",
      "target": "tests/generic_views/urls.py",
      "type": "contains"
    },
    {
      "source": "tests/generic_views",
      "target": "tests/generic_views/test_base.py",
      "type": "contains"
    },
    {
      "source": "tests/generic_views",
      "target": "tests/generic_views/views.py",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py",
      "target": "tests/generic_views/test_list.py:ListViewTests",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py",
      "target": "tests/generic_views/models.py:Artist",
      "type": "imports"
    },
    {
      "source": "tests/generic_views/test_list.py",
      "target": "tests/generic_views/models.py:Author",
      "type": "imports"
    },
    {
      "source": "tests/generic_views/test_list.py",
      "target": "tests/generic_views/models.py:Book",
      "type": "imports"
    },
    {
      "source": "tests/generic_views/test_list.py",
      "target": "tests/generic_views/models.py:Page",
      "type": "imports"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests",
      "target": "tests/generic_views/test_list.py:ListViewTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests",
      "target": "tests/generic_views/test_list.py:ListViewTests.test_items",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests",
      "target": "tests/generic_views/test_list.py:ListViewTests.test_queryset",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests",
      "target": "tests/generic_views/test_list.py:ListViewTests.test_paginated_queryset",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests",
      "target": "tests/generic_views/test_list.py:ListViewTests.test_paginated_queryset_shortdata",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests",
      "target": "tests/generic_views/test_list.py:ListViewTests.test_paginated_get_page_by_query_string",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests",
      "target": "tests/generic_views/test_list.py:ListViewTests.test_paginated_get_last_page_by_query_string",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests",
      "target": "tests/generic_views/test_list.py:ListViewTests.test_paginated_get_page_by_urlvar",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests",
      "target": "tests/generic_views/test_list.py:ListViewTests.test_paginated_page_out_of_range",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests",
      "target": "tests/generic_views/test_list.py:ListViewTests.test_paginated_invalid_page",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests",
      "target": "tests/generic_views/test_list.py:ListViewTests.test_paginated_custom_paginator_class",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests",
      "target": "tests/generic_views/test_list.py:ListViewTests.test_paginated_custom_page_kwarg",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests",
      "target": "tests/generic_views/test_list.py:ListViewTests.test_paginated_custom_paginator_constructor",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests",
      "target": "tests/generic_views/test_list.py:ListViewTests.test_paginated_orphaned_queryset",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests",
      "target": "tests/generic_views/test_list.py:ListViewTests.test_paginated_non_queryset",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests",
      "target": "tests/generic_views/test_list.py:ListViewTests.test_verbose_name",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests",
      "target": "tests/generic_views/test_list.py:ListViewTests.test_allow_empty_false",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests",
      "target": "tests/generic_views/test_list.py:ListViewTests.test_template_name",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests",
      "target": "tests/generic_views/test_list.py:ListViewTests.test_template_name_suffix",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests",
      "target": "tests/generic_views/test_list.py:ListViewTests.test_context_object_name",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests",
      "target": "tests/generic_views/test_list.py:ListViewTests.test_duplicate_context_object_name",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests",
      "target": "tests/generic_views/test_list.py:ListViewTests.test_missing_items",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests",
      "target": "tests/generic_views/test_list.py:ListViewTests.test_invalid_get_queryset",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests",
      "target": "tests/generic_views/test_list.py:ListViewTests.test_paginated_list_view_does_not_load_entire_table",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests",
      "target": "tests/generic_views/test_list.py:ListViewTests.test_explicitly_ordered_list_view",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests",
      "target": "tests/generic_views/test_list.py:ListViewTests.test_paginated_list_view_returns_useful_message_on_invalid_page",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests",
      "target": "tests/generic_views/test_list.py:ListViewTests._make_authors",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests.test_paginated_queryset",
      "target": "tests/generic_views/test_list.py:ListViewTests._make_authors",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests.test_paginated_get_page_by_query_string",
      "target": "tests/generic_views/test_list.py:ListViewTests._make_authors",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests.test_paginated_get_last_page_by_query_string",
      "target": "tests/generic_views/test_list.py:ListViewTests._make_authors",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests.test_paginated_get_page_by_urlvar",
      "target": "tests/generic_views/test_list.py:ListViewTests._make_authors",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests.test_paginated_page_out_of_range",
      "target": "tests/generic_views/test_list.py:ListViewTests._make_authors",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests.test_paginated_invalid_page",
      "target": "tests/generic_views/test_list.py:ListViewTests._make_authors",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests.test_paginated_custom_paginator_class",
      "target": "tests/generic_views/test_list.py:ListViewTests._make_authors",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests.test_paginated_custom_page_kwarg",
      "target": "tests/generic_views/test_list.py:ListViewTests._make_authors",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests.test_paginated_custom_paginator_constructor",
      "target": "tests/generic_views/test_list.py:ListViewTests._make_authors",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests.test_paginated_orphaned_queryset",
      "target": "tests/generic_views/test_list.py:ListViewTests._make_authors",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests.test_paginated_list_view_does_not_load_entire_table",
      "target": "tests/generic_views/test_list.py:ListViewTests._make_authors",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_list.py:ListViewTests.test_paginated_list_view_returns_useful_message_on_invalid_page",
      "target": "tests/generic_views/test_list.py:ListViewTests._make_authors",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_detail.py",
      "target": "tests/generic_views/test_detail.py:DetailViewTest",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_detail.py",
      "target": "tests/generic_views/models.py:Artist",
      "type": "imports"
    },
    {
      "source": "tests/generic_views/test_detail.py",
      "target": "tests/generic_views/models.py:Author",
      "type": "imports"
    },
    {
      "source": "tests/generic_views/test_detail.py",
      "target": "tests/generic_views/models.py:Book",
      "type": "imports"
    },
    {
      "source": "tests/generic_views/test_detail.py",
      "target": "tests/generic_views/models.py:Page",
      "type": "imports"
    },
    {
      "source": "tests/generic_views/test_detail.py:DetailViewTest",
      "target": "tests/generic_views/test_detail.py:DetailViewTest.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_detail.py:DetailViewTest",
      "target": "tests/generic_views/test_detail.py:DetailViewTest.test_simple_object",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_detail.py:DetailViewTest",
      "target": "tests/generic_views/test_detail.py:DetailViewTest.test_detail_by_pk",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_detail.py:DetailViewTest",
      "target": "tests/generic_views/test_detail.py:DetailViewTest.test_detail_missing_object",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_detail.py:DetailViewTest",
      "target": "tests/generic_views/test_detail.py:DetailViewTest.test_detail_object_does_not_exist",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_detail.py:DetailViewTest",
      "target": "tests/generic_views/test_detail.py:DetailViewTest.test_detail_by_custom_pk",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_detail.py:DetailViewTest",
      "target": "tests/generic_views/test_detail.py:DetailViewTest.test_detail_by_slug",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_detail.py:DetailViewTest",
      "target": "tests/generic_views/test_detail.py:DetailViewTest.test_detail_by_custom_slug",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_detail.py:DetailViewTest",
      "target": "tests/generic_views/test_detail.py:DetailViewTest.test_detail_by_pk_ignore_slug",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_detail.py:DetailViewTest",
      "target": "tests/generic_views/test_detail.py:DetailViewTest.test_detail_by_pk_ignore_slug_mismatch",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_detail.py:DetailViewTest",
      "target": "tests/generic_views/test_detail.py:DetailViewTest.test_detail_by_pk_and_slug",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_detail.py:DetailViewTest",
      "target": "tests/generic_views/test_detail.py:DetailViewTest.test_detail_by_pk_and_slug_mismatch_404",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_detail.py:DetailViewTest",
      "target": "tests/generic_views/test_detail.py:DetailViewTest.test_verbose_name",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_detail.py:DetailViewTest",
      "target": "tests/generic_views/test_detail.py:DetailViewTest.test_template_name",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_detail.py:DetailViewTest",
      "target": "tests/generic_views/test_detail.py:DetailViewTest.test_template_name_suffix",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_detail.py:DetailViewTest",
      "target": "tests/generic_views/test_detail.py:DetailViewTest.test_template_name_field",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_detail.py:DetailViewTest",
      "target": "tests/generic_views/test_detail.py:DetailViewTest.test_context_object_name",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_detail.py:DetailViewTest",
      "target": "tests/generic_views/test_detail.py:DetailViewTest.test_duplicated_context_object_name",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_detail.py:DetailViewTest",
      "target": "tests/generic_views/test_detail.py:DetailViewTest.test_custom_detail",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_detail.py:DetailViewTest",
      "target": "tests/generic_views/test_detail.py:DetailViewTest.test_deferred_queryset_template_name",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_detail.py:DetailViewTest",
      "target": "tests/generic_views/test_detail.py:DetailViewTest.test_deferred_queryset_context_object_name",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_detail.py:DetailViewTest",
      "target": "tests/generic_views/test_detail.py:DetailViewTest.test_invalid_url",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_detail.py:DetailViewTest",
      "target": "tests/generic_views/test_detail.py:DetailViewTest.test_invalid_queryset",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_detail.py:DetailViewTest",
      "target": "tests/generic_views/test_detail.py:DetailViewTest.test_non_model_object_with_meta",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_detail.py:DetailViewTest.test_deferred_queryset_template_name",
      "target": "tests/generic_views/test_detail.py:DetailViewTest.test_deferred_queryset_template_name.FormContext",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_detail.py:DetailViewTest.test_deferred_queryset_template_name",
      "target": "tests/generic_views/test_detail.py:DetailViewTest.test_deferred_queryset_template_name.FormContext",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_detail.py:DetailViewTest.test_deferred_queryset_context_object_name",
      "target": "tests/generic_views/test_detail.py:DetailViewTest.test_deferred_queryset_context_object_name.FormContext",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_detail.py:DetailViewTest.test_deferred_queryset_context_object_name",
      "target": "tests/generic_views/test_detail.py:DetailViewTest.test_deferred_queryset_context_object_name.FormContext",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/models.py",
      "target": "tests/generic_views/models.py:Artist",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/models.py",
      "target": "tests/generic_views/models.py:Author",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/models.py",
      "target": "tests/generic_views/models.py:DoesNotExistQuerySet",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/models.py",
      "target": "tests/generic_views/models.py:Book",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/models.py",
      "target": "tests/generic_views/models.py:Page",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/models.py",
      "target": "tests/generic_views/models.py:BookSigning",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/models.py:Artist",
      "target": "tests/generic_views/models.py:Artist.Meta",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/models.py:Artist",
      "target": "tests/generic_views/models.py:Artist.__str__",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/models.py:Artist",
      "target": "tests/generic_views/models.py:Artist.get_absolute_url",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/models.py:Author",
      "target": "tests/generic_views/models.py:Author.Meta",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/models.py:Author",
      "target": "tests/generic_views/models.py:Author.__str__",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/models.py:DoesNotExistQuerySet",
      "target": "tests/generic_views/models.py:DoesNotExistQuerySet.get",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/models.py:Book",
      "target": "tests/generic_views/models.py:Book.Meta",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/models.py:Book",
      "target": "tests/generic_views/models.py:Book.__str__",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py",
      "target": "tests/generic_views/test_dates.py:_make_books",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py",
      "target": "tests/generic_views/test_dates.py:TestDataMixin",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py",
      "target": "tests/generic_views/test_dates.py:ArchiveIndexViewTests",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py",
      "target": "tests/generic_views/test_dates.py:YearArchiveViewTests",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py",
      "target": "tests/generic_views/test_dates.py:MonthArchiveViewTests",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py",
      "target": "tests/generic_views/test_dates.py:WeekArchiveViewTests",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py",
      "target": "tests/generic_views/test_dates.py:DayArchiveViewTests",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py",
      "target": "tests/generic_views/test_dates.py:DateDetailViewTests",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py",
      "target": "tests/generic_views/models.py:Artist",
      "type": "imports"
    },
    {
      "source": "tests/generic_views/test_dates.py",
      "target": "tests/generic_views/models.py:Author",
      "type": "imports"
    },
    {
      "source": "tests/generic_views/test_dates.py",
      "target": "tests/generic_views/models.py:Book",
      "type": "imports"
    },
    {
      "source": "tests/generic_views/test_dates.py",
      "target": "tests/generic_views/models.py:BookSigning",
      "type": "imports"
    },
    {
      "source": "tests/generic_views/test_dates.py",
      "target": "tests/generic_views/models.py:Page",
      "type": "imports"
    },
    {
      "source": "tests/generic_views/test_dates.py:TestDataMixin",
      "target": "tests/generic_views/test_dates.py:TestDataMixin.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:ArchiveIndexViewTests",
      "target": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_archive_view",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:ArchiveIndexViewTests",
      "target": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_archive_view_context_object_name",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:ArchiveIndexViewTests",
      "target": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_empty_archive_view",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:ArchiveIndexViewTests",
      "target": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_allow_empty_archive_view",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:ArchiveIndexViewTests",
      "target": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_archive_view_template",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:ArchiveIndexViewTests",
      "target": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_archive_view_template_suffix",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:ArchiveIndexViewTests",
      "target": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_archive_view_invalid",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:ArchiveIndexViewTests",
      "target": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_archive_view_by_month",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:ArchiveIndexViewTests",
      "target": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_paginated_archive_view",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:ArchiveIndexViewTests",
      "target": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_paginated_archive_view_does_not_load_entire_table",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:ArchiveIndexViewTests",
      "target": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_no_duplicate_query",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:ArchiveIndexViewTests",
      "target": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_datetime_archive_view",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:ArchiveIndexViewTests",
      "target": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_aware_datetime_archive_view",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:ArchiveIndexViewTests",
      "target": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_date_list_order",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:ArchiveIndexViewTests",
      "target": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_archive_view_custom_sorting",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:ArchiveIndexViewTests",
      "target": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_archive_view_custom_sorting_dec",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:ArchiveIndexViewTests",
      "target": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_archive_view_without_date_field",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:ArchiveIndexViewTests",
      "target": "tests/generic_views/test_dates.py:TestDataMixin",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_paginated_archive_view",
      "target": "tests/generic_views/test_dates.py:_make_books",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_paginated_archive_view_does_not_load_entire_table",
      "target": "tests/generic_views/test_dates.py:_make_books",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_dates.py:ArchiveIndexViewTests.test_date_list_order",
      "target": "tests/generic_views/test_dates.py:_make_books",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_dates.py:YearArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_year_view",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:YearArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_year_view_make_object_list",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:YearArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_year_view_empty",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:YearArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_year_view_allow_future",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:YearArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_year_view_paginated",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:YearArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_year_view_custom_sort_order",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:YearArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_year_view_two_custom_sort_orders",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:YearArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_year_view_invalid_pattern",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:YearArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_no_duplicate_query",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:YearArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_datetime_year_view",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:YearArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_aware_datetime_year_view",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:YearArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_date_list_order",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:YearArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_get_context_data_receives_extra_context",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:YearArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_get_dated_items_not_implemented",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:YearArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:TestDataMixin",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/test_dates.py:YearArchiveViewTests.test_date_list_order",
      "target": "tests/generic_views/test_dates.py:_make_books",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_dates.py:MonthArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:MonthArchiveViewTests.test_month_view",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:MonthArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:MonthArchiveViewTests.test_month_view_allow_empty",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:MonthArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:MonthArchiveViewTests.test_month_view_allow_future",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:MonthArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:MonthArchiveViewTests.test_month_view_paginated",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:MonthArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:MonthArchiveViewTests.test_custom_month_format",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:MonthArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:MonthArchiveViewTests.test_month_view_invalid_pattern",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:MonthArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:MonthArchiveViewTests.test_previous_month_without_content",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:MonthArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:MonthArchiveViewTests.test_datetime_month_view",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:MonthArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:MonthArchiveViewTests.test_month_view_get_month_from_request",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:MonthArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:MonthArchiveViewTests.test_month_view_without_month_in_url",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:MonthArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:MonthArchiveViewTests.test_aware_datetime_month_view",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:MonthArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:MonthArchiveViewTests.test_date_list_order",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:MonthArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:TestDataMixin",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/test_dates.py:MonthArchiveViewTests.test_date_list_order",
      "target": "tests/generic_views/test_dates.py:_make_books",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_dates.py:WeekArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:WeekArchiveViewTests.test_week_view",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:WeekArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:WeekArchiveViewTests.test_week_view_allow_empty",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:WeekArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:WeekArchiveViewTests.test_week_view_allow_future",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:WeekArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:WeekArchiveViewTests.test_week_view_paginated",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:WeekArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:WeekArchiveViewTests.test_week_view_invalid_pattern",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:WeekArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:WeekArchiveViewTests.test_week_start_Monday",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:WeekArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:WeekArchiveViewTests.test_unknown_week_format",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:WeekArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:WeekArchiveViewTests.test_datetime_week_view",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:WeekArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:WeekArchiveViewTests.test_aware_datetime_week_view",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:WeekArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:TestDataMixin",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/test_dates.py:DayArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:DayArchiveViewTests.test_day_view",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:DayArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:DayArchiveViewTests.test_day_view_allow_empty",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:DayArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:DayArchiveViewTests.test_day_view_allow_future",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:DayArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:DayArchiveViewTests.test_day_view_paginated",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:DayArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:DayArchiveViewTests.test_next_prev_context",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:DayArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:DayArchiveViewTests.test_custom_month_format",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:DayArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:DayArchiveViewTests.test_day_view_invalid_pattern",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:DayArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:DayArchiveViewTests.test_today_view",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:DayArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:DayArchiveViewTests.test_datetime_day_view",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:DayArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:DayArchiveViewTests.test_aware_datetime_day_view",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:DayArchiveViewTests",
      "target": "tests/generic_views/test_dates.py:TestDataMixin",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/test_dates.py:DateDetailViewTests",
      "target": "tests/generic_views/test_dates.py:DateDetailViewTests.test_date_detail_by_pk",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:DateDetailViewTests",
      "target": "tests/generic_views/test_dates.py:DateDetailViewTests.test_date_detail_by_slug",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:DateDetailViewTests",
      "target": "tests/generic_views/test_dates.py:DateDetailViewTests.test_date_detail_custom_month_format",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:DateDetailViewTests",
      "target": "tests/generic_views/test_dates.py:DateDetailViewTests.test_date_detail_allow_future",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:DateDetailViewTests",
      "target": "tests/generic_views/test_dates.py:DateDetailViewTests.test_year_out_of_range",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:DateDetailViewTests",
      "target": "tests/generic_views/test_dates.py:DateDetailViewTests.test_invalid_url",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:DateDetailViewTests",
      "target": "tests/generic_views/test_dates.py:DateDetailViewTests.test_get_object_custom_queryset",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:DateDetailViewTests",
      "target": "tests/generic_views/test_dates.py:DateDetailViewTests.test_get_object_custom_queryset_numqueries",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:DateDetailViewTests",
      "target": "tests/generic_views/test_dates.py:DateDetailViewTests.test_datetime_date_detail",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:DateDetailViewTests",
      "target": "tests/generic_views/test_dates.py:DateDetailViewTests.test_aware_datetime_date_detail",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_dates.py:DateDetailViewTests",
      "target": "tests/generic_views/test_dates.py:TestDataMixin",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/test_edit.py",
      "target": "tests/generic_views/test_edit.py:FormMixinTests",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py",
      "target": "tests/generic_views/test_edit.py:BasicFormTests",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py",
      "target": "tests/generic_views/test_edit.py:ModelFormMixinTests",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py",
      "target": "tests/generic_views/test_edit.py:CreateViewTests",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py",
      "target": "tests/generic_views/test_edit.py:UpdateViewTests",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py",
      "target": "tests/generic_views/test_edit.py:DeleteViewTests",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py",
      "target": "tests/generic_views/views.py",
      "type": "imports"
    },
    {
      "source": "tests/generic_views/test_edit.py",
      "target": "tests/generic_views/forms.py:AuthorForm",
      "type": "imports"
    },
    {
      "source": "tests/generic_views/test_edit.py",
      "target": "tests/generic_views/models.py:Artist",
      "type": "imports"
    },
    {
      "source": "tests/generic_views/test_edit.py",
      "target": "tests/generic_views/models.py:Author",
      "type": "imports"
    },
    {
      "source": "tests/generic_views/test_edit.py:FormMixinTests",
      "target": "tests/generic_views/test_edit.py:FormMixinTests.test_initial_data",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:FormMixinTests",
      "target": "tests/generic_views/test_edit.py:FormMixinTests.test_get_prefix",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:FormMixinTests",
      "target": "tests/generic_views/test_edit.py:FormMixinTests.test_get_form",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:FormMixinTests",
      "target": "tests/generic_views/test_edit.py:FormMixinTests.test_get_context_data",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:FormMixinTests.test_get_prefix",
      "target": "tests/generic_views/test_edit.py:FormMixinTests.test_get_prefix.TestFormMixin",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:FormMixinTests.test_get_prefix",
      "target": "tests/generic_views/test_edit.py:FormMixinTests.test_get_prefix.TestFormMixin",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:FormMixinTests.test_get_prefix",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:FormMixinTests.test_get_prefix",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:FormMixinTests.test_get_form",
      "target": "tests/generic_views/test_edit.py:FormMixinTests.test_get_form.TestFormMixin",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:FormMixinTests.test_get_form",
      "target": "tests/generic_views/test_edit.py:FormMixinTests.test_get_form.TestFormMixin",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:FormMixinTests.test_get_form",
      "target": "tests/generic_views/test_edit.py:FormMixinTests.test_get_form.FormClassTestFormMixin",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:FormMixinTests.test_get_form",
      "target": "tests/generic_views/test_edit.py:FormMixinTests.test_get_form.FormClassTestFormMixin",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:FormMixinTests.test_get_form",
      "target": "tests/generic_views/views.py:AuthorUpdate.get_form",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:FormMixinTests.test_get_form.FormClassTestFormMixin",
      "target": "tests/generic_views/test_edit.py:FormMixinTests.test_get_form.TestFormMixin",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/test_edit.py:FormMixinTests.test_get_context_data",
      "target": "tests/generic_views/test_edit.py:FormMixinTests.test_get_context_data.FormContext",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:FormMixinTests.test_get_context_data",
      "target": "tests/generic_views/test_edit.py:FormMixinTests.test_get_context_data.FormContext",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:FormMixinTests.test_get_context_data",
      "target": "tests/generic_views/views.py:CustomContextView.get_context_data",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:FormMixinTests.test_get_context_data",
      "target": "tests/generic_views/views.py:CustomTemplateView.get_context_data",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:BasicFormTests",
      "target": "tests/generic_views/test_edit.py:BasicFormTests.test_post_data",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:BasicFormTests",
      "target": "tests/generic_views/test_edit.py:BasicFormTests.test_late_form_validation",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:ModelFormMixinTests",
      "target": "tests/generic_views/test_edit.py:ModelFormMixinTests.test_get_form",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:ModelFormMixinTests",
      "target": "tests/generic_views/test_edit.py:ModelFormMixinTests.test_get_form_checks_for_object",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:ModelFormMixinTests.test_get_form",
      "target": "tests/generic_views/views.py:AuthorGetQuerySetFormView",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:ModelFormMixinTests.test_get_form_checks_for_object",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:ModelFormMixinTests.test_get_form_checks_for_object",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:CreateViewTests",
      "target": "tests/generic_views/test_edit.py:CreateViewTests.test_create",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:CreateViewTests",
      "target": "tests/generic_views/test_edit.py:CreateViewTests.test_create_invalid",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:CreateViewTests",
      "target": "tests/generic_views/test_edit.py:CreateViewTests.test_create_with_object_url",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:CreateViewTests",
      "target": "tests/generic_views/test_edit.py:CreateViewTests.test_create_with_redirect",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:CreateViewTests",
      "target": "tests/generic_views/test_edit.py:CreateViewTests.test_create_with_interpolated_redirect",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:CreateViewTests",
      "target": "tests/generic_views/test_edit.py:CreateViewTests.test_create_with_special_properties",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:CreateViewTests",
      "target": "tests/generic_views/test_edit.py:CreateViewTests.test_create_without_redirect",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:CreateViewTests",
      "target": "tests/generic_views/test_edit.py:CreateViewTests.test_create_restricted",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:CreateViewTests",
      "target": "tests/generic_views/test_edit.py:CreateViewTests.test_create_view_with_restricted_fields",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:CreateViewTests",
      "target": "tests/generic_views/test_edit.py:CreateViewTests.test_create_view_all_fields",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:CreateViewTests",
      "target": "tests/generic_views/test_edit.py:CreateViewTests.test_create_view_without_explicit_fields",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:CreateViewTests",
      "target": "tests/generic_views/test_edit.py:CreateViewTests.test_define_both_fields_and_form_class",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:CreateViewTests.test_create",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:CreateViewTests.test_create",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:CreateViewTests.test_create_with_object_url",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:CreateViewTests.test_create_with_object_url",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:CreateViewTests.test_create_with_interpolated_redirect",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:CreateViewTests.test_create_with_interpolated_redirect",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:CreateViewTests.test_create_with_special_properties",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:CreateViewTests.test_create_with_special_properties",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:CreateViewTests.test_create_view_with_restricted_fields",
      "target": "tests/generic_views/test_edit.py:CreateViewTests.test_create_view_with_restricted_fields.MyCreateView",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:CreateViewTests.test_create_view_with_restricted_fields",
      "target": "tests/generic_views/test_edit.py:CreateViewTests.test_create_view_with_restricted_fields.MyCreateView",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:CreateViewTests.test_create_view_all_fields",
      "target": "tests/generic_views/test_edit.py:CreateViewTests.test_create_view_all_fields.MyCreateView",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:CreateViewTests.test_create_view_all_fields",
      "target": "tests/generic_views/test_edit.py:CreateViewTests.test_create_view_all_fields.MyCreateView",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:CreateViewTests.test_create_view_without_explicit_fields",
      "target": "tests/generic_views/test_edit.py:CreateViewTests.test_create_view_without_explicit_fields.MyCreateView",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:CreateViewTests.test_create_view_without_explicit_fields",
      "target": "tests/generic_views/test_edit.py:CreateViewTests.test_create_view_without_explicit_fields.MyCreateView",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:CreateViewTests.test_define_both_fields_and_form_class",
      "target": "tests/generic_views/test_edit.py:CreateViewTests.test_define_both_fields_and_form_class.MyCreateView",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:CreateViewTests.test_define_both_fields_and_form_class",
      "target": "tests/generic_views/test_edit.py:CreateViewTests.test_define_both_fields_and_form_class.MyCreateView",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:UpdateViewTests",
      "target": "tests/generic_views/test_edit.py:UpdateViewTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:UpdateViewTests",
      "target": "tests/generic_views/test_edit.py:UpdateViewTests.test_update_post",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:UpdateViewTests",
      "target": "tests/generic_views/test_edit.py:UpdateViewTests.test_update_invalid",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:UpdateViewTests",
      "target": "tests/generic_views/test_edit.py:UpdateViewTests.test_update_with_object_url",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:UpdateViewTests",
      "target": "tests/generic_views/test_edit.py:UpdateViewTests.test_update_with_redirect",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:UpdateViewTests",
      "target": "tests/generic_views/test_edit.py:UpdateViewTests.test_update_with_interpolated_redirect",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:UpdateViewTests",
      "target": "tests/generic_views/test_edit.py:UpdateViewTests.test_update_with_special_properties",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:UpdateViewTests",
      "target": "tests/generic_views/test_edit.py:UpdateViewTests.test_update_without_redirect",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:UpdateViewTests",
      "target": "tests/generic_views/test_edit.py:UpdateViewTests.test_update_get_object",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:UpdateViewTests.test_update_post",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:UpdateViewTests.test_update_post",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:UpdateViewTests.test_update_with_interpolated_redirect",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:UpdateViewTests.test_update_with_interpolated_redirect",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:UpdateViewTests.test_update_with_special_properties",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:UpdateViewTests.test_update_with_special_properties",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:UpdateViewTests.test_update_get_object",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:UpdateViewTests.test_update_get_object",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:DeleteViewTests",
      "target": "tests/generic_views/test_edit.py:DeleteViewTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:DeleteViewTests",
      "target": "tests/generic_views/test_edit.py:DeleteViewTests.test_delete_by_post",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:DeleteViewTests",
      "target": "tests/generic_views/test_edit.py:DeleteViewTests.test_delete_by_delete",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:DeleteViewTests",
      "target": "tests/generic_views/test_edit.py:DeleteViewTests.test_delete_with_redirect",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:DeleteViewTests",
      "target": "tests/generic_views/test_edit.py:DeleteViewTests.test_delete_with_interpolated_redirect",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:DeleteViewTests",
      "target": "tests/generic_views/test_edit.py:DeleteViewTests.test_delete_with_special_properties",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:DeleteViewTests",
      "target": "tests/generic_views/test_edit.py:DeleteViewTests.test_delete_without_redirect",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_edit.py:DeleteViewTests.test_delete_by_post",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:DeleteViewTests.test_delete_by_post",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:DeleteViewTests.test_delete_with_special_properties",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_edit.py:DeleteViewTests.test_delete_with_special_properties",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/forms.py",
      "target": "tests/generic_views/forms.py:AuthorForm",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/forms.py",
      "target": "tests/generic_views/forms.py:ContactForm",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/forms.py",
      "target": "tests/generic_views/models.py:Author",
      "type": "imports"
    },
    {
      "source": "tests/generic_views/forms.py:AuthorForm",
      "target": "tests/generic_views/forms.py:AuthorForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/urls.py",
      "target": "tests/generic_views/views.py",
      "type": "imports"
    },
    {
      "source": "tests/generic_views/urls.py",
      "target": "tests/generic_views/models.py:Book",
      "type": "imports"
    },
    {
      "source": "tests/generic_views/test_base.py",
      "target": "tests/generic_views/test_base.py:SimpleView",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py",
      "target": "tests/generic_views/test_base.py:SimplePostView",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py",
      "target": "tests/generic_views/test_base.py:PostOnlyView",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py",
      "target": "tests/generic_views/test_base.py:CustomizableView",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py",
      "target": "tests/generic_views/test_base.py:decorator",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py",
      "target": "tests/generic_views/test_base.py:DecoratedDispatchView",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py",
      "target": "tests/generic_views/test_base.py:AboutTemplateView",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py",
      "target": "tests/generic_views/test_base.py:InstanceView",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py",
      "target": "tests/generic_views/test_base.py:ViewTest",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py",
      "target": "tests/generic_views/test_base.py:TemplateViewTest",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py",
      "target": "tests/generic_views/test_base.py:RedirectViewTest",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py",
      "target": "tests/generic_views/test_base.py:GetContextDataTest",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py",
      "target": "tests/generic_views/test_base.py:UseMultipleObjectMixinTest",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py",
      "target": "tests/generic_views/test_base.py:SingleObjectTemplateResponseMixinTest",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py",
      "target": "tests/generic_views/views.py",
      "type": "imports"
    },
    {
      "source": "tests/generic_views/test_base.py:SimpleView",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:SimplePostView",
      "target": "tests/generic_views/test_base.py:SimpleView",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/test_base.py:PostOnlyView",
      "target": "tests/generic_views/test_base.py:PostOnlyView.post",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:CustomizableView",
      "target": "tests/generic_views/test_base.py:SimpleView",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/test_base.py:DecoratedDispatchView",
      "target": "tests/generic_views/test_base.py:DecoratedDispatchView.dispatch",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:DecoratedDispatchView",
      "target": "tests/generic_views/test_base.py:SimpleView",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/test_base.py:AboutTemplateView",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:AboutTemplateView",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get_template_names",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:AboutTemplateAttributeView",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:InstanceView",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest",
      "target": "tests/generic_views/test_base.py:ViewTest._assert_simple",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest",
      "target": "tests/generic_views/test_base.py:ViewTest.test_no_init_kwargs",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest",
      "target": "tests/generic_views/test_base.py:ViewTest.test_no_init_args",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest",
      "target": "tests/generic_views/test_base.py:ViewTest.test_pathological_http_method",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest",
      "target": "tests/generic_views/test_base.py:ViewTest.test_get_only",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest",
      "target": "tests/generic_views/test_base.py:ViewTest.test_get_and_head",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest",
      "target": "tests/generic_views/test_base.py:ViewTest.test_head_no_get",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest",
      "target": "tests/generic_views/test_base.py:ViewTest.test_get_and_post",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest",
      "target": "tests/generic_views/test_base.py:ViewTest.test_invalid_keyword_argument",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest",
      "target": "tests/generic_views/test_base.py:ViewTest.test_calling_more_than_once",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest",
      "target": "tests/generic_views/test_base.py:ViewTest.test_class_attributes",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest",
      "target": "tests/generic_views/test_base.py:ViewTest.test_dispatch_decoration",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest",
      "target": "tests/generic_views/test_base.py:ViewTest.test_options",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest",
      "target": "tests/generic_views/test_base.py:ViewTest.test_options_for_get_view",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest",
      "target": "tests/generic_views/test_base.py:ViewTest.test_options_for_get_and_post_view",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest",
      "target": "tests/generic_views/test_base.py:ViewTest.test_options_for_post_view",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest",
      "target": "tests/generic_views/test_base.py:ViewTest._assert_allows",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest",
      "target": "tests/generic_views/test_base.py:ViewTest.test_args_kwargs_request_on_self",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest",
      "target": "tests/generic_views/test_base.py:ViewTest.test_overridden_setup",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest",
      "target": "tests/generic_views/test_base.py:ViewTest.test_not_calling_parent_setup_error",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest",
      "target": "tests/generic_views/test_base.py:ViewTest.test_direct_instantiation",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_no_init_kwargs",
      "target": "tests/generic_views/test_base.py:SimpleView",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_pathological_http_method",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_pathological_http_method",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_pathological_http_method",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_pathological_http_method",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_pathological_http_method",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_pathological_http_method",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_get_only",
      "target": "tests/generic_views/test_base.py:PostOnlyView.post",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_get_only",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_get_only",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_get_only",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_get_only",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_get_only",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_get_only",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_get_only",
      "target": "tests/generic_views/test_base.py:ViewTest._assert_simple",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_get_and_head",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_get_and_head",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_get_and_head",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_get_and_head",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_get_and_head",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_get_and_head",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_get_and_head",
      "target": "tests/generic_views/test_base.py:ViewTest._assert_simple",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_get_and_post",
      "target": "tests/generic_views/test_base.py:PostOnlyView.post",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_get_and_post",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_get_and_post",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_get_and_post",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_get_and_post",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_get_and_post",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_get_and_post",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_get_and_post",
      "target": "tests/generic_views/test_base.py:ViewTest._assert_simple",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_calling_more_than_once",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_calling_more_than_once",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_calling_more_than_once",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_calling_more_than_once",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_calling_more_than_once",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_calling_more_than_once",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_options_for_get_view",
      "target": "tests/generic_views/test_base.py:ViewTest._assert_allows",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_options_for_get_and_post_view",
      "target": "tests/generic_views/test_base.py:ViewTest._assert_allows",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_options_for_post_view",
      "target": "tests/generic_views/test_base.py:ViewTest._assert_allows",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_args_kwargs_request_on_self",
      "target": "tests/generic_views/test_base.py:InstanceView",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_args_kwargs_request_on_self",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_args_kwargs_request_on_self",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_args_kwargs_request_on_self",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_args_kwargs_request_on_self",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_args_kwargs_request_on_self",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_args_kwargs_request_on_self",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_overridden_setup",
      "target": "tests/generic_views/test_base.py:ViewTest.test_overridden_setup.SetAttributeMixin",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_overridden_setup",
      "target": "tests/generic_views/test_base.py:ViewTest.test_overridden_setup.CheckSetupView",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_overridden_setup",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_overridden_setup",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_overridden_setup",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_overridden_setup",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_overridden_setup",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_overridden_setup",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_overridden_setup.SetAttributeMixin",
      "target": "tests/generic_views/test_base.py:ViewTest.test_overridden_setup.SetAttributeMixin.setup",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_overridden_setup.CheckSetupView",
      "target": "tests/generic_views/test_base.py:ViewTest.test_overridden_setup.CheckSetupView.dispatch",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_overridden_setup.CheckSetupView",
      "target": "tests/generic_views/test_base.py:SimpleView",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_overridden_setup.CheckSetupView",
      "target": "tests/generic_views/test_base.py:ViewTest.test_overridden_setup.SetAttributeMixin",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_overridden_setup.CheckSetupView.dispatch",
      "target": "tests/generic_views/test_base.py:DecoratedDispatchView.dispatch",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_not_calling_parent_setup_error",
      "target": "tests/generic_views/test_base.py:ViewTest.test_not_calling_parent_setup_error.TestView",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_not_calling_parent_setup_error",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_not_calling_parent_setup_error",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_not_calling_parent_setup_error",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_not_calling_parent_setup_error",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_not_calling_parent_setup_error",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_not_calling_parent_setup_error",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_not_calling_parent_setup_error.TestView",
      "target": "tests/generic_views/test_base.py:ViewTest.test_not_calling_parent_setup_error.TestView.setup",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_direct_instantiation",
      "target": "tests/generic_views/test_base.py:PostOnlyView",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:ViewTest.test_direct_instantiation",
      "target": "tests/generic_views/test_base.py:DecoratedDispatchView.dispatch",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest",
      "target": "tests/generic_views/test_base.py:TemplateViewTest._assert_about",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest",
      "target": "tests/generic_views/test_base.py:TemplateViewTest.test_get",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest",
      "target": "tests/generic_views/test_base.py:TemplateViewTest.test_head",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest",
      "target": "tests/generic_views/test_base.py:TemplateViewTest.test_get_template_attribute",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest",
      "target": "tests/generic_views/test_base.py:TemplateViewTest.test_get_generic_template",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest",
      "target": "tests/generic_views/test_base.py:TemplateViewTest.test_template_name_required",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest",
      "target": "tests/generic_views/test_base.py:TemplateViewTest.test_template_engine",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest",
      "target": "tests/generic_views/test_base.py:TemplateViewTest.test_template_params",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest",
      "target": "tests/generic_views/test_base.py:TemplateViewTest.test_extra_template_params",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest",
      "target": "tests/generic_views/test_base.py:TemplateViewTest.test_cached_views",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest",
      "target": "tests/generic_views/test_base.py:TemplateViewTest.test_content_type",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest",
      "target": "tests/generic_views/test_base.py:TemplateViewTest.test_resolve_view",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest",
      "target": "tests/generic_views/test_base.py:TemplateViewTest.test_resolve_login_required_view",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest",
      "target": "tests/generic_views/test_base.py:TemplateViewTest.test_extra_context",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_get",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_get",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_get",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_get",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_get",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_get",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_get",
      "target": "tests/generic_views/test_base.py:TemplateViewTest._assert_about",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_get_template_attribute",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_get_template_attribute",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_get_template_attribute",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_get_template_attribute",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_get_template_attribute",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_get_template_attribute",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_get_template_attribute",
      "target": "tests/generic_views/test_base.py:TemplateViewTest._assert_about",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_get_generic_template",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_get_generic_template",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_get_generic_template",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_get_generic_template",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_get_generic_template",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_get_generic_template",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_get_generic_template",
      "target": "tests/generic_views/test_base.py:TemplateViewTest._assert_about",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_template_name_required",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_template_name_required",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_template_name_required",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_template_name_required",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_template_name_required",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_template_name_required",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_template_engine",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_template_engine",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_template_engine",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_template_engine",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_template_engine",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_template_engine",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_template_params",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_template_params",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_template_params",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_template_params",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_template_params",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_template_params",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_extra_template_params",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_extra_template_params",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_extra_template_params",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_extra_template_params",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_extra_template_params",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_extra_template_params",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_cached_views",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_cached_views",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_cached_views",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_cached_views",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_cached_views",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_cached_views",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_content_type",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_content_type",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_content_type",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_content_type",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_content_type",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_content_type",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_extra_context",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_extra_context",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_extra_context",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_extra_context",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_extra_context",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:TemplateViewTest.test_extra_context",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest",
      "target": "tests/generic_views/test_base.py:RedirectViewTest.test_no_url",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest",
      "target": "tests/generic_views/test_base.py:RedirectViewTest.test_default_redirect",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest",
      "target": "tests/generic_views/test_base.py:RedirectViewTest.test_permanent_redirect",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest",
      "target": "tests/generic_views/test_base.py:RedirectViewTest.test_temporary_redirect",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest",
      "target": "tests/generic_views/test_base.py:RedirectViewTest.test_include_args",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest",
      "target": "tests/generic_views/test_base.py:RedirectViewTest.test_include_urlencoded_args",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest",
      "target": "tests/generic_views/test_base.py:RedirectViewTest.test_parameter_substitution",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest",
      "target": "tests/generic_views/test_base.py:RedirectViewTest.test_named_url_pattern",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest",
      "target": "tests/generic_views/test_base.py:RedirectViewTest.test_named_url_pattern_using_args",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest",
      "target": "tests/generic_views/test_base.py:RedirectViewTest.test_redirect_POST",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest",
      "target": "tests/generic_views/test_base.py:RedirectViewTest.test_redirect_HEAD",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest",
      "target": "tests/generic_views/test_base.py:RedirectViewTest.test_redirect_OPTIONS",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest",
      "target": "tests/generic_views/test_base.py:RedirectViewTest.test_redirect_PUT",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest",
      "target": "tests/generic_views/test_base.py:RedirectViewTest.test_redirect_PATCH",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest",
      "target": "tests/generic_views/test_base.py:RedirectViewTest.test_redirect_DELETE",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest",
      "target": "tests/generic_views/test_base.py:RedirectViewTest.test_redirect_when_meta_contains_no_query_string",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest",
      "target": "tests/generic_views/test_base.py:RedirectViewTest.test_direct_instantiation",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_no_url",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_no_url",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_no_url",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_no_url",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_no_url",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_no_url",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_default_redirect",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_default_redirect",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_default_redirect",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_default_redirect",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_default_redirect",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_default_redirect",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_permanent_redirect",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_permanent_redirect",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_permanent_redirect",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_permanent_redirect",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_permanent_redirect",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_permanent_redirect",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_temporary_redirect",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_temporary_redirect",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_temporary_redirect",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_temporary_redirect",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_temporary_redirect",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_temporary_redirect",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_include_args",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_include_args",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_include_args",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_include_args",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_include_args",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_include_args",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_include_urlencoded_args",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_include_urlencoded_args",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_include_urlencoded_args",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_include_urlencoded_args",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_include_urlencoded_args",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_include_urlencoded_args",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_parameter_substitution",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_parameter_substitution",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_parameter_substitution",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_parameter_substitution",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_parameter_substitution",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_parameter_substitution",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_named_url_pattern",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_named_url_pattern",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_named_url_pattern",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_named_url_pattern",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_named_url_pattern",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_named_url_pattern",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_named_url_pattern_using_args",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_named_url_pattern_using_args",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_named_url_pattern_using_args",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_named_url_pattern_using_args",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_named_url_pattern_using_args",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_named_url_pattern_using_args",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_redirect_POST",
      "target": "tests/generic_views/test_base.py:PostOnlyView.post",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:RedirectViewTest.test_direct_instantiation",
      "target": "tests/generic_views/test_base.py:DecoratedDispatchView.dispatch",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:GetContextDataTest",
      "target": "tests/generic_views/test_base.py:GetContextDataTest.test_get_context_data_super",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:GetContextDataTest",
      "target": "tests/generic_views/test_base.py:GetContextDataTest.test_object_at_custom_name_in_context_data",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:GetContextDataTest",
      "target": "tests/generic_views/test_base.py:GetContextDataTest.test_object_in_get_context_data",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:GetContextDataTest.test_get_context_data_super",
      "target": "tests/generic_views/views.py:CustomContextView.get_context_data",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:GetContextDataTest.test_get_context_data_super",
      "target": "tests/generic_views/views.py:CustomTemplateView.get_context_data",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:GetContextDataTest.test_get_context_data_super",
      "target": "tests/generic_views/views.py:CustomContextView",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:GetContextDataTest.test_object_at_custom_name_in_context_data",
      "target": "tests/generic_views/views.py:CustomContextView.get_context_data",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:GetContextDataTest.test_object_at_custom_name_in_context_data",
      "target": "tests/generic_views/views.py:CustomTemplateView.get_context_data",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:GetContextDataTest.test_object_at_custom_name_in_context_data",
      "target": "tests/generic_views/views.py:CustomSingleObjectView",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:GetContextDataTest.test_object_in_get_context_data",
      "target": "tests/generic_views/views.py:CustomContextView.get_context_data",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:GetContextDataTest.test_object_in_get_context_data",
      "target": "tests/generic_views/views.py:CustomTemplateView.get_context_data",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:GetContextDataTest.test_object_in_get_context_data",
      "target": "tests/generic_views/views.py:CustomSingleObjectView",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:UseMultipleObjectMixinTest",
      "target": "tests/generic_views/test_base.py:UseMultipleObjectMixinTest.test_use_queryset_from_view",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:UseMultipleObjectMixinTest",
      "target": "tests/generic_views/test_base.py:UseMultipleObjectMixinTest.test_overwrite_queryset",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:UseMultipleObjectMixinTest.test_use_queryset_from_view",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:UseMultipleObjectMixinTest.test_use_queryset_from_view",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:UseMultipleObjectMixinTest.test_use_queryset_from_view",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:UseMultipleObjectMixinTest.test_use_queryset_from_view",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:UseMultipleObjectMixinTest.test_use_queryset_from_view",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:UseMultipleObjectMixinTest.test_use_queryset_from_view",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:UseMultipleObjectMixinTest.test_use_queryset_from_view",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:UseMultipleObjectMixinTest.test_use_queryset_from_view",
      "target": "tests/generic_views/views.py:CustomContextView.get_context_data",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:UseMultipleObjectMixinTest.test_use_queryset_from_view",
      "target": "tests/generic_views/views.py:CustomTemplateView.get_context_data",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:UseMultipleObjectMixinTest.test_overwrite_queryset",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:UseMultipleObjectMixinTest.test_overwrite_queryset",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:UseMultipleObjectMixinTest.test_overwrite_queryset",
      "target": "tests/generic_views/test_base.py:SimpleView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:UseMultipleObjectMixinTest.test_overwrite_queryset",
      "target": "tests/generic_views/test_base.py:AboutTemplateAttributeView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:UseMultipleObjectMixinTest.test_overwrite_queryset",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:UseMultipleObjectMixinTest.test_overwrite_queryset",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:UseMultipleObjectMixinTest.test_overwrite_queryset",
      "target": "tests/generic_views/test_base.py:InstanceView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:UseMultipleObjectMixinTest.test_overwrite_queryset",
      "target": "tests/generic_views/views.py:CustomContextView.get_context_data",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:UseMultipleObjectMixinTest.test_overwrite_queryset",
      "target": "tests/generic_views/views.py:CustomTemplateView.get_context_data",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:SingleObjectTemplateResponseMixinTest",
      "target": "tests/generic_views/test_base.py:SingleObjectTemplateResponseMixinTest.test_template_mixin_without_template",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/test_base.py:SingleObjectTemplateResponseMixinTest.test_template_mixin_without_template",
      "target": "tests/generic_views/views.py:TemplateResponseWithoutTemplate",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:SingleObjectTemplateResponseMixinTest.test_template_mixin_without_template",
      "target": "tests/generic_views/test_base.py:AboutTemplateView.get_template_names",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/test_base.py:SingleObjectTemplateResponseMixinTest.test_template_mixin_without_template",
      "target": "tests/generic_views/views.py:BookSigningConfig.get_template_names",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:CustomTemplateView",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:ObjectDetail",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:ArtistDetail",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:AuthorDetail",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:AuthorCustomDetail",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:PageDetail",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:DictList",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:ArtistList",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:AuthorList",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:AuthorListGetQuerysetReturnsNone",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:BookList",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:CustomPaginator",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:AuthorListCustomPaginator",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:ContactView",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:ArtistCreate",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:NaiveAuthorCreate",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:TemplateResponseWithoutTemplate",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:AuthorCreate",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:SpecializedAuthorCreate",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:AuthorCreateRestricted",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:ArtistUpdate",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:NaiveAuthorUpdate",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:AuthorUpdate",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:OneAuthorUpdate",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:SpecializedAuthorUpdate",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:NaiveAuthorDelete",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:AuthorDelete",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:SpecializedAuthorDelete",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:BookConfig",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:BookArchive",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:BookYearArchive",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:BookMonthArchive",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:BookWeekArchive",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:BookDayArchive",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:BookTodayArchive",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:BookDetail",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:AuthorGetQuerySetFormView",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:BookDetailGetObjectCustomQueryset",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:CustomContextView",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:CustomSingleObjectView",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:BookSigningConfig",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:BookSigningArchive",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:BookSigningYearArchive",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:BookSigningMonthArchive",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:BookSigningWeekArchive",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:BookSigningDayArchive",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:BookSigningTodayArchive",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:BookArchiveWithoutDateField",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:BookSigningDetail",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:NonModel",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:NonModelDetail",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:ObjectDoesNotExistDetail",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/views.py:LateValidationView",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/forms.py:AuthorForm",
      "type": "imports"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/forms.py:ContactForm",
      "type": "imports"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/models.py:Artist",
      "type": "imports"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/models.py:Author",
      "type": "imports"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/models.py:Book",
      "type": "imports"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/models.py:BookSigning",
      "type": "imports"
    },
    {
      "source": "tests/generic_views/views.py",
      "target": "tests/generic_views/models.py:Page",
      "type": "imports"
    },
    {
      "source": "tests/generic_views/views.py:CustomTemplateView",
      "target": "tests/generic_views/views.py:CustomTemplateView.get_context_data",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py:CustomTemplateView.get_context_data",
      "target": "tests/generic_views/views.py:CustomContextView.get_context_data",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/views.py:ObjectDetail",
      "target": "tests/generic_views/views.py:ObjectDetail.get_object",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py:AuthorCustomDetail",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "target": "tests/generic_views/views.py:CustomContextView.get_object",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "target": "tests/generic_views/views.py:BookDetailGetObjectCustomQueryset.get_object",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "target": "tests/generic_views/views.py:ObjectDetail.get_object",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "target": "tests/generic_views/views.py:NonModelDetail.get_object",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "target": "tests/generic_views/views.py:OneAuthorUpdate.get_object",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "target": "tests/generic_views/views.py:CustomContextView.get_context_object_name",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/views.py:AuthorListGetQuerysetReturnsNone",
      "target": "tests/generic_views/views.py:AuthorListGetQuerysetReturnsNone.get_queryset",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py:AuthorListGetQuerysetReturnsNone",
      "target": "tests/generic_views/views.py:AuthorList",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/views.py:AuthorListCustomPaginator",
      "target": "tests/generic_views/views.py:AuthorListCustomPaginator.get_paginator",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py:AuthorListCustomPaginator",
      "target": "tests/generic_views/views.py:AuthorList",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/views.py:SpecializedAuthorCreate",
      "target": "tests/generic_views/views.py:SpecializedAuthorCreate.get_success_url",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py:AuthorCreateRestricted",
      "target": "tests/generic_views/views.py:AuthorCreate",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/views.py:AuthorUpdate",
      "target": "tests/generic_views/views.py:AuthorUpdate.get_form",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py:OneAuthorUpdate",
      "target": "tests/generic_views/views.py:OneAuthorUpdate.get_object",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py:OneAuthorUpdate.get_object",
      "target": "tests/generic_views/views.py:AuthorCustomDetail.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/views.py:OneAuthorUpdate.get_object",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/views.py:SpecializedAuthorUpdate",
      "target": "tests/generic_views/views.py:SpecializedAuthorUpdate.get_success_url",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py:BookArchive",
      "target": "tests/generic_views/views.py:BookConfig",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/views.py:BookYearArchive",
      "target": "tests/generic_views/views.py:BookConfig",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/views.py:BookMonthArchive",
      "target": "tests/generic_views/views.py:BookConfig",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/views.py:BookWeekArchive",
      "target": "tests/generic_views/views.py:BookConfig",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/views.py:BookDayArchive",
      "target": "tests/generic_views/views.py:BookConfig",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/views.py:BookTodayArchive",
      "target": "tests/generic_views/views.py:BookConfig",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/views.py:BookDetail",
      "target": "tests/generic_views/views.py:BookConfig",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/views.py:AuthorGetQuerySetFormView",
      "target": "tests/generic_views/views.py:AuthorGetQuerySetFormView.get_queryset",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py:BookDetailGetObjectCustomQueryset",
      "target": "tests/generic_views/views.py:BookDetailGetObjectCustomQueryset.get_object",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py:BookDetailGetObjectCustomQueryset",
      "target": "tests/generic_views/views.py:BookDetail",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/views.py:BookDetailGetObjectCustomQueryset.get_object",
      "target": "tests/generic_views/views.py:CustomContextView.get_object",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/views.py:BookDetailGetObjectCustomQueryset.get_object",
      "target": "tests/generic_views/views.py:ObjectDetail.get_object",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/views.py:BookDetailGetObjectCustomQueryset.get_object",
      "target": "tests/generic_views/views.py:NonModelDetail.get_object",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/views.py:BookDetailGetObjectCustomQueryset.get_object",
      "target": "tests/generic_views/views.py:OneAuthorUpdate.get_object",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/views.py:CustomMultipleObjectMixinView",
      "target": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "target": "tests/generic_views/views.py:ObjectDoesNotExistDetail.get_queryset",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "target": "tests/generic_views/views.py:AuthorGetQuerySetFormView.get_queryset",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/views.py:CustomMultipleObjectMixinView.get",
      "target": "tests/generic_views/views.py:AuthorListGetQuerysetReturnsNone.get_queryset",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/views.py:CustomContextView",
      "target": "tests/generic_views/views.py:CustomContextView.get_object",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py:CustomContextView",
      "target": "tests/generic_views/views.py:CustomContextView.get_context_data",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py:CustomContextView",
      "target": "tests/generic_views/views.py:CustomContextView.get_context_object_name",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py:CustomContextView.get_object",
      "target": "tests/generic_views/models.py:Book",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/views.py:CustomContextView.get_context_data",
      "target": "tests/generic_views/views.py:CustomTemplateView.get_context_data",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/views.py:BookSigningConfig",
      "target": "tests/generic_views/views.py:BookSigningConfig.get_template_names",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py:BookSigningArchive",
      "target": "tests/generic_views/views.py:BookSigningConfig",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/views.py:BookSigningYearArchive",
      "target": "tests/generic_views/views.py:BookSigningConfig",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/views.py:BookSigningMonthArchive",
      "target": "tests/generic_views/views.py:BookSigningConfig",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/views.py:BookSigningWeekArchive",
      "target": "tests/generic_views/views.py:BookSigningConfig",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/views.py:BookSigningDayArchive",
      "target": "tests/generic_views/views.py:BookSigningConfig",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/views.py:BookSigningTodayArchive",
      "target": "tests/generic_views/views.py:BookSigningConfig",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/views.py:BookSigningDetail",
      "target": "tests/generic_views/views.py:BookSigningConfig",
      "type": "inherits"
    },
    {
      "source": "tests/generic_views/views.py:NonModelDetail",
      "target": "tests/generic_views/views.py:NonModelDetail.get_object",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py:NonModelDetail.get_object",
      "target": "tests/generic_views/views.py:NonModel",
      "type": "invokes"
    },
    {
      "source": "tests/generic_views/views.py:ObjectDoesNotExistDetail",
      "target": "tests/generic_views/views.py:ObjectDoesNotExistDetail.get_queryset",
      "type": "contains"
    },
    {
      "source": "tests/generic_views/views.py:LateValidationView",
      "target": "tests/generic_views/views.py:LateValidationView.form_valid",
      "type": "contains"
    },
    {
      "source": "tests/mutually_referential",
      "target": "tests/mutually_referential/models.py",
      "type": "contains"
    },
    {
      "source": "tests/mutually_referential",
      "target": "tests/mutually_referential/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/mutually_referential",
      "target": "tests/mutually_referential/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/mutually_referential/models.py",
      "target": "tests/mutually_referential/models.py:Parent",
      "type": "contains"
    },
    {
      "source": "tests/mutually_referential/models.py",
      "target": "tests/mutually_referential/models.py:Child",
      "type": "contains"
    },
    {
      "source": "tests/mutually_referential/tests.py",
      "target": "tests/mutually_referential/tests.py:MutuallyReferentialTests",
      "type": "contains"
    },
    {
      "source": "tests/mutually_referential/tests.py",
      "target": "tests/mutually_referential/models.py:Parent",
      "type": "imports"
    },
    {
      "source": "tests/mutually_referential/tests.py:MutuallyReferentialTests",
      "target": "tests/mutually_referential/tests.py:MutuallyReferentialTests.test_mutually_referential",
      "type": "contains"
    },
    {
      "source": "tests/mutually_referential/tests.py:MutuallyReferentialTests.test_mutually_referential",
      "target": "tests/mutually_referential/models.py:Parent",
      "type": "invokes"
    },
    {
      "source": "tests/signed_cookies_tests",
      "target": "tests/signed_cookies_tests/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/signed_cookies_tests",
      "target": "tests/signed_cookies_tests/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/signed_cookies_tests/tests.py",
      "target": "tests/signed_cookies_tests/tests.py:SignedCookieTest",
      "type": "contains"
    },
    {
      "source": "tests/signed_cookies_tests/tests.py:SignedCookieTest",
      "target": "tests/signed_cookies_tests/tests.py:SignedCookieTest.test_can_set_and_read_signed_cookies",
      "type": "contains"
    },
    {
      "source": "tests/signed_cookies_tests/tests.py:SignedCookieTest",
      "target": "tests/signed_cookies_tests/tests.py:SignedCookieTest.test_can_use_salt",
      "type": "contains"
    },
    {
      "source": "tests/signed_cookies_tests/tests.py:SignedCookieTest",
      "target": "tests/signed_cookies_tests/tests.py:SignedCookieTest.test_detects_tampering",
      "type": "contains"
    },
    {
      "source": "tests/signed_cookies_tests/tests.py:SignedCookieTest",
      "target": "tests/signed_cookies_tests/tests.py:SignedCookieTest.test_default_argument_suppresses_exceptions",
      "type": "contains"
    },
    {
      "source": "tests/signed_cookies_tests/tests.py:SignedCookieTest",
      "target": "tests/signed_cookies_tests/tests.py:SignedCookieTest.test_max_age_argument",
      "type": "contains"
    },
    {
      "source": "tests/signed_cookies_tests/tests.py:SignedCookieTest",
      "target": "tests/signed_cookies_tests/tests.py:SignedCookieTest.test_signed_cookies_with_binary_key",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case",
      "target": "tests/expressions_case/models.py",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case",
      "target": "tests/expressions_case/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case",
      "target": "tests/expressions_case/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/models.py",
      "target": "tests/expressions_case/models.py:CaseTestModel",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/models.py",
      "target": "tests/expressions_case/models.py:O2OCaseTestModel",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/models.py",
      "target": "tests/expressions_case/models.py:FKCaseTestModel",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/models.py",
      "target": "tests/expressions_case/models.py:Client",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/models.py:CaseTestModel",
      "target": "tests/expressions_case/models.py:CaseTestModel.__str__",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/models.py:O2OCaseTestModel",
      "target": "tests/expressions_case/models.py:O2OCaseTestModel.__str__",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/models.py:FKCaseTestModel",
      "target": "tests/expressions_case/models.py:FKCaseTestModel.__str__",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/models.py:Client",
      "target": "tests/expressions_case/models.py:Client.__str__",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py",
      "target": "tests/expressions_case/tests.py:CaseDocumentationExamples",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py",
      "target": "tests/expressions_case/tests.py:CaseWhenTests",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py",
      "target": "tests/expressions_case/models.py:CaseTestModel",
      "type": "imports"
    },
    {
      "source": "tests/expressions_case/tests.py",
      "target": "tests/expressions_case/models.py:Client",
      "type": "imports"
    },
    {
      "source": "tests/expressions_case/tests.py",
      "target": "tests/expressions_case/models.py:FKCaseTestModel",
      "type": "imports"
    },
    {
      "source": "tests/expressions_case/tests.py",
      "target": "tests/expressions_case/models.py:O2OCaseTestModel",
      "type": "imports"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_without_default",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_with_expression_as_value",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_with_expression_as_condition",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_with_join_in_value",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_with_in_clause",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_with_join_in_condition",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_with_join_in_predicate",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_with_annotation_in_value",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_with_annotation_in_condition",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_with_annotation_in_predicate",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_with_aggregation_in_value",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_with_aggregation_in_condition",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_with_aggregation_in_predicate",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_exclude",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_values_not_in_order_by",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_annotate_with_empty_when",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_combined_expression",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_in_subquery",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_case_reuse",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_aggregate",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_aggregate_with_expression_as_value",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_aggregate_with_expression_as_condition",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_filter",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_filter_without_default",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_filter_with_expression_as_value",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_filter_with_expression_as_condition",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_filter_with_join_in_value",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_filter_with_join_in_condition",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_filter_with_join_in_predicate",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_filter_with_annotation_in_value",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_filter_with_annotation_in_condition",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_filter_with_annotation_in_predicate",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_filter_with_aggregation_in_value",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_filter_with_aggregation_in_condition",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_filter_with_aggregation_in_predicate",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_without_default",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_with_expression_as_value",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_with_expression_as_condition",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_with_join_in_condition_raise_field_error",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_with_join_in_predicate_raise_field_error",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_big_integer",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_binary",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_boolean",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_date",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_date_time",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_decimal",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_duration",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_email",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_file",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_file_path",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_float",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_image",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_generic_ip_address",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_null_boolean",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_null_boolean_old",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_positive_integer",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_positive_small_integer",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_slug",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_small_integer",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_string",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_text",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_time",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_url",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_uuid",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_update_fk",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_lookup_in_condition",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_lookup_different_fields",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_combined_q_object",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_order_by_conditional_implicit",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_order_by_conditional_explicit",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_join_promotion",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_join_promotion_multiple_annotations",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_m2m_exclude",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseExpressionTests",
      "target": "tests/expressions_case/tests.py:CaseExpressionTests.test_m2m_reuse",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseDocumentationExamples",
      "target": "tests/expressions_case/tests.py:CaseDocumentationExamples.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseDocumentationExamples",
      "target": "tests/expressions_case/tests.py:CaseDocumentationExamples.test_simple_example",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseDocumentationExamples",
      "target": "tests/expressions_case/tests.py:CaseDocumentationExamples.test_lookup_example",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseDocumentationExamples",
      "target": "tests/expressions_case/tests.py:CaseDocumentationExamples.test_conditional_update_example",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseDocumentationExamples",
      "target": "tests/expressions_case/tests.py:CaseDocumentationExamples.test_conditional_aggregation_example",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseDocumentationExamples",
      "target": "tests/expressions_case/tests.py:CaseDocumentationExamples.test_filter_example",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseDocumentationExamples",
      "target": "tests/expressions_case/tests.py:CaseDocumentationExamples.test_hash",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseWhenTests",
      "target": "tests/expressions_case/tests.py:CaseWhenTests.test_only_when_arguments",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseWhenTests",
      "target": "tests/expressions_case/tests.py:CaseWhenTests.test_invalid_when_constructor_args",
      "type": "contains"
    },
    {
      "source": "tests/expressions_case/tests.py:CaseWhenTests",
      "target": "tests/expressions_case/tests.py:CaseWhenTests.test_empty_q_object",
      "type": "contains"
    },
    {
      "source": "tests/model_forms",
      "target": "tests/model_forms/test_modelchoicefield.py",
      "type": "contains"
    },
    {
      "source": "tests/model_forms",
      "target": "tests/model_forms/models.py",
      "type": "contains"
    },
    {
      "source": "tests/model_forms",
      "target": "tests/model_forms/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/model_forms",
      "target": "tests/model_forms/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/model_forms",
      "target": "tests/model_forms/test_uuid.py",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py",
      "target": "tests/model_forms/models.py:Article",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py",
      "target": "tests/model_forms/models.py:Author",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py",
      "target": "tests/model_forms/models.py:Book",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py",
      "target": "tests/model_forms/models.py:Category",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py",
      "target": "tests/model_forms/models.py:Writer",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_basics",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choices",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choices_freshness",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choices_bool",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choices_bool_empty_label",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_deepcopies_widget",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_result_cache_not_shared",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_queryset_none",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_no_extra_query_when_accessing_attrs",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_disabled_modelchoicefield",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_disabled_modelchoicefield_has_changed",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_disabled_multiplemodelchoicefield",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_disabled_modelmultiplechoicefield_has_changed",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_overridable_choice_iterator",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choices_not_fetched_when_not_rendering",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_queryset_manager",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_num_queries",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_deepcopies_widget",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_deepcopies_widget.ModelChoiceForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_deepcopies_widget",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_deepcopies_widget.ModelChoiceForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_result_cache_not_shared",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_result_cache_not_shared.ModelChoiceForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_result_cache_not_shared",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_result_cache_not_shared.ModelChoiceForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_queryset_none",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_queryset_none.ModelChoiceForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_queryset_none",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_queryset_none.ModelChoiceForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_no_extra_query_when_accessing_attrs",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_no_extra_query_when_accessing_attrs.ModelChoiceForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_no_extra_query_when_accessing_attrs",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_no_extra_query_when_accessing_attrs.ModelChoiceForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_disabled_modelchoicefield",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_disabled_modelchoicefield.ModelChoiceForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_disabled_modelchoicefield",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_disabled_modelchoicefield.ModelChoiceForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_disabled_modelchoicefield.ModelChoiceForm",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_disabled_modelchoicefield.ModelChoiceForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_disabled_multiplemodelchoicefield",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_disabled_multiplemodelchoicefield.ArticleForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_disabled_multiplemodelchoicefield",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_disabled_multiplemodelchoicefield.ArticleForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_disabled_multiplemodelchoicefield.ArticleForm",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_disabled_multiplemodelchoicefield.ArticleForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_overridable_choice_iterator",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_overridable_choice_iterator.CustomModelChoiceIterator",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_overridable_choice_iterator",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_overridable_choice_iterator.CustomModelChoiceField",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_overridable_choice_iterator",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_overridable_choice_iterator.CustomModelChoiceField",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget.CustomModelChoiceValue",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget.CustomModelChoiceIterator",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget.CustomCheckboxSelectMultiple",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget.CustomModelMultipleChoiceField",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget.CustomModelMultipleChoiceField",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget.CustomModelChoiceValue",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget.CustomModelChoiceValue.__str__",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget.CustomModelChoiceIterator",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget.CustomModelChoiceIterator.choice",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget.CustomModelChoiceIterator.choice",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget.CustomModelChoiceValue",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget.CustomCheckboxSelectMultiple",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_choice_iterator_passes_model_to_widget.CustomCheckboxSelectMultiple.create_option",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_num_queries",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_num_queries.CategoriesForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_num_queries",
      "target": "tests/model_forms/test_modelchoicefield.py:ModelChoiceFieldTests.test_num_queries.CategoriesForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:Person",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:Category",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:Writer",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:Article",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:ImprovedArticle",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:ImprovedArticleWithParentLink",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:BetterWriter",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:Publication",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:default_mode",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:default_category",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:PublicationDefaults",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:Author",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:Author1",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:WriterProfile",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:Document",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:TextFile",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:CustomFileField",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:CustomFF",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:FilePathModel",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:ImageFile",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:OptionalImageFile",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:NoExtensionImageFile",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:Homepage",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:Product",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:Price",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:Triple",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:ArticleStatus",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:Inventory",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:Book",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:BookXtra",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:DerivedBook",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:ExplicitPK",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:Post",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:DateTimePost",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:DerivedPost",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:BigInt",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:MarkupField",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:CustomFieldForExclusionModel",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:FlexibleDatePost",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:Colour",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:ColourfulItem",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:CustomErrorMessage",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:today_callable_dict",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:today_callable_q",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:Character",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:StumpJoke",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:Student",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:Photo",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:UUIDPK",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:StrictAssignmentFieldSpecific",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:StrictAssignmentAll",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:Award",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py",
      "target": "tests/model_forms/models.py:NullableUniqueCharFieldModel",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:Category",
      "target": "tests/model_forms/models.py:Category.__str__",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:Category",
      "target": "tests/model_forms/models.py:Category.__repr__",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:Category.__repr__",
      "target": "tests/model_forms/models.py:OptionalImageFile.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Category.__repr__",
      "target": "tests/model_forms/models.py:Price.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Category.__repr__",
      "target": "tests/model_forms/models.py:WriterProfile.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Category.__repr__",
      "target": "tests/model_forms/models.py:Publication.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Category.__repr__",
      "target": "tests/model_forms/models.py:Inventory.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Category.__repr__",
      "target": "tests/model_forms/models.py:Post.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Category.__repr__",
      "target": "tests/model_forms/models.py:ExplicitPK.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Category.__repr__",
      "target": "tests/model_forms/models.py:Writer.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Category.__repr__",
      "target": "tests/model_forms/models.py:DateTimePost.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Category.__repr__",
      "target": "tests/model_forms/models.py:TextFile.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Category.__repr__",
      "target": "tests/model_forms/models.py:ImageFile.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Category.__repr__",
      "target": "tests/model_forms/models.py:Article.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Category.__repr__",
      "target": "tests/model_forms/models.py:Colour.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Category.__repr__",
      "target": "tests/model_forms/models.py:NoExtensionImageFile.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Category.__repr__",
      "target": "tests/model_forms/models.py:Product.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Category.__repr__",
      "target": "tests/model_forms/models.py:BigInt.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Category.__repr__",
      "target": "tests/model_forms/models.py:Category.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Writer",
      "target": "tests/model_forms/models.py:Writer.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:Writer",
      "target": "tests/model_forms/models.py:Writer.__str__",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:Article",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:Article",
      "target": "tests/model_forms/models.py:Article.__str__",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:Article.save",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:BetterWriter",
      "target": "tests/model_forms/models.py:Writer",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/models.py:Publication",
      "target": "tests/model_forms/models.py:Publication.__str__",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:WriterProfile",
      "target": "tests/model_forms/models.py:WriterProfile.__str__",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:TextFile",
      "target": "tests/model_forms/models.py:TextFile.__str__",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:CustomFileField",
      "target": "tests/model_forms/models.py:CustomFileField.save_form_data",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:ImageFile",
      "target": "tests/model_forms/models.py:ImageFile.custom_upload_path",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:ImageFile",
      "target": "tests/model_forms/models.py:ImageFile.__str__",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:OptionalImageFile",
      "target": "tests/model_forms/models.py:OptionalImageFile.custom_upload_path",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:OptionalImageFile",
      "target": "tests/model_forms/models.py:OptionalImageFile.__str__",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:NoExtensionImageFile",
      "target": "tests/model_forms/models.py:NoExtensionImageFile.upload_to",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:NoExtensionImageFile",
      "target": "tests/model_forms/models.py:NoExtensionImageFile.__str__",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:Product",
      "target": "tests/model_forms/models.py:Product.__str__",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:Price",
      "target": "tests/model_forms/models.py:Price.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:Price",
      "target": "tests/model_forms/models.py:Price.__str__",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:Triple",
      "target": "tests/model_forms/models.py:Triple.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:Inventory",
      "target": "tests/model_forms/models.py:Inventory.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:Inventory",
      "target": "tests/model_forms/models.py:Inventory.__str__",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:Inventory",
      "target": "tests/model_forms/models.py:Inventory.__repr__",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:Inventory.__repr__",
      "target": "tests/model_forms/models.py:OptionalImageFile.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Inventory.__repr__",
      "target": "tests/model_forms/models.py:Price.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Inventory.__repr__",
      "target": "tests/model_forms/models.py:WriterProfile.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Inventory.__repr__",
      "target": "tests/model_forms/models.py:Publication.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Inventory.__repr__",
      "target": "tests/model_forms/models.py:Inventory.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Inventory.__repr__",
      "target": "tests/model_forms/models.py:Post.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Inventory.__repr__",
      "target": "tests/model_forms/models.py:ExplicitPK.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Inventory.__repr__",
      "target": "tests/model_forms/models.py:Writer.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Inventory.__repr__",
      "target": "tests/model_forms/models.py:DateTimePost.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Inventory.__repr__",
      "target": "tests/model_forms/models.py:TextFile.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Inventory.__repr__",
      "target": "tests/model_forms/models.py:ImageFile.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Inventory.__repr__",
      "target": "tests/model_forms/models.py:Article.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Inventory.__repr__",
      "target": "tests/model_forms/models.py:Colour.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Inventory.__repr__",
      "target": "tests/model_forms/models.py:NoExtensionImageFile.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Inventory.__repr__",
      "target": "tests/model_forms/models.py:Product.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Inventory.__repr__",
      "target": "tests/model_forms/models.py:BigInt.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Inventory.__repr__",
      "target": "tests/model_forms/models.py:Category.__str__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:Book",
      "target": "tests/model_forms/models.py:Book.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:BookXtra",
      "target": "tests/model_forms/models.py:BookXtra.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:DerivedBook",
      "target": "tests/model_forms/models.py:BookXtra",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/models.py:DerivedBook",
      "target": "tests/model_forms/models.py:Book",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/models.py:ExplicitPK",
      "target": "tests/model_forms/models.py:ExplicitPK.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:ExplicitPK",
      "target": "tests/model_forms/models.py:ExplicitPK.__str__",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:Post",
      "target": "tests/model_forms/models.py:Post.__str__",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:DateTimePost",
      "target": "tests/model_forms/models.py:DateTimePost.__str__",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:DerivedPost",
      "target": "tests/model_forms/models.py:Post",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/models.py:BigInt",
      "target": "tests/model_forms/models.py:BigInt.__str__",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:MarkupField",
      "target": "tests/model_forms/models.py:MarkupField.formfield",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:Colour",
      "target": "tests/model_forms/models.py:Colour.__iter__",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:Colour",
      "target": "tests/model_forms/models.py:Colour.__str__",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:CustomErrorMessage",
      "target": "tests/model_forms/models.py:CustomErrorMessage.clean",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:Photo",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:Photo.save",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:StrictAssignmentFieldSpecific",
      "target": "tests/model_forms/models.py:StrictAssignmentFieldSpecific.__setattr__",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:StrictAssignmentFieldSpecific.__setattr__",
      "target": "tests/model_forms/models.py:StrictAssignmentAll.__setattr__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/models.py:StrictAssignmentAll",
      "target": "tests/model_forms/models.py:StrictAssignmentAll.__setattr__",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/models.py:StrictAssignmentAll.__setattr__",
      "target": "tests/model_forms/models.py:StrictAssignmentFieldSpecific.__setattr__",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:ImageFileForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:OptionalImageFileForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:NoExtensionImageFileForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:ProductForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:PriceForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:BookForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:DerivedBookForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:ExplicitPKForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:PostForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:DerivedPostForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:CustomWriterForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:BaseCategoryForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:ArticleForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:RoykoForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:ArticleStatusForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:InventoryForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:SelectInventoryForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:CustomFieldForExclusionForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:TextFileForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:BigIntForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:ModelFormWithMedia",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:CustomErrorMessageForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:FieldOverridesByFormMetaForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:TestFieldOverridesByFormMeta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:IncompleteCategoryFormWithFields",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:IncompleteCategoryFormWithExclude",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:ValidationTest",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:UniqueTest",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:ModelOneToOneFieldTests",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:ModelOtherFieldTests",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:OtherModelFormTests",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:ModelFormCustomErrorTests",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:CustomCleanTests",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:ModelFormInheritanceTests",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:StumpJokeForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:CustomFieldWithQuerysetButNoLimitChoicesTo",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:StumpJokeWithCustomFieldForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:LimitChoicesToTests",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:FormFieldCallbackTests",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:LocalizedModelFormTest",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:CustomMetaclass",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:CustomMetaclassForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:CustomMetaclassTestCase",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:StrictAssignmentTests",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/tests.py:ModelToDictTests",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:Article",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:ArticleStatus",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:Author",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:Author1",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:Award",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:BetterWriter",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:BigInt",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:Book",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:Category",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:Character",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:Colour",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:ColourfulItem",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:CustomErrorMessage",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:CustomFF",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:CustomFieldForExclusionModel",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:DateTimePost",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:DerivedBook",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:DerivedPost",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:Document",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:ExplicitPK",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:FilePathModel",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:FlexibleDatePost",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:Homepage",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:ImprovedArticle",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:ImprovedArticleWithParentLink",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:Inventory",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:NullableUniqueCharFieldModel",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:Person",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:Photo",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:Post",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:Price",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:Product",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:Publication",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:PublicationDefaults",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:StrictAssignmentAll",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:StrictAssignmentFieldSpecific",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:Student",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:StumpJoke",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:TextFile",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:Triple",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:Writer",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:WriterProfile",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:ImageFile",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:OptionalImageFile",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py",
      "target": "tests/model_forms/models.py:NoExtensionImageFile",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/tests.py:ImageFileForm",
      "target": "tests/model_forms/tests.py:ImageFileForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:OptionalImageFileForm",
      "target": "tests/model_forms/tests.py:OptionalImageFileForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:NoExtensionImageFileForm",
      "target": "tests/model_forms/tests.py:NoExtensionImageFileForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ProductForm",
      "target": "tests/model_forms/tests.py:ProductForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:PriceForm",
      "target": "tests/model_forms/tests.py:PriceForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:BookForm",
      "target": "tests/model_forms/tests.py:BookForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:DerivedBookForm",
      "target": "tests/model_forms/tests.py:DerivedBookForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ExplicitPKForm",
      "target": "tests/model_forms/tests.py:ExplicitPKForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:PostForm",
      "target": "tests/model_forms/tests.py:PostForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:DerivedPostForm",
      "target": "tests/model_forms/tests.py:DerivedPostForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:CustomWriterForm",
      "target": "tests/model_forms/tests.py:CustomWriterForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:BaseCategoryForm",
      "target": "tests/model_forms/tests.py:BaseCategoryForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ArticleForm",
      "target": "tests/model_forms/tests.py:ArticleForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:RoykoForm",
      "target": "tests/model_forms/tests.py:RoykoForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ArticleStatusForm",
      "target": "tests/model_forms/tests.py:ArticleStatusForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:InventoryForm",
      "target": "tests/model_forms/tests.py:InventoryForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:CustomFieldForExclusionForm",
      "target": "tests/model_forms/tests.py:CustomFieldForExclusionForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:TextFileForm",
      "target": "tests/model_forms/tests.py:TextFileForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:BigIntForm",
      "target": "tests/model_forms/tests.py:BigIntForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormWithMedia",
      "target": "tests/model_forms/tests.py:ModelFormWithMedia.Media",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormWithMedia",
      "target": "tests/model_forms/tests.py:ModelFormWithMedia.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:CustomErrorMessageForm",
      "target": "tests/model_forms/tests.py:CustomErrorMessageForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_base_form",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_no_model_class",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_empty_fields_to_fields_for_model",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_empty_fields_on_modelform",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_empty_fields_to_construct_instance",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_blank_with_null_foreign_key_field",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_blank_false_with_null_true_foreign_key_field",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_save_blank_false_with_required_false",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_save_blank_null_unique_charfield_saves_null",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_missing_fields_attribute",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_extra_fields",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_extra_field_model_form",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_extra_declared_field_model_form",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_extra_field_modelform_factory",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_replace_field",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_replace_field_variant_2",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_replace_field_variant_3",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_override_field",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_limit_nonexistent_field",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_limit_fields_with_string",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_fields",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_nonexistent_field",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_fields_with_string",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_and_validation",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_confused_form",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_mixmodel_form",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_article_form",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_bad_form",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_invalid_meta_model",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_subcategory_form",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_orderfields_form",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_orderfields2_form",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_populated_on_optional_field",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_optional_checkbox_input",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_checkboxselectmultiple",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_selectmultiple",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_prefixed_form_with_default_field",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_renderer_kwarg",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_splitdatetime_field",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_filefield",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_selectdatewidget",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_no_model_class",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_no_model_class.NoModelModelForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_no_model_class",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_no_model_class.NoModelModelForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_empty_fields_on_modelform",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_empty_fields_on_modelform.EmptyPersonForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_empty_fields_on_modelform",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_empty_fields_on_modelform.EmptyPersonForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_empty_fields_on_modelform.EmptyPersonForm",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_empty_fields_on_modelform.EmptyPersonForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_empty_fields_to_construct_instance",
      "target": "tests/model_forms/models.py:Person",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_blank_with_null_foreign_key_field",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_blank_with_null_foreign_key_field.FormForTestingIsValid",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_blank_with_null_foreign_key_field",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_blank_with_null_foreign_key_field.FormForTestingIsValid",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_blank_with_null_foreign_key_field",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_blank_with_null_foreign_key_field",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_blank_with_null_foreign_key_field.FormForTestingIsValid",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_blank_with_null_foreign_key_field.FormForTestingIsValid.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_blank_false_with_null_true_foreign_key_field",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_blank_false_with_null_true_foreign_key_field.AwardForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_blank_false_with_null_true_foreign_key_field",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_blank_false_with_null_true_foreign_key_field.AwardForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_blank_false_with_null_true_foreign_key_field",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_blank_false_with_null_true_foreign_key_field",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_blank_false_with_null_true_foreign_key_field.AwardForm",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_blank_false_with_null_true_foreign_key_field.AwardForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_save_blank_false_with_required_false",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_save_blank_false_with_required_false",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_save_blank_false_with_required_false",
      "target": "tests/model_forms/tests.py:CustomWriterForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_save_blank_null_unique_charfield_saves_null",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_save_blank_null_unique_charfield_saves_null",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_missing_fields_attribute",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_missing_fields_attribute.MissingFieldsForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_missing_fields_attribute.MissingFieldsForm",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_missing_fields_attribute.MissingFieldsForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_extra_fields",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_extra_fields.ExtraFields",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_extra_fields.ExtraFields",
      "target": "tests/model_forms/tests.py:BaseCategoryForm",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_extra_field_model_form",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_extra_field_model_form.ExtraPersonForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_extra_field_model_form.ExtraPersonForm",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_extra_field_model_form.ExtraPersonForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_extra_declared_field_model_form",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_extra_declared_field_model_form.ExtraPersonForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_extra_declared_field_model_form.ExtraPersonForm",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_extra_declared_field_model_form.ExtraPersonForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_replace_field",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_replace_field.ReplaceField",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_replace_field.ReplaceField",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_replace_field.ReplaceField.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_replace_field_variant_2",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_replace_field_variant_2.ReplaceField",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_replace_field_variant_2.ReplaceField",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_replace_field_variant_2.ReplaceField.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_replace_field_variant_3",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_replace_field_variant_3.ReplaceField",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_replace_field_variant_3.ReplaceField",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_replace_field_variant_3.ReplaceField.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_override_field",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_override_field.WriterForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_override_field",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_override_field.WriterForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_override_field.WriterForm",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_override_field.WriterForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_limit_nonexistent_field",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_limit_nonexistent_field.InvalidCategoryForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_limit_nonexistent_field.InvalidCategoryForm",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_limit_nonexistent_field.InvalidCategoryForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_limit_fields_with_string",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_limit_fields_with_string.CategoryForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_limit_fields_with_string.CategoryForm",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_limit_fields_with_string.CategoryForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_fields",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_fields.ExcludeFields",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_fields.ExcludeFields",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_fields.ExcludeFields.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_nonexistent_field",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_nonexistent_field.ExcludeFields",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_nonexistent_field.ExcludeFields",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_nonexistent_field.ExcludeFields.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_fields_with_string",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_fields_with_string.CategoryForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_fields_with_string.CategoryForm",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_fields_with_string.CategoryForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_and_validation",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_and_validation.PriceFormWithoutQuantity",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_and_validation",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_and_validation.PriceFormWithoutQuantity",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_and_validation",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_and_validation.PriceFormWithoutQuantity",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_and_validation",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_and_validation",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_and_validation.PriceFormWithoutQuantity",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_and_validation.PriceFormWithoutQuantity.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_and_validation.PriceFormWithoutQuantity",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_exclude_and_validation.PriceFormWithoutQuantity.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_confused_form",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_confused_form.ConfusedForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_confused_form.ConfusedForm",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_confused_form.ConfusedForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_mixmodel_form",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_mixmodel_form.MixModelForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_mixmodel_form.MixModelForm",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_mixmodel_form.MixModelForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_mixmodel_form.MixModelForm",
      "target": "tests/model_forms/tests.py:BaseCategoryForm",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_bad_form",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_bad_form.BadForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_bad_form.BadForm",
      "target": "tests/model_forms/tests.py:BaseCategoryForm",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_bad_form.BadForm",
      "target": "tests/model_forms/tests.py:ArticleForm",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_invalid_meta_model",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_invalid_meta_model.InvalidModelForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_invalid_meta_model",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_invalid_meta_model.InvalidModelForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_invalid_meta_model.InvalidModelForm",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_invalid_meta_model.InvalidModelForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subcategory_form",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_subcategory_form.SubCategoryForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subcategory_form.SubCategoryForm",
      "target": "tests/model_forms/tests.py:BaseCategoryForm",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SomeCategoryForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SomeCategoryForm",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SomeCategoryForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SomeCategoryForm",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/tests.py:BaseCategoryForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/tests.py:DerivedPostForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/tests.py:PostForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/models.py:Price.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/tests.py:NoExtensionImageFileForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/tests.py:CustomFieldForExclusionForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SomeCategoryForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/models.py:BookXtra.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/tests.py:ImageFileForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/models.py:Triple.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/tests.py:RoykoForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/tests.py:ArticleStatusForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/models.py:ExplicitPK.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/tests.py:OptionalImageFileForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/tests.py:ProductForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/tests.py:ModelFormWithMedia.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/tests.py:CustomWriterForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/models.py:Inventory.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/tests.py:FieldOverridesByFormMetaForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/tests.py:DerivedBookForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/tests.py:StumpJokeWithCustomFieldForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/models.py:Writer.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/tests.py:TextFileForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/tests.py:InventoryForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/tests.py:StumpJokeForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/tests.py:BookForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/tests.py:CustomErrorMessageForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/tests.py:IncompleteCategoryFormWithExclude.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/tests.py:ExplicitPKForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/tests.py:PriceForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/tests.py:ArticleForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/tests.py:IncompleteCategoryFormWithFields.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/models.py:Book.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_subclassmeta_form.SubclassMeta.Meta",
      "target": "tests/model_forms/tests.py:BigIntForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_orderfields_form",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_orderfields_form.OrderFields",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_orderfields_form",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_orderfields_form.OrderFields",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_orderfields_form.OrderFields",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_orderfields_form.OrderFields.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_orderfields2_form",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_orderfields2_form.OrderFields2",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_orderfields2_form.OrderFields2",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_orderfields2_form.OrderFields2.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_populated_on_optional_field",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_populated_on_optional_field.PubForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_populated_on_optional_field",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_populated_on_optional_field.PubForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_populated_on_optional_field",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_populated_on_optional_field",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_populated_on_optional_field.PubForm",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_populated_on_optional_field.PubForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_optional_checkbox_input",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_optional_checkbox_input.PubForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_optional_checkbox_input",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_optional_checkbox_input.PubForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_optional_checkbox_input",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_optional_checkbox_input",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_optional_checkbox_input.PubForm",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_optional_checkbox_input.PubForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_checkboxselectmultiple",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_checkboxselectmultiple.PubForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_checkboxselectmultiple",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_checkboxselectmultiple.PubForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_checkboxselectmultiple",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_checkboxselectmultiple",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_checkboxselectmultiple.PubForm",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_checkboxselectmultiple.PubForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_selectmultiple",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_selectmultiple.PubForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_selectmultiple",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_selectmultiple.PubForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_selectmultiple",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_selectmultiple",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_selectmultiple.PubForm",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_not_populated_on_selectmultiple.PubForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_prefixed_form_with_default_field",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_prefixed_form_with_default_field.PubForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_prefixed_form_with_default_field",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_prefixed_form_with_default_field.PubForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_prefixed_form_with_default_field",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_prefixed_form_with_default_field",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_prefixed_form_with_default_field.PubForm",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_prefixed_form_with_default_field.PubForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_renderer_kwarg",
      "target": "tests/model_forms/tests.py:ProductForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_splitdatetime_field",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_splitdatetime_field.PubForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_splitdatetime_field",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_splitdatetime_field.PubForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_splitdatetime_field",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_splitdatetime_field",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_splitdatetime_field.PubForm",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_splitdatetime_field.PubForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_filefield",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_filefield.PubForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_filefield",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_filefield.PubForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_filefield",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_filefield",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_filefield.PubForm",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_filefield.PubForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_selectdatewidget",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_selectdatewidget.PubForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_selectdatewidget",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_selectdatewidget.PubForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_selectdatewidget",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_selectdatewidget",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_selectdatewidget.PubForm",
      "target": "tests/model_forms/tests.py:ModelFormBaseTest.test_default_selectdatewidget.PubForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FieldOverridesByFormMetaForm",
      "target": "tests/model_forms/tests.py:FieldOverridesByFormMetaForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:TestFieldOverridesByFormMeta",
      "target": "tests/model_forms/tests.py:TestFieldOverridesByFormMeta.test_widget_overrides",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:TestFieldOverridesByFormMeta",
      "target": "tests/model_forms/tests.py:TestFieldOverridesByFormMeta.test_label_overrides",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:TestFieldOverridesByFormMeta",
      "target": "tests/model_forms/tests.py:TestFieldOverridesByFormMeta.test_help_text_overrides",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:TestFieldOverridesByFormMeta",
      "target": "tests/model_forms/tests.py:TestFieldOverridesByFormMeta.test_error_messages_overrides",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:TestFieldOverridesByFormMeta",
      "target": "tests/model_forms/tests.py:TestFieldOverridesByFormMeta.test_field_type_overrides",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:TestFieldOverridesByFormMeta.test_widget_overrides",
      "target": "tests/model_forms/tests.py:FieldOverridesByFormMetaForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:TestFieldOverridesByFormMeta.test_label_overrides",
      "target": "tests/model_forms/tests.py:FieldOverridesByFormMetaForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:TestFieldOverridesByFormMeta.test_help_text_overrides",
      "target": "tests/model_forms/tests.py:FieldOverridesByFormMetaForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:TestFieldOverridesByFormMeta.test_error_messages_overrides",
      "target": "tests/model_forms/tests.py:FieldOverridesByFormMetaForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:TestFieldOverridesByFormMeta.test_field_type_overrides",
      "target": "tests/model_forms/tests.py:FieldOverridesByFormMetaForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:IncompleteCategoryFormWithFields",
      "target": "tests/model_forms/tests.py:IncompleteCategoryFormWithFields.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:IncompleteCategoryFormWithExclude",
      "target": "tests/model_forms/tests.py:IncompleteCategoryFormWithExclude.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ValidationTest",
      "target": "tests/model_forms/tests.py:ValidationTest.test_validates_with_replaced_field_not_specified",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ValidationTest",
      "target": "tests/model_forms/tests.py:ValidationTest.test_validates_with_replaced_field_excluded",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ValidationTest",
      "target": "tests/model_forms/tests.py:ValidationTest.test_notrequired_overrides_notblank",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ValidationTest.test_validates_with_replaced_field_not_specified",
      "target": "tests/model_forms/tests.py:IncompleteCategoryFormWithFields",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ValidationTest.test_validates_with_replaced_field_excluded",
      "target": "tests/model_forms/tests.py:IncompleteCategoryFormWithExclude",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ValidationTest.test_notrequired_overrides_notblank",
      "target": "tests/model_forms/tests.py:CustomWriterForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest",
      "target": "tests/model_forms/tests.py:UniqueTest.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest",
      "target": "tests/model_forms/tests.py:UniqueTest.test_simple_unique",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest",
      "target": "tests/model_forms/tests.py:UniqueTest.test_unique_together",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest",
      "target": "tests/model_forms/tests.py:UniqueTest.test_unique_together_exclusion",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest",
      "target": "tests/model_forms/tests.py:UniqueTest.test_multiple_field_unique_together",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest",
      "target": "tests/model_forms/tests.py:UniqueTest.test_unique_null",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest",
      "target": "tests/model_forms/tests.py:UniqueTest.test_inherited_unique",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest",
      "target": "tests/model_forms/tests.py:UniqueTest.test_inherited_unique_together",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest",
      "target": "tests/model_forms/tests.py:UniqueTest.test_abstract_inherited_unique",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest",
      "target": "tests/model_forms/tests.py:UniqueTest.test_abstract_inherited_unique_together",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest",
      "target": "tests/model_forms/tests.py:UniqueTest.test_explicitpk_unspecified",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest",
      "target": "tests/model_forms/tests.py:UniqueTest.test_explicitpk_unique",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest",
      "target": "tests/model_forms/tests.py:UniqueTest.test_unique_for_date",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest",
      "target": "tests/model_forms/tests.py:UniqueTest.test_unique_for_date_in_exclude",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest",
      "target": "tests/model_forms/tests.py:UniqueTest.test_inherited_unique_for_date",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest",
      "target": "tests/model_forms/tests.py:UniqueTest.test_unique_for_date_with_nullable_date",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest",
      "target": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest",
      "target": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest",
      "target": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_simple_unique",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_simple_unique",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_simple_unique",
      "target": "tests/model_forms/tests.py:ProductForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_unique_together",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_unique_together",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_unique_together",
      "target": "tests/model_forms/tests.py:PriceForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_unique_together_exclusion",
      "target": "tests/model_forms/tests.py:UniqueTest.test_unique_together_exclusion.BookForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_unique_together_exclusion",
      "target": "tests/model_forms/tests.py:UniqueTest.test_unique_together_exclusion.BookForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_unique_together_exclusion",
      "target": "tests/model_forms/tests.py:BookForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_unique_together_exclusion.BookForm",
      "target": "tests/model_forms/tests.py:UniqueTest.test_unique_together_exclusion.BookForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_multiple_field_unique_together",
      "target": "tests/model_forms/tests.py:UniqueTest.test_multiple_field_unique_together.TripleForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_multiple_field_unique_together",
      "target": "tests/model_forms/tests.py:UniqueTest.test_multiple_field_unique_together.TripleForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_multiple_field_unique_together.TripleForm",
      "target": "tests/model_forms/tests.py:UniqueTest.test_multiple_field_unique_together.TripleForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_unique_null",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_unique_null",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_unique_null",
      "target": "tests/model_forms/tests.py:BookForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_inherited_unique",
      "target": "tests/model_forms/tests.py:DerivedBookForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_inherited_unique_together",
      "target": "tests/model_forms/tests.py:DerivedBookForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_inherited_unique_together",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_inherited_unique_together",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_inherited_unique_together",
      "target": "tests/model_forms/tests.py:BookForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_abstract_inherited_unique",
      "target": "tests/model_forms/tests.py:DerivedBookForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_abstract_inherited_unique_together",
      "target": "tests/model_forms/tests.py:DerivedBookForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_explicitpk_unspecified",
      "target": "tests/model_forms/tests.py:ExplicitPKForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_explicitpk_unique",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_explicitpk_unique",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_explicitpk_unique",
      "target": "tests/model_forms/tests.py:ExplicitPKForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_unique_for_date",
      "target": "tests/model_forms/tests.py:PostForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_unique_for_date_in_exclude",
      "target": "tests/model_forms/tests.py:UniqueTest.test_unique_for_date_in_exclude.DateTimePostForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_unique_for_date_in_exclude",
      "target": "tests/model_forms/tests.py:UniqueTest.test_unique_for_date_in_exclude.DateTimePostForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_unique_for_date_in_exclude.DateTimePostForm",
      "target": "tests/model_forms/tests.py:UniqueTest.test_unique_for_date_in_exclude.DateTimePostForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_inherited_unique_for_date",
      "target": "tests/model_forms/tests.py:DerivedPostForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_unique_for_date_with_nullable_date",
      "target": "tests/model_forms/tests.py:UniqueTest.test_unique_for_date_with_nullable_date.FlexDatePostForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_unique_for_date_with_nullable_date",
      "target": "tests/model_forms/tests.py:UniqueTest.test_unique_for_date_with_nullable_date.FlexDatePostForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_unique_for_date_with_nullable_date.FlexDatePostForm",
      "target": "tests/model_forms/tests.py:UniqueTest.test_unique_for_date_with_nullable_date.FlexDatePostForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message",
      "target": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message",
      "target": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm",
      "target": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm",
      "target": "tests/model_forms/tests.py:ProductForm",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/tests.py:BaseCategoryForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/tests.py:DerivedPostForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/tests.py:PostForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/models.py:Price.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/tests.py:NoExtensionImageFileForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/tests.py:CustomFieldForExclusionForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/models.py:BookXtra.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/tests.py:ImageFileForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/models.py:Triple.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/tests.py:RoykoForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/tests.py:ArticleStatusForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/models.py:ExplicitPK.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/tests.py:OptionalImageFileForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/tests.py:ProductForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/tests.py:ModelFormWithMedia.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/tests.py:CustomWriterForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/models.py:Inventory.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/tests.py:FieldOverridesByFormMetaForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/tests.py:DerivedBookForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/tests.py:StumpJokeWithCustomFieldForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/models.py:Writer.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/tests.py:TextFileForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/tests.py:InventoryForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/tests.py:StumpJokeForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/tests.py:BookForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/tests.py:CustomErrorMessageForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/tests.py:IncompleteCategoryFormWithExclude.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/tests.py:ExplicitPKForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/tests.py:PriceForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/tests.py:ArticleForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/tests.py:IncompleteCategoryFormWithFields.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/models.py:Book.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_message.CustomProductForm.Meta",
      "target": "tests/model_forms/tests.py:BigIntForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message",
      "target": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message",
      "target": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm",
      "target": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm",
      "target": "tests/model_forms/tests.py:PriceForm",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/tests.py:BaseCategoryForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/tests.py:DerivedPostForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/tests.py:PostForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/models.py:Price.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/tests.py:NoExtensionImageFileForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/tests.py:CustomFieldForExclusionForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/models.py:BookXtra.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/tests.py:ImageFileForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/models.py:Triple.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/tests.py:RoykoForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/tests.py:ArticleStatusForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/models.py:ExplicitPK.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/tests.py:OptionalImageFileForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/tests.py:ProductForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/tests.py:ModelFormWithMedia.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/tests.py:CustomWriterForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/models.py:Inventory.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/tests.py:FieldOverridesByFormMetaForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/tests.py:DerivedBookForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/tests.py:StumpJokeWithCustomFieldForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/models.py:Writer.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/tests.py:TextFileForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/tests.py:InventoryForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/tests.py:StumpJokeForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/tests.py:BookForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/tests.py:CustomErrorMessageForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/tests.py:IncompleteCategoryFormWithExclude.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/tests.py:ExplicitPKForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/tests.py:PriceForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/tests.py:ArticleForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/tests.py:IncompleteCategoryFormWithFields.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/models.py:Book.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_together_message.CustomPriceForm.Meta",
      "target": "tests/model_forms/tests.py:BigIntForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message",
      "target": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message",
      "target": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm",
      "target": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm",
      "target": "tests/model_forms/tests.py:PostForm",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/tests.py:BaseCategoryForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/tests.py:DerivedPostForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/tests.py:PostForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/models.py:Price.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/tests.py:NoExtensionImageFileForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/tests.py:CustomFieldForExclusionForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/models.py:BookXtra.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/tests.py:ImageFileForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/models.py:Triple.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/tests.py:RoykoForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/tests.py:ArticleStatusForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/models.py:ExplicitPK.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/tests.py:OptionalImageFileForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/tests.py:ProductForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/tests.py:ModelFormWithMedia.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/tests.py:CustomWriterForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/models.py:Inventory.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/tests.py:FieldOverridesByFormMetaForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/tests.py:DerivedBookForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/tests.py:StumpJokeWithCustomFieldForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/models.py:Writer.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/tests.py:TextFileForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/tests.py:InventoryForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/tests.py:StumpJokeForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/tests.py:BookForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/tests.py:CustomErrorMessageForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/tests.py:IncompleteCategoryFormWithExclude.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/tests.py:ExplicitPKForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/tests.py:PriceForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/tests.py:ArticleForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/tests.py:IncompleteCategoryFormWithFields.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/models.py:Book.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:UniqueTest.test_override_unique_for_date_message.CustomPostForm.Meta",
      "target": "tests/model_forms/tests.py:BigIntForm.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.create_basic_data",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.test_base_form",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.test_auto_id",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.test_initial_values",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.test_m2m_initial_callable",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.test_basic_creation",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.test_save_commit_false",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.test_save_with_data_errors",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.test_multi_fields",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.test_subset_fields",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.test_m2m_editing",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.test_custom_form_fields",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.test_runtime_choicefield_populated",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.test_recleaning_model_form_instance",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_base_form",
      "target": "tests/model_forms/tests.py:BaseCategoryForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_auto_id",
      "target": "tests/model_forms/tests.py:BaseCategoryForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_initial_values",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_initial_values",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_initial_values",
      "target": "tests/model_forms/tests.py:RoykoForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_initial_values",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.create_basic_data",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_initial_values",
      "target": "tests/model_forms/tests.py:ArticleForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_m2m_initial_callable",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.test_m2m_initial_callable.formfield_for_dbfield",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_m2m_initial_callable",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.create_basic_data",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_m2m_initial_callable.formfield_for_dbfield",
      "target": "tests/model_forms/models.py:MarkupField.formfield",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_basic_creation",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_basic_creation",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_basic_creation",
      "target": "tests/model_forms/tests.py:BaseCategoryForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_save_commit_false",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_save_commit_false",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_save_commit_false",
      "target": "tests/model_forms/tests.py:BaseCategoryForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_save_with_data_errors",
      "target": "tests/model_forms/tests.py:BaseCategoryForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_save_with_data_errors",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_save_with_data_errors",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_multi_fields",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.create_basic_data",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_multi_fields",
      "target": "tests/model_forms/tests.py:ArticleForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_subset_fields",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.test_subset_fields.PartialArticleForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_subset_fields",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.test_subset_fields.PartialArticleForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_subset_fields",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.test_subset_fields.PartialArticleFormWithSlug",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_subset_fields",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.test_subset_fields.PartialArticleFormWithSlug",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_subset_fields",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_subset_fields",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_subset_fields.PartialArticleForm",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.test_subset_fields.PartialArticleForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_subset_fields.PartialArticleFormWithSlug",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.test_subset_fields.PartialArticleFormWithSlug.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_m2m_editing",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_m2m_editing",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_m2m_editing",
      "target": "tests/model_forms/tests.py:ArticleForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_m2m_editing",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.create_basic_data",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_custom_form_fields",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.test_custom_form_fields.ShortCategory",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_custom_form_fields",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.test_custom_form_fields.ShortCategory",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_custom_form_fields",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_custom_form_fields",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_custom_form_fields.ShortCategory",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.test_custom_form_fields.ShortCategory.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_runtime_choicefield_populated",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.create_basic_data",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_runtime_choicefield_populated",
      "target": "tests/model_forms/tests.py:ArticleForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_recleaning_model_form_instance",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.test_recleaning_model_form_instance.AuthorForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_recleaning_model_form_instance",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.test_recleaning_model_form_instance.AuthorForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_recleaning_model_form_instance",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_recleaning_model_form_instance",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormBasicTests.test_recleaning_model_form_instance.AuthorForm",
      "target": "tests/model_forms/tests.py:ModelFormBasicTests.test_recleaning_model_form_instance.AuthorForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests",
      "target": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests",
      "target": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_model_multiple_choice_field",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests",
      "target": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_model_multiple_choice_required_false",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests",
      "target": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_model_multiple_choice_number_of_queries",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests",
      "target": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_model_multiple_choice_run_validators",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests",
      "target": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_model_multiple_choice_show_hidden_initial",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests",
      "target": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_model_multiple_choice_field_22745",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests",
      "target": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_show_hidden_initial_changed_queries_efficiently",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests",
      "target": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_clean_does_deduplicate_values",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests",
      "target": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_to_field_name_with_initial_data",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_model_multiple_choice_field",
      "target": "tests/model_forms/models.py:CustomErrorMessage.clean",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_model_multiple_choice_required_false",
      "target": "tests/model_forms/models.py:CustomErrorMessage.clean",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_model_multiple_choice_run_validators",
      "target": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_model_multiple_choice_run_validators.my_validator",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_model_multiple_choice_run_validators",
      "target": "tests/model_forms/models.py:CustomErrorMessage.clean",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_model_multiple_choice_show_hidden_initial",
      "target": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_model_multiple_choice_show_hidden_initial.WriterForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_model_multiple_choice_show_hidden_initial",
      "target": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_model_multiple_choice_show_hidden_initial.WriterForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_model_multiple_choice_field_22745",
      "target": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_model_multiple_choice_field_22745.ModelMultipleChoiceForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_model_multiple_choice_field_22745",
      "target": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_model_multiple_choice_field_22745.ModelMultipleChoiceForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_show_hidden_initial_changed_queries_efficiently",
      "target": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_show_hidden_initial_changed_queries_efficiently.WriterForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_show_hidden_initial_changed_queries_efficiently",
      "target": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_show_hidden_initial_changed_queries_efficiently.WriterForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_clean_does_deduplicate_values",
      "target": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_clean_does_deduplicate_values.WriterForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_clean_does_deduplicate_values",
      "target": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_clean_does_deduplicate_values.WriterForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_clean_does_deduplicate_values",
      "target": "tests/model_forms/models.py:CustomErrorMessage.clean",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_to_field_name_with_initial_data",
      "target": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_to_field_name_with_initial_data.ArticleCategoriesForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_to_field_name_with_initial_data",
      "target": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_to_field_name_with_initial_data.ArticleCategoriesForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_to_field_name_with_initial_data.ArticleCategoriesForm",
      "target": "tests/model_forms/tests.py:ModelMultipleChoiceFieldTests.test_to_field_name_with_initial_data.ArticleCategoriesForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOneToOneFieldTests",
      "target": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_modelform_onetoonefield",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOneToOneFieldTests",
      "target": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_modelform_subclassed_model",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOneToOneFieldTests",
      "target": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_onetoonefield",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOneToOneFieldTests",
      "target": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_assignment_of_none",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOneToOneFieldTests",
      "target": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_assignment_of_none_null_false",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_modelform_onetoonefield",
      "target": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_modelform_onetoonefield.ImprovedArticleForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_modelform_onetoonefield",
      "target": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_modelform_onetoonefield.ImprovedArticleWithParentLinkForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_modelform_onetoonefield.ImprovedArticleForm",
      "target": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_modelform_onetoonefield.ImprovedArticleForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_modelform_onetoonefield.ImprovedArticleWithParentLinkForm",
      "target": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_modelform_onetoonefield.ImprovedArticleWithParentLinkForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_modelform_subclassed_model",
      "target": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_modelform_subclassed_model.BetterWriterForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_modelform_subclassed_model",
      "target": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_modelform_subclassed_model.BetterWriterForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_modelform_subclassed_model",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_modelform_subclassed_model",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_modelform_subclassed_model.BetterWriterForm",
      "target": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_modelform_subclassed_model.BetterWriterForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_onetoonefield",
      "target": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_onetoonefield.WriterProfileForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_onetoonefield",
      "target": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_onetoonefield.WriterProfileForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_onetoonefield",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_onetoonefield",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_onetoonefield.WriterProfileForm",
      "target": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_onetoonefield.WriterProfileForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_assignment_of_none",
      "target": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_assignment_of_none.AuthorForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_assignment_of_none",
      "target": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_assignment_of_none.AuthorForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_assignment_of_none",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_assignment_of_none",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_assignment_of_none.AuthorForm",
      "target": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_assignment_of_none.AuthorForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_assignment_of_none_null_false",
      "target": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_assignment_of_none_null_false.AuthorForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_assignment_of_none_null_false",
      "target": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_assignment_of_none_null_false.AuthorForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_assignment_of_none_null_false.AuthorForm",
      "target": "tests/model_forms/tests.py:ModelOneToOneFieldTests.test_assignment_of_none_null_false.AuthorForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_clean_false",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_clean_false_required",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_full_clear",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_clear_and_file_contradiction",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_render_empty_file_field",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_file_field_data",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_filefield_required_false",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_custom_file_field_save",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_file_field_multiple_save",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_file_path_field_blank",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_image_field",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_clean_false",
      "target": "tests/model_forms/models.py:CustomErrorMessage.clean",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_clean_false_required",
      "target": "tests/model_forms/models.py:CustomErrorMessage.clean",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_full_clear",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_full_clear.DocumentForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_full_clear",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_full_clear.DocumentForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_full_clear",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_full_clear",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_full_clear.DocumentForm",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_full_clear.DocumentForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_clear_and_file_contradiction",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_clear_and_file_contradiction.DocumentForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_clear_and_file_contradiction",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_clear_and_file_contradiction.DocumentForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_clear_and_file_contradiction",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_clear_and_file_contradiction",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_clear_and_file_contradiction.DocumentForm",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_clear_and_file_contradiction.DocumentForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_render_empty_file_field",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_render_empty_file_field.DocumentForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_render_empty_file_field",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_render_empty_file_field.DocumentForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_render_empty_file_field.DocumentForm",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_render_empty_file_field.DocumentForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_file_field_data",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_file_field_data",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_file_field_data",
      "target": "tests/model_forms/tests.py:TextFileForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_filefield_required_false",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_filefield_required_false",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_filefield_required_false",
      "target": "tests/model_forms/tests.py:TextFileForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_custom_file_field_save",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_custom_file_field_save.CFFForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_custom_file_field_save",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_custom_file_field_save.CFFForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_custom_file_field_save",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_custom_file_field_save",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_custom_file_field_save.CFFForm",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_custom_file_field_save.CFFForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_file_field_multiple_save",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_file_field_multiple_save.PhotoForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_file_field_multiple_save",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_file_field_multiple_save.PhotoForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_file_field_multiple_save",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_file_field_multiple_save",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_file_field_multiple_save.PhotoForm",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_file_field_multiple_save.PhotoForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_file_path_field_blank",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_file_path_field_blank.FPForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_file_path_field_blank",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_file_path_field_blank.FPForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_file_path_field_blank.FPForm",
      "target": "tests/model_forms/tests.py:FileAndImageFieldTests.test_file_path_field_blank.FPForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_image_field",
      "target": "tests/model_forms/tests.py:ImageFileForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_image_field",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_image_field",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_image_field",
      "target": "tests/model_forms/tests.py:NoExtensionImageFileForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FileAndImageFieldTests.test_image_field",
      "target": "tests/model_forms/tests.py:OptionalImageFileForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOtherFieldTests",
      "target": "tests/model_forms/tests.py:ModelOtherFieldTests.test_big_integer_field",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOtherFieldTests",
      "target": "tests/model_forms/tests.py:ModelOtherFieldTests.test_url_on_modelform",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOtherFieldTests",
      "target": "tests/model_forms/tests.py:ModelOtherFieldTests.test_modelform_non_editable_field",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOtherFieldTests",
      "target": "tests/model_forms/tests.py:ModelOtherFieldTests.test_http_prefixing",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOtherFieldTests.test_big_integer_field",
      "target": "tests/model_forms/tests.py:BigIntForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOtherFieldTests.test_url_on_modelform",
      "target": "tests/model_forms/tests.py:ModelOtherFieldTests.test_url_on_modelform.HomepageForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOtherFieldTests.test_url_on_modelform",
      "target": "tests/model_forms/tests.py:ModelOtherFieldTests.test_url_on_modelform.HomepageForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOtherFieldTests.test_url_on_modelform.HomepageForm",
      "target": "tests/model_forms/tests.py:ModelOtherFieldTests.test_url_on_modelform.HomepageForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOtherFieldTests.test_modelform_non_editable_field",
      "target": "tests/model_forms/tests.py:ModelOtherFieldTests.test_modelform_non_editable_field.InvalidArticleForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOtherFieldTests.test_modelform_non_editable_field",
      "target": "tests/model_forms/tests.py:ArticleForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOtherFieldTests.test_modelform_non_editable_field.InvalidArticleForm",
      "target": "tests/model_forms/tests.py:ModelOtherFieldTests.test_modelform_non_editable_field.InvalidArticleForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOtherFieldTests.test_http_prefixing",
      "target": "tests/model_forms/tests.py:ModelOtherFieldTests.test_http_prefixing.HomepageForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOtherFieldTests.test_http_prefixing",
      "target": "tests/model_forms/tests.py:ModelOtherFieldTests.test_http_prefixing.HomepageForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelOtherFieldTests.test_http_prefixing.HomepageForm",
      "target": "tests/model_forms/tests.py:ModelOtherFieldTests.test_http_prefixing.HomepageForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests",
      "target": "tests/model_forms/tests.py:OtherModelFormTests.test_media_on_modelform",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests",
      "target": "tests/model_forms/tests.py:OtherModelFormTests.test_choices_type",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests",
      "target": "tests/model_forms/tests.py:OtherModelFormTests.test_prefetch_related_queryset",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests",
      "target": "tests/model_forms/tests.py:OtherModelFormTests.test_foreignkeys_which_use_to_field",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests",
      "target": "tests/model_forms/tests.py:OtherModelFormTests.test_model_field_that_returns_none_to_exclude_itself_with_explicit_fields",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests",
      "target": "tests/model_forms/tests.py:OtherModelFormTests.test_iterable_model_m2m",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests",
      "target": "tests/model_forms/tests.py:OtherModelFormTests.test_callable_field_default",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests.test_media_on_modelform",
      "target": "tests/model_forms/tests.py:ModelFormWithMedia",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests.test_choices_type",
      "target": "tests/model_forms/tests.py:ArticleForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests.test_choices_type",
      "target": "tests/model_forms/models.py:CustomErrorMessage.clean",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests.test_choices_type",
      "target": "tests/model_forms/tests.py:ArticleStatusForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests.test_prefetch_related_queryset",
      "target": "tests/model_forms/tests.py:OtherModelFormTests.test_prefetch_related_queryset.ColorModelChoiceField",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests.test_prefetch_related_queryset",
      "target": "tests/model_forms/tests.py:OtherModelFormTests.test_prefetch_related_queryset.ColorModelChoiceField",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests.test_prefetch_related_queryset.ColorModelChoiceField",
      "target": "tests/model_forms/tests.py:OtherModelFormTests.test_prefetch_related_queryset.ColorModelChoiceField.label_from_instance",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests.test_foreignkeys_which_use_to_field",
      "target": "tests/model_forms/tests.py:OtherModelFormTests.test_foreignkeys_which_use_to_field.CategoryForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests.test_foreignkeys_which_use_to_field",
      "target": "tests/model_forms/tests.py:OtherModelFormTests.test_foreignkeys_which_use_to_field.CategoryForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests.test_foreignkeys_which_use_to_field",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests.test_foreignkeys_which_use_to_field",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests.test_foreignkeys_which_use_to_field",
      "target": "tests/model_forms/tests.py:SelectInventoryForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests.test_foreignkeys_which_use_to_field",
      "target": "tests/model_forms/tests.py:InventoryForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests.test_foreignkeys_which_use_to_field",
      "target": "tests/model_forms/models.py:CustomErrorMessage.clean",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests.test_foreignkeys_which_use_to_field.CategoryForm",
      "target": "tests/model_forms/tests.py:OtherModelFormTests.test_foreignkeys_which_use_to_field.CategoryForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests.test_model_field_that_returns_none_to_exclude_itself_with_explicit_fields",
      "target": "tests/model_forms/tests.py:CustomFieldForExclusionForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests.test_iterable_model_m2m",
      "target": "tests/model_forms/tests.py:OtherModelFormTests.test_iterable_model_m2m.ColourfulItemForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests.test_iterable_model_m2m",
      "target": "tests/model_forms/tests.py:OtherModelFormTests.test_iterable_model_m2m.ColourfulItemForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests.test_iterable_model_m2m.ColourfulItemForm",
      "target": "tests/model_forms/tests.py:OtherModelFormTests.test_iterable_model_m2m.ColourfulItemForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests.test_callable_field_default",
      "target": "tests/model_forms/tests.py:OtherModelFormTests.test_callable_field_default.PublicationDefaultsForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests.test_callable_field_default",
      "target": "tests/model_forms/tests.py:OtherModelFormTests.test_callable_field_default.PublicationDefaultsForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:OtherModelFormTests.test_callable_field_default.PublicationDefaultsForm",
      "target": "tests/model_forms/tests.py:OtherModelFormTests.test_callable_field_default.PublicationDefaultsForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormCustomErrorTests",
      "target": "tests/model_forms/tests.py:ModelFormCustomErrorTests.test_custom_error_messages",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormCustomErrorTests",
      "target": "tests/model_forms/tests.py:ModelFormCustomErrorTests.test_model_clean_error_messages",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormCustomErrorTests.test_custom_error_messages",
      "target": "tests/model_forms/tests.py:CustomErrorMessageForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormCustomErrorTests.test_model_clean_error_messages",
      "target": "tests/model_forms/tests.py:CustomErrorMessageForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:CustomCleanTests",
      "target": "tests/model_forms/tests.py:CustomCleanTests.test_override_clean",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:CustomCleanTests",
      "target": "tests/model_forms/tests.py:CustomCleanTests.test_model_form_clean_applies_to_model",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:CustomCleanTests.test_override_clean",
      "target": "tests/model_forms/tests.py:CustomCleanTests.test_override_clean.TripleFormWithCleanOverride",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:CustomCleanTests.test_override_clean",
      "target": "tests/model_forms/tests.py:CustomCleanTests.test_override_clean.TripleFormWithCleanOverride",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:CustomCleanTests.test_override_clean.TripleFormWithCleanOverride",
      "target": "tests/model_forms/tests.py:CustomCleanTests.test_override_clean.TripleFormWithCleanOverride.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:CustomCleanTests.test_override_clean.TripleFormWithCleanOverride",
      "target": "tests/model_forms/tests.py:CustomCleanTests.test_override_clean.TripleFormWithCleanOverride.clean",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:CustomCleanTests.test_model_form_clean_applies_to_model",
      "target": "tests/model_forms/tests.py:CustomCleanTests.test_model_form_clean_applies_to_model.CategoryForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:CustomCleanTests.test_model_form_clean_applies_to_model",
      "target": "tests/model_forms/tests.py:CustomCleanTests.test_model_form_clean_applies_to_model.CategoryForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:CustomCleanTests.test_model_form_clean_applies_to_model",
      "target": "tests/model_forms/models.py:Article.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:CustomCleanTests.test_model_form_clean_applies_to_model",
      "target": "tests/model_forms/models.py:Photo.save",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:CustomCleanTests.test_model_form_clean_applies_to_model.CategoryForm",
      "target": "tests/model_forms/tests.py:CustomCleanTests.test_model_form_clean_applies_to_model.CategoryForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:CustomCleanTests.test_model_form_clean_applies_to_model.CategoryForm",
      "target": "tests/model_forms/tests.py:CustomCleanTests.test_model_form_clean_applies_to_model.CategoryForm.clean",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormInheritanceTests",
      "target": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_form_subclass_inheritance",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormInheritanceTests",
      "target": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormInheritanceTests",
      "target": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal_name_clashes",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_form_subclass_inheritance",
      "target": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_form_subclass_inheritance.Form",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_form_subclass_inheritance",
      "target": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_form_subclass_inheritance.ModelForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_form_subclass_inheritance",
      "target": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_form_subclass_inheritance.ModelForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_form_subclass_inheritance.ModelForm",
      "target": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_form_subclass_inheritance.ModelForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_form_subclass_inheritance.ModelForm",
      "target": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_form_subclass_inheritance.Form",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal",
      "target": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal.ModelForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal",
      "target": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal.ModelForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal",
      "target": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal.Mixin",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal",
      "target": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal.Form",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal",
      "target": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal.Form2",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal.ModelForm",
      "target": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal.ModelForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal.Form2",
      "target": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal.Form",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal_name_clashes",
      "target": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal_name_clashes.MyForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal_name_clashes",
      "target": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal_name_clashes.MyForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal_name_clashes",
      "target": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal_name_clashes.SubForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal_name_clashes",
      "target": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal_name_clashes.SubForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal_name_clashes.MyForm",
      "target": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal_name_clashes.MyForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal_name_clashes.SubForm",
      "target": "tests/model_forms/tests.py:ModelFormInheritanceTests.test_field_removal_name_clashes.MyForm",
      "type": "inherits"
    },
    {
      "source": "tests/model_forms/tests.py:StumpJokeForm",
      "target": "tests/model_forms/tests.py:StumpJokeForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:StumpJokeWithCustomFieldForm",
      "target": "tests/model_forms/tests.py:StumpJokeWithCustomFieldForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:LimitChoicesToTests",
      "target": "tests/model_forms/tests.py:LimitChoicesToTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:LimitChoicesToTests",
      "target": "tests/model_forms/tests.py:LimitChoicesToTests.test_limit_choices_to_callable_for_fk_rel",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:LimitChoicesToTests",
      "target": "tests/model_forms/tests.py:LimitChoicesToTests.test_limit_choices_to_callable_for_m2m_rel",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:LimitChoicesToTests",
      "target": "tests/model_forms/tests.py:LimitChoicesToTests.test_custom_field_with_queryset_but_no_limit_choices_to",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:LimitChoicesToTests",
      "target": "tests/model_forms/tests.py:LimitChoicesToTests.test_fields_for_model_applies_limit_choices_to",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:LimitChoicesToTests",
      "target": "tests/model_forms/tests.py:LimitChoicesToTests.test_callable_called_each_time_form_is_instantiated",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:LimitChoicesToTests.test_limit_choices_to_callable_for_fk_rel",
      "target": "tests/model_forms/tests.py:StumpJokeForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:LimitChoicesToTests.test_limit_choices_to_callable_for_m2m_rel",
      "target": "tests/model_forms/tests.py:StumpJokeForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:LimitChoicesToTests.test_custom_field_with_queryset_but_no_limit_choices_to",
      "target": "tests/model_forms/tests.py:StumpJokeWithCustomFieldForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:LimitChoicesToTests.test_callable_called_each_time_form_is_instantiated",
      "target": "tests/model_forms/tests.py:StumpJokeForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FormFieldCallbackTests",
      "target": "tests/model_forms/tests.py:FormFieldCallbackTests.test_baseform_with_widgets_in_meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FormFieldCallbackTests",
      "target": "tests/model_forms/tests.py:FormFieldCallbackTests.test_factory_with_widget_argument",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FormFieldCallbackTests",
      "target": "tests/model_forms/tests.py:FormFieldCallbackTests.test_modelform_factory_without_fields",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FormFieldCallbackTests",
      "target": "tests/model_forms/tests.py:FormFieldCallbackTests.test_modelform_factory_with_all_fields",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FormFieldCallbackTests",
      "target": "tests/model_forms/tests.py:FormFieldCallbackTests.test_custom_callback",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FormFieldCallbackTests",
      "target": "tests/model_forms/tests.py:FormFieldCallbackTests.test_bad_callback",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FormFieldCallbackTests",
      "target": "tests/model_forms/tests.py:FormFieldCallbackTests.test_inherit_after_custom_callback",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FormFieldCallbackTests.test_baseform_with_widgets_in_meta",
      "target": "tests/model_forms/tests.py:FormFieldCallbackTests.test_baseform_with_widgets_in_meta.BaseForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FormFieldCallbackTests.test_baseform_with_widgets_in_meta.BaseForm",
      "target": "tests/model_forms/tests.py:FormFieldCallbackTests.test_baseform_with_widgets_in_meta.BaseForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FormFieldCallbackTests.test_custom_callback",
      "target": "tests/model_forms/tests.py:FormFieldCallbackTests.test_custom_callback.callback",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FormFieldCallbackTests.test_custom_callback",
      "target": "tests/model_forms/tests.py:FormFieldCallbackTests.test_custom_callback.BaseForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FormFieldCallbackTests.test_custom_callback.callback",
      "target": "tests/model_forms/models.py:MarkupField.formfield",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FormFieldCallbackTests.test_custom_callback.BaseForm",
      "target": "tests/model_forms/tests.py:FormFieldCallbackTests.test_custom_callback.BaseForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FormFieldCallbackTests.test_inherit_after_custom_callback",
      "target": "tests/model_forms/tests.py:FormFieldCallbackTests.test_inherit_after_custom_callback.callback",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FormFieldCallbackTests.test_inherit_after_custom_callback",
      "target": "tests/model_forms/tests.py:FormFieldCallbackTests.test_inherit_after_custom_callback.BaseForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FormFieldCallbackTests.test_inherit_after_custom_callback",
      "target": "tests/model_forms/tests.py:FormFieldCallbackTests.test_inherit_after_custom_callback.InheritedForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:FormFieldCallbackTests.test_inherit_after_custom_callback.callback",
      "target": "tests/model_forms/models.py:MarkupField.formfield",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:FormFieldCallbackTests.test_inherit_after_custom_callback.BaseForm",
      "target": "tests/model_forms/tests.py:FormFieldCallbackTests.test_inherit_after_custom_callback.BaseForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:LocalizedModelFormTest",
      "target": "tests/model_forms/tests.py:LocalizedModelFormTest.test_model_form_applies_localize_to_some_fields",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:LocalizedModelFormTest",
      "target": "tests/model_forms/tests.py:LocalizedModelFormTest.test_model_form_applies_localize_to_all_fields",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:LocalizedModelFormTest",
      "target": "tests/model_forms/tests.py:LocalizedModelFormTest.test_model_form_refuses_arbitrary_string",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:LocalizedModelFormTest.test_model_form_applies_localize_to_some_fields",
      "target": "tests/model_forms/tests.py:LocalizedModelFormTest.test_model_form_applies_localize_to_some_fields.PartiallyLocalizedTripleForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:LocalizedModelFormTest.test_model_form_applies_localize_to_some_fields",
      "target": "tests/model_forms/tests.py:LocalizedModelFormTest.test_model_form_applies_localize_to_some_fields.PartiallyLocalizedTripleForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:LocalizedModelFormTest.test_model_form_applies_localize_to_some_fields.PartiallyLocalizedTripleForm",
      "target": "tests/model_forms/tests.py:LocalizedModelFormTest.test_model_form_applies_localize_to_some_fields.PartiallyLocalizedTripleForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:LocalizedModelFormTest.test_model_form_applies_localize_to_all_fields",
      "target": "tests/model_forms/tests.py:LocalizedModelFormTest.test_model_form_applies_localize_to_all_fields.FullyLocalizedTripleForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:LocalizedModelFormTest.test_model_form_applies_localize_to_all_fields",
      "target": "tests/model_forms/tests.py:LocalizedModelFormTest.test_model_form_applies_localize_to_all_fields.FullyLocalizedTripleForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/tests.py:LocalizedModelFormTest.test_model_form_applies_localize_to_all_fields.FullyLocalizedTripleForm",
      "target": "tests/model_forms/tests.py:LocalizedModelFormTest.test_model_form_applies_localize_to_all_fields.FullyLocalizedTripleForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:LocalizedModelFormTest.test_model_form_refuses_arbitrary_string",
      "target": "tests/model_forms/tests.py:LocalizedModelFormTest.test_model_form_refuses_arbitrary_string.BrokenLocalizedTripleForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:LocalizedModelFormTest.test_model_form_refuses_arbitrary_string.BrokenLocalizedTripleForm",
      "target": "tests/model_forms/tests.py:LocalizedModelFormTest.test_model_form_refuses_arbitrary_string.BrokenLocalizedTripleForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:CustomMetaclass",
      "target": "tests/model_forms/tests.py:CustomMetaclass.__new__",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:CustomMetaclassTestCase",
      "target": "tests/model_forms/tests.py:CustomMetaclassTestCase.test_modelform_factory_metaclass",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:StrictAssignmentTests",
      "target": "tests/model_forms/tests.py:StrictAssignmentTests.test_setattr_raises_validation_error_field_specific",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:StrictAssignmentTests",
      "target": "tests/model_forms/tests.py:StrictAssignmentTests.test_setattr_raises_validation_error_non_field",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/tests.py:ModelToDictTests",
      "target": "tests/model_forms/tests.py:ModelToDictTests.test_many_to_many",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_uuid.py",
      "target": "tests/model_forms/test_uuid.py:UUIDPKForm",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_uuid.py",
      "target": "tests/model_forms/test_uuid.py:ModelFormBaseTest",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_uuid.py",
      "target": "tests/model_forms/models.py:UUIDPK",
      "type": "imports"
    },
    {
      "source": "tests/model_forms/test_uuid.py:UUIDPKForm",
      "target": "tests/model_forms/test_uuid.py:UUIDPKForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_uuid.py:ModelFormBaseTest",
      "target": "tests/model_forms/test_uuid.py:ModelFormBaseTest.test_create_save_error",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_uuid.py:ModelFormBaseTest",
      "target": "tests/model_forms/test_uuid.py:ModelFormBaseTest.test_update_save_error",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_uuid.py:ModelFormBaseTest",
      "target": "tests/model_forms/test_uuid.py:ModelFormBaseTest.test_model_multiple_choice_field_uuid_pk",
      "type": "contains"
    },
    {
      "source": "tests/model_forms/test_uuid.py:ModelFormBaseTest.test_create_save_error",
      "target": "tests/model_forms/test_uuid.py:UUIDPKForm",
      "type": "invokes"
    },
    {
      "source": "tests/model_forms/test_uuid.py:ModelFormBaseTest.test_update_save_error",
      "target": "tests/model_forms/test_uuid.py:UUIDPKForm",
      "type": "invokes"
    },
    {
      "source": "tests/fixtures_regress",
      "target": "tests/fixtures_regress/models.py",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress",
      "target": "tests/fixtures_regress/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress",
      "target": "tests/fixtures_regress/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:Animal",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:Plant",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:Stuff",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:Absolute",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:Parent",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:Child",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:Channel",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:Article",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:SpecialArticle",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:CommonFeature",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:Feature",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:Widget",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:WidgetProxy",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:TestManager",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:Store",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:Person",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:Book",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:NKManager",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:NKChild",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:RefToNKChild",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:Circle1",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:Circle2",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:Circle3",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:Circle4",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:Circle5",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:Circle6",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:ExternalDependency",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:Thingy",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:M2MToSelf",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:BaseNKModel",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:M2MSimpleA",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:M2MSimpleB",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:M2MSimpleCircularA",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:M2MSimpleCircularB",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:M2MComplexA",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:M2MComplexB",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:M2MThroughAB",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:M2MComplexCircular1A",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:M2MComplexCircular1B",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:M2MComplexCircular1C",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:M2MCircular1ThroughAB",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:M2MCircular1ThroughBC",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:M2MCircular1ThroughCA",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:M2MComplexCircular2A",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:M2MComplexCircular2B",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py",
      "target": "tests/fixtures_regress/models.py:M2MCircular2ThroughAB",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:Animal",
      "target": "tests/fixtures_regress/models.py:Animal.__str__",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:Plant",
      "target": "tests/fixtures_regress/models.py:Plant.Meta",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:Stuff",
      "target": "tests/fixtures_regress/models.py:Stuff.__str__",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:Parent",
      "target": "tests/fixtures_regress/models.py:Parent.Meta",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:Child",
      "target": "tests/fixtures_regress/models.py:Parent",
      "type": "inherits"
    },
    {
      "source": "tests/fixtures_regress/models.py:Article",
      "target": "tests/fixtures_regress/models.py:Article.Meta",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:SpecialArticle",
      "target": "tests/fixtures_regress/models.py:Article",
      "type": "inherits"
    },
    {
      "source": "tests/fixtures_regress/models.py:CommonFeature",
      "target": "tests/fixtures_regress/models.py:CommonFeature.Meta",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:CommonFeature",
      "target": "tests/fixtures_regress/models.py:Article",
      "type": "inherits"
    },
    {
      "source": "tests/fixtures_regress/models.py:Feature",
      "target": "tests/fixtures_regress/models.py:CommonFeature",
      "type": "inherits"
    },
    {
      "source": "tests/fixtures_regress/models.py:Widget",
      "target": "tests/fixtures_regress/models.py:Widget.Meta",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:Widget",
      "target": "tests/fixtures_regress/models.py:Widget.__str__",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:WidgetProxy",
      "target": "tests/fixtures_regress/models.py:WidgetProxy.Meta",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:WidgetProxy",
      "target": "tests/fixtures_regress/models.py:Widget",
      "type": "inherits"
    },
    {
      "source": "tests/fixtures_regress/models.py:TestManager",
      "target": "tests/fixtures_regress/models.py:TestManager.get_by_natural_key",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:Store",
      "target": "tests/fixtures_regress/models.py:Store.Meta",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:Store",
      "target": "tests/fixtures_regress/models.py:Store.__str__",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:Store",
      "target": "tests/fixtures_regress/models.py:Store.natural_key",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:Person",
      "target": "tests/fixtures_regress/models.py:Person.Meta",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:Person",
      "target": "tests/fixtures_regress/models.py:Person.__str__",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:Person",
      "target": "tests/fixtures_regress/models.py:Person.natural_key",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:Book",
      "target": "tests/fixtures_regress/models.py:Book.Meta",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:Book",
      "target": "tests/fixtures_regress/models.py:Book.__str__",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:NKManager",
      "target": "tests/fixtures_regress/models.py:NKManager.get_by_natural_key",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:NKChild",
      "target": "tests/fixtures_regress/models.py:NKChild.natural_key",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:NKChild",
      "target": "tests/fixtures_regress/models.py:NKChild.__str__",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:NKChild",
      "target": "tests/fixtures_regress/models.py:Parent",
      "type": "inherits"
    },
    {
      "source": "tests/fixtures_regress/models.py:RefToNKChild",
      "target": "tests/fixtures_regress/models.py:RefToNKChild.__str__",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:Circle1",
      "target": "tests/fixtures_regress/models.py:Circle1.natural_key",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:Circle2",
      "target": "tests/fixtures_regress/models.py:Circle2.natural_key",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:Circle3",
      "target": "tests/fixtures_regress/models.py:Circle3.natural_key",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:Circle4",
      "target": "tests/fixtures_regress/models.py:Circle4.natural_key",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:Circle5",
      "target": "tests/fixtures_regress/models.py:Circle5.natural_key",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:Circle6",
      "target": "tests/fixtures_regress/models.py:Circle6.natural_key",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:ExternalDependency",
      "target": "tests/fixtures_regress/models.py:ExternalDependency.natural_key",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:BaseNKModel",
      "target": "tests/fixtures_regress/models.py:BaseNKModel.Meta",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:BaseNKModel",
      "target": "tests/fixtures_regress/models.py:BaseNKModel.__str__",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:BaseNKModel",
      "target": "tests/fixtures_regress/models.py:BaseNKModel.natural_key",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:M2MSimpleA",
      "target": "tests/fixtures_regress/models.py:BaseNKModel",
      "type": "inherits"
    },
    {
      "source": "tests/fixtures_regress/models.py:M2MSimpleB",
      "target": "tests/fixtures_regress/models.py:BaseNKModel",
      "type": "inherits"
    },
    {
      "source": "tests/fixtures_regress/models.py:M2MSimpleCircularA",
      "target": "tests/fixtures_regress/models.py:BaseNKModel",
      "type": "inherits"
    },
    {
      "source": "tests/fixtures_regress/models.py:M2MSimpleCircularB",
      "target": "tests/fixtures_regress/models.py:BaseNKModel",
      "type": "inherits"
    },
    {
      "source": "tests/fixtures_regress/models.py:M2MComplexA",
      "target": "tests/fixtures_regress/models.py:BaseNKModel",
      "type": "inherits"
    },
    {
      "source": "tests/fixtures_regress/models.py:M2MComplexB",
      "target": "tests/fixtures_regress/models.py:BaseNKModel",
      "type": "inherits"
    },
    {
      "source": "tests/fixtures_regress/models.py:M2MThroughAB",
      "target": "tests/fixtures_regress/models.py:BaseNKModel",
      "type": "inherits"
    },
    {
      "source": "tests/fixtures_regress/models.py:M2MComplexCircular1A",
      "target": "tests/fixtures_regress/models.py:BaseNKModel",
      "type": "inherits"
    },
    {
      "source": "tests/fixtures_regress/models.py:M2MComplexCircular1B",
      "target": "tests/fixtures_regress/models.py:BaseNKModel",
      "type": "inherits"
    },
    {
      "source": "tests/fixtures_regress/models.py:M2MComplexCircular1C",
      "target": "tests/fixtures_regress/models.py:BaseNKModel",
      "type": "inherits"
    },
    {
      "source": "tests/fixtures_regress/models.py:M2MCircular1ThroughAB",
      "target": "tests/fixtures_regress/models.py:BaseNKModel",
      "type": "inherits"
    },
    {
      "source": "tests/fixtures_regress/models.py:M2MCircular1ThroughBC",
      "target": "tests/fixtures_regress/models.py:BaseNKModel",
      "type": "inherits"
    },
    {
      "source": "tests/fixtures_regress/models.py:M2MCircular1ThroughCA",
      "target": "tests/fixtures_regress/models.py:BaseNKModel",
      "type": "inherits"
    },
    {
      "source": "tests/fixtures_regress/models.py:M2MComplexCircular2A",
      "target": "tests/fixtures_regress/models.py:BaseNKModel",
      "type": "inherits"
    },
    {
      "source": "tests/fixtures_regress/models.py:M2MComplexCircular2B",
      "target": "tests/fixtures_regress/models.py:M2MComplexCircular2B.natural_key",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/models.py:M2MComplexCircular2B",
      "target": "tests/fixtures_regress/models.py:BaseNKModel",
      "type": "inherits"
    },
    {
      "source": "tests/fixtures_regress/models.py:M2MCircular2ThroughAB",
      "target": "tests/fixtures_regress/models.py:BaseNKModel",
      "type": "inherits"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/tests.py:TestFixtures",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/tests.py:M2MNaturalKeyFixtureTests",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/tests.py:TestTicket11101",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/tests.py:TestLoadFixtureFromOtherAppDirectory",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:Absolute",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:Animal",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:Article",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:Book",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:Child",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:Circle1",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:Circle2",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:Circle3",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:ExternalDependency",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:M2MCircular1ThroughAB",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:M2MCircular1ThroughBC",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:M2MCircular1ThroughCA",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:M2MCircular2ThroughAB",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:M2MComplexA",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:M2MComplexB",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:M2MComplexCircular1A",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:M2MComplexCircular1B",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:M2MComplexCircular1C",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:M2MComplexCircular2A",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:M2MComplexCircular2B",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:M2MSimpleA",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:M2MSimpleB",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:M2MSimpleCircularA",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:M2MSimpleCircularB",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:M2MThroughAB",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:NKChild",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:Parent",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:Person",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:RefToNKChild",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:Store",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:Stuff",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:Thingy",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py",
      "target": "tests/fixtures_regress/models.py:Widget",
      "type": "imports"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.animal_pre_save_check",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_duplicate_pk",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_loaddata_not_found_fields_not_ignore",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_loaddata_not_found_fields_ignore",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_loaddata_not_found_fields_ignore_xml",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_pretty_print_xml",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_pretty_print_xml_empty_strings",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_absolute_path",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_relative_path",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_relative_path_in_fixture_dirs",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_path_containing_dots",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_unknown_format",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_unimportable_serializer",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_invalid_data",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_invalid_data_no_ext",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_empty",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_error_message",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_pg_sequence_resetting_checks",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_close_connection_after_loaddata",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_field_value_coerce",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_dumpdata_uses_default_manager",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_proxy_model_included",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_loaddata_works_when_fixture_has_forward_refs",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_loaddata_raises_error_when_fixture_has_invalid_foreign_key",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_loaddata_forward_refs_split_fixtures",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_loaddata_no_fixture_specified",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_ticket_20820",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_ticket_22421",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_loaddata_with_m2m_to_self",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_fixture_dirs_with_duplicates",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_fixture_dirs_with_default_fixture_path",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_loaddata_with_valid_fixture_dirs",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures.test_duplicate_pk",
      "target": "tests/fixtures_regress/models.py:Animal",
      "type": "invokes"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures.test_relative_path_in_fixture_dirs",
      "target": "tests/fixtures_regress/tests.py:TestFixtures.test_relative_path",
      "type": "invokes"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestFixtures.test_dumpdata_uses_default_manager",
      "target": "tests/fixtures_regress/models.py:Animal",
      "type": "invokes"
    },
    {
      "source": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests",
      "target": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_nk_deserialize",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests",
      "target": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_nk_deserialize_xml",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests",
      "target": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_nk_on_serialize",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests",
      "target": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_dependency_sorting",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests",
      "target": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_dependency_sorting_2",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests",
      "target": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_dependency_sorting_3",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests",
      "target": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_dependency_sorting_4",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests",
      "target": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_dependency_sorting_5",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests",
      "target": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_dependency_sorting_6",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests",
      "target": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_dependency_sorting_dangling",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests",
      "target": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_dependency_sorting_tight_circular",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests",
      "target": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_dependency_sorting_tight_circular_2",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests",
      "target": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_dependency_self_referential",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests",
      "target": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_dependency_sorting_long",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests",
      "target": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_dependency_sorting_normal",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests",
      "target": "tests/fixtures_regress/tests.py:NaturalKeyFixtureTests.test_normal_pk",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:M2MNaturalKeyFixtureTests",
      "target": "tests/fixtures_regress/tests.py:M2MNaturalKeyFixtureTests.test_dependency_sorting_m2m_simple",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:M2MNaturalKeyFixtureTests",
      "target": "tests/fixtures_regress/tests.py:M2MNaturalKeyFixtureTests.test_dependency_sorting_m2m_simple_circular",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:M2MNaturalKeyFixtureTests",
      "target": "tests/fixtures_regress/tests.py:M2MNaturalKeyFixtureTests.test_dependency_sorting_m2m_complex",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:M2MNaturalKeyFixtureTests",
      "target": "tests/fixtures_regress/tests.py:M2MNaturalKeyFixtureTests.test_dependency_sorting_m2m_complex_circular_1",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:M2MNaturalKeyFixtureTests",
      "target": "tests/fixtures_regress/tests.py:M2MNaturalKeyFixtureTests.test_dependency_sorting_m2m_complex_circular_2",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:M2MNaturalKeyFixtureTests",
      "target": "tests/fixtures_regress/tests.py:M2MNaturalKeyFixtureTests.test_dump_and_load_m2m_simple",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestTicket11101",
      "target": "tests/fixtures_regress/tests.py:TestTicket11101.test_ticket_11101",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_regress/tests.py:TestLoadFixtureFromOtherAppDirectory",
      "target": "tests/fixtures_regress/tests.py:TestLoadFixtureFromOtherAppDirectory.test_fixtures_loaded",
      "type": "contains"
    },
    {
      "source": "tests/aggregation",
      "target": "tests/aggregation/models.py",
      "type": "contains"
    },
    {
      "source": "tests/aggregation",
      "target": "tests/aggregation/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/aggregation",
      "target": "tests/aggregation/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/aggregation",
      "target": "tests/aggregation/test_filter_argument.py",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/models.py",
      "target": "tests/aggregation/models.py:Author",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/models.py",
      "target": "tests/aggregation/models.py:Publisher",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/models.py",
      "target": "tests/aggregation/models.py:Book",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/models.py",
      "target": "tests/aggregation/models.py:Store",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/models.py:Author",
      "target": "tests/aggregation/models.py:Author.__str__",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/models.py:Publisher",
      "target": "tests/aggregation/models.py:Publisher.__str__",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/models.py:Book",
      "target": "tests/aggregation/models.py:Book.__str__",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/models.py:Store",
      "target": "tests/aggregation/models.py:Store.__str__",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py",
      "target": "tests/aggregation/tests.py:AggregateTestCase",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py",
      "target": "tests/aggregation/models.py:Author",
      "type": "imports"
    },
    {
      "source": "tests/aggregation/tests.py",
      "target": "tests/aggregation/models.py:Book",
      "type": "imports"
    },
    {
      "source": "tests/aggregation/tests.py",
      "target": "tests/aggregation/models.py:Publisher",
      "type": "imports"
    },
    {
      "source": "tests/aggregation/tests.py",
      "target": "tests/aggregation/models.py:Store",
      "type": "imports"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_empty_aggregate",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_aggregate_in_order_by",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_single_aggregate",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_multiple_aggregates",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_filter_aggregate",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_related_aggregate",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_aggregate_multi_join",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_aggregate_alias",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_annotate_basic",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_annotate_defer",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_annotate_defer_select_related",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_annotate_m2m",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_backwards_m2m_annotate",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_reverse_fkey_annotate",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_annotate_values",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_count",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_count_star",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_count_distinct_expression",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_non_grouped_annotation_not_in_group_by",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_grouped_annotation_in_group_by",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_fkey_aggregate",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_annotate_ordering",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_aggregate_annotation",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_avg_duration_field",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_sum_duration_field",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_sum_distinct_aggregate",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_filtering",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_annotation",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_more_aggregation",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_even_more_aggregate",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_annotate_values_list",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_dates_with_aggregation",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_values_aggregation",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_ticket17424",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_ticket12886",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_ticket11881",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_decimal_max_digits_has_no_effect",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_nonaggregate_aggregation_throws",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_nonfield_annotation",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_missing_output_field_raises_error",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_annotation_expressions",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_aggregation_expressions",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_avg_decimal_field",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_order_of_precedence",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_combine_different_types",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_complex_aggregations_require_kwarg",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_aggregate_over_complex_annotation",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_values_annotation_with_expression",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_annotate_values_aggregate",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_annotate_over_annotate",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_annotated_aggregate_over_annotated_aggregate",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_multi_arg_aggregate",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_add_implementation",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_complex_values_aggregation",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_expression_on_aggregation",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_arguments_must_be_expressions",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase.test_annotated_aggregate_over_annotated_aggregate",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_annotated_aggregate_over_annotated_aggregate.MyMax",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase.test_annotated_aggregate_over_annotated_aggregate",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_annotated_aggregate_over_annotated_aggregate.MyMax",
      "type": "invokes"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase.test_annotated_aggregate_over_annotated_aggregate.MyMax",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_annotated_aggregate_over_annotated_aggregate.MyMax.as_sql",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase.test_multi_arg_aggregate",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_multi_arg_aggregate.MyMax",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase.test_multi_arg_aggregate",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_multi_arg_aggregate.MyMax",
      "type": "invokes"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase.test_multi_arg_aggregate.MyMax",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_multi_arg_aggregate.MyMax.as_sql",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase.test_add_implementation",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_add_implementation.MySum",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase.test_add_implementation",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_add_implementation.MySum",
      "type": "invokes"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase.test_add_implementation",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_add_implementation.lower_case_function_override",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase.test_add_implementation",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_add_implementation.lower_case_function_super",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase.test_add_implementation",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_add_implementation.be_evil",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase.test_expression_on_aggregation",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_expression_on_aggregation.Greatest",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase.test_expression_on_aggregation",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_expression_on_aggregation.Greatest",
      "type": "invokes"
    },
    {
      "source": "tests/aggregation/tests.py:AggregateTestCase.test_expression_on_aggregation.Greatest",
      "target": "tests/aggregation/tests.py:AggregateTestCase.test_expression_on_aggregation.Greatest.as_sqlite",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/test_filter_argument.py",
      "target": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/test_filter_argument.py",
      "target": "tests/aggregation/models.py:Author",
      "type": "imports"
    },
    {
      "source": "tests/aggregation/test_filter_argument.py",
      "target": "tests/aggregation/models.py:Book",
      "type": "imports"
    },
    {
      "source": "tests/aggregation/test_filter_argument.py",
      "target": "tests/aggregation/models.py:Publisher",
      "type": "imports"
    },
    {
      "source": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests",
      "target": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests",
      "target": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests.test_filtered_aggregates",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests",
      "target": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests.test_double_filtered_aggregates",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests",
      "target": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests.test_excluded_aggregates",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests",
      "target": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests.test_related_aggregates_m2m",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests",
      "target": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests.test_related_aggregates_m2m_and_fk",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests",
      "target": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests.test_plain_annotate",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests",
      "target": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests.test_filtered_aggregate_on_annotate",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests",
      "target": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests.test_case_aggregate",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests",
      "target": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests.test_sum_star_exception",
      "type": "contains"
    },
    {
      "source": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests",
      "target": "tests/aggregation/test_filter_argument.py:FilteredAggregateTests.test_filtered_reused_subquery",
      "type": "contains"
    },
    {
      "source": "tests/middleware",
      "target": "tests/middleware/test_security.py",
      "type": "contains"
    },
    {
      "source": "tests/middleware",
      "target": "tests/middleware/extra_urls.py",
      "type": "contains"
    },
    {
      "source": "tests/middleware",
      "target": "tests/middleware/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/middleware",
      "target": "tests/middleware/cond_get_urls.py",
      "type": "contains"
    },
    {
      "source": "tests/middleware",
      "target": "tests/middleware/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/middleware",
      "target": "tests/middleware/urls.py",
      "type": "contains"
    },
    {
      "source": "tests/middleware",
      "target": "tests/middleware/views.py",
      "type": "contains"
    },
    {
      "source": "tests/middleware/test_security.py",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest",
      "type": "contains"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.middleware",
      "type": "contains"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.secure_request_kwargs",
      "type": "contains"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.response",
      "type": "contains"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.process_response",
      "type": "contains"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.process_request",
      "type": "contains"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_sts_on",
      "type": "contains"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_sts_already_present",
      "type": "contains"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_sts_only_if_secure",
      "type": "contains"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_sts_off",
      "type": "contains"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_sts_include_subdomains",
      "type": "contains"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_sts_no_include_subdomains",
      "type": "contains"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_sts_preload",
      "type": "contains"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_sts_subdomains_and_preload",
      "type": "contains"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_sts_no_preload",
      "type": "contains"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_content_type_on",
      "type": "contains"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_content_type_already_present",
      "type": "contains"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_content_type_off",
      "type": "contains"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_xss_filter_on",
      "type": "contains"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_xss_filter_already_present",
      "type": "contains"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_xss_filter_off",
      "type": "contains"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_ssl_redirect_on",
      "type": "contains"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_no_redirect_ssl",
      "type": "contains"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_redirect_exempt",
      "type": "contains"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_redirect_ssl_host",
      "type": "contains"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_ssl_redirect_off",
      "type": "contains"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest.process_response",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.process_request",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest.process_response",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.response",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_sts_on",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.process_response",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_sts_already_present",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.process_response",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_sts_only_if_secure",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.process_response",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_sts_off",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.process_response",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_sts_include_subdomains",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.process_response",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_sts_no_include_subdomains",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.process_response",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_sts_preload",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.process_response",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_sts_subdomains_and_preload",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.process_response",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_sts_no_preload",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.process_response",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_content_type_on",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.process_response",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_content_type_already_present",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.process_response",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_content_type_off",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.process_response",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_xss_filter_on",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.process_response",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_xss_filter_already_present",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.process_response",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_xss_filter_off",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.process_response",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_ssl_redirect_on",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.process_request",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_no_redirect_ssl",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.process_request",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_redirect_exempt",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.process_request",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_redirect_ssl_host",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.process_request",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/test_security.py:SecurityMiddlewareTest.test_ssl_redirect_off",
      "target": "tests/middleware/test_security.py:SecurityMiddlewareTest.process_request",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/extra_urls.py",
      "target": "tests/middleware/views.py",
      "type": "imports"
    },
    {
      "source": "tests/middleware/tests.py",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py",
      "target": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py",
      "target": "tests/middleware/tests.py:ConditionalGetMiddlewareTest",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py",
      "target": "tests/middleware/tests.py:XFrameOptionsMiddlewareTest",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py",
      "target": "tests/middleware/tests.py:GZipMiddlewareTest",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py",
      "target": "tests/middleware/tests.py:ETagGZipMiddlewareTest",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_have_slash",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_slashless_resource",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_slashless_unknown",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_redirect",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_redirect_querystring",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_redirect_querystring_have_slash",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_no_redirect_on_POST_in_DEBUG",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_disabled",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_quoted",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_leading_slashes",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_prepend_www",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_prepend_www_append_slash_have_slash",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_prepend_www_append_slash_slashless",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_have_slash_custom_urlconf",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_slashless_resource_custom_urlconf",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_slashless_unknown_custom_urlconf",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_redirect_custom_urlconf",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_no_redirect_on_POST_in_DEBUG_custom_urlconf",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_disabled_custom_urlconf",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_append_slash_quoted_custom_urlconf",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_prepend_www_custom_urlconf",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_prepend_www_append_slash_have_slash_custom_urlconf",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_prepend_www_append_slash_slashless_custom_urlconf",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_content_length_header_added",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_content_length_header_not_added_for_streaming_response",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_content_length_header_not_changed",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_disallowed_user_agents",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_non_ascii_query_string_does_not_crash",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_response_redirect_class",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_response_redirect_class_subclass",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest.test_response_redirect_class_subclass",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_response_redirect_class_subclass.MyCommonMiddleware",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:CommonMiddlewareTest.test_response_redirect_class_subclass",
      "target": "tests/middleware/tests.py:CommonMiddlewareTest.test_response_redirect_class_subclass.MyCommonMiddleware",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest",
      "target": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest.setUp",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest",
      "target": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest.test_404_error_reporting",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest",
      "target": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest.test_404_error_reporting_no_referer",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest",
      "target": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest.test_404_error_reporting_ignored_url",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest",
      "target": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest.test_custom_request_checker",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest",
      "target": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest.test_referer_equal_to_requested_url",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest",
      "target": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest.test_referer_equal_to_requested_url_on_another_domain",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest",
      "target": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest.test_referer_equal_to_requested_url_without_trailing_slash_when_append_slash_is_set",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest",
      "target": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest.test_referer_equal_to_requested_url_without_trailing_slash_when_append_slash_is_unset",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest.test_custom_request_checker",
      "target": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest.test_custom_request_checker.SubclassedMiddleware",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest.test_custom_request_checker",
      "target": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest.test_custom_request_checker.SubclassedMiddleware",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest.test_custom_request_checker.SubclassedMiddleware",
      "target": "tests/middleware/tests.py:BrokenLinkEmailsMiddlewareTest.test_custom_request_checker.SubclassedMiddleware.is_ignorable_request",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:ConditionalGetMiddlewareTest",
      "target": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.setUp",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:ConditionalGetMiddlewareTest",
      "target": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_middleware_calculates_etag",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:ConditionalGetMiddlewareTest",
      "target": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_middleware_wont_overwrite_etag",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:ConditionalGetMiddlewareTest",
      "target": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_no_etag_streaming_response",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:ConditionalGetMiddlewareTest",
      "target": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_no_etag_no_store_cache",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:ConditionalGetMiddlewareTest",
      "target": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_etag_extended_cache_control",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:ConditionalGetMiddlewareTest",
      "target": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_if_none_match_and_no_etag",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:ConditionalGetMiddlewareTest",
      "target": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_no_if_none_match_and_etag",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:ConditionalGetMiddlewareTest",
      "target": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_if_none_match_and_same_etag",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:ConditionalGetMiddlewareTest",
      "target": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_if_none_match_and_different_etag",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:ConditionalGetMiddlewareTest",
      "target": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_if_none_match_and_redirect",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:ConditionalGetMiddlewareTest",
      "target": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_if_none_match_and_client_error",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:ConditionalGetMiddlewareTest",
      "target": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_if_modified_since_and_no_last_modified",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:ConditionalGetMiddlewareTest",
      "target": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_no_if_modified_since_and_last_modified",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:ConditionalGetMiddlewareTest",
      "target": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_if_modified_since_and_same_last_modified",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:ConditionalGetMiddlewareTest",
      "target": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_if_modified_since_and_last_modified_in_the_past",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:ConditionalGetMiddlewareTest",
      "target": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_if_modified_since_and_last_modified_in_the_future",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:ConditionalGetMiddlewareTest",
      "target": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_if_modified_since_and_redirect",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:ConditionalGetMiddlewareTest",
      "target": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_if_modified_since_and_client_error",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:ConditionalGetMiddlewareTest",
      "target": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_not_modified_headers",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:ConditionalGetMiddlewareTest",
      "target": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_no_unsafe",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:ConditionalGetMiddlewareTest",
      "target": "tests/middleware/tests.py:ConditionalGetMiddlewareTest.test_no_head",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:XFrameOptionsMiddlewareTest",
      "target": "tests/middleware/tests.py:XFrameOptionsMiddlewareTest.test_same_origin",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:XFrameOptionsMiddlewareTest",
      "target": "tests/middleware/tests.py:XFrameOptionsMiddlewareTest.test_deny",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:XFrameOptionsMiddlewareTest",
      "target": "tests/middleware/tests.py:XFrameOptionsMiddlewareTest.test_defaults_sameorigin",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:XFrameOptionsMiddlewareTest",
      "target": "tests/middleware/tests.py:XFrameOptionsMiddlewareTest.test_dont_set_if_set",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:XFrameOptionsMiddlewareTest",
      "target": "tests/middleware/tests.py:XFrameOptionsMiddlewareTest.test_response_exempt",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:XFrameOptionsMiddlewareTest",
      "target": "tests/middleware/tests.py:XFrameOptionsMiddlewareTest.test_is_extendable",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:XFrameOptionsMiddlewareTest.test_is_extendable",
      "target": "tests/middleware/tests.py:XFrameOptionsMiddlewareTest.test_is_extendable.OtherXFrameOptionsMiddleware",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:XFrameOptionsMiddlewareTest.test_is_extendable",
      "target": "tests/middleware/tests.py:XFrameOptionsMiddlewareTest.test_is_extendable.OtherXFrameOptionsMiddleware",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/tests.py:XFrameOptionsMiddlewareTest.test_is_extendable.OtherXFrameOptionsMiddleware",
      "target": "tests/middleware/tests.py:XFrameOptionsMiddlewareTest.test_is_extendable.OtherXFrameOptionsMiddleware.get_xframe_options_value",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:GZipMiddlewareTest",
      "target": "tests/middleware/tests.py:GZipMiddlewareTest.setUp",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:GZipMiddlewareTest",
      "target": "tests/middleware/tests.py:GZipMiddlewareTest.decompress",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:GZipMiddlewareTest",
      "target": "tests/middleware/tests.py:GZipMiddlewareTest.get_mtime",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:GZipMiddlewareTest",
      "target": "tests/middleware/tests.py:GZipMiddlewareTest.test_compress_response",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:GZipMiddlewareTest",
      "target": "tests/middleware/tests.py:GZipMiddlewareTest.test_compress_streaming_response",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:GZipMiddlewareTest",
      "target": "tests/middleware/tests.py:GZipMiddlewareTest.test_compress_streaming_response_unicode",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:GZipMiddlewareTest",
      "target": "tests/middleware/tests.py:GZipMiddlewareTest.test_compress_file_response",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:GZipMiddlewareTest",
      "target": "tests/middleware/tests.py:GZipMiddlewareTest.test_compress_non_200_response",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:GZipMiddlewareTest",
      "target": "tests/middleware/tests.py:GZipMiddlewareTest.test_no_compress_short_response",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:GZipMiddlewareTest",
      "target": "tests/middleware/tests.py:GZipMiddlewareTest.test_no_compress_compressed_response",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:GZipMiddlewareTest",
      "target": "tests/middleware/tests.py:GZipMiddlewareTest.test_no_compress_incompressible_response",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:GZipMiddlewareTest",
      "target": "tests/middleware/tests.py:GZipMiddlewareTest.test_compress_deterministic",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:GZipMiddlewareTest.test_compress_response",
      "target": "tests/middleware/tests.py:GZipMiddlewareTest.decompress",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/tests.py:GZipMiddlewareTest.test_compress_streaming_response",
      "target": "tests/middleware/tests.py:GZipMiddlewareTest.decompress",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/tests.py:GZipMiddlewareTest.test_compress_streaming_response_unicode",
      "target": "tests/middleware/tests.py:GZipMiddlewareTest.decompress",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/tests.py:GZipMiddlewareTest.test_compress_file_response",
      "target": "tests/middleware/tests.py:GZipMiddlewareTest.decompress",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/tests.py:GZipMiddlewareTest.test_compress_non_200_response",
      "target": "tests/middleware/tests.py:GZipMiddlewareTest.decompress",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/tests.py:GZipMiddlewareTest.test_compress_deterministic",
      "target": "tests/middleware/tests.py:GZipMiddlewareTest.get_mtime",
      "type": "invokes"
    },
    {
      "source": "tests/middleware/tests.py:ETagGZipMiddlewareTest",
      "target": "tests/middleware/tests.py:ETagGZipMiddlewareTest.test_strong_etag_modified",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:ETagGZipMiddlewareTest",
      "target": "tests/middleware/tests.py:ETagGZipMiddlewareTest.test_weak_etag_not_modified",
      "type": "contains"
    },
    {
      "source": "tests/middleware/tests.py:ETagGZipMiddlewareTest",
      "target": "tests/middleware/tests.py:ETagGZipMiddlewareTest.test_etag_match",
      "type": "contains"
    },
    {
      "source": "tests/middleware/urls.py",
      "target": "tests/middleware/views.py",
      "type": "imports"
    },
    {
      "source": "tests/middleware/views.py",
      "target": "tests/middleware/views.py:empty_view",
      "type": "contains"
    },
    {
      "source": "tests/test_runner",
      "target": "tests/test_runner/runner.py",
      "type": "contains"
    },
    {
      "source": "tests/test_runner",
      "target": "tests/test_runner/models.py",
      "type": "contains"
    },
    {
      "source": "tests/test_runner",
      "target": "tests/test_runner/test_discover_runner.py",
      "type": "contains"
    },
    {
      "source": "tests/test_runner",
      "target": "tests/test_runner/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/test_runner",
      "target": "tests/test_runner/test_parallel.py",
      "type": "contains"
    },
    {
      "source": "tests/test_runner",
      "target": "tests/test_runner/test_debug_sql.py",
      "type": "contains"
    },
    {
      "source": "tests/test_runner",
      "target": "tests/test_runner/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/runner.py",
      "target": "tests/test_runner/runner.py:CustomOptionsTestRunner",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/runner.py:CustomOptionsTestRunner",
      "target": "tests/test_runner/runner.py:CustomOptionsTestRunner.add_arguments",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/runner.py:CustomOptionsTestRunner",
      "target": "tests/test_runner/runner.py:CustomOptionsTestRunner.run_tests",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/models.py",
      "target": "tests/test_runner/models.py:Person",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/models.py",
      "target": "tests/test_runner/models.py:ThroughBase",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/models.py",
      "target": "tests/test_runner/models.py:Through",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/models.py",
      "target": "tests/test_runner/models.py:B",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/models.py:Through",
      "target": "tests/test_runner/models.py:ThroughBase",
      "type": "inherits"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py",
      "target": "tests/test_runner/test_discover_runner.py:change_cwd",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_init_debug_mode",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_add_arguments_debug_mode",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_dotted_test_module",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_dotted_test_class_vanilla_unittest",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_dotted_test_class_django_testcase",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_dotted_test_method_django_testcase",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_pattern",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_file_path",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_empty_label",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_empty_test_case",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_discovery_on_package",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_ignore_adjacent",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_testcase_ordering",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_duplicates_ignored",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_reverse",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_overridable_get_test_runner_kwargs",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_overridable_test_suite",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_overridable_test_runner",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_overridable_test_loader",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_tags",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_exclude_tags",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_tag_inheritance",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_included_tags_displayed",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_excluded_tags_displayed",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_file_path",
      "target": "tests/test_runner/test_discover_runner.py:change_cwd",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_empty_label",
      "target": "tests/test_runner/test_discover_runner.py:change_cwd",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_testcase_ordering",
      "target": "tests/test_runner/test_discover_runner.py:change_cwd",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_tag_inheritance",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_tag_inheritance.count_tests",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_tag_inheritance",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerTests.test_tag_inheritance.count_tests",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests.get_databases",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests.test_mixed",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests.test_all",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests.test_default_and_other",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests.test_default_only",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests.test_other_only",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests.test_no_databases_required",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests.test_mixed",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests.get_databases",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests.test_all",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests.get_databases",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests.test_default_and_other",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests.get_databases",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests.test_default_only",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests.get_databases",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests.test_other_only",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests.get_databases",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests.test_no_databases_required",
      "target": "tests/test_runner/test_discover_runner.py:DiscoverRunnerGetDatabasesTests.get_databases",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/test_parallel.py",
      "target": "tests/test_runner/test_parallel.py:ExceptionThatFailsUnpickling",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_parallel.py",
      "target": "tests/test_runner/test_parallel.py:ParallelTestRunnerTest",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_parallel.py",
      "target": "tests/test_runner/test_parallel.py:SampleFailingSubtest",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_parallel.py",
      "target": "tests/test_runner/test_parallel.py:RemoteTestResultTest",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_parallel.py:ParallelTestRunnerTest",
      "target": "tests/test_runner/test_parallel.py:ParallelTestRunnerTest.test_subtest",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_parallel.py:SampleFailingSubtest",
      "target": "tests/test_runner/test_parallel.py:SampleFailingSubtest.dummy_test",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_parallel.py:RemoteTestResultTest",
      "target": "tests/test_runner/test_parallel.py:RemoteTestResultTest.test_pickle_errors_detection",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_parallel.py:RemoteTestResultTest",
      "target": "tests/test_runner/test_parallel.py:RemoteTestResultTest.test_add_failing_subtests",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_parallel.py:RemoteTestResultTest.test_pickle_errors_detection",
      "target": "tests/test_runner/test_parallel.py:ExceptionThatFailsUnpickling",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/test_parallel.py:RemoteTestResultTest.test_add_failing_subtests",
      "target": "tests/test_runner/test_parallel.py:SampleFailingSubtest",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/test_debug_sql.py",
      "target": "tests/test_runner/test_debug_sql.py:TestDebugSQL",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_debug_sql.py",
      "target": "tests/test_runner/models.py:Person",
      "type": "imports"
    },
    {
      "source": "tests/test_runner/test_debug_sql.py:TestDebugSQL",
      "target": "tests/test_runner/test_debug_sql.py:TestDebugSQL.PassingTest",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_debug_sql.py:TestDebugSQL",
      "target": "tests/test_runner/test_debug_sql.py:TestDebugSQL.FailingTest",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_debug_sql.py:TestDebugSQL",
      "target": "tests/test_runner/test_debug_sql.py:TestDebugSQL.ErrorTest",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_debug_sql.py:TestDebugSQL",
      "target": "tests/test_runner/test_debug_sql.py:TestDebugSQL.PassingSubTest",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_debug_sql.py:TestDebugSQL",
      "target": "tests/test_runner/test_debug_sql.py:TestDebugSQL.FailingSubTest",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_debug_sql.py:TestDebugSQL",
      "target": "tests/test_runner/test_debug_sql.py:TestDebugSQL.ErrorSubTest",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_debug_sql.py:TestDebugSQL",
      "target": "tests/test_runner/test_debug_sql.py:TestDebugSQL._test_output",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_debug_sql.py:TestDebugSQL",
      "target": "tests/test_runner/test_debug_sql.py:TestDebugSQL.test_output_normal",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_debug_sql.py:TestDebugSQL",
      "target": "tests/test_runner/test_debug_sql.py:TestDebugSQL.test_output_verbose",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_debug_sql.py:TestDebugSQL.PassingTest",
      "target": "tests/test_runner/test_debug_sql.py:TestDebugSQL.PassingTest.runTest",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_debug_sql.py:TestDebugSQL.FailingTest",
      "target": "tests/test_runner/test_debug_sql.py:TestDebugSQL.FailingTest.runTest",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_debug_sql.py:TestDebugSQL.ErrorTest",
      "target": "tests/test_runner/test_debug_sql.py:TestDebugSQL.ErrorTest.runTest",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_debug_sql.py:TestDebugSQL.PassingSubTest",
      "target": "tests/test_runner/test_debug_sql.py:TestDebugSQL.PassingSubTest.runTest",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_debug_sql.py:TestDebugSQL.FailingSubTest",
      "target": "tests/test_runner/test_debug_sql.py:TestDebugSQL.FailingSubTest.runTest",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_debug_sql.py:TestDebugSQL.ErrorSubTest",
      "target": "tests/test_runner/test_debug_sql.py:TestDebugSQL.ErrorSubTest.runTest",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/test_debug_sql.py:TestDebugSQL._test_output",
      "target": "tests/test_runner/test_debug_sql.py:TestDebugSQL.ErrorSubTest",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/test_debug_sql.py:TestDebugSQL._test_output",
      "target": "tests/test_runner/test_debug_sql.py:TestDebugSQL.ErrorTest",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/test_debug_sql.py:TestDebugSQL._test_output",
      "target": "tests/test_runner/test_debug_sql.py:TestDebugSQL.FailingTest",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/test_debug_sql.py:TestDebugSQL._test_output",
      "target": "tests/test_runner/test_debug_sql.py:TestDebugSQL.FailingSubTest",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/test_debug_sql.py:TestDebugSQL._test_output",
      "target": "tests/test_runner/test_debug_sql.py:TestDebugSQL.PassingSubTest",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/test_debug_sql.py:TestDebugSQL._test_output",
      "target": "tests/test_runner/test_debug_sql.py:TestDebugSQL.PassingTest",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/test_debug_sql.py:TestDebugSQL.test_output_normal",
      "target": "tests/test_runner/test_debug_sql.py:TestDebugSQL._test_output",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/test_debug_sql.py:TestDebugSQL.test_output_verbose",
      "target": "tests/test_runner/test_debug_sql.py:TestDebugSQL._test_output",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/tests.py",
      "target": "tests/test_runner/tests.py:DependencyOrderingTests",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py",
      "target": "tests/test_runner/tests.py:MockTestRunner",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py",
      "target": "tests/test_runner/tests.py:ManageCommandTests",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py",
      "target": "tests/test_runner/tests.py:CustomTestRunnerOptionsSettingsTests",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py",
      "target": "tests/test_runner/tests.py:CustomTestRunnerOptionsCmdlineTests",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py",
      "target": "tests/test_runner/tests.py:Ticket17477RegressionTests",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py",
      "target": "tests/test_runner/tests.py:SQLiteInMemoryTestDbs",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py",
      "target": "tests/test_runner/tests.py:DummyBackendTest",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py",
      "target": "tests/test_runner/tests.py:AliasedDefaultTestSetupTest",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py",
      "target": "tests/test_runner/tests.py:SetupDatabasesTests",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py",
      "target": "tests/test_runner/tests.py:AutoIncrementResetTest",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py",
      "target": "tests/test_runner/tests.py:EmptyDefaultDatabaseTest",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py",
      "target": "tests/test_runner/tests.py:RunTestsExceptionHandlingTests",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py",
      "target": "tests/test_runner/models.py:B",
      "type": "imports"
    },
    {
      "source": "tests/test_runner/tests.py",
      "target": "tests/test_runner/models.py:Person",
      "type": "imports"
    },
    {
      "source": "tests/test_runner/tests.py",
      "target": "tests/test_runner/models.py:Through",
      "type": "imports"
    },
    {
      "source": "tests/test_runner/tests.py:DependencyOrderingTests",
      "target": "tests/test_runner/tests.py:DependencyOrderingTests.test_simple_dependencies",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:DependencyOrderingTests",
      "target": "tests/test_runner/tests.py:DependencyOrderingTests.test_chained_dependencies",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:DependencyOrderingTests",
      "target": "tests/test_runner/tests.py:DependencyOrderingTests.test_multiple_dependencies",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:DependencyOrderingTests",
      "target": "tests/test_runner/tests.py:DependencyOrderingTests.test_circular_dependencies",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:DependencyOrderingTests",
      "target": "tests/test_runner/tests.py:DependencyOrderingTests.test_own_alias_dependency",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:ManageCommandTests",
      "target": "tests/test_runner/tests.py:ManageCommandTests.test_custom_test_runner",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:ManageCommandTests",
      "target": "tests/test_runner/tests.py:ManageCommandTests.test_bad_test_runner",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:CustomTestRunnerOptionsSettingsTests",
      "target": "tests/test_runner/tests.py:CustomTestRunnerOptionsSettingsTests.setUp",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:CustomTestRunnerOptionsSettingsTests",
      "target": "tests/test_runner/tests.py:CustomTestRunnerOptionsSettingsTests.test_default_options",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:CustomTestRunnerOptionsSettingsTests",
      "target": "tests/test_runner/tests.py:CustomTestRunnerOptionsSettingsTests.test_default_and_given_options",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:CustomTestRunnerOptionsSettingsTests",
      "target": "tests/test_runner/tests.py:CustomTestRunnerOptionsSettingsTests.test_option_name_and_value_separated",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:CustomTestRunnerOptionsSettingsTests",
      "target": "tests/test_runner/tests.py:CustomTestRunnerOptionsSettingsTests.test_all_options_given",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:CustomTestRunnerOptionsSettingsTests.setUp",
      "target": "tests/test_runner/tests.py:SetupDatabasesTests.setUp",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/tests.py:CustomTestRunnerOptionsSettingsTests.setUp",
      "target": "tests/test_runner/tests.py:Ticket17477RegressionTests.setUp",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/tests.py:CustomTestRunnerOptionsSettingsTests.setUp",
      "target": "tests/test_runner/tests.py:CustomTestRunnerOptionsCmdlineTests.setUp",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/tests.py:CustomTestRunnerOptionsCmdlineTests",
      "target": "tests/test_runner/tests.py:CustomTestRunnerOptionsCmdlineTests.setUp",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:CustomTestRunnerOptionsCmdlineTests",
      "target": "tests/test_runner/tests.py:CustomTestRunnerOptionsCmdlineTests.test_testrunner_option",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:CustomTestRunnerOptionsCmdlineTests",
      "target": "tests/test_runner/tests.py:CustomTestRunnerOptionsCmdlineTests.test_testrunner_equals",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:CustomTestRunnerOptionsCmdlineTests",
      "target": "tests/test_runner/tests.py:CustomTestRunnerOptionsCmdlineTests.test_no_testrunner",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:CustomTestRunnerOptionsCmdlineTests.setUp",
      "target": "tests/test_runner/tests.py:SetupDatabasesTests.setUp",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/tests.py:CustomTestRunnerOptionsCmdlineTests.setUp",
      "target": "tests/test_runner/tests.py:Ticket17477RegressionTests.setUp",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/tests.py:CustomTestRunnerOptionsCmdlineTests.setUp",
      "target": "tests/test_runner/tests.py:CustomTestRunnerOptionsSettingsTests.setUp",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/tests.py:Ticket17477RegressionTests",
      "target": "tests/test_runner/tests.py:Ticket17477RegressionTests.setUp",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:Ticket17477RegressionTests",
      "target": "tests/test_runner/tests.py:Ticket17477RegressionTests.test_ticket_17477",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:Ticket17477RegressionTests.setUp",
      "target": "tests/test_runner/tests.py:SetupDatabasesTests.setUp",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/tests.py:Ticket17477RegressionTests.setUp",
      "target": "tests/test_runner/tests.py:CustomTestRunnerOptionsCmdlineTests.setUp",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/tests.py:Ticket17477RegressionTests.setUp",
      "target": "tests/test_runner/tests.py:CustomTestRunnerOptionsSettingsTests.setUp",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/tests.py:SQLiteInMemoryTestDbs",
      "target": "tests/test_runner/tests.py:SQLiteInMemoryTestDbs.test_transaction_support",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:DummyBackendTest",
      "target": "tests/test_runner/tests.py:DummyBackendTest.test_setup_databases",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:AliasedDefaultTestSetupTest",
      "target": "tests/test_runner/tests.py:AliasedDefaultTestSetupTest.test_setup_aliased_default_database",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:SetupDatabasesTests",
      "target": "tests/test_runner/tests.py:SetupDatabasesTests.setUp",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:SetupDatabasesTests",
      "target": "tests/test_runner/tests.py:SetupDatabasesTests.test_setup_aliased_databases",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:SetupDatabasesTests",
      "target": "tests/test_runner/tests.py:SetupDatabasesTests.test_destroy_test_db_restores_db_name",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:SetupDatabasesTests",
      "target": "tests/test_runner/tests.py:SetupDatabasesTests.test_serialization",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:SetupDatabasesTests",
      "target": "tests/test_runner/tests.py:SetupDatabasesTests.test_serialized_off",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:AutoIncrementResetTest",
      "target": "tests/test_runner/tests.py:AutoIncrementResetTest._test",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:AutoIncrementResetTest",
      "target": "tests/test_runner/tests.py:AutoIncrementResetTest.test_autoincrement_reset1",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:AutoIncrementResetTest",
      "target": "tests/test_runner/tests.py:AutoIncrementResetTest.test_autoincrement_reset2",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:AutoIncrementResetTest.test_autoincrement_reset1",
      "target": "tests/test_runner/tests.py:AutoIncrementResetTest._test",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/tests.py:AutoIncrementResetTest.test_autoincrement_reset2",
      "target": "tests/test_runner/tests.py:AutoIncrementResetTest._test",
      "type": "invokes"
    },
    {
      "source": "tests/test_runner/tests.py:EmptyDefaultDatabaseTest",
      "target": "tests/test_runner/tests.py:EmptyDefaultDatabaseTest.test_empty_default_database",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:RunTestsExceptionHandlingTests",
      "target": "tests/test_runner/tests.py:RunTestsExceptionHandlingTests.test_run_checks_raises",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:RunTestsExceptionHandlingTests",
      "target": "tests/test_runner/tests.py:RunTestsExceptionHandlingTests.test_run_checks_raises_and_teardown_raises",
      "type": "contains"
    },
    {
      "source": "tests/test_runner/tests.py:RunTestsExceptionHandlingTests",
      "target": "tests/test_runner/tests.py:RunTestsExceptionHandlingTests.test_run_checks_passes_and_teardown_raises",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils",
      "target": "tests/admin_utils/test_logentry.py",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils",
      "target": "tests/admin_utils/models.py",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils",
      "target": "tests/admin_utils/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils",
      "target": "tests/admin_utils/admin.py",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils",
      "target": "tests/admin_utils/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils",
      "target": "tests/admin_utils/urls.py",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/test_logentry.py",
      "target": "tests/admin_utils/test_logentry.py:LogEntryTests",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/test_logentry.py",
      "target": "tests/admin_utils/models.py:Article",
      "type": "imports"
    },
    {
      "source": "tests/admin_utils/test_logentry.py",
      "target": "tests/admin_utils/models.py:ArticleProxy",
      "type": "imports"
    },
    {
      "source": "tests/admin_utils/test_logentry.py",
      "target": "tests/admin_utils/models.py:Site",
      "type": "imports"
    },
    {
      "source": "tests/admin_utils/test_logentry.py:LogEntryTests",
      "target": "tests/admin_utils/test_logentry.py:LogEntryTests.setUp",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/test_logentry.py:LogEntryTests",
      "target": "tests/admin_utils/test_logentry.py:LogEntryTests.test_logentry_save",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/test_logentry.py:LogEntryTests",
      "target": "tests/admin_utils/test_logentry.py:LogEntryTests.test_logentry_change_message",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/test_logentry.py:LogEntryTests",
      "target": "tests/admin_utils/test_logentry.py:LogEntryTests.test_logentry_change_message_not_json",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/test_logentry.py:LogEntryTests",
      "target": "tests/admin_utils/test_logentry.py:LogEntryTests.test_logentry_change_message_localized_datetime_input",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/test_logentry.py:LogEntryTests",
      "target": "tests/admin_utils/test_logentry.py:LogEntryTests.test_logentry_change_message_formsets",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/test_logentry.py:LogEntryTests",
      "target": "tests/admin_utils/test_logentry.py:LogEntryTests.test_logentry_get_edited_object",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/test_logentry.py:LogEntryTests",
      "target": "tests/admin_utils/test_logentry.py:LogEntryTests.test_logentry_get_admin_url",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/test_logentry.py:LogEntryTests",
      "target": "tests/admin_utils/test_logentry.py:LogEntryTests.test_logentry_unicode",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/test_logentry.py:LogEntryTests",
      "target": "tests/admin_utils/test_logentry.py:LogEntryTests.test_logentry_repr",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/test_logentry.py:LogEntryTests",
      "target": "tests/admin_utils/test_logentry.py:LogEntryTests.test_log_action",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/test_logentry.py:LogEntryTests",
      "target": "tests/admin_utils/test_logentry.py:LogEntryTests.test_recentactions_without_content_type",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/test_logentry.py:LogEntryTests",
      "target": "tests/admin_utils/test_logentry.py:LogEntryTests.test_proxy_model_content_type_is_used_for_log_entries",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/test_logentry.py:LogEntryTests",
      "target": "tests/admin_utils/test_logentry.py:LogEntryTests.test_action_flag_choices",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/models.py",
      "target": "tests/admin_utils/models.py:Site",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/models.py",
      "target": "tests/admin_utils/models.py:Article",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/models.py",
      "target": "tests/admin_utils/models.py:ArticleProxy",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/models.py",
      "target": "tests/admin_utils/models.py:Count",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/models.py",
      "target": "tests/admin_utils/models.py:Event",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/models.py",
      "target": "tests/admin_utils/models.py:Location",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/models.py",
      "target": "tests/admin_utils/models.py:Guest",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/models.py",
      "target": "tests/admin_utils/models.py:EventGuide",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/models.py",
      "target": "tests/admin_utils/models.py:Vehicle",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/models.py",
      "target": "tests/admin_utils/models.py:VehicleMixin",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/models.py",
      "target": "tests/admin_utils/models.py:Car",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/models.py:Site",
      "target": "tests/admin_utils/models.py:Site.__str__",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/models.py:Article",
      "target": "tests/admin_utils/models.py:Article.__str__",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/models.py:Article",
      "target": "tests/admin_utils/models.py:Article.test_from_model",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/models.py:Article",
      "target": "tests/admin_utils/models.py:Article.test_from_model_with_override",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/models.py:ArticleProxy",
      "target": "tests/admin_utils/models.py:ArticleProxy.Meta",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/models.py:ArticleProxy",
      "target": "tests/admin_utils/models.py:Article",
      "type": "inherits"
    },
    {
      "source": "tests/admin_utils/models.py:Count",
      "target": "tests/admin_utils/models.py:Count.__str__",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/models.py:Guest",
      "target": "tests/admin_utils/models.py:Guest.Meta",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/models.py:VehicleMixin",
      "target": "tests/admin_utils/models.py:VehicleMixin.Meta",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/models.py:VehicleMixin",
      "target": "tests/admin_utils/models.py:Vehicle",
      "type": "inherits"
    },
    {
      "source": "tests/admin_utils/models.py:Car",
      "target": "tests/admin_utils/models.py:VehicleMixin",
      "type": "inherits"
    },
    {
      "source": "tests/admin_utils/admin.py",
      "target": "tests/admin_utils/admin.py:ArticleInline",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/admin.py",
      "target": "tests/admin_utils/admin.py:SiteAdmin",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/admin.py",
      "target": "tests/admin_utils/models.py:Article",
      "type": "imports"
    },
    {
      "source": "tests/admin_utils/admin.py",
      "target": "tests/admin_utils/models.py:ArticleProxy",
      "type": "imports"
    },
    {
      "source": "tests/admin_utils/admin.py",
      "target": "tests/admin_utils/models.py:Site",
      "type": "imports"
    },
    {
      "source": "tests/admin_utils/tests.py",
      "target": "tests/admin_utils/tests.py:NestedObjectsTests",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py",
      "target": "tests/admin_utils/tests.py:UtilsTests",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py",
      "target": "tests/admin_utils/models.py:Article",
      "type": "imports"
    },
    {
      "source": "tests/admin_utils/tests.py",
      "target": "tests/admin_utils/models.py:Car",
      "type": "imports"
    },
    {
      "source": "tests/admin_utils/tests.py",
      "target": "tests/admin_utils/models.py:Count",
      "type": "imports"
    },
    {
      "source": "tests/admin_utils/tests.py",
      "target": "tests/admin_utils/models.py:Event",
      "type": "imports"
    },
    {
      "source": "tests/admin_utils/tests.py",
      "target": "tests/admin_utils/models.py:EventGuide",
      "type": "imports"
    },
    {
      "source": "tests/admin_utils/tests.py",
      "target": "tests/admin_utils/models.py:Location",
      "type": "imports"
    },
    {
      "source": "tests/admin_utils/tests.py",
      "target": "tests/admin_utils/models.py:Site",
      "type": "imports"
    },
    {
      "source": "tests/admin_utils/tests.py",
      "target": "tests/admin_utils/models.py:Vehicle",
      "type": "imports"
    },
    {
      "source": "tests/admin_utils/tests.py:NestedObjectsTests",
      "target": "tests/admin_utils/tests.py:NestedObjectsTests.setUp",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:NestedObjectsTests",
      "target": "tests/admin_utils/tests.py:NestedObjectsTests._check",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:NestedObjectsTests",
      "target": "tests/admin_utils/tests.py:NestedObjectsTests._connect",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:NestedObjectsTests",
      "target": "tests/admin_utils/tests.py:NestedObjectsTests._collect",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:NestedObjectsTests",
      "target": "tests/admin_utils/tests.py:NestedObjectsTests.test_unrelated_roots",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:NestedObjectsTests",
      "target": "tests/admin_utils/tests.py:NestedObjectsTests.test_siblings",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:NestedObjectsTests",
      "target": "tests/admin_utils/tests.py:NestedObjectsTests.test_non_added_parent",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:NestedObjectsTests",
      "target": "tests/admin_utils/tests.py:NestedObjectsTests.test_cyclic",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:NestedObjectsTests",
      "target": "tests/admin_utils/tests.py:NestedObjectsTests.test_queries",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:NestedObjectsTests",
      "target": "tests/admin_utils/tests.py:NestedObjectsTests.test_on_delete_do_nothing",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:NestedObjectsTests",
      "target": "tests/admin_utils/tests.py:NestedObjectsTests.test_relation_on_abstract",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:NestedObjectsTests.test_unrelated_roots",
      "target": "tests/admin_utils/tests.py:NestedObjectsTests._connect",
      "type": "invokes"
    },
    {
      "source": "tests/admin_utils/tests.py:NestedObjectsTests.test_unrelated_roots",
      "target": "tests/admin_utils/tests.py:NestedObjectsTests._collect",
      "type": "invokes"
    },
    {
      "source": "tests/admin_utils/tests.py:NestedObjectsTests.test_unrelated_roots",
      "target": "tests/admin_utils/tests.py:NestedObjectsTests._check",
      "type": "invokes"
    },
    {
      "source": "tests/admin_utils/tests.py:NestedObjectsTests.test_siblings",
      "target": "tests/admin_utils/tests.py:NestedObjectsTests._connect",
      "type": "invokes"
    },
    {
      "source": "tests/admin_utils/tests.py:NestedObjectsTests.test_siblings",
      "target": "tests/admin_utils/tests.py:NestedObjectsTests._collect",
      "type": "invokes"
    },
    {
      "source": "tests/admin_utils/tests.py:NestedObjectsTests.test_siblings",
      "target": "tests/admin_utils/tests.py:NestedObjectsTests._check",
      "type": "invokes"
    },
    {
      "source": "tests/admin_utils/tests.py:NestedObjectsTests.test_non_added_parent",
      "target": "tests/admin_utils/tests.py:NestedObjectsTests._connect",
      "type": "invokes"
    },
    {
      "source": "tests/admin_utils/tests.py:NestedObjectsTests.test_non_added_parent",
      "target": "tests/admin_utils/tests.py:NestedObjectsTests._collect",
      "type": "invokes"
    },
    {
      "source": "tests/admin_utils/tests.py:NestedObjectsTests.test_non_added_parent",
      "target": "tests/admin_utils/tests.py:NestedObjectsTests._check",
      "type": "invokes"
    },
    {
      "source": "tests/admin_utils/tests.py:NestedObjectsTests.test_cyclic",
      "target": "tests/admin_utils/tests.py:NestedObjectsTests._connect",
      "type": "invokes"
    },
    {
      "source": "tests/admin_utils/tests.py:NestedObjectsTests.test_cyclic",
      "target": "tests/admin_utils/tests.py:NestedObjectsTests._collect",
      "type": "invokes"
    },
    {
      "source": "tests/admin_utils/tests.py:NestedObjectsTests.test_cyclic",
      "target": "tests/admin_utils/tests.py:NestedObjectsTests._check",
      "type": "invokes"
    },
    {
      "source": "tests/admin_utils/tests.py:NestedObjectsTests.test_queries",
      "target": "tests/admin_utils/tests.py:NestedObjectsTests._connect",
      "type": "invokes"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_values_from_lookup_field",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_null_display_for_field",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_number_formats_display_for_field",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_number_formats_with_thousand_separator_display_for_field",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_list_display_for_value",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_list_display_for_value_boolean",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_label_for_field",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_label_for_field_form_argument",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_label_for_property",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_related_name",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_safestring_in_field_label",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_flatten",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_flatten_fieldsets",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_quote",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests.test_values_from_lookup_field",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_values_from_lookup_field.MockModelAdmin",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests.test_values_from_lookup_field",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_values_from_lookup_field.MockModelAdmin",
      "type": "invokes"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests.test_values_from_lookup_field",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_values_from_lookup_field.simple_function",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests.test_values_from_lookup_field",
      "target": "tests/admin_utils/models.py:Site",
      "type": "invokes"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests.test_values_from_lookup_field",
      "target": "tests/admin_utils/models.py:Article",
      "type": "invokes"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests.test_values_from_lookup_field",
      "target": "tests/admin_utils/models.py:Article.test_from_model",
      "type": "invokes"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests.test_values_from_lookup_field.MockModelAdmin",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_values_from_lookup_field.MockModelAdmin.get_admin_value",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests.test_label_for_field",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_label_for_field.test_callable",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests.test_label_for_field",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_label_for_field.MockModelAdmin",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests.test_label_for_field.MockModelAdmin",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_label_for_field.MockModelAdmin.test_from_model",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests.test_label_for_field_form_argument",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_label_for_field_form_argument.ArticleForm",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests.test_label_for_field_form_argument",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_label_for_field_form_argument.ArticleForm",
      "type": "invokes"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests.test_label_for_field_form_argument.ArticleForm",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_label_for_field_form_argument.ArticleForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests.test_label_for_property",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_label_for_property.MockModelAdmin",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests.test_label_for_property.MockModelAdmin",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_label_for_property.MockModelAdmin.my_property",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests.test_safestring_in_field_label",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_safestring_in_field_label.MyForm",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests.test_safestring_in_field_label",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_safestring_in_field_label.MyForm",
      "type": "contains"
    },
    {
      "source": "tests/admin_utils/tests.py:UtilsTests.test_safestring_in_field_label",
      "target": "tests/admin_utils/tests.py:UtilsTests.test_safestring_in_field_label.MyForm",
      "type": "invokes"
    },
    {
      "source": "tests/admin_utils/urls.py",
      "target": "tests/admin_utils/admin.py",
      "type": "imports"
    },
    {
      "source": "tests/unmanaged_models",
      "target": "tests/unmanaged_models/models.py",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models",
      "target": "tests/unmanaged_models/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models",
      "target": "tests/unmanaged_models/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py",
      "target": "tests/unmanaged_models/models.py:A01",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py",
      "target": "tests/unmanaged_models/models.py:B01",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py",
      "target": "tests/unmanaged_models/models.py:C01",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py",
      "target": "tests/unmanaged_models/models.py:A02",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py",
      "target": "tests/unmanaged_models/models.py:B02",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py",
      "target": "tests/unmanaged_models/models.py:C02",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py",
      "target": "tests/unmanaged_models/models.py:Intermediate",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py",
      "target": "tests/unmanaged_models/models.py:Proxy1",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py",
      "target": "tests/unmanaged_models/models.py:Proxy2",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py",
      "target": "tests/unmanaged_models/models.py:Unmanaged1",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py",
      "target": "tests/unmanaged_models/models.py:Unmanaged2",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py",
      "target": "tests/unmanaged_models/models.py:Managed1",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py:A01",
      "target": "tests/unmanaged_models/models.py:A01.Meta",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py:A01",
      "target": "tests/unmanaged_models/models.py:A01.__str__",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py:B01",
      "target": "tests/unmanaged_models/models.py:B01.Meta",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py:B01",
      "target": "tests/unmanaged_models/models.py:B01.__str__",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py:C01",
      "target": "tests/unmanaged_models/models.py:C01.Meta",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py:C01",
      "target": "tests/unmanaged_models/models.py:C01.__str__",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py:A02",
      "target": "tests/unmanaged_models/models.py:A02.Meta",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py:A02",
      "target": "tests/unmanaged_models/models.py:A02.__str__",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py:B02",
      "target": "tests/unmanaged_models/models.py:B02.Meta",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py:B02",
      "target": "tests/unmanaged_models/models.py:B02.__str__",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py:C02",
      "target": "tests/unmanaged_models/models.py:C02.Meta",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py:C02",
      "target": "tests/unmanaged_models/models.py:C02.__str__",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py:Intermediate",
      "target": "tests/unmanaged_models/models.py:Intermediate.Meta",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py:Proxy1",
      "target": "tests/unmanaged_models/models.py:Proxy1.Meta",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py:Proxy2",
      "target": "tests/unmanaged_models/models.py:Proxy2.Meta",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py:Unmanaged1",
      "target": "tests/unmanaged_models/models.py:Unmanaged1.Meta",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/models.py:Unmanaged2",
      "target": "tests/unmanaged_models/models.py:Unmanaged2.Meta",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/tests.py",
      "target": "tests/unmanaged_models/tests.py:SimpleTests",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/tests.py",
      "target": "tests/unmanaged_models/tests.py:ManyToManyUnmanagedTests",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/tests.py",
      "target": "tests/unmanaged_models/models.py:A01",
      "type": "imports"
    },
    {
      "source": "tests/unmanaged_models/tests.py",
      "target": "tests/unmanaged_models/models.py:A02",
      "type": "imports"
    },
    {
      "source": "tests/unmanaged_models/tests.py",
      "target": "tests/unmanaged_models/models.py:B01",
      "type": "imports"
    },
    {
      "source": "tests/unmanaged_models/tests.py",
      "target": "tests/unmanaged_models/models.py:B02",
      "type": "imports"
    },
    {
      "source": "tests/unmanaged_models/tests.py",
      "target": "tests/unmanaged_models/models.py:C01",
      "type": "imports"
    },
    {
      "source": "tests/unmanaged_models/tests.py",
      "target": "tests/unmanaged_models/models.py:C02",
      "type": "imports"
    },
    {
      "source": "tests/unmanaged_models/tests.py",
      "target": "tests/unmanaged_models/models.py:Managed1",
      "type": "imports"
    },
    {
      "source": "tests/unmanaged_models/tests.py",
      "target": "tests/unmanaged_models/models.py:Unmanaged2",
      "type": "imports"
    },
    {
      "source": "tests/unmanaged_models/tests.py:SimpleTests",
      "target": "tests/unmanaged_models/tests.py:SimpleTests.test_simple",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/tests.py:ManyToManyUnmanagedTests",
      "target": "tests/unmanaged_models/tests.py:ManyToManyUnmanagedTests.test_many_to_many_between_unmanaged",
      "type": "contains"
    },
    {
      "source": "tests/unmanaged_models/tests.py:ManyToManyUnmanagedTests",
      "target": "tests/unmanaged_models/tests.py:ManyToManyUnmanagedTests.test_many_to_many_between_unmanaged_and_managed",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests",
      "target": "tests/flatpages_tests/test_forms.py",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests",
      "target": "tests/flatpages_tests/test_csrf.py",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests",
      "target": "tests/flatpages_tests/test_middleware.py",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests",
      "target": "tests/flatpages_tests/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests",
      "target": "tests/flatpages_tests/test_views.py",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests",
      "target": "tests/flatpages_tests/test_sitemaps.py",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests",
      "target": "tests/flatpages_tests/settings.py",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests",
      "target": "tests/flatpages_tests/test_models.py",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests",
      "target": "tests/flatpages_tests/urls.py",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests",
      "target": "tests/flatpages_tests/test_templatetags.py",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_forms.py",
      "target": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests",
      "target": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests",
      "target": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests.setUp",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests",
      "target": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests.test_flatpage_admin_form_url_validation",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests",
      "target": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests.test_flatpage_requires_leading_slash",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests",
      "target": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests.test_flatpage_requires_trailing_slash_with_append_slash",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests",
      "target": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests.test_flatpage_doesnt_requires_trailing_slash_without_append_slash",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests",
      "target": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests.test_flatpage_admin_form_url_uniqueness_validation",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests",
      "target": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests.test_flatpage_admin_form_edit",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests",
      "target": "tests/flatpages_tests/test_forms.py:FlatpageAdminFormTests.test_flatpage_nosites",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_csrf.py",
      "target": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_csrf.py",
      "target": "tests/flatpages_tests/settings.py",
      "type": "imports"
    },
    {
      "source": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests",
      "target": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests",
      "target": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests.setUp",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests",
      "target": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests.test_view_flatpage",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests",
      "target": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests.test_view_non_existent_flatpage",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests",
      "target": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests.test_view_authenticated_flatpage",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests",
      "target": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests.test_fallback_flatpage",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests",
      "target": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests.test_fallback_non_existent_flatpage",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests",
      "target": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests.test_post_view_flatpage",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests",
      "target": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests.test_post_fallback_flatpage",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests",
      "target": "tests/flatpages_tests/test_csrf.py:FlatpageCSRFTests.test_post_unknown_page",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_middleware.py",
      "target": "tests/flatpages_tests/test_middleware.py:TestDataMixin",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_middleware.py",
      "target": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareTests",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_middleware.py",
      "target": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareAppendSlashTests",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_middleware.py",
      "target": "tests/flatpages_tests/settings.py",
      "type": "imports"
    },
    {
      "source": "tests/flatpages_tests/test_middleware.py:TestDataMixin",
      "target": "tests/flatpages_tests/test_middleware.py:TestDataMixin.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareTests",
      "target": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareTests.test_view_flatpage",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareTests",
      "target": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareTests.test_view_non_existent_flatpage",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareTests",
      "target": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareTests.test_view_authenticated_flatpage",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareTests",
      "target": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareTests.test_fallback_flatpage",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareTests",
      "target": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareTests.test_fallback_non_existent_flatpage",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareTests",
      "target": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareTests.test_fallback_authenticated_flatpage",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareTests",
      "target": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareTests.test_fallback_flatpage_special_chars",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareTests",
      "target": "tests/flatpages_tests/test_middleware.py:TestDataMixin",
      "type": "inherits"
    },
    {
      "source": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareAppendSlashTests",
      "target": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareAppendSlashTests.test_redirect_view_flatpage",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareAppendSlashTests",
      "target": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareAppendSlashTests.test_redirect_view_non_existent_flatpage",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareAppendSlashTests",
      "target": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareAppendSlashTests.test_redirect_fallback_flatpage",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareAppendSlashTests",
      "target": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareAppendSlashTests.test_redirect_fallback_non_existent_flatpage",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareAppendSlashTests",
      "target": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareAppendSlashTests.test_redirect_fallback_flatpage_special_chars",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareAppendSlashTests",
      "target": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareAppendSlashTests.test_redirect_fallback_flatpage_root",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_middleware.py:FlatpageMiddlewareAppendSlashTests",
      "target": "tests/flatpages_tests/test_middleware.py:TestDataMixin",
      "type": "inherits"
    },
    {
      "source": "tests/flatpages_tests/test_views.py",
      "target": "tests/flatpages_tests/test_views.py:TestDataMixin",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_views.py",
      "target": "tests/flatpages_tests/test_views.py:FlatpageViewTests",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_views.py",
      "target": "tests/flatpages_tests/test_views.py:FlatpageViewAppendSlashTests",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_views.py",
      "target": "tests/flatpages_tests/settings.py",
      "type": "imports"
    },
    {
      "source": "tests/flatpages_tests/test_views.py:TestDataMixin",
      "target": "tests/flatpages_tests/test_views.py:TestDataMixin.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_views.py:FlatpageViewTests",
      "target": "tests/flatpages_tests/test_views.py:FlatpageViewTests.test_view_flatpage",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_views.py:FlatpageViewTests",
      "target": "tests/flatpages_tests/test_views.py:FlatpageViewTests.test_view_non_existent_flatpage",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_views.py:FlatpageViewTests",
      "target": "tests/flatpages_tests/test_views.py:FlatpageViewTests.test_view_authenticated_flatpage",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_views.py:FlatpageViewTests",
      "target": "tests/flatpages_tests/test_views.py:FlatpageViewTests.test_fallback_flatpage",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_views.py:FlatpageViewTests",
      "target": "tests/flatpages_tests/test_views.py:FlatpageViewTests.test_fallback_non_existent_flatpage",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_views.py:FlatpageViewTests",
      "target": "tests/flatpages_tests/test_views.py:FlatpageViewTests.test_view_flatpage_special_chars",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_views.py:FlatpageViewTests",
      "target": "tests/flatpages_tests/test_views.py:TestDataMixin",
      "type": "inherits"
    },
    {
      "source": "tests/flatpages_tests/test_views.py:FlatpageViewAppendSlashTests",
      "target": "tests/flatpages_tests/test_views.py:FlatpageViewAppendSlashTests.test_redirect_view_flatpage",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_views.py:FlatpageViewAppendSlashTests",
      "target": "tests/flatpages_tests/test_views.py:FlatpageViewAppendSlashTests.test_redirect_view_non_existent_flatpage",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_views.py:FlatpageViewAppendSlashTests",
      "target": "tests/flatpages_tests/test_views.py:FlatpageViewAppendSlashTests.test_redirect_fallback_flatpage",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_views.py:FlatpageViewAppendSlashTests",
      "target": "tests/flatpages_tests/test_views.py:FlatpageViewAppendSlashTests.test_redirect_fallback_non_existent_flatpage",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_views.py:FlatpageViewAppendSlashTests",
      "target": "tests/flatpages_tests/test_views.py:FlatpageViewAppendSlashTests.test_redirect_view_flatpage_special_chars",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_views.py:FlatpageViewAppendSlashTests",
      "target": "tests/flatpages_tests/test_views.py:TestDataMixin",
      "type": "inherits"
    },
    {
      "source": "tests/flatpages_tests/test_sitemaps.py",
      "target": "tests/flatpages_tests/test_sitemaps.py:FlatpagesSitemapTests",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_sitemaps.py:FlatpagesSitemapTests",
      "target": "tests/flatpages_tests/test_sitemaps.py:FlatpagesSitemapTests.setUpClass",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_sitemaps.py:FlatpagesSitemapTests",
      "target": "tests/flatpages_tests/test_sitemaps.py:FlatpagesSitemapTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_sitemaps.py:FlatpagesSitemapTests",
      "target": "tests/flatpages_tests/test_sitemaps.py:FlatpagesSitemapTests.test_flatpage_sitemap",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_models.py",
      "target": "tests/flatpages_tests/test_models.py:FlatpageModelTests",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_models.py:FlatpageModelTests",
      "target": "tests/flatpages_tests/test_models.py:FlatpageModelTests.setUp",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_models.py:FlatpageModelTests",
      "target": "tests/flatpages_tests/test_models.py:FlatpageModelTests.test_get_absolute_url_urlencodes",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_models.py:FlatpageModelTests",
      "target": "tests/flatpages_tests/test_models.py:FlatpageModelTests.test_get_absolute_url_honors_script_prefix",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_models.py:FlatpageModelTests",
      "target": "tests/flatpages_tests/test_models.py:FlatpageModelTests.test_str",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_templatetags.py",
      "target": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests",
      "target": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests",
      "target": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests.test_get_flatpages_tag",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests",
      "target": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests.test_get_flatpages_tag_for_anon_user",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests",
      "target": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests.test_get_flatpages_tag_for_user",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests",
      "target": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests.test_get_flatpages_with_prefix",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests",
      "target": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests.test_get_flatpages_with_prefix_for_anon_user",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests",
      "target": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests.test_get_flatpages_with_prefix_for_user",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests",
      "target": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests.test_get_flatpages_with_variable_prefix",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests",
      "target": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests.test_parsing_errors",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests.test_parsing_errors",
      "target": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests.test_parsing_errors.render",
      "type": "contains"
    },
    {
      "source": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests.test_parsing_errors",
      "target": "tests/flatpages_tests/test_templatetags.py:FlatpageTemplateTagTests.test_parsing_errors.render",
      "type": "invokes"
    },
    {
      "source": "tests/pagination",
      "target": "tests/pagination/custom.py",
      "type": "contains"
    },
    {
      "source": "tests/pagination",
      "target": "tests/pagination/models.py",
      "type": "contains"
    },
    {
      "source": "tests/pagination",
      "target": "tests/pagination/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/pagination",
      "target": "tests/pagination/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/pagination/custom.py",
      "target": "tests/pagination/custom.py:ValidAdjacentNumsPage",
      "type": "contains"
    },
    {
      "source": "tests/pagination/custom.py",
      "target": "tests/pagination/custom.py:ValidAdjacentNumsPaginator",
      "type": "contains"
    },
    {
      "source": "tests/pagination/custom.py:ValidAdjacentNumsPage",
      "target": "tests/pagination/custom.py:ValidAdjacentNumsPage.next_page_number",
      "type": "contains"
    },
    {
      "source": "tests/pagination/custom.py:ValidAdjacentNumsPage",
      "target": "tests/pagination/custom.py:ValidAdjacentNumsPage.previous_page_number",
      "type": "contains"
    },
    {
      "source": "tests/pagination/custom.py:ValidAdjacentNumsPaginator",
      "target": "tests/pagination/custom.py:ValidAdjacentNumsPaginator._get_page",
      "type": "contains"
    },
    {
      "source": "tests/pagination/custom.py:ValidAdjacentNumsPaginator._get_page",
      "target": "tests/pagination/custom.py:ValidAdjacentNumsPage",
      "type": "invokes"
    },
    {
      "source": "tests/pagination/models.py",
      "target": "tests/pagination/models.py:Article",
      "type": "contains"
    },
    {
      "source": "tests/pagination/models.py:Article",
      "target": "tests/pagination/models.py:Article.__str__",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py",
      "target": "tests/pagination/tests.py:PaginationTests",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py",
      "target": "tests/pagination/tests.py:ModelPaginationTests",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py",
      "target": "tests/pagination/custom.py:ValidAdjacentNumsPaginator",
      "type": "imports"
    },
    {
      "source": "tests/pagination/tests.py",
      "target": "tests/pagination/models.py:Article",
      "type": "imports"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests",
      "target": "tests/pagination/tests.py:PaginationTests.check_paginator",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests",
      "target": "tests/pagination/tests.py:PaginationTests.check_attribute",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests",
      "target": "tests/pagination/tests.py:PaginationTests.test_paginator",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests",
      "target": "tests/pagination/tests.py:PaginationTests.test_invalid_page_number",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests",
      "target": "tests/pagination/tests.py:PaginationTests.test_float_integer_page",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests",
      "target": "tests/pagination/tests.py:PaginationTests.test_no_content_allow_empty_first_page",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests",
      "target": "tests/pagination/tests.py:PaginationTests.test_paginate_misc_classes",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests",
      "target": "tests/pagination/tests.py:PaginationTests.test_count_does_not_silence_attribute_error",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests",
      "target": "tests/pagination/tests.py:PaginationTests.test_count_does_not_silence_type_error",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests",
      "target": "tests/pagination/tests.py:PaginationTests.check_indexes",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests",
      "target": "tests/pagination/tests.py:PaginationTests.test_page_indexes",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests",
      "target": "tests/pagination/tests.py:PaginationTests.test_page_sequence",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests",
      "target": "tests/pagination/tests.py:PaginationTests.test_get_page_hook",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests",
      "target": "tests/pagination/tests.py:PaginationTests.test_page_range_iterator",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests",
      "target": "tests/pagination/tests.py:PaginationTests.test_get_page",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests",
      "target": "tests/pagination/tests.py:PaginationTests.test_get_page_empty_object_list",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests",
      "target": "tests/pagination/tests.py:PaginationTests.test_get_page_empty_object_list_and_allow_empty_first_page_false",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests",
      "target": "tests/pagination/tests.py:PaginationTests.test_querysetpaginator_deprecation",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests.check_paginator",
      "target": "tests/pagination/tests.py:PaginationTests.check_attribute",
      "type": "invokes"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests.test_paginator",
      "target": "tests/pagination/tests.py:PaginationTests.check_paginator",
      "type": "invokes"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests.test_paginate_misc_classes",
      "target": "tests/pagination/tests.py:PaginationTests.test_paginate_misc_classes.CountContainer",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests.test_paginate_misc_classes",
      "target": "tests/pagination/tests.py:PaginationTests.test_paginate_misc_classes.CountContainer",
      "type": "invokes"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests.test_paginate_misc_classes",
      "target": "tests/pagination/tests.py:PaginationTests.test_paginate_misc_classes.LenContainer",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests.test_paginate_misc_classes",
      "target": "tests/pagination/tests.py:PaginationTests.test_paginate_misc_classes.LenContainer",
      "type": "invokes"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests.test_paginate_misc_classes.CountContainer",
      "target": "tests/pagination/tests.py:PaginationTests.test_paginate_misc_classes.CountContainer.count",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests.test_paginate_misc_classes.LenContainer",
      "target": "tests/pagination/tests.py:PaginationTests.test_paginate_misc_classes.LenContainer.__len__",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests.test_count_does_not_silence_attribute_error",
      "target": "tests/pagination/tests.py:PaginationTests.test_count_does_not_silence_attribute_error.AttributeErrorContainer",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests.test_count_does_not_silence_attribute_error",
      "target": "tests/pagination/tests.py:PaginationTests.test_count_does_not_silence_attribute_error.AttributeErrorContainer",
      "type": "invokes"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests.test_count_does_not_silence_attribute_error",
      "target": "tests/pagination/tests.py:PaginationTests.test_count_does_not_silence_attribute_error.AttributeErrorContainer.count",
      "type": "invokes"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests.test_count_does_not_silence_attribute_error.AttributeErrorContainer",
      "target": "tests/pagination/tests.py:PaginationTests.test_count_does_not_silence_attribute_error.AttributeErrorContainer.count",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests.test_count_does_not_silence_type_error",
      "target": "tests/pagination/tests.py:PaginationTests.test_count_does_not_silence_type_error.TypeErrorContainer",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests.test_count_does_not_silence_type_error",
      "target": "tests/pagination/tests.py:PaginationTests.test_count_does_not_silence_type_error.TypeErrorContainer",
      "type": "invokes"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests.test_count_does_not_silence_type_error",
      "target": "tests/pagination/tests.py:PaginationTests.test_count_does_not_silence_type_error.TypeErrorContainer.count",
      "type": "invokes"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests.test_count_does_not_silence_type_error.TypeErrorContainer",
      "target": "tests/pagination/tests.py:PaginationTests.test_count_does_not_silence_type_error.TypeErrorContainer.count",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests.test_page_indexes",
      "target": "tests/pagination/tests.py:PaginationTests.check_indexes",
      "type": "invokes"
    },
    {
      "source": "tests/pagination/tests.py:PaginationTests.test_get_page_hook",
      "target": "tests/pagination/custom.py:ValidAdjacentNumsPaginator",
      "type": "invokes"
    },
    {
      "source": "tests/pagination/tests.py:ModelPaginationTests",
      "target": "tests/pagination/tests.py:ModelPaginationTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:ModelPaginationTests",
      "target": "tests/pagination/tests.py:ModelPaginationTests.test_first_page",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:ModelPaginationTests",
      "target": "tests/pagination/tests.py:ModelPaginationTests.test_last_page",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:ModelPaginationTests",
      "target": "tests/pagination/tests.py:ModelPaginationTests.test_page_getitem",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:ModelPaginationTests",
      "target": "tests/pagination/tests.py:ModelPaginationTests.test_paginating_unordered_queryset_raises_warning",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:ModelPaginationTests",
      "target": "tests/pagination/tests.py:ModelPaginationTests.test_paginating_empty_queryset_does_not_warn",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:ModelPaginationTests",
      "target": "tests/pagination/tests.py:ModelPaginationTests.test_paginating_unordered_object_list_raises_warning",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:ModelPaginationTests.setUpTestData",
      "target": "tests/pagination/models.py:Article",
      "type": "invokes"
    },
    {
      "source": "tests/pagination/tests.py:ModelPaginationTests.test_paginating_unordered_object_list_raises_warning",
      "target": "tests/pagination/tests.py:ModelPaginationTests.test_paginating_unordered_object_list_raises_warning.ObjectList",
      "type": "contains"
    },
    {
      "source": "tests/pagination/tests.py:ModelPaginationTests.test_paginating_unordered_object_list_raises_warning",
      "target": "tests/pagination/tests.py:ModelPaginationTests.test_paginating_unordered_object_list_raises_warning.ObjectList",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/test_forms.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/test_basic.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/test_decorators.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/test_handlers.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/test_middleware.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/test_signals.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/urls_admin.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/test_templates.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/client.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/test_context_processors.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/test_management.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/test_migrations.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/urls_custom_user_admin.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/test_views.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/test_hashers.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/test_validators.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/test_mixins.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/test_auth_backends.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/test_remote_user.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/settings.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/test_models.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/test_checks.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/urls.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/backend_alias.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/test_remote_user_deprecation.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/test_admin_multidb.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/test_tokens.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests",
      "target": "tests/auth_tests/models",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py",
      "target": "tests/auth_tests/test_forms.py:TestDataMixin",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py",
      "target": "tests/auth_tests/test_forms.py:UserCreationFormTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py",
      "target": "tests/auth_tests/test_forms.py:SetPasswordFormTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py",
      "target": "tests/auth_tests/test_forms.py:PasswordChangeFormTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py",
      "target": "tests/auth_tests/test_forms.py:UserChangeFormTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py",
      "target": "tests/auth_tests/test_forms.py:PasswordResetFormTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py",
      "target": "tests/auth_tests/test_forms.py:ReadOnlyPasswordHashTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py",
      "target": "tests/auth_tests/test_forms.py:AdminPasswordChangeFormTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_forms.py",
      "target": "tests/auth_tests/models/custom_user.py:CustomUserWithoutIsActiveField",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_forms.py",
      "target": "tests/auth_tests/models/custom_user.py:ExtensionUser",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_forms.py",
      "target": "tests/auth_tests/models/with_custom_email_field.py:CustomEmailField",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_forms.py",
      "target": "tests/auth_tests/models/with_integer_username.py:IntegerUsernameUser",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_forms.py",
      "target": "tests/auth_tests/settings.py",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_forms.py:TestDataMixin",
      "target": "tests/auth_tests/test_forms.py:TestDataMixin.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserCreationFormTest",
      "target": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_user_already_exists",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserCreationFormTest",
      "target": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_invalid_data",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserCreationFormTest",
      "target": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_password_verification",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserCreationFormTest",
      "target": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_both_passwords",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserCreationFormTest",
      "target": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_success",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserCreationFormTest",
      "target": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_unicode_username",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserCreationFormTest",
      "target": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_normalize_username",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserCreationFormTest",
      "target": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_duplicate_normalized_unicode",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserCreationFormTest",
      "target": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_validates_password",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserCreationFormTest",
      "target": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserCreationFormTest",
      "target": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form_with_different_username_field",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserCreationFormTest",
      "target": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form_hidden_username_field",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserCreationFormTest",
      "target": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_password_whitespace_not_stripped",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserCreationFormTest",
      "target": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_password_help_text",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserCreationFormTest",
      "target": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_user_create_form_validates_password_with_all_data",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserCreationFormTest",
      "target": "tests/auth_tests/test_forms.py:TestDataMixin",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form",
      "target": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form.CustomUserCreationForm",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form",
      "target": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form.CustomUserCreationForm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form.CustomUserCreationForm",
      "target": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form.CustomUserCreationForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form_with_different_username_field",
      "target": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form_with_different_username_field.CustomUserCreationForm",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form_with_different_username_field",
      "target": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form_with_different_username_field.CustomUserCreationForm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form_with_different_username_field.CustomUserCreationForm",
      "target": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form_with_different_username_field.CustomUserCreationForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form_hidden_username_field",
      "target": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form_hidden_username_field.CustomUserCreationForm",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form_hidden_username_field",
      "target": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form_hidden_username_field.CustomUserCreationForm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form_hidden_username_field.CustomUserCreationForm",
      "target": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_custom_form_hidden_username_field.CustomUserCreationForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_user_create_form_validates_password_with_all_data",
      "target": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_user_create_form_validates_password_with_all_data.CustomUserCreationForm",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_user_create_form_validates_password_with_all_data",
      "target": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_user_create_form_validates_password_with_all_data.CustomUserCreationForm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_user_create_form_validates_password_with_all_data.CustomUserCreationForm",
      "target": "tests/auth_tests/test_forms.py:UserCreationFormTest.test_user_create_form_validates_password_with_all_data.CustomUserCreationForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_invalid_username",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_inactive_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_inactive_user_incorrect_password",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_login_failed",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_inactive_user_i18n",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_custom_login_allowed_policy",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_success",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_unicode_username",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_username_field_max_length_matches_user_model",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_username_field_max_length_defaults_to_254",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_username_field_label",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_username_field_label_not_set",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_username_field_label_empty_string",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_password_whitespace_not_stripped",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_integer_username",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_get_invalid_login_error",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest",
      "target": "tests/auth_tests/test_forms.py:TestDataMixin",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_login_failed",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_login_failed.signal_handler",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_custom_login_allowed_policy",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_custom_login_allowed_policy.AuthenticationFormWithInactiveUsersOkay",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_custom_login_allowed_policy",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_custom_login_allowed_policy.AuthenticationFormWithInactiveUsersOkay",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_custom_login_allowed_policy",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_custom_login_allowed_policy.PickyAuthenticationForm",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_custom_login_allowed_policy",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_custom_login_allowed_policy.PickyAuthenticationForm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_custom_login_allowed_policy.AuthenticationFormWithInactiveUsersOkay",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_custom_login_allowed_policy.AuthenticationFormWithInactiveUsersOkay.confirm_login_allowed",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_custom_login_allowed_policy.PickyAuthenticationForm",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_custom_login_allowed_policy.PickyAuthenticationForm.confirm_login_allowed",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_username_field_label",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_username_field_label.CustomAuthenticationForm",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_username_field_label",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_username_field_label.CustomAuthenticationForm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_username_field_label_not_set",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_username_field_label_not_set.CustomAuthenticationForm",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_username_field_label_not_set",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_username_field_label_not_set.CustomAuthenticationForm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_username_field_label_empty_string",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_username_field_label_empty_string.CustomAuthenticationForm",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_username_field_label_empty_string",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_username_field_label_empty_string.CustomAuthenticationForm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_integer_username",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_integer_username.CustomAuthenticationForm",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_integer_username",
      "target": "tests/auth_tests/test_forms.py:AuthenticationFormTest.test_integer_username.CustomAuthenticationForm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_forms.py:SetPasswordFormTest",
      "target": "tests/auth_tests/test_forms.py:SetPasswordFormTest.test_password_verification",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:SetPasswordFormTest",
      "target": "tests/auth_tests/test_forms.py:SetPasswordFormTest.test_success",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:SetPasswordFormTest",
      "target": "tests/auth_tests/test_forms.py:SetPasswordFormTest.test_validates_password",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:SetPasswordFormTest",
      "target": "tests/auth_tests/test_forms.py:SetPasswordFormTest.test_password_whitespace_not_stripped",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:SetPasswordFormTest",
      "target": "tests/auth_tests/test_forms.py:SetPasswordFormTest.test_help_text_translation",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:SetPasswordFormTest",
      "target": "tests/auth_tests/test_forms.py:TestDataMixin",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_forms.py:PasswordChangeFormTest",
      "target": "tests/auth_tests/test_forms.py:PasswordChangeFormTest.test_incorrect_password",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:PasswordChangeFormTest",
      "target": "tests/auth_tests/test_forms.py:PasswordChangeFormTest.test_password_verification",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:PasswordChangeFormTest",
      "target": "tests/auth_tests/test_forms.py:PasswordChangeFormTest.test_success",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:PasswordChangeFormTest",
      "target": "tests/auth_tests/test_forms.py:PasswordChangeFormTest.test_field_order",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:PasswordChangeFormTest",
      "target": "tests/auth_tests/test_forms.py:PasswordChangeFormTest.test_password_whitespace_not_stripped",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:PasswordChangeFormTest",
      "target": "tests/auth_tests/test_forms.py:TestDataMixin",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserChangeFormTest",
      "target": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_username_validity",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserChangeFormTest",
      "target": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_bug_14242",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserChangeFormTest",
      "target": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_unusable_password",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserChangeFormTest",
      "target": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_bug_17944_empty_password",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserChangeFormTest",
      "target": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_bug_17944_unmanageable_password",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserChangeFormTest",
      "target": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_bug_17944_unknown_password_algorithm",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserChangeFormTest",
      "target": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_bug_19133",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserChangeFormTest",
      "target": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_bug_19349_bound_password_field",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserChangeFormTest",
      "target": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_custom_form",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserChangeFormTest",
      "target": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_password_excluded",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserChangeFormTest",
      "target": "tests/auth_tests/test_forms.py:TestDataMixin",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_bug_14242",
      "target": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_bug_14242.MyUserForm",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_bug_14242",
      "target": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_bug_14242.MyUserForm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_bug_14242.MyUserForm",
      "target": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_bug_14242.MyUserForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_custom_form",
      "target": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_custom_form.CustomUserChangeForm",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_custom_form",
      "target": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_custom_form.CustomUserChangeForm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_custom_form.CustomUserChangeForm",
      "target": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_custom_form.CustomUserChangeForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_password_excluded",
      "target": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_password_excluded.UserChangeFormWithoutPassword",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_password_excluded",
      "target": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_password_excluded.UserChangeFormWithoutPassword",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_password_excluded.UserChangeFormWithoutPassword",
      "target": "tests/auth_tests/test_forms.py:UserChangeFormTest.test_password_excluded.UserChangeFormWithoutPassword.Meta",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:PasswordResetFormTest",
      "target": "tests/auth_tests/test_forms.py:PasswordResetFormTest.setUpClass",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:PasswordResetFormTest",
      "target": "tests/auth_tests/test_forms.py:PasswordResetFormTest.create_dummy_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:PasswordResetFormTest",
      "target": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_invalid_email",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:PasswordResetFormTest",
      "target": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_nonexistent_email",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:PasswordResetFormTest",
      "target": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_cleaned_data",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:PasswordResetFormTest",
      "target": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_custom_email_subject",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:PasswordResetFormTest",
      "target": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_custom_email_constructor",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:PasswordResetFormTest",
      "target": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_preserve_username_case",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:PasswordResetFormTest",
      "target": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_inactive_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:PasswordResetFormTest",
      "target": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_unusable_password",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:PasswordResetFormTest",
      "target": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_save_plaintext_email",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:PasswordResetFormTest",
      "target": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_save_html_email_template_name",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:PasswordResetFormTest",
      "target": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_custom_email_field",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:PasswordResetFormTest",
      "target": "tests/auth_tests/test_forms.py:TestDataMixin",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_cleaned_data",
      "target": "tests/auth_tests/test_forms.py:PasswordResetFormTest.create_dummy_user",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_custom_email_constructor",
      "target": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_custom_email_constructor.CustomEmailPasswordResetForm",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_custom_email_constructor",
      "target": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_custom_email_constructor.CustomEmailPasswordResetForm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_custom_email_constructor.CustomEmailPasswordResetForm",
      "target": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_custom_email_constructor.CustomEmailPasswordResetForm.send_mail",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_inactive_user",
      "target": "tests/auth_tests/test_forms.py:PasswordResetFormTest.create_dummy_user",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_save_plaintext_email",
      "target": "tests/auth_tests/test_forms.py:PasswordResetFormTest.create_dummy_user",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_forms.py:PasswordResetFormTest.test_save_html_email_template_name",
      "target": "tests/auth_tests/test_forms.py:PasswordResetFormTest.create_dummy_user",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_forms.py:ReadOnlyPasswordHashTest",
      "target": "tests/auth_tests/test_forms.py:ReadOnlyPasswordHashTest.test_bug_19349_render_with_none_value",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:ReadOnlyPasswordHashTest",
      "target": "tests/auth_tests/test_forms.py:ReadOnlyPasswordHashTest.test_render",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:ReadOnlyPasswordHashTest",
      "target": "tests/auth_tests/test_forms.py:ReadOnlyPasswordHashTest.test_readonly_field_has_changed",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AdminPasswordChangeFormTest",
      "target": "tests/auth_tests/test_forms.py:AdminPasswordChangeFormTest.test_success",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AdminPasswordChangeFormTest",
      "target": "tests/auth_tests/test_forms.py:AdminPasswordChangeFormTest.test_password_whitespace_not_stripped",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AdminPasswordChangeFormTest",
      "target": "tests/auth_tests/test_forms.py:AdminPasswordChangeFormTest.test_non_matching_passwords",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AdminPasswordChangeFormTest",
      "target": "tests/auth_tests/test_forms.py:AdminPasswordChangeFormTest.test_missing_passwords",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AdminPasswordChangeFormTest",
      "target": "tests/auth_tests/test_forms.py:AdminPasswordChangeFormTest.test_one_password",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_forms.py:AdminPasswordChangeFormTest",
      "target": "tests/auth_tests/test_forms.py:TestDataMixin",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_basic.py",
      "target": "tests/auth_tests/test_basic.py:BasicTestCase",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_basic.py",
      "target": "tests/auth_tests/test_basic.py:TestGetUser",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_basic.py",
      "target": "tests/auth_tests/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_basic.py:BasicTestCase",
      "target": "tests/auth_tests/test_basic.py:BasicTestCase.test_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_basic.py:BasicTestCase",
      "target": "tests/auth_tests/test_basic.py:BasicTestCase.test_unicode_username",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_basic.py:BasicTestCase",
      "target": "tests/auth_tests/test_basic.py:BasicTestCase.test_user_no_email",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_basic.py:BasicTestCase",
      "target": "tests/auth_tests/test_basic.py:BasicTestCase.test_superuser",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_basic.py:BasicTestCase",
      "target": "tests/auth_tests/test_basic.py:BasicTestCase.test_get_user_model",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_basic.py:BasicTestCase",
      "target": "tests/auth_tests/test_basic.py:BasicTestCase.test_swappable_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_basic.py:BasicTestCase",
      "target": "tests/auth_tests/test_basic.py:BasicTestCase.test_swappable_user_bad_setting",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_basic.py:BasicTestCase",
      "target": "tests/auth_tests/test_basic.py:BasicTestCase.test_swappable_user_nonexistent_model",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_basic.py:BasicTestCase",
      "target": "tests/auth_tests/test_basic.py:BasicTestCase.test_user_verbose_names_translatable",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_basic.py:TestGetUser",
      "target": "tests/auth_tests/test_basic.py:TestGetUser.test_get_user_anonymous",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_basic.py:TestGetUser",
      "target": "tests/auth_tests/test_basic.py:TestGetUser.test_get_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_decorators.py",
      "target": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_decorators.py",
      "target": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_decorators.py",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase",
      "target": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase.testCallable",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase",
      "target": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase.testView",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase",
      "target": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase.testLoginRequired",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase",
      "target": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase.testLoginRequiredNextUrl",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase.testCallable",
      "target": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase.testCallable.CallableView",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase.testCallable",
      "target": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase.testCallable.CallableView",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase.testCallable.CallableView",
      "target": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase.testCallable.CallableView.__call__",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase.testView",
      "target": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase.testView.normal_view",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase.testLoginRequired",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase.testLoginRequiredNextUrl",
      "target": "tests/auth_tests/test_decorators.py:LoginRequiredTestCase.testLoginRequired",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest",
      "target": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest",
      "target": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_many_permissions_pass",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest",
      "target": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_many_permissions_in_set_pass",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest",
      "target": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_single_permission_pass",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest",
      "target": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_permissioned_denied_redirect",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest",
      "target": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_permissioned_denied_exception_raised",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_many_permissions_pass",
      "target": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_many_permissions_pass.a_view",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_many_permissions_pass",
      "target": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_many_permissions_pass.a_view",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_many_permissions_in_set_pass",
      "target": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_many_permissions_in_set_pass.a_view",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_many_permissions_in_set_pass",
      "target": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_many_permissions_in_set_pass.a_view",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_single_permission_pass",
      "target": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_single_permission_pass.a_view",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_single_permission_pass",
      "target": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_single_permission_pass.a_view",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_permissioned_denied_redirect",
      "target": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_permissioned_denied_redirect.a_view",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_permissioned_denied_redirect",
      "target": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_permissioned_denied_redirect.a_view",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_permissioned_denied_exception_raised",
      "target": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_permissioned_denied_exception_raised.a_view",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_permissioned_denied_exception_raised",
      "target": "tests/auth_tests/test_decorators.py:PermissionsRequiredDecoratorTest.test_permissioned_denied_exception_raised.a_view",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_handlers.py",
      "target": "tests/auth_tests/test_handlers.py:ModWsgiHandlerTestCase",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_handlers.py",
      "target": "tests/auth_tests/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_handlers.py:ModWsgiHandlerTestCase",
      "target": "tests/auth_tests/test_handlers.py:ModWsgiHandlerTestCase.test_check_password",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_handlers.py:ModWsgiHandlerTestCase",
      "target": "tests/auth_tests/test_handlers.py:ModWsgiHandlerTestCase.test_check_password_custom_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_handlers.py:ModWsgiHandlerTestCase",
      "target": "tests/auth_tests/test_handlers.py:ModWsgiHandlerTestCase.test_groups_for_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_middleware.py",
      "target": "tests/auth_tests/test_middleware.py:TestAuthenticationMiddleware",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_middleware.py:TestAuthenticationMiddleware",
      "target": "tests/auth_tests/test_middleware.py:TestAuthenticationMiddleware.setUp",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_middleware.py:TestAuthenticationMiddleware",
      "target": "tests/auth_tests/test_middleware.py:TestAuthenticationMiddleware.test_no_password_change_doesnt_invalidate_session",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_middleware.py:TestAuthenticationMiddleware",
      "target": "tests/auth_tests/test_middleware.py:TestAuthenticationMiddleware.test_changed_password_invalidates_session",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_signals.py",
      "target": "tests/auth_tests/test_signals.py:SignalTestCase",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_signals.py",
      "target": "tests/auth_tests/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_signals.py",
      "target": "tests/auth_tests/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_signals.py:SignalTestCase",
      "target": "tests/auth_tests/test_signals.py:SignalTestCase.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_signals.py:SignalTestCase",
      "target": "tests/auth_tests/test_signals.py:SignalTestCase.listener_login",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_signals.py:SignalTestCase",
      "target": "tests/auth_tests/test_signals.py:SignalTestCase.listener_logout",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_signals.py:SignalTestCase",
      "target": "tests/auth_tests/test_signals.py:SignalTestCase.listener_login_failed",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_signals.py:SignalTestCase",
      "target": "tests/auth_tests/test_signals.py:SignalTestCase.setUp",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_signals.py:SignalTestCase",
      "target": "tests/auth_tests/test_signals.py:SignalTestCase.tearDown",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_signals.py:SignalTestCase",
      "target": "tests/auth_tests/test_signals.py:SignalTestCase.test_login",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_signals.py:SignalTestCase",
      "target": "tests/auth_tests/test_signals.py:SignalTestCase.test_logout_anonymous",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_signals.py:SignalTestCase",
      "target": "tests/auth_tests/test_signals.py:SignalTestCase.test_logout",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_signals.py:SignalTestCase",
      "target": "tests/auth_tests/test_signals.py:SignalTestCase.test_update_last_login",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_signals.py:SignalTestCase",
      "target": "tests/auth_tests/test_signals.py:SignalTestCase.test_failed_login_without_request",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_signals.py:SignalTestCase",
      "target": "tests/auth_tests/test_signals.py:SignalTestCase.test_login_with_custom_user_without_last_login_field",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_signals.py:SignalTestCase.test_login_with_custom_user_without_last_login_field",
      "target": "tests/auth_tests/models/with_last_login_attr.py:UserWithDisabledLastLoginField",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_templates.py",
      "target": "tests/auth_tests/test_templates.py:AuthTemplateTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_templates.py",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_templates.py:AuthTemplateTests",
      "target": "tests/auth_tests/test_templates.py:AuthTemplateTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_templates.py:AuthTemplateTests",
      "target": "tests/auth_tests/test_templates.py:AuthTemplateTests.test_PasswordResetView",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_templates.py:AuthTemplateTests",
      "target": "tests/auth_tests/test_templates.py:AuthTemplateTests.test_PasswordResetDoneView",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_templates.py:AuthTemplateTests",
      "target": "tests/auth_tests/test_templates.py:AuthTemplateTests.test_PasswordResetConfirmView_invalid_token",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_templates.py:AuthTemplateTests",
      "target": "tests/auth_tests/test_templates.py:AuthTemplateTests.test_PasswordResetConfirmView_valid_token",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_templates.py:AuthTemplateTests",
      "target": "tests/auth_tests/test_templates.py:AuthTemplateTests.test_PasswordResetCompleteView",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_templates.py:AuthTemplateTests",
      "target": "tests/auth_tests/test_templates.py:AuthTemplateTests.test_PasswordResetChangeView",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_templates.py:AuthTemplateTests",
      "target": "tests/auth_tests/test_templates.py:AuthTemplateTests.test_PasswordChangeDoneView",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_templates.py:AuthTemplateTests.setUpTestData",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_templates.py:AuthTemplateTests.test_PasswordResetConfirmView_invalid_token",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_templates.py:AuthTemplateTests.test_PasswordResetConfirmView_invalid_token",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_templates.py:AuthTemplateTests.test_PasswordResetConfirmView_valid_token",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_templates.py:AuthTemplateTests.test_PasswordResetConfirmView_valid_token",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/client.py",
      "target": "tests/auth_tests/client.py:extract_token_from_url",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/client.py",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/client.py:PasswordResetConfirmClient",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient._get_password_reset_confirm_redirect_url",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/client.py:PasswordResetConfirmClient",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/client.py:PasswordResetConfirmClient",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/client.py:PasswordResetConfirmClient._get_password_reset_confirm_redirect_url",
      "target": "tests/auth_tests/client.py:extract_token_from_url",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient._get_password_reset_confirm_redirect_url",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient._get_password_reset_confirm_redirect_url",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_context_processors.py",
      "target": "tests/auth_tests/test_context_processors.py:MockUser",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_context_processors.py",
      "target": "tests/auth_tests/test_context_processors.py:PermWrapperTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_context_processors.py",
      "target": "tests/auth_tests/test_context_processors.py:AuthContextProcessorTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_context_processors.py",
      "target": "tests/auth_tests/settings.py",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_context_processors.py",
      "target": "tests/auth_tests/settings.py",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_context_processors.py:MockUser",
      "target": "tests/auth_tests/test_context_processors.py:MockUser.has_module_perms",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_context_processors.py:MockUser",
      "target": "tests/auth_tests/test_context_processors.py:MockUser.has_perm",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_context_processors.py:PermWrapperTests",
      "target": "tests/auth_tests/test_context_processors.py:PermWrapperTests.EQLimiterObject",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_context_processors.py:PermWrapperTests",
      "target": "tests/auth_tests/test_context_processors.py:PermWrapperTests.test_permwrapper_in",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_context_processors.py:PermWrapperTests",
      "target": "tests/auth_tests/test_context_processors.py:PermWrapperTests.test_permlookupdict_in",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_context_processors.py:PermWrapperTests",
      "target": "tests/auth_tests/test_context_processors.py:PermWrapperTests.test_iter",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_context_processors.py:PermWrapperTests.EQLimiterObject",
      "target": "tests/auth_tests/test_context_processors.py:PermWrapperTests.EQLimiterObject.__eq__",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_context_processors.py:PermWrapperTests.test_permwrapper_in",
      "target": "tests/auth_tests/test_context_processors.py:MockUser",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_context_processors.py:PermWrapperTests.test_permlookupdict_in",
      "target": "tests/auth_tests/test_context_processors.py:MockUser",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_context_processors.py:PermWrapperTests.test_permlookupdict_in",
      "target": "tests/auth_tests/test_context_processors.py:PermWrapperTests.EQLimiterObject",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_context_processors.py:PermWrapperTests.test_iter",
      "target": "tests/auth_tests/test_context_processors.py:MockUser",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_context_processors.py:AuthContextProcessorTests",
      "target": "tests/auth_tests/test_context_processors.py:AuthContextProcessorTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_context_processors.py:AuthContextProcessorTests",
      "target": "tests/auth_tests/test_context_processors.py:AuthContextProcessorTests.test_session_not_accessed",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_context_processors.py:AuthContextProcessorTests",
      "target": "tests/auth_tests/test_context_processors.py:AuthContextProcessorTests.test_session_is_accessed",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_context_processors.py:AuthContextProcessorTests",
      "target": "tests/auth_tests/test_context_processors.py:AuthContextProcessorTests.test_perms_attrs",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_context_processors.py:AuthContextProcessorTests",
      "target": "tests/auth_tests/test_context_processors.py:AuthContextProcessorTests.test_perm_in_perms_attrs",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_context_processors.py:AuthContextProcessorTests",
      "target": "tests/auth_tests/test_context_processors.py:AuthContextProcessorTests.test_message_attrs",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_context_processors.py:AuthContextProcessorTests",
      "target": "tests/auth_tests/test_context_processors.py:AuthContextProcessorTests.test_user_attrs",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py",
      "target": "tests/auth_tests/test_management.py:mock_inputs",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py",
      "target": "tests/auth_tests/test_management.py:MockTTY",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py",
      "target": "tests/auth_tests/test_management.py:MockInputTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py",
      "target": "tests/auth_tests/test_management.py:GetDefaultUsernameTestCase",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py",
      "target": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py",
      "target": "tests/auth_tests/test_management.py:MultiDBChangepasswordManagementCommandTestCase",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py",
      "target": "tests/auth_tests/test_management.py:MultiDBCreatesuperuserTestCase",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py",
      "target": "tests/auth_tests/test_management.py:CreatePermissionsTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py",
      "target": "tests/auth_tests/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_management.py",
      "target": "tests/auth_tests/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_management.py",
      "target": "tests/auth_tests/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_management.py",
      "target": "tests/auth_tests/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_management.py",
      "target": "tests/auth_tests/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_management.py:mock_inputs",
      "target": "tests/auth_tests/test_management.py:mock_inputs.inner",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:mock_inputs.inner",
      "target": "tests/auth_tests/test_management.py:mock_inputs.inner.wrapped",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:mock_inputs.inner.wrapped",
      "target": "tests/auth_tests/test_management.py:mock_inputs.inner.wrapped.mock_getpass",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:mock_inputs.inner.wrapped",
      "target": "tests/auth_tests/test_management.py:mock_inputs.inner.wrapped.mock_input",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:mock_inputs.inner.wrapped.mock_getpass",
      "target": "tests/auth_tests/test_management.py:mock_inputs.inner.wrapped.mock_getpass.getpass",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:MockTTY",
      "target": "tests/auth_tests/test_management.py:MockTTY.isatty",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:MockInputTests",
      "target": "tests/auth_tests/test_management.py:MockInputTests.test_input_not_found",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:MockInputTests.test_input_not_found",
      "target": "tests/auth_tests/test_management.py:MockTTY",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:GetDefaultUsernameTestCase",
      "target": "tests/auth_tests/test_management.py:GetDefaultUsernameTestCase.setUp",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:GetDefaultUsernameTestCase",
      "target": "tests/auth_tests/test_management.py:GetDefaultUsernameTestCase.tearDown",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:GetDefaultUsernameTestCase",
      "target": "tests/auth_tests/test_management.py:GetDefaultUsernameTestCase.test_actual_implementation",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:GetDefaultUsernameTestCase",
      "target": "tests/auth_tests/test_management.py:GetDefaultUsernameTestCase.test_simple",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:GetDefaultUsernameTestCase",
      "target": "tests/auth_tests/test_management.py:GetDefaultUsernameTestCase.test_existing",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:GetDefaultUsernameTestCase",
      "target": "tests/auth_tests/test_management.py:GetDefaultUsernameTestCase.test_i18n",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase.setUp",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase.tearDown",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase.test_get_pass",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase.test_get_pass_no_input",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase.test_system_username",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase.test_nonexistent_username",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase.test_that_changepassword_command_changes_joes_password",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase.test_that_max_tries_exits_1",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase.test_password_validation",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:ChangepasswordManagementCommandTestCase.test_that_changepassword_command_works_with_nonascii_output",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:MultiDBChangepasswordManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:MultiDBChangepasswordManagementCommandTestCase.test_that_changepassword_command_with_database_option_uses_given_db",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_no_email_argument",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_basic_usage",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_non_ascii_verbose_name",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_verbosity_zero",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_email_in_username",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_swappable_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_swappable_user_missing_required_field",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_swappable_user_username_non_unique",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_skip_if_not_in_TTY",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_passing_stdin",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_fields_with_fk",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_fields_with_fk_interactive",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_default_username",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_password_validation",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validate_password_against_username",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validate_password_against_required_fields",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_blank_username",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_blank_username_non_interactive",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_password_validation_bypass",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_invalid_username",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_keyboard_interrupt",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_existing_username",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_existing_username_non_interactive",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_existing_username_provided_via_option_and_interactive",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validation_mismatched_passwords",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validation_blank_password_entered",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_usermodel_without_password",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_usermodel_without_password_interactive",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_non_ascii_verbose_name",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_non_ascii_verbose_name.test",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_non_ascii_verbose_name",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_non_ascii_verbose_name.test",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_non_ascii_verbose_name.test",
      "target": "tests/auth_tests/test_management.py:MockTTY",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_swappable_user_username_non_unique",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_swappable_user_username_non_unique.createsuperuser",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_swappable_user_username_non_unique",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_swappable_user_username_non_unique.createsuperuser",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_swappable_user_username_non_unique.createsuperuser",
      "target": "tests/auth_tests/test_management.py:MockTTY",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_skip_if_not_in_TTY",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_skip_if_not_in_TTY.FakeStdin",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_skip_if_not_in_TTY",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_skip_if_not_in_TTY.FakeStdin",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_skip_if_not_in_TTY.FakeStdin",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_skip_if_not_in_TTY.FakeStdin.isatty",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_fields_with_fk_interactive",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_fields_with_fk_interactive.test",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_fields_with_fk_interactive",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_fields_with_fk_interactive.test",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_fields_with_fk_interactive.test",
      "target": "tests/auth_tests/test_management.py:MockTTY",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_default_username",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_default_username.return_passwords",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_default_username",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_default_username.test",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_default_username",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_default_username.test",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_default_username.test",
      "target": "tests/auth_tests/test_management.py:MockTTY",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_password_validation",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_password_validation.bad_then_good_password",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_password_validation",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_password_validation.test",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_password_validation",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_password_validation.test",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_password_validation.test",
      "target": "tests/auth_tests/test_management.py:MockTTY",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validate_password_against_username",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validate_password_against_username.bad_then_good_password",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validate_password_against_username",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validate_password_against_username.test",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validate_password_against_username",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validate_password_against_username.test",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validate_password_against_username.test",
      "target": "tests/auth_tests/test_management.py:MockTTY",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validate_password_against_required_fields",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validate_password_against_required_fields.bad_then_good_password",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validate_password_against_required_fields",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validate_password_against_required_fields.test",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validate_password_against_required_fields",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validate_password_against_required_fields.test",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validate_password_against_required_fields.test",
      "target": "tests/auth_tests/test_management.py:MockTTY",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_blank_username",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_blank_username.test",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_blank_username",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_blank_username.test",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_blank_username.test",
      "target": "tests/auth_tests/test_management.py:MockTTY",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_blank_username_non_interactive",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_blank_username_non_interactive.test",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_blank_username_non_interactive",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_blank_username_non_interactive.test",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_blank_username_non_interactive.test",
      "target": "tests/auth_tests/test_management.py:MockTTY",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_password_validation_bypass",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_password_validation_bypass.test",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_password_validation_bypass",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_password_validation_bypass.test",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_password_validation_bypass.test",
      "target": "tests/auth_tests/test_management.py:MockTTY",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_invalid_username",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_invalid_username.return_passwords",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_invalid_username",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_invalid_username.return_usernames",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_invalid_username",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_invalid_username.test",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_invalid_username",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_invalid_username.test",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_invalid_username.test",
      "target": "tests/auth_tests/test_management.py:MockTTY",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_keyboard_interrupt",
      "target": "tests/auth_tests/test_management.py:MockTTY",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_existing_username",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_existing_username.return_passwords",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_existing_username",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_existing_username.return_usernames",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_existing_username",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_existing_username.test",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_existing_username",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_existing_username.test",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_existing_username.test",
      "target": "tests/auth_tests/test_management.py:MockTTY",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_existing_username_provided_via_option_and_interactive",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_existing_username_provided_via_option_and_interactive.return_passwords",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_existing_username_provided_via_option_and_interactive",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_existing_username_provided_via_option_and_interactive.test",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_existing_username_provided_via_option_and_interactive",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_existing_username_provided_via_option_and_interactive.test",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_existing_username_provided_via_option_and_interactive.test",
      "target": "tests/auth_tests/test_management.py:MockTTY",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validation_mismatched_passwords",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validation_mismatched_passwords.mismatched_passwords_then_matched",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validation_mismatched_passwords",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validation_mismatched_passwords.test",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validation_mismatched_passwords",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validation_mismatched_passwords.test",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validation_mismatched_passwords.test",
      "target": "tests/auth_tests/test_management.py:MockTTY",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validation_blank_password_entered",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validation_blank_password_entered.blank_passwords_then_valid",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validation_blank_password_entered",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validation_blank_password_entered.test",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validation_blank_password_entered",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validation_blank_password_entered.test",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_validation_blank_password_entered.test",
      "target": "tests/auth_tests/test_management.py:MockTTY",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_usermodel_without_password",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_usermodel_without_password.test",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_usermodel_without_password",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_usermodel_without_password.test",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_usermodel_without_password.test",
      "target": "tests/auth_tests/test_management.py:MockTTY",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_usermodel_without_password_interactive",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_usermodel_without_password_interactive.test",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_usermodel_without_password_interactive",
      "target": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_usermodel_without_password_interactive.test",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatesuperuserManagementCommandTestCase.test_usermodel_without_password_interactive.test",
      "target": "tests/auth_tests/test_management.py:MockTTY",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_management.py:MultiDBCreatesuperuserTestCase",
      "target": "tests/auth_tests/test_management.py:MultiDBCreatesuperuserTestCase.test_createsuperuser_command_with_database_option",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatePermissionsTests",
      "target": "tests/auth_tests/test_management.py:CreatePermissionsTests.setUp",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatePermissionsTests",
      "target": "tests/auth_tests/test_management.py:CreatePermissionsTests.tearDown",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatePermissionsTests",
      "target": "tests/auth_tests/test_management.py:CreatePermissionsTests.test_default_permissions",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatePermissionsTests",
      "target": "tests/auth_tests/test_management.py:CreatePermissionsTests.test_unavailable_models",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatePermissionsTests",
      "target": "tests/auth_tests/test_management.py:CreatePermissionsTests.test_create_permissions_checks_contenttypes_created",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_management.py:CreatePermissionsTests",
      "target": "tests/auth_tests/test_management.py:CreatePermissionsTests.test_permission_with_proxy_content_type_created",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_migrations.py",
      "target": "tests/auth_tests/test_migrations.py:ProxyModelWithDifferentAppLabelTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_migrations.py",
      "target": "tests/auth_tests/test_migrations.py:ProxyModelWithSameAppLabelTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_migrations.py",
      "target": "tests/auth_tests/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_migrations.py:ProxyModelWithDifferentAppLabelTests",
      "target": "tests/auth_tests/test_migrations.py:ProxyModelWithDifferentAppLabelTests.setUp",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_migrations.py:ProxyModelWithDifferentAppLabelTests",
      "target": "tests/auth_tests/test_migrations.py:ProxyModelWithDifferentAppLabelTests.test_proxy_model_permissions_contenttype",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_migrations.py:ProxyModelWithDifferentAppLabelTests",
      "target": "tests/auth_tests/test_migrations.py:ProxyModelWithDifferentAppLabelTests.test_user_has_now_proxy_model_permissions",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_migrations.py:ProxyModelWithDifferentAppLabelTests",
      "target": "tests/auth_tests/test_migrations.py:ProxyModelWithDifferentAppLabelTests.test_migrate_backwards",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_migrations.py:ProxyModelWithDifferentAppLabelTests",
      "target": "tests/auth_tests/test_migrations.py:ProxyModelWithDifferentAppLabelTests.test_user_keeps_same_permissions_after_migrating_backward",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_migrations.py:ProxyModelWithDifferentAppLabelTests.test_user_has_now_proxy_model_permissions",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_migrations.py:ProxyModelWithDifferentAppLabelTests.test_user_keeps_same_permissions_after_migrating_backward",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_migrations.py:ProxyModelWithSameAppLabelTests",
      "target": "tests/auth_tests/test_migrations.py:ProxyModelWithSameAppLabelTests.setUp",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_migrations.py:ProxyModelWithSameAppLabelTests",
      "target": "tests/auth_tests/test_migrations.py:ProxyModelWithSameAppLabelTests.test_proxy_model_permissions_contenttype",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_migrations.py:ProxyModelWithSameAppLabelTests",
      "target": "tests/auth_tests/test_migrations.py:ProxyModelWithSameAppLabelTests.test_user_still_has_proxy_model_permissions",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_migrations.py:ProxyModelWithSameAppLabelTests",
      "target": "tests/auth_tests/test_migrations.py:ProxyModelWithSameAppLabelTests.test_migrate_backwards",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_migrations.py:ProxyModelWithSameAppLabelTests",
      "target": "tests/auth_tests/test_migrations.py:ProxyModelWithSameAppLabelTests.test_user_keeps_same_permissions_after_migrating_backward",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_migrations.py:ProxyModelWithSameAppLabelTests.test_user_still_has_proxy_model_permissions",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_migrations.py:ProxyModelWithSameAppLabelTests.test_user_keeps_same_permissions_after_migrating_backward",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/urls_custom_user_admin.py",
      "target": "tests/auth_tests/urls_custom_user_admin.py:CustomUserAdmin",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/urls_custom_user_admin.py:CustomUserAdmin",
      "target": "tests/auth_tests/urls_custom_user_admin.py:CustomUserAdmin.log_change",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py",
      "target": "tests/auth_tests/test_views.py:AuthViewNamedURLTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py",
      "target": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py",
      "target": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py",
      "target": "tests/auth_tests/test_views.py:ChangePasswordTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py",
      "target": "tests/auth_tests/test_views.py:SessionAuthenticationTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py",
      "target": "tests/auth_tests/test_views.py:LoginTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py",
      "target": "tests/auth_tests/test_views.py:LoginURLSettings",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py",
      "target": "tests/auth_tests/test_views.py:LoginRedirectUrlTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py",
      "target": "tests/auth_tests/test_views.py:RedirectToLoginTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py",
      "target": "tests/auth_tests/test_views.py:LogoutThenLoginTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py",
      "target": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py",
      "target": "tests/auth_tests/test_views.py:LoginSuccessURLAllowedHostsTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py",
      "target": "tests/auth_tests/test_views.py:LogoutTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py",
      "target": "tests/auth_tests/test_views.py:get_perm",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py",
      "target": "tests/auth_tests/test_views.py:ChangelistTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py",
      "target": "tests/auth_tests/test_views.py:UUIDUserTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_views.py",
      "target": "tests/auth_tests/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_views.py",
      "target": "tests/auth_tests/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_views.py",
      "target": "tests/auth_tests/settings.py",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_views.py:AuthViewsTestCase",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:AuthViewsTestCase",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:AuthViewsTestCase",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.logout",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:AuthViewsTestCase",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.assertFormError",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:AuthViewsTestCase.logout",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:AuthViewNamedURLTests",
      "target": "tests/auth_tests/test_views.py:AuthViewNamedURLTests.test_named_urls",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:AuthViewNamedURLTests",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest.setUp",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest.test_email_not_found",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest.test_email_found",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest.test_extra_email_context",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest.test_html_mail_template",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest.test_email_found_custom_from",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest.test_poisoned_http_host",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest.test_poisoned_http_host_admin_site",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest._test_confirm_start",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest._read_signup_email",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_valid",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_invalid",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_invalid_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_overflow_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_invalid_post",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_invalid_hash",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_complete",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_different_passwords",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest.test_reset_redirect_default",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest.test_reset_custom_redirect",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest.test_reset_custom_redirect_named",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_redirect_default",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_redirect_custom",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_redirect_custom_named",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_login_post_reset",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_login_post_reset_custom_backend",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_login_post_reset_already_logged_in",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_display_user_from_form",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_link_redirects_to_set_password_page",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest.test_invalid_link_if_going_directly_to_the_final_reset_password_url",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.setUp",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_email_not_found",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_email_not_found",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_email_found",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_extra_email_context",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_html_mail_template",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_email_found_custom_from",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_poisoned_http_host",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_poisoned_http_host_admin_site",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest._test_confirm_start",
      "target": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest._read_signup_email",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest._test_confirm_start",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest._read_signup_email",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest._test_confirm_start",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_valid",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_valid",
      "target": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_valid",
      "target": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_valid",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_invalid",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_invalid",
      "target": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_invalid",
      "target": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_invalid",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_invalid_user",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_overflow_user",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_invalid_post",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_invalid_post",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_invalid_post",
      "target": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_invalid_post",
      "target": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_invalid_post",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_invalid_hash",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_invalid_hash",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_invalid_hash",
      "target": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_invalid_hash",
      "target": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_invalid_hash",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_complete",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_complete",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_complete",
      "target": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_complete",
      "target": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_complete",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_different_passwords",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_different_passwords",
      "target": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_different_passwords",
      "target": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_different_passwords",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_different_passwords",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.assertFormError",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_reset_redirect_default",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_reset_custom_redirect",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_reset_custom_redirect_named",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_redirect_default",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_redirect_default",
      "target": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_redirect_default",
      "target": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_redirect_default",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_redirect_custom",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_redirect_custom",
      "target": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_redirect_custom",
      "target": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_redirect_custom",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_redirect_custom_named",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_redirect_custom_named",
      "target": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_redirect_custom_named",
      "target": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_redirect_custom_named",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_login_post_reset",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_login_post_reset",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_login_post_reset",
      "target": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_login_post_reset",
      "target": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_login_post_reset_custom_backend",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_login_post_reset_custom_backend",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_login_post_reset_custom_backend",
      "target": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_login_post_reset_custom_backend",
      "target": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_login_post_reset_already_logged_in",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_login_post_reset_already_logged_in",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_login_post_reset_already_logged_in",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_login_post_reset_already_logged_in",
      "target": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_login_post_reset_already_logged_in",
      "target": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_display_user_from_form",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_display_user_from_form",
      "target": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_display_user_from_form",
      "target": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_display_user_from_form",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_link_redirects_to_set_password_page",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_link_redirects_to_set_password_page",
      "target": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_link_redirects_to_set_password_page",
      "target": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_confirm_link_redirects_to_set_password_page",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_invalid_link_if_going_directly_to_the_final_reset_password_url",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_invalid_link_if_going_directly_to_the_final_reset_password_url",
      "target": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_invalid_link_if_going_directly_to_the_final_reset_password_url",
      "target": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:PasswordResetTest.test_invalid_link_if_going_directly_to_the_final_reset_password_url",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest",
      "target": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest",
      "target": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest.setUp",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest",
      "target": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest._test_confirm_start",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest",
      "target": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest._read_signup_email",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest",
      "target": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest.test_confirm_valid_custom_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest.setUp",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest._test_confirm_start",
      "target": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest._read_signup_email",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest._test_confirm_start",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest._read_signup_email",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest._test_confirm_start",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest.test_confirm_valid_custom_user",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest.test_confirm_valid_custom_user",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest.test_confirm_valid_custom_user",
      "target": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest.test_confirm_valid_custom_user",
      "target": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest.test_confirm_valid_custom_user",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest",
      "target": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest._test_confirm_start",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest",
      "target": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest.test_confirm_invalid_uuid",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest",
      "target": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest._test_confirm_start",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest._test_confirm_start",
      "target": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest.test_confirm_invalid_uuid",
      "target": "tests/auth_tests/test_views.py:PasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest.test_confirm_invalid_uuid",
      "target": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest.test_confirm_invalid_uuid",
      "target": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest._test_confirm_start",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:UUIDUserPasswordResetTest.test_confirm_invalid_uuid",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest",
      "target": "tests/auth_tests/test_views.py:ChangePasswordTest.fail_login",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest",
      "target": "tests/auth_tests/test_views.py:ChangePasswordTest.logout",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest",
      "target": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_fails_with_invalid_old_password",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest",
      "target": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_fails_with_mismatched_passwords",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest",
      "target": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_succeeds",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest",
      "target": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_done_succeeds",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest",
      "target": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_done_fails",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest",
      "target": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_redirect_default",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest",
      "target": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_redirect_custom",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest",
      "target": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_redirect_custom_named",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest.fail_login",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest.fail_login",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.assertFormError",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest.logout",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_fails_with_invalid_old_password",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_fails_with_invalid_old_password",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_fails_with_invalid_old_password",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.assertFormError",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_fails_with_mismatched_passwords",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_fails_with_mismatched_passwords",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_fails_with_mismatched_passwords",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.assertFormError",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_succeeds",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_succeeds",
      "target": "tests/auth_tests/test_views.py:ChangePasswordTest.fail_login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_succeeds",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_done_succeeds",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_done_succeeds",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_done_fails",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_redirect_default",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_redirect_default",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_redirect_custom",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_redirect_custom",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_redirect_custom_named",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangePasswordTest.test_password_change_redirect_custom_named",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:SessionAuthenticationTests",
      "target": "tests/auth_tests/test_views.py:SessionAuthenticationTests.test_user_password_change_updates_session",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:SessionAuthenticationTests",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_views.py:SessionAuthenticationTests.test_user_password_change_updates_session",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:SessionAuthenticationTests.test_user_password_change_updates_session",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginTest",
      "target": "tests/auth_tests/test_views.py:LoginTest.test_current_site_in_context_after_login",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginTest",
      "target": "tests/auth_tests/test_views.py:LoginTest.test_security_check",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginTest",
      "target": "tests/auth_tests/test_views.py:LoginTest.test_security_check_https",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginTest",
      "target": "tests/auth_tests/test_views.py:LoginTest.test_login_form_contains_request",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginTest",
      "target": "tests/auth_tests/test_views.py:LoginTest.test_login_csrf_rotate",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginTest",
      "target": "tests/auth_tests/test_views.py:LoginTest.test_session_key_flushed_on_login",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginTest",
      "target": "tests/auth_tests/test_views.py:LoginTest.test_session_key_flushed_on_login_after_password_change",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginTest",
      "target": "tests/auth_tests/test_views.py:LoginTest.test_login_session_without_hash_session_key",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginTest",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginTest.test_current_site_in_context_after_login",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginTest.test_security_check",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginTest.test_security_check_https",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginTest.test_login_form_contains_request",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginTest.test_login_csrf_rotate",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginTest.test_session_key_flushed_on_login",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginTest.test_session_key_flushed_on_login_after_password_change",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginTest.test_session_key_flushed_on_login_after_password_change",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginTest.test_login_session_without_hash_session_key",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginTest.test_login_session_without_hash_session_key",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginURLSettings",
      "target": "tests/auth_tests/test_views.py:LoginURLSettings.assertLoginURLEquals",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginURLSettings",
      "target": "tests/auth_tests/test_views.py:LoginURLSettings.test_standard_login_url",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginURLSettings",
      "target": "tests/auth_tests/test_views.py:LoginURLSettings.test_named_login_url",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginURLSettings",
      "target": "tests/auth_tests/test_views.py:LoginURLSettings.test_remote_login_url",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginURLSettings",
      "target": "tests/auth_tests/test_views.py:LoginURLSettings.test_https_login_url",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginURLSettings",
      "target": "tests/auth_tests/test_views.py:LoginURLSettings.test_login_url_with_querystring",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginURLSettings",
      "target": "tests/auth_tests/test_views.py:LoginURLSettings.test_remote_login_url_with_next_querystring",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginURLSettings",
      "target": "tests/auth_tests/test_views.py:LoginURLSettings.test_lazy_login_url",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginURLSettings",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginURLSettings.assertLoginURLEquals",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginURLSettings.test_standard_login_url",
      "target": "tests/auth_tests/test_views.py:LoginURLSettings.assertLoginURLEquals",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginURLSettings.test_named_login_url",
      "target": "tests/auth_tests/test_views.py:LoginURLSettings.assertLoginURLEquals",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginURLSettings.test_remote_login_url",
      "target": "tests/auth_tests/test_views.py:LoginURLSettings.assertLoginURLEquals",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginURLSettings.test_https_login_url",
      "target": "tests/auth_tests/test_views.py:LoginURLSettings.assertLoginURLEquals",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginURLSettings.test_login_url_with_querystring",
      "target": "tests/auth_tests/test_views.py:LoginURLSettings.assertLoginURLEquals",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginURLSettings.test_remote_login_url_with_next_querystring",
      "target": "tests/auth_tests/test_views.py:LoginURLSettings.assertLoginURLEquals",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginURLSettings.test_lazy_login_url",
      "target": "tests/auth_tests/test_views.py:LoginURLSettings.assertLoginURLEquals",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectUrlTest",
      "target": "tests/auth_tests/test_views.py:LoginRedirectUrlTest.assertLoginRedirectURLEqual",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectUrlTest",
      "target": "tests/auth_tests/test_views.py:LoginRedirectUrlTest.test_default",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectUrlTest",
      "target": "tests/auth_tests/test_views.py:LoginRedirectUrlTest.test_custom",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectUrlTest",
      "target": "tests/auth_tests/test_views.py:LoginRedirectUrlTest.test_named",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectUrlTest",
      "target": "tests/auth_tests/test_views.py:LoginRedirectUrlTest.test_remote",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectUrlTest",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectUrlTest.assertLoginRedirectURLEqual",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectUrlTest.test_default",
      "target": "tests/auth_tests/test_views.py:LoginRedirectUrlTest.assertLoginRedirectURLEqual",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectUrlTest.test_custom",
      "target": "tests/auth_tests/test_views.py:LoginRedirectUrlTest.assertLoginRedirectURLEqual",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectUrlTest.test_named",
      "target": "tests/auth_tests/test_views.py:LoginRedirectUrlTest.assertLoginRedirectURLEqual",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectUrlTest.test_remote",
      "target": "tests/auth_tests/test_views.py:LoginRedirectUrlTest.assertLoginRedirectURLEqual",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:RedirectToLoginTests",
      "target": "tests/auth_tests/test_views.py:RedirectToLoginTests.test_redirect_to_login_with_lazy",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:RedirectToLoginTests",
      "target": "tests/auth_tests/test_views.py:RedirectToLoginTests.test_redirect_to_login_with_lazy_and_unicode",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:RedirectToLoginTests",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutThenLoginTests",
      "target": "tests/auth_tests/test_views.py:LogoutThenLoginTests.confirm_logged_out",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutThenLoginTests",
      "target": "tests/auth_tests/test_views.py:LogoutThenLoginTests.test_default_logout_then_login",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutThenLoginTests",
      "target": "tests/auth_tests/test_views.py:LogoutThenLoginTests.test_logout_then_login_with_custom_login",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutThenLoginTests",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutThenLoginTests.test_default_logout_then_login",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutThenLoginTests.test_default_logout_then_login",
      "target": "tests/auth_tests/test_views.py:LogoutTest.confirm_logged_out",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutThenLoginTests.test_default_logout_then_login",
      "target": "tests/auth_tests/test_views.py:LogoutThenLoginTests.confirm_logged_out",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutThenLoginTests.test_logout_then_login_with_custom_login",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutThenLoginTests.test_logout_then_login_with_custom_login",
      "target": "tests/auth_tests/test_views.py:LogoutTest.confirm_logged_out",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutThenLoginTests.test_logout_then_login_with_custom_login",
      "target": "tests/auth_tests/test_views.py:LogoutThenLoginTests.confirm_logged_out",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser",
      "target": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_default",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser",
      "target": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_guest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser",
      "target": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_redirect",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser",
      "target": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_redirect_url",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser",
      "target": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_redirect_param",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser",
      "target": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_redirect_loop",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser",
      "target": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_permission_required_not_logged_in",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser",
      "target": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_permission_required_logged_in",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_default",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_default",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_guest",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_redirect",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_redirect",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_redirect_url",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_redirect_url",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_redirect_param",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_redirect_param",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_redirect_loop",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_redirect_loop",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_permission_required_not_logged_in",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_permission_required_logged_in",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginRedirectAuthenticatedUser.test_permission_required_logged_in",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginSuccessURLAllowedHostsTest",
      "target": "tests/auth_tests/test_views.py:LoginSuccessURLAllowedHostsTest.test_success_url_allowed_hosts_same_host",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginSuccessURLAllowedHostsTest",
      "target": "tests/auth_tests/test_views.py:LoginSuccessURLAllowedHostsTest.test_success_url_allowed_hosts_safe_host",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginSuccessURLAllowedHostsTest",
      "target": "tests/auth_tests/test_views.py:LoginSuccessURLAllowedHostsTest.test_success_url_allowed_hosts_unsafe_host",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginSuccessURLAllowedHostsTest",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginSuccessURLAllowedHostsTest.test_success_url_allowed_hosts_same_host",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginSuccessURLAllowedHostsTest.test_success_url_allowed_hosts_safe_host",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LoginSuccessURLAllowedHostsTest.test_success_url_allowed_hosts_unsafe_host",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest",
      "target": "tests/auth_tests/test_views.py:LogoutTest.confirm_logged_out",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest",
      "target": "tests/auth_tests/test_views.py:LogoutTest.test_logout_default",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest",
      "target": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_post",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest",
      "target": "tests/auth_tests/test_views.py:LogoutTest.test_14377",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest",
      "target": "tests/auth_tests/test_views.py:LogoutTest.test_logout_doesnt_cache",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest",
      "target": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_overridden_redirect_url",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest",
      "target": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_next_page_specified",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest",
      "target": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_redirect_argument",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest",
      "target": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_custom_redirect_argument",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest",
      "target": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_named_redirect",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest",
      "target": "tests/auth_tests/test_views.py:LogoutTest.test_success_url_allowed_hosts_same_host",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest",
      "target": "tests/auth_tests/test_views.py:LogoutTest.test_success_url_allowed_hosts_safe_host",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest",
      "target": "tests/auth_tests/test_views.py:LogoutTest.test_success_url_allowed_hosts_unsafe_host",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest",
      "target": "tests/auth_tests/test_views.py:LogoutTest.test_security_check",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest",
      "target": "tests/auth_tests/test_views.py:LogoutTest.test_security_check_https",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest",
      "target": "tests/auth_tests/test_views.py:LogoutTest.test_logout_preserve_language",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest",
      "target": "tests/auth_tests/test_views.py:LogoutTest.test_logout_redirect_url_setting",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest",
      "target": "tests/auth_tests/test_views.py:LogoutTest.test_logout_redirect_url_named_setting",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_default",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_default",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_default",
      "target": "tests/auth_tests/test_views.py:LogoutTest.confirm_logged_out",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_default",
      "target": "tests/auth_tests/test_views.py:LogoutThenLoginTests.confirm_logged_out",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_post",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_post",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_post",
      "target": "tests/auth_tests/test_views.py:LogoutTest.confirm_logged_out",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_post",
      "target": "tests/auth_tests/test_views.py:LogoutThenLoginTests.confirm_logged_out",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_14377",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_14377",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_doesnt_cache",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_overridden_redirect_url",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_overridden_redirect_url",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_overridden_redirect_url",
      "target": "tests/auth_tests/test_views.py:LogoutTest.confirm_logged_out",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_overridden_redirect_url",
      "target": "tests/auth_tests/test_views.py:LogoutThenLoginTests.confirm_logged_out",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_next_page_specified",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_next_page_specified",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_next_page_specified",
      "target": "tests/auth_tests/test_views.py:LogoutTest.confirm_logged_out",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_next_page_specified",
      "target": "tests/auth_tests/test_views.py:LogoutThenLoginTests.confirm_logged_out",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_redirect_argument",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_redirect_argument",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_redirect_argument",
      "target": "tests/auth_tests/test_views.py:LogoutTest.confirm_logged_out",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_redirect_argument",
      "target": "tests/auth_tests/test_views.py:LogoutThenLoginTests.confirm_logged_out",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_custom_redirect_argument",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_custom_redirect_argument",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_custom_redirect_argument",
      "target": "tests/auth_tests/test_views.py:LogoutTest.confirm_logged_out",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_custom_redirect_argument",
      "target": "tests/auth_tests/test_views.py:LogoutThenLoginTests.confirm_logged_out",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_named_redirect",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_named_redirect",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_named_redirect",
      "target": "tests/auth_tests/test_views.py:LogoutTest.confirm_logged_out",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_with_named_redirect",
      "target": "tests/auth_tests/test_views.py:LogoutThenLoginTests.confirm_logged_out",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_success_url_allowed_hosts_same_host",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_success_url_allowed_hosts_same_host",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_success_url_allowed_hosts_same_host",
      "target": "tests/auth_tests/test_views.py:LogoutTest.confirm_logged_out",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_success_url_allowed_hosts_same_host",
      "target": "tests/auth_tests/test_views.py:LogoutThenLoginTests.confirm_logged_out",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_success_url_allowed_hosts_safe_host",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_success_url_allowed_hosts_safe_host",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_success_url_allowed_hosts_safe_host",
      "target": "tests/auth_tests/test_views.py:LogoutTest.confirm_logged_out",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_success_url_allowed_hosts_safe_host",
      "target": "tests/auth_tests/test_views.py:LogoutThenLoginTests.confirm_logged_out",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_success_url_allowed_hosts_unsafe_host",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_success_url_allowed_hosts_unsafe_host",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_success_url_allowed_hosts_unsafe_host",
      "target": "tests/auth_tests/test_views.py:LogoutTest.confirm_logged_out",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_success_url_allowed_hosts_unsafe_host",
      "target": "tests/auth_tests/test_views.py:LogoutThenLoginTests.confirm_logged_out",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_security_check",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_security_check",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_security_check",
      "target": "tests/auth_tests/test_views.py:LogoutTest.confirm_logged_out",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_security_check",
      "target": "tests/auth_tests/test_views.py:LogoutThenLoginTests.confirm_logged_out",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_security_check_https",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_security_check_https",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_security_check_https",
      "target": "tests/auth_tests/test_views.py:LogoutTest.confirm_logged_out",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_security_check_https",
      "target": "tests/auth_tests/test_views.py:LogoutThenLoginTests.confirm_logged_out",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_preserve_language",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_redirect_url_setting",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_redirect_url_setting",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_redirect_url_named_setting",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:LogoutTest.test_logout_redirect_url_named_setting",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:get_perm",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests",
      "target": "tests/auth_tests/test_views.py:ChangelistTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests",
      "target": "tests/auth_tests/test_views.py:ChangelistTests.setUp",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests",
      "target": "tests/auth_tests/test_views.py:ChangelistTests.get_user_data",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests",
      "target": "tests/auth_tests/test_views.py:ChangelistTests.test_changelist_disallows_password_lookups",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests",
      "target": "tests/auth_tests/test_views.py:ChangelistTests.test_user_change_email",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests",
      "target": "tests/auth_tests/test_views.py:ChangelistTests.test_user_not_change",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests",
      "target": "tests/auth_tests/test_views.py:ChangelistTests.test_user_change_password",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests",
      "target": "tests/auth_tests/test_views.py:ChangelistTests.test_user_change_different_user_password",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests",
      "target": "tests/auth_tests/test_views.py:ChangelistTests.test_password_change_bad_url",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests",
      "target": "tests/auth_tests/test_views.py:ChangelistTests.test_user_change_password_passes_user_to_has_change_permission",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests",
      "target": "tests/auth_tests/test_views.py:ChangelistTests.test_view_user_password_is_readonly",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests.setUpTestData",
      "target": "tests/auth_tests/test_views.py:CustomUserPasswordResetTest.setUpTestData",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests.setUpTestData",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.setUpTestData",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests.setUp",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests.setUp",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests.test_changelist_disallows_password_lookups",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests.test_user_change_email",
      "target": "tests/auth_tests/test_views.py:ChangelistTests.get_user_data",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests.test_user_change_email",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests.test_user_not_change",
      "target": "tests/auth_tests/test_views.py:ChangelistTests.get_user_data",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests.test_user_not_change",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests.test_user_change_password",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests.test_user_change_password",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests.test_user_change_password",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests.test_user_change_password",
      "target": "tests/auth_tests/test_views.py:ChangePasswordTest.logout",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests.test_user_change_password",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.logout",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests.test_user_change_different_user_password",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests.test_user_change_different_user_password",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests.test_password_change_bad_url",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests.test_user_change_password_passes_user_to_has_change_permission",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests.test_view_user_password_is_readonly",
      "target": "tests/auth_tests/test_views.py:ChangelistTests.get_user_data",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests.test_view_user_password_is_readonly",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests.test_view_user_password_is_readonly",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:ChangelistTests.test_view_user_password_is_readonly",
      "target": "tests/auth_tests/test_views.py:get_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:UUIDUserTests",
      "target": "tests/auth_tests/test_views.py:UUIDUserTests.test_admin_password_change",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_views.py:UUIDUserTests.test_admin_password_change",
      "target": "tests/auth_tests/test_views.py:AuthViewsTestCase.login",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:UUIDUserTests.test_admin_password_change",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.post",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_views.py:UUIDUserTests.test_admin_password_change",
      "target": "tests/auth_tests/client.py:PasswordResetConfirmClient.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_hashers.py",
      "target": "tests/auth_tests/test_hashers.py:PBKDF2SingleIterationHasher",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py",
      "target": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPassArgon2",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_simple",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_pbkdf2",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_sha1",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_md5",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_unsalted_md5",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_unsalted_sha1",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_crypt",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_bcrypt_sha256",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_bcrypt",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_bcrypt_upgrade",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_bcrypt_harden_runtime",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_unusable",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_unspecified_password",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_bad_algorithm",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_is_password_usable",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_low_level_pbkdf2",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_low_level_pbkdf2_sha1",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_upgrade",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_no_upgrade",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_no_upgrade_on_incorrect_pass",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_pbkdf2_upgrade",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_pbkdf2_harden_runtime",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_pbkdf2_upgrade_new_hasher",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_check_password_calls_harden_runtime",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_bcrypt_upgrade",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_bcrypt_upgrade.setter",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_upgrade",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_upgrade.setter",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_no_upgrade",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_no_upgrade.setter",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_no_upgrade_on_incorrect_pass",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_no_upgrade_on_incorrect_pass.setter",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_pbkdf2_upgrade",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_pbkdf2_upgrade.setter",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_pbkdf2_upgrade_new_hasher",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPass.test_pbkdf2_upgrade_new_hasher.setter",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests",
      "target": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests.setUp",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests",
      "target": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests.test_load_library_no_algorithm",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests",
      "target": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests.test_load_library_importerror",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests",
      "target": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests.test_attributes",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests",
      "target": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests.test_encode",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests",
      "target": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests.test_harden_runtime",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests",
      "target": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests.test_must_update",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests",
      "target": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests.test_safe_summary",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests",
      "target": "tests/auth_tests/test_hashers.py:BasePasswordHasherTests.test_verify",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPassArgon2",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPassArgon2.test_argon2",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPassArgon2",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPassArgon2.test_argon2_upgrade",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPassArgon2",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPassArgon2.test_argon2_version_upgrade",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPassArgon2",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPassArgon2._test_argon2_upgrade",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPassArgon2.test_argon2_upgrade",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPassArgon2._test_argon2_upgrade",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPassArgon2.test_argon2_version_upgrade",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPassArgon2.test_argon2_version_upgrade.setter",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_hashers.py:TestUtilsHashPassArgon2._test_argon2_upgrade",
      "target": "tests/auth_tests/test_hashers.py:TestUtilsHashPassArgon2._test_argon2_upgrade.setter",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py",
      "target": "tests/auth_tests/test_validators.py:PasswordValidationTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py",
      "target": "tests/auth_tests/test_validators.py:MinimumLengthValidatorTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py",
      "target": "tests/auth_tests/test_validators.py:UserAttributeSimilarityValidatorTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py",
      "target": "tests/auth_tests/test_validators.py:CommonPasswordValidatorTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py",
      "target": "tests/auth_tests/test_validators.py:NumericPasswordValidatorTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py",
      "target": "tests/auth_tests/test_validators.py:UsernameValidatorsTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py:PasswordValidationTest",
      "target": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_get_default_password_validators",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py:PasswordValidationTest",
      "target": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_get_password_validators_custom",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py:PasswordValidationTest",
      "target": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_validate_password",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py:PasswordValidationTest",
      "target": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_password_changed",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py:PasswordValidationTest",
      "target": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_password_changed_with_custom_validator",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py:PasswordValidationTest",
      "target": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_password_validators_help_texts",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py:PasswordValidationTest",
      "target": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_password_validators_help_text_html",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py:PasswordValidationTest",
      "target": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_password_validators_help_text_html_escaping",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py:PasswordValidationTest",
      "target": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_empty_password_validator_help_text_html",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_password_changed_with_custom_validator",
      "target": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_password_changed_with_custom_validator.Validator",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_password_changed_with_custom_validator",
      "target": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_password_changed_with_custom_validator.Validator",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_password_changed_with_custom_validator",
      "target": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_password_changed_with_custom_validator.Validator.password_changed",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_password_changed_with_custom_validator.Validator",
      "target": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_password_changed_with_custom_validator.Validator.password_changed",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_password_validators_help_text_html_escaping",
      "target": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_password_validators_help_text_html_escaping.AmpersandValidator",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_password_validators_help_text_html_escaping",
      "target": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_password_validators_help_text_html_escaping.AmpersandValidator",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_password_validators_help_text_html_escaping.AmpersandValidator",
      "target": "tests/auth_tests/test_validators.py:PasswordValidationTest.test_password_validators_help_text_html_escaping.AmpersandValidator.get_help_text",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py:MinimumLengthValidatorTest",
      "target": "tests/auth_tests/test_validators.py:MinimumLengthValidatorTest.test_validate",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py:MinimumLengthValidatorTest",
      "target": "tests/auth_tests/test_validators.py:MinimumLengthValidatorTest.test_help_text",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py:UserAttributeSimilarityValidatorTest",
      "target": "tests/auth_tests/test_validators.py:UserAttributeSimilarityValidatorTest.test_validate",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py:UserAttributeSimilarityValidatorTest",
      "target": "tests/auth_tests/test_validators.py:UserAttributeSimilarityValidatorTest.test_validate_property",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py:UserAttributeSimilarityValidatorTest",
      "target": "tests/auth_tests/test_validators.py:UserAttributeSimilarityValidatorTest.test_help_text",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py:UserAttributeSimilarityValidatorTest.test_validate_property",
      "target": "tests/auth_tests/test_validators.py:UserAttributeSimilarityValidatorTest.test_validate_property.TestUser",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py:UserAttributeSimilarityValidatorTest.test_validate_property",
      "target": "tests/auth_tests/test_validators.py:UserAttributeSimilarityValidatorTest.test_validate_property.TestUser",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_validators.py:UserAttributeSimilarityValidatorTest.test_validate_property.TestUser",
      "target": "tests/auth_tests/test_validators.py:UserAttributeSimilarityValidatorTest.test_validate_property.TestUser.username",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py:CommonPasswordValidatorTest",
      "target": "tests/auth_tests/test_validators.py:CommonPasswordValidatorTest.test_validate",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py:CommonPasswordValidatorTest",
      "target": "tests/auth_tests/test_validators.py:CommonPasswordValidatorTest.test_validate_custom_list",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py:CommonPasswordValidatorTest",
      "target": "tests/auth_tests/test_validators.py:CommonPasswordValidatorTest.test_validate_django_supplied_file",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py:CommonPasswordValidatorTest",
      "target": "tests/auth_tests/test_validators.py:CommonPasswordValidatorTest.test_help_text",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py:NumericPasswordValidatorTest",
      "target": "tests/auth_tests/test_validators.py:NumericPasswordValidatorTest.test_validate",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py:NumericPasswordValidatorTest",
      "target": "tests/auth_tests/test_validators.py:NumericPasswordValidatorTest.test_help_text",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py:UsernameValidatorsTests",
      "target": "tests/auth_tests/test_validators.py:UsernameValidatorsTests.test_unicode_validator",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_validators.py:UsernameValidatorsTests",
      "target": "tests/auth_tests/test_validators.py:UsernameValidatorsTests.test_ascii_validator",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py",
      "target": "tests/auth_tests/test_mixins.py:AlwaysTrueMixin",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py",
      "target": "tests/auth_tests/test_mixins.py:AlwaysFalseMixin",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py",
      "target": "tests/auth_tests/test_mixins.py:EmptyResponseView",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py",
      "target": "tests/auth_tests/test_mixins.py:AlwaysTrueView",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py",
      "target": "tests/auth_tests/test_mixins.py:AlwaysFalseView",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py",
      "target": "tests/auth_tests/test_mixins.py:StackedMixinsView1",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py",
      "target": "tests/auth_tests/test_mixins.py:StackedMixinsView2",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py",
      "target": "tests/auth_tests/test_mixins.py:AccessMixinTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py",
      "target": "tests/auth_tests/test_mixins.py:UserPassesTestTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py",
      "target": "tests/auth_tests/test_mixins.py:LoginRequiredMixinTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py",
      "target": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:AlwaysTrueMixin",
      "target": "tests/auth_tests/test_mixins.py:AlwaysTrueMixin.test_func",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:AlwaysFalseMixin",
      "target": "tests/auth_tests/test_mixins.py:AlwaysFalseMixin.test_func",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:EmptyResponseView",
      "target": "tests/auth_tests/test_mixins.py:EmptyResponseView.get",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:AlwaysTrueView",
      "target": "tests/auth_tests/test_mixins.py:EmptyResponseView",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:AlwaysTrueView",
      "target": "tests/auth_tests/test_mixins.py:AlwaysTrueMixin",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:AlwaysFalseView",
      "target": "tests/auth_tests/test_mixins.py:EmptyResponseView",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:AlwaysFalseView",
      "target": "tests/auth_tests/test_mixins.py:AlwaysFalseMixin",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:StackedMixinsView1",
      "target": "tests/auth_tests/test_mixins.py:EmptyResponseView",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:StackedMixinsView2",
      "target": "tests/auth_tests/test_mixins.py:EmptyResponseView",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:AccessMixinTests",
      "target": "tests/auth_tests/test_mixins.py:AccessMixinTests.test_stacked_mixins_success",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:AccessMixinTests",
      "target": "tests/auth_tests/test_mixins.py:AccessMixinTests.test_stacked_mixins_missing_permission",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:AccessMixinTests",
      "target": "tests/auth_tests/test_mixins.py:AccessMixinTests.test_access_mixin_permission_denied_response",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:AccessMixinTests",
      "target": "tests/auth_tests/test_mixins.py:AccessMixinTests.test_stacked_mixins_not_logged_in",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:AccessMixinTests.test_stacked_mixins_success",
      "target": "tests/auth_tests/test_mixins.py:EmptyResponseView.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:AccessMixinTests.test_stacked_mixins_missing_permission",
      "target": "tests/auth_tests/test_mixins.py:EmptyResponseView.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:AccessMixinTests.test_access_mixin_permission_denied_response",
      "target": "tests/auth_tests/test_mixins.py:EmptyResponseView.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:AccessMixinTests.test_stacked_mixins_not_logged_in",
      "target": "tests/auth_tests/test_mixins.py:EmptyResponseView.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests",
      "target": "tests/auth_tests/test_mixins.py:UserPassesTestTests._test_redirect",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests",
      "target": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_default",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests",
      "target": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_custom_redirect_url",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests",
      "target": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_custom_redirect_parameter",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests",
      "target": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_no_redirect_parameter",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests",
      "target": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_raise_exception",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests",
      "target": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_raise_exception_custom_message",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests",
      "target": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_raise_exception_custom_message_function",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests",
      "target": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_user_passes",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests._test_redirect",
      "target": "tests/auth_tests/test_mixins.py:EmptyResponseView.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_default",
      "target": "tests/auth_tests/test_mixins.py:UserPassesTestTests._test_redirect",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_custom_redirect_url",
      "target": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_custom_redirect_url.AView",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_custom_redirect_url",
      "target": "tests/auth_tests/test_mixins.py:UserPassesTestTests._test_redirect",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_custom_redirect_url.AView",
      "target": "tests/auth_tests/test_mixins.py:AlwaysFalseView",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_custom_redirect_parameter",
      "target": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_custom_redirect_parameter.AView",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_custom_redirect_parameter",
      "target": "tests/auth_tests/test_mixins.py:UserPassesTestTests._test_redirect",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_custom_redirect_parameter.AView",
      "target": "tests/auth_tests/test_mixins.py:AlwaysFalseView",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_no_redirect_parameter",
      "target": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_no_redirect_parameter.AView",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_no_redirect_parameter",
      "target": "tests/auth_tests/test_mixins.py:UserPassesTestTests._test_redirect",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_no_redirect_parameter.AView",
      "target": "tests/auth_tests/test_mixins.py:AlwaysFalseView",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_raise_exception",
      "target": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_raise_exception.AView",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_raise_exception",
      "target": "tests/auth_tests/test_mixins.py:EmptyResponseView.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_raise_exception.AView",
      "target": "tests/auth_tests/test_mixins.py:AlwaysFalseView",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_raise_exception_custom_message",
      "target": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_raise_exception_custom_message.AView",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_raise_exception_custom_message",
      "target": "tests/auth_tests/test_mixins.py:EmptyResponseView.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_raise_exception_custom_message.AView",
      "target": "tests/auth_tests/test_mixins.py:AlwaysFalseView",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_raise_exception_custom_message_function",
      "target": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_raise_exception_custom_message_function.AView",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_raise_exception_custom_message_function",
      "target": "tests/auth_tests/test_mixins.py:EmptyResponseView.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_raise_exception_custom_message_function.AView",
      "target": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_raise_exception_custom_message_function.AView.get_permission_denied_message",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_raise_exception_custom_message_function.AView",
      "target": "tests/auth_tests/test_mixins.py:AlwaysFalseView",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:UserPassesTestTests.test_user_passes",
      "target": "tests/auth_tests/test_mixins.py:EmptyResponseView.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:LoginRequiredMixinTests",
      "target": "tests/auth_tests/test_mixins.py:LoginRequiredMixinTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:LoginRequiredMixinTests",
      "target": "tests/auth_tests/test_mixins.py:LoginRequiredMixinTests.test_login_required",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:LoginRequiredMixinTests.test_login_required",
      "target": "tests/auth_tests/test_mixins.py:LoginRequiredMixinTests.test_login_required.AView",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:LoginRequiredMixinTests.test_login_required",
      "target": "tests/auth_tests/test_mixins.py:EmptyResponseView.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:LoginRequiredMixinTests.test_login_required.AView",
      "target": "tests/auth_tests/test_mixins.py:EmptyResponseView",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests",
      "target": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests",
      "target": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.test_many_permissions_pass",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests",
      "target": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.test_single_permission_pass",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests",
      "target": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.test_permissioned_denied_redirect",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests",
      "target": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.test_permissioned_denied_exception_raised",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.test_many_permissions_pass",
      "target": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.test_many_permissions_pass.AView",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.test_many_permissions_pass",
      "target": "tests/auth_tests/test_mixins.py:EmptyResponseView.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.test_many_permissions_pass.AView",
      "target": "tests/auth_tests/test_mixins.py:EmptyResponseView",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.test_single_permission_pass",
      "target": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.test_single_permission_pass.AView",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.test_single_permission_pass",
      "target": "tests/auth_tests/test_mixins.py:EmptyResponseView.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.test_single_permission_pass.AView",
      "target": "tests/auth_tests/test_mixins.py:EmptyResponseView",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.test_permissioned_denied_redirect",
      "target": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.test_permissioned_denied_redirect.AView",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.test_permissioned_denied_redirect",
      "target": "tests/auth_tests/test_mixins.py:EmptyResponseView.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.test_permissioned_denied_redirect.AView",
      "target": "tests/auth_tests/test_mixins.py:EmptyResponseView",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.test_permissioned_denied_exception_raised",
      "target": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.test_permissioned_denied_exception_raised.AView",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.test_permissioned_denied_exception_raised",
      "target": "tests/auth_tests/test_mixins.py:EmptyResponseView.get",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_mixins.py:PermissionsRequiredMixinTests.test_permissioned_denied_exception_raised.AView",
      "target": "tests/auth_tests/test_mixins.py:EmptyResponseView",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/test_auth_backends.py:CountingMD5PasswordHasher",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/test_auth_backends.py:ModelBackendTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/test_auth_backends.py:ExtensionUserModelBackendTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/test_auth_backends.py:CustomPermissionsUserModelBackendTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/test_auth_backends.py:CustomUserModelBackendAuthenticateTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/test_auth_backends.py:UUIDUserTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/test_auth_backends.py:TestObj",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/test_auth_backends.py:RowlevelBackendTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/test_auth_backends.py:NoBackendsTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/test_auth_backends.py:InActiveUserBackendTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/test_auth_backends.py:NewModelBackend",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/test_auth_backends.py:ChangedBackendSettingsTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/test_auth_backends.py:TypeErrorBackend",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/test_auth_backends.py:SkippedBackend",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/test_auth_backends.py:AuthenticateTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/test_auth_backends.py:ImproperlyConfiguredUserModelTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/test_auth_backends.py:ImportedModelBackend",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/test_auth_backends.py:CustomModelBackend",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/test_auth_backends.py:OtherModelBackend",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/test_auth_backends.py:ImportedBackendTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/test_auth_backends.py:SelectingBackendTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/test_auth_backends.py:AllowAllUsersModelBackendTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py",
      "target": "tests/auth_tests/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:CountingMD5PasswordHasher",
      "target": "tests/auth_tests/test_auth_backends.py:CountingMD5PasswordHasher.encode",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.setUp",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.tearDown",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_has_perm",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_custom_perms",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_has_no_object_perm",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_anonymous_has_no_permissions",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_inactive_has_no_permissions",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_get_all_superuser_permissions",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_authentication_timing",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.setUp",
      "target": "tests/auth_tests/test_auth_backends.py:ExtensionUserModelBackendTest.create_users",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.setUp",
      "target": "tests/auth_tests/test_auth_backends.py:ModelBackendTest.create_users",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.setUp",
      "target": "tests/auth_tests/test_auth_backends.py:CustomPermissionsUserModelBackendTest.create_users",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_has_perm",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_has_perm",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_has_perm",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_custom_perms",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.has_module_perms",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_custom_perms",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.has_module_perms",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_custom_perms",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.has_module_perms",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_custom_perms",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.has_perms",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_custom_perms",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.get_group_permissions",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_custom_perms",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.get_group_permissions",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_custom_perms",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.get_all_permissions",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_custom_perms",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.get_all_permissions",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_custom_perms",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_custom_perms",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_custom_perms",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_has_no_object_perm",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.get_all_permissions",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_has_no_object_perm",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.get_all_permissions",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_has_no_object_perm",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_has_no_object_perm",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_has_no_object_perm",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_anonymous_has_no_permissions",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.get_group_permissions",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_anonymous_has_no_permissions",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.get_group_permissions",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_anonymous_has_no_permissions",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.get_all_permissions",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_anonymous_has_no_permissions",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.get_all_permissions",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_inactive_has_no_permissions",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.get_group_permissions",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_inactive_has_no_permissions",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.get_group_permissions",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_inactive_has_no_permissions",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.get_all_permissions",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_inactive_has_no_permissions",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.get_all_permissions",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_get_all_superuser_permissions",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.get_all_permissions",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_get_all_superuser_permissions",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.get_all_permissions",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_authentication_timing",
      "target": "tests/auth_tests/test_auth_backends.py:SkippedBackend.authenticate",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_authentication_timing",
      "target": "tests/auth_tests/test_auth_backends.py:TypeErrorBackend.authenticate",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest.test_authentication_timing",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.authenticate",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:ModelBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:ModelBackendTest.create_users",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:ModelBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:ModelBackendTest.test_authenticate_inactive",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:ModelBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:ModelBackendTest.test_authenticate_user_without_is_active_field",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:ModelBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:ModelBackendTest.test_authenticate_inactive",
      "target": "tests/auth_tests/test_auth_backends.py:SkippedBackend.authenticate",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:ModelBackendTest.test_authenticate_inactive",
      "target": "tests/auth_tests/test_auth_backends.py:TypeErrorBackend.authenticate",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:ModelBackendTest.test_authenticate_inactive",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.authenticate",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:ModelBackendTest.test_authenticate_user_without_is_active_field",
      "target": "tests/auth_tests/test_auth_backends.py:SkippedBackend.authenticate",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:ModelBackendTest.test_authenticate_user_without_is_active_field",
      "target": "tests/auth_tests/test_auth_backends.py:TypeErrorBackend.authenticate",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:ModelBackendTest.test_authenticate_user_without_is_active_field",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.authenticate",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:ExtensionUserModelBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:ExtensionUserModelBackendTest.create_users",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:ExtensionUserModelBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:CustomPermissionsUserModelBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:CustomPermissionsUserModelBackendTest.create_users",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:CustomPermissionsUserModelBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:BaseModelBackendTest",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:CustomUserModelBackendAuthenticateTest",
      "target": "tests/auth_tests/test_auth_backends.py:CustomUserModelBackendAuthenticateTest.test_authenticate",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:CustomUserModelBackendAuthenticateTest.test_authenticate",
      "target": "tests/auth_tests/test_auth_backends.py:SkippedBackend.authenticate",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:CustomUserModelBackendAuthenticateTest.test_authenticate",
      "target": "tests/auth_tests/test_auth_backends.py:TypeErrorBackend.authenticate",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:CustomUserModelBackendAuthenticateTest.test_authenticate",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.authenticate",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:UUIDUserTests",
      "target": "tests/auth_tests/test_auth_backends.py:UUIDUserTests.test_login",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.has_perm",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.has_module_perms",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.get_all_permissions",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.get_group_permissions",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:RowlevelBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:RowlevelBackendTest.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:RowlevelBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:RowlevelBackendTest.tearDown",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:RowlevelBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:RowlevelBackendTest.test_has_perm",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:RowlevelBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:RowlevelBackendTest.test_get_all_permissions",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:RowlevelBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:RowlevelBackendTest.test_get_group_permissions",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:RowlevelBackendTest.test_has_perm",
      "target": "tests/auth_tests/test_auth_backends.py:TestObj",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:RowlevelBackendTest.test_has_perm",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.has_perms",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:RowlevelBackendTest.test_has_perm",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:RowlevelBackendTest.test_has_perm",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:RowlevelBackendTest.test_has_perm",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:RowlevelBackendTest.test_get_all_permissions",
      "target": "tests/auth_tests/test_auth_backends.py:TestObj",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:RowlevelBackendTest.test_get_all_permissions",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.get_all_permissions",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:RowlevelBackendTest.test_get_all_permissions",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.get_all_permissions",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:RowlevelBackendTest.test_get_group_permissions",
      "target": "tests/auth_tests/test_auth_backends.py:TestObj",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:RowlevelBackendTest.test_get_group_permissions",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.get_group_permissions",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:RowlevelBackendTest.test_get_group_permissions",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.get_group_permissions",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest.setUp",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest.test_has_perm",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest.test_has_perms",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest.test_has_module_perms",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest.test_get_all_permissions",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest.test_has_perm",
      "target": "tests/auth_tests/test_auth_backends.py:TestObj",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest.test_has_perm",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest.test_has_perm",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest.test_has_perm",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest.test_has_perms",
      "target": "tests/auth_tests/test_auth_backends.py:TestObj",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest.test_has_perms",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.has_perms",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest.test_has_module_perms",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.has_module_perms",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest.test_has_module_perms",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.has_module_perms",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest.test_has_module_perms",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.has_module_perms",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest.test_get_all_permissions",
      "target": "tests/auth_tests/test_auth_backends.py:TestObj",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest.test_get_all_permissions",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.get_all_permissions",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AnonymousUserBackendTest.test_get_all_permissions",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.get_all_permissions",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:NoBackendsTest",
      "target": "tests/auth_tests/test_auth_backends.py:NoBackendsTest.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:NoBackendsTest",
      "target": "tests/auth_tests/test_auth_backends.py:NoBackendsTest.test_raises_exception",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:NoBackendsTest.test_raises_exception",
      "target": "tests/auth_tests/test_auth_backends.py:TestObj",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:NoBackendsTest.test_raises_exception",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:NoBackendsTest.test_raises_exception",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:NoBackendsTest.test_raises_exception",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:InActiveUserBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:InActiveUserBackendTest.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:InActiveUserBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:InActiveUserBackendTest.test_has_perm",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:InActiveUserBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:InActiveUserBackendTest.test_has_module_perms",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:InActiveUserBackendTest.test_has_perm",
      "target": "tests/auth_tests/test_auth_backends.py:TestObj",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:InActiveUserBackendTest.test_has_perm",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:InActiveUserBackendTest.test_has_perm",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:InActiveUserBackendTest.test_has_perm",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:InActiveUserBackendTest.test_has_module_perms",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.has_module_perms",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:InActiveUserBackendTest.test_has_module_perms",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.has_module_perms",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:InActiveUserBackendTest.test_has_module_perms",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.has_module_perms",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.authenticate",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.has_perm",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.has_module_perms",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.setUp",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.tearDown",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.user_login_failed_listener",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.test_permission_denied",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.test_authenticates",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.test_has_perm_denied",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.test_has_perm",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.test_permission_denied",
      "target": "tests/auth_tests/test_auth_backends.py:SkippedBackend.authenticate",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.test_permission_denied",
      "target": "tests/auth_tests/test_auth_backends.py:TypeErrorBackend.authenticate",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.test_permission_denied",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.authenticate",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.test_authenticates",
      "target": "tests/auth_tests/test_auth_backends.py:SkippedBackend.authenticate",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.test_authenticates",
      "target": "tests/auth_tests/test_auth_backends.py:TypeErrorBackend.authenticate",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.test_authenticates",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.authenticate",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.test_has_perm_denied",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.has_module_perms",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.test_has_perm_denied",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.has_module_perms",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.test_has_perm_denied",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.has_module_perms",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.test_has_perm_denied",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.test_has_perm_denied",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.test_has_perm_denied",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.test_has_perm",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.has_module_perms",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.test_has_perm",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.has_module_perms",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.test_has_perm",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.has_module_perms",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.test_has_perm",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.test_has_perm",
      "target": "tests/auth_tests/test_auth_backends.py:SimpleRowlevelBackend.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackendTest.test_has_perm",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.has_perm",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:ChangedBackendSettingsTest",
      "target": "tests/auth_tests/test_auth_backends.py:ChangedBackendSettingsTest.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:ChangedBackendSettingsTest",
      "target": "tests/auth_tests/test_auth_backends.py:ChangedBackendSettingsTest.test_changed_backend_settings",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:TypeErrorBackend",
      "target": "tests/auth_tests/test_auth_backends.py:TypeErrorBackend.authenticate",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:SkippedBackend",
      "target": "tests/auth_tests/test_auth_backends.py:SkippedBackend.authenticate",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AuthenticateTests",
      "target": "tests/auth_tests/test_auth_backends.py:AuthenticateTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AuthenticateTests",
      "target": "tests/auth_tests/test_auth_backends.py:AuthenticateTests.test_type_error_raised",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AuthenticateTests",
      "target": "tests/auth_tests/test_auth_backends.py:AuthenticateTests.test_skips_backends_without_arguments",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AuthenticateTests.test_type_error_raised",
      "target": "tests/auth_tests/test_auth_backends.py:SkippedBackend.authenticate",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AuthenticateTests.test_type_error_raised",
      "target": "tests/auth_tests/test_auth_backends.py:TypeErrorBackend.authenticate",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AuthenticateTests.test_type_error_raised",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.authenticate",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AuthenticateTests.test_skips_backends_without_arguments",
      "target": "tests/auth_tests/test_auth_backends.py:SkippedBackend.authenticate",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AuthenticateTests.test_skips_backends_without_arguments",
      "target": "tests/auth_tests/test_auth_backends.py:TypeErrorBackend.authenticate",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AuthenticateTests.test_skips_backends_without_arguments",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.authenticate",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:ImproperlyConfiguredUserModelTest",
      "target": "tests/auth_tests/test_auth_backends.py:ImproperlyConfiguredUserModelTest.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:ImproperlyConfiguredUserModelTest",
      "target": "tests/auth_tests/test_auth_backends.py:ImproperlyConfiguredUserModelTest.setUp",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:ImproperlyConfiguredUserModelTest",
      "target": "tests/auth_tests/test_auth_backends.py:ImproperlyConfiguredUserModelTest.test_does_not_shadow_exception",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:ImportedBackendTests",
      "target": "tests/auth_tests/test_auth_backends.py:ImportedBackendTests.test_backend_path",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:SelectingBackendTests",
      "target": "tests/auth_tests/test_auth_backends.py:SelectingBackendTests.assertBackendInSession",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:SelectingBackendTests",
      "target": "tests/auth_tests/test_auth_backends.py:SelectingBackendTests.test_backend_path_login_without_authenticate_single_backend",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:SelectingBackendTests",
      "target": "tests/auth_tests/test_auth_backends.py:SelectingBackendTests.test_backend_path_login_without_authenticate_multiple_backends",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:SelectingBackendTests",
      "target": "tests/auth_tests/test_auth_backends.py:SelectingBackendTests.test_non_string_backend",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:SelectingBackendTests",
      "target": "tests/auth_tests/test_auth_backends.py:SelectingBackendTests.test_backend_path_login_with_explicit_backends",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:SelectingBackendTests.test_backend_path_login_without_authenticate_single_backend",
      "target": "tests/auth_tests/test_auth_backends.py:SelectingBackendTests.assertBackendInSession",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:SelectingBackendTests.test_backend_path_login_with_explicit_backends",
      "target": "tests/auth_tests/test_auth_backends.py:SelectingBackendTests.assertBackendInSession",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AllowAllUsersModelBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:AllowAllUsersModelBackendTest.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AllowAllUsersModelBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:AllowAllUsersModelBackendTest.test_authenticate",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AllowAllUsersModelBackendTest",
      "target": "tests/auth_tests/test_auth_backends.py:AllowAllUsersModelBackendTest.test_get_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AllowAllUsersModelBackendTest.test_authenticate",
      "target": "tests/auth_tests/test_auth_backends.py:SkippedBackend.authenticate",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AllowAllUsersModelBackendTest.test_authenticate",
      "target": "tests/auth_tests/test_auth_backends.py:TypeErrorBackend.authenticate",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_auth_backends.py:AllowAllUsersModelBackendTest.test_authenticate",
      "target": "tests/auth_tests/test_auth_backends.py:PermissionDeniedBackend.authenticate",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py",
      "target": "tests/auth_tests/test_remote_user.py:RemoteUserTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py",
      "target": "tests/auth_tests/test_remote_user.py:RemoteUserNoCreateBackend",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py",
      "target": "tests/auth_tests/test_remote_user.py:RemoteUserNoCreateTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py",
      "target": "tests/auth_tests/test_remote_user.py:AllowAllUsersRemoteUserBackendTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py",
      "target": "tests/auth_tests/test_remote_user.py:CustomRemoteUserBackend",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py",
      "target": "tests/auth_tests/test_remote_user.py:RemoteUserCustomTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py",
      "target": "tests/auth_tests/test_remote_user.py:CustomHeaderMiddleware",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py",
      "target": "tests/auth_tests/test_remote_user.py:CustomHeaderRemoteUserTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py",
      "target": "tests/auth_tests/test_remote_user.py:PersistentRemoteUserTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py:RemoteUserTest",
      "target": "tests/auth_tests/test_remote_user.py:RemoteUserTest.setUp",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py:RemoteUserTest",
      "target": "tests/auth_tests/test_remote_user.py:RemoteUserTest.tearDown",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py:RemoteUserTest",
      "target": "tests/auth_tests/test_remote_user.py:RemoteUserTest.test_no_remote_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py:RemoteUserTest",
      "target": "tests/auth_tests/test_remote_user.py:RemoteUserTest.test_unknown_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py:RemoteUserTest",
      "target": "tests/auth_tests/test_remote_user.py:RemoteUserTest.test_known_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py:RemoteUserTest",
      "target": "tests/auth_tests/test_remote_user.py:RemoteUserTest.test_last_login",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py:RemoteUserTest",
      "target": "tests/auth_tests/test_remote_user.py:RemoteUserTest.test_header_disappears",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py:RemoteUserTest",
      "target": "tests/auth_tests/test_remote_user.py:RemoteUserTest.test_user_switch_forces_new_login",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py:RemoteUserTest",
      "target": "tests/auth_tests/test_remote_user.py:RemoteUserTest.test_inactive_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py:RemoteUserNoCreateTest",
      "target": "tests/auth_tests/test_remote_user.py:RemoteUserNoCreateTest.test_unknown_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py:RemoteUserNoCreateTest",
      "target": "tests/auth_tests/test_remote_user.py:RemoteUserTest",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py:AllowAllUsersRemoteUserBackendTest",
      "target": "tests/auth_tests/test_remote_user.py:AllowAllUsersRemoteUserBackendTest.test_inactive_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py:AllowAllUsersRemoteUserBackendTest",
      "target": "tests/auth_tests/test_remote_user.py:RemoteUserTest",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py:CustomRemoteUserBackend",
      "target": "tests/auth_tests/test_remote_user.py:CustomRemoteUserBackend.clean_username",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py:CustomRemoteUserBackend",
      "target": "tests/auth_tests/test_remote_user.py:CustomRemoteUserBackend.configure_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py:RemoteUserCustomTest",
      "target": "tests/auth_tests/test_remote_user.py:RemoteUserCustomTest.test_known_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py:RemoteUserCustomTest",
      "target": "tests/auth_tests/test_remote_user.py:RemoteUserCustomTest.test_unknown_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py:RemoteUserCustomTest",
      "target": "tests/auth_tests/test_remote_user.py:RemoteUserTest",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py:RemoteUserCustomTest.test_known_user",
      "target": "tests/auth_tests/test_remote_user.py:RemoteUserTest.test_known_user",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py:CustomHeaderRemoteUserTest",
      "target": "tests/auth_tests/test_remote_user.py:RemoteUserTest",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py:PersistentRemoteUserTest",
      "target": "tests/auth_tests/test_remote_user.py:PersistentRemoteUserTest.test_header_disappears",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user.py:PersistentRemoteUserTest",
      "target": "tests/auth_tests/test_remote_user.py:RemoteUserTest",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/test_models.py",
      "target": "tests/auth_tests/test_models.py:NaturalKeysTestCase",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py",
      "target": "tests/auth_tests/test_models.py:LoadDataWithoutNaturalKeysTestCase",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py",
      "target": "tests/auth_tests/test_models.py:LoadDataWithNaturalKeysTestCase",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py",
      "target": "tests/auth_tests/test_models.py:LoadDataWithNaturalKeysAndMultipleDatabasesTestCase",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py",
      "target": "tests/auth_tests/test_models.py:UserManagerTestCase",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py",
      "target": "tests/auth_tests/test_models.py:AbstractBaseUserTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py",
      "target": "tests/auth_tests/test_models.py:AbstractUserTestCase",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py",
      "target": "tests/auth_tests/test_models.py:IsActiveTestCase",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py",
      "target": "tests/auth_tests/test_models.py:TestCreateSuperUserSignals",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py",
      "target": "tests/auth_tests/test_models.py:AnonymousUserTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py",
      "target": "tests/auth_tests/test_models.py:GroupTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py",
      "target": "tests/auth_tests/test_models.py:PermissionTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py",
      "target": "tests/auth_tests/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_models.py",
      "target": "tests/auth_tests/models/with_custom_email_field.py:CustomEmailField",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_models.py:NaturalKeysTestCase",
      "target": "tests/auth_tests/test_models.py:NaturalKeysTestCase.test_user_natural_key",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:NaturalKeysTestCase",
      "target": "tests/auth_tests/test_models.py:NaturalKeysTestCase.test_group_natural_key",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:LoadDataWithoutNaturalKeysTestCase",
      "target": "tests/auth_tests/test_models.py:LoadDataWithoutNaturalKeysTestCase.test_user_is_created_and_added_to_group",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:LoadDataWithNaturalKeysTestCase",
      "target": "tests/auth_tests/test_models.py:LoadDataWithNaturalKeysTestCase.test_user_is_created_and_added_to_group",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:LoadDataWithNaturalKeysAndMultipleDatabasesTestCase",
      "target": "tests/auth_tests/test_models.py:LoadDataWithNaturalKeysAndMultipleDatabasesTestCase.test_load_data_with_user_permissions",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:UserManagerTestCase",
      "target": "tests/auth_tests/test_models.py:UserManagerTestCase.test_create_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:UserManagerTestCase",
      "target": "tests/auth_tests/test_models.py:UserManagerTestCase.test_create_user_email_domain_normalize_rfc3696",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:UserManagerTestCase",
      "target": "tests/auth_tests/test_models.py:UserManagerTestCase.test_create_user_email_domain_normalize",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:UserManagerTestCase",
      "target": "tests/auth_tests/test_models.py:UserManagerTestCase.test_create_user_email_domain_normalize_with_whitespace",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:UserManagerTestCase",
      "target": "tests/auth_tests/test_models.py:UserManagerTestCase.test_empty_username",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:UserManagerTestCase",
      "target": "tests/auth_tests/test_models.py:UserManagerTestCase.test_create_user_is_staff",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:UserManagerTestCase",
      "target": "tests/auth_tests/test_models.py:UserManagerTestCase.test_create_super_user_raises_error_on_false_is_superuser",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:UserManagerTestCase",
      "target": "tests/auth_tests/test_models.py:UserManagerTestCase.test_create_superuser_raises_error_on_false_is_staff",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:UserManagerTestCase",
      "target": "tests/auth_tests/test_models.py:UserManagerTestCase.test_make_random_password",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:AbstractBaseUserTests",
      "target": "tests/auth_tests/test_models.py:AbstractBaseUserTests.test_has_usable_password",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:AbstractBaseUserTests",
      "target": "tests/auth_tests/test_models.py:AbstractBaseUserTests.test_normalize_username",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:AbstractBaseUserTests",
      "target": "tests/auth_tests/test_models.py:AbstractBaseUserTests.test_clean_normalize_username",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:AbstractBaseUserTests",
      "target": "tests/auth_tests/test_models.py:AbstractBaseUserTests.test_default_email",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:AbstractBaseUserTests",
      "target": "tests/auth_tests/test_models.py:AbstractBaseUserTests.test_custom_email",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:AbstractBaseUserTests.test_normalize_username",
      "target": "tests/auth_tests/models/with_integer_username.py:IntegerUsernameUser",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_models.py:AbstractBaseUserTests.test_custom_email",
      "target": "tests/auth_tests/models/with_custom_email_field.py:CustomEmailField",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_models.py:AbstractUserTestCase",
      "target": "tests/auth_tests/test_models.py:AbstractUserTestCase.test_email_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:AbstractUserTestCase",
      "target": "tests/auth_tests/test_models.py:AbstractUserTestCase.test_last_login_default",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:AbstractUserTestCase",
      "target": "tests/auth_tests/test_models.py:AbstractUserTestCase.test_user_clean_normalize_email",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:AbstractUserTestCase",
      "target": "tests/auth_tests/test_models.py:AbstractUserTestCase.test_user_double_save",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:AbstractUserTestCase",
      "target": "tests/auth_tests/test_models.py:AbstractUserTestCase.test_check_password_upgrade",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:IsActiveTestCase",
      "target": "tests/auth_tests/test_models.py:IsActiveTestCase.test_builtin_user_isactive",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:IsActiveTestCase",
      "target": "tests/auth_tests/test_models.py:IsActiveTestCase.test_is_active_field_default",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:TestCreateSuperUserSignals",
      "target": "tests/auth_tests/test_models.py:TestCreateSuperUserSignals.post_save_listener",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:TestCreateSuperUserSignals",
      "target": "tests/auth_tests/test_models.py:TestCreateSuperUserSignals.setUp",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:TestCreateSuperUserSignals",
      "target": "tests/auth_tests/test_models.py:TestCreateSuperUserSignals.tearDown",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:TestCreateSuperUserSignals",
      "target": "tests/auth_tests/test_models.py:TestCreateSuperUserSignals.test_create_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:TestCreateSuperUserSignals",
      "target": "tests/auth_tests/test_models.py:TestCreateSuperUserSignals.test_create_superuser",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:AnonymousUserTests",
      "target": "tests/auth_tests/test_models.py:AnonymousUserTests.setUp",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:AnonymousUserTests",
      "target": "tests/auth_tests/test_models.py:AnonymousUserTests.test_properties",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:AnonymousUserTests",
      "target": "tests/auth_tests/test_models.py:AnonymousUserTests.test_str",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:AnonymousUserTests",
      "target": "tests/auth_tests/test_models.py:AnonymousUserTests.test_eq",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:AnonymousUserTests",
      "target": "tests/auth_tests/test_models.py:AnonymousUserTests.test_hash",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:AnonymousUserTests",
      "target": "tests/auth_tests/test_models.py:AnonymousUserTests.test_int",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:AnonymousUserTests",
      "target": "tests/auth_tests/test_models.py:AnonymousUserTests.test_delete",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:AnonymousUserTests",
      "target": "tests/auth_tests/test_models.py:AnonymousUserTests.test_save",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:AnonymousUserTests",
      "target": "tests/auth_tests/test_models.py:AnonymousUserTests.test_set_password",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:AnonymousUserTests",
      "target": "tests/auth_tests/test_models.py:AnonymousUserTests.test_check_password",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:AnonymousUserTests.test_properties",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.get_group_permissions",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_models.py:GroupTests",
      "target": "tests/auth_tests/test_models.py:GroupTests.test_str",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_models.py:PermissionTests",
      "target": "tests/auth_tests/test_models.py:PermissionTests.test_str",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py",
      "target": "tests/auth_tests/test_checks.py:UserModelChecksTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py",
      "target": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py",
      "target": "tests/auth_tests/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_checks.py:UserModelChecksTests",
      "target": "tests/auth_tests/test_checks.py:UserModelChecksTests.test_required_fields_is_list",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py:UserModelChecksTests",
      "target": "tests/auth_tests/test_checks.py:UserModelChecksTests.test_username_not_in_required_fields",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py:UserModelChecksTests",
      "target": "tests/auth_tests/test_checks.py:UserModelChecksTests.test_username_non_unique",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py:UserModelChecksTests",
      "target": "tests/auth_tests/test_checks.py:UserModelChecksTests.test_is_anonymous_authenticated_methods",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py:UserModelChecksTests.test_required_fields_is_list",
      "target": "tests/auth_tests/test_checks.py:UserModelChecksTests.test_required_fields_is_list.CustomUserNonListRequiredFields",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py:UserModelChecksTests.test_username_not_in_required_fields",
      "target": "tests/auth_tests/test_checks.py:UserModelChecksTests.test_username_not_in_required_fields.CustomUserBadRequiredFields",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py:UserModelChecksTests.test_is_anonymous_authenticated_methods",
      "target": "tests/auth_tests/test_checks.py:UserModelChecksTests.test_is_anonymous_authenticated_methods.BadUser",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py:UserModelChecksTests.test_is_anonymous_authenticated_methods.BadUser",
      "target": "tests/auth_tests/test_checks.py:UserModelChecksTests.test_is_anonymous_authenticated_methods.BadUser.is_anonymous",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py:UserModelChecksTests.test_is_anonymous_authenticated_methods.BadUser",
      "target": "tests/auth_tests/test_checks.py:UserModelChecksTests.test_is_anonymous_authenticated_methods.BadUser.is_authenticated",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests",
      "target": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_clashing_default_permissions",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests",
      "target": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_non_clashing_custom_permissions",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests",
      "target": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_clashing_custom_permissions",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests",
      "target": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_verbose_name_max_length",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests",
      "target": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_custom_permission_name_max_length",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests",
      "target": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_empty_default_permissions",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_clashing_default_permissions",
      "target": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_clashing_default_permissions.Checked",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_clashing_default_permissions.Checked",
      "target": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_clashing_default_permissions.Checked.Meta",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_non_clashing_custom_permissions",
      "target": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_non_clashing_custom_permissions.Checked",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_non_clashing_custom_permissions.Checked",
      "target": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_non_clashing_custom_permissions.Checked.Meta",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_clashing_custom_permissions",
      "target": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_clashing_custom_permissions.Checked",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_clashing_custom_permissions.Checked",
      "target": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_clashing_custom_permissions.Checked.Meta",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_verbose_name_max_length",
      "target": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_verbose_name_max_length.Checked",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_verbose_name_max_length.Checked",
      "target": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_verbose_name_max_length.Checked.Meta",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_custom_permission_name_max_length",
      "target": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_custom_permission_name_max_length.Checked",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_custom_permission_name_max_length.Checked",
      "target": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_custom_permission_name_max_length.Checked.Meta",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_empty_default_permissions",
      "target": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_empty_default_permissions.Checked",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_empty_default_permissions.Checked",
      "target": "tests/auth_tests/test_checks.py:ModelsPermissionsChecksTests.test_empty_default_permissions.Checked.Meta",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/urls.py",
      "target": "tests/auth_tests/urls.py:CustomRequestAuthenticationForm",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/urls.py",
      "target": "tests/auth_tests/urls.py:remote_user_auth_view",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/urls.py",
      "target": "tests/auth_tests/urls.py:auth_processor_no_attr_access",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/urls.py",
      "target": "tests/auth_tests/urls.py:auth_processor_attr_access",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/urls.py",
      "target": "tests/auth_tests/urls.py:auth_processor_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/urls.py",
      "target": "tests/auth_tests/urls.py:auth_processor_perms",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/urls.py",
      "target": "tests/auth_tests/urls.py:auth_processor_perm_in_perms",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/urls.py",
      "target": "tests/auth_tests/urls.py:auth_processor_messages",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/urls.py",
      "target": "tests/auth_tests/urls.py:userpage",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/urls.py",
      "target": "tests/auth_tests/urls.py:permission_required_redirect",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/urls.py",
      "target": "tests/auth_tests/urls.py:permission_required_exception",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/urls.py",
      "target": "tests/auth_tests/urls.py:login_and_permission_required_exception",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/backend_alias.py",
      "target": "tests/auth_tests/test_auth_backends.py:ImportedModelBackend",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/test_remote_user_deprecation.py",
      "target": "tests/auth_tests/test_remote_user_deprecation.py:CustomRemoteUserBackend",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user_deprecation.py",
      "target": "tests/auth_tests/test_remote_user_deprecation.py:RemoteUserCustomTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user_deprecation.py:CustomRemoteUserBackend",
      "target": "tests/auth_tests/test_remote_user_deprecation.py:CustomRemoteUserBackend.configure_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user_deprecation.py:RemoteUserCustomTest",
      "target": "tests/auth_tests/test_remote_user_deprecation.py:RemoteUserCustomTest.setUp",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user_deprecation.py:RemoteUserCustomTest",
      "target": "tests/auth_tests/test_remote_user_deprecation.py:RemoteUserCustomTest.tearDown",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_remote_user_deprecation.py:RemoteUserCustomTest",
      "target": "tests/auth_tests/test_remote_user_deprecation.py:RemoteUserCustomTest.test_configure_user_deprecation_warning",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_admin_multidb.py",
      "target": "tests/auth_tests/test_admin_multidb.py:Router",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_admin_multidb.py",
      "target": "tests/auth_tests/test_admin_multidb.py:MultiDatabaseTests",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_admin_multidb.py:Router",
      "target": "tests/auth_tests/test_admin_multidb.py:Router.db_for_read",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_admin_multidb.py:MultiDatabaseTests",
      "target": "tests/auth_tests/test_admin_multidb.py:MultiDatabaseTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_admin_multidb.py:MultiDatabaseTests",
      "target": "tests/auth_tests/test_admin_multidb.py:MultiDatabaseTests.test_add_view",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_tokens.py",
      "target": "tests/auth_tests/test_tokens.py:TokenGeneratorTest",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_tokens.py:TokenGeneratorTest",
      "target": "tests/auth_tests/test_tokens.py:TokenGeneratorTest.test_make_token",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_tokens.py:TokenGeneratorTest",
      "target": "tests/auth_tests/test_tokens.py:TokenGeneratorTest.test_10265",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_tokens.py:TokenGeneratorTest",
      "target": "tests/auth_tests/test_tokens.py:TokenGeneratorTest.test_timeout",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_tokens.py:TokenGeneratorTest",
      "target": "tests/auth_tests/test_tokens.py:TokenGeneratorTest.test_check_token_with_nonexistent_token_and_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_tokens.py:TokenGeneratorTest",
      "target": "tests/auth_tests/test_tokens.py:TokenGeneratorTest.test_token_with_different_secret",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_tokens.py:TokenGeneratorTest.test_timeout",
      "target": "tests/auth_tests/test_tokens.py:TokenGeneratorTest.test_timeout.Mocked",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/test_tokens.py:TokenGeneratorTest.test_timeout",
      "target": "tests/auth_tests/test_tokens.py:TokenGeneratorTest.test_timeout.Mocked",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/test_tokens.py:TokenGeneratorTest.test_timeout.Mocked",
      "target": "tests/auth_tests/test_tokens.py:TokenGeneratorTest.test_timeout.Mocked._today",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models",
      "target": "tests/auth_tests/models/custom_user.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models",
      "target": "tests/auth_tests/models/no_password.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models",
      "target": "tests/auth_tests/models/invalid_models.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models",
      "target": "tests/auth_tests/models/proxy.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models",
      "target": "tests/auth_tests/models/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models",
      "target": "tests/auth_tests/models/with_custom_email_field.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models",
      "target": "tests/auth_tests/models/custom_permissions.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models",
      "target": "tests/auth_tests/models/with_integer_username.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models",
      "target": "tests/auth_tests/models/minimal.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models",
      "target": "tests/auth_tests/models/uuid_pk.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models",
      "target": "tests/auth_tests/models/is_active.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models",
      "target": "tests/auth_tests/models/with_foreign_key.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models",
      "target": "tests/auth_tests/models/with_last_login_attr.py",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/custom_user.py",
      "target": "tests/auth_tests/models/custom_user.py:CustomUserManager",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/custom_user.py",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/custom_user.py",
      "target": "tests/auth_tests/models/custom_user.py:RemoveGroupsAndPermissions",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/custom_user.py",
      "target": "tests/auth_tests/models/custom_user.py:CustomUserWithoutIsActiveField",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/custom_user.py",
      "target": "tests/auth_tests/models/custom_user.py:ExtensionUser",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/custom_user.py:CustomUserManager",
      "target": "tests/auth_tests/models/custom_user.py:CustomUserManager.create_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/custom_user.py:CustomUserManager",
      "target": "tests/auth_tests/models/custom_user.py:CustomUserManager.create_superuser",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/custom_user.py:CustomUserManager.create_superuser",
      "target": "tests/auth_tests/models/custom_user.py:CustomUserManager.create_user",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/models/custom_user.py:CustomUser",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.__str__",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/custom_user.py:CustomUser",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.get_group_permissions",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/custom_user.py:CustomUser",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.get_all_permissions",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/custom_user.py:CustomUser",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.has_perm",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/custom_user.py:CustomUser",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.has_perms",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/custom_user.py:CustomUser",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.has_module_perms",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/custom_user.py:CustomUser",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser.is_staff",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/custom_user.py:RemoveGroupsAndPermissions",
      "target": "tests/auth_tests/models/custom_user.py:RemoveGroupsAndPermissions.__enter__",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/custom_user.py:RemoveGroupsAndPermissions",
      "target": "tests/auth_tests/models/custom_user.py:RemoveGroupsAndPermissions.__exit__",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/no_password.py",
      "target": "tests/auth_tests/models/no_password.py:UserManager",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/no_password.py",
      "target": "tests/auth_tests/models/no_password.py:NoPasswordUser",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/no_password.py:UserManager",
      "target": "tests/auth_tests/models/no_password.py:UserManager._create_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/no_password.py:UserManager",
      "target": "tests/auth_tests/models/no_password.py:UserManager.create_superuser",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/no_password.py:UserManager.create_superuser",
      "target": "tests/auth_tests/models/no_password.py:UserManager._create_user",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/models/invalid_models.py",
      "target": "tests/auth_tests/models/invalid_models.py:CustomUserNonUniqueUsername",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/proxy.py",
      "target": "tests/auth_tests/models/proxy.py:Concrete",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/proxy.py",
      "target": "tests/auth_tests/models/proxy.py:Proxy",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/proxy.py",
      "target": "tests/auth_tests/models/proxy.py:UserProxy",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/proxy.py:Proxy",
      "target": "tests/auth_tests/models/proxy.py:Proxy.Meta",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/proxy.py:Proxy",
      "target": "tests/auth_tests/models/proxy.py:Concrete",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/models/proxy.py:UserProxy",
      "target": "tests/auth_tests/models/proxy.py:UserProxy.Meta",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/__init__.py",
      "target": "tests/auth_tests/models/custom_permissions.py:CustomPermissionsUser",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/models/__init__.py",
      "target": "tests/auth_tests/models/custom_user.py:CustomUser",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/models/__init__.py",
      "target": "tests/auth_tests/models/custom_user.py:CustomUserWithoutIsActiveField",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/models/__init__.py",
      "target": "tests/auth_tests/models/custom_user.py:ExtensionUser",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/models/__init__.py",
      "target": "tests/auth_tests/models/invalid_models.py:CustomUserNonUniqueUsername",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/models/__init__.py",
      "target": "tests/auth_tests/models/is_active.py:IsActiveTestUser1",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/models/__init__.py",
      "target": "tests/auth_tests/models/minimal.py:MinimalUser",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/models/__init__.py",
      "target": "tests/auth_tests/models/no_password.py:NoPasswordUser",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/models/__init__.py",
      "target": "tests/auth_tests/models/proxy.py:Proxy",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/models/__init__.py",
      "target": "tests/auth_tests/models/proxy.py:UserProxy",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/models/__init__.py",
      "target": "tests/auth_tests/models/uuid_pk.py:UUIDUser",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/models/__init__.py",
      "target": "tests/auth_tests/models/with_foreign_key.py:CustomUserWithFK",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/models/__init__.py",
      "target": "tests/auth_tests/models/with_foreign_key.py:Email",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/models/__init__.py",
      "target": "tests/auth_tests/models/with_integer_username.py:IntegerUsernameUser",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/models/__init__.py",
      "target": "tests/auth_tests/models/with_last_login_attr.py:UserWithDisabledLastLoginField",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/models/with_custom_email_field.py",
      "target": "tests/auth_tests/models/with_custom_email_field.py:CustomEmailFieldUserManager",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/with_custom_email_field.py",
      "target": "tests/auth_tests/models/with_custom_email_field.py:CustomEmailField",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/with_custom_email_field.py:CustomEmailFieldUserManager",
      "target": "tests/auth_tests/models/with_custom_email_field.py:CustomEmailFieldUserManager.create_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/custom_permissions.py",
      "target": "tests/auth_tests/models/custom_permissions.py:CustomPermissionsUserManager",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/custom_permissions.py",
      "target": "tests/auth_tests/models/custom_permissions.py:CustomPermissionsUser",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/custom_permissions.py",
      "target": "tests/auth_tests/models/custom_user.py:CustomUserManager",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/models/custom_permissions.py",
      "target": "tests/auth_tests/models/custom_user.py:RemoveGroupsAndPermissions",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/models/custom_permissions.py:CustomPermissionsUserManager",
      "target": "tests/auth_tests/models/custom_permissions.py:CustomPermissionsUserManager.create_superuser",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/custom_permissions.py:CustomPermissionsUserManager",
      "target": "tests/auth_tests/models/custom_user.py:CustomUserManager",
      "type": "inherits"
    },
    {
      "source": "tests/auth_tests/models/custom_permissions.py:CustomPermissionsUserManager.create_superuser",
      "target": "tests/auth_tests/models/custom_user.py:CustomUserManager.create_user",
      "type": "invokes"
    },
    {
      "source": "tests/auth_tests/models/custom_permissions.py:CustomPermissionsUser",
      "target": "tests/auth_tests/models/custom_permissions.py:CustomPermissionsUser.__str__",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/with_integer_username.py",
      "target": "tests/auth_tests/models/with_integer_username.py:IntegerUsernameUserManager",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/with_integer_username.py",
      "target": "tests/auth_tests/models/with_integer_username.py:IntegerUsernameUser",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/with_integer_username.py:IntegerUsernameUserManager",
      "target": "tests/auth_tests/models/with_integer_username.py:IntegerUsernameUserManager.create_user",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/with_integer_username.py:IntegerUsernameUserManager",
      "target": "tests/auth_tests/models/with_integer_username.py:IntegerUsernameUserManager.get_by_natural_key",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/minimal.py",
      "target": "tests/auth_tests/models/minimal.py:MinimalUser",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/uuid_pk.py",
      "target": "tests/auth_tests/models/uuid_pk.py:UUIDUser",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/uuid_pk.py",
      "target": "tests/auth_tests/models/custom_user.py:RemoveGroupsAndPermissions",
      "type": "imports"
    },
    {
      "source": "tests/auth_tests/models/is_active.py",
      "target": "tests/auth_tests/models/is_active.py:IsActiveTestUser1",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/with_foreign_key.py",
      "target": "tests/auth_tests/models/with_foreign_key.py:Email",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/with_foreign_key.py",
      "target": "tests/auth_tests/models/with_foreign_key.py:CustomUserWithFKManager",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/with_foreign_key.py",
      "target": "tests/auth_tests/models/with_foreign_key.py:CustomUserWithFK",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/with_foreign_key.py:CustomUserWithFKManager",
      "target": "tests/auth_tests/models/with_foreign_key.py:CustomUserWithFKManager.create_superuser",
      "type": "contains"
    },
    {
      "source": "tests/auth_tests/models/with_last_login_attr.py",
      "target": "tests/auth_tests/models/with_last_login_attr.py:UserWithDisabledLastLoginField",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks",
      "target": "tests/transaction_hooks/models.py",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks",
      "target": "tests/transaction_hooks/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks",
      "target": "tests/transaction_hooks/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/models.py",
      "target": "tests/transaction_hooks/models.py:Thing",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/models.py:Thing",
      "target": "tests/transaction_hooks/models.py:Thing.__str__",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/tests.py",
      "target": "tests/transaction_hooks/tests.py:ForcedError",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/tests.py",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/tests.py",
      "target": "tests/transaction_hooks/models.py:Thing",
      "type": "imports"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.setUp",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.notify",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.do",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.assertDone",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.assertNotified",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_executes_immediately_if_no_transaction",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_delays_execution_until_after_transaction_commit",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_does_not_execute_if_transaction_rolled_back",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_executes_only_after_final_transaction_committed",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_discards_hooks_from_rolled_back_savepoint",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_no_hooks_run_from_failed_transaction",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_inner_savepoint_rolled_back_with_outer",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_no_savepoints_atomic_merged_with_outer",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_inner_savepoint_does_not_affect_outer",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_runs_hooks_in_order_registered",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_hooks_cleared_after_successful_commit",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_hooks_cleared_after_rollback",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_hooks_cleared_on_reconnect",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_error_in_hook_doesnt_prevent_clearing_hooks",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_db_query_in_hook",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_transaction_in_hook",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_hook_in_hook",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_raises_exception_non_autocommit_mode",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.notify",
      "target": "tests/transaction_hooks/tests.py:ForcedError",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.do",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.notify",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.assertDone",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.assertNotified",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_executes_immediately_if_no_transaction",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.assertDone",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_executes_immediately_if_no_transaction",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.do",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_delays_execution_until_after_transaction_commit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.assertDone",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_delays_execution_until_after_transaction_commit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.do",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_delays_execution_until_after_transaction_commit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.assertNotified",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_does_not_execute_if_transaction_rolled_back",
      "target": "tests/transaction_hooks/tests.py:ForcedError",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_does_not_execute_if_transaction_rolled_back",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.do",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_does_not_execute_if_transaction_rolled_back",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.assertDone",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_executes_only_after_final_transaction_committed",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.assertDone",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_executes_only_after_final_transaction_committed",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.do",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_executes_only_after_final_transaction_committed",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.assertNotified",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_discards_hooks_from_rolled_back_savepoint",
      "target": "tests/transaction_hooks/tests.py:ForcedError",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_discards_hooks_from_rolled_back_savepoint",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.do",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_discards_hooks_from_rolled_back_savepoint",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.assertDone",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_no_hooks_run_from_failed_transaction",
      "target": "tests/transaction_hooks/tests.py:ForcedError",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_no_hooks_run_from_failed_transaction",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.do",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_no_hooks_run_from_failed_transaction",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.assertDone",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_inner_savepoint_rolled_back_with_outer",
      "target": "tests/transaction_hooks/tests.py:ForcedError",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_inner_savepoint_rolled_back_with_outer",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.do",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_inner_savepoint_rolled_back_with_outer",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.assertDone",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_no_savepoints_atomic_merged_with_outer",
      "target": "tests/transaction_hooks/tests.py:ForcedError",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_no_savepoints_atomic_merged_with_outer",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.do",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_no_savepoints_atomic_merged_with_outer",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.assertDone",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_inner_savepoint_does_not_affect_outer",
      "target": "tests/transaction_hooks/tests.py:ForcedError",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_inner_savepoint_does_not_affect_outer",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.do",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_inner_savepoint_does_not_affect_outer",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.assertDone",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_runs_hooks_in_order_registered",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.assertDone",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_runs_hooks_in_order_registered",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.do",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_hooks_cleared_after_successful_commit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.assertDone",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_hooks_cleared_after_successful_commit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.do",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_hooks_cleared_after_rollback",
      "target": "tests/transaction_hooks/tests.py:ForcedError",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_hooks_cleared_after_rollback",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.do",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_hooks_cleared_after_rollback",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.assertDone",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_hooks_cleared_on_reconnect",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.do",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_hooks_cleared_on_reconnect",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.assertDone",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_error_in_hook_doesnt_prevent_clearing_hooks",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.do",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_error_in_hook_doesnt_prevent_clearing_hooks",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.notify",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_error_in_hook_doesnt_prevent_clearing_hooks",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.assertDone",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_db_query_in_hook",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.notify",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_db_query_in_hook",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.assertDone",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_transaction_in_hook",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_transaction_in_hook.on_commit",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_transaction_in_hook",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_transaction_in_hook.on_commit",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_transaction_in_hook",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.assertDone",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_transaction_in_hook.on_commit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.notify",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_hook_in_hook",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_hook_in_hook.on_commit",
      "type": "contains"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_hook_in_hook",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_hook_in_hook.on_commit",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_hook_in_hook",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.assertDone",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_hook_in_hook.on_commit",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.notify",
      "type": "invokes"
    },
    {
      "source": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_raises_exception_non_autocommit_mode",
      "target": "tests/transaction_hooks/tests.py:TestConnectionOnCommit.test_raises_exception_non_autocommit_mode.should_never_be_called",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_optimizer.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_loader.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/models.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_writer.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_operations.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_multidb.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_exceptions.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_state.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_deprecated_fields.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_commands.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_autodetector.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_executor.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_questioner.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_base.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_graph.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/routers.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/migrations_test_apps",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/related_models_app",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_migrations_unmigdep",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_migrations_fake_split_initial",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_migrations_atomic_operation",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_migrations",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_migrations_initial_false",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_migrations_conflict",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_migrations_run_before",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/deprecated_field_migrations",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_add_many_to_many_field_initial",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_migrations_bad_pyc",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_migrations_squashed_complex",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_migrations_custom_user",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_migrations_order",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_migrations_squashed",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_migrations_plan",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_migrations_non_atomic",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_migrations_empty",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_auto_now_add",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_migrations_clashing_prefix",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_migrations_squashed_erroneous",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_migrations_no_ancestor",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_migrations_private",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_migrations_first",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_migrations_squashed_extra",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_migrations_squashed_ref_squashed",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_migrations_squashed_complex_multi_apps",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/faulty_migrations",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_migrations_no_changes",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_migrations_backwards_deps_1",
      "type": "contains"
    },
    {
      "source": "tests/migrations",
      "target": "tests/migrations/test_migrations_no_default",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py",
      "target": "tests/migrations/models.py:EmptyManager",
      "type": "imports"
    },
    {
      "source": "tests/migrations/test_optimizer.py",
      "target": "tests/migrations/models.py:UnicodeModel",
      "type": "imports"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.optimize",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.serialize",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertOptimizesTo",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertDoesNotOptimize",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_single",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_delete_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_rename_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_rename_model_self",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_alter_model_options",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests._test_create_alter_foo_delete_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_alter_unique_delete_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_alter_index_delete_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_alter_owrt_delete_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests._test_alter_alter_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_alter_alter_table_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_alter_alter_unique_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_alter_alter_index_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_alter_alter_owrt_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_optimize_through_create",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_add_field",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_reordering",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_reordering_circular_fk",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_no_reordering_for_unrelated_fk",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_no_reordering_of_inherited_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_add_field_not_through_m2m_through",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_alter_field",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_rename_field",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_add_field_rename_field",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_alter_field_rename_field",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_remove_field",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_add_field_alter_field",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_add_field_delete_field",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_alter_field_delete_field",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests._test_create_alter_foo_field",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_alter_unique_field",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_alter_index_field",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_alter_owrt_field",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_optimize_through_fields",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.test_optimize_elidable_operation",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.assertOptimizesTo",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.serialize",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.assertOptimizesTo",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.optimize",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.assertDoesNotOptimize",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertOptimizesTo",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_single",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertOptimizesTo",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_delete_model",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertOptimizesTo",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_rename_model",
      "target": "tests/migrations/models.py:EmptyManager",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_rename_model",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertOptimizesTo",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_rename_model_self",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertOptimizesTo",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_alter_model_options",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertOptimizesTo",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests._test_create_alter_foo_delete_model",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertOptimizesTo",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_alter_unique_delete_model",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests._test_create_alter_foo_delete_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_alter_index_delete_model",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests._test_create_alter_foo_delete_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_alter_owrt_delete_model",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests._test_create_alter_foo_delete_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests._test_alter_alter_model",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertOptimizesTo",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_alter_alter_table_model",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests._test_alter_alter_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_alter_alter_unique_model",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests._test_alter_alter_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_alter_alter_index_model",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests._test_alter_alter_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_alter_alter_owrt_model",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests._test_alter_alter_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_optimize_through_create",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertDoesNotOptimize",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_optimize_through_create",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertOptimizesTo",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_add_field",
      "target": "tests/migrations/models.py:EmptyManager",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_add_field",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertOptimizesTo",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_reordering",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertOptimizesTo",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_reordering_circular_fk",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertOptimizesTo",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_no_reordering_for_unrelated_fk",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertDoesNotOptimize",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_no_reordering_of_inherited_model",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertOptimizesTo",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_add_field_not_through_m2m_through",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertDoesNotOptimize",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_alter_field",
      "target": "tests/migrations/models.py:EmptyManager",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_alter_field",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertOptimizesTo",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_rename_field",
      "target": "tests/migrations/models.py:EmptyManager",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_rename_field",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertOptimizesTo",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_add_field_rename_field",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertOptimizesTo",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_alter_field_rename_field",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertOptimizesTo",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_remove_field",
      "target": "tests/migrations/models.py:EmptyManager",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_model_remove_field",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertOptimizesTo",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_add_field_alter_field",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertOptimizesTo",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_add_field_delete_field",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertOptimizesTo",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_alter_field_delete_field",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertOptimizesTo",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests._test_create_alter_foo_field",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertOptimizesTo",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_alter_unique_field",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests._test_create_alter_foo_field",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_alter_index_field",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests._test_create_alter_foo_field",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_create_alter_owrt_field",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests._test_create_alter_foo_field",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_optimize_through_fields",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertOptimizesTo",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_optimizer.py:OptimizerTests.test_optimize_elidable_operation",
      "target": "tests/migrations/test_optimizer.py:OptimizerTests.assertOptimizesTo",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_loader.py",
      "target": "tests/migrations/test_loader.py:RecorderTests",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py",
      "target": "tests/migrations/test_loader.py:LoaderTests",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py",
      "target": "tests/migrations/test_loader.py:PycLoaderTests",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py",
      "target": "tests/migrations/test_base.py:MigrationTestBase",
      "type": "imports"
    },
    {
      "source": "tests/migrations/test_loader.py:RecorderTests",
      "target": "tests/migrations/test_loader.py:RecorderTests.test_apply",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py:LoaderTests",
      "target": "tests/migrations/test_loader.py:LoaderTests.test_load",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py:LoaderTests",
      "target": "tests/migrations/test_loader.py:LoaderTests.test_plan_handles_repeated_migrations",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py:LoaderTests",
      "target": "tests/migrations/test_loader.py:LoaderTests.test_load_unmigrated_dependency",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py:LoaderTests",
      "target": "tests/migrations/test_loader.py:LoaderTests.test_run_before",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py:LoaderTests",
      "target": "tests/migrations/test_loader.py:LoaderTests.test_first",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py:LoaderTests",
      "target": "tests/migrations/test_loader.py:LoaderTests.test_name_match",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py:LoaderTests",
      "target": "tests/migrations/test_loader.py:LoaderTests.test_load_import_error",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py:LoaderTests",
      "target": "tests/migrations/test_loader.py:LoaderTests.test_load_module_file",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py:LoaderTests",
      "target": "tests/migrations/test_loader.py:LoaderTests.test_load_empty_dir",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py:LoaderTests",
      "target": "tests/migrations/test_loader.py:LoaderTests.test_marked_as_migrated",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py:LoaderTests",
      "target": "tests/migrations/test_loader.py:LoaderTests.test_marked_as_unmigrated",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py:LoaderTests",
      "target": "tests/migrations/test_loader.py:LoaderTests.test_explicit_missing_module",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py:LoaderTests",
      "target": "tests/migrations/test_loader.py:LoaderTests.test_loading_squashed",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py:LoaderTests",
      "target": "tests/migrations/test_loader.py:LoaderTests.test_loading_squashed_complex",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py:LoaderTests",
      "target": "tests/migrations/test_loader.py:LoaderTests.test_loading_squashed_complex_multi_apps",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py:LoaderTests",
      "target": "tests/migrations/test_loader.py:LoaderTests.test_loading_squashed_complex_multi_apps_partially_applied",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py:LoaderTests",
      "target": "tests/migrations/test_loader.py:LoaderTests.test_loading_squashed_erroneous",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py:LoaderTests",
      "target": "tests/migrations/test_loader.py:LoaderTests.test_check_consistent_history",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py:LoaderTests",
      "target": "tests/migrations/test_loader.py:LoaderTests.test_check_consistent_history_squashed",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py:LoaderTests",
      "target": "tests/migrations/test_loader.py:LoaderTests.test_loading_squashed_ref_squashed",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py:LoaderTests",
      "target": "tests/migrations/test_loader.py:LoaderTests.test_ignore_files",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py:LoaderTests.test_loading_squashed_complex",
      "target": "tests/migrations/test_loader.py:LoaderTests.test_loading_squashed_complex.num_nodes",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py:LoaderTests.test_loading_squashed_complex",
      "target": "tests/migrations/test_loader.py:LoaderTests.test_loading_squashed_complex.num_nodes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_loader.py:LoaderTests.test_loading_squashed_erroneous",
      "target": "tests/migrations/test_loader.py:LoaderTests.test_loading_squashed_erroneous.num_nodes",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py:LoaderTests.test_loading_squashed_erroneous",
      "target": "tests/migrations/test_loader.py:LoaderTests.test_loading_squashed_erroneous.num_nodes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_loader.py:PycLoaderTests",
      "target": "tests/migrations/test_loader.py:PycLoaderTests.test_valid",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py:PycLoaderTests",
      "target": "tests/migrations/test_loader.py:PycLoaderTests.test_invalid",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_loader.py:PycLoaderTests",
      "target": "tests/migrations/test_base.py:MigrationTestBase",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_loader.py:PycLoaderTests.test_valid",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_loader.py:PycLoaderTests.test_invalid",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/models.py",
      "target": "tests/migrations/models.py:CustomModelBase",
      "type": "contains"
    },
    {
      "source": "tests/migrations/models.py",
      "target": "tests/migrations/models.py:ModelWithCustomBase",
      "type": "contains"
    },
    {
      "source": "tests/migrations/models.py",
      "target": "tests/migrations/models.py:UnicodeModel",
      "type": "contains"
    },
    {
      "source": "tests/migrations/models.py",
      "target": "tests/migrations/models.py:Unserializable",
      "type": "contains"
    },
    {
      "source": "tests/migrations/models.py",
      "target": "tests/migrations/models.py:UnserializableModel",
      "type": "contains"
    },
    {
      "source": "tests/migrations/models.py",
      "target": "tests/migrations/models.py:UnmigratedModel",
      "type": "contains"
    },
    {
      "source": "tests/migrations/models.py",
      "target": "tests/migrations/models.py:EmptyManager",
      "type": "contains"
    },
    {
      "source": "tests/migrations/models.py",
      "target": "tests/migrations/models.py:FoodQuerySet",
      "type": "contains"
    },
    {
      "source": "tests/migrations/models.py",
      "target": "tests/migrations/models.py:BaseFoodManager",
      "type": "contains"
    },
    {
      "source": "tests/migrations/models.py",
      "target": "tests/migrations/models.py:FoodManager",
      "type": "contains"
    },
    {
      "source": "tests/migrations/models.py",
      "target": "tests/migrations/models.py:NoMigrationFoodManager",
      "type": "contains"
    },
    {
      "source": "tests/migrations/models.py:UnicodeModel",
      "target": "tests/migrations/models.py:UnicodeModel.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/models.py:UnicodeModel",
      "target": "tests/migrations/models.py:UnicodeModel.__str__",
      "type": "contains"
    },
    {
      "source": "tests/migrations/models.py:UnserializableModel",
      "target": "tests/migrations/models.py:UnserializableModel.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py",
      "target": "tests/migrations/test_writer.py:Money",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py",
      "target": "tests/migrations/test_writer.py:TestModel1",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py",
      "target": "tests/migrations/test_writer.py:OperationWriterTests",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py",
      "target": "tests/migrations/test_writer.py:WriterTests",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py",
      "target": "tests/migrations/models.py:FoodManager",
      "type": "imports"
    },
    {
      "source": "tests/migrations/test_writer.py",
      "target": "tests/migrations/models.py:FoodQuerySet",
      "type": "imports"
    },
    {
      "source": "tests/migrations/test_writer.py:Money",
      "target": "tests/migrations/test_writer.py:Money.deconstruct",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:TestModel1",
      "target": "tests/migrations/test_writer.py:TestModel1.upload_to",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:OperationWriterTests",
      "target": "tests/migrations/test_writer.py:OperationWriterTests.test_empty_signature",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:OperationWriterTests",
      "target": "tests/migrations/test_writer.py:OperationWriterTests.test_args_signature",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:OperationWriterTests",
      "target": "tests/migrations/test_writer.py:OperationWriterTests.test_kwargs_signature",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:OperationWriterTests",
      "target": "tests/migrations/test_writer.py:OperationWriterTests.test_args_kwargs_signature",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:OperationWriterTests",
      "target": "tests/migrations/test_writer.py:OperationWriterTests.test_nested_args_signature",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:OperationWriterTests",
      "target": "tests/migrations/test_writer.py:OperationWriterTests.test_multiline_args_signature",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:OperationWriterTests",
      "target": "tests/migrations/test_writer.py:OperationWriterTests.test_expand_args_signature",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:OperationWriterTests",
      "target": "tests/migrations/test_writer.py:OperationWriterTests.test_nested_operation_expand_args_signature",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.safe_exec",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.serialize_round_trip",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedEqual",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedResultEqual",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedFieldEqual",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_numbers",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_constants",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_strings",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_multiline_strings",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_collections",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_builtin_types",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_lazy_objects",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_enums",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_uuid",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_functions",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_datetime",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_fields",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_settings",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_iterators",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_compiled_regex",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_class_based_validators",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_empty_nonempty_tuple",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_builtins",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_unbound_method_reference",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_local_function_reference",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_managers",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_frozensets",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_set",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_timedelta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_functools_partial",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_functools_partialmethod",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_type_none",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_simple_migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_migration_path",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_custom_operation",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_sorted_imports",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_migration_file_header_comments",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_models_import_omitted",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_deconstruct_class_arguments",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_register_serializer",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests",
      "target": "tests/migrations/test_writer.py:WriterTests.test_register_non_serializer",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.serialize_round_trip",
      "target": "tests/migrations/test_writer.py:WriterTests.safe_exec",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.assertSerializedEqual",
      "target": "tests/migrations/test_writer.py:WriterTests.serialize_round_trip",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.assertSerializedFieldEqual",
      "target": "tests/migrations/test_writer.py:WriterTests.serialize_round_trip",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_numbers",
      "target": "tests/migrations/test_writer.py:WriterTests.serialize_round_trip",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_numbers",
      "target": "tests/migrations/test_writer.py:Money",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_numbers",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedResultEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_numbers",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_constants",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_strings",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_multiline_strings",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_collections",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_builtin_types",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_builtin_types",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedResultEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_lazy_objects",
      "target": "tests/migrations/test_writer.py:WriterTests.serialize_round_trip",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_enums",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_enums.TextEnum",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_enums",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_enums.BinaryEnum",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_enums",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_enums.IntEnum",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_enums",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedResultEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_uuid",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedResultEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_uuid",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_functions",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_functions",
      "target": "tests/migrations/test_writer.py:WriterTests.serialize_round_trip",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_datetime",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedResultEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_datetime",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_fields",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedResultEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_fields",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedFieldEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_settings",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_settings",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedResultEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_iterators",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedResultEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_compiled_regex",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_class_based_validators",
      "target": "tests/migrations/test_writer.py:WriterTests.serialize_round_trip",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_empty_nonempty_tuple",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_unbound_method_reference",
      "target": "tests/migrations/test_writer.py:WriterTests.serialize_round_trip",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_local_function_reference",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_local_function_reference.TestModel2",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_local_function_reference",
      "target": "tests/migrations/test_writer.py:WriterTests.serialize_round_trip",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_local_function_reference.TestModel2",
      "target": "tests/migrations/test_writer.py:WriterTests.test_serialize_local_function_reference.TestModel2.upload_to",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_managers",
      "target": "tests/migrations/models.py:FoodManager",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_managers",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedResultEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_managers",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_frozensets",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_set",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_set",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedResultEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_timedelta",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_functools_partial",
      "target": "tests/migrations/test_writer.py:WriterTests.serialize_round_trip",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_functools_partialmethod",
      "target": "tests/migrations/test_writer.py:WriterTests.serialize_round_trip",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_serialize_type_none",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_simple_migration",
      "target": "tests/migrations/test_writer.py:WriterTests.safe_exec",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_custom_operation",
      "target": "tests/migrations/test_writer.py:WriterTests.safe_exec",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_deconstruct_class_arguments",
      "target": "tests/migrations/test_writer.py:WriterTests.test_deconstruct_class_arguments.DeconstructibleInstances",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_deconstruct_class_arguments.DeconstructibleInstances",
      "target": "tests/migrations/test_writer.py:WriterTests.test_deconstruct_class_arguments.DeconstructibleInstances.deconstruct",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_register_serializer",
      "target": "tests/migrations/test_writer.py:WriterTests.test_register_serializer.ComplexSerializer",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_register_serializer",
      "target": "tests/migrations/test_writer.py:WriterTests.assertSerializedEqual",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_writer.py:WriterTests.test_register_serializer.ComplexSerializer",
      "target": "tests/migrations/test_writer.py:WriterTests.test_register_serializer.ComplexSerializer.serialize",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py",
      "target": "tests/migrations/test_operations.py:Mixin",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py",
      "target": "tests/migrations/test_operations.py:OperationTestBase",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py",
      "target": "tests/migrations/test_operations.py:OperationTests",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py",
      "target": "tests/migrations/test_operations.py:SwappableOperationTests",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py",
      "target": "tests/migrations/test_operations.py:TestCreateModel",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py",
      "target": "tests/migrations/test_operations.py:FieldOperationTests",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py",
      "target": "tests/migrations/models.py:FoodManager",
      "type": "imports"
    },
    {
      "source": "tests/migrations/test_operations.py",
      "target": "tests/migrations/models.py:FoodQuerySet",
      "type": "imports"
    },
    {
      "source": "tests/migrations/test_operations.py",
      "target": "tests/migrations/models.py:UnicodeModel",
      "type": "imports"
    },
    {
      "source": "tests/migrations/test_operations.py",
      "target": "tests/migrations/test_base.py:MigrationTestBase",
      "type": "imports"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTestBase",
      "target": "tests/migrations/test_operations.py:OperationTestBase.setUpClass",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTestBase",
      "target": "tests/migrations/test_operations.py:OperationTestBase.tearDown",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTestBase",
      "target": "tests/migrations/test_operations.py:OperationTestBase.cleanup_test_tables",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTestBase",
      "target": "tests/migrations/test_operations.py:OperationTestBase.apply_operations",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTestBase",
      "target": "tests/migrations/test_operations.py:OperationTestBase.unapply_operations",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTestBase",
      "target": "tests/migrations/test_operations.py:OperationTestBase.make_test_state",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTestBase",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTestBase",
      "target": "tests/migrations/test_base.py:MigrationTestBase",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTestBase.tearDown",
      "target": "tests/migrations/test_base.py:MigrationTestBase.tearDown",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTestBase.tearDown",
      "target": "tests/migrations/test_operations.py:OperationTestBase.cleanup_test_tables",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTestBase.make_test_state",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "target": "tests/migrations/test_operations.py:OperationTestBase.apply_operations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "target": "tests/migrations/models.py:FoodManager",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_create_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_create_model_with_duplicate_field_name",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_create_model_with_duplicate_base",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_create_model_with_duplicate_manager_name",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_create_model_with_unique_after",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_create_model_m2m",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_create_model_inheritance",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_create_proxy_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_create_unmanaged_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_create_model_with_constraint",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_create_model_with_partial_unique_constraint",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_create_model_managers",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_delete_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_delete_proxy_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_delete_mti_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_rename_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_rename_model_state_forwards",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_rename_model_with_self_referential_fk",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_rename_model_with_superclass_fk",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_rename_model_with_self_referential_m2m",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_rename_model_with_m2m",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_rename_m2m_target_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_rename_m2m_through_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_rename_m2m_model_after_rename_field",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_add_field",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_add_charfield",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_add_textfield",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_add_binaryfield",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_column_name_quoting",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_add_field_preserve_default",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_add_field_m2m",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_alter_field_m2m",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_repoint_field_m2m",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_remove_field_m2m",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_remove_field_m2m_with_through",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_remove_field",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_remove_fk",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_alter_model_table",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_alter_model_table_none",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_alter_model_table_noop",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_alter_model_table_m2m",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_alter_field",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_alter_field_pk",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_alter_field_pk_fk",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_alter_field_reloads_state_on_fk_target_changes",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_alter_field_reloads_state_on_fk_with_to_field_target_changes",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_rename_field_reloads_state_on_fk_target_changes",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_rename_field",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_rename_missing_field",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_rename_referenced_field_state_forward",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_alter_unique_together",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_alter_unique_together_remove",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_add_index",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_remove_index",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_add_index_state_forwards",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_remove_index_state_forwards",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_alter_field_with_index",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_alter_index_together",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_alter_index_together_remove",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_add_constraint",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_remove_constraint",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_add_partial_unique_constraint",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_remove_partial_unique_constraint",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_alter_model_options",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_alter_model_options_emptying",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_alter_order_with_respect_to",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_alter_model_managers",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_alter_model_managers_emptying",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_alter_fk",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_alter_fk_non_fk",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_run_sql",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_run_sql_params",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_run_sql_params_invalid",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_run_sql_noop",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_run_python",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_run_python_atomic",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_run_python_related_assignment",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_model_with_bigautofield",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_autofield_foreignfield_growth",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_run_python_noop",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_separate_database_and_state",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTests.test_separate_database_and_state2",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests",
      "target": "tests/migrations/test_operations.py:OperationTestBase",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_create_model",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_create_model",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_create_model_with_unique_after",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_create_model_with_unique_after",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_create_model_m2m",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertColumnNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_create_model_m2m",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_create_model_m2m",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_create_model_m2m",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_create_model_inheritance",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_create_model_inheritance",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_create_model_inheritance",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_create_proxy_model",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_create_proxy_model",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_create_proxy_model",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_create_unmanaged_model",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_create_unmanaged_model",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_create_unmanaged_model",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_create_model_with_constraint",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_create_model_with_constraint",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_create_model_with_partial_unique_constraint",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_create_model_with_partial_unique_constraint",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_create_model_managers",
      "target": "tests/migrations/models.py:FoodManager",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_create_model_managers",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_delete_model",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_delete_model",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_delete_model",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_delete_proxy_model",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_delete_proxy_model",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_delete_proxy_model",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_delete_mti_model",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_delete_mti_model",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertColumnExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_delete_mti_model",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_delete_mti_model",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_rename_model",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_rename_model",
      "target": "tests/migrations/test_operations.py:OperationTestBase.apply_operations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_rename_model",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_rename_model",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_rename_model",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertFKExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_rename_model",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertFKNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_rename_model",
      "target": "tests/migrations/test_operations.py:OperationTestBase.unapply_operations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_rename_model_with_self_referential_fk",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_rename_model_with_self_referential_fk",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_rename_model_with_self_referential_fk",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_rename_model_with_self_referential_fk",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertFKExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_rename_model_with_self_referential_fk",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertFKNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_rename_model_with_superclass_fk",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_rename_model_with_superclass_fk",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_rename_model_with_superclass_fk",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_rename_model_with_superclass_fk",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertFKExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_rename_model_with_superclass_fk",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertFKNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_rename_model_with_self_referential_m2m",
      "target": "tests/migrations/test_operations.py:OperationTestBase.apply_operations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_rename_model_with_m2m",
      "target": "tests/migrations/test_operations.py:OperationTestBase.apply_operations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_rename_m2m_target_model",
      "target": "tests/migrations/test_operations.py:OperationTestBase.apply_operations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_rename_m2m_through_model",
      "target": "tests/migrations/test_operations.py:OperationTestBase.apply_operations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_rename_m2m_model_after_rename_field",
      "target": "tests/migrations/test_operations.py:OperationTestBase.apply_operations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_add_field",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertColumnNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_add_field",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertColumnExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_add_field",
      "target": "tests/migrations/test_operations.py:OperationTestBase.make_test_state",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_add_charfield",
      "target": "tests/migrations/test_operations.py:OperationTestBase.apply_operations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_add_charfield",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_add_textfield",
      "target": "tests/migrations/test_operations.py:OperationTestBase.apply_operations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_add_textfield",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_add_binaryfield",
      "target": "tests/migrations/test_operations.py:OperationTestBase.apply_operations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_add_binaryfield",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_column_name_quoting",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertColumnExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_column_name_quoting",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_add_field_preserve_default",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertColumnNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_add_field_preserve_default",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertColumnExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_add_field_preserve_default",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_add_field_m2m",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertColumnNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_add_field_m2m",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_add_field_m2m",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_add_field_m2m",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_field_m2m",
      "target": "tests/migrations/test_operations.py:OperationTestBase.apply_operations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_field_m2m",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_repoint_field_m2m",
      "target": "tests/migrations/test_operations.py:OperationTestBase.apply_operations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_repoint_field_m2m",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_remove_field_m2m",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_remove_field_m2m",
      "target": "tests/migrations/test_operations.py:OperationTestBase.apply_operations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_remove_field_m2m",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_remove_field_m2m",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_remove_field_m2m",
      "target": "tests/migrations/test_operations.py:OperationTestBase.unapply_operations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_remove_field_m2m_with_through",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_remove_field_m2m_with_through",
      "target": "tests/migrations/test_operations.py:OperationTestBase.apply_operations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_remove_field_m2m_with_through",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_remove_field_m2m_with_through",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_remove_field",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertColumnNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_remove_field",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertColumnExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_remove_field",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_remove_fk",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertColumnNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_remove_fk",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertColumnExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_remove_fk",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_model_table",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_model_table",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_model_table",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_model_table_noop",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_model_table_noop",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_model_table_m2m",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_model_table_m2m",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_model_table_m2m",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_field",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_field",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertColumnNotNull",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_field",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertColumnNull",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_field_pk",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_field_pk_fk",
      "target": "tests/migrations/test_operations.py:OperationTests.test_alter_field_pk_fk.assertIdTypeEqualsFkType",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_field_pk_fk",
      "target": "tests/migrations/test_operations.py:OperationTests.test_alter_field_pk_fk.assertIdTypeEqualsFkType",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_field_pk_fk",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_field_pk_fk.assertIdTypeEqualsFkType",
      "target": "tests/migrations/test_base.py:MigrationTestBase.get_table_description",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_field_reloads_state_on_fk_target_changes",
      "target": "tests/migrations/test_operations.py:OperationTestBase.apply_operations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_field_reloads_state_on_fk_with_to_field_target_changes",
      "target": "tests/migrations/test_operations.py:OperationTestBase.apply_operations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_rename_field_reloads_state_on_fk_target_changes",
      "target": "tests/migrations/test_operations.py:OperationTestBase.apply_operations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_rename_field",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertColumnNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_rename_field",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertColumnExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_rename_field",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertIndexExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_rename_field",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_unique_together",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_add_index",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertIndexNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_add_index",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertIndexExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_add_index",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_remove_index",
      "target": "tests/migrations/test_operations.py:OperationTestBase.apply_operations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_remove_index",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertColumnNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_remove_index",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_remove_index",
      "target": "tests/migrations/test_operations.py:OperationTestBase.unapply_operations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_remove_index",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertIndexNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_remove_index",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertColumnExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_remove_index",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertIndexExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_remove_index",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_add_index_state_forwards",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_remove_index_state_forwards",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_field_with_index",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertIndexExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_field_with_index",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_field_with_index",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertColumnNotNull",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_index_together",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertIndexNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_index_together",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertIndexExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_index_together",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_add_constraint",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_remove_constraint",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_add_partial_unique_constraint",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_remove_partial_unique_constraint",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_model_options",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_model_options_emptying",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_order_with_respect_to",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertColumnNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_order_with_respect_to",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertColumnExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_order_with_respect_to",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_model_managers",
      "target": "tests/migrations/models.py:FoodManager",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_model_managers",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_model_managers_emptying",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_fk",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_fk_non_fk",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertColumnNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_fk_non_fk",
      "target": "tests/migrations/test_operations.py:OperationTestBase.make_test_state",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_alter_fk_non_fk",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertColumnExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_run_sql",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_run_sql",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_run_sql",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_run_sql_params",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_run_sql_params",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_run_sql_params_invalid",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_run_python",
      "target": "tests/migrations/test_operations.py:OperationTests.test_run_python.inner_method",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_run_python",
      "target": "tests/migrations/test_operations.py:OperationTests.test_run_python.inner_method_reverse",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_run_python",
      "target": "tests/migrations/test_operations.py:OperationTests.test_run_python.create_ponies",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_run_python",
      "target": "tests/migrations/test_operations.py:OperationTests.test_run_python.create_shetlandponies",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_run_python",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_run_python_atomic",
      "target": "tests/migrations/test_operations.py:OperationTests.test_run_python_atomic.inner_method",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_run_python_atomic",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_run_python_related_assignment",
      "target": "tests/migrations/test_operations.py:OperationTests.test_run_python_related_assignment.inner_method",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_model_with_bigautofield",
      "target": "tests/migrations/test_operations.py:OperationTests.test_model_with_bigautofield.create_data",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_autofield_foreignfield_growth",
      "target": "tests/migrations/test_operations.py:OperationTests.test_autofield_foreignfield_growth.create_initial_data",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_autofield_foreignfield_growth",
      "target": "tests/migrations/test_operations.py:OperationTests.test_autofield_foreignfield_growth.create_big_data",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_separate_database_and_state",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_separate_database_and_state",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_separate_database_and_state",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_separate_database_and_state2",
      "target": "tests/migrations/test_operations.py:OperationTests.test_separate_database_and_state2.assertModelsAndTables",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_separate_database_and_state2",
      "target": "tests/migrations/test_operations.py:OperationTests.test_separate_database_and_state2.assertModelsAndTables",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_separate_database_and_state2",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_separate_database_and_state2.assertModelsAndTables",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:OperationTests.test_separate_database_and_state2.assertModelsAndTables",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:SwappableOperationTests",
      "target": "tests/migrations/test_operations.py:SwappableOperationTests.test_create_ignore_swapped",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:SwappableOperationTests",
      "target": "tests/migrations/test_operations.py:SwappableOperationTests.test_delete_ignore_swapped",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:SwappableOperationTests",
      "target": "tests/migrations/test_operations.py:SwappableOperationTests.test_add_field_ignore_swapped",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:SwappableOperationTests",
      "target": "tests/migrations/test_operations.py:SwappableOperationTests.test_indexes_ignore_swapped",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:SwappableOperationTests",
      "target": "tests/migrations/test_operations.py:OperationTestBase",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_operations.py:SwappableOperationTests.test_create_ignore_swapped",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:SwappableOperationTests.test_delete_ignore_swapped",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:SwappableOperationTests.test_delete_ignore_swapped",
      "target": "tests/migrations/test_operations.py:OperationTestBase.make_test_state",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:SwappableOperationTests.test_add_field_ignore_swapped",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:SwappableOperationTests.test_add_field_ignore_swapped",
      "target": "tests/migrations/test_operations.py:OperationTestBase.make_test_state",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:SwappableOperationTests.test_indexes_ignore_swapped",
      "target": "tests/migrations/test_operations.py:OperationTestBase.make_test_state",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_operations.py:TestCreateModel",
      "target": "tests/migrations/test_operations.py:TestCreateModel.test_references_model_mixin",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:FieldOperationTests",
      "target": "tests/migrations/test_operations.py:FieldOperationTests.test_references_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:FieldOperationTests",
      "target": "tests/migrations/test_operations.py:FieldOperationTests.test_references_field_by_name",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:FieldOperationTests",
      "target": "tests/migrations/test_operations.py:FieldOperationTests.test_references_field_by_remote_field_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:FieldOperationTests",
      "target": "tests/migrations/test_operations.py:FieldOperationTests.test_references_field_by_from_fields",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:FieldOperationTests",
      "target": "tests/migrations/test_operations.py:FieldOperationTests.test_references_field_by_to_fields",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:FieldOperationTests",
      "target": "tests/migrations/test_operations.py:FieldOperationTests.test_references_field_by_through",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_operations.py:FieldOperationTests",
      "target": "tests/migrations/test_operations.py:FieldOperationTests.test_reference_field_by_through_fields",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_multidb.py",
      "target": "tests/migrations/test_multidb.py:AgnosticRouter",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_multidb.py",
      "target": "tests/migrations/test_multidb.py:MigrateNothingRouter",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_multidb.py",
      "target": "tests/migrations/test_multidb.py:MigrateEverythingRouter",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_multidb.py",
      "target": "tests/migrations/test_multidb.py:MigrateWhenFooRouter",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_multidb.py",
      "target": "tests/migrations/test_multidb.py:MultiDBOperationTests",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_multidb.py",
      "target": "tests/migrations/test_operations.py:OperationTestBase",
      "type": "imports"
    },
    {
      "source": "tests/migrations/test_multidb.py:AgnosticRouter",
      "target": "tests/migrations/test_multidb.py:AgnosticRouter.allow_migrate",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_multidb.py:MigrateNothingRouter",
      "target": "tests/migrations/test_multidb.py:MigrateNothingRouter.allow_migrate",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_multidb.py:MigrateEverythingRouter",
      "target": "tests/migrations/test_multidb.py:MigrateEverythingRouter.allow_migrate",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_multidb.py:MigrateWhenFooRouter",
      "target": "tests/migrations/test_multidb.py:MigrateWhenFooRouter.allow_migrate",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests",
      "target": "tests/migrations/test_multidb.py:MultiDBOperationTests._test_create_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests",
      "target": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_create_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests",
      "target": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_create_model2",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests",
      "target": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_create_model3",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests",
      "target": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_create_model4",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests",
      "target": "tests/migrations/test_multidb.py:MultiDBOperationTests._test_run_sql",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests",
      "target": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_run_sql_migrate_nothing_router",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests",
      "target": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_run_sql_migrate_foo_router_without_hints",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests",
      "target": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_run_sql_migrate_foo_router_with_hints",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests",
      "target": "tests/migrations/test_multidb.py:MultiDBOperationTests._test_run_python",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests",
      "target": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_run_python_migrate_nothing_router",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests",
      "target": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_run_python_migrate_foo_router_without_hints",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests",
      "target": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_run_python_migrate_foo_router_with_hints",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests",
      "target": "tests/migrations/test_operations.py:OperationTestBase",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_create_model",
      "target": "tests/migrations/test_multidb.py:MultiDBOperationTests._test_create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_create_model2",
      "target": "tests/migrations/test_multidb.py:MultiDBOperationTests._test_create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_create_model3",
      "target": "tests/migrations/test_multidb.py:MultiDBOperationTests._test_create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_create_model4",
      "target": "tests/migrations/test_multidb.py:MigrateNothingRouter",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_create_model4",
      "target": "tests/migrations/test_multidb.py:AgnosticRouter",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_create_model4",
      "target": "tests/migrations/test_multidb.py:MigrateEverythingRouter",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_create_model4",
      "target": "tests/migrations/test_multidb.py:MultiDBOperationTests._test_create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests._test_run_sql",
      "target": "tests/migrations/test_multidb.py:MigrateEverythingRouter",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests._test_run_sql",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_run_sql_migrate_nothing_router",
      "target": "tests/migrations/test_multidb.py:MultiDBOperationTests._test_run_sql",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_run_sql_migrate_foo_router_without_hints",
      "target": "tests/migrations/test_multidb.py:MultiDBOperationTests._test_run_sql",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_run_sql_migrate_foo_router_with_hints",
      "target": "tests/migrations/test_multidb.py:MultiDBOperationTests._test_run_sql",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests._test_run_python",
      "target": "tests/migrations/test_multidb.py:MultiDBOperationTests._test_run_python.inner_method",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests._test_run_python",
      "target": "tests/migrations/test_multidb.py:MigrateEverythingRouter",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests._test_run_python",
      "target": "tests/migrations/test_operations.py:OperationTestBase.set_up_test_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_run_python_migrate_nothing_router",
      "target": "tests/migrations/test_multidb.py:MultiDBOperationTests._test_run_python",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_run_python_migrate_foo_router_without_hints",
      "target": "tests/migrations/test_multidb.py:MultiDBOperationTests._test_run_python",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_multidb.py:MultiDBOperationTests.test_run_python_migrate_foo_router_with_hints",
      "target": "tests/migrations/test_multidb.py:MultiDBOperationTests._test_run_python",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_exceptions.py",
      "target": "tests/migrations/test_exceptions.py:ExceptionTests",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_exceptions.py:ExceptionTests",
      "target": "tests/migrations/test_exceptions.py:ExceptionTests.test_node_not_found_error_repr",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py",
      "target": "tests/migrations/test_state.py:StateTests",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py",
      "target": "tests/migrations/test_state.py:ModelStateTests",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py",
      "target": "tests/migrations/test_state.py:RelatedModelsTests",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py",
      "target": "tests/migrations/models.py:FoodManager",
      "type": "imports"
    },
    {
      "source": "tests/migrations/test_state.py",
      "target": "tests/migrations/models.py:FoodQuerySet",
      "type": "imports"
    },
    {
      "source": "tests/migrations/test_state.py",
      "target": "tests/migrations/models.py:ModelWithCustomBase",
      "type": "imports"
    },
    {
      "source": "tests/migrations/test_state.py",
      "target": "tests/migrations/models.py:NoMigrationFoodManager",
      "type": "imports"
    },
    {
      "source": "tests/migrations/test_state.py",
      "target": "tests/migrations/models.py:UnicodeModel",
      "type": "imports"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests",
      "target": "tests/migrations/test_state.py:StateTests.test_create",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests",
      "target": "tests/migrations/test_state.py:StateTests.test_custom_default_manager_added_to_the_model_state",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests",
      "target": "tests/migrations/test_state.py:StateTests.test_custom_default_manager_named_objects_with_false_migration_flag",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests",
      "target": "tests/migrations/test_state.py:StateTests.test_no_duplicate_managers",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests",
      "target": "tests/migrations/test_state.py:StateTests.test_custom_default_manager",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests",
      "target": "tests/migrations/test_state.py:StateTests.test_custom_base_manager",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests",
      "target": "tests/migrations/test_state.py:StateTests.test_apps_bulk_update",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests",
      "target": "tests/migrations/test_state.py:StateTests.test_render",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests",
      "target": "tests/migrations/test_state.py:StateTests.test_render_model_inheritance",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests",
      "target": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests",
      "target": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests",
      "target": "tests/migrations/test_state.py:StateTests.test_render_unique_app_labels",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests",
      "target": "tests/migrations/test_state.py:StateTests.test_add_relations",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests",
      "target": "tests/migrations/test_state.py:StateTests.test_remove_relations",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests",
      "target": "tests/migrations/test_state.py:StateTests.test_self_relation",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests",
      "target": "tests/migrations/test_state.py:StateTests.test_equality",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests",
      "target": "tests/migrations/test_state.py:StateTests.test_dangling_references_throw_error",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests",
      "target": "tests/migrations/test_state.py:StateTests.test_real_apps",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests",
      "target": "tests/migrations/test_state.py:StateTests.test_ignore_order_wrt",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests",
      "target": "tests/migrations/test_state.py:StateTests.test_manager_refer_correct_model_version",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests",
      "target": "tests/migrations/test_state.py:StateTests.test_choices_iterator",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_create",
      "target": "tests/migrations/test_state.py:StateTests.test_create.Author",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_create",
      "target": "tests/migrations/test_state.py:StateTests.test_create.AuthorProxy",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_create",
      "target": "tests/migrations/test_state.py:StateTests.test_create.SubAuthor",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_create",
      "target": "tests/migrations/test_state.py:StateTests.test_create.Book",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_create",
      "target": "tests/migrations/test_state.py:StateTests.test_create.Food",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_create",
      "target": "tests/migrations/test_state.py:StateTests.test_create.FoodNoManagers",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_create",
      "target": "tests/migrations/test_state.py:StateTests.test_create.FoodNoDefaultManager",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_create",
      "target": "tests/migrations/test_state.py:StateTests.test_create.FoodOrderedManagers",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_create",
      "target": "tests/migrations/models.py:FoodManager",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_create.Author",
      "target": "tests/migrations/test_state.py:StateTests.test_create.Author.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_create.AuthorProxy",
      "target": "tests/migrations/test_state.py:StateTests.test_create.AuthorProxy.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_create.AuthorProxy",
      "target": "tests/migrations/test_state.py:StateTests.test_create.Author",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_create.SubAuthor",
      "target": "tests/migrations/test_state.py:StateTests.test_create.SubAuthor.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_create.SubAuthor",
      "target": "tests/migrations/test_state.py:StateTests.test_create.Author",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_create.Book",
      "target": "tests/migrations/test_state.py:StateTests.test_create.Book.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_create.Food",
      "target": "tests/migrations/test_state.py:StateTests.test_create.Food.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_create.FoodNoManagers",
      "target": "tests/migrations/test_state.py:StateTests.test_create.FoodNoManagers.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_create.FoodNoDefaultManager",
      "target": "tests/migrations/test_state.py:StateTests.test_create.FoodNoDefaultManager.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_create.FoodOrderedManagers",
      "target": "tests/migrations/test_state.py:StateTests.test_create.FoodOrderedManagers.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_custom_default_manager_added_to_the_model_state",
      "target": "tests/migrations/test_state.py:StateTests.test_custom_default_manager_added_to_the_model_state.Author",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_custom_default_manager_added_to_the_model_state.Author",
      "target": "tests/migrations/test_state.py:StateTests.test_custom_default_manager_added_to_the_model_state.Author.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_custom_default_manager_named_objects_with_false_migration_flag",
      "target": "tests/migrations/test_state.py:StateTests.test_custom_default_manager_named_objects_with_false_migration_flag.Author",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_custom_default_manager_named_objects_with_false_migration_flag.Author",
      "target": "tests/migrations/test_state.py:StateTests.test_custom_default_manager_named_objects_with_false_migration_flag.Author.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_no_duplicate_managers",
      "target": "tests/migrations/test_state.py:StateTests.test_no_duplicate_managers.PersonManager",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_no_duplicate_managers",
      "target": "tests/migrations/test_state.py:StateTests.test_no_duplicate_managers.Person",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_no_duplicate_managers",
      "target": "tests/migrations/test_state.py:StateTests.test_no_duplicate_managers.BossManager",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_no_duplicate_managers",
      "target": "tests/migrations/test_state.py:StateTests.test_no_duplicate_managers.Boss",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_no_duplicate_managers.Person",
      "target": "tests/migrations/test_state.py:StateTests.test_no_duplicate_managers.Person.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_no_duplicate_managers.BossManager",
      "target": "tests/migrations/test_state.py:StateTests.test_no_duplicate_managers.PersonManager",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_no_duplicate_managers.Boss",
      "target": "tests/migrations/test_state.py:StateTests.test_no_duplicate_managers.Boss.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_no_duplicate_managers.Boss",
      "target": "tests/migrations/test_state.py:StateTests.test_no_duplicate_managers.Person",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_custom_default_manager",
      "target": "tests/migrations/test_state.py:StateTests.test_custom_default_manager.Author",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_custom_default_manager.Author",
      "target": "tests/migrations/test_state.py:StateTests.test_custom_default_manager.Author.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_custom_base_manager",
      "target": "tests/migrations/test_state.py:StateTests.test_custom_base_manager.Author",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_custom_base_manager",
      "target": "tests/migrations/test_state.py:StateTests.test_custom_base_manager.Author2",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_custom_base_manager.Author",
      "target": "tests/migrations/test_state.py:StateTests.test_custom_base_manager.Author.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_custom_base_manager.Author2",
      "target": "tests/migrations/test_state.py:StateTests.test_custom_base_manager.Author2.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render",
      "target": "tests/migrations/models.py:FoodManager",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_model_inheritance",
      "target": "tests/migrations/test_state.py:StateTests.test_render_model_inheritance.Book",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_model_inheritance",
      "target": "tests/migrations/test_state.py:StateTests.test_render_model_inheritance.Novel",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_model_inheritance.Book",
      "target": "tests/migrations/test_state.py:StateTests.test_render_model_inheritance.Book.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_model_inheritance.Novel",
      "target": "tests/migrations/test_state.py:StateTests.test_render_model_inheritance.Novel.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_model_inheritance.Novel",
      "target": "tests/migrations/test_state.py:StateTests.test_render_model_inheritance.Book",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance",
      "target": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.Foo",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance",
      "target": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.Bar",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance",
      "target": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.FooBar",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance",
      "target": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.AbstractSubFooBar",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance",
      "target": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.SubFooBar",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.Foo",
      "target": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.Foo.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.Bar",
      "target": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.Bar.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.FooBar",
      "target": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.FooBar.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.FooBar",
      "target": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.Bar",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.FooBar",
      "target": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.Foo",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.AbstractSubFooBar",
      "target": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.AbstractSubFooBar.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.AbstractSubFooBar",
      "target": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.FooBar",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.SubFooBar",
      "target": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.SubFooBar.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.SubFooBar",
      "target": "tests/migrations/test_state.py:StateTests.test_render_model_with_multiple_inheritance.AbstractSubFooBar",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies",
      "target": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.A",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies",
      "target": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.B",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies",
      "target": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.C",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies",
      "target": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.D",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies",
      "target": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.E",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies",
      "target": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.F",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.A",
      "target": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.A.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.B",
      "target": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.B.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.B",
      "target": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.A",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.C",
      "target": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.C.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.C",
      "target": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.B",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.D",
      "target": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.D.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.D",
      "target": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.A",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.E",
      "target": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.E.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.E",
      "target": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.B",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.F",
      "target": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.F.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.F",
      "target": "tests/migrations/test_state.py:StateTests.test_render_project_dependencies.D",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_unique_app_labels",
      "target": "tests/migrations/test_state.py:StateTests.test_render_unique_app_labels.A",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_unique_app_labels",
      "target": "tests/migrations/test_state.py:StateTests.test_render_unique_app_labels.B",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_unique_app_labels.A",
      "target": "tests/migrations/test_state.py:StateTests.test_render_unique_app_labels.A.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_render_unique_app_labels.B",
      "target": "tests/migrations/test_state.py:StateTests.test_render_unique_app_labels.B.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_add_relations",
      "target": "tests/migrations/test_state.py:StateTests.test_add_relations.A",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_add_relations",
      "target": "tests/migrations/test_state.py:StateTests.test_add_relations.B",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_add_relations",
      "target": "tests/migrations/test_state.py:StateTests.test_add_relations.C",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_add_relations.A",
      "target": "tests/migrations/test_state.py:StateTests.test_add_relations.A.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_add_relations.B",
      "target": "tests/migrations/test_state.py:StateTests.test_add_relations.B.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_add_relations.B",
      "target": "tests/migrations/test_state.py:StateTests.test_add_relations.A",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_add_relations.C",
      "target": "tests/migrations/test_state.py:StateTests.test_add_relations.C.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_remove_relations",
      "target": "tests/migrations/test_state.py:StateTests.test_remove_relations.A",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_remove_relations",
      "target": "tests/migrations/test_state.py:StateTests.test_remove_relations.B",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_remove_relations",
      "target": "tests/migrations/test_state.py:StateTests.test_remove_relations.get_model_a",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_remove_relations",
      "target": "tests/migrations/test_state.py:StateTests.test_remove_relations.get_model_a",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_remove_relations.A",
      "target": "tests/migrations/test_state.py:StateTests.test_remove_relations.A.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_remove_relations.B",
      "target": "tests/migrations/test_state.py:StateTests.test_remove_relations.B.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_self_relation",
      "target": "tests/migrations/test_state.py:StateTests.test_self_relation.A",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_self_relation",
      "target": "tests/migrations/test_state.py:StateTests.test_self_relation.get_model_a",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_self_relation",
      "target": "tests/migrations/test_state.py:StateTests.test_self_relation.get_model_a",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_self_relation.A",
      "target": "tests/migrations/test_state.py:StateTests.test_self_relation.A.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_dangling_references_throw_error",
      "target": "tests/migrations/test_state.py:StateTests.test_dangling_references_throw_error.Author",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_dangling_references_throw_error",
      "target": "tests/migrations/test_state.py:StateTests.test_dangling_references_throw_error.Publisher",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_dangling_references_throw_error",
      "target": "tests/migrations/test_state.py:StateTests.test_dangling_references_throw_error.Book",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_dangling_references_throw_error",
      "target": "tests/migrations/test_state.py:StateTests.test_dangling_references_throw_error.Magazine",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_dangling_references_throw_error.Author",
      "target": "tests/migrations/test_state.py:StateTests.test_dangling_references_throw_error.Author.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_dangling_references_throw_error.Publisher",
      "target": "tests/migrations/test_state.py:StateTests.test_dangling_references_throw_error.Publisher.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_dangling_references_throw_error.Book",
      "target": "tests/migrations/test_state.py:StateTests.test_dangling_references_throw_error.Book.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_dangling_references_throw_error.Magazine",
      "target": "tests/migrations/test_state.py:StateTests.test_dangling_references_throw_error.Magazine.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_real_apps",
      "target": "tests/migrations/test_state.py:StateTests.test_real_apps.TestModel",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_real_apps.TestModel",
      "target": "tests/migrations/test_state.py:StateTests.test_real_apps.TestModel.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_ignore_order_wrt",
      "target": "tests/migrations/test_state.py:StateTests.test_ignore_order_wrt.Author",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_ignore_order_wrt",
      "target": "tests/migrations/test_state.py:StateTests.test_ignore_order_wrt.Book",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_ignore_order_wrt.Author",
      "target": "tests/migrations/test_state.py:StateTests.test_ignore_order_wrt.Author.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_ignore_order_wrt.Book",
      "target": "tests/migrations/test_state.py:StateTests.test_ignore_order_wrt.Book.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_manager_refer_correct_model_version",
      "target": "tests/migrations/models.py:FoodManager",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_choices_iterator",
      "target": "tests/migrations/test_state.py:StateTests.test_choices_iterator.Author",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:StateTests.test_choices_iterator.Author",
      "target": "tests/migrations/test_state.py:StateTests.test_choices_iterator.Author.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_custom_model_base",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_bound_field_sanity_check",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_sanity_check_to",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_sanity_check_through",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_sanity_index_name",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_fields_immutability",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_repr",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_custom_manager_swappable",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_order_with_respect_to_private_field",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_abstract_model_children_inherit_indexes",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_explicit_index_name",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_from_model_constraints",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable.Author",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable.Author",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable.Author.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract.SearchableLocation",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract.Station",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract.BusStation",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract.SearchableLocation",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract.SearchableLocation.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract.Station",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract.Station.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract.Station",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract.SearchableLocation",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract.BusStation",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract.BusStation.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract.BusStation",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract.Station",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract.BusStation.Meta",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract.SearchableLocation.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract.BusStation.Meta",
      "target": "tests/migrations/models.py:UnicodeModel.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract.BusStation.Meta",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_create_swappable_from_abstract.Station.Meta",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests.test_custom_manager_swappable",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_custom_manager_swappable.Food",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests.test_custom_manager_swappable.Food",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_custom_manager_swappable.Food.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests.test_order_with_respect_to_private_field",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_order_with_respect_to_private_field.PrivateFieldModel",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests.test_order_with_respect_to_private_field.PrivateFieldModel",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_order_with_respect_to_private_field.PrivateFieldModel.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests.test_abstract_model_children_inherit_indexes",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_abstract_model_children_inherit_indexes.Abstract",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests.test_abstract_model_children_inherit_indexes",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_abstract_model_children_inherit_indexes.Child1",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests.test_abstract_model_children_inherit_indexes",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_abstract_model_children_inherit_indexes.Child2",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests.test_abstract_model_children_inherit_indexes.Abstract",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_abstract_model_children_inherit_indexes.Abstract.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests.test_abstract_model_children_inherit_indexes.Child1",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_abstract_model_children_inherit_indexes.Abstract",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests.test_abstract_model_children_inherit_indexes.Child2",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_abstract_model_children_inherit_indexes.Abstract",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests.test_explicit_index_name",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_explicit_index_name.TestModel",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests.test_explicit_index_name.TestModel",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_explicit_index_name.TestModel.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests.test_from_model_constraints",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_from_model_constraints.ModelWithConstraints",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:ModelStateTests.test_from_model_constraints.ModelWithConstraints",
      "target": "tests/migrations/test_state.py:ModelStateTests.test_from_model_constraints.ModelWithConstraints.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.setUp",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.create_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.assertRelated",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.test_unrelated",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.test_direct_fk",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.test_direct_hidden_fk",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.test_fk_through_proxy",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.test_nested_fk",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.test_two_sided",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.test_circle",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.test_base",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.test_nested_base",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.test_multiple_bases",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.test_multiple_nested_bases",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.test_base_to_base_fk",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.test_base_to_subclass_fk",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.test_direct_m2m",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.test_direct_m2m_self",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.test_intermediate_m2m_self",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.test_intermediate_m2m",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.test_intermediate_m2m_extern_fk",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.test_intermediate_m2m_base",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.test_generic_fk",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.test_abstract_base",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.test_nested_abstract_base",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.test_proxy_base",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.test_nested_proxy_base",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.test_multiple_mixed_bases",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_unrelated",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_unrelated",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.assertRelated",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_direct_fk",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_direct_fk",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.assertRelated",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_direct_hidden_fk",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_direct_hidden_fk",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.assertRelated",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_fk_through_proxy",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_fk_through_proxy",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.assertRelated",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_nested_fk",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_nested_fk",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.assertRelated",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_two_sided",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_two_sided",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.assertRelated",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_circle",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_circle",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.assertRelated",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_base",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_base",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.assertRelated",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_nested_base",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_nested_base",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.assertRelated",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_multiple_bases",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_multiple_bases",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.assertRelated",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_multiple_nested_bases",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_multiple_nested_bases",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.assertRelated",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_base_to_base_fk",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_base_to_base_fk",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.assertRelated",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_base_to_subclass_fk",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_base_to_subclass_fk",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.assertRelated",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_direct_m2m",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_direct_m2m",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.assertRelated",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_direct_m2m_self",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_direct_m2m_self",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.assertRelated",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_intermediate_m2m_self",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_intermediate_m2m_self",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.assertRelated",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_intermediate_m2m",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_intermediate_m2m",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.assertRelated",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_intermediate_m2m_extern_fk",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_intermediate_m2m_extern_fk",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.assertRelated",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_intermediate_m2m_base",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_intermediate_m2m_base",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.assertRelated",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_generic_fk",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_generic_fk",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.assertRelated",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_abstract_base",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_abstract_base",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.assertRelated",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_nested_abstract_base",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_nested_abstract_base",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.assertRelated",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_proxy_base",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_proxy_base",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.assertRelated",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_nested_proxy_base",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_nested_proxy_base",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.assertRelated",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_multiple_mixed_bases",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.create_model",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_state.py:RelatedModelsTests.test_multiple_mixed_bases",
      "target": "tests/migrations/test_state.py:RelatedModelsTests.assertRelated",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_deprecated_fields.py",
      "target": "tests/migrations/test_deprecated_fields.py:Tests",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_deprecated_fields.py",
      "target": "tests/migrations/test_base.py:MigrationTestBase",
      "type": "imports"
    },
    {
      "source": "tests/migrations/test_deprecated_fields.py:Tests",
      "target": "tests/migrations/test_deprecated_fields.py:Tests.test_migrate",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_deprecated_fields.py:Tests",
      "target": "tests/migrations/test_base.py:MigrationTestBase",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_deprecated_fields.py:Tests.test_migrate",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_deprecated_fields.py:Tests.test_migrate",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py",
      "target": "tests/migrations/test_commands.py:MigrateTests",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py",
      "target": "tests/migrations/test_commands.py:SquashMigrationsTests",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py",
      "target": "tests/migrations/test_commands.py:AppLabelErrorTests",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py",
      "target": "tests/migrations/models.py:UnicodeModel",
      "type": "imports"
    },
    {
      "source": "tests/migrations/test_commands.py",
      "target": "tests/migrations/models.py:UnserializableModel",
      "type": "imports"
    },
    {
      "source": "tests/migrations/test_commands.py",
      "target": "tests/migrations/routers.py:TestRouter",
      "type": "imports"
    },
    {
      "source": "tests/migrations/test_commands.py",
      "target": "tests/migrations/test_base.py:MigrationTestBase",
      "type": "imports"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_migrate",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_migrate_with_system_checks",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_app_without_migrations",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_ambigious_prefix",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_unknown_prefix",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_migrate_initial_false",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_migrate_fake_initial",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_migrate_fake_split_initial",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_migrate_conflict_exit",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_showmigrations_list",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_showmigrations_plan",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_migrate_plan",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_showmigrations_no_migrations",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_showmigrations_unmigrated_app",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_showmigrations_plan_no_migrations",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_showmigrations_plan_squashed",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_showmigrations_plan_single_app_label",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_showmigrations_plan_multiple_app_labels",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_showmigrations_plan_app_label_no_migrations",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_sqlmigrate_forwards",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_sqlmigrate_backwards",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_sqlmigrate_for_non_atomic_migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_regression_22823_unmigrated_fk_to_migrated_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_migrate_syncdb_deferred_sql_executed_with_schemaeditor",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_migrate_syncdb_app_with_migrations",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_migrate_syncdb_app_label",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_migrate_record_replaced",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_migrate_record_squashed",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_commands.py:MigrateTests.test_migrate_inconsistent_history",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests",
      "target": "tests/migrations/test_base.py:MigrationTestBase",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests.test_migrate",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests.test_migrate",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests.test_migrate_initial_false",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests.test_migrate_fake_initial",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MigrateTests.test_migrate_fake_initial",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.setUp",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.tearDown",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_files_content",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_order",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_empty_connections",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_consistency_checks_respect_routers",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_failing_migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_conflict_exit",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_merge_no_conflict",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_empty_no_app_specified",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_empty_migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_disabled_migrations_for_app",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_no_changes_no_apps",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_no_changes",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_no_apps_initial",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_no_init",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_migrations_announce",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_no_common_ancestor",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_interactive_reject",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_interactive_accept",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_default_merge_name",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_not_null_addition",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_not_null_alteration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_no_model_rename",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_no_field_rename",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_handle_merge",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigration_merge_dry_run",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigration_merge_dry_run_verbosity_3",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_dry_run",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_dry_run_verbosity_3",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_migrations_modules_path_not_exist",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_migrations_modules_nonexistent_toplevel_package",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_interactive_by_default",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_unspecified_app_with_conflict_no_merge",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_unspecified_app_with_conflict_merge",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_merge_dont_output_dependency_operations",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_with_custom_name",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_with_invalid_custom_name",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_check",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_migration_path_output",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_migration_path_output_valueerror",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_inconsistent_history",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_auto_now_add_interactive",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests",
      "target": "tests/migrations/test_base.py:MigrationTestBase",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.tearDown",
      "target": "tests/migrations/test_base.py:MigrationTestBase.tearDown",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_files_content",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_files_content",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_order",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_empty_connections",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_consistency_checks_respect_routers",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_consistency_checks_respect_routers.patched_has_table",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_consistency_checks_respect_routers",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_consistency_checks_respect_routers",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_failing_migration",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_conflict_exit",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_merge_no_conflict",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_empty_migration",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_no_changes",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_no_apps_initial",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_no_init",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_migrations_announce",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_no_common_ancestor",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_interactive_reject",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_interactive_accept",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_default_merge_name",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_not_null_addition",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_not_null_addition.SillyModel",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_not_null_addition",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_not_null_addition.SillyModel",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_not_null_addition.SillyModel.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_not_null_alteration",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_not_null_alteration.Author",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_not_null_alteration",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_not_null_alteration.Author",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_not_null_alteration.Author.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_no_model_rename",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_no_model_rename.RenamedModel",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_no_model_rename",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_no_model_rename.RenamedModel",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_no_model_rename.RenamedModel.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_no_field_rename",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_no_field_rename.SillyModel",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_no_field_rename",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_no_field_rename.SillyModel",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_non_interactive_no_field_rename.SillyModel.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_handle_merge",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigration_merge_dry_run",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigration_merge_dry_run_verbosity_3",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_dry_run",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_dry_run.SillyModel",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_dry_run",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_dry_run.SillyModel",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_dry_run.SillyModel.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_dry_run_verbosity_3",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_dry_run_verbosity_3.SillyModel",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_dry_run_verbosity_3",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_dry_run_verbosity_3.SillyModel",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_dry_run_verbosity_3.SillyModel.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_migrations_modules_path_not_exist",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_migrations_modules_path_not_exist.SillyModel",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_migrations_modules_path_not_exist",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_migrations_modules_path_not_exist.SillyModel",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_migrations_modules_path_not_exist.SillyModel.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_interactive_by_default",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_unspecified_app_with_conflict_no_merge",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_unspecified_app_with_conflict_merge",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_with_custom_name",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_with_custom_name.cmd",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_with_custom_name",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_with_custom_name.cmd",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_with_custom_name",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_check",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_migration_path_output",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_migration_path_output_valueerror",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_inconsistent_history",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_auto_now_add_interactive",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_auto_now_add_interactive.Entry",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_auto_now_add_interactive",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_auto_now_add_interactive.Entry",
      "target": "tests/migrations/test_commands.py:MakeMigrationsTests.test_makemigrations_auto_now_add_interactive.Entry.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:SquashMigrationsTests",
      "target": "tests/migrations/test_commands.py:SquashMigrationsTests.test_squashmigrations_squashes",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:SquashMigrationsTests",
      "target": "tests/migrations/test_commands.py:SquashMigrationsTests.test_squashmigrations_initial_attribute",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:SquashMigrationsTests",
      "target": "tests/migrations/test_commands.py:SquashMigrationsTests.test_squashmigrations_optimizes",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:SquashMigrationsTests",
      "target": "tests/migrations/test_commands.py:SquashMigrationsTests.test_ticket_23799_squashmigrations_no_optimize",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:SquashMigrationsTests",
      "target": "tests/migrations/test_commands.py:SquashMigrationsTests.test_squashmigrations_valid_start",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:SquashMigrationsTests",
      "target": "tests/migrations/test_commands.py:SquashMigrationsTests.test_squashmigrations_invalid_start",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:SquashMigrationsTests",
      "target": "tests/migrations/test_commands.py:SquashMigrationsTests.test_squashed_name_with_start_migration_name",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:SquashMigrationsTests",
      "target": "tests/migrations/test_commands.py:SquashMigrationsTests.test_squashed_name_without_start_migration_name",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:SquashMigrationsTests",
      "target": "tests/migrations/test_base.py:MigrationTestBase",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_commands.py:SquashMigrationsTests.test_squashmigrations_squashes",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:SquashMigrationsTests.test_squashmigrations_initial_attribute",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:SquashMigrationsTests.test_squashmigrations_optimizes",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:SquashMigrationsTests.test_ticket_23799_squashmigrations_no_optimize",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:SquashMigrationsTests.test_squashmigrations_valid_start",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:SquashMigrationsTests.test_squashmigrations_invalid_start",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:SquashMigrationsTests.test_squashed_name_with_start_migration_name",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:SquashMigrationsTests.test_squashed_name_without_start_migration_name",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_commands.py:AppLabelErrorTests",
      "target": "tests/migrations/test_commands.py:AppLabelErrorTests.test_makemigrations_nonexistent_app_label",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:AppLabelErrorTests",
      "target": "tests/migrations/test_commands.py:AppLabelErrorTests.test_makemigrations_app_name_specified_as_label",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:AppLabelErrorTests",
      "target": "tests/migrations/test_commands.py:AppLabelErrorTests.test_migrate_nonexistent_app_label",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:AppLabelErrorTests",
      "target": "tests/migrations/test_commands.py:AppLabelErrorTests.test_migrate_app_name_specified_as_label",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:AppLabelErrorTests",
      "target": "tests/migrations/test_commands.py:AppLabelErrorTests.test_showmigrations_nonexistent_app_label",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:AppLabelErrorTests",
      "target": "tests/migrations/test_commands.py:AppLabelErrorTests.test_showmigrations_app_name_specified_as_label",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:AppLabelErrorTests",
      "target": "tests/migrations/test_commands.py:AppLabelErrorTests.test_sqlmigrate_nonexistent_app_label",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:AppLabelErrorTests",
      "target": "tests/migrations/test_commands.py:AppLabelErrorTests.test_sqlmigrate_app_name_specified_as_label",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:AppLabelErrorTests",
      "target": "tests/migrations/test_commands.py:AppLabelErrorTests.test_squashmigrations_nonexistent_app_label",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_commands.py:AppLabelErrorTests",
      "target": "tests/migrations/test_commands.py:AppLabelErrorTests.test_squashmigrations_app_name_specified_as_label",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py",
      "target": "tests/migrations/test_autodetector.py:DeconstructibleObject",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py",
      "target": "tests/migrations/models.py:FoodManager",
      "type": "imports"
    },
    {
      "source": "tests/migrations/test_autodetector.py",
      "target": "tests/migrations/models.py:FoodQuerySet",
      "type": "imports"
    },
    {
      "source": "tests/migrations/test_autodetector.py:DeconstructibleObject",
      "target": "tests/migrations/test_autodetector.py:DeconstructibleObject.deconstruct",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.repr_changes",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertMigrationDependencies",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationFieldAttributes",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.make_project_state",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_arrange_for_graph",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_trim_apps",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_custom_migration_name",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_new_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_old_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_field",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_date_fields_with_auto_now_not_asking_for_default",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_date_fields_with_auto_now_add_not_asking_for_null_addition",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_date_fields_with_auto_now_add_asking_for_default",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_field",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_field",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_supports_functools_partial",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_field_to_not_null_with_default",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_field_to_not_null_without_default",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_field_to_not_null_oneoff_default",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_field",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_field_foreign_key_to_field",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_foreign_object_fields",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_field_preserved_db_column",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_related_field_preserved_db_column",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_m2m_through_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_model_with_renamed_rel_field",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_model_with_fks_in_different_position",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_model_reverse_relation_dependencies",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_fk_dependency",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy_fk_dependency",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_same_app_no_fk_dependency",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_fk_dependency",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_same_app_circular_fk_dependency",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_same_app_circular_fk_dependency_with_unique_together_and_indexes",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_db_table_add",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_db_table_change",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_db_table_remove",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_db_table_no_changes",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_keep_db_table_with_model_change",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_db_table_with_model_change",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_identical_regex_doesnt_alter",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_different_regex_does_alter",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_empty_foo_together",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_create_model_with_indexes",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_indexes",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_indexes",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_order_fields_indexes",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_create_model_with_check_constraint",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_constraints",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_constraints",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_foo_together",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_foo_together",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_foo_together_remove_fk",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_foo_together_no_changes",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_foo_together_ordering",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_field_and_foo_together",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_create_model_and_unique_together",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_field_and_foo_together",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_field_and_foo_together",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy_custom_pk",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy_to_mti_with_fk_to_proxy",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy_to_mti_with_fk_to_proxy_proxy",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_unmanaged_create",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_unmanaged_delete",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_unmanaged_to_managed",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_managed_to_unmanaged",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_unmanaged_custom_pk",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable_changed",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_field_with_default",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_custom_deconstructible",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_deconstruct_field_kwarg",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_deconstructible_list",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_deconstructible_tuple",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_deconstructible_dict",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_nested_deconstructible_objects",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_deconstruct_type",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_replace_string_with_foreignkey",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_foreign_key_removed_before_target_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_many_to_many",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_many_to_many",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_create_with_through_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_many_to_many_removed_before_through_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_many_to_many_removed_before_through_model_2",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_m2m_w_through_multistep_remove",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_concrete_field_changed_to_many_to_many",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_many_to_many_changed_to_concrete_field",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_non_circular_foreignkey_dependency_removal",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_model_options",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_model_options_proxy",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_set_alter_order_with_respect_to",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_alter_order_with_respect_to",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_alter_order_with_respect_to",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_model_order_with_respect_to",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_model_managers",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable_first_inheritance",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_default_related_name_option",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable_first_setting",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_bases_first",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_multiple_bases",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy_bases_first",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_pk_fk_included",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_first_dependency",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_last_dependency",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_fk_before_model_deletion",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_fk_dependency_other_app",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_dependency_mixed_addcreate",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_dependency_swappable",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_dependency_swappable2",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_dependency_swappable_self",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable_circular_multi_mti",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_blank_textfield_and_charfield",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_non_blank_textfield_and_charfield",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_mti_inheritance_model_removal",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.repr_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.assertMigrationDependencies",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.repr_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.repr_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.repr_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationFieldAttributes",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.repr_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.make_project_state",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_arrange_for_graph",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.make_project_state",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_trim_apps",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.make_project_state",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_custom_migration_name",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.make_project_state",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_new_model",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_new_model",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_new_model",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_new_model",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_old_model",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_old_model",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_old_model",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_old_model",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_date_fields_with_auto_now_not_asking_for_default",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationFieldAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_date_fields_with_auto_now_not_asking_for_default",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_date_fields_with_auto_now_not_asking_for_default",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_date_fields_with_auto_now_not_asking_for_default",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_date_fields_with_auto_now_add_not_asking_for_null_addition",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationFieldAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_date_fields_with_auto_now_add_not_asking_for_null_addition",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_date_fields_with_auto_now_add_not_asking_for_null_addition",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_date_fields_with_auto_now_add_not_asking_for_null_addition",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_date_fields_with_auto_now_add_asking_for_default",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_date_fields_with_auto_now_add_asking_for_default",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationFieldAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_date_fields_with_auto_now_add_asking_for_default",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_date_fields_with_auto_now_add_asking_for_default",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_supports_functools_partial",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_supports_functools_partial._content_file_name",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_supports_functools_partial",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_supports_functools_partial.content_file_name",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_supports_functools_partial",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_supports_functools_partial.content_file_name",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_supports_functools_partial",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_supports_functools_partial",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_supports_functools_partial",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_field_to_not_null_with_default",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_field_to_not_null_with_default",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationFieldAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_field_to_not_null_with_default",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_field_to_not_null_with_default",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_field_to_not_null_with_default",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_field_to_not_null_without_default",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_field_to_not_null_without_default",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationFieldAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_field_to_not_null_without_default",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_field_to_not_null_without_default",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_field_to_not_null_without_default",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_field_to_not_null_oneoff_default",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_field_to_not_null_oneoff_default",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationFieldAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_field_to_not_null_oneoff_default",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_field_to_not_null_oneoff_default",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_field_to_not_null_oneoff_default",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_field_foreign_key_to_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_field_foreign_key_to_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_field_foreign_key_to_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_field_foreign_key_to_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_foreign_object_fields",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_foreign_object_fields",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_foreign_object_fields",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_foreign_object_fields",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_field_preserved_db_column",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_field_preserved_db_column",
      "target": "tests/migrations/test_autodetector.py:DeconstructibleObject.deconstruct",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_field_preserved_db_column",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_field_preserved_db_column",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_field_preserved_db_column",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_related_field_preserved_db_column",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_related_field_preserved_db_column",
      "target": "tests/migrations/test_autodetector.py:DeconstructibleObject.deconstruct",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_related_field_preserved_db_column",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_related_field_preserved_db_column",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_related_field_preserved_db_column",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_model",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_model",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_model",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_model",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_m2m_through_model",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_m2m_through_model",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_m2m_through_model",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_m2m_through_model",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_model_with_renamed_rel_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_model_with_renamed_rel_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_model_with_renamed_rel_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_model_with_renamed_rel_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_model_with_fks_in_different_position",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_model_with_fks_in_different_position",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_model_with_fks_in_different_position",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_model_with_fks_in_different_position",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_model_reverse_relation_dependencies",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_model_reverse_relation_dependencies",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_model_reverse_relation_dependencies",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertMigrationDependencies",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_model_reverse_relation_dependencies",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_model_reverse_relation_dependencies",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_fk_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_fk_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_fk_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertMigrationDependencies",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_fk_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_fk_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy_fk_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy_fk_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy_fk_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertMigrationDependencies",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy_fk_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy_fk_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_same_app_no_fk_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_same_app_no_fk_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_same_app_no_fk_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertMigrationDependencies",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_same_app_no_fk_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_same_app_no_fk_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_fk_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_fk_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_fk_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertMigrationDependencies",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_fk_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_fk_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_same_app_circular_fk_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_same_app_circular_fk_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_same_app_circular_fk_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertMigrationDependencies",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_same_app_circular_fk_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_same_app_circular_fk_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_same_app_circular_fk_dependency_with_unique_together_and_indexes",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_same_app_circular_fk_dependency_with_unique_together_and_indexes",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_same_app_circular_fk_dependency_with_unique_together_and_indexes",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertMigrationDependencies",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_same_app_circular_fk_dependency_with_unique_together_and_indexes",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_db_table_add",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_db_table_add",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_db_table_add",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_db_table_add",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_db_table_change",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_db_table_change",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_db_table_change",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_db_table_change",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_db_table_remove",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_db_table_remove",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_db_table_remove",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_db_table_remove",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_db_table_no_changes",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_keep_db_table_with_model_change",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_keep_db_table_with_model_change",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_keep_db_table_with_model_change",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_keep_db_table_with_model_change",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_db_table_with_model_change",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_db_table_with_model_change",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_db_table_with_model_change",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_db_table_with_model_change",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_identical_regex_doesnt_alter",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_identical_regex_doesnt_alter",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_different_regex_does_alter",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_different_regex_does_alter",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_different_regex_does_alter",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_empty_foo_together",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_empty_foo_together.test",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_empty_foo_together",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.test_empty_foo_together.test",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_empty_foo_together.test",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_create_model_with_indexes",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_create_model_with_indexes",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_create_model_with_indexes",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_indexes",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_indexes",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_indexes",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_indexes",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_indexes",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_indexes",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_indexes",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_indexes",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_order_fields_indexes",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_order_fields_indexes",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_order_fields_indexes",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_order_fields_indexes",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_create_model_with_check_constraint",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_create_model_with_check_constraint",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_create_model_with_check_constraint",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_constraints",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_constraints",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_constraints",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_constraints",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_constraints",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_constraints",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_constraints",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_constraints",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_foo_together",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_foo_together",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_foo_together",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_foo_together",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_foo_together",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_foo_together",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_foo_together",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_foo_together",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_foo_together_remove_fk",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_foo_together_remove_fk",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_foo_together_remove_fk",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_foo_together_remove_fk",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_foo_together_no_changes",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_foo_together_ordering",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_foo_together_ordering",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_foo_together_ordering",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_foo_together_ordering",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_field_and_foo_together",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_field_and_foo_together",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_field_and_foo_together",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_field_and_foo_together",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_create_model_and_unique_together",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_create_model_and_unique_together",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_field_and_foo_together",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_field_and_foo_together",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_field_and_foo_together",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_field_and_foo_together",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_field_and_foo_together",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_field_and_foo_together",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_field_and_foo_together",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_rename_field_and_foo_together",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy_custom_pk",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy_to_mti_with_fk_to_proxy",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy_to_mti_with_fk_to_proxy",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy_to_mti_with_fk_to_proxy",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertMigrationDependencies",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy_to_mti_with_fk_to_proxy",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy_to_mti_with_fk_to_proxy_proxy",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy_to_mti_with_fk_to_proxy_proxy",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy_to_mti_with_fk_to_proxy_proxy",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertMigrationDependencies",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy_to_mti_with_fk_to_proxy_proxy",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_unmanaged_create",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_unmanaged_create",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_unmanaged_create",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_unmanaged_create",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_unmanaged_delete",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_unmanaged_delete",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_unmanaged_delete",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_unmanaged_to_managed",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_unmanaged_to_managed",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_unmanaged_to_managed",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_unmanaged_to_managed",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_managed_to_unmanaged",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_managed_to_unmanaged",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_managed_to_unmanaged",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_managed_to_unmanaged",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_unmanaged_custom_pk",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertMigrationDependencies",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable_changed",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable_changed",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.make_project_state",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable_changed",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable_changed",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_field_with_default",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_field_with_default",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_field_with_default",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_field_with_default",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_custom_deconstructible",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_deconstruct_field_kwarg",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_deconstructible_list",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_deconstructible_tuple",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_deconstructible_dict",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_nested_deconstructible_objects",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_deconstruct_type",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_deconstruct_type",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_deconstruct_type",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_replace_string_with_foreignkey",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_replace_string_with_foreignkey",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_replace_string_with_foreignkey",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_replace_string_with_foreignkey",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_foreign_key_removed_before_target_model",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_foreign_key_removed_before_target_model",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_foreign_key_removed_before_target_model",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_foreign_key_removed_before_target_model",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_many_to_many",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_many_to_many",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_many_to_many",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_many_to_many",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_many_to_many",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_many_to_many",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_many_to_many",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_many_to_many",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_create_with_through_model",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_create_with_through_model",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_create_with_through_model",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_create_with_through_model",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_many_to_many_removed_before_through_model",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_many_to_many_removed_before_through_model",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_many_to_many_removed_before_through_model",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_many_to_many_removed_before_through_model",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_many_to_many_removed_before_through_model_2",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_many_to_many_removed_before_through_model_2",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_many_to_many_removed_before_through_model_2",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_many_to_many_removed_before_through_model_2",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_m2m_w_through_multistep_remove",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_m2m_w_through_multistep_remove",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_m2m_w_through_multistep_remove",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_m2m_w_through_multistep_remove",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_concrete_field_changed_to_many_to_many",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_concrete_field_changed_to_many_to_many",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_concrete_field_changed_to_many_to_many",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_concrete_field_changed_to_many_to_many",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_many_to_many_changed_to_concrete_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_many_to_many_changed_to_concrete_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationFieldAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_many_to_many_changed_to_concrete_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_many_to_many_changed_to_concrete_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_many_to_many_changed_to_concrete_field",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_non_circular_foreignkey_dependency_removal",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_non_circular_foreignkey_dependency_removal",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_non_circular_foreignkey_dependency_removal",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_non_circular_foreignkey_dependency_removal",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_model_options",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_model_options",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_model_options",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_model_options",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_model_options_proxy",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_model_options_proxy",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_model_options_proxy",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_model_options_proxy",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_set_alter_order_with_respect_to",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_set_alter_order_with_respect_to",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_set_alter_order_with_respect_to",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_set_alter_order_with_respect_to",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_alter_order_with_respect_to",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_alter_order_with_respect_to",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_alter_order_with_respect_to",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_alter_order_with_respect_to",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_alter_order_with_respect_to",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_alter_order_with_respect_to",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_alter_order_with_respect_to",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_remove_alter_order_with_respect_to",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_model_order_with_respect_to",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_model_order_with_respect_to",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_model_order_with_respect_to",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_model_order_with_respect_to",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_model_managers",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_model_managers",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_model_managers",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_model_managers",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable_first_inheritance",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable_first_inheritance",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable_first_inheritance",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable_first_inheritance",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_default_related_name_option",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_default_related_name_option",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_default_related_name_option",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_default_related_name_option",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable_first_setting",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable_first_setting",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable_first_setting",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable_first_setting",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_bases_first",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_bases_first",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_bases_first",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_bases_first",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_multiple_bases",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_multiple_bases",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_multiple_bases",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_multiple_bases",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy_bases_first",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy_bases_first",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy_bases_first",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_proxy_bases_first",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_pk_fk_included",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_pk_fk_included",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_pk_fk_included",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_pk_fk_included",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_first_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_first_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.make_project_state",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_first_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertMigrationDependencies",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_first_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_first_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_last_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_last_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.make_project_state",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_last_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertMigrationDependencies",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_last_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_last_dependency",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_fk_before_model_deletion",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_fk_before_model_deletion",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_fk_before_model_deletion",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_alter_fk_before_model_deletion",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_fk_dependency_other_app",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_fk_dependency_other_app",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_fk_dependency_other_app",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertMigrationDependencies",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_fk_dependency_other_app",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_fk_dependency_other_app",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_dependency_mixed_addcreate",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_dependency_mixed_addcreate",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_dependency_mixed_addcreate",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_dependency_swappable",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_dependency_swappable",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_dependency_swappable",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertMigrationDependencies",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_dependency_swappable",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_dependency_swappable2",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_dependency_swappable2",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_dependency_swappable2",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertMigrationDependencies",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_dependency_swappable2",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_dependency_swappable_self",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_dependency_swappable_self",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_dependency_swappable_self",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertMigrationDependencies",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_circular_dependency_swappable_self",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable_circular_multi_mti",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable_circular_multi_mti",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_swappable_circular_multi_mti",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_blank_textfield_and_charfield",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_blank_textfield_and_charfield",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_blank_textfield_and_charfield",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_blank_textfield_and_charfield",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_non_blank_textfield_and_charfield",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_non_blank_textfield_and_charfield",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_non_blank_textfield_and_charfield",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_add_non_blank_textfield_and_charfield",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_mti_inheritance_model_removal",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertNumberMigrations",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_mti_inheritance_model_removal",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.get_changes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_mti_inheritance_model_removal",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationTypes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_autodetector.py:AutodetectorTests.test_mti_inheritance_model_removal",
      "target": "tests/migrations/test_autodetector.py:AutodetectorTests.assertOperationAttributes",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_executor.py",
      "target": "tests/migrations/test_executor.py:ExecutorTests",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_executor.py",
      "target": "tests/migrations/test_executor.py:FakeLoader",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_executor.py",
      "target": "tests/migrations/test_executor.py:FakeMigration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_executor.py",
      "target": "tests/migrations/test_executor.py:ExecutorUnitTests",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_executor.py",
      "target": "tests/migrations/test_base.py:MigrationTestBase",
      "type": "imports"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests",
      "target": "tests/migrations/test_executor.py:ExecutorTests.test_run",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests",
      "target": "tests/migrations/test_executor.py:ExecutorTests.test_run_with_squashed",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests",
      "target": "tests/migrations/test_executor.py:ExecutorTests.test_non_atomic_migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests",
      "target": "tests/migrations/test_executor.py:ExecutorTests.test_atomic_operation_in_non_atomic_migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests",
      "target": "tests/migrations/test_executor.py:ExecutorTests.test_empty_plan",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests",
      "target": "tests/migrations/test_executor.py:ExecutorTests.test_mixed_plan_not_supported",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests",
      "target": "tests/migrations/test_executor.py:ExecutorTests.test_soft_apply",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests",
      "target": "tests/migrations/test_executor.py:ExecutorTests.test_custom_user",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests",
      "target": "tests/migrations/test_executor.py:ExecutorTests.test_detect_soft_applied_add_field_manytomanyfield",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests",
      "target": "tests/migrations/test_executor.py:ExecutorTests.test_unrelated_model_lookups_forwards",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests",
      "target": "tests/migrations/test_executor.py:ExecutorTests.test_unrelated_model_lookups_backwards",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests",
      "target": "tests/migrations/test_executor.py:ExecutorTests.test_unrelated_applied_migrations_mutate_state",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests",
      "target": "tests/migrations/test_executor.py:ExecutorTests.test_process_callback",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests",
      "target": "tests/migrations/test_executor.py:ExecutorTests.test_alter_id_type_with_fk",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests",
      "target": "tests/migrations/test_executor.py:ExecutorTests.test_apply_all_replaced_marks_replacement_as_applied",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests",
      "target": "tests/migrations/test_executor.py:ExecutorTests.test_migrate_marks_replacement_applied_even_if_it_did_nothing",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests",
      "target": "tests/migrations/test_executor.py:ExecutorTests.test_migrations_applied_and_recorded_atomically",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests",
      "target": "tests/migrations/test_base.py:MigrationTestBase",
      "type": "inherits"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests.test_run",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests.test_run",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests.test_run_with_squashed",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests.test_run_with_squashed",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests.test_non_atomic_migration",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests.test_non_atomic_migration",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests.test_mixed_plan_not_supported",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests.test_soft_apply",
      "target": "tests/migrations/test_executor.py:ExecutorTests.test_soft_apply.fake_storer",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests.test_soft_apply",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests.test_soft_apply",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests.test_custom_user",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests.test_custom_user",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests.test_detect_soft_applied_add_field_manytomanyfield",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests.test_detect_soft_applied_add_field_manytomanyfield",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests.test_unrelated_model_lookups_forwards",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests.test_unrelated_model_lookups_forwards",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests.test_unrelated_model_lookups_backwards",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests.test_unrelated_model_lookups_backwards",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests.test_process_callback",
      "target": "tests/migrations/test_executor.py:ExecutorTests.test_process_callback.callback",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests.test_process_callback",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests.test_alter_id_type_with_fk",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests.test_alter_id_type_with_fk",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorTests.test_migrations_applied_and_recorded_atomically",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_executor.py:FakeMigration",
      "target": "tests/migrations/test_executor.py:FakeMigration.__repr__",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorUnitTests",
      "target": "tests/migrations/test_executor.py:ExecutorUnitTests.test_minimize_rollbacks",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorUnitTests",
      "target": "tests/migrations/test_executor.py:ExecutorUnitTests.test_minimize_rollbacks_branchy",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorUnitTests",
      "target": "tests/migrations/test_executor.py:ExecutorUnitTests.test_backwards_nothing_to_do",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorUnitTests.test_minimize_rollbacks",
      "target": "tests/migrations/test_executor.py:FakeMigration",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorUnitTests.test_minimize_rollbacks",
      "target": "tests/migrations/test_executor.py:FakeLoader",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorUnitTests.test_minimize_rollbacks_branchy",
      "target": "tests/migrations/test_executor.py:FakeMigration",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorUnitTests.test_minimize_rollbacks_branchy",
      "target": "tests/migrations/test_executor.py:FakeLoader",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorUnitTests.test_backwards_nothing_to_do",
      "target": "tests/migrations/test_executor.py:FakeMigration",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_executor.py:ExecutorUnitTests.test_backwards_nothing_to_do",
      "target": "tests/migrations/test_executor.py:FakeLoader",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_questioner.py",
      "target": "tests/migrations/test_questioner.py:QuestionerTests",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_questioner.py:QuestionerTests",
      "target": "tests/migrations/test_questioner.py:QuestionerTests.test_ask_initial_with_disabled_migrations",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_questioner.py:QuestionerTests",
      "target": "tests/migrations/test_questioner.py:QuestionerTests.test_timedelta_default",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_base.py",
      "target": "tests/migrations/test_base.py:MigrationTestBase",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_base.py:MigrationTestBase",
      "target": "tests/migrations/test_base.py:MigrationTestBase.tearDown",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_base.py:MigrationTestBase",
      "target": "tests/migrations/test_base.py:MigrationTestBase.get_table_description",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_base.py:MigrationTestBase",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableExists",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_base.py:MigrationTestBase",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertTableNotExists",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_base.py:MigrationTestBase",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertColumnExists",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_base.py:MigrationTestBase",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertColumnNotExists",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_base.py:MigrationTestBase",
      "target": "tests/migrations/test_base.py:MigrationTestBase._get_column_allows_null",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_base.py:MigrationTestBase",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertColumnNull",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_base.py:MigrationTestBase",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertColumnNotNull",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_base.py:MigrationTestBase",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertIndexExists",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_base.py:MigrationTestBase",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertIndexNotExists",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_base.py:MigrationTestBase",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertConstraintExists",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_base.py:MigrationTestBase",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertConstraintNotExists",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_base.py:MigrationTestBase",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertFKExists",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_base.py:MigrationTestBase",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertFKNotExists",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_base.py:MigrationTestBase",
      "target": "tests/migrations/test_base.py:MigrationTestBase.temporary_migration_module",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_base.py:MigrationTestBase.assertColumnExists",
      "target": "tests/migrations/test_base.py:MigrationTestBase.get_table_description",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_base.py:MigrationTestBase.assertColumnNotExists",
      "target": "tests/migrations/test_base.py:MigrationTestBase.get_table_description",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_base.py:MigrationTestBase._get_column_allows_null",
      "target": "tests/migrations/test_base.py:MigrationTestBase.get_table_description",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_base.py:MigrationTestBase.assertColumnNull",
      "target": "tests/migrations/test_base.py:MigrationTestBase._get_column_allows_null",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_base.py:MigrationTestBase.assertColumnNotNull",
      "target": "tests/migrations/test_base.py:MigrationTestBase._get_column_allows_null",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_base.py:MigrationTestBase.assertIndexNotExists",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertIndexExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_base.py:MigrationTestBase.assertConstraintNotExists",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertConstraintExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_base.py:MigrationTestBase.assertFKNotExists",
      "target": "tests/migrations/test_base.py:MigrationTestBase.assertFKExists",
      "type": "invokes"
    },
    {
      "source": "tests/migrations/test_graph.py",
      "target": "tests/migrations/test_graph.py:GraphTests",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_graph.py",
      "target": "tests/migrations/test_graph.py:NodeTests",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_graph.py:GraphTests",
      "target": "tests/migrations/test_graph.py:GraphTests.test_simple_graph",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_graph.py:GraphTests",
      "target": "tests/migrations/test_graph.py:GraphTests.test_complex_graph",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_graph.py:GraphTests",
      "target": "tests/migrations/test_graph.py:GraphTests.test_circular_graph",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_graph.py:GraphTests",
      "target": "tests/migrations/test_graph.py:GraphTests.test_circular_graph_2",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_graph.py:GraphTests",
      "target": "tests/migrations/test_graph.py:GraphTests.test_iterative_dfs",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_graph.py:GraphTests",
      "target": "tests/migrations/test_graph.py:GraphTests.test_iterative_dfs_complexity",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_graph.py:GraphTests",
      "target": "tests/migrations/test_graph.py:GraphTests.test_plan_invalid_node",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_graph.py:GraphTests",
      "target": "tests/migrations/test_graph.py:GraphTests.test_missing_parent_nodes",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_graph.py:GraphTests",
      "target": "tests/migrations/test_graph.py:GraphTests.test_missing_child_nodes",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_graph.py:GraphTests",
      "target": "tests/migrations/test_graph.py:GraphTests.test_validate_consistency_missing_parent",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_graph.py:GraphTests",
      "target": "tests/migrations/test_graph.py:GraphTests.test_validate_consistency_missing_child",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_graph.py:GraphTests",
      "target": "tests/migrations/test_graph.py:GraphTests.test_validate_consistency_no_error",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_graph.py:GraphTests",
      "target": "tests/migrations/test_graph.py:GraphTests.test_validate_consistency_dummy",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_graph.py:GraphTests",
      "target": "tests/migrations/test_graph.py:GraphTests.test_remove_replaced_nodes",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_graph.py:GraphTests",
      "target": "tests/migrations/test_graph.py:GraphTests.test_remove_replacement_node",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_graph.py:GraphTests",
      "target": "tests/migrations/test_graph.py:GraphTests.test_infinite_loop",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_graph.py:GraphTests",
      "target": "tests/migrations/test_graph.py:GraphTests.test_stringify",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_graph.py:NodeTests",
      "target": "tests/migrations/test_graph.py:NodeTests.test_node_repr",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_graph.py:NodeTests",
      "target": "tests/migrations/test_graph.py:NodeTests.test_dummynode_repr",
      "type": "contains"
    },
    {
      "source": "tests/migrations/routers.py",
      "target": "tests/migrations/routers.py:EmptyRouter",
      "type": "contains"
    },
    {
      "source": "tests/migrations/routers.py",
      "target": "tests/migrations/routers.py:TestRouter",
      "type": "contains"
    },
    {
      "source": "tests/migrations/routers.py:TestRouter",
      "target": "tests/migrations/routers.py:TestRouter.allow_migrate",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps",
      "target": "tests/migrations/migrations_test_apps/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps",
      "target": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps",
      "target": "tests/migrations/migrations_test_apps/lookuperror_a",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps",
      "target": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps",
      "target": "tests/migrations/migrations_test_apps/migrated_unapplied_app",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps",
      "target": "tests/migrations/migrations_test_apps/unmigrated_app_syncdb",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps",
      "target": "tests/migrations/migrations_test_apps/without_init_file",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps",
      "target": "tests/migrations/migrations_test_apps/alter_fk",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps",
      "target": "tests/migrations/migrations_test_apps/unmigrated_app",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps",
      "target": "tests/migrations/migrations_test_apps/mutate_state_b",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps",
      "target": "tests/migrations/migrations_test_apps/unmigrated_app_simple",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps",
      "target": "tests/migrations/migrations_test_apps/lookuperror_c",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps",
      "target": "tests/migrations/migrations_test_apps/lookuperror_b",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps",
      "target": "tests/migrations/migrations_test_apps/normal",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps",
      "target": "tests/migrations/migrations_test_apps/migrated_app",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps",
      "target": "tests/migrations/migrations_test_apps/with_package_model",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps",
      "target": "tests/migrations/migrations_test_apps/mutate_state_a",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict",
      "target": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/models.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict",
      "target": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict",
      "target": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations",
      "target": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/0002_second.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations",
      "target": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/0002_conflicting_second.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations",
      "target": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations",
      "target": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/0002_second.py",
      "target": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/0002_second.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/0002_conflicting_second.py",
      "target": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/0002_conflicting_second.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/0001_initial.py",
      "target": "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_a",
      "target": "tests/migrations/migrations_test_apps/lookuperror_a/models.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_a",
      "target": "tests/migrations/migrations_test_apps/lookuperror_a/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_a",
      "target": "tests/migrations/migrations_test_apps/lookuperror_a/migrations",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_a/models.py",
      "target": "tests/migrations/migrations_test_apps/lookuperror_a/models.py:A1",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_a/models.py",
      "target": "tests/migrations/migrations_test_apps/lookuperror_a/models.py:A2",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_a/models.py",
      "target": "tests/migrations/migrations_test_apps/lookuperror_a/models.py:A3",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_a/models.py",
      "target": "tests/migrations/migrations_test_apps/lookuperror_a/models.py:A4",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_a/migrations",
      "target": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0002_a2.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_a/migrations",
      "target": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_a/migrations",
      "target": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0003_a3.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_a/migrations",
      "target": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_a/migrations",
      "target": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0004_a4.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0002_a2.py",
      "target": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0002_a2.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0003_a3.py",
      "target": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0003_a3.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0001_initial.py",
      "target": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0004_a4.py",
      "target": "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0004_a4.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies",
      "target": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies",
      "target": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations",
      "target": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/0002_second.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations",
      "target": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/0002_conflicting_second.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations",
      "target": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations",
      "target": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/0002_second.py",
      "target": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/0002_second.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/0002_conflicting_second.py",
      "target": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/0002_conflicting_second.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/0001_initial.py",
      "target": "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/migrated_unapplied_app",
      "target": "tests/migrations/migrations_test_apps/migrated_unapplied_app/models.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/migrated_unapplied_app",
      "target": "tests/migrations/migrations_test_apps/migrated_unapplied_app/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/migrated_unapplied_app",
      "target": "tests/migrations/migrations_test_apps/migrated_unapplied_app/migrations",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/migrated_unapplied_app/models.py",
      "target": "tests/migrations/migrations_test_apps/migrated_unapplied_app/models.py:OtherAuthor",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/migrated_unapplied_app/models.py:OtherAuthor",
      "target": "tests/migrations/migrations_test_apps/migrated_unapplied_app/models.py:OtherAuthor.Meta",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/migrated_unapplied_app/migrations",
      "target": "tests/migrations/migrations_test_apps/migrated_unapplied_app/migrations/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/migrated_unapplied_app/migrations",
      "target": "tests/migrations/migrations_test_apps/migrated_unapplied_app/migrations/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/migrated_unapplied_app/migrations/0001_initial.py",
      "target": "tests/migrations/migrations_test_apps/migrated_unapplied_app/migrations/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/unmigrated_app_syncdb",
      "target": "tests/migrations/migrations_test_apps/unmigrated_app_syncdb/models.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/unmigrated_app_syncdb",
      "target": "tests/migrations/migrations_test_apps/unmigrated_app_syncdb/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/unmigrated_app_syncdb/models.py",
      "target": "tests/migrations/migrations_test_apps/unmigrated_app_syncdb/models.py:Classroom",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/unmigrated_app_syncdb/models.py",
      "target": "tests/migrations/migrations_test_apps/unmigrated_app_syncdb/models.py:Lesson",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/without_init_file",
      "target": "tests/migrations/migrations_test_apps/without_init_file/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/alter_fk",
      "target": "tests/migrations/migrations_test_apps/alter_fk/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/alter_fk",
      "target": "tests/migrations/migrations_test_apps/alter_fk/author_app",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/alter_fk",
      "target": "tests/migrations/migrations_test_apps/alter_fk/book_app",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/alter_fk/author_app",
      "target": "tests/migrations/migrations_test_apps/alter_fk/author_app/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/alter_fk/author_app",
      "target": "tests/migrations/migrations_test_apps/alter_fk/author_app/migrations",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/alter_fk/author_app/migrations",
      "target": "tests/migrations/migrations_test_apps/alter_fk/author_app/migrations/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/alter_fk/author_app/migrations",
      "target": "tests/migrations/migrations_test_apps/alter_fk/author_app/migrations/0002_alter_id.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/alter_fk/author_app/migrations",
      "target": "tests/migrations/migrations_test_apps/alter_fk/author_app/migrations/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/alter_fk/author_app/migrations/0002_alter_id.py",
      "target": "tests/migrations/migrations_test_apps/alter_fk/author_app/migrations/0002_alter_id.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/alter_fk/author_app/migrations/0001_initial.py",
      "target": "tests/migrations/migrations_test_apps/alter_fk/author_app/migrations/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/alter_fk/book_app",
      "target": "tests/migrations/migrations_test_apps/alter_fk/book_app/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/alter_fk/book_app",
      "target": "tests/migrations/migrations_test_apps/alter_fk/book_app/migrations",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/alter_fk/book_app/migrations",
      "target": "tests/migrations/migrations_test_apps/alter_fk/book_app/migrations/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/alter_fk/book_app/migrations",
      "target": "tests/migrations/migrations_test_apps/alter_fk/book_app/migrations/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/alter_fk/book_app/migrations/0001_initial.py",
      "target": "tests/migrations/migrations_test_apps/alter_fk/book_app/migrations/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/unmigrated_app",
      "target": "tests/migrations/migrations_test_apps/unmigrated_app/models.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/unmigrated_app",
      "target": "tests/migrations/migrations_test_apps/unmigrated_app/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/unmigrated_app/models.py",
      "target": "tests/migrations/migrations_test_apps/unmigrated_app/models.py:SillyModel",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/mutate_state_b",
      "target": "tests/migrations/migrations_test_apps/mutate_state_b/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/mutate_state_b",
      "target": "tests/migrations/migrations_test_apps/mutate_state_b/migrations",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/mutate_state_b/migrations",
      "target": "tests/migrations/migrations_test_apps/mutate_state_b/migrations/0002_add_field.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/mutate_state_b/migrations",
      "target": "tests/migrations/migrations_test_apps/mutate_state_b/migrations/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/mutate_state_b/migrations",
      "target": "tests/migrations/migrations_test_apps/mutate_state_b/migrations/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/mutate_state_b/migrations/0002_add_field.py",
      "target": "tests/migrations/migrations_test_apps/mutate_state_b/migrations/0002_add_field.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/mutate_state_b/migrations/0001_initial.py",
      "target": "tests/migrations/migrations_test_apps/mutate_state_b/migrations/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/unmigrated_app_simple",
      "target": "tests/migrations/migrations_test_apps/unmigrated_app_simple/models.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/unmigrated_app_simple",
      "target": "tests/migrations/migrations_test_apps/unmigrated_app_simple/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/unmigrated_app_simple/models.py",
      "target": "tests/migrations/migrations_test_apps/unmigrated_app_simple/models.py:UnmigratedModel",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_c",
      "target": "tests/migrations/migrations_test_apps/lookuperror_c/models.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_c",
      "target": "tests/migrations/migrations_test_apps/lookuperror_c/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_c",
      "target": "tests/migrations/migrations_test_apps/lookuperror_c/migrations",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_c/models.py",
      "target": "tests/migrations/migrations_test_apps/lookuperror_c/models.py:C1",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_c/models.py",
      "target": "tests/migrations/migrations_test_apps/lookuperror_c/models.py:C2",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_c/models.py",
      "target": "tests/migrations/migrations_test_apps/lookuperror_c/models.py:C3",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_c/migrations",
      "target": "tests/migrations/migrations_test_apps/lookuperror_c/migrations/0002_c2.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_c/migrations",
      "target": "tests/migrations/migrations_test_apps/lookuperror_c/migrations/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_c/migrations",
      "target": "tests/migrations/migrations_test_apps/lookuperror_c/migrations/0003_c3.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_c/migrations",
      "target": "tests/migrations/migrations_test_apps/lookuperror_c/migrations/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_c/migrations/0002_c2.py",
      "target": "tests/migrations/migrations_test_apps/lookuperror_c/migrations/0002_c2.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_c/migrations/0003_c3.py",
      "target": "tests/migrations/migrations_test_apps/lookuperror_c/migrations/0003_c3.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_c/migrations/0001_initial.py",
      "target": "tests/migrations/migrations_test_apps/lookuperror_c/migrations/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_b",
      "target": "tests/migrations/migrations_test_apps/lookuperror_b/models.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_b",
      "target": "tests/migrations/migrations_test_apps/lookuperror_b/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_b",
      "target": "tests/migrations/migrations_test_apps/lookuperror_b/migrations",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_b/models.py",
      "target": "tests/migrations/migrations_test_apps/lookuperror_b/models.py:B1",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_b/models.py",
      "target": "tests/migrations/migrations_test_apps/lookuperror_b/models.py:B2",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_b/models.py",
      "target": "tests/migrations/migrations_test_apps/lookuperror_b/models.py:B3",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_b/migrations",
      "target": "tests/migrations/migrations_test_apps/lookuperror_b/migrations/0002_b2.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_b/migrations",
      "target": "tests/migrations/migrations_test_apps/lookuperror_b/migrations/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_b/migrations",
      "target": "tests/migrations/migrations_test_apps/lookuperror_b/migrations/0003_b3.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_b/migrations",
      "target": "tests/migrations/migrations_test_apps/lookuperror_b/migrations/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_b/migrations/0002_b2.py",
      "target": "tests/migrations/migrations_test_apps/lookuperror_b/migrations/0002_b2.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_b/migrations/0003_b3.py",
      "target": "tests/migrations/migrations_test_apps/lookuperror_b/migrations/0003_b3.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/lookuperror_b/migrations/0001_initial.py",
      "target": "tests/migrations/migrations_test_apps/lookuperror_b/migrations/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/normal",
      "target": "tests/migrations/migrations_test_apps/normal/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/migrated_app",
      "target": "tests/migrations/migrations_test_apps/migrated_app/models.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/migrated_app",
      "target": "tests/migrations/migrations_test_apps/migrated_app/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/migrated_app",
      "target": "tests/migrations/migrations_test_apps/migrated_app/migrations",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/migrated_app/migrations",
      "target": "tests/migrations/migrations_test_apps/migrated_app/migrations/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/migrated_app/migrations",
      "target": "tests/migrations/migrations_test_apps/migrated_app/migrations/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/migrated_app/migrations/0001_initial.py",
      "target": "tests/migrations/migrations_test_apps/migrated_app/migrations/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/with_package_model",
      "target": "tests/migrations/migrations_test_apps/with_package_model/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/with_package_model",
      "target": "tests/migrations/migrations_test_apps/with_package_model/models",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/with_package_model/models",
      "target": "tests/migrations/migrations_test_apps/with_package_model/models/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/mutate_state_a",
      "target": "tests/migrations/migrations_test_apps/mutate_state_a/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/mutate_state_a",
      "target": "tests/migrations/migrations_test_apps/mutate_state_a/migrations",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/mutate_state_a/migrations",
      "target": "tests/migrations/migrations_test_apps/mutate_state_a/migrations/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/mutate_state_a/migrations",
      "target": "tests/migrations/migrations_test_apps/mutate_state_a/migrations/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/migrations_test_apps/mutate_state_a/migrations/0001_initial.py",
      "target": "tests/migrations/migrations_test_apps/mutate_state_a/migrations/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/related_models_app",
      "target": "tests/migrations/related_models_app/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_unmigdep",
      "target": "tests/migrations/test_migrations_unmigdep/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_unmigdep",
      "target": "tests/migrations/test_migrations_unmigdep/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_unmigdep/0001_initial.py",
      "target": "tests/migrations/test_migrations_unmigdep/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_fake_split_initial",
      "target": "tests/migrations/test_migrations_fake_split_initial/0002_second.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_fake_split_initial",
      "target": "tests/migrations/test_migrations_fake_split_initial/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_fake_split_initial",
      "target": "tests/migrations/test_migrations_fake_split_initial/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_fake_split_initial/0002_second.py",
      "target": "tests/migrations/test_migrations_fake_split_initial/0002_second.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_fake_split_initial/0001_initial.py",
      "target": "tests/migrations/test_migrations_fake_split_initial/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_atomic_operation",
      "target": "tests/migrations/test_migrations_atomic_operation/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_atomic_operation",
      "target": "tests/migrations/test_migrations_atomic_operation/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_atomic_operation/0001_initial.py",
      "target": "tests/migrations/test_migrations_atomic_operation/0001_initial.py:raise_error",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_atomic_operation/0001_initial.py",
      "target": "tests/migrations/test_migrations_atomic_operation/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations",
      "target": "tests/migrations/test_migrations/0002_second.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations",
      "target": "tests/migrations/test_migrations/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations",
      "target": "tests/migrations/test_migrations/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations/0002_second.py",
      "target": "tests/migrations/test_migrations/0002_second.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations/0001_initial.py",
      "target": "tests/migrations/test_migrations/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_initial_false",
      "target": "tests/migrations/test_migrations_initial_false/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_initial_false",
      "target": "tests/migrations/test_migrations_initial_false/0001_not_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_initial_false/0001_not_initial.py",
      "target": "tests/migrations/test_migrations_initial_false/0001_not_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_conflict",
      "target": "tests/migrations/test_migrations_conflict/0002_second.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_conflict",
      "target": "tests/migrations/test_migrations_conflict/0002_conflicting_second.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_conflict",
      "target": "tests/migrations/test_migrations_conflict/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_conflict",
      "target": "tests/migrations/test_migrations_conflict/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_conflict/0002_second.py",
      "target": "tests/migrations/test_migrations_conflict/0002_second.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_conflict/0002_conflicting_second.py",
      "target": "tests/migrations/test_migrations_conflict/0002_conflicting_second.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_conflict/0001_initial.py",
      "target": "tests/migrations/test_migrations_conflict/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_run_before",
      "target": "tests/migrations/test_migrations_run_before/0002_second.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_run_before",
      "target": "tests/migrations/test_migrations_run_before/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_run_before",
      "target": "tests/migrations/test_migrations_run_before/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_run_before",
      "target": "tests/migrations/test_migrations_run_before/0003_third.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_run_before/0002_second.py",
      "target": "tests/migrations/test_migrations_run_before/0002_second.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_run_before/0001_initial.py",
      "target": "tests/migrations/test_migrations_run_before/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_run_before/0003_third.py",
      "target": "tests/migrations/test_migrations_run_before/0003_third.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/deprecated_field_migrations",
      "target": "tests/migrations/deprecated_field_migrations/0002_remove_ipaddressfield_ip.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/deprecated_field_migrations",
      "target": "tests/migrations/deprecated_field_migrations/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/deprecated_field_migrations",
      "target": "tests/migrations/deprecated_field_migrations/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/deprecated_field_migrations/0002_remove_ipaddressfield_ip.py",
      "target": "tests/migrations/deprecated_field_migrations/0002_remove_ipaddressfield_ip.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/deprecated_field_migrations/0001_initial.py",
      "target": "tests/migrations/deprecated_field_migrations/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_add_many_to_many_field_initial",
      "target": "tests/migrations/test_add_many_to_many_field_initial/0002_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_add_many_to_many_field_initial",
      "target": "tests/migrations/test_add_many_to_many_field_initial/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_add_many_to_many_field_initial",
      "target": "tests/migrations/test_add_many_to_many_field_initial/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_add_many_to_many_field_initial/0002_initial.py",
      "target": "tests/migrations/test_add_many_to_many_field_initial/0002_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_add_many_to_many_field_initial/0001_initial.py",
      "target": "tests/migrations/test_add_many_to_many_field_initial/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_bad_pyc",
      "target": "tests/migrations/test_migrations_bad_pyc/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex",
      "target": "tests/migrations/test_migrations_squashed_complex/4_auto.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex",
      "target": "tests/migrations/test_migrations_squashed_complex/3_squashed_5.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex",
      "target": "tests/migrations/test_migrations_squashed_complex/5_auto.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex",
      "target": "tests/migrations/test_migrations_squashed_complex/7_auto.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex",
      "target": "tests/migrations/test_migrations_squashed_complex/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex",
      "target": "tests/migrations/test_migrations_squashed_complex/6_auto.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex",
      "target": "tests/migrations/test_migrations_squashed_complex/3_auto.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex",
      "target": "tests/migrations/test_migrations_squashed_complex/2_auto.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex",
      "target": "tests/migrations/test_migrations_squashed_complex/1_auto.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex/4_auto.py",
      "target": "tests/migrations/test_migrations_squashed_complex/4_auto.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex/3_squashed_5.py",
      "target": "tests/migrations/test_migrations_squashed_complex/3_squashed_5.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex/5_auto.py",
      "target": "tests/migrations/test_migrations_squashed_complex/5_auto.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex/7_auto.py",
      "target": "tests/migrations/test_migrations_squashed_complex/7_auto.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex/6_auto.py",
      "target": "tests/migrations/test_migrations_squashed_complex/6_auto.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex/3_auto.py",
      "target": "tests/migrations/test_migrations_squashed_complex/3_auto.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex/2_auto.py",
      "target": "tests/migrations/test_migrations_squashed_complex/2_auto.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex/1_auto.py",
      "target": "tests/migrations/test_migrations_squashed_complex/1_auto.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_custom_user",
      "target": "tests/migrations/test_migrations_custom_user/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_custom_user",
      "target": "tests/migrations/test_migrations_custom_user/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_custom_user/0001_initial.py",
      "target": "tests/migrations/test_migrations_custom_user/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_order",
      "target": "tests/migrations/test_migrations_order/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_order",
      "target": "tests/migrations/test_migrations_order/0001.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_order/0001.py",
      "target": "tests/migrations/test_migrations_order/0001.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed",
      "target": "tests/migrations/test_migrations_squashed/0002_second.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed",
      "target": "tests/migrations/test_migrations_squashed/0001_squashed_0002.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed",
      "target": "tests/migrations/test_migrations_squashed/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed",
      "target": "tests/migrations/test_migrations_squashed/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed/0002_second.py",
      "target": "tests/migrations/test_migrations_squashed/0002_second.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed/0001_squashed_0002.py",
      "target": "tests/migrations/test_migrations_squashed/0001_squashed_0002.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed/0001_initial.py",
      "target": "tests/migrations/test_migrations_squashed/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_plan",
      "target": "tests/migrations/test_migrations_plan/0002_second.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_plan",
      "target": "tests/migrations/test_migrations_plan/0004_fourth.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_plan",
      "target": "tests/migrations/test_migrations_plan/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_plan",
      "target": "tests/migrations/test_migrations_plan/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_plan",
      "target": "tests/migrations/test_migrations_plan/0003_third.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_plan/0002_second.py",
      "target": "tests/migrations/test_migrations_plan/0002_second.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_plan/0004_fourth.py",
      "target": "tests/migrations/test_migrations_plan/0004_fourth.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_plan/0001_initial.py",
      "target": "tests/migrations/test_migrations_plan/0001_initial.py:grow_tail",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_plan/0001_initial.py",
      "target": "tests/migrations/test_migrations_plan/0001_initial.py:shrink_tail",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_plan/0001_initial.py",
      "target": "tests/migrations/test_migrations_plan/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_plan/0003_third.py",
      "target": "tests/migrations/test_migrations_plan/0003_third.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_non_atomic",
      "target": "tests/migrations/test_migrations_non_atomic/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_non_atomic",
      "target": "tests/migrations/test_migrations_non_atomic/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_non_atomic/0001_initial.py",
      "target": "tests/migrations/test_migrations_non_atomic/0001_initial.py:raise_error",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_non_atomic/0001_initial.py",
      "target": "tests/migrations/test_migrations_non_atomic/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_empty",
      "target": "tests/migrations/test_migrations_empty/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_auto_now_add",
      "target": "tests/migrations/test_auto_now_add/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_auto_now_add",
      "target": "tests/migrations/test_auto_now_add/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_auto_now_add/0001_initial.py",
      "target": "tests/migrations/test_auto_now_add/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_clashing_prefix",
      "target": "tests/migrations/test_migrations_clashing_prefix/ab.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_clashing_prefix",
      "target": "tests/migrations/test_migrations_clashing_prefix/a.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_clashing_prefix",
      "target": "tests/migrations/test_migrations_clashing_prefix/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_clashing_prefix/ab.py",
      "target": "tests/migrations/test_migrations_clashing_prefix/ab.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_clashing_prefix/a.py",
      "target": "tests/migrations/test_migrations_clashing_prefix/a.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_erroneous",
      "target": "tests/migrations/test_migrations_squashed_erroneous/3_squashed_5.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_erroneous",
      "target": "tests/migrations/test_migrations_squashed_erroneous/7_auto.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_erroneous",
      "target": "tests/migrations/test_migrations_squashed_erroneous/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_erroneous",
      "target": "tests/migrations/test_migrations_squashed_erroneous/6_auto.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_erroneous",
      "target": "tests/migrations/test_migrations_squashed_erroneous/2_auto.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_erroneous",
      "target": "tests/migrations/test_migrations_squashed_erroneous/1_auto.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_erroneous/3_squashed_5.py",
      "target": "tests/migrations/test_migrations_squashed_erroneous/3_squashed_5.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_erroneous/7_auto.py",
      "target": "tests/migrations/test_migrations_squashed_erroneous/7_auto.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_erroneous/6_auto.py",
      "target": "tests/migrations/test_migrations_squashed_erroneous/6_auto.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_erroneous/2_auto.py",
      "target": "tests/migrations/test_migrations_squashed_erroneous/2_auto.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_erroneous/1_auto.py",
      "target": "tests/migrations/test_migrations_squashed_erroneous/1_auto.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_no_ancestor",
      "target": "tests/migrations/test_migrations_no_ancestor/0002_second.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_no_ancestor",
      "target": "tests/migrations/test_migrations_no_ancestor/0002_conflicting_second.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_no_ancestor",
      "target": "tests/migrations/test_migrations_no_ancestor/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_no_ancestor",
      "target": "tests/migrations/test_migrations_no_ancestor/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_no_ancestor/0002_second.py",
      "target": "tests/migrations/test_migrations_no_ancestor/0002_second.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_no_ancestor/0002_conflicting_second.py",
      "target": "tests/migrations/test_migrations_no_ancestor/0002_conflicting_second.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_no_ancestor/0001_initial.py",
      "target": "tests/migrations/test_migrations_no_ancestor/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_private",
      "target": "tests/migrations/test_migrations_private/~util.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_private",
      "target": "tests/migrations/test_migrations_private/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_private",
      "target": "tests/migrations/test_migrations_private/.util.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_private",
      "target": "tests/migrations/test_migrations_private/_util.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_private",
      "target": "tests/migrations/test_migrations_private/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_private/0001_initial.py",
      "target": "tests/migrations/test_migrations_private/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_first",
      "target": "tests/migrations/test_migrations_first/second.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_first",
      "target": "tests/migrations/test_migrations_first/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_first",
      "target": "tests/migrations/test_migrations_first/thefirst.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_first/second.py",
      "target": "tests/migrations/test_migrations_first/second.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_first/thefirst.py",
      "target": "tests/migrations/test_migrations_first/thefirst.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_extra",
      "target": "tests/migrations/test_migrations_squashed_extra/0002_second.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_extra",
      "target": "tests/migrations/test_migrations_squashed_extra/0001_squashed_0002.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_extra",
      "target": "tests/migrations/test_migrations_squashed_extra/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_extra",
      "target": "tests/migrations/test_migrations_squashed_extra/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_extra",
      "target": "tests/migrations/test_migrations_squashed_extra/0003_third.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_extra/0002_second.py",
      "target": "tests/migrations/test_migrations_squashed_extra/0002_second.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_extra/0001_squashed_0002.py",
      "target": "tests/migrations/test_migrations_squashed_extra/0001_squashed_0002.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_extra/0001_initial.py",
      "target": "tests/migrations/test_migrations_squashed_extra/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_extra/0003_third.py",
      "target": "tests/migrations/test_migrations_squashed_extra/0003_third.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_ref_squashed",
      "target": "tests/migrations/test_migrations_squashed_ref_squashed/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_ref_squashed",
      "target": "tests/migrations/test_migrations_squashed_ref_squashed/app2",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_ref_squashed",
      "target": "tests/migrations/test_migrations_squashed_ref_squashed/app1",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_ref_squashed/app2",
      "target": "tests/migrations/test_migrations_squashed_ref_squashed/app2/1_squashed_2.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_ref_squashed/app2",
      "target": "tests/migrations/test_migrations_squashed_ref_squashed/app2/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_ref_squashed/app2",
      "target": "tests/migrations/test_migrations_squashed_ref_squashed/app2/2_auto.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_ref_squashed/app2",
      "target": "tests/migrations/test_migrations_squashed_ref_squashed/app2/1_auto.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_ref_squashed/app2/1_squashed_2.py",
      "target": "tests/migrations/test_migrations_squashed_ref_squashed/app2/1_squashed_2.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_ref_squashed/app2/2_auto.py",
      "target": "tests/migrations/test_migrations_squashed_ref_squashed/app2/2_auto.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_ref_squashed/app2/1_auto.py",
      "target": "tests/migrations/test_migrations_squashed_ref_squashed/app2/1_auto.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_ref_squashed/app1",
      "target": "tests/migrations/test_migrations_squashed_ref_squashed/app1/4_auto.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_ref_squashed/app1",
      "target": "tests/migrations/test_migrations_squashed_ref_squashed/app1/2_squashed_3.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_ref_squashed/app1",
      "target": "tests/migrations/test_migrations_squashed_ref_squashed/app1/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_ref_squashed/app1",
      "target": "tests/migrations/test_migrations_squashed_ref_squashed/app1/3_auto.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_ref_squashed/app1",
      "target": "tests/migrations/test_migrations_squashed_ref_squashed/app1/2_auto.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_ref_squashed/app1",
      "target": "tests/migrations/test_migrations_squashed_ref_squashed/app1/1_auto.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_ref_squashed/app1/4_auto.py",
      "target": "tests/migrations/test_migrations_squashed_ref_squashed/app1/4_auto.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_ref_squashed/app1/2_squashed_3.py",
      "target": "tests/migrations/test_migrations_squashed_ref_squashed/app1/2_squashed_3.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_ref_squashed/app1/3_auto.py",
      "target": "tests/migrations/test_migrations_squashed_ref_squashed/app1/3_auto.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_ref_squashed/app1/2_auto.py",
      "target": "tests/migrations/test_migrations_squashed_ref_squashed/app1/2_auto.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_ref_squashed/app1/1_auto.py",
      "target": "tests/migrations/test_migrations_squashed_ref_squashed/app1/1_auto.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex_multi_apps",
      "target": "tests/migrations/test_migrations_squashed_complex_multi_apps/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex_multi_apps",
      "target": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex_multi_apps",
      "target": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2",
      "target": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2/1_squashed_2.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2",
      "target": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2",
      "target": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2/2_auto.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2",
      "target": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2/1_auto.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2/1_squashed_2.py",
      "target": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2/1_squashed_2.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2/2_auto.py",
      "target": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2/2_auto.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2/1_auto.py",
      "target": "tests/migrations/test_migrations_squashed_complex_multi_apps/app2/1_auto.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1",
      "target": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/4_auto.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1",
      "target": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/2_squashed_3.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1",
      "target": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1",
      "target": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/3_auto.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1",
      "target": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/2_auto.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1",
      "target": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/1_auto.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/4_auto.py",
      "target": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/4_auto.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/2_squashed_3.py",
      "target": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/2_squashed_3.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/3_auto.py",
      "target": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/3_auto.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/2_auto.py",
      "target": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/2_auto.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/1_auto.py",
      "target": "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/1_auto.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/faulty_migrations",
      "target": "tests/migrations/faulty_migrations/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/faulty_migrations",
      "target": "tests/migrations/faulty_migrations/file.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/faulty_migrations",
      "target": "tests/migrations/faulty_migrations/namespace",
      "type": "contains"
    },
    {
      "source": "tests/migrations/faulty_migrations/namespace",
      "target": "tests/migrations/faulty_migrations/namespace/foo",
      "type": "contains"
    },
    {
      "source": "tests/migrations/faulty_migrations/namespace/foo",
      "target": "tests/migrations/faulty_migrations/namespace/foo/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_no_changes",
      "target": "tests/migrations/test_migrations_no_changes/0002_second.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_no_changes",
      "target": "tests/migrations/test_migrations_no_changes/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_no_changes",
      "target": "tests/migrations/test_migrations_no_changes/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_no_changes",
      "target": "tests/migrations/test_migrations_no_changes/0003_third.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_no_changes/0002_second.py",
      "target": "tests/migrations/test_migrations_no_changes/0002_second.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_no_changes/0001_initial.py",
      "target": "tests/migrations/test_migrations_no_changes/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_no_changes/0003_third.py",
      "target": "tests/migrations/test_migrations_no_changes/0003_third.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_backwards_deps_1",
      "target": "tests/migrations/test_migrations_backwards_deps_1/0002_second.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_backwards_deps_1",
      "target": "tests/migrations/test_migrations_backwards_deps_1/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_backwards_deps_1/0002_second.py",
      "target": "tests/migrations/test_migrations_backwards_deps_1/0002_second.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_backwards_deps_1/0001_initial.py",
      "target": "tests/migrations/test_migrations_backwards_deps_1/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_no_default",
      "target": "tests/migrations/test_migrations_no_default/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_no_default",
      "target": "tests/migrations/test_migrations_no_default/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrations/test_migrations_no_default/0001_initial.py",
      "target": "tests/migrations/test_migrations_no_default/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/migrate_signals",
      "target": "tests/migrate_signals/models.py",
      "type": "contains"
    },
    {
      "source": "tests/migrate_signals",
      "target": "tests/migrate_signals/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrate_signals",
      "target": "tests/migrate_signals/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/migrate_signals",
      "target": "tests/migrate_signals/custom_migrations",
      "type": "contains"
    },
    {
      "source": "tests/migrate_signals/tests.py",
      "target": "tests/migrate_signals/tests.py:Receiver",
      "type": "contains"
    },
    {
      "source": "tests/migrate_signals/tests.py",
      "target": "tests/migrate_signals/tests.py:OneTimeReceiver",
      "type": "contains"
    },
    {
      "source": "tests/migrate_signals/tests.py",
      "target": "tests/migrate_signals/tests.py:MigrateSignalTests",
      "type": "contains"
    },
    {
      "source": "tests/migrate_signals/tests.py:Receiver",
      "target": "tests/migrate_signals/tests.py:Receiver.__call__",
      "type": "contains"
    },
    {
      "source": "tests/migrate_signals/tests.py:OneTimeReceiver",
      "target": "tests/migrate_signals/tests.py:OneTimeReceiver.__call__",
      "type": "contains"
    },
    {
      "source": "tests/migrate_signals/tests.py:MigrateSignalTests",
      "target": "tests/migrate_signals/tests.py:MigrateSignalTests.test_call_time",
      "type": "contains"
    },
    {
      "source": "tests/migrate_signals/tests.py:MigrateSignalTests",
      "target": "tests/migrate_signals/tests.py:MigrateSignalTests.test_args",
      "type": "contains"
    },
    {
      "source": "tests/migrate_signals/tests.py:MigrateSignalTests",
      "target": "tests/migrate_signals/tests.py:MigrateSignalTests.test_migrations_only",
      "type": "contains"
    },
    {
      "source": "tests/migrate_signals/tests.py:MigrateSignalTests.test_args",
      "target": "tests/migrate_signals/tests.py:Receiver",
      "type": "invokes"
    },
    {
      "source": "tests/migrate_signals/tests.py:MigrateSignalTests.test_migrations_only",
      "target": "tests/migrate_signals/tests.py:Receiver",
      "type": "invokes"
    },
    {
      "source": "tests/migrate_signals/custom_migrations",
      "target": "tests/migrate_signals/custom_migrations/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/migrate_signals/custom_migrations",
      "target": "tests/migrate_signals/custom_migrations/0001_initial.py",
      "type": "contains"
    },
    {
      "source": "tests/migrate_signals/custom_migrations/0001_initial.py",
      "target": "tests/migrate_signals/custom_migrations/0001_initial.py:Migration",
      "type": "contains"
    },
    {
      "source": "tests/m2m_multiple",
      "target": "tests/m2m_multiple/models.py",
      "type": "contains"
    },
    {
      "source": "tests/m2m_multiple",
      "target": "tests/m2m_multiple/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/m2m_multiple",
      "target": "tests/m2m_multiple/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/m2m_multiple/models.py",
      "target": "tests/m2m_multiple/models.py:Category",
      "type": "contains"
    },
    {
      "source": "tests/m2m_multiple/models.py",
      "target": "tests/m2m_multiple/models.py:Article",
      "type": "contains"
    },
    {
      "source": "tests/m2m_multiple/models.py:Category",
      "target": "tests/m2m_multiple/models.py:Category.Meta",
      "type": "contains"
    },
    {
      "source": "tests/m2m_multiple/models.py:Category",
      "target": "tests/m2m_multiple/models.py:Category.__str__",
      "type": "contains"
    },
    {
      "source": "tests/m2m_multiple/models.py:Article",
      "target": "tests/m2m_multiple/models.py:Article.Meta",
      "type": "contains"
    },
    {
      "source": "tests/m2m_multiple/models.py:Article",
      "target": "tests/m2m_multiple/models.py:Article.__str__",
      "type": "contains"
    },
    {
      "source": "tests/m2m_multiple/tests.py",
      "target": "tests/m2m_multiple/tests.py:M2MMultipleTests",
      "type": "contains"
    },
    {
      "source": "tests/m2m_multiple/tests.py",
      "target": "tests/m2m_multiple/models.py:Article",
      "type": "imports"
    },
    {
      "source": "tests/m2m_multiple/tests.py",
      "target": "tests/m2m_multiple/models.py:Category",
      "type": "imports"
    },
    {
      "source": "tests/m2m_multiple/tests.py:M2MMultipleTests",
      "target": "tests/m2m_multiple/tests.py:M2MMultipleTests.test_multiple",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create",
      "target": "tests/bulk_create/models.py",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create",
      "target": "tests/bulk_create/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create",
      "target": "tests/bulk_create/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/models.py",
      "target": "tests/bulk_create/models.py:Country",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/models.py",
      "target": "tests/bulk_create/models.py:ProxyCountry",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/models.py",
      "target": "tests/bulk_create/models.py:ProxyProxyCountry",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/models.py",
      "target": "tests/bulk_create/models.py:ProxyMultiCountry",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/models.py",
      "target": "tests/bulk_create/models.py:ProxyMultiProxyCountry",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/models.py",
      "target": "tests/bulk_create/models.py:Place",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/models.py",
      "target": "tests/bulk_create/models.py:Restaurant",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/models.py",
      "target": "tests/bulk_create/models.py:Pizzeria",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/models.py",
      "target": "tests/bulk_create/models.py:State",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/models.py",
      "target": "tests/bulk_create/models.py:TwoFields",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/models.py",
      "target": "tests/bulk_create/models.py:NoFields",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/models.py",
      "target": "tests/bulk_create/models.py:NullableFields",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/models.py:ProxyCountry",
      "target": "tests/bulk_create/models.py:ProxyCountry.Meta",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/models.py:ProxyCountry",
      "target": "tests/bulk_create/models.py:Country",
      "type": "inherits"
    },
    {
      "source": "tests/bulk_create/models.py:ProxyProxyCountry",
      "target": "tests/bulk_create/models.py:ProxyProxyCountry.Meta",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/models.py:ProxyProxyCountry",
      "target": "tests/bulk_create/models.py:ProxyCountry",
      "type": "inherits"
    },
    {
      "source": "tests/bulk_create/models.py:ProxyMultiCountry",
      "target": "tests/bulk_create/models.py:ProxyCountry",
      "type": "inherits"
    },
    {
      "source": "tests/bulk_create/models.py:ProxyMultiProxyCountry",
      "target": "tests/bulk_create/models.py:ProxyMultiProxyCountry.Meta",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/models.py:ProxyMultiProxyCountry",
      "target": "tests/bulk_create/models.py:ProxyMultiCountry",
      "type": "inherits"
    },
    {
      "source": "tests/bulk_create/models.py:Place",
      "target": "tests/bulk_create/models.py:Place.Meta",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/models.py:Restaurant",
      "target": "tests/bulk_create/models.py:Place",
      "type": "inherits"
    },
    {
      "source": "tests/bulk_create/models.py:Pizzeria",
      "target": "tests/bulk_create/models.py:Restaurant",
      "type": "inherits"
    },
    {
      "source": "tests/bulk_create/tests.py",
      "target": "tests/bulk_create/tests.py:BulkCreateTests",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/tests.py",
      "target": "tests/bulk_create/models.py:Country",
      "type": "imports"
    },
    {
      "source": "tests/bulk_create/tests.py",
      "target": "tests/bulk_create/models.py:NoFields",
      "type": "imports"
    },
    {
      "source": "tests/bulk_create/tests.py",
      "target": "tests/bulk_create/models.py:NullableFields",
      "type": "imports"
    },
    {
      "source": "tests/bulk_create/tests.py",
      "target": "tests/bulk_create/models.py:Pizzeria",
      "type": "imports"
    },
    {
      "source": "tests/bulk_create/tests.py",
      "target": "tests/bulk_create/models.py:ProxyCountry",
      "type": "imports"
    },
    {
      "source": "tests/bulk_create/tests.py",
      "target": "tests/bulk_create/models.py:ProxyMultiCountry",
      "type": "imports"
    },
    {
      "source": "tests/bulk_create/tests.py",
      "target": "tests/bulk_create/models.py:ProxyMultiProxyCountry",
      "type": "imports"
    },
    {
      "source": "tests/bulk_create/tests.py",
      "target": "tests/bulk_create/models.py:ProxyProxyCountry",
      "type": "imports"
    },
    {
      "source": "tests/bulk_create/tests.py",
      "target": "tests/bulk_create/models.py:Restaurant",
      "type": "imports"
    },
    {
      "source": "tests/bulk_create/tests.py",
      "target": "tests/bulk_create/models.py:State",
      "type": "imports"
    },
    {
      "source": "tests/bulk_create/tests.py",
      "target": "tests/bulk_create/models.py:TwoFields",
      "type": "imports"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests",
      "target": "tests/bulk_create/tests.py:BulkCreateTests.setUp",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests",
      "target": "tests/bulk_create/tests.py:BulkCreateTests.test_simple",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests",
      "target": "tests/bulk_create/tests.py:BulkCreateTests.test_efficiency",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests",
      "target": "tests/bulk_create/tests.py:BulkCreateTests.test_long_non_ascii_text",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests",
      "target": "tests/bulk_create/tests.py:BulkCreateTests.test_multi_table_inheritance_unsupported",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests",
      "target": "tests/bulk_create/tests.py:BulkCreateTests.test_proxy_inheritance_supported",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests",
      "target": "tests/bulk_create/tests.py:BulkCreateTests.test_non_auto_increment_pk",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests",
      "target": "tests/bulk_create/tests.py:BulkCreateTests.test_non_auto_increment_pk_efficiency",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests",
      "target": "tests/bulk_create/tests.py:BulkCreateTests.test_zero_as_autoval",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests",
      "target": "tests/bulk_create/tests.py:BulkCreateTests.test_batch_same_vals",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests",
      "target": "tests/bulk_create/tests.py:BulkCreateTests.test_large_batch",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests",
      "target": "tests/bulk_create/tests.py:BulkCreateTests.test_large_single_field_batch",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests",
      "target": "tests/bulk_create/tests.py:BulkCreateTests.test_large_batch_efficiency",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests",
      "target": "tests/bulk_create/tests.py:BulkCreateTests.test_large_batch_mixed",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests",
      "target": "tests/bulk_create/tests.py:BulkCreateTests.test_large_batch_mixed_efficiency",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests",
      "target": "tests/bulk_create/tests.py:BulkCreateTests.test_explicit_batch_size",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests",
      "target": "tests/bulk_create/tests.py:BulkCreateTests.test_empty_model",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests",
      "target": "tests/bulk_create/tests.py:BulkCreateTests.test_explicit_batch_size_efficiency",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests",
      "target": "tests/bulk_create/tests.py:BulkCreateTests.test_bulk_insert_expressions",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests",
      "target": "tests/bulk_create/tests.py:BulkCreateTests.test_bulk_insert_nullable_fields",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests",
      "target": "tests/bulk_create/tests.py:BulkCreateTests.test_set_pk_and_insert_single_item",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests",
      "target": "tests/bulk_create/tests.py:BulkCreateTests.test_set_pk_and_query_efficiency",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests",
      "target": "tests/bulk_create/tests.py:BulkCreateTests.test_set_state",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests",
      "target": "tests/bulk_create/tests.py:BulkCreateTests.test_set_state_with_pk_specified",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests",
      "target": "tests/bulk_create/tests.py:BulkCreateTests.test_ignore_conflicts_value_error",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests",
      "target": "tests/bulk_create/tests.py:BulkCreateTests.test_ignore_conflicts_ignore",
      "type": "contains"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests.setUp",
      "target": "tests/bulk_create/models.py:Country",
      "type": "invokes"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests.test_long_non_ascii_text",
      "target": "tests/bulk_create/models.py:Country",
      "type": "invokes"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests.test_multi_table_inheritance_unsupported",
      "target": "tests/bulk_create/models.py:Pizzeria",
      "type": "invokes"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests.test_multi_table_inheritance_unsupported",
      "target": "tests/bulk_create/models.py:ProxyMultiCountry",
      "type": "invokes"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests.test_multi_table_inheritance_unsupported",
      "target": "tests/bulk_create/models.py:ProxyMultiProxyCountry",
      "type": "invokes"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests.test_proxy_inheritance_supported",
      "target": "tests/bulk_create/models.py:Country",
      "type": "invokes"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests.test_proxy_inheritance_supported",
      "target": "tests/bulk_create/models.py:ProxyCountry",
      "type": "invokes"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests.test_proxy_inheritance_supported",
      "target": "tests/bulk_create/models.py:ProxyProxyCountry",
      "type": "invokes"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests.test_non_auto_increment_pk",
      "target": "tests/bulk_create/models.py:State",
      "type": "invokes"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests.test_non_auto_increment_pk_efficiency",
      "target": "tests/bulk_create/models.py:State",
      "type": "invokes"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests.test_zero_as_autoval",
      "target": "tests/bulk_create/models.py:Country",
      "type": "invokes"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests.test_batch_same_vals",
      "target": "tests/bulk_create/models.py:Restaurant",
      "type": "invokes"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests.test_large_batch",
      "target": "tests/bulk_create/models.py:TwoFields",
      "type": "invokes"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests.test_large_single_field_batch",
      "target": "tests/bulk_create/models.py:Restaurant",
      "type": "invokes"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests.test_large_batch_efficiency",
      "target": "tests/bulk_create/models.py:TwoFields",
      "type": "invokes"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests.test_large_batch_mixed",
      "target": "tests/bulk_create/models.py:TwoFields",
      "type": "invokes"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests.test_large_batch_mixed_efficiency",
      "target": "tests/bulk_create/models.py:TwoFields",
      "type": "invokes"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests.test_explicit_batch_size",
      "target": "tests/bulk_create/models.py:TwoFields",
      "type": "invokes"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests.test_empty_model",
      "target": "tests/bulk_create/models.py:NoFields",
      "type": "invokes"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests.test_explicit_batch_size_efficiency",
      "target": "tests/bulk_create/models.py:TwoFields",
      "type": "invokes"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests.test_bulk_insert_expressions",
      "target": "tests/bulk_create/models.py:Restaurant",
      "type": "invokes"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests.test_bulk_insert_nullable_fields",
      "target": "tests/bulk_create/models.py:NullableFields",
      "type": "invokes"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests.test_set_state",
      "target": "tests/bulk_create/models.py:Country",
      "type": "invokes"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests.test_set_state_with_pk_specified",
      "target": "tests/bulk_create/models.py:State",
      "type": "invokes"
    },
    {
      "source": "tests/bulk_create/tests.py:BulkCreateTests.test_ignore_conflicts_ignore",
      "target": "tests/bulk_create/models.py:TwoFields",
      "type": "invokes"
    },
    {
      "source": "tests/filtered_relation",
      "target": "tests/filtered_relation/models.py",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation",
      "target": "tests/filtered_relation/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation",
      "target": "tests/filtered_relation/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/models.py",
      "target": "tests/filtered_relation/models.py:Author",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/models.py",
      "target": "tests/filtered_relation/models.py:Editor",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/models.py",
      "target": "tests/filtered_relation/models.py:Book",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/models.py",
      "target": "tests/filtered_relation/models.py:Borrower",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/models.py",
      "target": "tests/filtered_relation/models.py:Reservation",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/models.py",
      "target": "tests/filtered_relation/models.py:RentalSession",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/models.py:Author",
      "target": "tests/filtered_relation/models.py:Author.__str__",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/models.py:Editor",
      "target": "tests/filtered_relation/models.py:Editor.__str__",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/models.py:Book",
      "target": "tests/filtered_relation/models.py:Book.__str__",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/models.py:Borrower",
      "target": "tests/filtered_relation/models.py:Borrower.__str__",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/models.py:Reservation",
      "target": "tests/filtered_relation/models.py:Reservation.__str__",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/models.py:RentalSession",
      "target": "tests/filtered_relation/models.py:RentalSession.__str__",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py",
      "target": "tests/filtered_relation/tests.py:FilteredRelationAggregationTests",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py",
      "target": "tests/filtered_relation/models.py:Author",
      "type": "imports"
    },
    {
      "source": "tests/filtered_relation/tests.py",
      "target": "tests/filtered_relation/models.py:Book",
      "type": "imports"
    },
    {
      "source": "tests/filtered_relation/tests.py",
      "target": "tests/filtered_relation/models.py:Borrower",
      "type": "imports"
    },
    {
      "source": "tests/filtered_relation/tests.py",
      "target": "tests/filtered_relation/models.py:Editor",
      "type": "imports"
    },
    {
      "source": "tests/filtered_relation/tests.py",
      "target": "tests/filtered_relation/models.py:RentalSession",
      "type": "imports"
    },
    {
      "source": "tests/filtered_relation/tests.py",
      "target": "tests/filtered_relation/models.py:Reservation",
      "type": "imports"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_select_related",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_select_related_foreign_key",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_select_related_foreign_key_for_update_of",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_without_join",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_with_join",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_with_join_and_complex_condition",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_internal_queryset_alias_mapping",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_with_multiple_filter",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_multiple_times",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_exclude_relation_with_join",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_with_m2m",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_with_m2m_deep",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_with_m2m_multijoin",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_values_list",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_values",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_extra",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_union",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_intersection",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_difference",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_select_for_update",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_defer",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_only_not_supported",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_as_subquery",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_with_foreign_key_error",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_with_foreign_key_on_condition_error",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_with_empty_relation_name_error",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_with_condition_as_expression_error",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_with_prefetch_related",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationTests.test_with_generic_foreign_key",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationAggregationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationAggregationTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/filtered_relation/tests.py:FilteredRelationAggregationTests",
      "target": "tests/filtered_relation/tests.py:FilteredRelationAggregationTests.test_aggregate",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress",
      "target": "tests/m2m_through_regress/models.py",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress",
      "target": "tests/m2m_through_regress/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress",
      "target": "tests/m2m_through_regress/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress",
      "target": "tests/m2m_through_regress/test_multitable.py",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/models.py",
      "target": "tests/m2m_through_regress/models.py:Membership",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/models.py",
      "target": "tests/m2m_through_regress/models.py:UserMembership",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/models.py",
      "target": "tests/m2m_through_regress/models.py:Person",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/models.py",
      "target": "tests/m2m_through_regress/models.py:Group",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/models.py",
      "target": "tests/m2m_through_regress/models.py:Car",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/models.py",
      "target": "tests/m2m_through_regress/models.py:Driver",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/models.py",
      "target": "tests/m2m_through_regress/models.py:CarDriver",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/models.py",
      "target": "tests/m2m_through_regress/models.py:Event",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/models.py",
      "target": "tests/m2m_through_regress/models.py:Competitor",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/models.py",
      "target": "tests/m2m_through_regress/models.py:IndividualCompetitor",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/models.py",
      "target": "tests/m2m_through_regress/models.py:CompetingTeam",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/models.py",
      "target": "tests/m2m_through_regress/models.py:ProxiedIndividualCompetitor",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/models.py:Membership",
      "target": "tests/m2m_through_regress/models.py:Membership.__str__",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/models.py:UserMembership",
      "target": "tests/m2m_through_regress/models.py:UserMembership.__str__",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/models.py:Person",
      "target": "tests/m2m_through_regress/models.py:Person.__str__",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/models.py:Group",
      "target": "tests/m2m_through_regress/models.py:Group.__str__",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/models.py:Car",
      "target": "tests/m2m_through_regress/models.py:Car.__str__",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/models.py:Driver",
      "target": "tests/m2m_through_regress/models.py:Driver.Meta",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/models.py:Driver",
      "target": "tests/m2m_through_regress/models.py:Driver.__str__",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/models.py:CarDriver",
      "target": "tests/m2m_through_regress/models.py:CarDriver.__str__",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/models.py:IndividualCompetitor",
      "target": "tests/m2m_through_regress/models.py:Competitor",
      "type": "inherits"
    },
    {
      "source": "tests/m2m_through_regress/models.py:CompetingTeam",
      "target": "tests/m2m_through_regress/models.py:Competitor",
      "type": "inherits"
    },
    {
      "source": "tests/m2m_through_regress/models.py:ProxiedIndividualCompetitor",
      "target": "tests/m2m_through_regress/models.py:ProxiedIndividualCompetitor.Meta",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/models.py:ProxiedIndividualCompetitor",
      "target": "tests/m2m_through_regress/models.py:IndividualCompetitor",
      "type": "inherits"
    },
    {
      "source": "tests/m2m_through_regress/tests.py",
      "target": "tests/m2m_through_regress/tests.py:M2MThroughTestCase",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/tests.py",
      "target": "tests/m2m_through_regress/tests.py:M2MThroughSerializationTestCase",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/tests.py",
      "target": "tests/m2m_through_regress/tests.py:ToFieldThroughTests",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/tests.py",
      "target": "tests/m2m_through_regress/tests.py:ThroughLoadDataTestCase",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/tests.py",
      "target": "tests/m2m_through_regress/models.py:Car",
      "type": "imports"
    },
    {
      "source": "tests/m2m_through_regress/tests.py",
      "target": "tests/m2m_through_regress/models.py:CarDriver",
      "type": "imports"
    },
    {
      "source": "tests/m2m_through_regress/tests.py",
      "target": "tests/m2m_through_regress/models.py:Driver",
      "type": "imports"
    },
    {
      "source": "tests/m2m_through_regress/tests.py",
      "target": "tests/m2m_through_regress/models.py:Group",
      "type": "imports"
    },
    {
      "source": "tests/m2m_through_regress/tests.py",
      "target": "tests/m2m_through_regress/models.py:Membership",
      "type": "imports"
    },
    {
      "source": "tests/m2m_through_regress/tests.py",
      "target": "tests/m2m_through_regress/models.py:Person",
      "type": "imports"
    },
    {
      "source": "tests/m2m_through_regress/tests.py",
      "target": "tests/m2m_through_regress/models.py:UserMembership",
      "type": "imports"
    },
    {
      "source": "tests/m2m_through_regress/tests.py:M2MThroughTestCase",
      "target": "tests/m2m_through_regress/tests.py:M2MThroughTestCase.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/tests.py:M2MThroughTestCase",
      "target": "tests/m2m_through_regress/tests.py:M2MThroughTestCase.test_retrieve_reverse_m2m_items",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/tests.py:M2MThroughTestCase",
      "target": "tests/m2m_through_regress/tests.py:M2MThroughTestCase.test_retrieve_forward_m2m_items",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/tests.py:M2MThroughTestCase",
      "target": "tests/m2m_through_regress/tests.py:M2MThroughTestCase.test_retrieve_reverse_m2m_items_via_custom_id_intermediary",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/tests.py:M2MThroughTestCase",
      "target": "tests/m2m_through_regress/tests.py:M2MThroughTestCase.test_retrieve_forward_m2m_items_via_custom_id_intermediary",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/tests.py:M2MThroughTestCase",
      "target": "tests/m2m_through_regress/tests.py:M2MThroughTestCase.test_join_trimming_forwards",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/tests.py:M2MThroughTestCase",
      "target": "tests/m2m_through_regress/tests.py:M2MThroughTestCase.test_join_trimming_reverse",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/tests.py:M2MThroughSerializationTestCase",
      "target": "tests/m2m_through_regress/tests.py:M2MThroughSerializationTestCase.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/tests.py:M2MThroughSerializationTestCase",
      "target": "tests/m2m_through_regress/tests.py:M2MThroughSerializationTestCase.test_serialization",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/tests.py:ToFieldThroughTests",
      "target": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/tests.py:ToFieldThroughTests",
      "target": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.test_to_field",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/tests.py:ToFieldThroughTests",
      "target": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.test_to_field_reverse",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/tests.py:ToFieldThroughTests",
      "target": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.test_to_field_clear_reverse",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/tests.py:ToFieldThroughTests",
      "target": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.test_to_field_clear",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/tests.py:ToFieldThroughTests",
      "target": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.test_add",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/tests.py:ToFieldThroughTests",
      "target": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.test_m2m_relations_unusable_on_null_to_field",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/tests.py:ToFieldThroughTests",
      "target": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.test_m2m_relations_unusable_on_null_pk_obj",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/tests.py:ToFieldThroughTests",
      "target": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.test_add_related_null",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/tests.py:ToFieldThroughTests",
      "target": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.test_add_reverse",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/tests.py:ToFieldThroughTests",
      "target": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.test_add_null_reverse",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/tests.py:ToFieldThroughTests",
      "target": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.test_add_null_reverse_related",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/tests.py:ToFieldThroughTests",
      "target": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.test_remove",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/tests.py:ToFieldThroughTests",
      "target": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.test_remove_reverse",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.test_m2m_relations_unusable_on_null_to_field",
      "target": "tests/m2m_through_regress/models.py:Car",
      "type": "invokes"
    },
    {
      "source": "tests/m2m_through_regress/tests.py:ToFieldThroughTests.test_m2m_relations_unusable_on_null_pk_obj",
      "target": "tests/m2m_through_regress/models.py:Car",
      "type": "invokes"
    },
    {
      "source": "tests/m2m_through_regress/tests.py:ThroughLoadDataTestCase",
      "target": "tests/m2m_through_regress/tests.py:ThroughLoadDataTestCase.test_sequence_creation",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/test_multitable.py",
      "target": "tests/m2m_through_regress/test_multitable.py:MultiTableTests",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/test_multitable.py",
      "target": "tests/m2m_through_regress/models.py:CompetingTeam",
      "type": "imports"
    },
    {
      "source": "tests/m2m_through_regress/test_multitable.py",
      "target": "tests/m2m_through_regress/models.py:Event",
      "type": "imports"
    },
    {
      "source": "tests/m2m_through_regress/test_multitable.py",
      "target": "tests/m2m_through_regress/models.py:Group",
      "type": "imports"
    },
    {
      "source": "tests/m2m_through_regress/test_multitable.py",
      "target": "tests/m2m_through_regress/models.py:IndividualCompetitor",
      "type": "imports"
    },
    {
      "source": "tests/m2m_through_regress/test_multitable.py",
      "target": "tests/m2m_through_regress/models.py:Membership",
      "type": "imports"
    },
    {
      "source": "tests/m2m_through_regress/test_multitable.py",
      "target": "tests/m2m_through_regress/models.py:Person",
      "type": "imports"
    },
    {
      "source": "tests/m2m_through_regress/test_multitable.py:MultiTableTests",
      "target": "tests/m2m_through_regress/test_multitable.py:MultiTableTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/test_multitable.py:MultiTableTests",
      "target": "tests/m2m_through_regress/test_multitable.py:MultiTableTests.test_m2m_query",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/test_multitable.py:MultiTableTests",
      "target": "tests/m2m_through_regress/test_multitable.py:MultiTableTests.test_m2m_reverse_query",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/test_multitable.py:MultiTableTests",
      "target": "tests/m2m_through_regress/test_multitable.py:MultiTableTests.test_m2m_query_proxied",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/test_multitable.py:MultiTableTests",
      "target": "tests/m2m_through_regress/test_multitable.py:MultiTableTests.test_m2m_reverse_query_proxied",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/test_multitable.py:MultiTableTests",
      "target": "tests/m2m_through_regress/test_multitable.py:MultiTableTests.test_m2m_prefetch_proxied",
      "type": "contains"
    },
    {
      "source": "tests/m2m_through_regress/test_multitable.py:MultiTableTests",
      "target": "tests/m2m_through_regress/test_multitable.py:MultiTableTests.test_m2m_prefetch_reverse_proxied",
      "type": "contains"
    },
    {
      "source": "tests/select_related",
      "target": "tests/select_related/models.py",
      "type": "contains"
    },
    {
      "source": "tests/select_related",
      "target": "tests/select_related/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/select_related",
      "target": "tests/select_related/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/select_related/models.py",
      "target": "tests/select_related/models.py:Domain",
      "type": "contains"
    },
    {
      "source": "tests/select_related/models.py",
      "target": "tests/select_related/models.py:Kingdom",
      "type": "contains"
    },
    {
      "source": "tests/select_related/models.py",
      "target": "tests/select_related/models.py:Phylum",
      "type": "contains"
    },
    {
      "source": "tests/select_related/models.py",
      "target": "tests/select_related/models.py:Klass",
      "type": "contains"
    },
    {
      "source": "tests/select_related/models.py",
      "target": "tests/select_related/models.py:Order",
      "type": "contains"
    },
    {
      "source": "tests/select_related/models.py",
      "target": "tests/select_related/models.py:Family",
      "type": "contains"
    },
    {
      "source": "tests/select_related/models.py",
      "target": "tests/select_related/models.py:Genus",
      "type": "contains"
    },
    {
      "source": "tests/select_related/models.py",
      "target": "tests/select_related/models.py:Species",
      "type": "contains"
    },
    {
      "source": "tests/select_related/models.py",
      "target": "tests/select_related/models.py:HybridSpecies",
      "type": "contains"
    },
    {
      "source": "tests/select_related/models.py",
      "target": "tests/select_related/models.py:Topping",
      "type": "contains"
    },
    {
      "source": "tests/select_related/models.py",
      "target": "tests/select_related/models.py:Pizza",
      "type": "contains"
    },
    {
      "source": "tests/select_related/models.py",
      "target": "tests/select_related/models.py:TaggedItem",
      "type": "contains"
    },
    {
      "source": "tests/select_related/models.py",
      "target": "tests/select_related/models.py:Bookmark",
      "type": "contains"
    },
    {
      "source": "tests/select_related/models.py:Domain",
      "target": "tests/select_related/models.py:Domain.__str__",
      "type": "contains"
    },
    {
      "source": "tests/select_related/models.py:Kingdom",
      "target": "tests/select_related/models.py:Kingdom.__str__",
      "type": "contains"
    },
    {
      "source": "tests/select_related/models.py:Phylum",
      "target": "tests/select_related/models.py:Phylum.__str__",
      "type": "contains"
    },
    {
      "source": "tests/select_related/models.py:Klass",
      "target": "tests/select_related/models.py:Klass.__str__",
      "type": "contains"
    },
    {
      "source": "tests/select_related/models.py:Order",
      "target": "tests/select_related/models.py:Order.__str__",
      "type": "contains"
    },
    {
      "source": "tests/select_related/models.py:Family",
      "target": "tests/select_related/models.py:Family.__str__",
      "type": "contains"
    },
    {
      "source": "tests/select_related/models.py:Genus",
      "target": "tests/select_related/models.py:Genus.__str__",
      "type": "contains"
    },
    {
      "source": "tests/select_related/models.py:Species",
      "target": "tests/select_related/models.py:Species.__str__",
      "type": "contains"
    },
    {
      "source": "tests/select_related/models.py:HybridSpecies",
      "target": "tests/select_related/models.py:HybridSpecies.__str__",
      "type": "contains"
    },
    {
      "source": "tests/select_related/models.py:Topping",
      "target": "tests/select_related/models.py:Topping.__str__",
      "type": "contains"
    },
    {
      "source": "tests/select_related/models.py:Pizza",
      "target": "tests/select_related/models.py:Pizza.__str__",
      "type": "contains"
    },
    {
      "source": "tests/select_related/models.py:TaggedItem",
      "target": "tests/select_related/models.py:TaggedItem.__str__",
      "type": "contains"
    },
    {
      "source": "tests/select_related/models.py:Bookmark",
      "target": "tests/select_related/models.py:Bookmark.__str__",
      "type": "contains"
    },
    {
      "source": "tests/select_related/tests.py",
      "target": "tests/select_related/tests.py:SelectRelatedTests",
      "type": "contains"
    },
    {
      "source": "tests/select_related/tests.py",
      "target": "tests/select_related/tests.py:SelectRelatedValidationTests",
      "type": "contains"
    },
    {
      "source": "tests/select_related/tests.py",
      "target": "tests/select_related/models.py:Bookmark",
      "type": "imports"
    },
    {
      "source": "tests/select_related/tests.py",
      "target": "tests/select_related/models.py:Domain",
      "type": "imports"
    },
    {
      "source": "tests/select_related/tests.py",
      "target": "tests/select_related/models.py:Family",
      "type": "imports"
    },
    {
      "source": "tests/select_related/tests.py",
      "target": "tests/select_related/models.py:Genus",
      "type": "imports"
    },
    {
      "source": "tests/select_related/tests.py",
      "target": "tests/select_related/models.py:HybridSpecies",
      "type": "imports"
    },
    {
      "source": "tests/select_related/tests.py",
      "target": "tests/select_related/models.py:Kingdom",
      "type": "imports"
    },
    {
      "source": "tests/select_related/tests.py",
      "target": "tests/select_related/models.py:Klass",
      "type": "imports"
    },
    {
      "source": "tests/select_related/tests.py",
      "target": "tests/select_related/models.py:Order",
      "type": "imports"
    },
    {
      "source": "tests/select_related/tests.py",
      "target": "tests/select_related/models.py:Phylum",
      "type": "imports"
    },
    {
      "source": "tests/select_related/tests.py",
      "target": "tests/select_related/models.py:Pizza",
      "type": "imports"
    },
    {
      "source": "tests/select_related/tests.py",
      "target": "tests/select_related/models.py:Species",
      "type": "imports"
    },
    {
      "source": "tests/select_related/tests.py",
      "target": "tests/select_related/models.py:TaggedItem",
      "type": "imports"
    },
    {
      "source": "tests/select_related/tests.py:SelectRelatedTests",
      "target": "tests/select_related/tests.py:SelectRelatedTests.create_tree",
      "type": "contains"
    },
    {
      "source": "tests/select_related/tests.py:SelectRelatedTests",
      "target": "tests/select_related/tests.py:SelectRelatedTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/select_related/tests.py:SelectRelatedTests",
      "target": "tests/select_related/tests.py:SelectRelatedTests.test_access_fks_without_select_related",
      "type": "contains"
    },
    {
      "source": "tests/select_related/tests.py:SelectRelatedTests",
      "target": "tests/select_related/tests.py:SelectRelatedTests.test_access_fks_with_select_related",
      "type": "contains"
    },
    {
      "source": "tests/select_related/tests.py:SelectRelatedTests",
      "target": "tests/select_related/tests.py:SelectRelatedTests.test_list_without_select_related",
      "type": "contains"
    },
    {
      "source": "tests/select_related/tests.py:SelectRelatedTests",
      "target": "tests/select_related/tests.py:SelectRelatedTests.test_list_with_select_related",
      "type": "contains"
    },
    {
      "source": "tests/select_related/tests.py:SelectRelatedTests",
      "target": "tests/select_related/tests.py:SelectRelatedTests.test_list_with_depth",
      "type": "contains"
    },
    {
      "source": "tests/select_related/tests.py:SelectRelatedTests",
      "target": "tests/select_related/tests.py:SelectRelatedTests.test_select_related_with_extra",
      "type": "contains"
    },
    {
      "source": "tests/select_related/tests.py:SelectRelatedTests",
      "target": "tests/select_related/tests.py:SelectRelatedTests.test_certain_fields",
      "type": "contains"
    },
    {
      "source": "tests/select_related/tests.py:SelectRelatedTests",
      "target": "tests/select_related/tests.py:SelectRelatedTests.test_more_certain_fields",
      "type": "contains"
    },
    {
      "source": "tests/select_related/tests.py:SelectRelatedTests",
      "target": "tests/select_related/tests.py:SelectRelatedTests.test_field_traversal",
      "type": "contains"
    },
    {
      "source": "tests/select_related/tests.py:SelectRelatedTests",
      "target": "tests/select_related/tests.py:SelectRelatedTests.test_none_clears_list",
      "type": "contains"
    },
    {
      "source": "tests/select_related/tests.py:SelectRelatedTests",
      "target": "tests/select_related/tests.py:SelectRelatedTests.test_chaining",
      "type": "contains"
    },
    {
      "source": "tests/select_related/tests.py:SelectRelatedTests",
      "target": "tests/select_related/tests.py:SelectRelatedTests.test_reverse_relation_caching",
      "type": "contains"
    },
    {
      "source": "tests/select_related/tests.py:SelectRelatedTests",
      "target": "tests/select_related/tests.py:SelectRelatedTests.test_select_related_after_values",
      "type": "contains"
    },
    {
      "source": "tests/select_related/tests.py:SelectRelatedTests",
      "target": "tests/select_related/tests.py:SelectRelatedTests.test_select_related_after_values_list",
      "type": "contains"
    },
    {
      "source": "tests/select_related/tests.py:SelectRelatedTests.setUpTestData",
      "target": "tests/select_related/tests.py:SelectRelatedTests.create_tree",
      "type": "invokes"
    },
    {
      "source": "tests/select_related/tests.py:SelectRelatedValidationTests",
      "target": "tests/select_related/tests.py:SelectRelatedValidationTests.test_non_relational_field",
      "type": "contains"
    },
    {
      "source": "tests/select_related/tests.py:SelectRelatedValidationTests",
      "target": "tests/select_related/tests.py:SelectRelatedValidationTests.test_non_relational_field_nested",
      "type": "contains"
    },
    {
      "source": "tests/select_related/tests.py:SelectRelatedValidationTests",
      "target": "tests/select_related/tests.py:SelectRelatedValidationTests.test_many_to_many_field",
      "type": "contains"
    },
    {
      "source": "tests/select_related/tests.py:SelectRelatedValidationTests",
      "target": "tests/select_related/tests.py:SelectRelatedValidationTests.test_reverse_relational_field",
      "type": "contains"
    },
    {
      "source": "tests/select_related/tests.py:SelectRelatedValidationTests",
      "target": "tests/select_related/tests.py:SelectRelatedValidationTests.test_invalid_field",
      "type": "contains"
    },
    {
      "source": "tests/select_related/tests.py:SelectRelatedValidationTests",
      "target": "tests/select_related/tests.py:SelectRelatedValidationTests.test_generic_relations",
      "type": "contains"
    },
    {
      "source": "tests/admin_default_site",
      "target": "tests/admin_default_site/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/admin_default_site",
      "target": "tests/admin_default_site/apps.py",
      "type": "contains"
    },
    {
      "source": "tests/admin_default_site",
      "target": "tests/admin_default_site/sites.py",
      "type": "contains"
    },
    {
      "source": "tests/admin_default_site",
      "target": "tests/admin_default_site/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/admin_default_site/apps.py",
      "target": "tests/admin_default_site/apps.py:MyCustomAdminConfig",
      "type": "contains"
    },
    {
      "source": "tests/admin_default_site/sites.py",
      "target": "tests/admin_default_site/sites.py:CustomAdminSite",
      "type": "contains"
    },
    {
      "source": "tests/admin_default_site/tests.py",
      "target": "tests/admin_default_site/tests.py:CustomAdminSiteTests",
      "type": "contains"
    },
    {
      "source": "tests/admin_default_site/tests.py",
      "target": "tests/admin_default_site/tests.py:DefaultAdminSiteTests",
      "type": "contains"
    },
    {
      "source": "tests/admin_default_site/tests.py:CustomAdminSiteTests",
      "target": "tests/admin_default_site/tests.py:CustomAdminSiteTests.setUp",
      "type": "contains"
    },
    {
      "source": "tests/admin_default_site/tests.py:CustomAdminSiteTests",
      "target": "tests/admin_default_site/tests.py:CustomAdminSiteTests.tearDown",
      "type": "contains"
    },
    {
      "source": "tests/admin_default_site/tests.py:CustomAdminSiteTests",
      "target": "tests/admin_default_site/tests.py:CustomAdminSiteTests.test_use_custom_admin_site",
      "type": "contains"
    },
    {
      "source": "tests/admin_default_site/tests.py:DefaultAdminSiteTests",
      "target": "tests/admin_default_site/tests.py:DefaultAdminSiteTests.test_use_default_admin_site",
      "type": "contains"
    },
    {
      "source": "tests/no_models",
      "target": "tests/no_models/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/no_models",
      "target": "tests/no_models/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/no_models/tests.py",
      "target": "tests/no_models/tests.py:NoModelTests",
      "type": "contains"
    },
    {
      "source": "tests/no_models/tests.py:NoModelTests",
      "target": "tests/no_models/tests.py:NoModelTests.test_no_models",
      "type": "contains"
    },
    {
      "source": "tests/dates",
      "target": "tests/dates/models.py",
      "type": "contains"
    },
    {
      "source": "tests/dates",
      "target": "tests/dates/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/dates",
      "target": "tests/dates/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/dates/models.py",
      "target": "tests/dates/models.py:Article",
      "type": "contains"
    },
    {
      "source": "tests/dates/models.py",
      "target": "tests/dates/models.py:Comment",
      "type": "contains"
    },
    {
      "source": "tests/dates/models.py",
      "target": "tests/dates/models.py:Category",
      "type": "contains"
    },
    {
      "source": "tests/dates/models.py:Article",
      "target": "tests/dates/models.py:Article.__str__",
      "type": "contains"
    },
    {
      "source": "tests/dates/models.py:Comment",
      "target": "tests/dates/models.py:Comment.__str__",
      "type": "contains"
    },
    {
      "source": "tests/dates/tests.py",
      "target": "tests/dates/tests.py:DatesTests",
      "type": "contains"
    },
    {
      "source": "tests/dates/tests.py",
      "target": "tests/dates/models.py:Article",
      "type": "imports"
    },
    {
      "source": "tests/dates/tests.py",
      "target": "tests/dates/models.py:Category",
      "type": "imports"
    },
    {
      "source": "tests/dates/tests.py",
      "target": "tests/dates/models.py:Comment",
      "type": "imports"
    },
    {
      "source": "tests/dates/tests.py:DatesTests",
      "target": "tests/dates/tests.py:DatesTests.test_related_model_traverse",
      "type": "contains"
    },
    {
      "source": "tests/dates/tests.py:DatesTests",
      "target": "tests/dates/tests.py:DatesTests.test_dates_fails_when_no_arguments_are_provided",
      "type": "contains"
    },
    {
      "source": "tests/dates/tests.py:DatesTests",
      "target": "tests/dates/tests.py:DatesTests.test_dates_fails_when_given_invalid_field_argument",
      "type": "contains"
    },
    {
      "source": "tests/dates/tests.py:DatesTests",
      "target": "tests/dates/tests.py:DatesTests.test_dates_fails_when_given_invalid_kind_argument",
      "type": "contains"
    },
    {
      "source": "tests/dates/tests.py:DatesTests",
      "target": "tests/dates/tests.py:DatesTests.test_dates_fails_when_given_invalid_order_argument",
      "type": "contains"
    },
    {
      "source": "tests/dates/tests.py:DatesTests",
      "target": "tests/dates/tests.py:DatesTests.test_dates_trunc_datetime_fields",
      "type": "contains"
    },
    {
      "source": "tests/dates/tests.py:DatesTests",
      "target": "tests/dates/tests.py:DatesTests.test_dates_avoid_datetime_cast",
      "type": "contains"
    },
    {
      "source": "tests/dates/tests.py:DatesTests.test_dates_trunc_datetime_fields",
      "target": "tests/dates/models.py:Article",
      "type": "invokes"
    },
    {
      "source": "tests/get_earliest_or_latest",
      "target": "tests/get_earliest_or_latest/models.py",
      "type": "contains"
    },
    {
      "source": "tests/get_earliest_or_latest",
      "target": "tests/get_earliest_or_latest/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/get_earliest_or_latest",
      "target": "tests/get_earliest_or_latest/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/get_earliest_or_latest/models.py",
      "target": "tests/get_earliest_or_latest/models.py:Article",
      "type": "contains"
    },
    {
      "source": "tests/get_earliest_or_latest/models.py",
      "target": "tests/get_earliest_or_latest/models.py:Person",
      "type": "contains"
    },
    {
      "source": "tests/get_earliest_or_latest/models.py",
      "target": "tests/get_earliest_or_latest/models.py:IndexErrorQuerySet",
      "type": "contains"
    },
    {
      "source": "tests/get_earliest_or_latest/models.py",
      "target": "tests/get_earliest_or_latest/models.py:IndexErrorArticle",
      "type": "contains"
    },
    {
      "source": "tests/get_earliest_or_latest/models.py:Article",
      "target": "tests/get_earliest_or_latest/models.py:Article.Meta",
      "type": "contains"
    },
    {
      "source": "tests/get_earliest_or_latest/models.py:IndexErrorQuerySet",
      "target": "tests/get_earliest_or_latest/models.py:IndexErrorQuerySet.__iter__",
      "type": "contains"
    },
    {
      "source": "tests/get_earliest_or_latest/models.py:IndexErrorArticle",
      "target": "tests/get_earliest_or_latest/models.py:Article",
      "type": "inherits"
    },
    {
      "source": "tests/get_earliest_or_latest/tests.py",
      "target": "tests/get_earliest_or_latest/tests.py:EarliestOrLatestTests",
      "type": "contains"
    },
    {
      "source": "tests/get_earliest_or_latest/tests.py",
      "target": "tests/get_earliest_or_latest/tests.py:TestFirstLast",
      "type": "contains"
    },
    {
      "source": "tests/get_earliest_or_latest/tests.py",
      "target": "tests/get_earliest_or_latest/models.py:Article",
      "type": "imports"
    },
    {
      "source": "tests/get_earliest_or_latest/tests.py",
      "target": "tests/get_earliest_or_latest/models.py:IndexErrorArticle",
      "type": "imports"
    },
    {
      "source": "tests/get_earliest_or_latest/tests.py",
      "target": "tests/get_earliest_or_latest/models.py:Person",
      "type": "imports"
    },
    {
      "source": "tests/get_earliest_or_latest/tests.py:EarliestOrLatestTests",
      "target": "tests/get_earliest_or_latest/tests.py:EarliestOrLatestTests.setUpClass",
      "type": "contains"
    },
    {
      "source": "tests/get_earliest_or_latest/tests.py:EarliestOrLatestTests",
      "target": "tests/get_earliest_or_latest/tests.py:EarliestOrLatestTests.tearDown",
      "type": "contains"
    },
    {
      "source": "tests/get_earliest_or_latest/tests.py:EarliestOrLatestTests",
      "target": "tests/get_earliest_or_latest/tests.py:EarliestOrLatestTests.test_earliest",
      "type": "contains"
    },
    {
      "source": "tests/get_earliest_or_latest/tests.py:EarliestOrLatestTests",
      "target": "tests/get_earliest_or_latest/tests.py:EarliestOrLatestTests.test_latest",
      "type": "contains"
    },
    {
      "source": "tests/get_earliest_or_latest/tests.py:EarliestOrLatestTests",
      "target": "tests/get_earliest_or_latest/tests.py:EarliestOrLatestTests.test_latest_manual",
      "type": "contains"
    },
    {
      "source": "tests/get_earliest_or_latest/tests.py:TestFirstLast",
      "target": "tests/get_earliest_or_latest/tests.py:TestFirstLast.test_first",
      "type": "contains"
    },
    {
      "source": "tests/get_earliest_or_latest/tests.py:TestFirstLast",
      "target": "tests/get_earliest_or_latest/tests.py:TestFirstLast.test_last",
      "type": "contains"
    },
    {
      "source": "tests/get_earliest_or_latest/tests.py:TestFirstLast",
      "target": "tests/get_earliest_or_latest/tests.py:TestFirstLast.test_index_error_not_suppressed",
      "type": "contains"
    },
    {
      "source": "tests/get_earliest_or_latest/tests.py:TestFirstLast.test_index_error_not_suppressed",
      "target": "tests/get_earliest_or_latest/tests.py:TestFirstLast.test_index_error_not_suppressed.check",
      "type": "contains"
    },
    {
      "source": "tests/get_earliest_or_latest/tests.py:TestFirstLast.test_index_error_not_suppressed",
      "target": "tests/get_earliest_or_latest/tests.py:TestFirstLast.test_index_error_not_suppressed.check",
      "type": "invokes"
    },
    {
      "source": "tests/sessions_tests",
      "target": "tests/sessions_tests/models.py",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests",
      "target": "tests/sessions_tests/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests",
      "target": "tests/sessions_tests/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/models.py",
      "target": "tests/sessions_tests/models.py:CustomSession",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/models.py",
      "target": "tests/sessions_tests/models.py:SessionStore",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/models.py:CustomSession",
      "target": "tests/sessions_tests/models.py:CustomSession.get_session_store_class",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/models.py:SessionStore",
      "target": "tests/sessions_tests/models.py:SessionStore.get_model_class",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/models.py:SessionStore",
      "target": "tests/sessions_tests/models.py:SessionStore.create_model_instance",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py",
      "target": "tests/sessions_tests/tests.py:DatabaseSessionTests",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py",
      "target": "tests/sessions_tests/tests.py:DatabaseSessionWithTimeZoneTests",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py",
      "target": "tests/sessions_tests/tests.py:CustomDatabaseSessionTests",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py",
      "target": "tests/sessions_tests/tests.py:CacheDBSessionTests",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py",
      "target": "tests/sessions_tests/tests.py:CacheDBSessionWithTimeZoneTests",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py",
      "target": "tests/sessions_tests/tests.py:FileSessionTests",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py",
      "target": "tests/sessions_tests/tests.py:CacheSessionTests",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py",
      "target": "tests/sessions_tests/tests.py:SessionMiddlewareTests",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py",
      "target": "tests/sessions_tests/tests.py:CookieSessionTests",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py",
      "target": "tests/sessions_tests/models.py:SessionStore",
      "type": "imports"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.setUp",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.tearDown",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_new_session",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_get_empty",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_store",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_pop",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_pop_default",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_pop_default_named_argument",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_pop_no_default_keyerror_raised",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_setdefault",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_update",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_has_key",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_values",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_keys",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_items",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_clear",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_save",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_delete",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_flush",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_cycle",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_cycle_with_no_session_cache",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_save_doesnt_clear_data",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_invalid_key",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_session_key_empty_string_invalid",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_session_key_too_short_invalid",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_session_key_valid_string_saved",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_session_key_is_read_only",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_default_expiry",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_custom_expiry_seconds",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_custom_expiry_timedelta",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_custom_expiry_datetime",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_custom_expiry_reset",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_get_expire_at_browser_close",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_decode",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_decode_failure_logged_to_security",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_actual_expiry",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_session_load_does_not_create_record",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_session_save_does_not_resurrect_session_logged_out_in_other_context",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin.test_session_key_is_read_only",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_session_key_is_read_only.set_session_key",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionTestsMixin.test_session_key_is_read_only",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_session_key_is_read_only.set_session_key",
      "type": "invokes"
    },
    {
      "source": "tests/sessions_tests/tests.py:DatabaseSessionTests",
      "target": "tests/sessions_tests/tests.py:DatabaseSessionTests.model",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:DatabaseSessionTests",
      "target": "tests/sessions_tests/tests.py:DatabaseSessionTests.test_session_str",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:DatabaseSessionTests",
      "target": "tests/sessions_tests/tests.py:DatabaseSessionTests.test_session_get_decoded",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:DatabaseSessionTests",
      "target": "tests/sessions_tests/tests.py:DatabaseSessionTests.test_sessionmanager_save",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:DatabaseSessionTests",
      "target": "tests/sessions_tests/tests.py:DatabaseSessionTests.test_clearsessions_command",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:DatabaseSessionTests",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "type": "inherits"
    },
    {
      "source": "tests/sessions_tests/tests.py:DatabaseSessionTests.model",
      "target": "tests/sessions_tests/models.py:SessionStore.get_model_class",
      "type": "invokes"
    },
    {
      "source": "tests/sessions_tests/tests.py:DatabaseSessionWithTimeZoneTests",
      "target": "tests/sessions_tests/tests.py:DatabaseSessionTests",
      "type": "inherits"
    },
    {
      "source": "tests/sessions_tests/tests.py:CustomDatabaseSessionTests",
      "target": "tests/sessions_tests/tests.py:CustomDatabaseSessionTests.test_extra_session_field",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:CustomDatabaseSessionTests",
      "target": "tests/sessions_tests/tests.py:DatabaseSessionTests",
      "type": "inherits"
    },
    {
      "source": "tests/sessions_tests/tests.py:CacheDBSessionTests",
      "target": "tests/sessions_tests/tests.py:CacheDBSessionTests.test_exists_searches_cache_first",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:CacheDBSessionTests",
      "target": "tests/sessions_tests/tests.py:CacheDBSessionTests.test_load_overlong_key",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:CacheDBSessionTests",
      "target": "tests/sessions_tests/tests.py:CacheDBSessionTests.test_non_default_cache",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:CacheDBSessionTests",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "type": "inherits"
    },
    {
      "source": "tests/sessions_tests/tests.py:CacheDBSessionWithTimeZoneTests",
      "target": "tests/sessions_tests/tests.py:CacheDBSessionTests",
      "type": "inherits"
    },
    {
      "source": "tests/sessions_tests/tests.py:FileSessionTests",
      "target": "tests/sessions_tests/tests.py:FileSessionTests.setUp",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:FileSessionTests",
      "target": "tests/sessions_tests/tests.py:FileSessionTests.tearDown",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:FileSessionTests",
      "target": "tests/sessions_tests/tests.py:FileSessionTests.test_configuration_check",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:FileSessionTests",
      "target": "tests/sessions_tests/tests.py:FileSessionTests.test_invalid_key_backslash",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:FileSessionTests",
      "target": "tests/sessions_tests/tests.py:FileSessionTests.test_invalid_key_forwardslash",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:FileSessionTests",
      "target": "tests/sessions_tests/tests.py:FileSessionTests.test_clearsessions_command",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:FileSessionTests",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "type": "inherits"
    },
    {
      "source": "tests/sessions_tests/tests.py:FileSessionTests.setUp",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.setUp",
      "type": "invokes"
    },
    {
      "source": "tests/sessions_tests/tests.py:FileSessionTests.tearDown",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.tearDown",
      "type": "invokes"
    },
    {
      "source": "tests/sessions_tests/tests.py:FileSessionTests.test_clearsessions_command",
      "target": "tests/sessions_tests/tests.py:FileSessionTests.test_clearsessions_command.count_sessions",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:FileSessionTests.test_clearsessions_command",
      "target": "tests/sessions_tests/tests.py:FileSessionTests.test_clearsessions_command.count_sessions",
      "type": "invokes"
    },
    {
      "source": "tests/sessions_tests/tests.py:CacheSessionTests",
      "target": "tests/sessions_tests/tests.py:CacheSessionTests.test_load_overlong_key",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:CacheSessionTests",
      "target": "tests/sessions_tests/tests.py:CacheSessionTests.test_default_cache",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:CacheSessionTests",
      "target": "tests/sessions_tests/tests.py:CacheSessionTests.test_non_default_cache",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:CacheSessionTests",
      "target": "tests/sessions_tests/tests.py:CacheSessionTests.test_create_and_save",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:CacheSessionTests",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "type": "inherits"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionMiddlewareTests",
      "target": "tests/sessions_tests/tests.py:SessionMiddlewareTests.test_secure_session_cookie",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionMiddlewareTests",
      "target": "tests/sessions_tests/tests.py:SessionMiddlewareTests.test_httponly_session_cookie",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionMiddlewareTests",
      "target": "tests/sessions_tests/tests.py:SessionMiddlewareTests.test_samesite_session_cookie",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionMiddlewareTests",
      "target": "tests/sessions_tests/tests.py:SessionMiddlewareTests.test_no_httponly_session_cookie",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionMiddlewareTests",
      "target": "tests/sessions_tests/tests.py:SessionMiddlewareTests.test_session_save_on_500",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionMiddlewareTests",
      "target": "tests/sessions_tests/tests.py:SessionMiddlewareTests.test_session_update_error_redirect",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionMiddlewareTests",
      "target": "tests/sessions_tests/tests.py:SessionMiddlewareTests.test_session_delete_on_end",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionMiddlewareTests",
      "target": "tests/sessions_tests/tests.py:SessionMiddlewareTests.test_session_delete_on_end_with_custom_domain_and_path",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionMiddlewareTests",
      "target": "tests/sessions_tests/tests.py:SessionMiddlewareTests.test_flush_empty_without_session_cookie_doesnt_set_cookie",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:SessionMiddlewareTests",
      "target": "tests/sessions_tests/tests.py:SessionMiddlewareTests.test_empty_session_saved",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:CookieSessionTests",
      "target": "tests/sessions_tests/tests.py:CookieSessionTests.test_save",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:CookieSessionTests",
      "target": "tests/sessions_tests/tests.py:CookieSessionTests.test_cycle",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:CookieSessionTests",
      "target": "tests/sessions_tests/tests.py:CookieSessionTests.test_actual_expiry",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:CookieSessionTests",
      "target": "tests/sessions_tests/tests.py:CookieSessionTests.test_unpickling_exception",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:CookieSessionTests",
      "target": "tests/sessions_tests/tests.py:CookieSessionTests.test_session_load_does_not_create_record",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:CookieSessionTests",
      "target": "tests/sessions_tests/tests.py:CookieSessionTests.test_session_save_does_not_resurrect_session_logged_out_in_other_context",
      "type": "contains"
    },
    {
      "source": "tests/sessions_tests/tests.py:CookieSessionTests",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin",
      "type": "inherits"
    },
    {
      "source": "tests/sessions_tests/tests.py:CookieSessionTests.test_actual_expiry",
      "target": "tests/sessions_tests/tests.py:SessionTestsMixin.test_actual_expiry",
      "type": "invokes"
    },
    {
      "source": "tests/proxy_model_inheritance",
      "target": "tests/proxy_model_inheritance/models.py",
      "type": "contains"
    },
    {
      "source": "tests/proxy_model_inheritance",
      "target": "tests/proxy_model_inheritance/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/proxy_model_inheritance",
      "target": "tests/proxy_model_inheritance/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/proxy_model_inheritance",
      "target": "tests/proxy_model_inheritance/app2",
      "type": "contains"
    },
    {
      "source": "tests/proxy_model_inheritance",
      "target": "tests/proxy_model_inheritance/app1",
      "type": "contains"
    },
    {
      "source": "tests/proxy_model_inheritance/models.py",
      "target": "tests/proxy_model_inheritance/models.py:ConcreteModel",
      "type": "contains"
    },
    {
      "source": "tests/proxy_model_inheritance/models.py",
      "target": "tests/proxy_model_inheritance/models.py:ProxyModel",
      "type": "contains"
    },
    {
      "source": "tests/proxy_model_inheritance/models.py",
      "target": "tests/proxy_model_inheritance/models.py:ConcreteModelSubclass",
      "type": "contains"
    },
    {
      "source": "tests/proxy_model_inheritance/models.py",
      "target": "tests/proxy_model_inheritance/models.py:ConcreteModelSubclassProxy",
      "type": "contains"
    },
    {
      "source": "tests/proxy_model_inheritance/models.py:ProxyModel",
      "target": "tests/proxy_model_inheritance/models.py:ProxyModel.Meta",
      "type": "contains"
    },
    {
      "source": "tests/proxy_model_inheritance/models.py:ProxyModel",
      "target": "tests/proxy_model_inheritance/models.py:ConcreteModel",
      "type": "inherits"
    },
    {
      "source": "tests/proxy_model_inheritance/models.py:ConcreteModelSubclass",
      "target": "tests/proxy_model_inheritance/models.py:ProxyModel",
      "type": "inherits"
    },
    {
      "source": "tests/proxy_model_inheritance/models.py:ConcreteModelSubclassProxy",
      "target": "tests/proxy_model_inheritance/models.py:ConcreteModelSubclassProxy.Meta",
      "type": "contains"
    },
    {
      "source": "tests/proxy_model_inheritance/models.py:ConcreteModelSubclassProxy",
      "target": "tests/proxy_model_inheritance/models.py:ConcreteModelSubclass",
      "type": "inherits"
    },
    {
      "source": "tests/proxy_model_inheritance/tests.py",
      "target": "tests/proxy_model_inheritance/tests.py:ProxyModelInheritanceTests",
      "type": "contains"
    },
    {
      "source": "tests/proxy_model_inheritance/tests.py",
      "target": "tests/proxy_model_inheritance/tests.py:MultiTableInheritanceProxyTest",
      "type": "contains"
    },
    {
      "source": "tests/proxy_model_inheritance/tests.py",
      "target": "tests/proxy_model_inheritance/models.py:ConcreteModel",
      "type": "imports"
    },
    {
      "source": "tests/proxy_model_inheritance/tests.py",
      "target": "tests/proxy_model_inheritance/models.py:ConcreteModelSubclass",
      "type": "imports"
    },
    {
      "source": "tests/proxy_model_inheritance/tests.py",
      "target": "tests/proxy_model_inheritance/models.py:ConcreteModelSubclassProxy",
      "type": "imports"
    },
    {
      "source": "tests/proxy_model_inheritance/tests.py",
      "target": "tests/proxy_model_inheritance/models.py:ProxyModel",
      "type": "imports"
    },
    {
      "source": "tests/proxy_model_inheritance/tests.py:ProxyModelInheritanceTests",
      "target": "tests/proxy_model_inheritance/tests.py:ProxyModelInheritanceTests.test_table_exists",
      "type": "contains"
    },
    {
      "source": "tests/proxy_model_inheritance/tests.py:MultiTableInheritanceProxyTest",
      "target": "tests/proxy_model_inheritance/tests.py:MultiTableInheritanceProxyTest.test_model_subclass_proxy",
      "type": "contains"
    },
    {
      "source": "tests/proxy_model_inheritance/tests.py:MultiTableInheritanceProxyTest",
      "target": "tests/proxy_model_inheritance/tests.py:MultiTableInheritanceProxyTest.test_deletion_through_intermediate_proxy",
      "type": "contains"
    },
    {
      "source": "tests/proxy_model_inheritance/app2",
      "target": "tests/proxy_model_inheritance/app2/models.py",
      "type": "contains"
    },
    {
      "source": "tests/proxy_model_inheritance/app2",
      "target": "tests/proxy_model_inheritance/app2/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/proxy_model_inheritance/app2/models.py",
      "target": "tests/proxy_model_inheritance/app2/models.py:NiceModel",
      "type": "contains"
    },
    {
      "source": "tests/proxy_model_inheritance/app1",
      "target": "tests/proxy_model_inheritance/app1/models.py",
      "type": "contains"
    },
    {
      "source": "tests/proxy_model_inheritance/app1",
      "target": "tests/proxy_model_inheritance/app1/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/proxy_model_inheritance/app1/models.py",
      "target": "tests/proxy_model_inheritance/app1/models.py:ProxyModel",
      "type": "contains"
    },
    {
      "source": "tests/proxy_model_inheritance/app1/models.py:ProxyModel",
      "target": "tests/proxy_model_inheritance/app1/models.py:ProxyModel.Meta",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object",
      "target": "tests/foreign_object/test_forms.py",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object",
      "target": "tests/foreign_object/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object",
      "target": "tests/foreign_object/test_empty_join.py",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object",
      "target": "tests/foreign_object/test_agnostic_order_trimjoin.py",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object",
      "target": "tests/foreign_object/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object",
      "target": "tests/foreign_object/models",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/test_forms.py",
      "target": "tests/foreign_object/test_forms.py:FormsTests",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/test_forms.py:FormsTests",
      "target": "tests/foreign_object/test_forms.py:FormsTests.ArticleForm",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/test_forms.py:FormsTests",
      "target": "tests/foreign_object/test_forms.py:FormsTests.test_foreign_object_form",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/test_forms.py:FormsTests.ArticleForm",
      "target": "tests/foreign_object/test_forms.py:FormsTests.ArticleForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/test_forms.py:FormsTests.test_foreign_object_form",
      "target": "tests/foreign_object/test_forms.py:FormsTests.ArticleForm",
      "type": "invokes"
    },
    {
      "source": "tests/foreign_object/test_empty_join.py",
      "target": "tests/foreign_object/test_empty_join.py:RestrictedConditionsTests",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/test_empty_join.py",
      "target": "tests/foreign_object/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/foreign_object/test_empty_join.py:RestrictedConditionsTests",
      "target": "tests/foreign_object/test_empty_join.py:RestrictedConditionsTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/test_empty_join.py:RestrictedConditionsTests",
      "target": "tests/foreign_object/test_empty_join.py:RestrictedConditionsTests.test_restrictions_with_no_joining_columns",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/test_empty_join.py:RestrictedConditionsTests",
      "target": "tests/foreign_object/test_empty_join.py:RestrictedConditionsTests.test_empty_join_conditions",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/test_empty_join.py:RestrictedConditionsTests.setUpTestData",
      "target": "tests/foreign_object/models/empty_join.py:SlugPage",
      "type": "invokes"
    },
    {
      "source": "tests/foreign_object/test_agnostic_order_trimjoin.py",
      "target": "tests/foreign_object/test_agnostic_order_trimjoin.py:TestLookupQuery",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/test_agnostic_order_trimjoin.py",
      "target": "tests/foreign_object/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/foreign_object/test_agnostic_order_trimjoin.py",
      "target": "tests/foreign_object/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/foreign_object/test_agnostic_order_trimjoin.py",
      "target": "tests/foreign_object/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/foreign_object/test_agnostic_order_trimjoin.py:TestLookupQuery",
      "target": "tests/foreign_object/test_agnostic_order_trimjoin.py:TestLookupQuery.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/test_agnostic_order_trimjoin.py:TestLookupQuery",
      "target": "tests/foreign_object/test_agnostic_order_trimjoin.py:TestLookupQuery.test_deep_mixed_forward",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/test_agnostic_order_trimjoin.py:TestLookupQuery",
      "target": "tests/foreign_object/test_agnostic_order_trimjoin.py:TestLookupQuery.test_deep_mixed_backward",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py",
      "target": "tests/foreign_object/tests.py:MultiColumnFKTests",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py",
      "target": "tests/foreign_object/tests.py:TestModelCheckTests",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py",
      "target": "tests/foreign_object/tests.py:TestExtraJoinFilterQ",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py",
      "target": "tests/foreign_object/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/foreign_object/tests.py",
      "target": "tests/foreign_object/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/foreign_object/tests.py",
      "target": "tests/foreign_object/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/foreign_object/tests.py",
      "target": "tests/foreign_object/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/foreign_object/tests.py",
      "target": "tests/foreign_object/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/foreign_object/tests.py",
      "target": "tests/foreign_object/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/foreign_object/tests.py",
      "target": "tests/foreign_object/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/foreign_object/tests.py",
      "target": "tests/foreign_object/models/__init__.py",
      "type": "imports"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests",
      "target": "tests/foreign_object/tests.py:MultiColumnFKTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests",
      "target": "tests/foreign_object/tests.py:MultiColumnFKTests.test_get_succeeds_on_multicolumn_match",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests",
      "target": "tests/foreign_object/tests.py:MultiColumnFKTests.test_get_fails_on_multicolumn_mismatch",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests",
      "target": "tests/foreign_object/tests.py:MultiColumnFKTests.test_reverse_query_returns_correct_result",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests",
      "target": "tests/foreign_object/tests.py:MultiColumnFKTests.test_query_filters_correctly",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests",
      "target": "tests/foreign_object/tests.py:MultiColumnFKTests.test_reverse_query_filters_correctly",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests",
      "target": "tests/foreign_object/tests.py:MultiColumnFKTests.test_forward_in_lookup_filters_correctly",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests",
      "target": "tests/foreign_object/tests.py:MultiColumnFKTests.test_double_nested_query",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests",
      "target": "tests/foreign_object/tests.py:MultiColumnFKTests.test_select_related_foreignkey_forward_works",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests",
      "target": "tests/foreign_object/tests.py:MultiColumnFKTests.test_prefetch_foreignkey_forward_works",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests",
      "target": "tests/foreign_object/tests.py:MultiColumnFKTests.test_prefetch_foreignkey_reverse_works",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests",
      "target": "tests/foreign_object/tests.py:MultiColumnFKTests.test_m2m_through_forward_returns_valid_members",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests",
      "target": "tests/foreign_object/tests.py:MultiColumnFKTests.test_m2m_through_reverse_returns_valid_members",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests",
      "target": "tests/foreign_object/tests.py:MultiColumnFKTests.test_m2m_through_forward_ignores_invalid_members",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests",
      "target": "tests/foreign_object/tests.py:MultiColumnFKTests.test_m2m_through_reverse_ignores_invalid_members",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests",
      "target": "tests/foreign_object/tests.py:MultiColumnFKTests.test_m2m_through_on_self_works",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests",
      "target": "tests/foreign_object/tests.py:MultiColumnFKTests.test_m2m_through_on_self_ignores_mismatch_columns",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests",
      "target": "tests/foreign_object/tests.py:MultiColumnFKTests.test_prefetch_related_m2m_forward_works",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests",
      "target": "tests/foreign_object/tests.py:MultiColumnFKTests.test_prefetch_related_m2m_reverse_works",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests",
      "target": "tests/foreign_object/tests.py:MultiColumnFKTests.test_translations",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests",
      "target": "tests/foreign_object/tests.py:MultiColumnFKTests.test_foreign_key_raises_informative_does_not_exist",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests",
      "target": "tests/foreign_object/tests.py:MultiColumnFKTests.test_foreign_key_related_query_name",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests",
      "target": "tests/foreign_object/tests.py:MultiColumnFKTests.test_many_to_many_related_query_name",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests",
      "target": "tests/foreign_object/tests.py:MultiColumnFKTests.test_inheritance",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests",
      "target": "tests/foreign_object/tests.py:MultiColumnFKTests.test_batch_create_foreign_object",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests",
      "target": "tests/foreign_object/tests.py:MultiColumnFKTests.test_isnull_lookup",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests.test_translations",
      "target": "tests/foreign_object/models/article.py:Article",
      "type": "invokes"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests.test_translations",
      "target": "tests/foreign_object/models/article.py:ArticleTranslation",
      "type": "invokes"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests.test_foreign_key_raises_informative_does_not_exist",
      "target": "tests/foreign_object/models/article.py:ArticleTranslation",
      "type": "invokes"
    },
    {
      "source": "tests/foreign_object/tests.py:MultiColumnFKTests.test_batch_create_foreign_object",
      "target": "tests/foreign_object/models/person.py:Person",
      "type": "invokes"
    },
    {
      "source": "tests/foreign_object/tests.py:TestModelCheckTests",
      "target": "tests/foreign_object/tests.py:TestModelCheckTests.test_check_composite_foreign_object",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:TestModelCheckTests",
      "target": "tests/foreign_object/tests.py:TestModelCheckTests.test_check_subset_composite_foreign_object",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:TestModelCheckTests.test_check_composite_foreign_object",
      "target": "tests/foreign_object/tests.py:TestModelCheckTests.test_check_composite_foreign_object.Parent",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:TestModelCheckTests.test_check_composite_foreign_object",
      "target": "tests/foreign_object/tests.py:TestModelCheckTests.test_check_composite_foreign_object.Child",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:TestModelCheckTests.test_check_composite_foreign_object.Parent",
      "target": "tests/foreign_object/tests.py:TestModelCheckTests.test_check_composite_foreign_object.Parent.Meta",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:TestModelCheckTests.test_check_subset_composite_foreign_object",
      "target": "tests/foreign_object/tests.py:TestModelCheckTests.test_check_subset_composite_foreign_object.Parent",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:TestModelCheckTests.test_check_subset_composite_foreign_object",
      "target": "tests/foreign_object/tests.py:TestModelCheckTests.test_check_subset_composite_foreign_object.Child",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:TestModelCheckTests.test_check_subset_composite_foreign_object.Parent",
      "target": "tests/foreign_object/tests.py:TestModelCheckTests.test_check_subset_composite_foreign_object.Parent.Meta",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/tests.py:TestExtraJoinFilterQ",
      "target": "tests/foreign_object/tests.py:TestExtraJoinFilterQ.test_extra_join_filter_q",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models",
      "target": "tests/foreign_object/models/person.py",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models",
      "target": "tests/foreign_object/models/empty_join.py",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models",
      "target": "tests/foreign_object/models/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models",
      "target": "tests/foreign_object/models/customers.py",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models",
      "target": "tests/foreign_object/models/article.py",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/person.py",
      "target": "tests/foreign_object/models/person.py:Country",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/person.py",
      "target": "tests/foreign_object/models/person.py:Person",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/person.py",
      "target": "tests/foreign_object/models/person.py:Group",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/person.py",
      "target": "tests/foreign_object/models/person.py:Membership",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/person.py",
      "target": "tests/foreign_object/models/person.py:Friendship",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/person.py:Country",
      "target": "tests/foreign_object/models/person.py:Country.__str__",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/person.py:Person",
      "target": "tests/foreign_object/models/person.py:Person.Meta",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/person.py:Person",
      "target": "tests/foreign_object/models/person.py:Person.__str__",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/person.py:Group",
      "target": "tests/foreign_object/models/person.py:Group.Meta",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/person.py:Group",
      "target": "tests/foreign_object/models/person.py:Group.__str__",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/person.py:Membership",
      "target": "tests/foreign_object/models/person.py:Membership.Meta",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/person.py:Membership",
      "target": "tests/foreign_object/models/person.py:Membership.__str__",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/empty_join.py",
      "target": "tests/foreign_object/models/empty_join.py:CustomForeignObjectRel",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/empty_join.py",
      "target": "tests/foreign_object/models/empty_join.py:StartsWithRelation",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/empty_join.py",
      "target": "tests/foreign_object/models/empty_join.py:BrokenContainsRelation",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/empty_join.py",
      "target": "tests/foreign_object/models/empty_join.py:SlugPage",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/empty_join.py:CustomForeignObjectRel",
      "target": "tests/foreign_object/models/empty_join.py:CustomForeignObjectRel.foreign_related_fields",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/empty_join.py:CustomForeignObjectRel",
      "target": "tests/foreign_object/models/empty_join.py:CustomForeignObjectRel.get_attname",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/empty_join.py:StartsWithRelation",
      "target": "tests/foreign_object/models/empty_join.py:StartsWithRelation.field",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/empty_join.py:StartsWithRelation",
      "target": "tests/foreign_object/models/empty_join.py:StartsWithRelation.get_extra_restriction",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/empty_join.py:StartsWithRelation",
      "target": "tests/foreign_object/models/empty_join.py:StartsWithRelation.get_joining_columns",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/empty_join.py:StartsWithRelation",
      "target": "tests/foreign_object/models/empty_join.py:StartsWithRelation.get_path_info",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/empty_join.py:StartsWithRelation",
      "target": "tests/foreign_object/models/empty_join.py:StartsWithRelation.get_reverse_path_info",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/empty_join.py:StartsWithRelation",
      "target": "tests/foreign_object/models/empty_join.py:StartsWithRelation.contribute_to_class",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/empty_join.py:BrokenContainsRelation",
      "target": "tests/foreign_object/models/empty_join.py:BrokenContainsRelation.get_extra_restriction",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/empty_join.py:BrokenContainsRelation",
      "target": "tests/foreign_object/models/empty_join.py:StartsWithRelation",
      "type": "inherits"
    },
    {
      "source": "tests/foreign_object/models/empty_join.py:SlugPage",
      "target": "tests/foreign_object/models/empty_join.py:SlugPage.Meta",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/empty_join.py:SlugPage",
      "target": "tests/foreign_object/models/empty_join.py:SlugPage.__str__",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/__init__.py",
      "target": "tests/foreign_object/models/article.py:Article",
      "type": "imports"
    },
    {
      "source": "tests/foreign_object/models/__init__.py",
      "target": "tests/foreign_object/models/article.py:ArticleIdea",
      "type": "imports"
    },
    {
      "source": "tests/foreign_object/models/__init__.py",
      "target": "tests/foreign_object/models/article.py:ArticleTag",
      "type": "imports"
    },
    {
      "source": "tests/foreign_object/models/__init__.py",
      "target": "tests/foreign_object/models/article.py:ArticleTranslation",
      "type": "imports"
    },
    {
      "source": "tests/foreign_object/models/__init__.py",
      "target": "tests/foreign_object/models/article.py:NewsArticle",
      "type": "imports"
    },
    {
      "source": "tests/foreign_object/models/__init__.py",
      "target": "tests/foreign_object/models/customers.py:Address",
      "type": "imports"
    },
    {
      "source": "tests/foreign_object/models/__init__.py",
      "target": "tests/foreign_object/models/customers.py:Contact",
      "type": "imports"
    },
    {
      "source": "tests/foreign_object/models/__init__.py",
      "target": "tests/foreign_object/models/customers.py:Customer",
      "type": "imports"
    },
    {
      "source": "tests/foreign_object/models/__init__.py",
      "target": "tests/foreign_object/models/empty_join.py:SlugPage",
      "type": "imports"
    },
    {
      "source": "tests/foreign_object/models/__init__.py",
      "target": "tests/foreign_object/models/person.py:Country",
      "type": "imports"
    },
    {
      "source": "tests/foreign_object/models/__init__.py",
      "target": "tests/foreign_object/models/person.py:Friendship",
      "type": "imports"
    },
    {
      "source": "tests/foreign_object/models/__init__.py",
      "target": "tests/foreign_object/models/person.py:Group",
      "type": "imports"
    },
    {
      "source": "tests/foreign_object/models/__init__.py",
      "target": "tests/foreign_object/models/person.py:Membership",
      "type": "imports"
    },
    {
      "source": "tests/foreign_object/models/__init__.py",
      "target": "tests/foreign_object/models/person.py:Person",
      "type": "imports"
    },
    {
      "source": "tests/foreign_object/models/customers.py",
      "target": "tests/foreign_object/models/customers.py:Address",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/customers.py",
      "target": "tests/foreign_object/models/customers.py:Customer",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/customers.py",
      "target": "tests/foreign_object/models/customers.py:Contact",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/customers.py:Address",
      "target": "tests/foreign_object/models/customers.py:Address.Meta",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/customers.py:Customer",
      "target": "tests/foreign_object/models/customers.py:Customer.Meta",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/article.py",
      "target": "tests/foreign_object/models/article.py:ArticleTranslationDescriptor",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/article.py",
      "target": "tests/foreign_object/models/article.py:ColConstraint",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/article.py",
      "target": "tests/foreign_object/models/article.py:ActiveTranslationField",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/article.py",
      "target": "tests/foreign_object/models/article.py:ActiveTranslationFieldWithQ",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/article.py",
      "target": "tests/foreign_object/models/article.py:Article",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/article.py",
      "target": "tests/foreign_object/models/article.py:NewsArticle",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/article.py",
      "target": "tests/foreign_object/models/article.py:ArticleTranslation",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/article.py",
      "target": "tests/foreign_object/models/article.py:ArticleTag",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/article.py",
      "target": "tests/foreign_object/models/article.py:ArticleIdea",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/article.py:ArticleTranslationDescriptor",
      "target": "tests/foreign_object/models/article.py:ArticleTranslationDescriptor.__set__",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/article.py:ColConstraint",
      "target": "tests/foreign_object/models/article.py:ColConstraint.as_sql",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/article.py:ActiveTranslationField",
      "target": "tests/foreign_object/models/article.py:ActiveTranslationField.get_extra_restriction",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/article.py:ActiveTranslationField",
      "target": "tests/foreign_object/models/article.py:ActiveTranslationField.get_extra_descriptor_filter",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/article.py:ActiveTranslationField",
      "target": "tests/foreign_object/models/article.py:ActiveTranslationField.contribute_to_class",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/article.py:ActiveTranslationField.get_extra_restriction",
      "target": "tests/foreign_object/models/article.py:ColConstraint",
      "type": "invokes"
    },
    {
      "source": "tests/foreign_object/models/article.py:ActiveTranslationField.contribute_to_class",
      "target": "tests/foreign_object/models/article.py:ArticleTranslationDescriptor",
      "type": "invokes"
    },
    {
      "source": "tests/foreign_object/models/article.py:ActiveTranslationFieldWithQ",
      "target": "tests/foreign_object/models/article.py:ActiveTranslationFieldWithQ.get_extra_descriptor_filter",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/article.py:ActiveTranslationFieldWithQ",
      "target": "tests/foreign_object/models/article.py:ActiveTranslationField",
      "type": "inherits"
    },
    {
      "source": "tests/foreign_object/models/article.py:Article",
      "target": "tests/foreign_object/models/article.py:Article.__str__",
      "type": "contains"
    },
    {
      "source": "tests/foreign_object/models/article.py:NewsArticle",
      "target": "tests/foreign_object/models/article.py:Article",
      "type": "inherits"
    },
    {
      "source": "tests/foreign_object/models/article.py:ArticleTranslation",
      "target": "tests/foreign_object/models/article.py:ArticleTranslation.Meta",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin",
      "target": "tests/generic_inline_admin/models.py",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin",
      "target": "tests/generic_inline_admin/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin",
      "target": "tests/generic_inline_admin/admin.py",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin",
      "target": "tests/generic_inline_admin/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin",
      "target": "tests/generic_inline_admin/urls.py",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/models.py",
      "target": "tests/generic_inline_admin/models.py:Episode",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/models.py",
      "target": "tests/generic_inline_admin/models.py:Media",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/models.py",
      "target": "tests/generic_inline_admin/models.py:Category",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/models.py",
      "target": "tests/generic_inline_admin/models.py:PhoneNumber",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/models.py",
      "target": "tests/generic_inline_admin/models.py:Contact",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/models.py",
      "target": "tests/generic_inline_admin/models.py:EpisodePermanent",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/models.py:Media",
      "target": "tests/generic_inline_admin/models.py:Media.__str__",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/models.py:PhoneNumber",
      "target": "tests/generic_inline_admin/models.py:PhoneNumber.Meta",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/models.py:EpisodePermanent",
      "target": "tests/generic_inline_admin/models.py:Episode",
      "type": "inherits"
    },
    {
      "source": "tests/generic_inline_admin/admin.py",
      "target": "tests/generic_inline_admin/admin.py:MediaInline",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/admin.py",
      "target": "tests/generic_inline_admin/admin.py:EpisodeAdmin",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/admin.py",
      "target": "tests/generic_inline_admin/admin.py:PhoneNumberInline",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/admin.py",
      "target": "tests/generic_inline_admin/admin.py:MediaPermanentInline",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/admin.py",
      "target": "tests/generic_inline_admin/models.py:Category",
      "type": "imports"
    },
    {
      "source": "tests/generic_inline_admin/admin.py",
      "target": "tests/generic_inline_admin/models.py:Contact",
      "type": "imports"
    },
    {
      "source": "tests/generic_inline_admin/admin.py",
      "target": "tests/generic_inline_admin/models.py:Episode",
      "type": "imports"
    },
    {
      "source": "tests/generic_inline_admin/admin.py",
      "target": "tests/generic_inline_admin/models.py:EpisodePermanent",
      "type": "imports"
    },
    {
      "source": "tests/generic_inline_admin/admin.py",
      "target": "tests/generic_inline_admin/models.py:Media",
      "type": "imports"
    },
    {
      "source": "tests/generic_inline_admin/admin.py",
      "target": "tests/generic_inline_admin/models.py:PhoneNumber",
      "type": "imports"
    },
    {
      "source": "tests/generic_inline_admin/tests.py",
      "target": "tests/generic_inline_admin/tests.py:TestDataMixin",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py",
      "target": "tests/generic_inline_admin/tests.py:GenericAdminViewTest",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminWithUniqueTogetherTest",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py",
      "target": "tests/generic_inline_admin/tests.py:NoInlineDeletionTest",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py",
      "target": "tests/generic_inline_admin/tests.py:MockRequest",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py",
      "target": "tests/generic_inline_admin/tests.py:MockSuperUser",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py",
      "target": "tests/generic_inline_admin/admin.py:MediaInline",
      "type": "imports"
    },
    {
      "source": "tests/generic_inline_admin/tests.py",
      "target": "tests/generic_inline_admin/admin.py:MediaPermanentInline",
      "type": "imports"
    },
    {
      "source": "tests/generic_inline_admin/tests.py",
      "target": "tests/generic_inline_admin/admin.py",
      "type": "imports"
    },
    {
      "source": "tests/generic_inline_admin/tests.py",
      "target": "tests/generic_inline_admin/models.py:Category",
      "type": "imports"
    },
    {
      "source": "tests/generic_inline_admin/tests.py",
      "target": "tests/generic_inline_admin/models.py:Episode",
      "type": "imports"
    },
    {
      "source": "tests/generic_inline_admin/tests.py",
      "target": "tests/generic_inline_admin/models.py:EpisodePermanent",
      "type": "imports"
    },
    {
      "source": "tests/generic_inline_admin/tests.py",
      "target": "tests/generic_inline_admin/models.py:Media",
      "type": "imports"
    },
    {
      "source": "tests/generic_inline_admin/tests.py",
      "target": "tests/generic_inline_admin/models.py:PhoneNumber",
      "type": "imports"
    },
    {
      "source": "tests/generic_inline_admin/tests.py",
      "target": "tests/generic_inline_admin/models.py:Contact",
      "type": "imports"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:TestDataMixin",
      "target": "tests/generic_inline_admin/tests.py:TestDataMixin.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericAdminViewTest",
      "target": "tests/generic_inline_admin/tests.py:GenericAdminViewTest.setUp",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericAdminViewTest",
      "target": "tests/generic_inline_admin/tests.py:GenericAdminViewTest.test_basic_add_GET",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericAdminViewTest",
      "target": "tests/generic_inline_admin/tests.py:GenericAdminViewTest.test_basic_edit_GET",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericAdminViewTest",
      "target": "tests/generic_inline_admin/tests.py:GenericAdminViewTest.test_basic_add_POST",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericAdminViewTest",
      "target": "tests/generic_inline_admin/tests.py:GenericAdminViewTest.test_basic_edit_POST",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericAdminViewTest",
      "target": "tests/generic_inline_admin/tests.py:TestDataMixin",
      "type": "inherits"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericAdminViewTest.setUp",
      "target": "tests/generic_inline_admin/models.py:Media",
      "type": "invokes"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.setUp",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest._create_object",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_no_param",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_extra_param",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.testMaxNumParam",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_min_num_param",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_get_extra",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_get_min_num",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_get_max_num",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest",
      "target": "tests/generic_inline_admin/tests.py:TestDataMixin",
      "type": "inherits"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_no_param",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest._create_object",
      "type": "invokes"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_extra_param",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_extra_param.ExtraInline",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_extra_param",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest._create_object",
      "type": "invokes"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.testMaxNumParam",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.testMaxNumParam.MaxNumInline",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.testMaxNumParam",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest._create_object",
      "type": "invokes"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_min_num_param",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_min_num_param.MinNumInline",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_min_num_param",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest._create_object",
      "type": "invokes"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_get_extra",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_get_extra.GetExtraInline",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_get_extra",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest._create_object",
      "type": "invokes"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_get_extra.GetExtraInline",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_get_extra.GetExtraInline.get_extra",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_get_min_num",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_get_min_num.GetMinNumInline",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_get_min_num",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest._create_object",
      "type": "invokes"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_get_min_num.GetMinNumInline",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_get_min_num.GetMinNumInline.get_min_num",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_get_max_num",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_get_max_num.GetMaxNumInline",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_get_max_num",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest._create_object",
      "type": "invokes"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_get_max_num.GetMaxNumInline",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminParametersTest.test_get_max_num.GetMaxNumInline.get_max_num",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminWithUniqueTogetherTest",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminWithUniqueTogetherTest.setUp",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminWithUniqueTogetherTest",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminWithUniqueTogetherTest.test_add",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminWithUniqueTogetherTest",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineAdminWithUniqueTogetherTest.test_delete",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminWithUniqueTogetherTest",
      "target": "tests/generic_inline_admin/tests.py:TestDataMixin",
      "type": "inherits"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineAdminWithUniqueTogetherTest.test_delete",
      "target": "tests/generic_inline_admin/models.py:Contact",
      "type": "imports"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:NoInlineDeletionTest",
      "target": "tests/generic_inline_admin/tests.py:NoInlineDeletionTest.test_no_deletion",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:NoInlineDeletionTest.test_no_deletion",
      "target": "tests/generic_inline_admin/admin.py:MediaPermanentInline",
      "type": "invokes"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:MockSuperUser",
      "target": "tests/generic_inline_admin/tests.py:MockSuperUser.has_perm",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.setUp",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_formset_kwargs",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude_with_readonly",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_fieldsets",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_formsets_with_inlines_returns_tuples",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_formset_kwargs",
      "target": "tests/generic_inline_admin/admin.py:MediaInline",
      "type": "invokes"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude_with_readonly",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude_with_readonly.MediaForm",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude_with_readonly",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude_with_readonly.MediaInline",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude_with_readonly",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude_with_readonly.EpisodeAdmin",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude_with_readonly",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude_with_readonly.EpisodeAdmin",
      "type": "invokes"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude_with_readonly",
      "target": "tests/generic_inline_admin/admin.py:EpisodeAdmin",
      "type": "invokes"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude_with_readonly.MediaForm",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude_with_readonly.MediaForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude.MediaForm",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude.MediaInline",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude.MediaInline",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude.EpisodeAdmin",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude.EpisodeAdmin",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude.EpisodeAdmin",
      "type": "invokes"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude",
      "target": "tests/generic_inline_admin/admin.py:EpisodeAdmin",
      "type": "invokes"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude.MediaForm",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_custom_form_meta_exclude.MediaForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_fieldsets",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_fieldsets.MediaForm",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_fieldsets",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_fieldsets.MediaInline",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_fieldsets",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_fieldsets.MediaInline",
      "type": "invokes"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_fieldsets",
      "target": "tests/generic_inline_admin/admin.py:MediaInline",
      "type": "invokes"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_fieldsets.MediaForm",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_fieldsets.MediaForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_fieldsets.MediaInline",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_fieldsets.MediaInline.get_fieldsets",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_formsets_with_inlines_returns_tuples",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_formsets_with_inlines_returns_tuples.MediaForm",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_formsets_with_inlines_returns_tuples",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_formsets_with_inlines_returns_tuples.MediaInline",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_formsets_with_inlines_returns_tuples",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_formsets_with_inlines_returns_tuples.AlternateInline",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_formsets_with_inlines_returns_tuples",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_formsets_with_inlines_returns_tuples.EpisodeAdmin",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_formsets_with_inlines_returns_tuples",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_formsets_with_inlines_returns_tuples.EpisodeAdmin",
      "type": "invokes"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_formsets_with_inlines_returns_tuples",
      "target": "tests/generic_inline_admin/admin.py:EpisodeAdmin",
      "type": "invokes"
    },
    {
      "source": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_formsets_with_inlines_returns_tuples.MediaForm",
      "target": "tests/generic_inline_admin/tests.py:GenericInlineModelAdminTest.test_get_formsets_with_inlines_returns_tuples.MediaForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/generic_inline_admin/urls.py",
      "target": "tests/generic_inline_admin/admin.py",
      "type": "imports"
    },
    {
      "source": "tests/custom_methods",
      "target": "tests/custom_methods/models.py",
      "type": "contains"
    },
    {
      "source": "tests/custom_methods",
      "target": "tests/custom_methods/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/custom_methods",
      "target": "tests/custom_methods/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/custom_methods/models.py",
      "target": "tests/custom_methods/models.py:Article",
      "type": "contains"
    },
    {
      "source": "tests/custom_methods/models.py:Article",
      "target": "tests/custom_methods/models.py:Article.__str__",
      "type": "contains"
    },
    {
      "source": "tests/custom_methods/models.py:Article",
      "target": "tests/custom_methods/models.py:Article.was_published_today",
      "type": "contains"
    },
    {
      "source": "tests/custom_methods/models.py:Article",
      "target": "tests/custom_methods/models.py:Article.articles_from_same_day_1",
      "type": "contains"
    },
    {
      "source": "tests/custom_methods/models.py:Article",
      "target": "tests/custom_methods/models.py:Article.articles_from_same_day_2",
      "type": "contains"
    },
    {
      "source": "tests/custom_methods/tests.py",
      "target": "tests/custom_methods/tests.py:MethodsTests",
      "type": "contains"
    },
    {
      "source": "tests/custom_methods/tests.py",
      "target": "tests/custom_methods/models.py:Article",
      "type": "imports"
    },
    {
      "source": "tests/custom_methods/tests.py:MethodsTests",
      "target": "tests/custom_methods/tests.py:MethodsTests.test_custom_methods",
      "type": "contains"
    },
    {
      "source": "tests/custom_methods/tests.py:MethodsTests.test_custom_methods",
      "target": "tests/custom_methods/models.py:Article.articles_from_same_day_2",
      "type": "invokes"
    },
    {
      "source": "tests/custom_methods/tests.py:MethodsTests.test_custom_methods",
      "target": "tests/custom_methods/models.py:Article.articles_from_same_day_1",
      "type": "invokes"
    },
    {
      "source": "tests/custom_methods/tests.py:MethodsTests.test_custom_methods",
      "target": "tests/custom_methods/models.py:Article.was_published_today",
      "type": "invokes"
    },
    {
      "source": "tests/model_formsets_regress",
      "target": "tests/model_formsets_regress/models.py",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress",
      "target": "tests/model_formsets_regress/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress",
      "target": "tests/model_formsets_regress/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/models.py",
      "target": "tests/model_formsets_regress/models.py:User",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/models.py",
      "target": "tests/model_formsets_regress/models.py:UserSite",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/models.py",
      "target": "tests/model_formsets_regress/models.py:UserProfile",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/models.py",
      "target": "tests/model_formsets_regress/models.py:UserPreferences",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/models.py",
      "target": "tests/model_formsets_regress/models.py:ProfileNetwork",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/models.py",
      "target": "tests/model_formsets_regress/models.py:Place",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/models.py",
      "target": "tests/model_formsets_regress/models.py:Restaurant",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/models.py",
      "target": "tests/model_formsets_regress/models.py:Manager",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/models.py",
      "target": "tests/model_formsets_regress/models.py:Network",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/models.py",
      "target": "tests/model_formsets_regress/models.py:Host",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/models.py:Restaurant",
      "target": "tests/model_formsets_regress/models.py:Place",
      "type": "inherits"
    },
    {
      "source": "tests/model_formsets_regress/models.py:Host",
      "target": "tests/model_formsets_regress/models.py:Host.__str__",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py",
      "target": "tests/model_formsets_regress/tests.py:InlineFormsetTests",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py",
      "target": "tests/model_formsets_regress/tests.py:FormsetTests",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py",
      "target": "tests/model_formsets_regress/tests.py:CustomWidget",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py",
      "target": "tests/model_formsets_regress/tests.py:UserSiteForm",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py",
      "target": "tests/model_formsets_regress/tests.py:Callback",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py",
      "target": "tests/model_formsets_regress/tests.py:FormfieldCallbackTests",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py",
      "target": "tests/model_formsets_regress/tests.py:BaseCustomDeleteFormSet",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py",
      "target": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py",
      "target": "tests/model_formsets_regress/tests.py:RedeleteTests",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py",
      "target": "tests/model_formsets_regress/models.py:Host",
      "type": "imports"
    },
    {
      "source": "tests/model_formsets_regress/tests.py",
      "target": "tests/model_formsets_regress/models.py:Manager",
      "type": "imports"
    },
    {
      "source": "tests/model_formsets_regress/tests.py",
      "target": "tests/model_formsets_regress/models.py:Network",
      "type": "imports"
    },
    {
      "source": "tests/model_formsets_regress/tests.py",
      "target": "tests/model_formsets_regress/models.py:ProfileNetwork",
      "type": "imports"
    },
    {
      "source": "tests/model_formsets_regress/tests.py",
      "target": "tests/model_formsets_regress/models.py:Restaurant",
      "type": "imports"
    },
    {
      "source": "tests/model_formsets_regress/tests.py",
      "target": "tests/model_formsets_regress/models.py:User",
      "type": "imports"
    },
    {
      "source": "tests/model_formsets_regress/tests.py",
      "target": "tests/model_formsets_regress/models.py:UserPreferences",
      "type": "imports"
    },
    {
      "source": "tests/model_formsets_regress/tests.py",
      "target": "tests/model_formsets_regress/models.py:UserProfile",
      "type": "imports"
    },
    {
      "source": "tests/model_formsets_regress/tests.py",
      "target": "tests/model_formsets_regress/models.py:UserSite",
      "type": "imports"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:InlineFormsetTests",
      "target": "tests/model_formsets_regress/tests.py:InlineFormsetTests.test_formset_over_to_field",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:InlineFormsetTests",
      "target": "tests/model_formsets_regress/tests.py:InlineFormsetTests.test_formset_over_inherited_model",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:InlineFormsetTests",
      "target": "tests/model_formsets_regress/tests.py:InlineFormsetTests.test_inline_model_with_to_field",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:InlineFormsetTests",
      "target": "tests/model_formsets_regress/tests.py:InlineFormsetTests.test_inline_model_with_primary_to_field",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:InlineFormsetTests",
      "target": "tests/model_formsets_regress/tests.py:InlineFormsetTests.test_inline_model_with_to_field_to_rel",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:InlineFormsetTests",
      "target": "tests/model_formsets_regress/tests.py:InlineFormsetTests.test_formset_with_none_instance",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:InlineFormsetTests",
      "target": "tests/model_formsets_regress/tests.py:InlineFormsetTests.test_empty_fields_on_modelformset",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:InlineFormsetTests",
      "target": "tests/model_formsets_regress/tests.py:InlineFormsetTests.test_save_as_new_with_new_inlines",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:InlineFormsetTests",
      "target": "tests/model_formsets_regress/tests.py:InlineFormsetTests.test_initial_data",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:InlineFormsetTests.test_formset_over_to_field",
      "target": "tests/model_formsets_regress/models.py:User",
      "type": "invokes"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:InlineFormsetTests.test_formset_over_inherited_model",
      "target": "tests/model_formsets_regress/models.py:User",
      "type": "invokes"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:InlineFormsetTests.test_formset_over_inherited_model",
      "target": "tests/model_formsets_regress/models.py:Restaurant",
      "type": "invokes"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:FormsetTests",
      "target": "tests/model_formsets_regress/tests.py:FormsetTests.test_error_class",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:FormsetTests",
      "target": "tests/model_formsets_regress/tests.py:FormsetTests.test_initial_data",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:FormsetTests",
      "target": "tests/model_formsets_regress/tests.py:FormsetTests.test_extraneous_query_is_not_run",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:UserSiteForm",
      "target": "tests/model_formsets_regress/tests.py:UserSiteForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:Callback",
      "target": "tests/model_formsets_regress/tests.py:Callback.__call__",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:FormfieldCallbackTests",
      "target": "tests/model_formsets_regress/tests.py:FormfieldCallbackTests.test_inlineformset_factory_default",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:FormfieldCallbackTests",
      "target": "tests/model_formsets_regress/tests.py:FormfieldCallbackTests.test_modelformset_factory_default",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:FormfieldCallbackTests",
      "target": "tests/model_formsets_regress/tests.py:FormfieldCallbackTests.assertCallbackCalled",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:FormfieldCallbackTests",
      "target": "tests/model_formsets_regress/tests.py:FormfieldCallbackTests.test_inlineformset_custom_callback",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:FormfieldCallbackTests",
      "target": "tests/model_formsets_regress/tests.py:FormfieldCallbackTests.test_modelformset_custom_callback",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:FormfieldCallbackTests.test_inlineformset_custom_callback",
      "target": "tests/model_formsets_regress/tests.py:Callback",
      "type": "invokes"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:FormfieldCallbackTests.test_inlineformset_custom_callback",
      "target": "tests/model_formsets_regress/tests.py:FormfieldCallbackTests.assertCallbackCalled",
      "type": "invokes"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:FormfieldCallbackTests.test_modelformset_custom_callback",
      "target": "tests/model_formsets_regress/tests.py:Callback",
      "type": "invokes"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:FormfieldCallbackTests.test_modelformset_custom_callback",
      "target": "tests/model_formsets_regress/tests.py:FormfieldCallbackTests.assertCallbackCalled",
      "type": "invokes"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:BaseCustomDeleteFormSet",
      "target": "tests/model_formsets_regress/tests.py:BaseCustomDeleteFormSet.add_fields",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:BaseCustomDeleteFormSet",
      "target": "tests/model_formsets_regress/tests.py:BaseCustomDeleteFormSet._should_delete_form",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:BaseCustomDeleteFormSet._should_delete_form",
      "target": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests.CustomDeleteUserForm.should_delete",
      "type": "invokes"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests",
      "target": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests.BaseCustomDeleteModelFormSet",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests",
      "target": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests.CustomDeleteUserForm",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests",
      "target": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests.test_init_database",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests",
      "target": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests.test_no_delete",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests",
      "target": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests.test_all_delete",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests",
      "target": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests.test_custom_delete",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests.BaseCustomDeleteModelFormSet",
      "target": "tests/model_formsets_regress/tests.py:BaseCustomDeleteFormSet",
      "type": "inherits"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests.CustomDeleteUserForm",
      "target": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests.CustomDeleteUserForm.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests.CustomDeleteUserForm",
      "target": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests.CustomDeleteUserForm.should_delete",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests.test_no_delete",
      "target": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests.test_init_database",
      "type": "invokes"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests.test_all_delete",
      "target": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests.test_init_database",
      "type": "invokes"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests.test_custom_delete",
      "target": "tests/model_formsets_regress/tests.py:FormfieldShouldDeleteFormTests.test_init_database",
      "type": "invokes"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:RedeleteTests",
      "target": "tests/model_formsets_regress/tests.py:RedeleteTests.test_resubmit",
      "type": "contains"
    },
    {
      "source": "tests/model_formsets_regress/tests.py:RedeleteTests",
      "target": "tests/model_formsets_regress/tests.py:RedeleteTests.test_delete_already_deleted",
      "type": "contains"
    },
    {
      "source": "tests/signing",
      "target": "tests/signing/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/signing",
      "target": "tests/signing/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/signing/tests.py",
      "target": "tests/signing/tests.py:TestSigner",
      "type": "contains"
    },
    {
      "source": "tests/signing/tests.py",
      "target": "tests/signing/tests.py:TestTimestampSigner",
      "type": "contains"
    },
    {
      "source": "tests/signing/tests.py:TestSigner",
      "target": "tests/signing/tests.py:TestSigner.test_signature",
      "type": "contains"
    },
    {
      "source": "tests/signing/tests.py:TestSigner",
      "target": "tests/signing/tests.py:TestSigner.test_signature_with_salt",
      "type": "contains"
    },
    {
      "source": "tests/signing/tests.py:TestSigner",
      "target": "tests/signing/tests.py:TestSigner.test_sign_unsign",
      "type": "contains"
    },
    {
      "source": "tests/signing/tests.py:TestSigner",
      "target": "tests/signing/tests.py:TestSigner.test_unsign_detects_tampering",
      "type": "contains"
    },
    {
      "source": "tests/signing/tests.py:TestSigner",
      "target": "tests/signing/tests.py:TestSigner.test_dumps_loads",
      "type": "contains"
    },
    {
      "source": "tests/signing/tests.py:TestSigner",
      "target": "tests/signing/tests.py:TestSigner.test_decode_detects_tampering",
      "type": "contains"
    },
    {
      "source": "tests/signing/tests.py:TestSigner",
      "target": "tests/signing/tests.py:TestSigner.test_works_with_non_ascii_keys",
      "type": "contains"
    },
    {
      "source": "tests/signing/tests.py:TestSigner",
      "target": "tests/signing/tests.py:TestSigner.test_valid_sep",
      "type": "contains"
    },
    {
      "source": "tests/signing/tests.py:TestSigner",
      "target": "tests/signing/tests.py:TestSigner.test_invalid_sep",
      "type": "contains"
    },
    {
      "source": "tests/signing/tests.py:TestTimestampSigner",
      "target": "tests/signing/tests.py:TestTimestampSigner.test_timestamp_signer",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions",
      "target": "tests/middleware_exceptions/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions",
      "target": "tests/middleware_exceptions/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions",
      "target": "tests/middleware_exceptions/urls.py",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions",
      "target": "tests/middleware_exceptions/middleware.py",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions",
      "target": "tests/middleware_exceptions/views.py",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/tests.py",
      "target": "tests/middleware_exceptions/tests.py:MiddlewareTests",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/tests.py",
      "target": "tests/middleware_exceptions/tests.py:RootUrlconfTests",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/tests.py",
      "target": "tests/middleware_exceptions/tests.py:MyMiddleware",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/tests.py",
      "target": "tests/middleware_exceptions/tests.py:MyMiddlewareWithExceptionMessage",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/tests.py",
      "target": "tests/middleware_exceptions/tests.py:MiddlewareNotUsedTests",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/tests.py",
      "target": "tests/middleware_exceptions/middleware.py",
      "type": "imports"
    },
    {
      "source": "tests/middleware_exceptions/tests.py:MiddlewareTests",
      "target": "tests/middleware_exceptions/tests.py:MiddlewareTests.tearDown",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/tests.py:MiddlewareTests",
      "target": "tests/middleware_exceptions/tests.py:MiddlewareTests.test_process_view_return_none",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/tests.py:MiddlewareTests",
      "target": "tests/middleware_exceptions/tests.py:MiddlewareTests.test_process_view_return_response",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/tests.py:MiddlewareTests",
      "target": "tests/middleware_exceptions/tests.py:MiddlewareTests.test_templateresponse_from_process_view_rendered",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/tests.py:MiddlewareTests",
      "target": "tests/middleware_exceptions/tests.py:MiddlewareTests.test_templateresponse_from_process_view_passed_to_process_template_response",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/tests.py:MiddlewareTests",
      "target": "tests/middleware_exceptions/tests.py:MiddlewareTests.test_process_template_response",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/tests.py:MiddlewareTests",
      "target": "tests/middleware_exceptions/tests.py:MiddlewareTests.test_process_template_response_returns_none",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/tests.py:MiddlewareTests",
      "target": "tests/middleware_exceptions/tests.py:MiddlewareTests.test_view_exception_converted_before_middleware",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/tests.py:MiddlewareTests",
      "target": "tests/middleware_exceptions/tests.py:MiddlewareTests.test_view_exception_handled_by_process_exception",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/tests.py:MiddlewareTests",
      "target": "tests/middleware_exceptions/tests.py:MiddlewareTests.test_response_from_process_exception_short_circuits_remainder",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/tests.py:MiddlewareTests",
      "target": "tests/middleware_exceptions/tests.py:MiddlewareTests.test_exception_in_middleware_converted_before_prior_middleware",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/tests.py:MiddlewareTests",
      "target": "tests/middleware_exceptions/tests.py:MiddlewareTests.test_exception_in_render_passed_to_process_exception",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/tests.py:RootUrlconfTests",
      "target": "tests/middleware_exceptions/tests.py:RootUrlconfTests.test_missing_root_urlconf",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/tests.py:MyMiddleware",
      "target": "tests/middleware_exceptions/tests.py:MyMiddleware.process_request",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/tests.py:MyMiddlewareWithExceptionMessage",
      "target": "tests/middleware_exceptions/tests.py:MyMiddlewareWithExceptionMessage.process_request",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/tests.py:MiddlewareNotUsedTests",
      "target": "tests/middleware_exceptions/tests.py:MiddlewareNotUsedTests.test_raise_exception",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/tests.py:MiddlewareNotUsedTests",
      "target": "tests/middleware_exceptions/tests.py:MiddlewareNotUsedTests.test_log",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/tests.py:MiddlewareNotUsedTests",
      "target": "tests/middleware_exceptions/tests.py:MiddlewareNotUsedTests.test_log_custom_message",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/tests.py:MiddlewareNotUsedTests",
      "target": "tests/middleware_exceptions/tests.py:MiddlewareNotUsedTests.test_do_not_log_when_debug_is_false",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/tests.py:MiddlewareNotUsedTests.test_raise_exception",
      "target": "tests/middleware_exceptions/tests.py:MyMiddleware",
      "type": "invokes"
    },
    {
      "source": "tests/middleware_exceptions/tests.py:MiddlewareNotUsedTests.test_raise_exception",
      "target": "tests/middleware_exceptions/tests.py:MyMiddleware.process_request",
      "type": "invokes"
    },
    {
      "source": "tests/middleware_exceptions/tests.py:MiddlewareNotUsedTests.test_raise_exception",
      "target": "tests/middleware_exceptions/tests.py:MyMiddlewareWithExceptionMessage.process_request",
      "type": "invokes"
    },
    {
      "source": "tests/middleware_exceptions/urls.py",
      "target": "tests/middleware_exceptions/views.py",
      "type": "imports"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py",
      "target": "tests/middleware_exceptions/middleware.py:BaseMiddleware",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py",
      "target": "tests/middleware_exceptions/middleware.py:ProcessExceptionMiddleware",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py",
      "target": "tests/middleware_exceptions/middleware.py:ProcessExceptionLogMiddleware",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py",
      "target": "tests/middleware_exceptions/middleware.py:ProcessExceptionExcMiddleware",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py",
      "target": "tests/middleware_exceptions/middleware.py:ProcessViewMiddleware",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py",
      "target": "tests/middleware_exceptions/middleware.py:ProcessViewNoneMiddleware",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py",
      "target": "tests/middleware_exceptions/middleware.py:ProcessViewTemplateResponseMiddleware",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py",
      "target": "tests/middleware_exceptions/middleware.py:TemplateResponseMiddleware",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py",
      "target": "tests/middleware_exceptions/middleware.py:LogMiddleware",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py",
      "target": "tests/middleware_exceptions/middleware.py:NoTemplateResponseMiddleware",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py",
      "target": "tests/middleware_exceptions/middleware.py:NotFoundMiddleware",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py:BaseMiddleware",
      "target": "tests/middleware_exceptions/middleware.py:BaseMiddleware.__call__",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py:ProcessExceptionMiddleware",
      "target": "tests/middleware_exceptions/middleware.py:ProcessExceptionMiddleware.process_exception",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py:ProcessExceptionMiddleware",
      "target": "tests/middleware_exceptions/middleware.py:BaseMiddleware",
      "type": "inherits"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py:ProcessExceptionLogMiddleware",
      "target": "tests/middleware_exceptions/middleware.py:ProcessExceptionLogMiddleware.process_exception",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py:ProcessExceptionLogMiddleware",
      "target": "tests/middleware_exceptions/middleware.py:BaseMiddleware",
      "type": "inherits"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py:ProcessExceptionExcMiddleware",
      "target": "tests/middleware_exceptions/middleware.py:ProcessExceptionExcMiddleware.process_exception",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py:ProcessExceptionExcMiddleware",
      "target": "tests/middleware_exceptions/middleware.py:BaseMiddleware",
      "type": "inherits"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py:ProcessViewMiddleware",
      "target": "tests/middleware_exceptions/middleware.py:ProcessViewMiddleware.process_view",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py:ProcessViewMiddleware",
      "target": "tests/middleware_exceptions/middleware.py:BaseMiddleware",
      "type": "inherits"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py:ProcessViewNoneMiddleware",
      "target": "tests/middleware_exceptions/middleware.py:ProcessViewNoneMiddleware.process_view",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py:ProcessViewNoneMiddleware",
      "target": "tests/middleware_exceptions/middleware.py:BaseMiddleware",
      "type": "inherits"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py:ProcessViewTemplateResponseMiddleware",
      "target": "tests/middleware_exceptions/middleware.py:ProcessViewTemplateResponseMiddleware.process_view",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py:ProcessViewTemplateResponseMiddleware",
      "target": "tests/middleware_exceptions/middleware.py:BaseMiddleware",
      "type": "inherits"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py:TemplateResponseMiddleware",
      "target": "tests/middleware_exceptions/middleware.py:TemplateResponseMiddleware.process_template_response",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py:TemplateResponseMiddleware",
      "target": "tests/middleware_exceptions/middleware.py:BaseMiddleware",
      "type": "inherits"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py:LogMiddleware",
      "target": "tests/middleware_exceptions/middleware.py:LogMiddleware.__call__",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py:LogMiddleware",
      "target": "tests/middleware_exceptions/middleware.py:BaseMiddleware",
      "type": "inherits"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py:NoTemplateResponseMiddleware",
      "target": "tests/middleware_exceptions/middleware.py:NoTemplateResponseMiddleware.process_template_response",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py:NoTemplateResponseMiddleware",
      "target": "tests/middleware_exceptions/middleware.py:BaseMiddleware",
      "type": "inherits"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py:NotFoundMiddleware",
      "target": "tests/middleware_exceptions/middleware.py:NotFoundMiddleware.__call__",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/middleware.py:NotFoundMiddleware",
      "target": "tests/middleware_exceptions/middleware.py:BaseMiddleware",
      "type": "inherits"
    },
    {
      "source": "tests/middleware_exceptions/views.py",
      "target": "tests/middleware_exceptions/views.py:normal_view",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/views.py",
      "target": "tests/middleware_exceptions/views.py:template_response",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/views.py",
      "target": "tests/middleware_exceptions/views.py:server_error",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/views.py",
      "target": "tests/middleware_exceptions/views.py:permission_denied",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/views.py",
      "target": "tests/middleware_exceptions/views.py:exception_in_render",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/views.py:exception_in_render",
      "target": "tests/middleware_exceptions/views.py:exception_in_render.CustomHttpResponse",
      "type": "contains"
    },
    {
      "source": "tests/middleware_exceptions/views.py:exception_in_render",
      "target": "tests/middleware_exceptions/views.py:exception_in_render.CustomHttpResponse",
      "type": "invokes"
    },
    {
      "source": "tests/middleware_exceptions/views.py:exception_in_render.CustomHttpResponse",
      "target": "tests/middleware_exceptions/views.py:exception_in_render.CustomHttpResponse.render",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters",
      "target": "tests/admin_filters/models.py",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters",
      "target": "tests/admin_filters/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters",
      "target": "tests/admin_filters/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/models.py",
      "target": "tests/admin_filters/models.py:Book",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/models.py",
      "target": "tests/admin_filters/models.py:Department",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/models.py",
      "target": "tests/admin_filters/models.py:Employee",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/models.py",
      "target": "tests/admin_filters/models.py:TaggedItem",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/models.py",
      "target": "tests/admin_filters/models.py:Bookmark",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/models.py:Book",
      "target": "tests/admin_filters/models.py:Book.__str__",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/models.py:Department",
      "target": "tests/admin_filters/models.py:Department.__str__",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/models.py:Employee",
      "target": "tests/admin_filters/models.py:Employee.__str__",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/models.py:TaggedItem",
      "target": "tests/admin_filters/models.py:TaggedItem.__str__",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/models.py:Bookmark",
      "target": "tests/admin_filters/models.py:Bookmark.__str__",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:select_by",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:DecadeListFilter",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:NotNinetiesListFilter",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:DecadeListFilterWithTitleAndParameter",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:DecadeListFilterWithoutTitle",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:DecadeListFilterWithoutParameter",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:DecadeListFilterWithNoneReturningLookups",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:DecadeListFilterWithFailingQueryset",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:DecadeListFilterWithQuerysetBasedLookups",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:DecadeListFilterParameterEndsWith__In",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:DecadeListFilterParameterEndsWith__Isnull",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:DepartmentListFilterLookupWithNonStringValue",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:DepartmentListFilterLookupWithUnderscoredParameter",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:DepartmentListFilterLookupWithDynamicValue",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:CustomUserAdmin",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:BookAdmin",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:BookAdmin2",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:BookAdminWithTupleBooleanFilter",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:BookAdminWithUnderscoreLookupAndTuple",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:BookAdminWithCustomQueryset",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:BookAdminRelatedOnlyFilter",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:DecadeFilterBookAdmin",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:NotNinetiesListFilterAdmin",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:DecadeFilterBookAdminWithoutTitle",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:DecadeFilterBookAdminWithoutParameter",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:DecadeFilterBookAdminWithNoneReturningLookups",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:DecadeFilterBookAdminWithFailingQueryset",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:DecadeFilterBookAdminWithQuerysetBasedLookups",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:DecadeFilterBookAdminParameterEndsWith__In",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:DecadeFilterBookAdminParameterEndsWith__Isnull",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:EmployeeAdmin",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:DepartmentFilterEmployeeAdmin",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:DepartmentFilterUnderscoredEmployeeAdmin",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:DepartmentFilterDynamicValueBookAdmin",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:BookmarkAdminGenericRelation",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/tests.py:ListFiltersTests",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/models.py:Book",
      "type": "imports"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/models.py:Bookmark",
      "type": "imports"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/models.py:Department",
      "type": "imports"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/models.py:Employee",
      "type": "imports"
    },
    {
      "source": "tests/admin_filters/tests.py",
      "target": "tests/admin_filters/models.py:TaggedItem",
      "type": "imports"
    },
    {
      "source": "tests/admin_filters/tests.py:DecadeListFilter",
      "target": "tests/admin_filters/tests.py:DecadeListFilter.lookups",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:DecadeListFilter",
      "target": "tests/admin_filters/tests.py:DecadeListFilter.queryset",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:NotNinetiesListFilter",
      "target": "tests/admin_filters/tests.py:NotNinetiesListFilter.lookups",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:NotNinetiesListFilter",
      "target": "tests/admin_filters/tests.py:NotNinetiesListFilter.queryset",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:DecadeListFilterWithTitleAndParameter",
      "target": "tests/admin_filters/tests.py:DecadeListFilter",
      "type": "inherits"
    },
    {
      "source": "tests/admin_filters/tests.py:DecadeListFilterWithoutTitle",
      "target": "tests/admin_filters/tests.py:DecadeListFilter",
      "type": "inherits"
    },
    {
      "source": "tests/admin_filters/tests.py:DecadeListFilterWithoutParameter",
      "target": "tests/admin_filters/tests.py:DecadeListFilter",
      "type": "inherits"
    },
    {
      "source": "tests/admin_filters/tests.py:DecadeListFilterWithNoneReturningLookups",
      "target": "tests/admin_filters/tests.py:DecadeListFilterWithNoneReturningLookups.lookups",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:DecadeListFilterWithNoneReturningLookups",
      "target": "tests/admin_filters/tests.py:DecadeListFilterWithTitleAndParameter",
      "type": "inherits"
    },
    {
      "source": "tests/admin_filters/tests.py:DecadeListFilterWithFailingQueryset",
      "target": "tests/admin_filters/tests.py:DecadeListFilterWithFailingQueryset.queryset",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:DecadeListFilterWithFailingQueryset",
      "target": "tests/admin_filters/tests.py:DecadeListFilterWithTitleAndParameter",
      "type": "inherits"
    },
    {
      "source": "tests/admin_filters/tests.py:DecadeListFilterWithQuerysetBasedLookups",
      "target": "tests/admin_filters/tests.py:DecadeListFilterWithQuerysetBasedLookups.lookups",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:DecadeListFilterWithQuerysetBasedLookups",
      "target": "tests/admin_filters/tests.py:DecadeListFilterWithTitleAndParameter",
      "type": "inherits"
    },
    {
      "source": "tests/admin_filters/tests.py:DecadeListFilterWithQuerysetBasedLookups.lookups",
      "target": "tests/admin_filters/tests.py:BookAdminWithCustomQueryset.get_queryset",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:DecadeListFilterParameterEndsWith__In",
      "target": "tests/admin_filters/tests.py:DecadeListFilter",
      "type": "inherits"
    },
    {
      "source": "tests/admin_filters/tests.py:DecadeListFilterParameterEndsWith__Isnull",
      "target": "tests/admin_filters/tests.py:DecadeListFilter",
      "type": "inherits"
    },
    {
      "source": "tests/admin_filters/tests.py:DepartmentListFilterLookupWithNonStringValue",
      "target": "tests/admin_filters/tests.py:DepartmentListFilterLookupWithNonStringValue.lookups",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:DepartmentListFilterLookupWithNonStringValue",
      "target": "tests/admin_filters/tests.py:DepartmentListFilterLookupWithNonStringValue.queryset",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:DepartmentListFilterLookupWithNonStringValue.lookups",
      "target": "tests/admin_filters/tests.py:BookAdminWithCustomQueryset.get_queryset",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:DepartmentListFilterLookupWithUnderscoredParameter",
      "target": "tests/admin_filters/tests.py:DepartmentListFilterLookupWithNonStringValue",
      "type": "inherits"
    },
    {
      "source": "tests/admin_filters/tests.py:DepartmentListFilterLookupWithDynamicValue",
      "target": "tests/admin_filters/tests.py:DepartmentListFilterLookupWithDynamicValue.lookups",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:DepartmentListFilterLookupWithDynamicValue",
      "target": "tests/admin_filters/tests.py:DecadeListFilterWithTitleAndParameter",
      "type": "inherits"
    },
    {
      "source": "tests/admin_filters/tests.py:BookAdminWithTupleBooleanFilter",
      "target": "tests/admin_filters/tests.py:BookAdmin",
      "type": "inherits"
    },
    {
      "source": "tests/admin_filters/tests.py:BookAdminWithUnderscoreLookupAndTuple",
      "target": "tests/admin_filters/tests.py:BookAdmin",
      "type": "inherits"
    },
    {
      "source": "tests/admin_filters/tests.py:BookAdminWithCustomQueryset",
      "target": "tests/admin_filters/tests.py:BookAdminWithCustomQueryset.get_queryset",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:DepartmentFilterEmployeeAdmin",
      "target": "tests/admin_filters/tests.py:EmployeeAdmin",
      "type": "inherits"
    },
    {
      "source": "tests/admin_filters/tests.py:DepartmentFilterUnderscoredEmployeeAdmin",
      "target": "tests/admin_filters/tests.py:EmployeeAdmin",
      "type": "inherits"
    },
    {
      "source": "tests/admin_filters/tests.py:DepartmentFilterDynamicValueBookAdmin",
      "target": "tests/admin_filters/tests.py:EmployeeAdmin",
      "type": "inherits"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_choicesfieldlistfilter_has_none_choice",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_datefieldlistfilter",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_datefieldlistfilter_with_time_zone_support",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_allvaluesfieldlistfilter",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_allvaluesfieldlistfilter_custom_qs",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_foreignkey",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_foreignkey_ordering",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_foreignkey_ordering_reverse",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_manytomany",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_reverse_relationships",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedonlyfieldlistfilter_foreignkey",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedonlyfieldlistfilter_underscorelookup_foreignkey",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedonlyfieldlistfilter_manytomany",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_listfilter_genericrelation",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_booleanfieldlistfilter",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_booleanfieldlistfilter_tuple",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.verify_booleanfieldlistfilter",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_booleanfieldlistfilter_nullbooleanfield",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_fieldlistfilter_underscorelookup_tuple",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_fieldlistfilter_invalid_lookup_parameters",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_simplelistfilter",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_listfilter_without_title",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_simplelistfilter_without_parameter",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_simplelistfilter_with_none_returning_lookups",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_filter_with_failing_queryset",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_simplelistfilter_with_queryset_based_lookups",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_two_characters_long_field",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_parameter_ends_with__in__or__isnull",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_lookup_with_non_string_value",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_lookup_with_non_string_value_underscored",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_fk_with_to_field",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_lookup_with_dynamic_value",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_list_filter_queryset_filtered_by_default",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_choicesfieldlistfilter_has_none_choice",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_choicesfieldlistfilter_has_none_choice.BookmarkChoicesAdmin",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_choicesfieldlistfilter_has_none_choice",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_choicesfieldlistfilter_has_none_choice.BookmarkChoicesAdmin",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_datefieldlistfilter",
      "target": "tests/admin_filters/tests.py:BookAdminWithCustomQueryset.get_queryset",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_datefieldlistfilter",
      "target": "tests/admin_filters/tests.py:BookAdmin",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_datefieldlistfilter",
      "target": "tests/admin_filters/tests.py:select_by",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_datefieldlistfilter_with_time_zone_support",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_datefieldlistfilter",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_allvaluesfieldlistfilter",
      "target": "tests/admin_filters/tests.py:BookAdminWithCustomQueryset.get_queryset",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_allvaluesfieldlistfilter",
      "target": "tests/admin_filters/tests.py:BookAdmin",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_allvaluesfieldlistfilter_custom_qs",
      "target": "tests/admin_filters/tests.py:BookAdminWithCustomQueryset",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_foreignkey",
      "target": "tests/admin_filters/tests.py:BookAdminWithCustomQueryset.get_queryset",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_foreignkey",
      "target": "tests/admin_filters/tests.py:BookAdmin",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_foreignkey",
      "target": "tests/admin_filters/tests.py:select_by",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_foreignkey_ordering",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_foreignkey_ordering.EmployeeAdminWithOrdering",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_foreignkey_ordering",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_foreignkey_ordering.BookAdmin",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_foreignkey_ordering",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_foreignkey_ordering.BookAdmin",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_foreignkey_ordering",
      "target": "tests/admin_filters/tests.py:BookAdmin",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_foreignkey_ordering_reverse",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_foreignkey_ordering_reverse.EmployeeAdminWithOrdering",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_foreignkey_ordering_reverse",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_foreignkey_ordering_reverse.BookAdmin",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_foreignkey_ordering_reverse",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_foreignkey_ordering_reverse.BookAdmin",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_foreignkey_ordering_reverse",
      "target": "tests/admin_filters/tests.py:BookAdmin",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_manytomany",
      "target": "tests/admin_filters/tests.py:BookAdminWithCustomQueryset.get_queryset",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_manytomany",
      "target": "tests/admin_filters/tests.py:BookAdmin",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_manytomany",
      "target": "tests/admin_filters/tests.py:select_by",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_reverse_relationships",
      "target": "tests/admin_filters/tests.py:CustomUserAdmin",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_reverse_relationships",
      "target": "tests/admin_filters/tests.py:BookAdminWithCustomQueryset.get_queryset",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedfieldlistfilter_reverse_relationships",
      "target": "tests/admin_filters/tests.py:select_by",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedonlyfieldlistfilter_foreignkey",
      "target": "tests/admin_filters/tests.py:BookAdminRelatedOnlyFilter",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedonlyfieldlistfilter_underscorelookup_foreignkey",
      "target": "tests/admin_filters/tests.py:BookAdminRelatedOnlyFilter",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_relatedonlyfieldlistfilter_manytomany",
      "target": "tests/admin_filters/tests.py:BookAdminRelatedOnlyFilter",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_listfilter_genericrelation",
      "target": "tests/admin_filters/tests.py:BookmarkAdminGenericRelation",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_listfilter_genericrelation",
      "target": "tests/admin_filters/tests.py:BookAdminWithCustomQueryset.get_queryset",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_booleanfieldlistfilter",
      "target": "tests/admin_filters/tests.py:BookAdmin",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_booleanfieldlistfilter",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.verify_booleanfieldlistfilter",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_booleanfieldlistfilter_tuple",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.verify_booleanfieldlistfilter",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_booleanfieldlistfilter_tuple",
      "target": "tests/admin_filters/tests.py:BookAdminWithTupleBooleanFilter",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.verify_booleanfieldlistfilter",
      "target": "tests/admin_filters/tests.py:BookAdminWithCustomQueryset.get_queryset",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.verify_booleanfieldlistfilter",
      "target": "tests/admin_filters/tests.py:select_by",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_booleanfieldlistfilter_nullbooleanfield",
      "target": "tests/admin_filters/tests.py:BookAdminWithCustomQueryset.get_queryset",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_booleanfieldlistfilter_nullbooleanfield",
      "target": "tests/admin_filters/tests.py:BookAdmin2",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_booleanfieldlistfilter_nullbooleanfield",
      "target": "tests/admin_filters/tests.py:select_by",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_fieldlistfilter_underscorelookup_tuple",
      "target": "tests/admin_filters/tests.py:BookAdminWithCustomQueryset.get_queryset",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_fieldlistfilter_underscorelookup_tuple",
      "target": "tests/admin_filters/tests.py:BookAdminWithUnderscoreLookupAndTuple",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_fieldlistfilter_invalid_lookup_parameters",
      "target": "tests/admin_filters/tests.py:BookAdmin",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_simplelistfilter",
      "target": "tests/admin_filters/tests.py:BookAdminWithCustomQueryset.get_queryset",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_simplelistfilter",
      "target": "tests/admin_filters/tests.py:select_by",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_simplelistfilter",
      "target": "tests/admin_filters/tests.py:DecadeFilterBookAdmin",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_listfilter_without_title",
      "target": "tests/admin_filters/tests.py:DecadeFilterBookAdminWithoutTitle",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_simplelistfilter_without_parameter",
      "target": "tests/admin_filters/tests.py:DecadeFilterBookAdminWithoutParameter",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_simplelistfilter_with_none_returning_lookups",
      "target": "tests/admin_filters/tests.py:DecadeFilterBookAdminWithNoneReturningLookups",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_filter_with_failing_queryset",
      "target": "tests/admin_filters/tests.py:DecadeFilterBookAdminWithFailingQueryset",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_simplelistfilter_with_queryset_based_lookups",
      "target": "tests/admin_filters/tests.py:DecadeFilterBookAdminWithQuerysetBasedLookups",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_two_characters_long_field",
      "target": "tests/admin_filters/tests.py:BookAdminWithCustomQueryset.get_queryset",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_two_characters_long_field",
      "target": "tests/admin_filters/tests.py:BookAdmin",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_parameter_ends_with__in__or__isnull",
      "target": "tests/admin_filters/tests.py:DecadeFilterBookAdminParameterEndsWith__Isnull",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_parameter_ends_with__in__or__isnull",
      "target": "tests/admin_filters/tests.py:BookAdminWithCustomQueryset.get_queryset",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_parameter_ends_with__in__or__isnull",
      "target": "tests/admin_filters/tests.py:DecadeFilterBookAdminParameterEndsWith__In",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_lookup_with_non_string_value",
      "target": "tests/admin_filters/tests.py:DepartmentFilterEmployeeAdmin",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_lookup_with_non_string_value",
      "target": "tests/admin_filters/tests.py:BookAdminWithCustomQueryset.get_queryset",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_lookup_with_non_string_value_underscored",
      "target": "tests/admin_filters/tests.py:BookAdminWithCustomQueryset.get_queryset",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_lookup_with_non_string_value_underscored",
      "target": "tests/admin_filters/tests.py:DepartmentFilterUnderscoredEmployeeAdmin",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_fk_with_to_field",
      "target": "tests/admin_filters/tests.py:BookAdminWithCustomQueryset.get_queryset",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_fk_with_to_field",
      "target": "tests/admin_filters/tests.py:EmployeeAdmin",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_lookup_with_dynamic_value",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_lookup_with_dynamic_value._test_choices",
      "type": "contains"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_lookup_with_dynamic_value",
      "target": "tests/admin_filters/tests.py:ListFiltersTests.test_lookup_with_dynamic_value._test_choices",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_lookup_with_dynamic_value",
      "target": "tests/admin_filters/tests.py:DepartmentFilterDynamicValueBookAdmin",
      "type": "invokes"
    },
    {
      "source": "tests/admin_filters/tests.py:ListFiltersTests.test_list_filter_queryset_filtered_by_default",
      "target": "tests/admin_filters/tests.py:NotNinetiesListFilterAdmin",
      "type": "invokes"
    },
    {
      "source": "tests/raw_query",
      "target": "tests/raw_query/models.py",
      "type": "contains"
    },
    {
      "source": "tests/raw_query",
      "target": "tests/raw_query/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/raw_query",
      "target": "tests/raw_query/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/models.py",
      "target": "tests/raw_query/models.py:Author",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/models.py",
      "target": "tests/raw_query/models.py:Book",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/models.py",
      "target": "tests/raw_query/models.py:BookFkAsPk",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/models.py",
      "target": "tests/raw_query/models.py:Coffee",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/models.py",
      "target": "tests/raw_query/models.py:MixedCaseIDColumn",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/models.py",
      "target": "tests/raw_query/models.py:Reviewer",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/models.py",
      "target": "tests/raw_query/models.py:FriendlyAuthor",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/models.py:FriendlyAuthor",
      "target": "tests/raw_query/models.py:Author",
      "type": "inherits"
    },
    {
      "source": "tests/raw_query/tests.py",
      "target": "tests/raw_query/tests.py:RawQueryTests",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py",
      "target": "tests/raw_query/models.py:Author",
      "type": "imports"
    },
    {
      "source": "tests/raw_query/tests.py",
      "target": "tests/raw_query/models.py:Book",
      "type": "imports"
    },
    {
      "source": "tests/raw_query/tests.py",
      "target": "tests/raw_query/models.py:BookFkAsPk",
      "type": "imports"
    },
    {
      "source": "tests/raw_query/tests.py",
      "target": "tests/raw_query/models.py:Coffee",
      "type": "imports"
    },
    {
      "source": "tests/raw_query/tests.py",
      "target": "tests/raw_query/models.py:FriendlyAuthor",
      "type": "imports"
    },
    {
      "source": "tests/raw_query/tests.py",
      "target": "tests/raw_query/models.py:MixedCaseIDColumn",
      "type": "imports"
    },
    {
      "source": "tests/raw_query/tests.py",
      "target": "tests/raw_query/models.py:Reviewer",
      "type": "imports"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.setUpTestData",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.assertSuccessfulRawQuery",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.assertProcessed",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.assertNoAnnotations",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.assertAnnotations",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.test_rawqueryset_repr",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.test_simple_raw_query",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.test_raw_query_lazy",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.test_FK_raw_query",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.test_db_column_handler",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.test_pk_with_mixed_case_db_column",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.test_order_handler",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.test_translations",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.test_params",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.test_pyformat_params",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.test_query_representation",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.test_many_to_many",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.test_extra_conversions",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.test_missing_fields",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.test_missing_fields_without_PK",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.test_annotations",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.test_white_space_query",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.test_multiple_iterations",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.test_get_item",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.test_inheritance",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.test_query_count",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.test_subquery_in_raw_sql",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.test_db_column_name_is_used_in_raw_query",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.test_decimal_parameter",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.test_result_caching",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.test_iterator",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.test_bool",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests",
      "target": "tests/raw_query/tests.py:RawQueryTests.test_len",
      "type": "contains"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests.assertSuccessfulRawQuery",
      "target": "tests/raw_query/tests.py:RawQueryTests.assertProcessed",
      "type": "invokes"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests.assertSuccessfulRawQuery",
      "target": "tests/raw_query/tests.py:RawQueryTests.assertAnnotations",
      "type": "invokes"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests.assertNoAnnotations",
      "target": "tests/raw_query/tests.py:RawQueryTests.assertAnnotations",
      "type": "invokes"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests.test_simple_raw_query",
      "target": "tests/raw_query/tests.py:RawQueryTests.assertSuccessfulRawQuery",
      "type": "invokes"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests.test_FK_raw_query",
      "target": "tests/raw_query/tests.py:RawQueryTests.assertSuccessfulRawQuery",
      "type": "invokes"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests.test_db_column_handler",
      "target": "tests/raw_query/tests.py:RawQueryTests.assertSuccessfulRawQuery",
      "type": "invokes"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests.test_pk_with_mixed_case_db_column",
      "target": "tests/raw_query/tests.py:RawQueryTests.assertSuccessfulRawQuery",
      "type": "invokes"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests.test_order_handler",
      "target": "tests/raw_query/tests.py:RawQueryTests.assertSuccessfulRawQuery",
      "type": "invokes"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests.test_translations",
      "target": "tests/raw_query/tests.py:RawQueryTests.assertSuccessfulRawQuery",
      "type": "invokes"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests.test_params",
      "target": "tests/raw_query/tests.py:RawQueryTests.assertProcessed",
      "type": "invokes"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests.test_params",
      "target": "tests/raw_query/tests.py:RawQueryTests.assertNoAnnotations",
      "type": "invokes"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests.test_pyformat_params",
      "target": "tests/raw_query/tests.py:RawQueryTests.assertProcessed",
      "type": "invokes"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests.test_pyformat_params",
      "target": "tests/raw_query/tests.py:RawQueryTests.assertNoAnnotations",
      "type": "invokes"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests.test_many_to_many",
      "target": "tests/raw_query/tests.py:RawQueryTests.assertSuccessfulRawQuery",
      "type": "invokes"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests.test_extra_conversions",
      "target": "tests/raw_query/tests.py:RawQueryTests.assertSuccessfulRawQuery",
      "type": "invokes"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests.test_annotations",
      "target": "tests/raw_query/tests.py:RawQueryTests.assertSuccessfulRawQuery",
      "type": "invokes"
    },
    {
      "source": "tests/raw_query/tests.py:RawQueryTests.test_white_space_query",
      "target": "tests/raw_query/tests.py:RawQueryTests.assertSuccessfulRawQuery",
      "type": "invokes"
    },
    {
      "source": "tests/model_regress",
      "target": "tests/model_regress/models.py",
      "type": "contains"
    },
    {
      "source": "tests/model_regress",
      "target": "tests/model_regress/test_pickle.py",
      "type": "contains"
    },
    {
      "source": "tests/model_regress",
      "target": "tests/model_regress/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/model_regress",
      "target": "tests/model_regress/test_state.py",
      "type": "contains"
    },
    {
      "source": "tests/model_regress",
      "target": "tests/model_regress/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/models.py",
      "target": "tests/model_regress/models.py:Article",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/models.py",
      "target": "tests/model_regress/models.py:Movie",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/models.py",
      "target": "tests/model_regress/models.py:Party",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/models.py",
      "target": "tests/model_regress/models.py:Event",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/models.py",
      "target": "tests/model_regress/models.py:Department",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/models.py",
      "target": "tests/model_regress/models.py:Worker",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/models.py",
      "target": "tests/model_regress/models.py:NonAutoPK",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/models.py",
      "target": "tests/model_regress/models.py:Model1",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/models.py",
      "target": "tests/model_regress/models.py:Model2",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/models.py",
      "target": "tests/model_regress/models.py:Model3",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/models.py:Article",
      "target": "tests/model_regress/models.py:Article.Meta",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/models.py:Article",
      "target": "tests/model_regress/models.py:Article.__str__",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/models.py:Department",
      "target": "tests/model_regress/models.py:Department.__str__",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/models.py:Worker",
      "target": "tests/model_regress/models.py:Worker.__str__",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/test_pickle.py",
      "target": "tests/model_regress/test_pickle.py:ModelPickleTests",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/test_pickle.py:ModelPickleTests",
      "target": "tests/model_regress/test_pickle.py:ModelPickleTests.test_missing_django_version_unpickling",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/test_pickle.py:ModelPickleTests",
      "target": "tests/model_regress/test_pickle.py:ModelPickleTests.test_unsupported_unpickle",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/test_pickle.py:ModelPickleTests",
      "target": "tests/model_regress/test_pickle.py:ModelPickleTests.test_with_getstate",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/test_pickle.py:ModelPickleTests.test_missing_django_version_unpickling",
      "target": "tests/model_regress/test_pickle.py:ModelPickleTests.test_missing_django_version_unpickling.MissingDjangoVersion",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/test_pickle.py:ModelPickleTests.test_missing_django_version_unpickling",
      "target": "tests/model_regress/test_pickle.py:ModelPickleTests.test_missing_django_version_unpickling.MissingDjangoVersion",
      "type": "invokes"
    },
    {
      "source": "tests/model_regress/test_pickle.py:ModelPickleTests.test_missing_django_version_unpickling.MissingDjangoVersion",
      "target": "tests/model_regress/test_pickle.py:ModelPickleTests.test_missing_django_version_unpickling.MissingDjangoVersion.__reduce__",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/test_pickle.py:ModelPickleTests.test_unsupported_unpickle",
      "target": "tests/model_regress/test_pickle.py:ModelPickleTests.test_unsupported_unpickle.DifferentDjangoVersion",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/test_pickle.py:ModelPickleTests.test_unsupported_unpickle",
      "target": "tests/model_regress/test_pickle.py:ModelPickleTests.test_unsupported_unpickle.DifferentDjangoVersion",
      "type": "invokes"
    },
    {
      "source": "tests/model_regress/test_pickle.py:ModelPickleTests.test_unsupported_unpickle.DifferentDjangoVersion",
      "target": "tests/model_regress/test_pickle.py:ModelPickleTests.test_unsupported_unpickle.DifferentDjangoVersion.__reduce__",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/test_pickle.py:ModelPickleTests.test_with_getstate",
      "target": "tests/model_regress/test_pickle.py:ModelPickleTests.test_with_getstate.PickledModel",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/test_pickle.py:ModelPickleTests.test_with_getstate",
      "target": "tests/model_regress/test_pickle.py:ModelPickleTests.test_with_getstate.PickledModel",
      "type": "invokes"
    },
    {
      "source": "tests/model_regress/test_pickle.py:ModelPickleTests.test_with_getstate.PickledModel",
      "target": "tests/model_regress/test_pickle.py:ModelPickleTests.test_with_getstate.PickledModel.__getstate__",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/test_state.py",
      "target": "tests/model_regress/test_state.py:ModelStateTests",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/test_state.py:ModelStateTests",
      "target": "tests/model_regress/test_state.py:ModelStateTests.test_fields_cache_descriptor",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/tests.py",
      "target": "tests/model_regress/tests.py:ModelTests",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/tests.py",
      "target": "tests/model_regress/tests.py:ModelValidationTest",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/tests.py",
      "target": "tests/model_regress/tests.py:EvaluateMethodTest",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/tests.py",
      "target": "tests/model_regress/models.py:Article",
      "type": "imports"
    },
    {
      "source": "tests/model_regress/tests.py",
      "target": "tests/model_regress/models.py:Department",
      "type": "imports"
    },
    {
      "source": "tests/model_regress/tests.py",
      "target": "tests/model_regress/models.py:Event",
      "type": "imports"
    },
    {
      "source": "tests/model_regress/tests.py",
      "target": "tests/model_regress/models.py:Model1",
      "type": "imports"
    },
    {
      "source": "tests/model_regress/tests.py",
      "target": "tests/model_regress/models.py:Model2",
      "type": "imports"
    },
    {
      "source": "tests/model_regress/tests.py",
      "target": "tests/model_regress/models.py:Model3",
      "type": "imports"
    },
    {
      "source": "tests/model_regress/tests.py",
      "target": "tests/model_regress/models.py:NonAutoPK",
      "type": "imports"
    },
    {
      "source": "tests/model_regress/tests.py",
      "target": "tests/model_regress/models.py:Party",
      "type": "imports"
    },
    {
      "source": "tests/model_regress/tests.py",
      "target": "tests/model_regress/models.py:Worker",
      "type": "imports"
    },
    {
      "source": "tests/model_regress/tests.py:ModelTests",
      "target": "tests/model_regress/tests.py:ModelTests.test_model_init_too_many_args",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/tests.py:ModelTests",
      "target": "tests/model_regress/tests.py:ModelTests.test_related_gte_lookup",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/tests.py:ModelTests",
      "target": "tests/model_regress/tests.py:ModelTests.test_related_lte_lookup",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/tests.py:ModelTests",
      "target": "tests/model_regress/tests.py:ModelTests.test_sql_insert_compiler_return_id_attribute",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/tests.py:ModelTests",
      "target": "tests/model_regress/tests.py:ModelTests.test_empty_choice",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/tests.py:ModelTests",
      "target": "tests/model_regress/tests.py:ModelTests.test_long_textfield",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/tests.py:ModelTests",
      "target": "tests/model_regress/tests.py:ModelTests.test_long_unicode_textfield",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/tests.py:ModelTests",
      "target": "tests/model_regress/tests.py:ModelTests.test_date_lookup",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/tests.py:ModelTests",
      "target": "tests/model_regress/tests.py:ModelTests.test_date_filter_null",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/tests.py:ModelTests",
      "target": "tests/model_regress/tests.py:ModelTests.test_get_next_prev_by_field",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/tests.py:ModelTests",
      "target": "tests/model_regress/tests.py:ModelTests.test_get_next_prev_by_field_unsaved",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/tests.py:ModelTests",
      "target": "tests/model_regress/tests.py:ModelTests.test_primary_key_foreign_key_types",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/tests.py:ModelTests",
      "target": "tests/model_regress/tests.py:ModelTests.test_timezones",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/tests.py:ModelTests",
      "target": "tests/model_regress/tests.py:ModelTests.test_chained_fks",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/tests.py:ModelTests.test_model_init_too_many_args",
      "target": "tests/model_regress/models.py:Worker",
      "type": "invokes"
    },
    {
      "source": "tests/model_regress/tests.py:ModelTests.test_get_next_prev_by_field_unsaved",
      "target": "tests/model_regress/models.py:Event",
      "type": "invokes"
    },
    {
      "source": "tests/model_regress/tests.py:ModelValidationTest",
      "target": "tests/model_regress/tests.py:ModelValidationTest.test_pk_validation",
      "type": "contains"
    },
    {
      "source": "tests/model_regress/tests.py:ModelValidationTest.test_pk_validation",
      "target": "tests/model_regress/models.py:NonAutoPK",
      "type": "invokes"
    },
    {
      "source": "tests/model_regress/tests.py:EvaluateMethodTest",
      "target": "tests/model_regress/tests.py:EvaluateMethodTest.test_model_with_evaluate_method",
      "type": "contains"
    },
    {
      "source": "tests/template_tests",
      "target": "tests/template_tests/test_parser.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests",
      "target": "tests/template_tests/test_library.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests",
      "target": "tests/template_tests/test_extends.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests",
      "target": "tests/template_tests/test_engine.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests",
      "target": "tests/template_tests/test_response.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests",
      "target": "tests/template_tests/test_logging.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests",
      "target": "tests/template_tests/test_smartif.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests",
      "target": "tests/template_tests/test_origin.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests",
      "target": "tests/template_tests/alternate_urls.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests",
      "target": "tests/template_tests/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests",
      "target": "tests/template_tests/test_loaders.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests",
      "target": "tests/template_tests/broken_tag.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests",
      "target": "tests/template_tests/utils.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests",
      "target": "tests/template_tests/test_extends_relative.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests",
      "target": "tests/template_tests/test_custom.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests",
      "target": "tests/template_tests/test_context.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests",
      "target": "tests/template_tests/tests.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests",
      "target": "tests/template_tests/urls.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests",
      "target": "tests/template_tests/test_base.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests",
      "target": "tests/template_tests/annotated_tag_function.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests",
      "target": "tests/template_tests/test_nodelist.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests",
      "target": "tests/template_tests/test_callables.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests",
      "target": "tests/template_tests/views.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests",
      "target": "tests/template_tests/templatetags",
      "type": "contains"
    },
    {
      "source": "tests/template_tests",
      "target": "tests/template_tests/syntax_tests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests",
      "target": "tests/template_tests/filter_tests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_parser.py",
      "target": "tests/template_tests/test_parser.py:ParserTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_parser.py:ParserTests",
      "target": "tests/template_tests/test_parser.py:ParserTests.test_token_smart_split",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_parser.py:ParserTests",
      "target": "tests/template_tests/test_parser.py:ParserTests.test_filter_parsing",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_parser.py:ParserTests",
      "target": "tests/template_tests/test_parser.py:ParserTests.test_variable_parsing",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_parser.py:ParserTests",
      "target": "tests/template_tests/test_parser.py:ParserTests.test_filter_args_count",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_parser.py:ParserTests.test_filter_parsing",
      "target": "tests/template_tests/test_parser.py:ParserTests.test_filter_parsing.fe_test",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_parser.py:ParserTests.test_filter_parsing",
      "target": "tests/template_tests/test_parser.py:ParserTests.test_filter_parsing.fe_test",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_parser.py:ParserTests.test_filter_args_count",
      "target": "tests/template_tests/test_parser.py:ParserTests.test_filter_args_count.no_arguments",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_parser.py:ParserTests.test_filter_args_count",
      "target": "tests/template_tests/test_parser.py:ParserTests.test_filter_args_count.one_argument",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_parser.py:ParserTests.test_filter_args_count",
      "target": "tests/template_tests/test_parser.py:ParserTests.test_filter_args_count.one_opt_argument",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_parser.py:ParserTests.test_filter_args_count",
      "target": "tests/template_tests/test_parser.py:ParserTests.test_filter_args_count.two_arguments",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_parser.py:ParserTests.test_filter_args_count",
      "target": "tests/template_tests/test_parser.py:ParserTests.test_filter_args_count.two_one_opt_arg",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py",
      "target": "tests/template_tests/test_library.py:FilterRegistrationTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py",
      "target": "tests/template_tests/test_library.py:InclusionTagRegistrationTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py",
      "target": "tests/template_tests/test_library.py:SimpleTagRegistrationTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py",
      "target": "tests/template_tests/test_library.py:TagRegistrationTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:FilterRegistrationTests",
      "target": "tests/template_tests/test_library.py:FilterRegistrationTests.setUp",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:FilterRegistrationTests",
      "target": "tests/template_tests/test_library.py:FilterRegistrationTests.test_filter",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:FilterRegistrationTests",
      "target": "tests/template_tests/test_library.py:FilterRegistrationTests.test_filter_parens",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:FilterRegistrationTests",
      "target": "tests/template_tests/test_library.py:FilterRegistrationTests.test_filter_name_arg",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:FilterRegistrationTests",
      "target": "tests/template_tests/test_library.py:FilterRegistrationTests.test_filter_name_kwarg",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:FilterRegistrationTests",
      "target": "tests/template_tests/test_library.py:FilterRegistrationTests.test_filter_call",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:FilterRegistrationTests",
      "target": "tests/template_tests/test_library.py:FilterRegistrationTests.test_filter_invalid",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:FilterRegistrationTests.test_filter",
      "target": "tests/template_tests/test_library.py:FilterRegistrationTests.test_filter.func",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:FilterRegistrationTests.test_filter_parens",
      "target": "tests/template_tests/test_library.py:FilterRegistrationTests.test_filter_parens.func",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:FilterRegistrationTests.test_filter_name_arg",
      "target": "tests/template_tests/test_library.py:FilterRegistrationTests.test_filter_name_arg.func",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:FilterRegistrationTests.test_filter_name_kwarg",
      "target": "tests/template_tests/test_library.py:FilterRegistrationTests.test_filter_name_kwarg.func",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:FilterRegistrationTests.test_filter_call",
      "target": "tests/template_tests/test_library.py:FilterRegistrationTests.test_filter_call.func",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:InclusionTagRegistrationTests",
      "target": "tests/template_tests/test_library.py:InclusionTagRegistrationTests.setUp",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:InclusionTagRegistrationTests",
      "target": "tests/template_tests/test_library.py:InclusionTagRegistrationTests.test_inclusion_tag",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:InclusionTagRegistrationTests",
      "target": "tests/template_tests/test_library.py:InclusionTagRegistrationTests.test_inclusion_tag_name",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:InclusionTagRegistrationTests.test_inclusion_tag",
      "target": "tests/template_tests/test_library.py:InclusionTagRegistrationTests.test_inclusion_tag.func",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:InclusionTagRegistrationTests.test_inclusion_tag_name",
      "target": "tests/template_tests/test_library.py:InclusionTagRegistrationTests.test_inclusion_tag_name.func",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:SimpleTagRegistrationTests",
      "target": "tests/template_tests/test_library.py:SimpleTagRegistrationTests.setUp",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:SimpleTagRegistrationTests",
      "target": "tests/template_tests/test_library.py:SimpleTagRegistrationTests.test_simple_tag",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:SimpleTagRegistrationTests",
      "target": "tests/template_tests/test_library.py:SimpleTagRegistrationTests.test_simple_tag_parens",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:SimpleTagRegistrationTests",
      "target": "tests/template_tests/test_library.py:SimpleTagRegistrationTests.test_simple_tag_name_kwarg",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:SimpleTagRegistrationTests",
      "target": "tests/template_tests/test_library.py:SimpleTagRegistrationTests.test_simple_tag_invalid",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:SimpleTagRegistrationTests.test_simple_tag",
      "target": "tests/template_tests/test_library.py:SimpleTagRegistrationTests.test_simple_tag.func",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:SimpleTagRegistrationTests.test_simple_tag_parens",
      "target": "tests/template_tests/test_library.py:SimpleTagRegistrationTests.test_simple_tag_parens.func",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:SimpleTagRegistrationTests.test_simple_tag_name_kwarg",
      "target": "tests/template_tests/test_library.py:SimpleTagRegistrationTests.test_simple_tag_name_kwarg.func",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:TagRegistrationTests",
      "target": "tests/template_tests/test_library.py:TagRegistrationTests.setUp",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:TagRegistrationTests",
      "target": "tests/template_tests/test_library.py:TagRegistrationTests.test_tag",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:TagRegistrationTests",
      "target": "tests/template_tests/test_library.py:TagRegistrationTests.test_tag_parens",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:TagRegistrationTests",
      "target": "tests/template_tests/test_library.py:TagRegistrationTests.test_tag_name_arg",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:TagRegistrationTests",
      "target": "tests/template_tests/test_library.py:TagRegistrationTests.test_tag_name_kwarg",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:TagRegistrationTests",
      "target": "tests/template_tests/test_library.py:TagRegistrationTests.test_tag_call",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:TagRegistrationTests",
      "target": "tests/template_tests/test_library.py:TagRegistrationTests.test_tag_invalid",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:TagRegistrationTests.test_tag",
      "target": "tests/template_tests/test_library.py:TagRegistrationTests.test_tag.func",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:TagRegistrationTests.test_tag_parens",
      "target": "tests/template_tests/test_library.py:TagRegistrationTests.test_tag_parens.func",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:TagRegistrationTests.test_tag_name_arg",
      "target": "tests/template_tests/test_library.py:TagRegistrationTests.test_tag_name_arg.func",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:TagRegistrationTests.test_tag_name_kwarg",
      "target": "tests/template_tests/test_library.py:TagRegistrationTests.test_tag_name_kwarg.func",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_library.py:TagRegistrationTests.test_tag_call",
      "target": "tests/template_tests/test_library.py:TagRegistrationTests.test_tag_call.func",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_extends.py",
      "target": "tests/template_tests/test_extends.py:ExtendsBehaviorTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_extends.py",
      "target": "tests/template_tests/utils.py",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/test_extends.py:ExtendsBehaviorTests",
      "target": "tests/template_tests/test_extends.py:ExtendsBehaviorTests.test_normal_extend",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_extends.py:ExtendsBehaviorTests",
      "target": "tests/template_tests/test_extends.py:ExtendsBehaviorTests.test_extend_recursive",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_extends.py:ExtendsBehaviorTests",
      "target": "tests/template_tests/test_extends.py:ExtendsBehaviorTests.test_extend_missing",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_extends.py:ExtendsBehaviorTests",
      "target": "tests/template_tests/test_extends.py:ExtendsBehaviorTests.test_recursive_multiple_loaders",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_extends.py:ExtendsBehaviorTests",
      "target": "tests/template_tests/test_extends.py:ExtendsBehaviorTests.test_extend_self_error",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_extends.py:ExtendsBehaviorTests",
      "target": "tests/template_tests/test_extends.py:ExtendsBehaviorTests.test_extend_cached",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_extends.py:ExtendsBehaviorTests",
      "target": "tests/template_tests/test_extends.py:ExtendsBehaviorTests.test_unique_history_per_loader",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_extends.py:ExtendsBehaviorTests",
      "target": "tests/template_tests/test_extends.py:ExtendsBehaviorTests.test_block_override_in_extended_included_template",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_engine.py",
      "target": "tests/template_tests/test_engine.py:RenderToStringTest",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_engine.py",
      "target": "tests/template_tests/test_engine.py:GetDefaultTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_engine.py",
      "target": "tests/template_tests/test_engine.py:LoaderTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_engine.py",
      "target": "tests/template_tests/utils.py",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/test_engine.py",
      "target": "tests/template_tests/utils.py",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/test_engine.py:RenderToStringTest",
      "target": "tests/template_tests/test_engine.py:RenderToStringTest.setUp",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_engine.py:RenderToStringTest",
      "target": "tests/template_tests/test_engine.py:RenderToStringTest.test_basic_context",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_engine.py:GetDefaultTests",
      "target": "tests/template_tests/test_engine.py:GetDefaultTests.test_no_engines_configured",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_engine.py:GetDefaultTests",
      "target": "tests/template_tests/test_engine.py:GetDefaultTests.test_single_engine_configured",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_engine.py:GetDefaultTests",
      "target": "tests/template_tests/test_engine.py:GetDefaultTests.test_multiple_engines_configured",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_engine.py:LoaderTests",
      "target": "tests/template_tests/test_engine.py:LoaderTests.test_origin",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_engine.py:LoaderTests",
      "target": "tests/template_tests/test_engine.py:LoaderTests.test_loader_priority",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_engine.py:LoaderTests",
      "target": "tests/template_tests/test_engine.py:LoaderTests.test_cached_loader_priority",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py",
      "target": "tests/template_tests/test_response.py:test_processor",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py",
      "target": "tests/template_tests/test_response.py:CustomURLConfMiddleware",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py",
      "target": "tests/template_tests/test_response.py:TemplateResponseTest",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py",
      "target": "tests/template_tests/test_response.py:CustomURLConfTest",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py",
      "target": "tests/template_tests/test_response.py:CacheMiddlewareTest",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py",
      "target": "tests/template_tests/utils.py",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/test_response.py:CustomURLConfMiddleware",
      "target": "tests/template_tests/test_response.py:CustomURLConfMiddleware.process_request",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest._response",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_template_resolving",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_explicit_baking",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_render",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_iteration_unrendered",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_iteration_rendered",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_content_access_unrendered",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_content_access_rendered",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_set_content",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_dict_context",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_kwargs",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_args",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_using",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_post_callbacks",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_pickling",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_repickling",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_pickling_cookie",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_template_resolving",
      "target": "tests/template_tests/test_response.py:TemplateResponseTest._response",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_template_resolving",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest._response",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_explicit_baking",
      "target": "tests/template_tests/test_response.py:TemplateResponseTest._response",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_explicit_baking",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest._response",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_render",
      "target": "tests/template_tests/test_response.py:TemplateResponseTest._response",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_render",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest._response",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_iteration_unrendered",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_iteration_unrendered.iteration",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_iteration_unrendered",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_iteration_unrendered.iteration",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_iteration_unrendered",
      "target": "tests/template_tests/test_response.py:TemplateResponseTest._response",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_iteration_unrendered",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest._response",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_iteration_rendered",
      "target": "tests/template_tests/test_response.py:TemplateResponseTest._response",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_iteration_rendered",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest._response",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_content_access_unrendered",
      "target": "tests/template_tests/test_response.py:TemplateResponseTest._response",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_content_access_unrendered",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest._response",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_content_access_rendered",
      "target": "tests/template_tests/test_response.py:TemplateResponseTest._response",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_content_access_rendered",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest._response",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_set_content",
      "target": "tests/template_tests/test_response.py:TemplateResponseTest._response",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_set_content",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest._response",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_dict_context",
      "target": "tests/template_tests/test_response.py:TemplateResponseTest._response",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_dict_context",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest._response",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_kwargs",
      "target": "tests/template_tests/test_response.py:TemplateResponseTest._response",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_kwargs",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest._response",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_post_callbacks",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_post_callbacks.post1",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_post_callbacks",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest.test_post_callbacks.post2",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:TemplateResponseTest",
      "target": "tests/template_tests/test_response.py:TemplateResponseTest._response",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:TemplateResponseTest",
      "target": "tests/template_tests/test_response.py:TemplateResponseTest.test_render",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:TemplateResponseTest",
      "target": "tests/template_tests/test_response.py:TemplateResponseTest.test_render_with_requestcontext",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:TemplateResponseTest",
      "target": "tests/template_tests/test_response.py:TemplateResponseTest.test_context_processor_priority",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:TemplateResponseTest",
      "target": "tests/template_tests/test_response.py:TemplateResponseTest.test_kwargs",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:TemplateResponseTest",
      "target": "tests/template_tests/test_response.py:TemplateResponseTest.test_args",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:TemplateResponseTest",
      "target": "tests/template_tests/test_response.py:TemplateResponseTest.test_using",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:TemplateResponseTest",
      "target": "tests/template_tests/test_response.py:TemplateResponseTest.test_pickling",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:TemplateResponseTest",
      "target": "tests/template_tests/test_response.py:TemplateResponseTest.test_repickling",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:TemplateResponseTest.test_render",
      "target": "tests/template_tests/test_response.py:TemplateResponseTest._response",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:TemplateResponseTest.test_render",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest._response",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:TemplateResponseTest.test_render_with_requestcontext",
      "target": "tests/template_tests/test_response.py:TemplateResponseTest._response",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:TemplateResponseTest.test_render_with_requestcontext",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest._response",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:TemplateResponseTest.test_context_processor_priority",
      "target": "tests/template_tests/test_response.py:TemplateResponseTest._response",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:TemplateResponseTest.test_context_processor_priority",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest._response",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:TemplateResponseTest.test_kwargs",
      "target": "tests/template_tests/test_response.py:TemplateResponseTest._response",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:TemplateResponseTest.test_kwargs",
      "target": "tests/template_tests/test_response.py:SimpleTemplateResponseTest._response",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_response.py:CustomURLConfTest",
      "target": "tests/template_tests/test_response.py:CustomURLConfTest.test_custom_urlconf",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_response.py:CacheMiddlewareTest",
      "target": "tests/template_tests/test_response.py:CacheMiddlewareTest.test_middleware_caching",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_logging.py",
      "target": "tests/template_tests/test_logging.py:VariableResolveLoggingTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_logging.py:VariableResolveLoggingTests",
      "target": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_logging.py:VariableResolveLoggingTests",
      "target": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_not_silent",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_logging.py:VariableResolveLoggingTests",
      "target": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_no_log_when_variable_exists",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent",
      "target": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent",
      "target": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject",
      "target": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject.SilentDoesNotExist",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject",
      "target": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject.template_name",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject",
      "target": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject.template",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject",
      "target": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject.article",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject",
      "target": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject.__iter__",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject",
      "target": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject.__getitem__",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject.article",
      "target": "tests/template_tests/test_logging.py:VariableResolveLoggingTests.test_log_on_variable_does_not_exist_silent.TestObject.SilentDoesNotExist",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_smartif.py",
      "target": "tests/template_tests/test_smartif.py:SmartIfTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_smartif.py:SmartIfTests",
      "target": "tests/template_tests/test_smartif.py:SmartIfTests.assertCalcEqual",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_smartif.py:SmartIfTests",
      "target": "tests/template_tests/test_smartif.py:SmartIfTests.test_not",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_smartif.py:SmartIfTests",
      "target": "tests/template_tests/test_smartif.py:SmartIfTests.test_or",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_smartif.py:SmartIfTests",
      "target": "tests/template_tests/test_smartif.py:SmartIfTests.test_in",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_smartif.py:SmartIfTests",
      "target": "tests/template_tests/test_smartif.py:SmartIfTests.test_not_in",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_smartif.py:SmartIfTests",
      "target": "tests/template_tests/test_smartif.py:SmartIfTests.test_precedence",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_smartif.py:SmartIfTests.test_in",
      "target": "tests/template_tests/test_smartif.py:SmartIfTests.assertCalcEqual",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_smartif.py:SmartIfTests.test_not_in",
      "target": "tests/template_tests/test_smartif.py:SmartIfTests.assertCalcEqual",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_smartif.py:SmartIfTests.test_precedence",
      "target": "tests/template_tests/test_smartif.py:SmartIfTests.assertCalcEqual",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_origin.py",
      "target": "tests/template_tests/test_origin.py:OriginTestCase",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_origin.py",
      "target": "tests/template_tests/utils.py",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/test_origin.py:OriginTestCase",
      "target": "tests/template_tests/test_origin.py:OriginTestCase.setUp",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_origin.py:OriginTestCase",
      "target": "tests/template_tests/test_origin.py:OriginTestCase.test_origin_compares_equal",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_origin.py:OriginTestCase",
      "target": "tests/template_tests/test_origin.py:OriginTestCase.test_origin_compares_not_equal",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/alternate_urls.py",
      "target": "tests/template_tests/views.py",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/test_loaders.py",
      "target": "tests/template_tests/test_loaders.py:CachedLoaderTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py",
      "target": "tests/template_tests/test_loaders.py:FileSystemLoaderTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py",
      "target": "tests/template_tests/test_loaders.py:AppDirectoriesLoaderTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py",
      "target": "tests/template_tests/test_loaders.py:LocmemLoaderTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py",
      "target": "tests/template_tests/utils.py",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/test_loaders.py:CachedLoaderTests",
      "target": "tests/template_tests/test_loaders.py:CachedLoaderTests.setUp",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py:CachedLoaderTests",
      "target": "tests/template_tests/test_loaders.py:CachedLoaderTests.test_get_template",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py:CachedLoaderTests",
      "target": "tests/template_tests/test_loaders.py:CachedLoaderTests.test_get_template_missing_debug_off",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py:CachedLoaderTests",
      "target": "tests/template_tests/test_loaders.py:CachedLoaderTests.test_get_template_missing_debug_on",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py:CachedLoaderTests",
      "target": "tests/template_tests/test_loaders.py:CachedLoaderTests.test_cached_exception_no_traceback",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py:CachedLoaderTests",
      "target": "tests/template_tests/test_loaders.py:CachedLoaderTests.test_template_name_leading_dash_caching",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py:CachedLoaderTests",
      "target": "tests/template_tests/test_loaders.py:CachedLoaderTests.test_template_name_lazy_string",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py:FileSystemLoaderTests",
      "target": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.setUpClass",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py:FileSystemLoaderTests",
      "target": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.set_dirs",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py:FileSystemLoaderTests",
      "target": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.source_checker",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py:FileSystemLoaderTests",
      "target": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.test_get_template",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py:FileSystemLoaderTests",
      "target": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.test_loaders_dirs",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py:FileSystemLoaderTests",
      "target": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.test_loaders_dirs_empty",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py:FileSystemLoaderTests",
      "target": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.test_directory_security",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py:FileSystemLoaderTests",
      "target": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.test_unicode_template_name",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py:FileSystemLoaderTests",
      "target": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.test_bytestring",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py:FileSystemLoaderTests",
      "target": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.test_unicode_dir_name",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py:FileSystemLoaderTests",
      "target": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.test_case_sensitivity",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py:FileSystemLoaderTests",
      "target": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.test_file_does_not_exist",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py:FileSystemLoaderTests",
      "target": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.test_permissions_error",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py:FileSystemLoaderTests",
      "target": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.test_notafile_error",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.setUpClass",
      "target": "tests/template_tests/test_loaders.py:LocmemLoaderTests.setUpClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.setUpClass",
      "target": "tests/template_tests/test_loaders.py:AppDirectoriesLoaderTests.setUpClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.source_checker",
      "target": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.source_checker.check_sources",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.source_checker",
      "target": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.set_dirs",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.test_directory_security",
      "target": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.source_checker",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.test_unicode_template_name",
      "target": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.source_checker",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.test_unicode_dir_name",
      "target": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.source_checker",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.test_case_sensitivity",
      "target": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.source_checker",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.test_permissions_error",
      "target": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.set_dirs",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_loaders.py:AppDirectoriesLoaderTests",
      "target": "tests/template_tests/test_loaders.py:AppDirectoriesLoaderTests.setUpClass",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py:AppDirectoriesLoaderTests",
      "target": "tests/template_tests/test_loaders.py:AppDirectoriesLoaderTests.test_get_template",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py:AppDirectoriesLoaderTests",
      "target": "tests/template_tests/test_loaders.py:AppDirectoriesLoaderTests.test_not_installed",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py:AppDirectoriesLoaderTests.setUpClass",
      "target": "tests/template_tests/test_loaders.py:LocmemLoaderTests.setUpClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_loaders.py:AppDirectoriesLoaderTests.setUpClass",
      "target": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.setUpClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_loaders.py:LocmemLoaderTests",
      "target": "tests/template_tests/test_loaders.py:LocmemLoaderTests.setUpClass",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py:LocmemLoaderTests",
      "target": "tests/template_tests/test_loaders.py:LocmemLoaderTests.test_get_template",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_loaders.py:LocmemLoaderTests.setUpClass",
      "target": "tests/template_tests/test_loaders.py:FileSystemLoaderTests.setUpClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_loaders.py:LocmemLoaderTests.setUpClass",
      "target": "tests/template_tests/test_loaders.py:AppDirectoriesLoaderTests.setUpClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/utils.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py",
      "target": "tests/template_tests/utils.py:SomeException",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py",
      "target": "tests/template_tests/utils.py:SomeOtherException",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py",
      "target": "tests/template_tests/utils.py:ShouldNotExecuteException",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py",
      "target": "tests/template_tests/utils.py:SomeClass",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py",
      "target": "tests/template_tests/utils.py:OtherClass",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py",
      "target": "tests/template_tests/utils.py:TestObj",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py",
      "target": "tests/template_tests/utils.py:SilentGetItemClass",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py",
      "target": "tests/template_tests/utils.py:SilentAttrClass",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py",
      "target": "tests/template_tests/utils.py:UTF8Class",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py",
      "target": "tests/template_tests/utils.py:UnsafeClass",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py",
      "target": "tests/template_tests/utils.py:SafeClass",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py:setup",
      "target": "tests/template_tests/utils.py:setup.decorator",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py:setup.decorator",
      "target": "tests/template_tests/utils.py:setup.decorator.inner",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py:SomeClass",
      "target": "tests/template_tests/utils.py:SomeClass.method",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py:SomeClass",
      "target": "tests/template_tests/utils.py:SomeClass.method2",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py:SomeClass",
      "target": "tests/template_tests/utils.py:SomeClass.method3",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py:SomeClass",
      "target": "tests/template_tests/utils.py:SomeClass.method4",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py:SomeClass",
      "target": "tests/template_tests/utils.py:SomeClass.method5",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py:SomeClass",
      "target": "tests/template_tests/utils.py:SomeClass.__getitem__",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py:SomeClass",
      "target": "tests/template_tests/utils.py:SomeClass.silent_fail_attribute",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py:SomeClass",
      "target": "tests/template_tests/utils.py:SomeClass.noisy_fail_attribute",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py:SomeClass",
      "target": "tests/template_tests/utils.py:SomeClass.attribute_error_attribute",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py:SomeClass",
      "target": "tests/template_tests/utils.py:SomeClass.type_error_attribute",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py:SomeClass",
      "target": "tests/template_tests/utils.py:OtherClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/utils.py:OtherClass",
      "target": "tests/template_tests/utils.py:OtherClass.method",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py:TestObj",
      "target": "tests/template_tests/utils.py:TestObj.is_true",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py:TestObj",
      "target": "tests/template_tests/utils.py:TestObj.is_false",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py:TestObj",
      "target": "tests/template_tests/utils.py:TestObj.is_bad",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py:TestObj.is_bad",
      "target": "tests/template_tests/utils.py:ShouldNotExecuteException",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/utils.py:SilentGetItemClass",
      "target": "tests/template_tests/utils.py:SilentGetItemClass.__getitem__",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py:SilentAttrClass",
      "target": "tests/template_tests/utils.py:SilentAttrClass.b",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py:UTF8Class",
      "target": "tests/template_tests/utils.py:UTF8Class.__str__",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py:UnsafeClass",
      "target": "tests/template_tests/utils.py:UnsafeClass.__str__",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/utils.py:SafeClass",
      "target": "tests/template_tests/utils.py:SafeClass.__str__",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_extends_relative.py",
      "target": "tests/template_tests/test_extends_relative.py:ExtendsRelativeBehaviorTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_extends_relative.py",
      "target": "tests/template_tests/test_extends_relative.py:IncludeRelativeBehaviorTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_extends_relative.py",
      "target": "tests/template_tests/test_extends_relative.py:ExtendsMixedBehaviorTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_extends_relative.py",
      "target": "tests/template_tests/utils.py",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/test_extends_relative.py:ExtendsRelativeBehaviorTests",
      "target": "tests/template_tests/test_extends_relative.py:ExtendsRelativeBehaviorTests.test_normal_extend",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_extends_relative.py:ExtendsRelativeBehaviorTests",
      "target": "tests/template_tests/test_extends_relative.py:ExtendsRelativeBehaviorTests.test_dir1_extend",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_extends_relative.py:ExtendsRelativeBehaviorTests",
      "target": "tests/template_tests/test_extends_relative.py:ExtendsRelativeBehaviorTests.test_dir1_extend1",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_extends_relative.py:ExtendsRelativeBehaviorTests",
      "target": "tests/template_tests/test_extends_relative.py:ExtendsRelativeBehaviorTests.test_dir1_extend2",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_extends_relative.py:ExtendsRelativeBehaviorTests",
      "target": "tests/template_tests/test_extends_relative.py:ExtendsRelativeBehaviorTests.test_dir1_extend3",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_extends_relative.py:ExtendsRelativeBehaviorTests",
      "target": "tests/template_tests/test_extends_relative.py:ExtendsRelativeBehaviorTests.test_dir2_extend",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_extends_relative.py:ExtendsRelativeBehaviorTests",
      "target": "tests/template_tests/test_extends_relative.py:ExtendsRelativeBehaviorTests.test_extend_error",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_extends_relative.py:IncludeRelativeBehaviorTests",
      "target": "tests/template_tests/test_extends_relative.py:IncludeRelativeBehaviorTests.test_normal_include",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_extends_relative.py:IncludeRelativeBehaviorTests",
      "target": "tests/template_tests/test_extends_relative.py:IncludeRelativeBehaviorTests.test_dir2_include",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_extends_relative.py:IncludeRelativeBehaviorTests",
      "target": "tests/template_tests/test_extends_relative.py:IncludeRelativeBehaviorTests.test_include_error",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_extends_relative.py:ExtendsMixedBehaviorTests",
      "target": "tests/template_tests/test_extends_relative.py:ExtendsMixedBehaviorTests.test_mixing1",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_extends_relative.py:ExtendsMixedBehaviorTests",
      "target": "tests/template_tests/test_extends_relative.py:ExtendsMixedBehaviorTests.test_mixing2",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_extends_relative.py:ExtendsMixedBehaviorTests",
      "target": "tests/template_tests/test_extends_relative.py:ExtendsMixedBehaviorTests.test_mixing_loop",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py",
      "target": "tests/template_tests/test_custom.py:CustomFilterTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py",
      "target": "tests/template_tests/test_custom.py:TagTestCase",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py",
      "target": "tests/template_tests/test_custom.py:SimpleTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py",
      "target": "tests/template_tests/test_custom.py:InclusionTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py",
      "target": "tests/template_tests/test_custom.py:TemplateTagLoadingTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py",
      "target": "tests/template_tests/templatetags/custom.py",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/test_custom.py",
      "target": "tests/template_tests/templatetags/inclusion.py",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/test_custom.py",
      "target": "tests/template_tests/utils.py",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/test_custom.py:CustomFilterTests",
      "target": "tests/template_tests/test_custom.py:CustomFilterTests.test_filter",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py:CustomFilterTests",
      "target": "tests/template_tests/test_custom.py:CustomFilterTests.test_decorated_filter",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py:CustomFilterTests.test_filter",
      "target": "tests/template_tests/templatetags/custom.py:CounterNode.render",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_custom.py:CustomFilterTests.test_decorated_filter",
      "target": "tests/template_tests/templatetags/custom.py:CounterNode.render",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_custom.py:TagTestCase",
      "target": "tests/template_tests/test_custom.py:TagTestCase.setUpClass",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py:TagTestCase",
      "target": "tests/template_tests/test_custom.py:TagTestCase.verify_tag",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py:TagTestCase.setUpClass",
      "target": "tests/template_tests/test_custom.py:TemplateTagLoadingTests.setUpClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_custom.py:SimpleTagTests",
      "target": "tests/template_tests/test_custom.py:SimpleTagTests.test_simple_tags",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py:SimpleTagTests",
      "target": "tests/template_tests/test_custom.py:SimpleTagTests.test_simple_tag_errors",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py:SimpleTagTests",
      "target": "tests/template_tests/test_custom.py:SimpleTagTests.test_simple_tag_escaping_autoescape_off",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py:SimpleTagTests",
      "target": "tests/template_tests/test_custom.py:SimpleTagTests.test_simple_tag_naive_escaping",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py:SimpleTagTests",
      "target": "tests/template_tests/test_custom.py:SimpleTagTests.test_simple_tag_explicit_escaping",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py:SimpleTagTests",
      "target": "tests/template_tests/test_custom.py:SimpleTagTests.test_simple_tag_format_html_escaping",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py:SimpleTagTests",
      "target": "tests/template_tests/test_custom.py:SimpleTagTests.test_simple_tag_registration",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py:SimpleTagTests",
      "target": "tests/template_tests/test_custom.py:SimpleTagTests.test_simple_tag_missing_context",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py:SimpleTagTests",
      "target": "tests/template_tests/test_custom.py:TagTestCase",
      "type": "inherits"
    },
    {
      "source": "tests/template_tests/test_custom.py:SimpleTagTests.test_simple_tags",
      "target": "tests/template_tests/templatetags/custom.py:CounterNode.render",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_custom.py:SimpleTagTests.test_simple_tag_escaping_autoescape_off",
      "target": "tests/template_tests/templatetags/custom.py:CounterNode.render",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_custom.py:SimpleTagTests.test_simple_tag_naive_escaping",
      "target": "tests/template_tests/templatetags/custom.py:CounterNode.render",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_custom.py:SimpleTagTests.test_simple_tag_explicit_escaping",
      "target": "tests/template_tests/templatetags/custom.py:CounterNode.render",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_custom.py:SimpleTagTests.test_simple_tag_format_html_escaping",
      "target": "tests/template_tests/templatetags/custom.py:CounterNode.render",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_custom.py:SimpleTagTests.test_simple_tag_registration",
      "target": "tests/template_tests/test_custom.py:TagTestCase.verify_tag",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_custom.py:InclusionTagTests",
      "target": "tests/template_tests/test_custom.py:InclusionTagTests.test_inclusion_tags",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py:InclusionTagTests",
      "target": "tests/template_tests/test_custom.py:InclusionTagTests.test_inclusion_tag_errors",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py:InclusionTagTests",
      "target": "tests/template_tests/test_custom.py:InclusionTagTests.test_include_tag_missing_context",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py:InclusionTagTests",
      "target": "tests/template_tests/test_custom.py:InclusionTagTests.test_inclusion_tags_from_template",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py:InclusionTagTests",
      "target": "tests/template_tests/test_custom.py:InclusionTagTests.test_inclusion_tag_registration",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py:InclusionTagTests",
      "target": "tests/template_tests/test_custom.py:InclusionTagTests.test_15070_use_l10n",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py:InclusionTagTests",
      "target": "tests/template_tests/test_custom.py:InclusionTagTests.test_no_render_side_effect",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py:InclusionTagTests",
      "target": "tests/template_tests/test_custom.py:InclusionTagTests.test_render_context_is_cleared",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py:InclusionTagTests",
      "target": "tests/template_tests/test_custom.py:TagTestCase",
      "type": "inherits"
    },
    {
      "source": "tests/template_tests/test_custom.py:InclusionTagTests.test_inclusion_tags",
      "target": "tests/template_tests/templatetags/custom.py:CounterNode.render",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_custom.py:InclusionTagTests.test_inclusion_tags_from_template",
      "target": "tests/template_tests/templatetags/custom.py:CounterNode.render",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_custom.py:InclusionTagTests.test_inclusion_tag_registration",
      "target": "tests/template_tests/test_custom.py:TagTestCase.verify_tag",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_custom.py:InclusionTagTests.test_15070_use_l10n",
      "target": "tests/template_tests/templatetags/custom.py:CounterNode.render",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_custom.py:InclusionTagTests.test_no_render_side_effect",
      "target": "tests/template_tests/templatetags/custom.py:CounterNode.render",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_custom.py:InclusionTagTests.test_render_context_is_cleared",
      "target": "tests/template_tests/templatetags/custom.py:CounterNode.render",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_custom.py:TemplateTagLoadingTests",
      "target": "tests/template_tests/test_custom.py:TemplateTagLoadingTests.setUpClass",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py:TemplateTagLoadingTests",
      "target": "tests/template_tests/test_custom.py:TemplateTagLoadingTests.test_load_error",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py:TemplateTagLoadingTests",
      "target": "tests/template_tests/test_custom.py:TemplateTagLoadingTests.test_load_error_egg",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py:TemplateTagLoadingTests",
      "target": "tests/template_tests/test_custom.py:TemplateTagLoadingTests.test_load_working_egg",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py:TemplateTagLoadingTests",
      "target": "tests/template_tests/test_custom.py:TemplateTagLoadingTests.test_load_annotated_function",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_custom.py:TemplateTagLoadingTests.setUpClass",
      "target": "tests/template_tests/test_custom.py:TagTestCase.setUpClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_context.py",
      "target": "tests/template_tests/test_context.py:ContextTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_context.py",
      "target": "tests/template_tests/test_context.py:RequestContextTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_context.py:ContextTests",
      "target": "tests/template_tests/test_context.py:ContextTests.test_context",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_context.py:ContextTests",
      "target": "tests/template_tests/test_context.py:ContextTests.test_push_context_manager",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_context.py:ContextTests",
      "target": "tests/template_tests/test_context.py:ContextTests.test_update_context_manager",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_context.py:ContextTests",
      "target": "tests/template_tests/test_context.py:ContextTests.test_push_context_manager_with_context_object",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_context.py:ContextTests",
      "target": "tests/template_tests/test_context.py:ContextTests.test_update_context_manager_with_context_object",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_context.py:ContextTests",
      "target": "tests/template_tests/test_context.py:ContextTests.test_push_proper_layering",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_context.py:ContextTests",
      "target": "tests/template_tests/test_context.py:ContextTests.test_update_proper_layering",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_context.py:ContextTests",
      "target": "tests/template_tests/test_context.py:ContextTests.test_setdefault",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_context.py:ContextTests",
      "target": "tests/template_tests/test_context.py:ContextTests.test_resolve_on_context_method",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_context.py:ContextTests",
      "target": "tests/template_tests/test_context.py:ContextTests.test_render_context",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_context.py:ContextTests",
      "target": "tests/template_tests/test_context.py:ContextTests.test_flatten_context",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_context.py:ContextTests",
      "target": "tests/template_tests/test_context.py:ContextTests.test_flatten_context_with_context",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_context.py:ContextTests",
      "target": "tests/template_tests/test_context.py:ContextTests.test_context_comparable",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_context.py:ContextTests",
      "target": "tests/template_tests/test_context.py:ContextTests.test_copy_request_context_twice",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_context.py:ContextTests",
      "target": "tests/template_tests/test_context.py:ContextTests.test_set_upward",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_context.py:ContextTests",
      "target": "tests/template_tests/test_context.py:ContextTests.test_set_upward_empty_context",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_context.py:ContextTests",
      "target": "tests/template_tests/test_context.py:ContextTests.test_set_upward_with_push",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_context.py:ContextTests",
      "target": "tests/template_tests/test_context.py:ContextTests.test_set_upward_with_push_no_match",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_context.py:RequestContextTests",
      "target": "tests/template_tests/test_context.py:RequestContextTests.test_include_only",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_context.py:RequestContextTests",
      "target": "tests/template_tests/test_context.py:RequestContextTests.test_stack_size",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_context.py:RequestContextTests",
      "target": "tests/template_tests/test_context.py:RequestContextTests.test_context_comparable",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_context.py:RequestContextTests",
      "target": "tests/template_tests/test_context.py:RequestContextTests.test_modify_context_and_render",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/tests.py",
      "target": "tests/template_tests/tests.py:TemplateTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/tests.py:TemplateTests",
      "target": "tests/template_tests/tests.py:TemplateTests.test_string_origin",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/tests.py:TemplateTests",
      "target": "tests/template_tests/tests.py:TemplateTests.test_url_reverse_no_settings_module",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/tests.py:TemplateTests",
      "target": "tests/template_tests/tests.py:TemplateTests.test_url_reverse_view_name",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/tests.py:TemplateTests",
      "target": "tests/template_tests/tests.py:TemplateTests.test_no_wrapped_exception",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/tests.py:TemplateTests",
      "target": "tests/template_tests/tests.py:TemplateTests.test_invalid_block_suggestion",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/tests.py:TemplateTests",
      "target": "tests/template_tests/tests.py:TemplateTests.test_unknown_block_tag",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/tests.py:TemplateTests",
      "target": "tests/template_tests/tests.py:TemplateTests.test_compile_filter_expression_error",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/tests.py:TemplateTests",
      "target": "tests/template_tests/tests.py:TemplateTests.test_compile_tag_error",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/tests.py:TemplateTests",
      "target": "tests/template_tests/tests.py:TemplateTests.test_compile_tag_error_27584",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/tests.py:TemplateTests",
      "target": "tests/template_tests/tests.py:TemplateTests.test_compile_tag_error_27956",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/tests.py:TemplateTests",
      "target": "tests/template_tests/tests.py:TemplateTests.test_super_errors",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/tests.py:TemplateTests",
      "target": "tests/template_tests/tests.py:TemplateTests.test_debug_tag_non_ascii",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/tests.py:TemplateTests",
      "target": "tests/template_tests/tests.py:TemplateTests.test_extends_generic_template",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/tests.py:TemplateTests",
      "target": "tests/template_tests/tests.py:TemplateTests.test_node_origin",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/urls.py",
      "target": "tests/template_tests/views.py",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/test_base.py",
      "target": "tests/template_tests/test_base.py:TemplateTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_base.py",
      "target": "tests/template_tests/test_base.py:VariableDoesNotExistTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_base.py",
      "target": "tests/template_tests/test_base.py:VariableTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_base.py:TemplateTests",
      "target": "tests/template_tests/test_base.py:TemplateTests.test_lazy_template_string",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_base.py:VariableDoesNotExistTests",
      "target": "tests/template_tests/test_base.py:VariableDoesNotExistTests.test_str",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_base.py:VariableTests",
      "target": "tests/template_tests/test_base.py:VariableTests.test_integer_literals",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_base.py:VariableTests",
      "target": "tests/template_tests/test_base.py:VariableTests.test_nonliterals",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/annotated_tag_function.py",
      "target": "tests/template_tests/annotated_tag_function.py:annotated_tag_function",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_nodelist.py",
      "target": "tests/template_tests/test_nodelist.py:NodelistTest",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_nodelist.py",
      "target": "tests/template_tests/test_nodelist.py:TextNodeTest",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_nodelist.py",
      "target": "tests/template_tests/test_nodelist.py:ErrorIndexTest",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_nodelist.py:NodelistTest",
      "target": "tests/template_tests/test_nodelist.py:NodelistTest.setUpClass",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_nodelist.py:NodelistTest",
      "target": "tests/template_tests/test_nodelist.py:NodelistTest.test_for",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_nodelist.py:NodelistTest",
      "target": "tests/template_tests/test_nodelist.py:NodelistTest.test_if",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_nodelist.py:NodelistTest",
      "target": "tests/template_tests/test_nodelist.py:NodelistTest.test_ifequal",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_nodelist.py:NodelistTest",
      "target": "tests/template_tests/test_nodelist.py:NodelistTest.test_ifchanged",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_nodelist.py:TextNodeTest",
      "target": "tests/template_tests/test_nodelist.py:TextNodeTest.test_textnode_repr",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_nodelist.py:ErrorIndexTest",
      "target": "tests/template_tests/test_nodelist.py:ErrorIndexTest.test_correct_exception_index",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_callables.py",
      "target": "tests/template_tests/test_callables.py:CallableVariablesTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_callables.py:CallableVariablesTests",
      "target": "tests/template_tests/test_callables.py:CallableVariablesTests.setUpClass",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_callables.py:CallableVariablesTests",
      "target": "tests/template_tests/test_callables.py:CallableVariablesTests.test_callable",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_callables.py:CallableVariablesTests",
      "target": "tests/template_tests/test_callables.py:CallableVariablesTests.test_alters_data",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_callables.py:CallableVariablesTests",
      "target": "tests/template_tests/test_callables.py:CallableVariablesTests.test_do_not_call",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_callables.py:CallableVariablesTests",
      "target": "tests/template_tests/test_callables.py:CallableVariablesTests.test_do_not_call_and_alters_data",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_callables.py:CallableVariablesTests.test_callable",
      "target": "tests/template_tests/test_callables.py:CallableVariablesTests.test_callable.Doodad",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_callables.py:CallableVariablesTests.test_callable",
      "target": "tests/template_tests/test_callables.py:CallableVariablesTests.test_callable.Doodad",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_callables.py:CallableVariablesTests.test_callable.Doodad",
      "target": "tests/template_tests/test_callables.py:CallableVariablesTests.test_callable.Doodad.__call__",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_callables.py:CallableVariablesTests.test_alters_data",
      "target": "tests/template_tests/test_callables.py:CallableVariablesTests.test_alters_data.Doodad",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_callables.py:CallableVariablesTests.test_alters_data",
      "target": "tests/template_tests/test_callables.py:CallableVariablesTests.test_alters_data.Doodad",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_callables.py:CallableVariablesTests.test_alters_data.Doodad",
      "target": "tests/template_tests/test_callables.py:CallableVariablesTests.test_alters_data.Doodad.__call__",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_callables.py:CallableVariablesTests.test_do_not_call",
      "target": "tests/template_tests/test_callables.py:CallableVariablesTests.test_do_not_call.Doodad",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_callables.py:CallableVariablesTests.test_do_not_call",
      "target": "tests/template_tests/test_callables.py:CallableVariablesTests.test_do_not_call.Doodad",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_callables.py:CallableVariablesTests.test_do_not_call.Doodad",
      "target": "tests/template_tests/test_callables.py:CallableVariablesTests.test_do_not_call.Doodad.__call__",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_callables.py:CallableVariablesTests.test_do_not_call_and_alters_data",
      "target": "tests/template_tests/test_callables.py:CallableVariablesTests.test_do_not_call_and_alters_data.Doodad",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/test_callables.py:CallableVariablesTests.test_do_not_call_and_alters_data",
      "target": "tests/template_tests/test_callables.py:CallableVariablesTests.test_do_not_call_and_alters_data.Doodad",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/test_callables.py:CallableVariablesTests.test_do_not_call_and_alters_data.Doodad",
      "target": "tests/template_tests/test_callables.py:CallableVariablesTests.test_do_not_call_and_alters_data.Doodad.__call__",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/views.py",
      "target": "tests/template_tests/views.py:index",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/views.py",
      "target": "tests/template_tests/views.py:client",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/views.py",
      "target": "tests/template_tests/views.py:client_action",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/views.py",
      "target": "tests/template_tests/views.py:client2",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/views.py",
      "target": "tests/template_tests/views.py:template_response_view",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/views.py",
      "target": "tests/template_tests/views.py:snark",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags",
      "target": "tests/template_tests/templatetags/custom.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags",
      "target": "tests/template_tests/templatetags/tag_27584.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags",
      "target": "tests/template_tests/templatetags/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags",
      "target": "tests/template_tests/templatetags/testtags.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags",
      "target": "tests/template_tests/templatetags/bad_tag.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags",
      "target": "tests/template_tests/templatetags/inclusion.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags",
      "target": "tests/template_tests/templatetags/subpackage",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/custom.py",
      "target": "tests/template_tests/templatetags/custom.py:trim",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/custom.py",
      "target": "tests/template_tests/templatetags/custom.py:make_data_div",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/custom.py",
      "target": "tests/template_tests/templatetags/custom.py:noop",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/custom.py",
      "target": "tests/template_tests/templatetags/custom.py:context_stack_length",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/custom.py",
      "target": "tests/template_tests/templatetags/custom.py:no_params",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/custom.py",
      "target": "tests/template_tests/templatetags/custom.py:one_param",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/custom.py",
      "target": "tests/template_tests/templatetags/custom.py:explicit_no_context",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/custom.py",
      "target": "tests/template_tests/templatetags/custom.py:no_params_with_context",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/custom.py",
      "target": "tests/template_tests/templatetags/custom.py:params_and_context",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/custom.py",
      "target": "tests/template_tests/templatetags/custom.py:simple_two_params",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/custom.py",
      "target": "tests/template_tests/templatetags/custom.py:simple_keyword_only_param",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/custom.py",
      "target": "tests/template_tests/templatetags/custom.py:simple_keyword_only_default",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/custom.py",
      "target": "tests/template_tests/templatetags/custom.py:simple_one_default",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/custom.py",
      "target": "tests/template_tests/templatetags/custom.py:simple_unlimited_args",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/custom.py",
      "target": "tests/template_tests/templatetags/custom.py:simple_only_unlimited_args",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/custom.py",
      "target": "tests/template_tests/templatetags/custom.py:simple_unlimited_args_kwargs",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/custom.py",
      "target": "tests/template_tests/templatetags/custom.py:simple_tag_without_context_parameter",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/custom.py",
      "target": "tests/template_tests/templatetags/custom.py:escape_naive",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/custom.py",
      "target": "tests/template_tests/templatetags/custom.py:escape_explicit",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/custom.py",
      "target": "tests/template_tests/templatetags/custom.py:escape_format_html",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/custom.py",
      "target": "tests/template_tests/templatetags/custom.py:current_app",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/custom.py",
      "target": "tests/template_tests/templatetags/custom.py:use_l10n",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/custom.py",
      "target": "tests/template_tests/templatetags/custom.py:minustwo_overridden_name",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/custom.py",
      "target": "tests/template_tests/templatetags/custom.py:counter",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/custom.py",
      "target": "tests/template_tests/templatetags/custom.py:CounterNode",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/custom.py:counter",
      "target": "tests/template_tests/templatetags/custom.py:CounterNode",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/templatetags/custom.py:CounterNode",
      "target": "tests/template_tests/templatetags/custom.py:CounterNode.render",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/tag_27584.py",
      "target": "tests/template_tests/templatetags/tag_27584.py:badtag",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/tag_27584.py",
      "target": "tests/template_tests/templatetags/tag_27584.py:BadNode",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/tag_27584.py:badtag",
      "target": "tests/template_tests/templatetags/tag_27584.py:BadNode",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/templatetags/tag_27584.py:BadNode",
      "target": "tests/template_tests/templatetags/tag_27584.py:BadNode.render",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/testtags.py",
      "target": "tests/template_tests/templatetags/testtags.py:EchoNode",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/testtags.py",
      "target": "tests/template_tests/templatetags/testtags.py:echo",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/testtags.py",
      "target": "tests/template_tests/templatetags/testtags.py:upper",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/testtags.py:EchoNode",
      "target": "tests/template_tests/templatetags/testtags.py:EchoNode.render",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/testtags.py:echo",
      "target": "tests/template_tests/templatetags/testtags.py:EchoNode",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/templatetags/bad_tag.py",
      "target": "tests/template_tests/templatetags/bad_tag.py:badtag",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/bad_tag.py",
      "target": "tests/template_tests/templatetags/bad_tag.py:badsimpletag",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/inclusion.py",
      "target": "tests/template_tests/templatetags/inclusion.py:inclusion_no_params",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/inclusion.py",
      "target": "tests/template_tests/templatetags/inclusion.py:inclusion_no_params_from_template",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/inclusion.py",
      "target": "tests/template_tests/templatetags/inclusion.py:inclusion_one_param",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/inclusion.py",
      "target": "tests/template_tests/templatetags/inclusion.py:inclusion_one_param_from_template",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/inclusion.py",
      "target": "tests/template_tests/templatetags/inclusion.py:inclusion_explicit_no_context",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/inclusion.py",
      "target": "tests/template_tests/templatetags/inclusion.py:inclusion_explicit_no_context_from_template",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/inclusion.py",
      "target": "tests/template_tests/templatetags/inclusion.py:inclusion_no_params_with_context",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/inclusion.py",
      "target": "tests/template_tests/templatetags/inclusion.py:inclusion_no_params_with_context_from_template",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/inclusion.py",
      "target": "tests/template_tests/templatetags/inclusion.py:inclusion_params_and_context",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/inclusion.py",
      "target": "tests/template_tests/templatetags/inclusion.py:inclusion_params_and_context_from_template",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/inclusion.py",
      "target": "tests/template_tests/templatetags/inclusion.py:inclusion_two_params",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/inclusion.py",
      "target": "tests/template_tests/templatetags/inclusion.py:inclusion_two_params_from_template",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/inclusion.py",
      "target": "tests/template_tests/templatetags/inclusion.py:inclusion_one_default",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/inclusion.py",
      "target": "tests/template_tests/templatetags/inclusion.py:inclusion_one_default_from_template",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/inclusion.py",
      "target": "tests/template_tests/templatetags/inclusion.py:inclusion_unlimited_args",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/inclusion.py",
      "target": "tests/template_tests/templatetags/inclusion.py:inclusion_unlimited_args_from_template",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/inclusion.py",
      "target": "tests/template_tests/templatetags/inclusion.py:inclusion_only_unlimited_args",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/inclusion.py",
      "target": "tests/template_tests/templatetags/inclusion.py:inclusion_only_unlimited_args_from_template",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/inclusion.py",
      "target": "tests/template_tests/templatetags/inclusion.py:inclusion_tag_use_l10n",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/inclusion.py",
      "target": "tests/template_tests/templatetags/inclusion.py:inclusion_unlimited_args_kwargs",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/inclusion.py",
      "target": "tests/template_tests/templatetags/inclusion.py:inclusion_tag_without_context_parameter",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/inclusion.py",
      "target": "tests/template_tests/templatetags/inclusion.py:inclusion_extends1",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/inclusion.py",
      "target": "tests/template_tests/templatetags/inclusion.py:inclusion_extends2",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/subpackage",
      "target": "tests/template_tests/templatetags/subpackage/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/subpackage",
      "target": "tests/template_tests/templatetags/subpackage/echo.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/templatetags/subpackage/echo.py",
      "target": "tests/template_tests/templatetags/subpackage/echo.py:echo2",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_comment.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_firstof.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_builtins.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_extends.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_basic.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_setup.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_with.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_list_index.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_now.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_multiline.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_autoescape.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_static.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_simple_tag.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_if_changed.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_spaceless.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_lorem.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_exceptions.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_invalid_string.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_regroup.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_resetcycle.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_filter_tag.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_for.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_verbatim.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_include.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_cycle.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_url.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_if.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_template_tag.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_named_endblock.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_load.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_numpy.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/test_cache.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests",
      "target": "tests/template_tests/syntax_tests/i18n",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_comment.py",
      "target": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_comment.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_syntax01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_syntax02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_syntax03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_syntax04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_syntax05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_syntax06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_syntax07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_syntax08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_syntax09",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_syntax10",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_syntax11",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_syntax12",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_tag01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_tag02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_tag03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_tag04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_comment.py:CommentSyntaxTests.test_comment_tag05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_firstof.py",
      "target": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_firstof.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests",
      "target": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests",
      "target": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests",
      "target": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests",
      "target": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests",
      "target": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests",
      "target": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests",
      "target": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests",
      "target": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests",
      "target": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof09",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests",
      "target": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof10",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests",
      "target": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof11",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests",
      "target": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof12",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests",
      "target": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof13",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests",
      "target": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof14",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests",
      "target": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_firstof15",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests",
      "target": "tests/template_tests/syntax_tests/test_firstof.py:FirstOfTagTests.test_all_false_arguments_asvar",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_builtins.py",
      "target": "tests/template_tests/syntax_tests/test_builtins.py:BuiltinsTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_builtins.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_builtins.py:BuiltinsTests",
      "target": "tests/template_tests/syntax_tests/test_builtins.py:BuiltinsTests.test_builtins01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_builtins.py:BuiltinsTests",
      "target": "tests/template_tests/syntax_tests/test_builtins.py:BuiltinsTests.test_builtins02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_builtins.py:BuiltinsTests",
      "target": "tests/template_tests/syntax_tests/test_builtins.py:BuiltinsTests.test_builtins03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py",
      "target": "tests/template_tests/syntax_tests/test_extends.py:ExtendsNodeTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance09",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance10",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance11",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance12",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance13",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance14",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance15",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance16",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance17",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance18",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance19",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance20",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance21",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance22",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance23",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance24",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance25",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance26",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance27",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance_28",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance29",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance30",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance31",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance32",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance33",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance34",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance35",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance36",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance37",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance38",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance39",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance40",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance41",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance42",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_inheritance_empty",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_extends_duplicate",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:InheritanceTests.test_duplicate_block",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_extends.py:ExtendsNodeTests",
      "target": "tests/template_tests/syntax_tests/test_extends.py:ExtendsNodeTests.test_extends_node_repr",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "target": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_width_ratio.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests",
      "target": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests",
      "target": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests",
      "target": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests",
      "target": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests",
      "target": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests",
      "target": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests",
      "target": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests",
      "target": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests",
      "target": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio09",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests",
      "target": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio10",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests",
      "target": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio11",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests",
      "target": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio12a",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests",
      "target": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio12b",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests",
      "target": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio13a",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests",
      "target": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio13b",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests",
      "target": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio14a",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests",
      "target": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio14b",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests",
      "target": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio15",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests",
      "target": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio16",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests",
      "target": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio17",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests",
      "target": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio18",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests",
      "target": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio19",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests",
      "target": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio20",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests",
      "target": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_widthratio21",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests",
      "target": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_zerodivisionerror_as_var",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests",
      "target": "tests/template_tests/syntax_tests/test_width_ratio.py:WidthRatioTagTests.test_typeerror_as_var",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py",
      "target": "tests/template_tests/utils.py:SilentAttrClass",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py",
      "target": "tests/template_tests/utils.py:SilentGetItemClass",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py",
      "target": "tests/template_tests/utils.py:SomeClass",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax09",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax10",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax11",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax12",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax13",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax14",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax15",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax16",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax17",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax18",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax19",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax20",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax20b",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax21",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax22",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax23",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax24",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax25",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax26",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax27",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax28",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax29",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax30",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax31",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax32",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax33",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax34",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax35",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax36",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax37",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax38",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_unclosed_block",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_unclosed_block2",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_ignores_strings_that_look_like_format_interpolation",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax09",
      "target": "tests/template_tests/utils.py:SomeClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax10",
      "target": "tests/template_tests/utils.py:SomeClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax11",
      "target": "tests/template_tests/utils.py:SomeClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax20",
      "target": "tests/template_tests/utils.py:SomeClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax20b",
      "target": "tests/template_tests/utils.py:SomeClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax28",
      "target": "tests/template_tests/utils.py:SilentGetItemClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_basic.py:BasicSyntaxTests.test_basic_syntax29",
      "target": "tests/template_tests/utils.py:SilentAttrClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_setup.py",
      "target": "tests/template_tests/syntax_tests/test_setup.py:SetupTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_setup.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_setup.py:SetupTests",
      "target": "tests/template_tests/syntax_tests/test_setup.py:SetupTests.test_setup",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_setup.py:SetupTests.test_setup",
      "target": "tests/template_tests/syntax_tests/test_setup.py:SetupTests.test_setup.method",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_setup.py:SetupTests.test_setup",
      "target": "tests/template_tests/syntax_tests/test_setup.py:SetupTests.test_setup.method",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_with.py",
      "target": "tests/template_tests/syntax_tests/test_with.py:WithTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_with.py",
      "target": "tests/template_tests/syntax_tests/test_with.py:WithNodeTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_with.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_with.py:WithTagTests",
      "target": "tests/template_tests/syntax_tests/test_with.py:WithTagTests.test_with01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_with.py:WithTagTests",
      "target": "tests/template_tests/syntax_tests/test_with.py:WithTagTests.test_legacywith01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_with.py:WithTagTests",
      "target": "tests/template_tests/syntax_tests/test_with.py:WithTagTests.test_with02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_with.py:WithTagTests",
      "target": "tests/template_tests/syntax_tests/test_with.py:WithTagTests.test_legacywith02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_with.py:WithTagTests",
      "target": "tests/template_tests/syntax_tests/test_with.py:WithTagTests.test_with03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_with.py:WithTagTests",
      "target": "tests/template_tests/syntax_tests/test_with.py:WithTagTests.test_with_error01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_with.py:WithTagTests",
      "target": "tests/template_tests/syntax_tests/test_with.py:WithTagTests.test_with_error02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_with.py:WithNodeTests",
      "target": "tests/template_tests/syntax_tests/test_with.py:WithNodeTests.test_repr",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_list_index.py",
      "target": "tests/template_tests/syntax_tests/test_list_index.py:ListIndexTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_list_index.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_list_index.py:ListIndexTests",
      "target": "tests/template_tests/syntax_tests/test_list_index.py:ListIndexTests.test_list_index01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_list_index.py:ListIndexTests",
      "target": "tests/template_tests/syntax_tests/test_list_index.py:ListIndexTests.test_list_index02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_list_index.py:ListIndexTests",
      "target": "tests/template_tests/syntax_tests/test_list_index.py:ListIndexTests.test_list_index03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_list_index.py:ListIndexTests",
      "target": "tests/template_tests/syntax_tests/test_list_index.py:ListIndexTests.test_list_index04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_list_index.py:ListIndexTests",
      "target": "tests/template_tests/syntax_tests/test_list_index.py:ListIndexTests.test_list_index05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_list_index.py:ListIndexTests",
      "target": "tests/template_tests/syntax_tests/test_list_index.py:ListIndexTests.test_list_index06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_list_index.py:ListIndexTests",
      "target": "tests/template_tests/syntax_tests/test_list_index.py:ListIndexTests.test_list_index07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_now.py",
      "target": "tests/template_tests/syntax_tests/test_now.py:NowTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_now.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_now.py:NowTagTests",
      "target": "tests/template_tests/syntax_tests/test_now.py:NowTagTests.test_now01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_now.py:NowTagTests",
      "target": "tests/template_tests/syntax_tests/test_now.py:NowTagTests.test_now02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_now.py:NowTagTests",
      "target": "tests/template_tests/syntax_tests/test_now.py:NowTagTests.test_now03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_now.py:NowTagTests",
      "target": "tests/template_tests/syntax_tests/test_now.py:NowTagTests.test_now04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_now.py:NowTagTests",
      "target": "tests/template_tests/syntax_tests/test_now.py:NowTagTests.test_now05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_now.py:NowTagTests",
      "target": "tests/template_tests/syntax_tests/test_now.py:NowTagTests.test_now06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_now.py:NowTagTests",
      "target": "tests/template_tests/syntax_tests/test_now.py:NowTagTests.test_now07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_now.py:NowTagTests",
      "target": "tests/template_tests/syntax_tests/test_now.py:NowTagTests.test_now_args",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_multiline.py",
      "target": "tests/template_tests/syntax_tests/test_multiline.py:MultilineTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_multiline.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_multiline.py:MultilineTests",
      "target": "tests/template_tests/syntax_tests/test_multiline.py:MultilineTests.test_multiline01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_autoescape.py",
      "target": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_autoescape.py",
      "target": "tests/template_tests/utils.py:SafeClass",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_autoescape.py",
      "target": "tests/template_tests/utils.py:UnsafeClass",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_autoescape.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests",
      "target": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_tag01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests",
      "target": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_tag02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests",
      "target": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_tag03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests",
      "target": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_tag04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests",
      "target": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_tag05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests",
      "target": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_tag06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests",
      "target": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_tag07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests",
      "target": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_tag08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests",
      "target": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_tag09",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests",
      "target": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_tag10",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests",
      "target": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_filtertag01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests",
      "target": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_ifequal01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests",
      "target": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_filters01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests",
      "target": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_filters02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests",
      "target": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_literals01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests",
      "target": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_stringiterations01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests",
      "target": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_lookup01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests",
      "target": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_invalid_arg",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests",
      "target": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_no_arg",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_tag09",
      "target": "tests/template_tests/utils.py:UnsafeClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_autoescape.py:AutoescapeTagTests.test_autoescape_tag10",
      "target": "tests/template_tests/utils.py:SafeClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_static.py",
      "target": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_static.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests",
      "target": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests.test_static_prefixtag01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests",
      "target": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests.test_static_prefixtag02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests",
      "target": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests.test_static_prefixtag03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests",
      "target": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests.test_static_prefixtag04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests",
      "target": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests.test_static_prefixtag_without_as",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests",
      "target": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests.test_static_statictag01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests",
      "target": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests.test_static_statictag02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests",
      "target": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests.test_static_statictag03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests",
      "target": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests.test_static_statictag04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests",
      "target": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests.test_static_quotes_urls",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests",
      "target": "tests/template_tests/syntax_tests/test_static.py:StaticTagTests.test_static_statictag_without_path",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_simple_tag.py",
      "target": "tests/template_tests/syntax_tests/test_simple_tag.py:SimpleTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_simple_tag.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_simple_tag.py:SimpleTagTests",
      "target": "tests/template_tests/syntax_tests/test_simple_tag.py:SimpleTagTests.test_simpletag_renamed01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_simple_tag.py:SimpleTagTests",
      "target": "tests/template_tests/syntax_tests/test_simple_tag.py:SimpleTagTests.test_simpletag_renamed02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_simple_tag.py:SimpleTagTests",
      "target": "tests/template_tests/syntax_tests/test_simple_tag.py:SimpleTagTests.test_simpletag_renamed03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "target": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "target": "tests/template_tests/utils.py:SomeClass",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "target": "tests/template_tests/utils.py:SomeOtherException",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "target": "tests/template_tests/utils.py:UTF8Class",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax08_multi_line",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax09",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax10",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax11",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax13",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax14",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax15",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax16",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax17",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax18",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax19",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax20",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax21",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax22",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax23",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax24",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax25",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests",
      "target": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_type_error_attribute",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax13",
      "target": "tests/template_tests/utils.py:SomeClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax14",
      "target": "tests/template_tests/utils.py:SomeClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax18",
      "target": "tests/template_tests/utils.py:UTF8Class",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax21",
      "target": "tests/template_tests/utils.py:SomeClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax22",
      "target": "tests/template_tests/utils.py:SomeClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax23",
      "target": "tests/template_tests/utils.py:SomeClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax24",
      "target": "tests/template_tests/utils.py:SomeClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_filter_syntax25",
      "target": "tests/template_tests/utils.py:SomeClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_syntax.py:FilterSyntaxTests.test_type_error_attribute",
      "target": "tests/template_tests/utils.py:SomeClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_changed.py",
      "target": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_changed.py",
      "target": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_changed.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged_param01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged_param02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged_param03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged_param04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged_param05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged_else01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged_else02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged_else03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged_else04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTagTests.test_ifchanged_filter_ws",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTests",
      "target": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTests.setUpClass",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTests",
      "target": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTests.test_ifchanged_concurrency",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTests",
      "target": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTests.test_ifchanged_render_once",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTests",
      "target": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTests.test_include",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTests",
      "target": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTests.test_include_state",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTests.test_ifchanged_concurrency",
      "target": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTests.test_ifchanged_concurrency.gen",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTests.test_ifchanged_concurrency",
      "target": "tests/template_tests/syntax_tests/test_if_changed.py:IfChangedTests.test_ifchanged_concurrency.gen",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_spaceless.py",
      "target": "tests/template_tests/syntax_tests/test_spaceless.py:SpacelessTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_spaceless.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_spaceless.py:SpacelessTagTests",
      "target": "tests/template_tests/syntax_tests/test_spaceless.py:SpacelessTagTests.test_spaceless01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_spaceless.py:SpacelessTagTests",
      "target": "tests/template_tests/syntax_tests/test_spaceless.py:SpacelessTagTests.test_spaceless02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_spaceless.py:SpacelessTagTests",
      "target": "tests/template_tests/syntax_tests/test_spaceless.py:SpacelessTagTests.test_spaceless03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_spaceless.py:SpacelessTagTests",
      "target": "tests/template_tests/syntax_tests/test_spaceless.py:SpacelessTagTests.test_spaceless04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_spaceless.py:SpacelessTagTests",
      "target": "tests/template_tests/syntax_tests/test_spaceless.py:SpacelessTagTests.test_spaceless05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_spaceless.py:SpacelessTagTests",
      "target": "tests/template_tests/syntax_tests/test_spaceless.py:SpacelessTagTests.test_spaceless06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_lorem.py",
      "target": "tests/template_tests/syntax_tests/test_lorem.py:LoremTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_lorem.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_lorem.py:LoremTagTests",
      "target": "tests/template_tests/syntax_tests/test_lorem.py:LoremTagTests.test_lorem1",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_lorem.py:LoremTagTests",
      "target": "tests/template_tests/syntax_tests/test_lorem.py:LoremTagTests.test_lorem_random",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_exceptions.py",
      "target": "tests/template_tests/syntax_tests/test_exceptions.py:ExceptionsTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_exceptions.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_exceptions.py",
      "target": "tests/template_tests/syntax_tests/test_extends.py",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_exceptions.py:ExceptionsTests",
      "target": "tests/template_tests/syntax_tests/test_exceptions.py:ExceptionsTests.test_exception01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_exceptions.py:ExceptionsTests",
      "target": "tests/template_tests/syntax_tests/test_exceptions.py:ExceptionsTests.test_exception02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_exceptions.py:ExceptionsTests",
      "target": "tests/template_tests/syntax_tests/test_exceptions.py:ExceptionsTests.test_exception03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_exceptions.py:ExceptionsTests",
      "target": "tests/template_tests/syntax_tests/test_exceptions.py:ExceptionsTests.test_exception04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_exceptions.py:ExceptionsTests",
      "target": "tests/template_tests/syntax_tests/test_exceptions.py:ExceptionsTests.test_exception05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_invalid_string.py",
      "target": "tests/template_tests/syntax_tests/test_invalid_string.py:InvalidStringTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_invalid_string.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_invalid_string.py:InvalidStringTests",
      "target": "tests/template_tests/syntax_tests/test_invalid_string.py:InvalidStringTests.test_invalidstr01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_invalid_string.py:InvalidStringTests",
      "target": "tests/template_tests/syntax_tests/test_invalid_string.py:InvalidStringTests.test_invalidstr02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_invalid_string.py:InvalidStringTests",
      "target": "tests/template_tests/syntax_tests/test_invalid_string.py:InvalidStringTests.test_invalidstr03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_invalid_string.py:InvalidStringTests",
      "target": "tests/template_tests/syntax_tests/test_invalid_string.py:InvalidStringTests.test_invalidstr04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_invalid_string.py:InvalidStringTests",
      "target": "tests/template_tests/syntax_tests/test_invalid_string.py:InvalidStringTests.test_invalidstr04_2",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_invalid_string.py:InvalidStringTests",
      "target": "tests/template_tests/syntax_tests/test_invalid_string.py:InvalidStringTests.test_invalidstr05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_invalid_string.py:InvalidStringTests",
      "target": "tests/template_tests/syntax_tests/test_invalid_string.py:InvalidStringTests.test_invalidstr06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_invalid_string.py:InvalidStringTests",
      "target": "tests/template_tests/syntax_tests/test_invalid_string.py:InvalidStringTests.test_invalidstr07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_regroup.py",
      "target": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_regroup.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests",
      "target": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests.test_regroup01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests",
      "target": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests.test_regroup02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests",
      "target": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests.test_regroup03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests",
      "target": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests.test_regroup04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests",
      "target": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests.test_regroup05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests",
      "target": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests.test_regroup06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests",
      "target": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests.test_regroup07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests",
      "target": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests.test_regroup08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests",
      "target": "tests/template_tests/syntax_tests/test_regroup.py:RegroupTagTests.test_regroup_unpack",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_resetcycle.py",
      "target": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_resetcycle.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests.test_resetcycle01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests.test_resetcycle02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests.test_resetcycle03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests.test_resetcycle04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests.test_resetcycle05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests.test_resetcycle06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests.test_resetcycle07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests.test_resetcycle08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests.test_resetcycle09",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests.test_resetcycle10",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_resetcycle.py:ResetCycleTagTests.test_resetcycle11",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_tag.py",
      "target": "tests/template_tests/syntax_tests/test_filter_tag.py:FilterTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_tag.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_tag.py:FilterTagTests",
      "target": "tests/template_tests/syntax_tests/test_filter_tag.py:FilterTagTests.test_filter01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_tag.py:FilterTagTests",
      "target": "tests/template_tests/syntax_tests/test_filter_tag.py:FilterTagTests.test_filter02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_tag.py:FilterTagTests",
      "target": "tests/template_tests/syntax_tests/test_filter_tag.py:FilterTagTests.test_filter03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_tag.py:FilterTagTests",
      "target": "tests/template_tests/syntax_tests/test_filter_tag.py:FilterTagTests.test_filter04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_tag.py:FilterTagTests",
      "target": "tests/template_tests/syntax_tests/test_filter_tag.py:FilterTagTests.test_filter05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_tag.py:FilterTagTests",
      "target": "tests/template_tests/syntax_tests/test_filter_tag.py:FilterTagTests.test_filter05bis",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_tag.py:FilterTagTests",
      "target": "tests/template_tests/syntax_tests/test_filter_tag.py:FilterTagTests.test_filter06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_filter_tag.py:FilterTagTests",
      "target": "tests/template_tests/syntax_tests/test_filter_tag.py:FilterTagTests.test_filter06bis",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForNodeTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_vars01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_vars02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_vars03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_vars04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_vars05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_vars06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_unpack01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_unpack03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_unpack04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_unpack05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_unpack06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_unpack07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_unpack08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_unpack_double_quote",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_unpack_single_quote",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_unpack_vertical_bar",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_unpack09",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_unpack13",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_empty01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_empty02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_empty03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_filter_ws",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_unpack_strs",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_unpack10",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_unpack11",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_unpack12",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_unpack14",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_for_tag_context",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_invalid_arg",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForTagTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForTagTests.test_invalid_in_keyword",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_for.py:ForNodeTests",
      "target": "tests/template_tests/syntax_tests/test_for.py:ForNodeTests.test_repr",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_verbatim.py",
      "target": "tests/template_tests/syntax_tests/test_verbatim.py:VerbatimTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_verbatim.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_verbatim.py:VerbatimTagTests",
      "target": "tests/template_tests/syntax_tests/test_verbatim.py:VerbatimTagTests.test_verbatim_tag01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_verbatim.py:VerbatimTagTests",
      "target": "tests/template_tests/syntax_tests/test_verbatim.py:VerbatimTagTests.test_verbatim_tag02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_verbatim.py:VerbatimTagTests",
      "target": "tests/template_tests/syntax_tests/test_verbatim.py:VerbatimTagTests.test_verbatim_tag03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_verbatim.py:VerbatimTagTests",
      "target": "tests/template_tests/syntax_tests/test_verbatim.py:VerbatimTagTests.test_verbatim_tag04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_verbatim.py:VerbatimTagTests",
      "target": "tests/template_tests/syntax_tests/test_verbatim.py:VerbatimTagTests.test_verbatim_tag05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_verbatim.py:VerbatimTagTests",
      "target": "tests/template_tests/syntax_tests/test_verbatim.py:VerbatimTagTests.test_verbatim_tag06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py",
      "target": "tests/template_tests/syntax_tests/test_basic.py",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include09",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include10",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include11",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include12",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include13",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include14",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include_error01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include_error02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include_error03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include_error04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include_error05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include_error06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include_fail1",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include_fail2",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include_error07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include_error08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include_error09",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include_error10",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTagTests.test_include_empty",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTests.test_include_missing_template",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTests.test_extends_include_missing_baseloader",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTests.test_extends_include_missing_cachedloader",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTests.test_include_template_argument",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTests.test_include_from_loader_get_template",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTests.test_include_immediate_missing",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTests.test_include_recursive",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_include.py:IncludeTests",
      "target": "tests/template_tests/syntax_tests/test_include.py:IncludeTests.test_include_cache",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cycle.py",
      "target": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cycle.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle10",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle11",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle12",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle13",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle14",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle15",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle16",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle17",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle18",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle19",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle20",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle21",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle22",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle23",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle24",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle25",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle26",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle27",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle28",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle29",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle30",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests",
      "target": "tests/template_tests/syntax_tests/test_cycle.py:CycleTagTests.test_cycle_undefined",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url02a",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url02b",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url02c",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url09",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url10",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url11",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url12",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url13",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url14",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url15",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url18",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url19",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url20",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url21",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail09",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail11",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail12",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail13",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail14",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail15",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail16",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail17",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail18",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_fail19",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_asvar01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_asvar02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_asvar03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_namespace01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_namespace02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_namespace03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_namespace_no_current_app",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests",
      "target": "tests/template_tests/syntax_tests/test_url.py:UrlTagTests.test_url_namespace_explicit_current_app",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfNodeTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py",
      "target": "tests/template_tests/utils.py:TestObj",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag09",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag10",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag11",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag12",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag13",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_filter01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_filter02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_eq01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_eq02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_eq03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_eq04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_eq05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_noteq01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_noteq02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_noteq03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_noteq04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_noteq05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_gt_01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_gt_02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_gte_01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_gte_02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_lt_01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_lt_02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_lte_01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_lte_02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_in_01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_in_02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not_in_01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not_in_02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_and01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_and02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_and03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_and04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_and05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_and06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_and07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_and08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_or01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_or02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_or03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_or04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_or05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_or06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_or07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_or08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_or09",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not09",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not10",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not11",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not12",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not13",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not14",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not15",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not16",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not17",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not18",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not19",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not20",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not21",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not22",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not23",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not24",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not25",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not26",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not27",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not28",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not29",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not30",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not31",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not32",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not33",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not34",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_not35",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_error01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_error02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_error03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_error04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_error05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_error06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_error07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_error08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_error09",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_error10",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_error11",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_error12",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_else_if_tag_error01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_shortcircuit01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_shortcircuit02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_badarg01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_badarg02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_badarg03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_badarg04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_single_eq",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_is_match",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_is_no_match",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_is_variable_missing",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_is_both_variables_missing",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_is_not_match",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_is_not_no_match",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_is_not_variable_missing",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_is_not_both_variables_missing",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_shortcircuit01",
      "target": "tests/template_tests/utils.py:TestObj",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfTagTests.test_if_tag_shortcircuit02",
      "target": "tests/template_tests/utils.py:TestObj",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if.py:IfNodeTests",
      "target": "tests/template_tests/syntax_tests/test_if.py:IfNodeTests.test_repr",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_template_tag.py",
      "target": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_template_tag.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests",
      "target": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests.test_templatetag01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests",
      "target": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests.test_templatetag02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests",
      "target": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests.test_templatetag03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests",
      "target": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests.test_templatetag04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests",
      "target": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests.test_templatetag05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests",
      "target": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests.test_templatetag06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests",
      "target": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests.test_templatetag07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests",
      "target": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests.test_templatetag08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests",
      "target": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests.test_templatetag09",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests",
      "target": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests.test_templatetag10",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests",
      "target": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests.test_templatetag11",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests",
      "target": "tests/template_tests/syntax_tests/test_template_tag.py:TemplateTagTests.test_templatetag12",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_named_endblock.py",
      "target": "tests/template_tests/syntax_tests/test_named_endblock.py:NamedEndblockTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_named_endblock.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_named_endblock.py:NamedEndblockTests",
      "target": "tests/template_tests/syntax_tests/test_named_endblock.py:NamedEndblockTests.test_namedendblocks01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_named_endblock.py:NamedEndblockTests",
      "target": "tests/template_tests/syntax_tests/test_named_endblock.py:NamedEndblockTests.test_namedendblocks02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_named_endblock.py:NamedEndblockTests",
      "target": "tests/template_tests/syntax_tests/test_named_endblock.py:NamedEndblockTests.test_namedendblocks03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_named_endblock.py:NamedEndblockTests",
      "target": "tests/template_tests/syntax_tests/test_named_endblock.py:NamedEndblockTests.test_namedendblocks04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_named_endblock.py:NamedEndblockTests",
      "target": "tests/template_tests/syntax_tests/test_named_endblock.py:NamedEndblockTests.test_namedendblocks05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_named_endblock.py:NamedEndblockTests",
      "target": "tests/template_tests/syntax_tests/test_named_endblock.py:NamedEndblockTests.test_namedendblocks06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_named_endblock.py:NamedEndblockTests",
      "target": "tests/template_tests/syntax_tests/test_named_endblock.py:NamedEndblockTests.test_namedendblocks07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_load.py",
      "target": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_load.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests",
      "target": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests.test_load01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests",
      "target": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests.test_load02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests",
      "target": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests.test_load03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests",
      "target": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests.test_load04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests",
      "target": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests.test_load05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests",
      "target": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests.test_load06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests",
      "target": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests.test_load07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests",
      "target": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests.test_load08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests",
      "target": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests.test_load09",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests",
      "target": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests.test_load10",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests",
      "target": "tests/template_tests/syntax_tests/test_load.py:LoadTagTests.test_load12",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_numpy.py",
      "target": "tests/template_tests/syntax_tests/test_numpy.py:NumpyTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_numpy.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_numpy.py:NumpyTests",
      "target": "tests/template_tests/syntax_tests/test_numpy.py:NumpyTests.test_numpy_array_index01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_numpy.py:NumpyTests",
      "target": "tests/template_tests/syntax_tests/test_numpy.py:NumpyTests.test_numpy_array_index02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfNotEqualTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal09",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal10",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_split01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_split02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_split03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_split04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_split05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_split06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_split07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_split08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_split09",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_split10",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_numeric01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_numeric02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_numeric03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_numeric04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_numeric05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_numeric06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_numeric07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_numeric08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_numeric09",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_numeric10",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_numeric11",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_numeric12",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_filter01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_filter02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_filter03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_filter04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTagTests.test_ifequal_filter05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfNotEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfNotEqualTagTests.test_ifnotequal01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfNotEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfNotEqualTagTests.test_ifnotequal02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfNotEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfNotEqualTagTests.test_ifnotequal03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfNotEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfNotEqualTagTests.test_ifnotequal04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfNotEqualTagTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfNotEqualTagTests.test_one_var",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTests",
      "target": "tests/template_tests/syntax_tests/test_if_equal.py:IfEqualTests.test_repr",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cache.py",
      "target": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cache.py",
      "target": "tests/template_tests/syntax_tests/test_cache.py:CacheTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cache.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests",
      "target": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.tearDown",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests",
      "target": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_cache03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests",
      "target": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_cache04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests",
      "target": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_cache05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests",
      "target": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_cache06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests",
      "target": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_cache07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests",
      "target": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_cache08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests",
      "target": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_cache11",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests",
      "target": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_cache12",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests",
      "target": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_cache13",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests",
      "target": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_cache14",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests",
      "target": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_cache15",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests",
      "target": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_cache16",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests",
      "target": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_cache17",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests",
      "target": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_cache18",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests",
      "target": "tests/template_tests/syntax_tests/test_cache.py:CacheTagTests.test_none_timeout",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cache.py:CacheTests",
      "target": "tests/template_tests/syntax_tests/test_cache.py:CacheTests.setUpClass",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cache.py:CacheTests",
      "target": "tests/template_tests/syntax_tests/test_cache.py:CacheTests.test_cache_regression_20130",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cache.py:CacheTests",
      "target": "tests/template_tests/syntax_tests/test_cache.py:CacheTests.test_cache_fragment_cache",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/test_cache.py:CacheTests",
      "target": "tests/template_tests/syntax_tests/test_cache.py:CacheTests.test_cache_missing_backend",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n",
      "target": "tests/template_tests/syntax_tests/i18n/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n",
      "target": "tests/template_tests/syntax_tests/i18n/test_get_available_languages.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n",
      "target": "tests/template_tests/syntax_tests/i18n/test_get_language_info.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n",
      "target": "tests/template_tests/syntax_tests/i18n/test_get_current_language.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n",
      "target": "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n",
      "target": "tests/template_tests/syntax_tests/i18n/test_get_current_language_bidi.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n",
      "target": "tests/template_tests/syntax_tests/i18n/test_filters.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n",
      "target": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n",
      "target": "tests/template_tests/syntax_tests/i18n/test_language.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n",
      "target": "tests/template_tests/syntax_tests/i18n/base.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:TranslationTransTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:MultipleLocaleActivationTransTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:LocalizeNodeTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "target": "tests/template_tests/syntax_tests/i18n/base.py:MultipleLocaleActivationTestCase",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py",
      "target": "tests/template_tests/syntax_tests/i18n/base.py",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_i18n01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_i18n02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_i18n06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_i18n09",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_i18n20",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_i18n22",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_i18n23",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_i18n24",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_i18n25",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_i18n35",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_i18n36",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_syntax_error_no_arguments",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_syntax_error_bad_option",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_syntax_error_missing_assignment",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_syntax_error_missing_context",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_syntax_error_context_as",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_syntax_error_context_noop",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_syntax_error_duplicate_option",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:I18nTransTagTests.test_trans_tag_using_a_string_that_looks_like_str_fmt",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py:TranslationTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:TranslationTransTagTests.test_template_tags_pgettext",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py:MultipleLocaleActivationTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:MultipleLocaleActivationTransTagTests.test_single_locale_activation",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py:MultipleLocaleActivationTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:MultipleLocaleActivationTransTagTests.test_multiple_locale_trans",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py:MultipleLocaleActivationTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:MultipleLocaleActivationTransTagTests.test_multiple_locale_deactivate_trans",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py:MultipleLocaleActivationTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:MultipleLocaleActivationTransTagTests.test_multiple_locale_direct_switch_trans",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py:MultipleLocaleActivationTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/base.py:MultipleLocaleActivationTestCase",
      "type": "inherits"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_trans.py:LocalizeNodeTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_trans.py:LocalizeNodeTests.test_repr",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_get_available_languages.py",
      "target": "tests/template_tests/syntax_tests/i18n/test_get_available_languages.py:GetAvailableLanguagesTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_get_available_languages.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_get_available_languages.py:GetAvailableLanguagesTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_get_available_languages.py:GetAvailableLanguagesTagTests.test_i18n12",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_get_available_languages.py:GetAvailableLanguagesTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_get_available_languages.py:GetAvailableLanguagesTagTests.test_no_as_var",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_get_language_info.py",
      "target": "tests/template_tests/syntax_tests/i18n/test_get_language_info.py:I18nGetLanguageInfoTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_get_language_info.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_get_language_info.py:I18nGetLanguageInfoTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_get_language_info.py:I18nGetLanguageInfoTagTests.test_i18n28_2",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_get_language_info.py:I18nGetLanguageInfoTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_get_language_info.py:I18nGetLanguageInfoTagTests.test_i18n29",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_get_language_info.py:I18nGetLanguageInfoTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_get_language_info.py:I18nGetLanguageInfoTagTests.test_i18n38",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_get_language_info.py:I18nGetLanguageInfoTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_get_language_info.py:I18nGetLanguageInfoTagTests.test_no_for_as",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_get_current_language.py",
      "target": "tests/template_tests/syntax_tests/i18n/test_get_current_language.py:I18nGetCurrentLanguageTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_get_current_language.py:I18nGetCurrentLanguageTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_get_current_language.py:I18nGetCurrentLanguageTagTests.test_no_as_var",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:TranslationBlockTransTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:MultipleLocaleActivationBlockTransTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:MiscTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "target": "tests/template_tests/syntax_tests/i18n/base.py:MultipleLocaleActivationTestCase",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "target": "tests/template_tests/syntax_tests/i18n/base.py",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      "target": "tests/template_tests/syntax_tests/i18n/base.py",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_legacyi18n04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_legacyi18n07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_legacyi18n08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n17",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n18",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n19",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n21",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_legacyi18n17",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_legacyi18n18",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n26",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_legacyi18n26",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n27",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_legacyi18n27",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n28",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_legacyi18n28",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n34",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n34_2",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n34_3",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n37",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n39",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n40",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_i18n41",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_blocktrans_syntax_error_missing_assignment",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_blocktrans_tag_using_a_string_that_looks_like_str_fmt",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_with_block",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_with_for",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_variable_twice",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_no_args_with",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_count",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:I18nBlockTransTagTests.test_plural_bad_syntax",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:TranslationBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:TranslationBlockTransTagTests.test_template_tags_pgettext",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:TranslationBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:TranslationBlockTransTagTests.test_bad_placeholder_1",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:TranslationBlockTransTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:TranslationBlockTransTagTests.test_bad_placeholder_2",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:MultipleLocaleActivationBlockTransTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:MultipleLocaleActivationBlockTransTests.test_single_locale_activation",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:MultipleLocaleActivationBlockTransTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:MultipleLocaleActivationBlockTransTests.test_multiple_locale_btrans",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:MultipleLocaleActivationBlockTransTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:MultipleLocaleActivationBlockTransTests.test_multiple_locale_deactivate_btrans",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:MultipleLocaleActivationBlockTransTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:MultipleLocaleActivationBlockTransTests.test_multiple_locale_direct_switch_btrans",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:MultipleLocaleActivationBlockTransTests",
      "target": "tests/template_tests/syntax_tests/i18n/base.py:MultipleLocaleActivationTestCase",
      "type": "inherits"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:MiscTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:MiscTests.test_percent_in_translatable_block",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:MiscTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_blocktrans.py:MiscTests.test_percent_formatting_in_blocktrans",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py",
      "target": "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py:GetLanguageInfoListTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py:GetLanguageInfoListTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py:GetLanguageInfoListTests.test_i18n30",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py:GetLanguageInfoListTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py:GetLanguageInfoListTests.test_i18n31",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py:GetLanguageInfoListTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py:GetLanguageInfoListTests.test_i18n38_2",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py:GetLanguageInfoListTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py:GetLanguageInfoListTests.test_no_for_as",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_get_current_language_bidi.py",
      "target": "tests/template_tests/syntax_tests/i18n/test_get_current_language_bidi.py:I18nGetCurrentLanguageBidiTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_get_current_language_bidi.py:I18nGetCurrentLanguageBidiTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_get_current_language_bidi.py:I18nGetCurrentLanguageBidiTagTests.test_no_as_var",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_filters.py",
      "target": "tests/template_tests/syntax_tests/i18n/test_filters.py:I18nFiltersTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_filters.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_filters.py:I18nFiltersTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_filters.py:I18nFiltersTests.test_i18n32",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_filters.py:I18nFiltersTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_filters.py:I18nFiltersTests.test_i18n33",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_filters.py:I18nFiltersTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_filters.py:I18nFiltersTests.test_i18n38_2",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      "target": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      "target": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:I18nStringLiteralTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      "target": "tests/template_tests/syntax_tests/i18n/base.py:MultipleLocaleActivationTestCase",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests.test_single_locale_activation",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests.test_multiple_locale_filter",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests.test_multiple_locale_filter_deactivate",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests.test_multiple_locale_filter_direct_switch",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests.test_multiple_locale",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests.test_multiple_locale_deactivate",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests.test_multiple_locale_direct_switch",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests.test_multiple_locale_loadi18n",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests.test_multiple_locale_loadi18n_deactivate",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests.test_multiple_locale_loadi18n_direct_switch",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:MultipleLocaleActivationTests",
      "target": "tests/template_tests/syntax_tests/i18n/base.py:MultipleLocaleActivationTestCase",
      "type": "inherits"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:I18nStringLiteralTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:I18nStringLiteralTests.test_i18n13",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:I18nStringLiteralTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:I18nStringLiteralTests.test_i18n14",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:I18nStringLiteralTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:I18nStringLiteralTests.test_i18n15",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:I18nStringLiteralTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:I18nStringLiteralTests.test_i18n16",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_language.py",
      "target": "tests/template_tests/syntax_tests/i18n/test_language.py:I18nLanguageTagTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/test_language.py:I18nLanguageTagTests",
      "target": "tests/template_tests/syntax_tests/i18n/test_language.py:I18nLanguageTagTests.test_no_arg",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/base.py",
      "target": "tests/template_tests/syntax_tests/i18n/base.py:MultipleLocaleActivationTestCase",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/base.py:MultipleLocaleActivationTestCase",
      "target": "tests/template_tests/syntax_tests/i18n/base.py:MultipleLocaleActivationTestCase.setUp",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/syntax_tests/i18n/base.py:MultipleLocaleActivationTestCase",
      "target": "tests/template_tests/syntax_tests/i18n/base.py:MultipleLocaleActivationTestCase.tearDown",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/test_capfirst.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/test_pluralize.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/test_lower.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/timezone_utils.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/test_filesizeformat.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/test_urlize.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/test_first.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/test_slugify.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/test_safe.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/test_cut.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/test_iriencode.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/test_yesno.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/test_autoescape.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/test_linenumbers.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/test_time.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/test_rjust.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/test_addslashes.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/test_force_escape.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/test_linebreaksbr.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/test_timeuntil.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/test_truncatechars_html.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/test_join.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/test_truncatewords_html.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/test_truncatechars.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/test_dictsortreversed.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/__init__.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/test_add.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/test_ljust.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests",
      "target": "tests/template_tests/filter_tests/test_title.py",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_capfirst.py",
      "target": "tests/template_tests/filter_tests/test_capfirst.py:CapfirstTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_capfirst.py",
      "target": "tests/template_tests/filter_tests/test_capfirst.py:FunctionTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_capfirst.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/filter_tests/test_capfirst.py:CapfirstTests",
      "target": "tests/template_tests/filter_tests/test_capfirst.py:CapfirstTests.test_capfirst01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_capfirst.py:CapfirstTests",
      "target": "tests/template_tests/filter_tests/test_capfirst.py:CapfirstTests.test_capfirst02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_capfirst.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_capfirst.py:FunctionTests.test_capfirst",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_pluralize.py",
      "target": "tests/template_tests/filter_tests/test_pluralize.py:PluralizeTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_pluralize.py",
      "target": "tests/template_tests/filter_tests/test_pluralize.py:FunctionTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_pluralize.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/filter_tests/test_pluralize.py:PluralizeTests",
      "target": "tests/template_tests/filter_tests/test_pluralize.py:PluralizeTests.check_values",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_pluralize.py:PluralizeTests",
      "target": "tests/template_tests/filter_tests/test_pluralize.py:PluralizeTests.test_no_arguments",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_pluralize.py:PluralizeTests",
      "target": "tests/template_tests/filter_tests/test_pluralize.py:PluralizeTests.test_suffix",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_pluralize.py:PluralizeTests",
      "target": "tests/template_tests/filter_tests/test_pluralize.py:PluralizeTests.test_singular_and_plural_suffix",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_pluralize.py:PluralizeTests.test_no_arguments",
      "target": "tests/template_tests/filter_tests/test_pluralize.py:PluralizeTests.check_values",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/filter_tests/test_pluralize.py:PluralizeTests.test_suffix",
      "target": "tests/template_tests/filter_tests/test_pluralize.py:PluralizeTests.check_values",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/filter_tests/test_pluralize.py:PluralizeTests.test_singular_and_plural_suffix",
      "target": "tests/template_tests/filter_tests/test_pluralize.py:PluralizeTests.check_values",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/filter_tests/test_pluralize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_pluralize.py:FunctionTests.test_integers",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_pluralize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_pluralize.py:FunctionTests.test_floats",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_pluralize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_pluralize.py:FunctionTests.test_decimals",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_pluralize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_pluralize.py:FunctionTests.test_lists",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_pluralize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_pluralize.py:FunctionTests.test_suffixes",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_pluralize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_pluralize.py:FunctionTests.test_no_len_type",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_pluralize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_pluralize.py:FunctionTests.test_value_error",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_lower.py",
      "target": "tests/template_tests/filter_tests/test_lower.py:LowerTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_lower.py",
      "target": "tests/template_tests/filter_tests/test_lower.py:FunctionTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_lower.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/filter_tests/test_lower.py:LowerTests",
      "target": "tests/template_tests/filter_tests/test_lower.py:LowerTests.test_lower01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_lower.py:LowerTests",
      "target": "tests/template_tests/filter_tests/test_lower.py:LowerTests.test_lower02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_lower.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_lower.py:FunctionTests.test_lower",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_lower.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_lower.py:FunctionTests.test_unicode",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_lower.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_lower.py:FunctionTests.test_non_string_input",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/timezone_utils.py",
      "target": "tests/template_tests/filter_tests/timezone_utils.py:TimezoneTestCase",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/timezone_utils.py:TimezoneTestCase",
      "target": "tests/template_tests/filter_tests/timezone_utils.py:TimezoneTestCase.setUp",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_filesizeformat.py",
      "target": "tests/template_tests/filter_tests/test_filesizeformat.py:FunctionTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_filesizeformat.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_filesizeformat.py:FunctionTests.test_formats",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_filesizeformat.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_filesizeformat.py:FunctionTests.test_localized_formats",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_filesizeformat.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_filesizeformat.py:FunctionTests.test_negative_numbers",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py",
      "target": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests.test_urlize01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests.test_urlize02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests.test_urlize03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests.test_urlize04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests.test_urlize05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests.test_urlize06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests.test_urlize07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests.test_urlize08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:UrlizeTests.test_urlize09",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_urls",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_url_split_chars",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_email",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_word_with_dot",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_https",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_quoting",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_urlencoded",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_unicode",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_parenthesis",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_nofollow",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_idn",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_malformed",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_tlds",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_invalid_email",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_uppercase",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_trailing_period",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_trailing_multiple_punctuation",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_brackets",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_wrapping_characters",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_ipv4",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_ipv6",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_quotation_marks",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_quote_commas",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_exclamation_marks",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_non_string_input",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_autoescape",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_autoescape_off",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_urlize.py:FunctionTests.test_lazystring",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_first.py",
      "target": "tests/template_tests/filter_tests/test_first.py:FirstTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_first.py",
      "target": "tests/template_tests/filter_tests/test_first.py:FunctionTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_first.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/filter_tests/test_first.py:FirstTests",
      "target": "tests/template_tests/filter_tests/test_first.py:FirstTests.test_first01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_first.py:FirstTests",
      "target": "tests/template_tests/filter_tests/test_first.py:FirstTests.test_first02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_first.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_first.py:FunctionTests.test_list",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_first.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_first.py:FunctionTests.test_empty_string",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_first.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_first.py:FunctionTests.test_string",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_slugify.py",
      "target": "tests/template_tests/filter_tests/test_slugify.py:SlugifyTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_slugify.py",
      "target": "tests/template_tests/filter_tests/test_slugify.py:FunctionTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_slugify.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/filter_tests/test_slugify.py:SlugifyTests",
      "target": "tests/template_tests/filter_tests/test_slugify.py:SlugifyTests.test_slugify01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_slugify.py:SlugifyTests",
      "target": "tests/template_tests/filter_tests/test_slugify.py:SlugifyTests.test_slugify02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_slugify.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_slugify.py:FunctionTests.test_slugify",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_slugify.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_slugify.py:FunctionTests.test_unicode",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_slugify.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_slugify.py:FunctionTests.test_non_string_input",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_slugify.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_slugify.py:FunctionTests.test_slugify_lazy_string",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_safe.py",
      "target": "tests/template_tests/filter_tests/test_safe.py:SafeTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_safe.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/filter_tests/test_safe.py:SafeTests",
      "target": "tests/template_tests/filter_tests/test_safe.py:SafeTests.test_safe01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_safe.py:SafeTests",
      "target": "tests/template_tests/filter_tests/test_safe.py:SafeTests.test_safe02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_cut.py",
      "target": "tests/template_tests/filter_tests/test_cut.py:CutTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_cut.py",
      "target": "tests/template_tests/filter_tests/test_cut.py:FunctionTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_cut.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/filter_tests/test_cut.py:CutTests",
      "target": "tests/template_tests/filter_tests/test_cut.py:CutTests.test_cut01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_cut.py:CutTests",
      "target": "tests/template_tests/filter_tests/test_cut.py:CutTests.test_cut02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_cut.py:CutTests",
      "target": "tests/template_tests/filter_tests/test_cut.py:CutTests.test_cut03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_cut.py:CutTests",
      "target": "tests/template_tests/filter_tests/test_cut.py:CutTests.test_cut04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_cut.py:CutTests",
      "target": "tests/template_tests/filter_tests/test_cut.py:CutTests.test_cut05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_cut.py:CutTests",
      "target": "tests/template_tests/filter_tests/test_cut.py:CutTests.test_cut06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_cut.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_cut.py:FunctionTests.test_character",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_cut.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_cut.py:FunctionTests.test_characters",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_cut.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_cut.py:FunctionTests.test_non_matching_string",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_cut.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_cut.py:FunctionTests.test_non_string_input",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_iriencode.py",
      "target": "tests/template_tests/filter_tests/test_iriencode.py:IriencodeTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_iriencode.py",
      "target": "tests/template_tests/filter_tests/test_iriencode.py:FunctionTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_iriencode.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/filter_tests/test_iriencode.py:IriencodeTests",
      "target": "tests/template_tests/filter_tests/test_iriencode.py:IriencodeTests.test_iriencode01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_iriencode.py:IriencodeTests",
      "target": "tests/template_tests/filter_tests/test_iriencode.py:IriencodeTests.test_iriencode02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_iriencode.py:IriencodeTests",
      "target": "tests/template_tests/filter_tests/test_iriencode.py:IriencodeTests.test_iriencode03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_iriencode.py:IriencodeTests",
      "target": "tests/template_tests/filter_tests/test_iriencode.py:IriencodeTests.test_iriencode04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_iriencode.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_iriencode.py:FunctionTests.test_unicode",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_iriencode.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_iriencode.py:FunctionTests.test_urlencoded",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_yesno.py",
      "target": "tests/template_tests/filter_tests/test_yesno.py:YesNoTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_yesno.py",
      "target": "tests/template_tests/filter_tests/test_yesno.py:FunctionTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_yesno.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/filter_tests/test_yesno.py:YesNoTests",
      "target": "tests/template_tests/filter_tests/test_yesno.py:YesNoTests.test_true",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_yesno.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_yesno.py:FunctionTests.test_true",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_yesno.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_yesno.py:FunctionTests.test_false",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_yesno.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_yesno.py:FunctionTests.test_none",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_yesno.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_yesno.py:FunctionTests.test_true_arguments",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_yesno.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_yesno.py:FunctionTests.test_false_arguments",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_yesno.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_yesno.py:FunctionTests.test_none_two_arguments",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_yesno.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_yesno.py:FunctionTests.test_none_three_arguments",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_yesno.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_yesno.py:FunctionTests.test_invalid_value",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_autoescape.py",
      "target": "tests/template_tests/filter_tests/test_autoescape.py:AutoescapeStringfilterTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_autoescape.py",
      "target": "tests/template_tests/utils.py:SafeClass",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/filter_tests/test_autoescape.py",
      "target": "tests/template_tests/utils.py:UnsafeClass",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/filter_tests/test_autoescape.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/filter_tests/test_autoescape.py:AutoescapeStringfilterTests",
      "target": "tests/template_tests/filter_tests/test_autoescape.py:AutoescapeStringfilterTests.test_autoescape_stringfilter01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_autoescape.py:AutoescapeStringfilterTests",
      "target": "tests/template_tests/filter_tests/test_autoescape.py:AutoescapeStringfilterTests.test_autoescape_stringfilter02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_autoescape.py:AutoescapeStringfilterTests",
      "target": "tests/template_tests/filter_tests/test_autoescape.py:AutoescapeStringfilterTests.test_autoescape_stringfilter03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_autoescape.py:AutoescapeStringfilterTests",
      "target": "tests/template_tests/filter_tests/test_autoescape.py:AutoescapeStringfilterTests.test_autoescape_stringfilter04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_autoescape.py:AutoescapeStringfilterTests.test_autoescape_stringfilter01",
      "target": "tests/template_tests/utils.py:UnsafeClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/filter_tests/test_autoescape.py:AutoescapeStringfilterTests.test_autoescape_stringfilter02",
      "target": "tests/template_tests/utils.py:UnsafeClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/filter_tests/test_autoescape.py:AutoescapeStringfilterTests.test_autoescape_stringfilter03",
      "target": "tests/template_tests/utils.py:SafeClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/filter_tests/test_autoescape.py:AutoescapeStringfilterTests.test_autoescape_stringfilter04",
      "target": "tests/template_tests/utils.py:SafeClass",
      "type": "invokes"
    },
    {
      "source": "tests/template_tests/filter_tests/test_linenumbers.py",
      "target": "tests/template_tests/filter_tests/test_linenumbers.py:LinenumbersTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_linenumbers.py",
      "target": "tests/template_tests/filter_tests/test_linenumbers.py:FunctionTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_linenumbers.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/filter_tests/test_linenumbers.py:LinenumbersTests",
      "target": "tests/template_tests/filter_tests/test_linenumbers.py:LinenumbersTests.test_linenumbers01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_linenumbers.py:LinenumbersTests",
      "target": "tests/template_tests/filter_tests/test_linenumbers.py:LinenumbersTests.test_linenumbers02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_linenumbers.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_linenumbers.py:FunctionTests.test_linenumbers",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_linenumbers.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_linenumbers.py:FunctionTests.test_linenumbers2",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_linenumbers.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_linenumbers.py:FunctionTests.test_non_string_input",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_linenumbers.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_linenumbers.py:FunctionTests.test_autoescape",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_linenumbers.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_linenumbers.py:FunctionTests.test_autoescape_off",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_time.py",
      "target": "tests/template_tests/filter_tests/test_time.py:TimeTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_time.py",
      "target": "tests/template_tests/filter_tests/test_time.py:FunctionTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_time.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/filter_tests/test_time.py",
      "target": "tests/template_tests/filter_tests/timezone_utils.py:TimezoneTestCase",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/filter_tests/test_time.py:TimeTests",
      "target": "tests/template_tests/filter_tests/test_time.py:TimeTests.test_time00",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_time.py:TimeTests",
      "target": "tests/template_tests/filter_tests/test_time.py:TimeTests.test_time00_l10n",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_time.py:TimeTests",
      "target": "tests/template_tests/filter_tests/test_time.py:TimeTests.test_time01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_time.py:TimeTests",
      "target": "tests/template_tests/filter_tests/test_time.py:TimeTests.test_time02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_time.py:TimeTests",
      "target": "tests/template_tests/filter_tests/test_time.py:TimeTests.test_time03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_time.py:TimeTests",
      "target": "tests/template_tests/filter_tests/test_time.py:TimeTests.test_time04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_time.py:TimeTests",
      "target": "tests/template_tests/filter_tests/test_time.py:TimeTests.test_time05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_time.py:TimeTests",
      "target": "tests/template_tests/filter_tests/test_time.py:TimeTests.test_time06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_time.py:TimeTests",
      "target": "tests/template_tests/filter_tests/timezone_utils.py:TimezoneTestCase",
      "type": "inherits"
    },
    {
      "source": "tests/template_tests/filter_tests/test_time.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_time.py:FunctionTests.test_no_args",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_time.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_time.py:FunctionTests.test_inputs",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_rjust.py",
      "target": "tests/template_tests/filter_tests/test_rjust.py:RjustTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_rjust.py",
      "target": "tests/template_tests/filter_tests/test_rjust.py:FunctionTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_rjust.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/filter_tests/test_rjust.py:RjustTests",
      "target": "tests/template_tests/filter_tests/test_rjust.py:RjustTests.test_rjust01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_rjust.py:RjustTests",
      "target": "tests/template_tests/filter_tests/test_rjust.py:RjustTests.test_rjust02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_rjust.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_rjust.py:FunctionTests.test_rjust",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_rjust.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_rjust.py:FunctionTests.test_less_than_string_length",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_rjust.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_rjust.py:FunctionTests.test_non_string_input",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_addslashes.py",
      "target": "tests/template_tests/filter_tests/test_addslashes.py:AddslashesTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_addslashes.py",
      "target": "tests/template_tests/filter_tests/test_addslashes.py:FunctionTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_addslashes.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/filter_tests/test_addslashes.py:AddslashesTests",
      "target": "tests/template_tests/filter_tests/test_addslashes.py:AddslashesTests.test_addslashes01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_addslashes.py:AddslashesTests",
      "target": "tests/template_tests/filter_tests/test_addslashes.py:AddslashesTests.test_addslashes02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_addslashes.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_addslashes.py:FunctionTests.test_quotes",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_addslashes.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_addslashes.py:FunctionTests.test_backslashes",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_addslashes.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_addslashes.py:FunctionTests.test_non_string_input",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_force_escape.py",
      "target": "tests/template_tests/filter_tests/test_force_escape.py:ForceEscapeTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_force_escape.py",
      "target": "tests/template_tests/filter_tests/test_force_escape.py:FunctionTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_force_escape.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/filter_tests/test_force_escape.py:ForceEscapeTests",
      "target": "tests/template_tests/filter_tests/test_force_escape.py:ForceEscapeTests.test_force_escape01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_force_escape.py:ForceEscapeTests",
      "target": "tests/template_tests/filter_tests/test_force_escape.py:ForceEscapeTests.test_force_escape02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_force_escape.py:ForceEscapeTests",
      "target": "tests/template_tests/filter_tests/test_force_escape.py:ForceEscapeTests.test_force_escape03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_force_escape.py:ForceEscapeTests",
      "target": "tests/template_tests/filter_tests/test_force_escape.py:ForceEscapeTests.test_force_escape04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_force_escape.py:ForceEscapeTests",
      "target": "tests/template_tests/filter_tests/test_force_escape.py:ForceEscapeTests.test_force_escape05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_force_escape.py:ForceEscapeTests",
      "target": "tests/template_tests/filter_tests/test_force_escape.py:ForceEscapeTests.test_force_escape06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_force_escape.py:ForceEscapeTests",
      "target": "tests/template_tests/filter_tests/test_force_escape.py:ForceEscapeTests.test_force_escape07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_force_escape.py:ForceEscapeTests",
      "target": "tests/template_tests/filter_tests/test_force_escape.py:ForceEscapeTests.test_force_escape08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_force_escape.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_force_escape.py:FunctionTests.test_escape",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_force_escape.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_force_escape.py:FunctionTests.test_unicode",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_linebreaksbr.py",
      "target": "tests/template_tests/filter_tests/test_linebreaksbr.py:LinebreaksbrTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_linebreaksbr.py",
      "target": "tests/template_tests/filter_tests/test_linebreaksbr.py:FunctionTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_linebreaksbr.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/filter_tests/test_linebreaksbr.py:LinebreaksbrTests",
      "target": "tests/template_tests/filter_tests/test_linebreaksbr.py:LinebreaksbrTests.test_linebreaksbr01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_linebreaksbr.py:LinebreaksbrTests",
      "target": "tests/template_tests/filter_tests/test_linebreaksbr.py:LinebreaksbrTests.test_linebreaksbr02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_linebreaksbr.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_linebreaksbr.py:FunctionTests.test_newline",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_linebreaksbr.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_linebreaksbr.py:FunctionTests.test_carriage",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_linebreaksbr.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_linebreaksbr.py:FunctionTests.test_carriage_newline",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_linebreaksbr.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_linebreaksbr.py:FunctionTests.test_non_string_input",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_linebreaksbr.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_linebreaksbr.py:FunctionTests.test_autoescape",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_linebreaksbr.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_linebreaksbr.py:FunctionTests.test_autoescape_off",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_timeuntil.py",
      "target": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_timeuntil.py",
      "target": "tests/template_tests/filter_tests/test_timeuntil.py:FunctionTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_timeuntil.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/filter_tests/test_timeuntil.py",
      "target": "tests/template_tests/filter_tests/timezone_utils.py:TimezoneTestCase",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests",
      "target": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_timeuntil01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests",
      "target": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_timeuntil02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests",
      "target": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_timeuntil03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests",
      "target": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_timeuntil04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests",
      "target": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_timeuntil05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests",
      "target": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_timeuntil06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests",
      "target": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_timeuntil07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests",
      "target": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_timeuntil08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests",
      "target": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_timeuntil09",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests",
      "target": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_timeuntil10",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests",
      "target": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_timeuntil11",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests",
      "target": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_timeuntil12",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests",
      "target": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_timeuntil13",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests",
      "target": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_timeuntil14",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests",
      "target": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_naive_aware_type_error",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests",
      "target": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests.test_aware_naive_type_error",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_timeuntil.py:TimeuntilTests",
      "target": "tests/template_tests/filter_tests/timezone_utils.py:TimezoneTestCase",
      "type": "inherits"
    },
    {
      "source": "tests/template_tests/filter_tests/test_timeuntil.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_timeuntil.py:FunctionTests.test_until_now",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_timeuntil.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_timeuntil.py:FunctionTests.test_no_args",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_timeuntil.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_timeuntil.py:FunctionTests.test_explicit_date",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_truncatechars_html.py",
      "target": "tests/template_tests/filter_tests/test_truncatechars_html.py:FunctionTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_truncatechars_html.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_truncatechars_html.py:FunctionTests.test_truncate_zero",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_truncatechars_html.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_truncatechars_html.py:FunctionTests.test_truncate",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_truncatechars_html.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_truncatechars_html.py:FunctionTests.test_truncate2",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_truncatechars_html.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_truncatechars_html.py:FunctionTests.test_truncate3",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_truncatechars_html.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_truncatechars_html.py:FunctionTests.test_truncate_unicode",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_truncatechars_html.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_truncatechars_html.py:FunctionTests.test_truncate_something",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_truncatechars_html.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_truncatechars_html.py:FunctionTests.test_invalid_arg",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_join.py",
      "target": "tests/template_tests/filter_tests/test_join.py:JoinTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_join.py",
      "target": "tests/template_tests/filter_tests/test_join.py:FunctionTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_join.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/filter_tests/test_join.py:JoinTests",
      "target": "tests/template_tests/filter_tests/test_join.py:JoinTests.test_join01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_join.py:JoinTests",
      "target": "tests/template_tests/filter_tests/test_join.py:JoinTests.test_join02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_join.py:JoinTests",
      "target": "tests/template_tests/filter_tests/test_join.py:JoinTests.test_join03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_join.py:JoinTests",
      "target": "tests/template_tests/filter_tests/test_join.py:JoinTests.test_join04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_join.py:JoinTests",
      "target": "tests/template_tests/filter_tests/test_join.py:JoinTests.test_join05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_join.py:JoinTests",
      "target": "tests/template_tests/filter_tests/test_join.py:JoinTests.test_join06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_join.py:JoinTests",
      "target": "tests/template_tests/filter_tests/test_join.py:JoinTests.test_join07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_join.py:JoinTests",
      "target": "tests/template_tests/filter_tests/test_join.py:JoinTests.test_join08",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_join.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_join.py:FunctionTests.test_list",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_join.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_join.py:FunctionTests.test_autoescape",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_join.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_join.py:FunctionTests.test_autoescape_off",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_join.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_join.py:FunctionTests.test_noniterable_arg",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_join.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_join.py:FunctionTests.test_noniterable_arg_autoescape_off",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_truncatewords_html.py",
      "target": "tests/template_tests/filter_tests/test_truncatewords_html.py:FunctionTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_truncatewords_html.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_truncatewords_html.py:FunctionTests.test_truncate_zero",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_truncatewords_html.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_truncatewords_html.py:FunctionTests.test_truncate",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_truncatewords_html.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_truncatewords_html.py:FunctionTests.test_truncate2",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_truncatewords_html.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_truncatewords_html.py:FunctionTests.test_truncate3",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_truncatewords_html.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_truncatewords_html.py:FunctionTests.test_truncate4",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_truncatewords_html.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_truncatewords_html.py:FunctionTests.test_truncate_unicode",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_truncatewords_html.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_truncatewords_html.py:FunctionTests.test_truncate_complex",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_truncatewords_html.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_truncatewords_html.py:FunctionTests.test_invalid_arg",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_truncatechars.py",
      "target": "tests/template_tests/filter_tests/test_truncatechars.py:TruncatecharsTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_truncatechars.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/filter_tests/test_truncatechars.py:TruncatecharsTests",
      "target": "tests/template_tests/filter_tests/test_truncatechars.py:TruncatecharsTests.test_truncatechars01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_truncatechars.py:TruncatecharsTests",
      "target": "tests/template_tests/filter_tests/test_truncatechars.py:TruncatecharsTests.test_truncatechars02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_truncatechars.py:TruncatecharsTests",
      "target": "tests/template_tests/filter_tests/test_truncatechars.py:TruncatecharsTests.test_fail_silently_incorrect_arg",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_dictsortreversed.py",
      "target": "tests/template_tests/filter_tests/test_dictsortreversed.py:FunctionTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_dictsortreversed.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_dictsortreversed.py:FunctionTests.test_sort",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_dictsortreversed.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_dictsortreversed.py:FunctionTests.test_sort_list_of_tuples",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_dictsortreversed.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_dictsortreversed.py:FunctionTests.test_sort_list_of_tuple_like_dicts",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_dictsortreversed.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_dictsortreversed.py:FunctionTests.test_invalid_values",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_add.py",
      "target": "tests/template_tests/filter_tests/test_add.py:AddTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_add.py",
      "target": "tests/template_tests/filter_tests/test_add.py:FunctionTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_add.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/filter_tests/test_add.py:AddTests",
      "target": "tests/template_tests/filter_tests/test_add.py:AddTests.test_add01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_add.py:AddTests",
      "target": "tests/template_tests/filter_tests/test_add.py:AddTests.test_add02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_add.py:AddTests",
      "target": "tests/template_tests/filter_tests/test_add.py:AddTests.test_add03",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_add.py:AddTests",
      "target": "tests/template_tests/filter_tests/test_add.py:AddTests.test_add04",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_add.py:AddTests",
      "target": "tests/template_tests/filter_tests/test_add.py:AddTests.test_add05",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_add.py:AddTests",
      "target": "tests/template_tests/filter_tests/test_add.py:AddTests.test_add06",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_add.py:AddTests",
      "target": "tests/template_tests/filter_tests/test_add.py:AddTests.test_add07",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_add.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_add.py:FunctionTests.test_add",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_ljust.py",
      "target": "tests/template_tests/filter_tests/test_ljust.py:LjustTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_ljust.py",
      "target": "tests/template_tests/filter_tests/test_ljust.py:FunctionTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_ljust.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/filter_tests/test_ljust.py:LjustTests",
      "target": "tests/template_tests/filter_tests/test_ljust.py:LjustTests.test_ljust01",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_ljust.py:LjustTests",
      "target": "tests/template_tests/filter_tests/test_ljust.py:LjustTests.test_ljust02",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_ljust.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_ljust.py:FunctionTests.test_ljust",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_ljust.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_ljust.py:FunctionTests.test_less_than_string_length",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_ljust.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_ljust.py:FunctionTests.test_non_string_input",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_title.py",
      "target": "tests/template_tests/filter_tests/test_title.py:TitleTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_title.py",
      "target": "tests/template_tests/filter_tests/test_title.py:FunctionTests",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_title.py",
      "target": "tests/template_tests/utils.py:setup",
      "type": "imports"
    },
    {
      "source": "tests/template_tests/filter_tests/test_title.py:TitleTests",
      "target": "tests/template_tests/filter_tests/test_title.py:TitleTests.test_title1",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_title.py:TitleTests",
      "target": "tests/template_tests/filter_tests/test_title.py:TitleTests.test_title2",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_title.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_title.py:FunctionTests.test_title",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_title.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_title.py:FunctionTests.test_unicode",
      "type": "contains"
    },
    {
      "source": "tests/template_tests/filter_tests/test_title.py:FunctionTests",
      "target": "tests/template_tests/filter_tests/test_title.py:FunctionTests.test_non_string_input",
      "type": "contains"
    },
    {
      "source": "tests/db_functions",
      "target": "tests/db_functions/datetime",
      "type": "contains"
    },
    {
      "source": "tests/db_functions",
      "target": "tests/db_functions/math",
      "type": "contains"
    },
    {
      "source": "tests/db_functions",
      "target": "tests/db_functions/window",
      "type": "contains"
    },
    {
      "source": "tests/db_functions",
      "target": "tests/db_functions/comparison",
      "type": "contains"
    },
    {
      "source": "tests/db_functions",
      "target": "tests/db_functions/text",
      "type": "contains"
    },
    {
      "source": "tests/empty",
      "target": "tests/empty/no_models",
      "type": "contains"
    },
    {
      "source": "tests/urlpatterns_reverse",
      "target": "tests/urlpatterns_reverse/translations",
      "type": "contains"
    },
    {
      "source": "tests/urlpatterns_reverse/translations",
      "target": "tests/urlpatterns_reverse/translations/locale",
      "type": "contains"
    },
    {
      "source": "tests/urlpatterns_reverse/translations/locale",
      "target": "tests/urlpatterns_reverse/translations/locale/de",
      "type": "contains"
    },
    {
      "source": "tests/urlpatterns_reverse/translations/locale",
      "target": "tests/urlpatterns_reverse/translations/locale/fr",
      "type": "contains"
    },
    {
      "source": "tests/fixtures_model_package",
      "target": "tests/fixtures_model_package/models",
      "type": "contains"
    },
    {
      "source": "tests/forms_tests",
      "target": "tests/forms_tests/field_tests",
      "type": "contains"
    },
    {
      "source": "tests/forms_tests",
      "target": "tests/forms_tests/tests",
      "type": "contains"
    },
    {
      "source": "tests/forms_tests",
      "target": "tests/forms_tests/widget_tests",
      "type": "contains"
    },
    {
      "source": "tests/forms_tests/field_tests",
      "target": "tests/forms_tests/field_tests/filepathfield_test_dir",
      "type": "contains"
    },
    {
      "source": "tests/forms_tests/field_tests/filepathfield_test_dir",
      "target": "tests/forms_tests/field_tests/filepathfield_test_dir/h",
      "type": "contains"
    },
    {
      "source": "tests/forms_tests/field_tests/filepathfield_test_dir",
      "target": "tests/forms_tests/field_tests/filepathfield_test_dir/j",
      "type": "contains"
    },
    {
      "source": "tests/forms_tests/field_tests/filepathfield_test_dir",
      "target": "tests/forms_tests/field_tests/filepathfield_test_dir/c",
      "type": "contains"
    },
    {
      "source": "tests/forms_tests/field_tests/filepathfield_test_dir/c",
      "target": "tests/forms_tests/field_tests/filepathfield_test_dir/c/f",
      "type": "contains"
    },
    {
      "source": "tests/backends",
      "target": "tests/backends/postgresql",
      "type": "contains"
    },
    {
      "source": "tests/backends",
      "target": "tests/backends/oracle",
      "type": "contains"
    },
    {
      "source": "tests/backends",
      "target": "tests/backends/sqlite",
      "type": "contains"
    },
    {
      "source": "tests/backends",
      "target": "tests/backends/mysql",
      "type": "contains"
    },
    {
      "source": "tests/backends",
      "target": "tests/backends/base",
      "type": "contains"
    },
    {
      "source": "tests/migrations2",
      "target": "tests/migrations2/test_migrations_2_no_deps",
      "type": "contains"
    },
    {
      "source": "tests/migrations2",
      "target": "tests/migrations2/test_migrations_2_first",
      "type": "contains"
    },
    {
      "source": "tests/migrations2",
      "target": "tests/migrations2/test_migrations_2",
      "type": "contains"
    },
    {
      "source": "tests/view_tests",
      "target": "tests/view_tests/templatetags",
      "type": "contains"
    },
    {
      "source": "tests/view_tests",
      "target": "tests/view_tests/tests",
      "type": "contains"
    },
    {
      "source": "tests/view_tests",
      "target": "tests/view_tests/app5",
      "type": "contains"
    },
    {
      "source": "tests/view_tests",
      "target": "tests/view_tests/app2",
      "type": "contains"
    },
    {
      "source": "tests/view_tests",
      "target": "tests/view_tests/app3",
      "type": "contains"
    },
    {
      "source": "tests/view_tests",
      "target": "tests/view_tests/app4",
      "type": "contains"
    },
    {
      "source": "tests/view_tests",
      "target": "tests/view_tests/app1",
      "type": "contains"
    },
    {
      "source": "tests/view_tests",
      "target": "tests/view_tests/app0",
      "type": "contains"
    },
    {
      "source": "tests/check_framework",
      "target": "tests/check_framework/urls",
      "type": "contains"
    },
    {
      "source": "tests/check_framework/urls",
      "target": "tests/check_framework/urls/path_compatibility",
      "type": "contains"
    },
    {
      "source": "tests/migration_test_data_persistence",
      "target": "tests/migration_test_data_persistence/migrations",
      "type": "contains"
    },
    {
      "source": "tests/model_options",
      "target": "tests/model_options/models",
      "type": "contains"
    },
    {
      "source": "tests/app_loading",
      "target": "tests/app_loading/not_installed",
      "type": "contains"
    },
    {
      "source": "tests/user_commands",
      "target": "tests/user_commands/management",
      "type": "contains"
    },
    {
      "source": "tests/user_commands/management",
      "target": "tests/user_commands/management/commands",
      "type": "contains"
    },
    {
      "source": "tests/contenttypes_tests",
      "target": "tests/contenttypes_tests/operations_migrations",
      "type": "contains"
    },
    {
      "source": "tests/template_backends",
      "target": "tests/template_backends/apps",
      "type": "contains"
    },
    {
      "source": "tests/template_backends/apps",
      "target": "tests/template_backends/apps/importerror",
      "type": "contains"
    },
    {
      "source": "tests/template_backends/apps",
      "target": "tests/template_backends/apps/good",
      "type": "contains"
    },
    {
      "source": "tests/template_backends/apps/importerror",
      "target": "tests/template_backends/apps/importerror/templatetags",
      "type": "contains"
    },
    {
      "source": "tests/template_backends/apps/good",
      "target": "tests/template_backends/apps/good/templatetags",
      "type": "contains"
    },
    {
      "source": "tests/template_backends/apps/good/templatetags",
      "target": "tests/template_backends/apps/good/templatetags/subpackage",
      "type": "contains"
    },
    {
      "source": "tests/admin_scripts",
      "target": "tests/admin_scripts/broken_app",
      "type": "contains"
    },
    {
      "source": "tests/admin_scripts",
      "target": "tests/admin_scripts/app_raising_warning",
      "type": "contains"
    },
    {
      "source": "tests/admin_scripts",
      "target": "tests/admin_scripts/simple_app",
      "type": "contains"
    },
    {
      "source": "tests/admin_scripts",
      "target": "tests/admin_scripts/app_waiting_migration",
      "type": "contains"
    },
    {
      "source": "tests/admin_scripts",
      "target": "tests/admin_scripts/custom_templates",
      "type": "contains"
    },
    {
      "source": "tests/admin_scripts",
      "target": "tests/admin_scripts/management",
      "type": "contains"
    },
    {
      "source": "tests/admin_scripts",
      "target": "tests/admin_scripts/app_with_import",
      "type": "contains"
    },
    {
      "source": "tests/admin_scripts",
      "target": "tests/admin_scripts/another_app_waiting_migration",
      "type": "contains"
    },
    {
      "source": "tests/admin_scripts",
      "target": "tests/admin_scripts/app_raising_messages",
      "type": "contains"
    },
    {
      "source": "tests/admin_scripts",
      "target": "tests/admin_scripts/complex_app",
      "type": "contains"
    },
    {
      "source": "tests/admin_scripts/simple_app",
      "target": "tests/admin_scripts/simple_app/management",
      "type": "contains"
    },
    {
      "source": "tests/admin_scripts/simple_app/management",
      "target": "tests/admin_scripts/simple_app/management/commands",
      "type": "contains"
    },
    {
      "source": "tests/admin_scripts/app_waiting_migration",
      "target": "tests/admin_scripts/app_waiting_migration/migrations",
      "type": "contains"
    },
    {
      "source": "tests/admin_scripts/custom_templates",
      "target": "tests/admin_scripts/custom_templates/app_template",
      "type": "contains"
    },
    {
      "source": "tests/admin_scripts/custom_templates",
      "target": "tests/admin_scripts/custom_templates/project_template",
      "type": "contains"
    },
    {
      "source": "tests/admin_scripts/custom_templates/project_template",
      "target": "tests/admin_scripts/custom_templates/project_template/project_name",
      "type": "contains"
    },
    {
      "source": "tests/admin_scripts/custom_templates/project_template",
      "target": "tests/admin_scripts/custom_templates/project_template/additional_dir",
      "type": "contains"
    },
    {
      "source": "tests/admin_scripts/management",
      "target": "tests/admin_scripts/management/commands",
      "type": "contains"
    },
    {
      "source": "tests/admin_scripts/another_app_waiting_migration",
      "target": "tests/admin_scripts/another_app_waiting_migration/migrations",
      "type": "contains"
    },
    {
      "source": "tests/admin_scripts/complex_app",
      "target": "tests/admin_scripts/complex_app/admin",
      "type": "contains"
    },
    {
      "source": "tests/admin_scripts/complex_app",
      "target": "tests/admin_scripts/complex_app/management",
      "type": "contains"
    },
    {
      "source": "tests/admin_scripts/complex_app",
      "target": "tests/admin_scripts/complex_app/models",
      "type": "contains"
    },
    {
      "source": "tests/admin_scripts/complex_app/management",
      "target": "tests/admin_scripts/complex_app/management/commands",
      "type": "contains"
    },
    {
      "source": "tests/serializers",
      "target": "tests/serializers/models",
      "type": "contains"
    },
    {
      "source": "tests/staticfiles_tests",
      "target": "tests/staticfiles_tests/urls",
      "type": "contains"
    },
    {
      "source": "tests/staticfiles_tests",
      "target": "tests/staticfiles_tests/apps",
      "type": "contains"
    },
    {
      "source": "tests/staticfiles_tests/apps",
      "target": "tests/staticfiles_tests/apps/test",
      "type": "contains"
    },
    {
      "source": "tests/staticfiles_tests/apps",
      "target": "tests/staticfiles_tests/apps/no_label",
      "type": "contains"
    },
    {
      "source": "tests/utils_tests",
      "target": "tests/utils_tests/test_module",
      "type": "contains"
    },
    {
      "source": "tests/utils_tests/test_module",
      "target": "tests/utils_tests/test_module/child_module",
      "type": "contains"
    },
    {
      "source": "tests/model_package",
      "target": "tests/model_package/models",
      "type": "contains"
    },
    {
      "source": "tests/sites_framework",
      "target": "tests/sites_framework/migrations",
      "type": "contains"
    },
    {
      "source": "tests/sitemaps_tests",
      "target": "tests/sitemaps_tests/urls",
      "type": "contains"
    },
    {
      "source": "tests/postgres_tests",
      "target": "tests/postgres_tests/migrations",
      "type": "contains"
    },
    {
      "source": "tests/postgres_tests",
      "target": "tests/postgres_tests/array_index_migrations",
      "type": "contains"
    },
    {
      "source": "tests/postgres_tests",
      "target": "tests/postgres_tests/array_default_migrations",
      "type": "contains"
    },
    {
      "source": "tests/i18n",
      "target": "tests/i18n/patterns",
      "type": "contains"
    },
    {
      "source": "tests/i18n",
      "target": "tests/i18n/exclude",
      "type": "contains"
    },
    {
      "source": "tests/i18n",
      "target": "tests/i18n/territorial_fallback",
      "type": "contains"
    },
    {
      "source": "tests/i18n",
      "target": "tests/i18n/other",
      "type": "contains"
    },
    {
      "source": "tests/i18n",
      "target": "tests/i18n/sampleproject",
      "type": "contains"
    },
    {
      "source": "tests/i18n",
      "target": "tests/i18n/resolution",
      "type": "contains"
    },
    {
      "source": "tests/i18n",
      "target": "tests/i18n/project_dir",
      "type": "contains"
    },
    {
      "source": "tests/i18n",
      "target": "tests/i18n/commands",
      "type": "contains"
    },
    {
      "source": "tests/i18n",
      "target": "tests/i18n/contenttypes",
      "type": "contains"
    },
    {
      "source": "tests/i18n",
      "target": "tests/i18n/other2",
      "type": "contains"
    },
    {
      "source": "tests/i18n/patterns",
      "target": "tests/i18n/patterns/urls",
      "type": "contains"
    },
    {
      "source": "tests/i18n/other",
      "target": "tests/i18n/other/locale",
      "type": "contains"
    },
    {
      "source": "tests/i18n/other/locale",
      "target": "tests/i18n/other/locale/de",
      "type": "contains"
    },
    {
      "source": "tests/i18n/other/locale",
      "target": "tests/i18n/other/locale/fr",
      "type": "contains"
    },
    {
      "source": "tests/i18n/sampleproject",
      "target": "tests/i18n/sampleproject/sampleproject",
      "type": "contains"
    },
    {
      "source": "tests/i18n/project_dir",
      "target": "tests/i18n/project_dir/app_with_locale",
      "type": "contains"
    },
    {
      "source": "tests/i18n/project_dir",
      "target": "tests/i18n/project_dir/app_no_locale",
      "type": "contains"
    },
    {
      "source": "tests/i18n/other2",
      "target": "tests/i18n/other2/locale",
      "type": "contains"
    },
    {
      "source": "tests/i18n/other2/locale",
      "target": "tests/i18n/other2/locale/de",
      "type": "contains"
    },
    {
      "source": "tests/test_runner_apps",
      "target": "tests/test_runner_apps/databases",
      "type": "contains"
    },
    {
      "source": "tests/test_runner_apps",
      "target": "tests/test_runner_apps/tagged",
      "type": "contains"
    },
    {
      "source": "tests/test_runner_apps",
      "target": "tests/test_runner_apps/simple",
      "type": "contains"
    },
    {
      "source": "tests/test_runner_apps",
      "target": "tests/test_runner_apps/sample",
      "type": "contains"
    },
    {
      "source": "tests/test_runner_apps/sample",
      "target": "tests/test_runner_apps/sample/tests",
      "type": "contains"
    },
    {
      "source": "tests/bash_completion",
      "target": "tests/bash_completion/management",
      "type": "contains"
    },
    {
      "source": "tests/bash_completion/management",
      "target": "tests/bash_completion/management/commands",
      "type": "contains"
    },
    {
      "source": "tests/apps",
      "target": "tests/apps/namespace_package_base",
      "type": "contains"
    },
    {
      "source": "tests/apps",
      "target": "tests/apps/default_config_app",
      "type": "contains"
    },
    {
      "source": "tests/apps/namespace_package_base",
      "target": "tests/apps/namespace_package_base/nsapp",
      "type": "contains"
    },
    {
      "source": "tests/servers",
      "target": "tests/servers/another_app",
      "type": "contains"
    },
    {
      "source": "tests/gis_tests",
      "target": "tests/gis_tests/maps",
      "type": "contains"
    },
    {
      "source": "tests/gis_tests",
      "target": "tests/gis_tests/gdal_tests",
      "type": "contains"
    },
    {
      "source": "tests/gis_tests",
      "target": "tests/gis_tests/geos_tests",
      "type": "contains"
    },
    {
      "source": "tests/gis_tests",
      "target": "tests/gis_tests/geoapp",
      "type": "contains"
    },
    {
      "source": "tests/gis_tests",
      "target": "tests/gis_tests/layermap",
      "type": "contains"
    },
    {
      "source": "tests/gis_tests",
      "target": "tests/gis_tests/geoadmin",
      "type": "contains"
    },
    {
      "source": "tests/gis_tests",
      "target": "tests/gis_tests/geogapp",
      "type": "contains"
    },
    {
      "source": "tests/gis_tests",
      "target": "tests/gis_tests/relatedapp",
      "type": "contains"
    },
    {
      "source": "tests/gis_tests",
      "target": "tests/gis_tests/rasterapp",
      "type": "contains"
    },
    {
      "source": "tests/gis_tests",
      "target": "tests/gis_tests/geo3d",
      "type": "contains"
    },
    {
      "source": "tests/gis_tests",
      "target": "tests/gis_tests/inspectapp",
      "type": "contains"
    },
    {
      "source": "tests/gis_tests",
      "target": "tests/gis_tests/data",
      "type": "contains"
    },
    {
      "source": "tests/gis_tests",
      "target": "tests/gis_tests/gis_migrations",
      "type": "contains"
    },
    {
      "source": "tests/gis_tests/data",
      "target": "tests/gis_tests/data/rasters",
      "type": "contains"
    },
    {
      "source": "tests/gis_tests/gis_migrations",
      "target": "tests/gis_tests/gis_migrations/migrations",
      "type": "contains"
    },
    {
      "source": "docs",
      "target": "docs/_ext",
      "type": "contains"
    },
    {
      "source": "django",
      "target": "django/templatetags",
      "type": "contains"
    },
    {
      "source": "django",
      "target": "django/middleware",
      "type": "contains"
    },
    {
      "source": "django",
      "target": "django/forms",
      "type": "contains"
    },
    {
      "source": "django",
      "target": "django/core",
      "type": "contains"
    },
    {
      "source": "django",
      "target": "django/test",
      "type": "contains"
    },
    {
      "source": "django",
      "target": "django/bin",
      "type": "contains"
    },
    {
      "source": "django",
      "target": "django/dispatch",
      "type": "contains"
    },
    {
      "source": "django",
      "target": "django/template",
      "type": "contains"
    },
    {
      "source": "django",
      "target": "django/utils",
      "type": "contains"
    },
    {
      "source": "django",
      "target": "django/contrib",
      "type": "contains"
    },
    {
      "source": "django",
      "target": "django/http",
      "type": "contains"
    },
    {
      "source": "django",
      "target": "django/urls",
      "type": "contains"
    },
    {
      "source": "django",
      "target": "django/db",
      "type": "contains"
    },
    {
      "source": "django",
      "target": "django/views",
      "type": "contains"
    },
    {
      "source": "django",
      "target": "django/conf",
      "type": "contains"
    },
    {
      "source": "django",
      "target": "django/apps",
      "type": "contains"
    },
    {
      "source": "django/core",
      "target": "django/core/cache",
      "type": "contains"
    },
    {
      "source": "django/core",
      "target": "django/core/mail",
      "type": "contains"
    },
    {
      "source": "django/core",
      "target": "django/core/checks",
      "type": "contains"
    },
    {
      "source": "django/core",
      "target": "django/core/management",
      "type": "contains"
    },
    {
      "source": "django/core",
      "target": "django/core/serializers",
      "type": "contains"
    },
    {
      "source": "django/core",
      "target": "django/core/files",
      "type": "contains"
    },
    {
      "source": "django/core",
      "target": "django/core/handlers",
      "type": "contains"
    },
    {
      "source": "django/core",
      "target": "django/core/servers",
      "type": "contains"
    },
    {
      "source": "django/core/cache",
      "target": "django/core/cache/backends",
      "type": "contains"
    },
    {
      "source": "django/core/mail",
      "target": "django/core/mail/backends",
      "type": "contains"
    },
    {
      "source": "django/core/checks",
      "target": "django/core/checks/compatibility",
      "type": "contains"
    },
    {
      "source": "django/core/checks",
      "target": "django/core/checks/security",
      "type": "contains"
    },
    {
      "source": "django/core/management",
      "target": "django/core/management/commands",
      "type": "contains"
    },
    {
      "source": "django/template",
      "target": "django/template/backends",
      "type": "contains"
    },
    {
      "source": "django/template",
      "target": "django/template/loaders",
      "type": "contains"
    },
    {
      "source": "django/utils",
      "target": "django/utils/translation",
      "type": "contains"
    },
    {
      "source": "django/contrib",
      "target": "django/contrib/syndication",
      "type": "contains"
    },
    {
      "source": "django/contrib",
      "target": "django/contrib/messages",
      "type": "contains"
    },
    {
      "source": "django/contrib",
      "target": "django/contrib/auth",
      "type": "contains"
    },
    {
      "source": "django/contrib",
      "target": "django/contrib/admin",
      "type": "contains"
    },
    {
      "source": "django/contrib",
      "target": "django/contrib/staticfiles",
      "type": "contains"
    },
    {
      "source": "django/contrib",
      "target": "django/contrib/flatpages",
      "type": "contains"
    },
    {
      "source": "django/contrib",
      "target": "django/contrib/sites",
      "type": "contains"
    },
    {
      "source": "django/contrib",
      "target": "django/contrib/postgres",
      "type": "contains"
    },
    {
      "source": "django/contrib",
      "target": "django/contrib/redirects",
      "type": "contains"
    },
    {
      "source": "django/contrib",
      "target": "django/contrib/sessions",
      "type": "contains"
    },
    {
      "source": "django/contrib",
      "target": "django/contrib/sitemaps",
      "type": "contains"
    },
    {
      "source": "django/contrib",
      "target": "django/contrib/humanize",
      "type": "contains"
    },
    {
      "source": "django/contrib",
      "target": "django/contrib/contenttypes",
      "type": "contains"
    },
    {
      "source": "django/contrib",
      "target": "django/contrib/gis",
      "type": "contains"
    },
    {
      "source": "django/contrib",
      "target": "django/contrib/admindocs",
      "type": "contains"
    },
    {
      "source": "django/contrib/messages",
      "target": "django/contrib/messages/storage",
      "type": "contains"
    },
    {
      "source": "django/contrib/auth",
      "target": "django/contrib/auth/migrations",
      "type": "contains"
    },
    {
      "source": "django/contrib/auth",
      "target": "django/contrib/auth/management",
      "type": "contains"
    },
    {
      "source": "django/contrib/auth",
      "target": "django/contrib/auth/handlers",
      "type": "contains"
    },
    {
      "source": "django/contrib/auth/management",
      "target": "django/contrib/auth/management/commands",
      "type": "contains"
    },
    {
      "source": "django/contrib/admin",
      "target": "django/contrib/admin/templatetags",
      "type": "contains"
    },
    {
      "source": "django/contrib/admin",
      "target": "django/contrib/admin/migrations",
      "type": "contains"
    },
    {
      "source": "django/contrib/admin",
      "target": "django/contrib/admin/bin",
      "type": "contains"
    },
    {
      "source": "django/contrib/admin",
      "target": "django/contrib/admin/views",
      "type": "contains"
    },
    {
      "source": "django/contrib/staticfiles",
      "target": "django/contrib/staticfiles/management",
      "type": "contains"
    },
    {
      "source": "django/contrib/staticfiles/management",
      "target": "django/contrib/staticfiles/management/commands",
      "type": "contains"
    },
    {
      "source": "django/contrib/flatpages",
      "target": "django/contrib/flatpages/templatetags",
      "type": "contains"
    },
    {
      "source": "django/contrib/flatpages",
      "target": "django/contrib/flatpages/migrations",
      "type": "contains"
    },
    {
      "source": "django/contrib/sites",
      "target": "django/contrib/sites/migrations",
      "type": "contains"
    },
    {
      "source": "django/contrib/postgres",
      "target": "django/contrib/postgres/forms",
      "type": "contains"
    },
    {
      "source": "django/contrib/postgres",
      "target": "django/contrib/postgres/aggregates",
      "type": "contains"
    },
    {
      "source": "django/contrib/postgres",
      "target": "django/contrib/postgres/fields",
      "type": "contains"
    },
    {
      "source": "django/contrib/redirects",
      "target": "django/contrib/redirects/migrations",
      "type": "contains"
    },
    {
      "source": "django/contrib/sessions",
      "target": "django/contrib/sessions/migrations",
      "type": "contains"
    },
    {
      "source": "django/contrib/sessions",
      "target": "django/contrib/sessions/backends",
      "type": "contains"
    },
    {
      "source": "django/contrib/sessions",
      "target": "django/contrib/sessions/management",
      "type": "contains"
    },
    {
      "source": "django/contrib/sessions/management",
      "target": "django/contrib/sessions/management/commands",
      "type": "contains"
    },
    {
      "source": "django/contrib/sitemaps",
      "target": "django/contrib/sitemaps/management",
      "type": "contains"
    },
    {
      "source": "django/contrib/sitemaps/management",
      "target": "django/contrib/sitemaps/management/commands",
      "type": "contains"
    },
    {
      "source": "django/contrib/humanize",
      "target": "django/contrib/humanize/templatetags",
      "type": "contains"
    },
    {
      "source": "django/contrib/contenttypes",
      "target": "django/contrib/contenttypes/migrations",
      "type": "contains"
    },
    {
      "source": "django/contrib/contenttypes",
      "target": "django/contrib/contenttypes/management",
      "type": "contains"
    },
    {
      "source": "django/contrib/contenttypes/management",
      "target": "django/contrib/contenttypes/management/commands",
      "type": "contains"
    },
    {
      "source": "django/contrib/gis",
      "target": "django/contrib/gis/geos",
      "type": "contains"
    },
    {
      "source": "django/contrib/gis",
      "target": "django/contrib/gis/forms",
      "type": "contains"
    },
    {
      "source": "django/contrib/gis",
      "target": "django/contrib/gis/gdal",
      "type": "contains"
    },
    {
      "source": "django/contrib/gis",
      "target": "django/contrib/gis/admin",
      "type": "contains"
    },
    {
      "source": "django/contrib/gis",
      "target": "django/contrib/gis/management",
      "type": "contains"
    },
    {
      "source": "django/contrib/gis",
      "target": "django/contrib/gis/utils",
      "type": "contains"
    },
    {
      "source": "django/contrib/gis",
      "target": "django/contrib/gis/serializers",
      "type": "contains"
    },
    {
      "source": "django/contrib/gis",
      "target": "django/contrib/gis/sitemaps",
      "type": "contains"
    },
    {
      "source": "django/contrib/gis",
      "target": "django/contrib/gis/db",
      "type": "contains"
    },
    {
      "source": "django/contrib/gis",
      "target": "django/contrib/gis/geoip2",
      "type": "contains"
    },
    {
      "source": "django/contrib/gis/geos",
      "target": "django/contrib/gis/geos/prototypes",
      "type": "contains"
    },
    {
      "source": "django/contrib/gis/gdal",
      "target": "django/contrib/gis/gdal/prototypes",
      "type": "contains"
    },
    {
      "source": "django/contrib/gis/gdal",
      "target": "django/contrib/gis/gdal/raster",
      "type": "contains"
    },
    {
      "source": "django/contrib/gis/management",
      "target": "django/contrib/gis/management/commands",
      "type": "contains"
    },
    {
      "source": "django/contrib/gis/db",
      "target": "django/contrib/gis/db/backends",
      "type": "contains"
    },
    {
      "source": "django/contrib/gis/db",
      "target": "django/contrib/gis/db/models",
      "type": "contains"
    },
    {
      "source": "django/contrib/gis/db/backends",
      "target": "django/contrib/gis/db/backends/oracle",
      "type": "contains"
    },
    {
      "source": "django/contrib/gis/db/backends",
      "target": "django/contrib/gis/db/backends/postgis",
      "type": "contains"
    },
    {
      "source": "django/contrib/gis/db/backends",
      "target": "django/contrib/gis/db/backends/mysql",
      "type": "contains"
    },
    {
      "source": "django/contrib/gis/db/backends",
      "target": "django/contrib/gis/db/backends/spatialite",
      "type": "contains"
    },
    {
      "source": "django/contrib/gis/db/backends",
      "target": "django/contrib/gis/db/backends/base",
      "type": "contains"
    },
    {
      "source": "django/contrib/gis/db/models",
      "target": "django/contrib/gis/db/models/sql",
      "type": "contains"
    },
    {
      "source": "django/db",
      "target": "django/db/migrations",
      "type": "contains"
    },
    {
      "source": "django/db",
      "target": "django/db/backends",
      "type": "contains"
    },
    {
      "source": "django/db",
      "target": "django/db/models",
      "type": "contains"
    },
    {
      "source": "django/db/migrations",
      "target": "django/db/migrations/operations",
      "type": "contains"
    },
    {
      "source": "django/db/backends",
      "target": "django/db/backends/postgresql",
      "type": "contains"
    },
    {
      "source": "django/db/backends",
      "target": "django/db/backends/dummy",
      "type": "contains"
    },
    {
      "source": "django/db/backends",
      "target": "django/db/backends/oracle",
      "type": "contains"
    },
    {
      "source": "django/db/backends",
      "target": "django/db/backends/sqlite3",
      "type": "contains"
    },
    {
      "source": "django/db/backends",
      "target": "django/db/backends/mysql",
      "type": "contains"
    },
    {
      "source": "django/db/backends",
      "target": "django/db/backends/base",
      "type": "contains"
    },
    {
      "source": "django/db/models",
      "target": "django/db/models/functions",
      "type": "contains"
    },
    {
      "source": "django/db/models",
      "target": "django/db/models/fields",
      "type": "contains"
    },
    {
      "source": "django/db/models",
      "target": "django/db/models/sql",
      "type": "contains"
    },
    {
      "source": "django/views",
      "target": "django/views/decorators",
      "type": "contains"
    },
    {
      "source": "django/views",
      "target": "django/views/generic",
      "type": "contains"
    },
    {
      "source": "django/conf",
      "target": "django/conf/locale",
      "type": "contains"
    },
    {
      "source": "django/conf",
      "target": "django/conf/urls",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/sl",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/sk",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/pl",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/vi",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/sq",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/de_CH",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/sv",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/ga",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/he",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/km",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/nn",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/da",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/es_NI",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/mn",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/pt_BR",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/es_CO",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/ja",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/el",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/lv",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/fy",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/it",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/ca",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/is",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/cs",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/te",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/zh_Hans",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/ru",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/zh_Hant",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/ro",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/pt",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/uk",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/sr",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/en_AU",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/en_GB",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/es_PR",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/ml",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/es_MX",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/mk",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/kn",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/bs",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/ar",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/gl",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/hr",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/hu",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/nl",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/bg",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/bn",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/es_AR",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/nb",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/hi",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/ka",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/de",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/az",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/gd",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/ko",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/fi",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/sr_Latn",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/eo",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/id",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/fr",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/es",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/et",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/en",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/fa",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/lt",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/cy",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/eu",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/ta",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/th",
      "type": "contains"
    },
    {
      "source": "django/conf/locale",
      "target": "django/conf/locale/tr",
      "type": "contains"
    }
  ],
  "graph_version": "v2.3",
  "extraction_metadata": {
    "max_files": 500,
    "exclude_tests": false,
    "total_files_processed": 500
  }
}