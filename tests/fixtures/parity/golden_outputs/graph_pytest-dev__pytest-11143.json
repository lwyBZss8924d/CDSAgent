{
  "repository": "pytest-dev__pytest-11143",
  "total_nodes": 5991,
  "total_edges": 8634,
  "node_counts_by_type": {
    "directory": 64,
    "file": 249,
    "class": 648,
    "function": 5030
  },
  "edge_counts_by_type": {
    "contains": 6032,
    "imports": 62,
    "invokes": 2474,
    "inherits": 66
  },
  "nodes": [
    {
      "id": "/",
      "type": "directory",
      "name": "",
      "file": "",
      "line": 0
    },
    {
      "id": "setup.py",
      "type": "file",
      "name": "setup.py",
      "file": "setup.py",
      "line": 0
    },
    {
      "id": "bench",
      "type": "directory",
      "name": "bench",
      "file": "",
      "line": 0
    },
    {
      "id": "bench/bench_argcomplete.py",
      "type": "file",
      "name": "bench_argcomplete.py",
      "file": "bench/bench_argcomplete.py",
      "line": 0
    },
    {
      "id": "bench/unit_test.py",
      "type": "file",
      "name": "unit_test.py",
      "file": "bench/unit_test.py",
      "line": 0
    },
    {
      "id": "bench/skip.py",
      "type": "file",
      "name": "skip.py",
      "file": "bench/skip.py",
      "line": 0
    },
    {
      "id": "bench/skip.py:test_foo",
      "type": "function",
      "name": "test_foo",
      "file": "bench/skip.py",
      "line": 7
    },
    {
      "id": "bench/manyparam.py",
      "type": "file",
      "name": "manyparam.py",
      "file": "bench/manyparam.py",
      "line": 0
    },
    {
      "id": "bench/manyparam.py:foo",
      "type": "function",
      "name": "foo",
      "file": "bench/manyparam.py",
      "line": 5
    },
    {
      "id": "bench/manyparam.py:test_it",
      "type": "function",
      "name": "test_it",
      "file": "bench/manyparam.py",
      "line": 9
    },
    {
      "id": "bench/manyparam.py:test_it2",
      "type": "function",
      "name": "test_it2",
      "file": "bench/manyparam.py",
      "line": 13
    },
    {
      "id": "bench/empty.py",
      "type": "file",
      "name": "empty.py",
      "file": "bench/empty.py",
      "line": 0
    },
    {
      "id": "bench/bench.py",
      "type": "file",
      "name": "bench.py",
      "file": "bench/bench.py",
      "line": 0
    },
    {
      "id": "bench/xunit.py",
      "type": "file",
      "name": "xunit.py",
      "file": "bench/xunit.py",
      "line": 0
    },
    {
      "id": "testing",
      "type": "directory",
      "name": "testing",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/test_legacypath.py",
      "type": "file",
      "name": "test_legacypath.py",
      "file": "testing/test_legacypath.py",
      "line": 0
    },
    {
      "id": "testing/test_legacypath.py:test_item_fspath",
      "type": "function",
      "name": "test_item_fspath",
      "file": "testing/test_legacypath.py",
      "line": 9
    },
    {
      "id": "testing/test_legacypath.py:test_testdir_testtmproot",
      "type": "function",
      "name": "test_testdir_testtmproot",
      "file": "testing/test_legacypath.py",
      "line": 21
    },
    {
      "id": "testing/test_legacypath.py:test_testdir_makefile_dot_prefixes_extension_silently",
      "type": "function",
      "name": "test_testdir_makefile_dot_prefixes_extension_silently",
      "file": "testing/test_legacypath.py",
      "line": 26
    },
    {
      "id": "testing/test_legacypath.py:test_testdir_makefile_ext_none_raises_type_error",
      "type": "function",
      "name": "test_testdir_makefile_ext_none_raises_type_error",
      "file": "testing/test_legacypath.py",
      "line": 34
    },
    {
      "id": "testing/test_legacypath.py:test_testdir_makefile_ext_empty_string_makes_file",
      "type": "function",
      "name": "test_testdir_makefile_ext_empty_string_makes_file",
      "file": "testing/test_legacypath.py",
      "line": 40
    },
    {
      "id": "testing/test_legacypath.py:attempt_symlink_to",
      "type": "function",
      "name": "attempt_symlink_to",
      "file": "testing/test_legacypath.py",
      "line": 46
    },
    {
      "id": "testing/test_legacypath.py:test_tmpdir_factory",
      "type": "function",
      "name": "test_tmpdir_factory",
      "file": "testing/test_legacypath.py",
      "line": 55
    },
    {
      "id": "testing/test_legacypath.py:test_tmpdir_equals_tmp_path",
      "type": "function",
      "name": "test_tmpdir_equals_tmp_path",
      "file": "testing/test_legacypath.py",
      "line": 64
    },
    {
      "id": "testing/test_legacypath.py:test_tmpdir_always_is_realpath",
      "type": "function",
      "name": "test_tmpdir_always_is_realpath",
      "file": "testing/test_legacypath.py",
      "line": 68
    },
    {
      "id": "testing/test_legacypath.py:test_cache_makedir",
      "type": "function",
      "name": "test_cache_makedir",
      "file": "testing/test_legacypath.py",
      "line": 84
    },
    {
      "id": "testing/test_legacypath.py:test_fixturerequest_getmodulepath",
      "type": "function",
      "name": "test_fixturerequest_getmodulepath",
      "file": "testing/test_legacypath.py",
      "line": 90
    },
    {
      "id": "testing/test_legacypath.py:TestFixtureRequestSessionScoped",
      "type": "class",
      "name": "TestFixtureRequestSessionScoped",
      "file": "testing/test_legacypath.py",
      "line": 98
    },
    {
      "id": "testing/test_legacypath.py:TestFixtureRequestSessionScoped.session_request",
      "type": "function",
      "name": "TestFixtureRequestSessionScoped.session_request",
      "file": "testing/test_legacypath.py",
      "line": 100
    },
    {
      "id": "testing/test_legacypath.py:TestFixtureRequestSessionScoped.test_session_scoped_unavailable_attributes",
      "type": "function",
      "name": "TestFixtureRequestSessionScoped.test_session_scoped_unavailable_attributes",
      "file": "testing/test_legacypath.py",
      "line": 103
    },
    {
      "id": "testing/test_legacypath.py:test_addini_paths",
      "type": "function",
      "name": "test_addini_paths",
      "file": "testing/test_legacypath.py",
      "line": 112
    },
    {
      "id": "testing/test_legacypath.py:test_override_ini_paths",
      "type": "function",
      "name": "test_override_ini_paths",
      "file": "testing/test_legacypath.py",
      "line": 142
    },
    {
      "id": "testing/test_legacypath.py:test_inifile_from_cmdline_main_hook",
      "type": "function",
      "name": "test_inifile_from_cmdline_main_hook",
      "file": "testing/test_legacypath.py",
      "line": 166
    },
    {
      "id": "testing/test_setuponly.py",
      "type": "file",
      "name": "test_setuponly.py",
      "file": "testing/test_setuponly.py",
      "line": 0
    },
    {
      "id": "testing/test_setuponly.py:mode",
      "type": "function",
      "name": "mode",
      "file": "testing/test_setuponly.py",
      "line": 9
    },
    {
      "id": "testing/test_setuponly.py:test_show_only_active_fixtures",
      "type": "function",
      "name": "test_show_only_active_fixtures",
      "file": "testing/test_setuponly.py",
      "line": 13
    },
    {
      "id": "testing/test_setuponly.py:test_show_different_scopes",
      "type": "function",
      "name": "test_show_different_scopes",
      "file": "testing/test_setuponly.py",
      "line": 39
    },
    {
      "id": "testing/test_setuponly.py:test_show_nested_fixtures",
      "type": "function",
      "name": "test_show_nested_fixtures",
      "file": "testing/test_setuponly.py",
      "line": 68
    },
    {
      "id": "testing/test_setuponly.py:test_show_fixtures_with_autouse",
      "type": "function",
      "name": "test_show_fixtures_with_autouse",
      "file": "testing/test_setuponly.py",
      "line": 102
    },
    {
      "id": "testing/test_setuponly.py:test_show_fixtures_with_parameters",
      "type": "function",
      "name": "test_show_fixtures_with_parameters",
      "file": "testing/test_setuponly.py",
      "line": 129
    },
    {
      "id": "testing/test_setuponly.py:test_show_fixtures_with_parameter_ids",
      "type": "function",
      "name": "test_show_fixtures_with_parameter_ids",
      "file": "testing/test_setuponly.py",
      "line": 162
    },
    {
      "id": "testing/test_setuponly.py:test_show_fixtures_with_parameter_ids_function",
      "type": "function",
      "name": "test_show_fixtures_with_parameter_ids_function",
      "file": "testing/test_setuponly.py",
      "line": 191
    },
    {
      "id": "testing/test_setuponly.py:test_dynamic_fixture_request",
      "type": "function",
      "name": "test_dynamic_fixture_request",
      "file": "testing/test_setuponly.py",
      "line": 211
    },
    {
      "id": "testing/test_setuponly.py:test_capturing",
      "type": "function",
      "name": "test_capturing",
      "file": "testing/test_setuponly.py",
      "line": 237
    },
    {
      "id": "testing/test_setuponly.py:test_show_fixtures_and_execute_test",
      "type": "function",
      "name": "test_show_fixtures_and_execute_test",
      "file": "testing/test_setuponly.py",
      "line": 259
    },
    {
      "id": "testing/test_setuponly.py:test_setup_show_with_KeyboardInterrupt_in_test",
      "type": "function",
      "name": "test_setup_show_with_KeyboardInterrupt_in_test",
      "file": "testing/test_setuponly.py",
      "line": 280
    },
    {
      "id": "testing/test_setuponly.py:test_show_fixture_action_with_bytes",
      "type": "function",
      "name": "test_show_fixture_action_with_bytes",
      "file": "testing/test_setuponly.py",
      "line": 304
    },
    {
      "id": "testing/test_assertrewrite.py",
      "type": "file",
      "name": "test_assertrewrite.py",
      "file": "testing/test_assertrewrite.py",
      "line": 0
    },
    {
      "id": "testing/test_assertrewrite.py:rewrite",
      "type": "function",
      "name": "rewrite",
      "file": "testing/test_assertrewrite.py",
      "line": 40
    },
    {
      "id": "testing/test_assertrewrite.py:getmsg",
      "type": "function",
      "name": "getmsg",
      "file": "testing/test_assertrewrite.py",
      "line": 46
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "type": "class",
      "name": "TestAssertionRewrite",
      "file": "testing/test_assertrewrite.py",
      "line": 73
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_place_initial_imports",
      "type": "function",
      "name": "TestAssertionRewrite.test_place_initial_imports",
      "file": "testing/test_assertrewrite.py",
      "line": 74
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_location_is_set",
      "type": "function",
      "name": "TestAssertionRewrite.test_location_is_set",
      "file": "testing/test_assertrewrite.py",
      "line": 116
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_dont_rewrite",
      "type": "function",
      "name": "TestAssertionRewrite.test_dont_rewrite",
      "file": "testing/test_assertrewrite.py",
      "line": 137
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_dont_rewrite_plugin",
      "type": "function",
      "name": "TestAssertionRewrite.test_dont_rewrite_plugin",
      "file": "testing/test_assertrewrite.py",
      "line": 144
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_rewrites_plugin_as_a_package",
      "type": "function",
      "name": "TestAssertionRewrite.test_rewrites_plugin_as_a_package",
      "file": "testing/test_assertrewrite.py",
      "line": 154
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_honors_pep_235",
      "type": "function",
      "name": "TestAssertionRewrite.test_honors_pep_235",
      "file": "testing/test_assertrewrite.py",
      "line": 170
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_name",
      "type": "function",
      "name": "TestAssertionRewrite.test_name",
      "file": "testing/test_assertrewrite.py",
      "line": 189
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_name.f1",
      "type": "function",
      "name": "TestAssertionRewrite.test_name.f1",
      "file": "testing/test_assertrewrite.py",
      "line": 190
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_name.f2",
      "type": "function",
      "name": "TestAssertionRewrite.test_name.f2",
      "file": "testing/test_assertrewrite.py",
      "line": 195
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_name.f3",
      "type": "function",
      "name": "TestAssertionRewrite.test_name.f3",
      "file": "testing/test_assertrewrite.py",
      "line": 201
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_name.f4",
      "type": "function",
      "name": "TestAssertionRewrite.test_name.f4",
      "file": "testing/test_assertrewrite.py",
      "line": 206
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_name.f5",
      "type": "function",
      "name": "TestAssertionRewrite.test_name.f5",
      "file": "testing/test_assertrewrite.py",
      "line": 212
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_name.X",
      "type": "class",
      "name": "TestAssertionRewrite.test_name.X",
      "file": "testing/test_assertrewrite.py",
      "line": 215
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assertrepr_compare_same_width",
      "type": "function",
      "name": "TestAssertionRewrite.test_assertrepr_compare_same_width",
      "file": "testing/test_assertrewrite.py",
      "line": 223
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assertrepr_compare_same_width.f",
      "type": "function",
      "name": "TestAssertionRewrite.test_assertrepr_compare_same_width.f",
      "file": "testing/test_assertrewrite.py",
      "line": 226
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_dont_rewrite_if_hasattr_fails",
      "type": "function",
      "name": "TestAssertionRewrite.test_dont_rewrite_if_hasattr_fails",
      "file": "testing/test_assertrewrite.py",
      "line": 243
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_dont_rewrite_if_hasattr_fails.Y",
      "type": "class",
      "name": "TestAssertionRewrite.test_dont_rewrite_if_hasattr_fails.Y",
      "file": "testing/test_assertrewrite.py",
      "line": 244
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_dont_rewrite_if_hasattr_fails.Y.__getattr__",
      "type": "function",
      "name": "TestAssertionRewrite.test_dont_rewrite_if_hasattr_fails.Y.__getattr__",
      "file": "testing/test_assertrewrite.py",
      "line": 247
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_dont_rewrite_if_hasattr_fails.Y.__repr__",
      "type": "function",
      "name": "TestAssertionRewrite.test_dont_rewrite_if_hasattr_fails.Y.__repr__",
      "file": "testing/test_assertrewrite.py",
      "line": 250
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_dont_rewrite_if_hasattr_fails.f",
      "type": "function",
      "name": "TestAssertionRewrite.test_dont_rewrite_if_hasattr_fails.f",
      "file": "testing/test_assertrewrite.py",
      "line": 256
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_already_has_message",
      "type": "function",
      "name": "TestAssertionRewrite.test_assert_already_has_message",
      "file": "testing/test_assertrewrite.py",
      "line": 269
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_already_has_message.f",
      "type": "function",
      "name": "TestAssertionRewrite.test_assert_already_has_message.f",
      "file": "testing/test_assertrewrite.py",
      "line": 270
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assertion_message",
      "type": "function",
      "name": "TestAssertionRewrite.test_assertion_message",
      "file": "testing/test_assertrewrite.py",
      "line": 275
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assertion_message_multiline",
      "type": "function",
      "name": "TestAssertionRewrite.test_assertion_message_multiline",
      "file": "testing/test_assertrewrite.py",
      "line": 288
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assertion_message_tuple",
      "type": "function",
      "name": "TestAssertionRewrite.test_assertion_message_tuple",
      "file": "testing/test_assertrewrite.py",
      "line": 301
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assertion_message_expr",
      "type": "function",
      "name": "TestAssertionRewrite.test_assertion_message_expr",
      "file": "testing/test_assertrewrite.py",
      "line": 314
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assertion_message_escape",
      "type": "function",
      "name": "TestAssertionRewrite.test_assertion_message_escape",
      "file": "testing/test_assertrewrite.py",
      "line": 325
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assertion_messages_bytes",
      "type": "function",
      "name": "TestAssertionRewrite.test_assertion_messages_bytes",
      "file": "testing/test_assertrewrite.py",
      "line": 338
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop",
      "type": "function",
      "name": "TestAssertionRewrite.test_boolop",
      "file": "testing/test_assertrewrite.py",
      "line": 344
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop.f1",
      "type": "function",
      "name": "TestAssertionRewrite.test_boolop.f1",
      "file": "testing/test_assertrewrite.py",
      "line": 345
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop.f2",
      "type": "function",
      "name": "TestAssertionRewrite.test_boolop.f2",
      "file": "testing/test_assertrewrite.py",
      "line": 351
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop.f3",
      "type": "function",
      "name": "TestAssertionRewrite.test_boolop.f3",
      "file": "testing/test_assertrewrite.py",
      "line": 358
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop.f4",
      "type": "function",
      "name": "TestAssertionRewrite.test_boolop.f4",
      "file": "testing/test_assertrewrite.py",
      "line": 365
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop.f5",
      "type": "function",
      "name": "TestAssertionRewrite.test_boolop.f5",
      "file": "testing/test_assertrewrite.py",
      "line": 371
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop.x",
      "type": "function",
      "name": "TestAssertionRewrite.test_boolop.x",
      "file": "testing/test_assertrewrite.py",
      "line": 377
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop.f6",
      "type": "function",
      "name": "TestAssertionRewrite.test_boolop.f6",
      "file": "testing/test_assertrewrite.py",
      "line": 380
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop.f7",
      "type": "function",
      "name": "TestAssertionRewrite.test_boolop.f7",
      "file": "testing/test_assertrewrite.py",
      "line": 389
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop.f8",
      "type": "function",
      "name": "TestAssertionRewrite.test_boolop.f8",
      "file": "testing/test_assertrewrite.py",
      "line": 398
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop.f9",
      "type": "function",
      "name": "TestAssertionRewrite.test_boolop.f9",
      "file": "testing/test_assertrewrite.py",
      "line": 403
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop.f10",
      "type": "function",
      "name": "TestAssertionRewrite.test_boolop.f10",
      "file": "testing/test_assertrewrite.py",
      "line": 410
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop.f11",
      "type": "function",
      "name": "TestAssertionRewrite.test_boolop.f11",
      "file": "testing/test_assertrewrite.py",
      "line": 417
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_short_circuit_evaluation",
      "type": "function",
      "name": "TestAssertionRewrite.test_short_circuit_evaluation",
      "file": "testing/test_assertrewrite.py",
      "line": 423
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_short_circuit_evaluation.f1",
      "type": "function",
      "name": "TestAssertionRewrite.test_short_circuit_evaluation.f1",
      "file": "testing/test_assertrewrite.py",
      "line": 424
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_short_circuit_evaluation.f2",
      "type": "function",
      "name": "TestAssertionRewrite.test_short_circuit_evaluation.f2",
      "file": "testing/test_assertrewrite.py",
      "line": 429
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_unary_op",
      "type": "function",
      "name": "TestAssertionRewrite.test_unary_op",
      "file": "testing/test_assertrewrite.py",
      "line": 435
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_unary_op.f1",
      "type": "function",
      "name": "TestAssertionRewrite.test_unary_op.f1",
      "file": "testing/test_assertrewrite.py",
      "line": 436
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_unary_op.f2",
      "type": "function",
      "name": "TestAssertionRewrite.test_unary_op.f2",
      "file": "testing/test_assertrewrite.py",
      "line": 442
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_unary_op.f3",
      "type": "function",
      "name": "TestAssertionRewrite.test_unary_op.f3",
      "file": "testing/test_assertrewrite.py",
      "line": 448
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_unary_op.f4",
      "type": "function",
      "name": "TestAssertionRewrite.test_unary_op.f4",
      "file": "testing/test_assertrewrite.py",
      "line": 454
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_binary_op",
      "type": "function",
      "name": "TestAssertionRewrite.test_binary_op",
      "file": "testing/test_assertrewrite.py",
      "line": 460
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_binary_op.f1",
      "type": "function",
      "name": "TestAssertionRewrite.test_binary_op.f1",
      "file": "testing/test_assertrewrite.py",
      "line": 461
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_binary_op.f2",
      "type": "function",
      "name": "TestAssertionRewrite.test_binary_op.f2",
      "file": "testing/test_assertrewrite.py",
      "line": 468
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop_percent",
      "type": "function",
      "name": "TestAssertionRewrite.test_boolop_percent",
      "file": "testing/test_assertrewrite.py",
      "line": 473
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop_percent.f1",
      "type": "function",
      "name": "TestAssertionRewrite.test_boolop_percent.f1",
      "file": "testing/test_assertrewrite.py",
      "line": 474
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop_percent.f2",
      "type": "function",
      "name": "TestAssertionRewrite.test_boolop_percent.f2",
      "file": "testing/test_assertrewrite.py",
      "line": 479
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_at_operator_issue1290",
      "type": "function",
      "name": "TestAssertionRewrite.test_at_operator_issue1290",
      "file": "testing/test_assertrewrite.py",
      "line": 484
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_starred_with_side_effect",
      "type": "function",
      "name": "TestAssertionRewrite.test_starred_with_side_effect",
      "file": "testing/test_assertrewrite.py",
      "line": 498
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call",
      "type": "function",
      "name": "TestAssertionRewrite.test_call",
      "file": "testing/test_assertrewrite.py",
      "line": 510
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.g",
      "type": "function",
      "name": "TestAssertionRewrite.test_call.g",
      "file": "testing/test_assertrewrite.py",
      "line": 511
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.f1",
      "type": "function",
      "name": "TestAssertionRewrite.test_call.f1",
      "file": "testing/test_assertrewrite.py",
      "line": 516
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.f2",
      "type": "function",
      "name": "TestAssertionRewrite.test_call.f2",
      "file": "testing/test_assertrewrite.py",
      "line": 525
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.f3",
      "type": "function",
      "name": "TestAssertionRewrite.test_call.f3",
      "file": "testing/test_assertrewrite.py",
      "line": 534
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.f4",
      "type": "function",
      "name": "TestAssertionRewrite.test_call.f4",
      "file": "testing/test_assertrewrite.py",
      "line": 543
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.f5",
      "type": "function",
      "name": "TestAssertionRewrite.test_call.f5",
      "file": "testing/test_assertrewrite.py",
      "line": 552
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.f6",
      "type": "function",
      "name": "TestAssertionRewrite.test_call.f6",
      "file": "testing/test_assertrewrite.py",
      "line": 561
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.f7",
      "type": "function",
      "name": "TestAssertionRewrite.test_call.f7",
      "file": "testing/test_assertrewrite.py",
      "line": 571
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_attribute",
      "type": "function",
      "name": "TestAssertionRewrite.test_attribute",
      "file": "testing/test_assertrewrite.py",
      "line": 581
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_attribute.X",
      "type": "class",
      "name": "TestAssertionRewrite.test_attribute.X",
      "file": "testing/test_assertrewrite.py",
      "line": 582
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_attribute.f1",
      "type": "function",
      "name": "TestAssertionRewrite.test_attribute.f1",
      "file": "testing/test_assertrewrite.py",
      "line": 587
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_attribute.f2",
      "type": "function",
      "name": "TestAssertionRewrite.test_attribute.f2",
      "file": "testing/test_assertrewrite.py",
      "line": 596
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_comparisons",
      "type": "function",
      "name": "TestAssertionRewrite.test_comparisons",
      "file": "testing/test_assertrewrite.py",
      "line": 606
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_comparisons.f1",
      "type": "function",
      "name": "TestAssertionRewrite.test_comparisons.f1",
      "file": "testing/test_assertrewrite.py",
      "line": 607
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_comparisons.f2",
      "type": "function",
      "name": "TestAssertionRewrite.test_comparisons.f2",
      "file": "testing/test_assertrewrite.py",
      "line": 613
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_comparisons.f3",
      "type": "function",
      "name": "TestAssertionRewrite.test_comparisons.f3",
      "file": "testing/test_assertrewrite.py",
      "line": 619
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_comparisons.f4",
      "type": "function",
      "name": "TestAssertionRewrite.test_comparisons.f4",
      "file": "testing/test_assertrewrite.py",
      "line": 625
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_comparisons.f5",
      "type": "function",
      "name": "TestAssertionRewrite.test_comparisons.f5",
      "file": "testing/test_assertrewrite.py",
      "line": 631
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_len",
      "type": "function",
      "name": "TestAssertionRewrite.test_len",
      "file": "testing/test_assertrewrite.py",
      "line": 638
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_len.f",
      "type": "function",
      "name": "TestAssertionRewrite.test_len.f",
      "file": "testing/test_assertrewrite.py",
      "line": 639
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_reprcompare",
      "type": "function",
      "name": "TestAssertionRewrite.test_custom_reprcompare",
      "file": "testing/test_assertrewrite.py",
      "line": 646
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_reprcompare.my_reprcompare1",
      "type": "function",
      "name": "TestAssertionRewrite.test_custom_reprcompare.my_reprcompare1",
      "file": "testing/test_assertrewrite.py",
      "line": 647
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_reprcompare.f1",
      "type": "function",
      "name": "TestAssertionRewrite.test_custom_reprcompare.f1",
      "file": "testing/test_assertrewrite.py",
      "line": 652
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_reprcompare.my_reprcompare2",
      "type": "function",
      "name": "TestAssertionRewrite.test_custom_reprcompare.my_reprcompare2",
      "file": "testing/test_assertrewrite.py",
      "line": 657
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_reprcompare.f2",
      "type": "function",
      "name": "TestAssertionRewrite.test_custom_reprcompare.f2",
      "file": "testing/test_assertrewrite.py",
      "line": 662
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_raising__bool__in_comparison",
      "type": "function",
      "name": "TestAssertionRewrite.test_assert_raising__bool__in_comparison",
      "file": "testing/test_assertrewrite.py",
      "line": 667
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_raising__bool__in_comparison.f",
      "type": "function",
      "name": "TestAssertionRewrite.test_assert_raising__bool__in_comparison.f",
      "file": "testing/test_assertrewrite.py",
      "line": 668
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_raising__bool__in_comparison.f.A",
      "type": "class",
      "name": "TestAssertionRewrite.test_assert_raising__bool__in_comparison.f.A",
      "file": "testing/test_assertrewrite.py",
      "line": 669
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_raising__bool__in_comparison.f.A.__bool__",
      "type": "function",
      "name": "TestAssertionRewrite.test_assert_raising__bool__in_comparison.f.A.__bool__",
      "file": "testing/test_assertrewrite.py",
      "line": 670
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_raising__bool__in_comparison.f.A.__lt__",
      "type": "function",
      "name": "TestAssertionRewrite.test_assert_raising__bool__in_comparison.f.A.__lt__",
      "file": "testing/test_assertrewrite.py",
      "line": 673
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_raising__bool__in_comparison.f.A.__repr__",
      "type": "function",
      "name": "TestAssertionRewrite.test_assert_raising__bool__in_comparison.f.A.__repr__",
      "file": "testing/test_assertrewrite.py",
      "line": 676
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_raising__bool__in_comparison.f.myany",
      "type": "function",
      "name": "TestAssertionRewrite.test_assert_raising__bool__in_comparison.f.myany",
      "file": "testing/test_assertrewrite.py",
      "line": 679
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_formatchar",
      "type": "function",
      "name": "TestAssertionRewrite.test_formatchar",
      "file": "testing/test_assertrewrite.py",
      "line": 688
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_formatchar.f",
      "type": "function",
      "name": "TestAssertionRewrite.test_formatchar.f",
      "file": "testing/test_assertrewrite.py",
      "line": 689
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_repr",
      "type": "function",
      "name": "TestAssertionRewrite.test_custom_repr",
      "file": "testing/test_assertrewrite.py",
      "line": 696
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_repr.f",
      "type": "function",
      "name": "TestAssertionRewrite.test_custom_repr.f",
      "file": "testing/test_assertrewrite.py",
      "line": 697
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_repr.f.Foo",
      "type": "class",
      "name": "TestAssertionRewrite.test_custom_repr.f.Foo",
      "file": "testing/test_assertrewrite.py",
      "line": 698
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_repr.f.Foo.__repr__",
      "type": "function",
      "name": "TestAssertionRewrite.test_custom_repr.f.Foo.__repr__",
      "file": "testing/test_assertrewrite.py",
      "line": 701
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_repr_non_ascii",
      "type": "function",
      "name": "TestAssertionRewrite.test_custom_repr_non_ascii",
      "file": "testing/test_assertrewrite.py",
      "line": 712
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_repr_non_ascii.f",
      "type": "function",
      "name": "TestAssertionRewrite.test_custom_repr_non_ascii.f",
      "file": "testing/test_assertrewrite.py",
      "line": 713
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_repr_non_ascii.f.A",
      "type": "class",
      "name": "TestAssertionRewrite.test_custom_repr_non_ascii.f.A",
      "file": "testing/test_assertrewrite.py",
      "line": 714
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_repr_non_ascii.f.A.__repr__",
      "type": "function",
      "name": "TestAssertionRewrite.test_custom_repr_non_ascii.f.A.__repr__",
      "file": "testing/test_assertrewrite.py",
      "line": 717
    },
    {
      "id": "testing/test_assertrewrite.py:TestRewriteOnImport",
      "type": "class",
      "name": "TestRewriteOnImport",
      "file": "testing/test_assertrewrite.py",
      "line": 729
    },
    {
      "id": "testing/test_assertrewrite.py:TestRewriteOnImport.test_pycache_is_a_file",
      "type": "function",
      "name": "TestRewriteOnImport.test_pycache_is_a_file",
      "file": "testing/test_assertrewrite.py",
      "line": 730
    },
    {
      "id": "testing/test_assertrewrite.py:TestRewriteOnImport.test_pycache_is_readonly",
      "type": "function",
      "name": "TestRewriteOnImport.test_pycache_is_readonly",
      "file": "testing/test_assertrewrite.py",
      "line": 739
    },
    {
      "id": "testing/test_assertrewrite.py:TestRewriteOnImport.test_zipfile",
      "type": "function",
      "name": "TestRewriteOnImport.test_zipfile",
      "file": "testing/test_assertrewrite.py",
      "line": 753
    },
    {
      "id": "testing/test_assertrewrite.py:TestRewriteOnImport.test_load_resource_via_files_with_rewrite",
      "type": "function",
      "name": "TestRewriteOnImport.test_load_resource_via_files_with_rewrite",
      "file": "testing/test_assertrewrite.py",
      "line": 776
    },
    {
      "id": "testing/test_assertrewrite.py:TestRewriteOnImport.test_readonly",
      "type": "function",
      "name": "TestRewriteOnImport.test_readonly",
      "file": "testing/test_assertrewrite.py",
      "line": 801
    },
    {
      "id": "testing/test_assertrewrite.py:TestRewriteOnImport.test_dont_write_bytecode",
      "type": "function",
      "name": "TestRewriteOnImport.test_dont_write_bytecode",
      "file": "testing/test_assertrewrite.py",
      "line": 816
    },
    {
      "id": "testing/test_assertrewrite.py:TestRewriteOnImport.test_orphaned_pyc_file",
      "type": "function",
      "name": "TestRewriteOnImport.test_orphaned_pyc_file",
      "file": "testing/test_assertrewrite.py",
      "line": 830
    },
    {
      "id": "testing/test_assertrewrite.py:TestRewriteOnImport.test_cached_pyc_includes_pytest_version",
      "type": "function",
      "name": "TestRewriteOnImport.test_cached_pyc_includes_pytest_version",
      "file": "testing/test_assertrewrite.py",
      "line": 859
    },
    {
      "id": "testing/test_assertrewrite.py:TestRewriteOnImport.test_pyc_vs_pyo",
      "type": "function",
      "name": "TestRewriteOnImport.test_pyc_vs_pyo",
      "file": "testing/test_assertrewrite.py",
      "line": 879
    },
    {
      "id": "testing/test_assertrewrite.py:TestRewriteOnImport.test_package",
      "type": "function",
      "name": "TestRewriteOnImport.test_package",
      "file": "testing/test_assertrewrite.py",
      "line": 901
    },
    {
      "id": "testing/test_assertrewrite.py:TestRewriteOnImport.test_translate_newlines",
      "type": "function",
      "name": "TestRewriteOnImport.test_translate_newlines",
      "file": "testing/test_assertrewrite.py",
      "line": 913
    },
    {
      "id": "testing/test_assertrewrite.py:TestRewriteOnImport.test_package_without__init__py",
      "type": "function",
      "name": "TestRewriteOnImport.test_package_without__init__py",
      "file": "testing/test_assertrewrite.py",
      "line": 919
    },
    {
      "id": "testing/test_assertrewrite.py:TestRewriteOnImport.test_rewrite_warning",
      "type": "function",
      "name": "TestRewriteOnImport.test_rewrite_warning",
      "file": "testing/test_assertrewrite.py",
      "line": 925
    },
    {
      "id": "testing/test_assertrewrite.py:TestRewriteOnImport.test_rewrite_module_imported_from_conftest",
      "type": "function",
      "name": "TestRewriteOnImport.test_rewrite_module_imported_from_conftest",
      "file": "testing/test_assertrewrite.py",
      "line": 936
    },
    {
      "id": "testing/test_assertrewrite.py:TestRewriteOnImport.test_remember_rewritten_modules",
      "type": "function",
      "name": "TestRewriteOnImport.test_remember_rewritten_modules",
      "file": "testing/test_assertrewrite.py",
      "line": 950
    },
    {
      "id": "testing/test_assertrewrite.py:TestRewriteOnImport.test_rewrite_warning_using_pytest_plugins",
      "type": "function",
      "name": "TestRewriteOnImport.test_rewrite_warning_using_pytest_plugins",
      "file": "testing/test_assertrewrite.py",
      "line": 970
    },
    {
      "id": "testing/test_assertrewrite.py:TestRewriteOnImport.test_rewrite_warning_using_pytest_plugins_env_var",
      "type": "function",
      "name": "TestRewriteOnImport.test_rewrite_warning_using_pytest_plugins_env_var",
      "file": "testing/test_assertrewrite.py",
      "line": 985
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewriteHookDetails",
      "type": "class",
      "name": "TestAssertionRewriteHookDetails",
      "file": "testing/test_assertrewrite.py",
      "line": 1006
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewriteHookDetails.test_sys_meta_path_munged",
      "type": "function",
      "name": "TestAssertionRewriteHookDetails.test_sys_meta_path_munged",
      "file": "testing/test_assertrewrite.py",
      "line": 1007
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewriteHookDetails.test_write_pyc",
      "type": "function",
      "name": "TestAssertionRewriteHookDetails.test_write_pyc",
      "file": "testing/test_assertrewrite.py",
      "line": 1015
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewriteHookDetails.test_resources_provider_for_loader",
      "type": "function",
      "name": "TestAssertionRewriteHookDetails.test_resources_provider_for_loader",
      "file": "testing/test_assertrewrite.py",
      "line": 1030
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewriteHookDetails.test_read_pyc",
      "type": "function",
      "name": "TestAssertionRewriteHookDetails.test_read_pyc",
      "file": "testing/test_assertrewrite.py",
      "line": 1060
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewriteHookDetails.test_read_pyc_success",
      "type": "function",
      "name": "TestAssertionRewriteHookDetails.test_read_pyc_success",
      "file": "testing/test_assertrewrite.py",
      "line": 1082
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewriteHookDetails.test_read_pyc_more_invalid",
      "type": "function",
      "name": "TestAssertionRewriteHookDetails.test_read_pyc_more_invalid",
      "file": "testing/test_assertrewrite.py",
      "line": 1104
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewriteHookDetails.test_reload_is_same_and_reloads",
      "type": "function",
      "name": "TestAssertionRewriteHookDetails.test_reload_is_same_and_reloads",
      "file": "testing/test_assertrewrite.py",
      "line": 1149
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionRewriteHookDetails.test_get_data_support",
      "type": "function",
      "name": "TestAssertionRewriteHookDetails.test_get_data_support",
      "file": "testing/test_assertrewrite.py",
      "line": 1181
    },
    {
      "id": "testing/test_assertrewrite.py:test_issue731",
      "type": "function",
      "name": "test_issue731",
      "file": "testing/test_assertrewrite.py",
      "line": 1201
    },
    {
      "id": "testing/test_assertrewrite.py:TestIssue925",
      "type": "class",
      "name": "TestIssue925",
      "file": "testing/test_assertrewrite.py",
      "line": 1220
    },
    {
      "id": "testing/test_assertrewrite.py:TestIssue925.test_simple_case",
      "type": "function",
      "name": "TestIssue925.test_simple_case",
      "file": "testing/test_assertrewrite.py",
      "line": 1221
    },
    {
      "id": "testing/test_assertrewrite.py:TestIssue925.test_long_case",
      "type": "function",
      "name": "TestIssue925.test_long_case",
      "file": "testing/test_assertrewrite.py",
      "line": 1231
    },
    {
      "id": "testing/test_assertrewrite.py:TestIssue925.test_many_brackets",
      "type": "function",
      "name": "TestIssue925.test_many_brackets",
      "file": "testing/test_assertrewrite.py",
      "line": 1241
    },
    {
      "id": "testing/test_assertrewrite.py:TestIssue2121",
      "type": "class",
      "name": "TestIssue2121",
      "file": "testing/test_assertrewrite.py",
      "line": 1252
    },
    {
      "id": "testing/test_assertrewrite.py:TestIssue2121.test_rewrite_python_files_contain_subdirs",
      "type": "function",
      "name": "TestIssue2121.test_rewrite_python_files_contain_subdirs",
      "file": "testing/test_assertrewrite.py",
      "line": 1253
    },
    {
      "id": "testing/test_assertrewrite.py:TestIssue10743",
      "type": "class",
      "name": "TestIssue10743",
      "file": "testing/test_assertrewrite.py",
      "line": 1272
    },
    {
      "id": "testing/test_assertrewrite.py:TestIssue10743.test_assertion_walrus_operator",
      "type": "function",
      "name": "TestIssue10743.test_assertion_walrus_operator",
      "file": "testing/test_assertrewrite.py",
      "line": 1273
    },
    {
      "id": "testing/test_assertrewrite.py:TestIssue10743.test_assertion_walrus_operator_dont_rewrite",
      "type": "function",
      "name": "TestIssue10743.test_assertion_walrus_operator_dont_rewrite",
      "file": "testing/test_assertrewrite.py",
      "line": 1291
    },
    {
      "id": "testing/test_assertrewrite.py:TestIssue10743.test_assertion_inline_walrus_operator",
      "type": "function",
      "name": "TestIssue10743.test_assertion_inline_walrus_operator",
      "file": "testing/test_assertrewrite.py",
      "line": 1310
    },
    {
      "id": "testing/test_assertrewrite.py:TestIssue10743.test_assertion_inline_walrus_operator_reverse",
      "type": "function",
      "name": "TestIssue10743.test_assertion_inline_walrus_operator_reverse",
      "file": "testing/test_assertrewrite.py",
      "line": 1325
    },
    {
      "id": "testing/test_assertrewrite.py:TestIssue10743.test_assertion_walrus_no_variable_name_conflict",
      "type": "function",
      "name": "TestIssue10743.test_assertion_walrus_no_variable_name_conflict",
      "file": "testing/test_assertrewrite.py",
      "line": 1340
    },
    {
      "id": "testing/test_assertrewrite.py:TestIssue10743.test_assertion_walrus_operator_true_assertion_and_changes_variable_value",
      "type": "function",
      "name": "TestIssue10743.test_assertion_walrus_operator_true_assertion_and_changes_variable_value",
      "file": "testing/test_assertrewrite.py",
      "line": 1354
    },
    {
      "id": "testing/test_assertrewrite.py:TestIssue10743.test_assertion_walrus_operator_fail_assertion",
      "type": "function",
      "name": "TestIssue10743.test_assertion_walrus_operator_fail_assertion",
      "file": "testing/test_assertrewrite.py",
      "line": 1368
    },
    {
      "id": "testing/test_assertrewrite.py:TestIssue10743.test_assertion_walrus_operator_boolean_composite",
      "type": "function",
      "name": "TestIssue10743.test_assertion_walrus_operator_boolean_composite",
      "file": "testing/test_assertrewrite.py",
      "line": 1380
    },
    {
      "id": "testing/test_assertrewrite.py:TestIssue10743.test_assertion_walrus_operator_compare_boolean_fails",
      "type": "function",
      "name": "TestIssue10743.test_assertion_walrus_operator_compare_boolean_fails",
      "file": "testing/test_assertrewrite.py",
      "line": 1394
    },
    {
      "id": "testing/test_assertrewrite.py:TestIssue10743.test_assertion_walrus_operator_boolean_none_fails",
      "type": "function",
      "name": "TestIssue10743.test_assertion_walrus_operator_boolean_none_fails",
      "file": "testing/test_assertrewrite.py",
      "line": 1408
    },
    {
      "id": "testing/test_assertrewrite.py:TestIssue10743.test_assertion_walrus_operator_value_changes_cleared_after_each_test",
      "type": "function",
      "name": "TestIssue10743.test_assertion_walrus_operator_value_changes_cleared_after_each_test",
      "file": "testing/test_assertrewrite.py",
      "line": 1422
    },
    {
      "id": "testing/test_assertrewrite.py:TestIssue11028",
      "type": "class",
      "name": "TestIssue11028",
      "file": "testing/test_assertrewrite.py",
      "line": 1440
    },
    {
      "id": "testing/test_assertrewrite.py:TestIssue11028.test_assertion_walrus_operator_in_operand",
      "type": "function",
      "name": "TestIssue11028.test_assertion_walrus_operator_in_operand",
      "file": "testing/test_assertrewrite.py",
      "line": 1441
    },
    {
      "id": "testing/test_assertrewrite.py:TestIssue11028.test_assertion_walrus_operator_in_operand_json_dumps",
      "type": "function",
      "name": "TestIssue11028.test_assertion_walrus_operator_in_operand_json_dumps",
      "file": "testing/test_assertrewrite.py",
      "line": 1451
    },
    {
      "id": "testing/test_assertrewrite.py:TestIssue11028.test_assertion_walrus_operator_equals_operand_function",
      "type": "function",
      "name": "TestIssue11028.test_assertion_walrus_operator_equals_operand_function",
      "file": "testing/test_assertrewrite.py",
      "line": 1465
    },
    {
      "id": "testing/test_assertrewrite.py:TestIssue11028.test_assertion_walrus_operator_equals_operand_function_keyword_arg",
      "type": "function",
      "name": "TestIssue11028.test_assertion_walrus_operator_equals_operand_function_keyword_arg",
      "file": "testing/test_assertrewrite.py",
      "line": 1480
    },
    {
      "id": "testing/test_assertrewrite.py:TestIssue11028.test_assertion_walrus_operator_equals_operand_function_arg_as_function",
      "type": "function",
      "name": "TestIssue11028.test_assertion_walrus_operator_equals_operand_function_arg_as_function",
      "file": "testing/test_assertrewrite.py",
      "line": 1495
    },
    {
      "id": "testing/test_assertrewrite.py:TestIssue11028.test_assertion_walrus_operator_gt_operand_function",
      "type": "function",
      "name": "TestIssue11028.test_assertion_walrus_operator_gt_operand_function",
      "file": "testing/test_assertrewrite.py",
      "line": 1510
    },
    {
      "id": "testing/test_assertrewrite.py:test_source_mtime_long_long",
      "type": "function",
      "name": "test_source_mtime_long_long",
      "file": "testing/test_assertrewrite.py",
      "line": 1531
    },
    {
      "id": "testing/test_assertrewrite.py:test_rewrite_infinite_recursion",
      "type": "function",
      "name": "test_rewrite_infinite_recursion",
      "file": "testing/test_assertrewrite.py",
      "line": 1553
    },
    {
      "id": "testing/test_assertrewrite.py:test_rewrite_infinite_recursion.spy_write_pyc",
      "type": "function",
      "name": "test_rewrite_infinite_recursion.spy_write_pyc",
      "file": "testing/test_assertrewrite.py",
      "line": 1569
    },
    {
      "id": "testing/test_assertrewrite.py:TestEarlyRewriteBailout",
      "type": "class",
      "name": "TestEarlyRewriteBailout",
      "file": "testing/test_assertrewrite.py",
      "line": 1587
    },
    {
      "id": "testing/test_assertrewrite.py:TestEarlyRewriteBailout.hook",
      "type": "function",
      "name": "TestEarlyRewriteBailout.hook",
      "file": "testing/test_assertrewrite.py",
      "line": 1589
    },
    {
      "id": "testing/test_assertrewrite.py:TestEarlyRewriteBailout.hook.StubSession",
      "type": "class",
      "name": "TestEarlyRewriteBailout.hook.StubSession",
      "file": "testing/test_assertrewrite.py",
      "line": 1600
    },
    {
      "id": "testing/test_assertrewrite.py:TestEarlyRewriteBailout.hook.StubSession.isinitpath",
      "type": "function",
      "name": "TestEarlyRewriteBailout.hook.StubSession.isinitpath",
      "file": "testing/test_assertrewrite.py",
      "line": 1603
    },
    {
      "id": "testing/test_assertrewrite.py:TestEarlyRewriteBailout.hook.spy_find_spec",
      "type": "function",
      "name": "TestEarlyRewriteBailout.hook.spy_find_spec",
      "file": "testing/test_assertrewrite.py",
      "line": 1606
    },
    {
      "id": "testing/test_assertrewrite.py:TestEarlyRewriteBailout.test_basic",
      "type": "function",
      "name": "TestEarlyRewriteBailout.test_basic",
      "file": "testing/test_assertrewrite.py",
      "line": 1618
    },
    {
      "id": "testing/test_assertrewrite.py:TestEarlyRewriteBailout.test_pattern_contains_subdirectories",
      "type": "function",
      "name": "TestEarlyRewriteBailout.test_pattern_contains_subdirectories",
      "file": "testing/test_assertrewrite.py",
      "line": 1651
    },
    {
      "id": "testing/test_assertrewrite.py:TestEarlyRewriteBailout.test_cwd_changed",
      "type": "function",
      "name": "TestEarlyRewriteBailout.test_cwd_changed",
      "file": "testing/test_assertrewrite.py",
      "line": 1676
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionPass",
      "type": "class",
      "name": "TestAssertionPass",
      "file": "testing/test_assertrewrite.py",
      "line": 1702
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionPass.test_option_default",
      "type": "function",
      "name": "TestAssertionPass.test_option_default",
      "file": "testing/test_assertrewrite.py",
      "line": 1703
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionPass.flag_on",
      "type": "function",
      "name": "TestAssertionPass.flag_on",
      "file": "testing/test_assertrewrite.py",
      "line": 1708
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionPass.hook_on",
      "type": "function",
      "name": "TestAssertionPass.hook_on",
      "file": "testing/test_assertrewrite.py",
      "line": 1712
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionPass.test_hook_call",
      "type": "function",
      "name": "TestAssertionPass.test_hook_call",
      "file": "testing/test_assertrewrite.py",
      "line": 1720
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionPass.test_hook_call_with_parens",
      "type": "function",
      "name": "TestAssertionPass.test_hook_call_with_parens",
      "file": "testing/test_assertrewrite.py",
      "line": 1741
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionPass.test_hook_not_called_without_hookimpl",
      "type": "function",
      "name": "TestAssertionPass.test_hook_not_called_without_hookimpl",
      "file": "testing/test_assertrewrite.py",
      "line": 1752
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionPass.test_hook_not_called_without_hookimpl.raise_on_assertionpass",
      "type": "function",
      "name": "TestAssertionPass.test_hook_not_called_without_hookimpl.raise_on_assertionpass",
      "file": "testing/test_assertrewrite.py",
      "line": 1758
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionPass.test_hook_not_called_without_cmd_option",
      "type": "function",
      "name": "TestAssertionPass.test_hook_not_called_without_cmd_option",
      "file": "testing/test_assertrewrite.py",
      "line": 1779
    },
    {
      "id": "testing/test_assertrewrite.py:TestAssertionPass.test_hook_not_called_without_cmd_option.raise_on_assertionpass",
      "type": "function",
      "name": "TestAssertionPass.test_hook_not_called_without_cmd_option.raise_on_assertionpass",
      "file": "testing/test_assertrewrite.py",
      "line": 1785
    },
    {
      "id": "testing/test_assertrewrite.py:test_get_assertion_exprs",
      "type": "function",
      "name": "test_get_assertion_exprs",
      "file": "testing/test_assertrewrite.py",
      "line": 1897
    },
    {
      "id": "testing/test_assertrewrite.py:test_try_makedirs",
      "type": "function",
      "name": "test_try_makedirs",
      "file": "testing/test_assertrewrite.py",
      "line": 1901
    },
    {
      "id": "testing/test_assertrewrite.py:test_try_makedirs.fake_mkdir",
      "type": "function",
      "name": "test_try_makedirs.fake_mkdir",
      "file": "testing/test_assertrewrite.py",
      "line": 1914
    },
    {
      "id": "testing/test_assertrewrite.py:TestPyCacheDir",
      "type": "class",
      "name": "TestPyCacheDir",
      "file": "testing/test_assertrewrite.py",
      "line": 1941
    },
    {
      "id": "testing/test_assertrewrite.py:TestPyCacheDir.test_get_cache_dir",
      "type": "function",
      "name": "TestPyCacheDir.test_get_cache_dir",
      "file": "testing/test_assertrewrite.py",
      "line": 1951
    },
    {
      "id": "testing/test_assertrewrite.py:TestPyCacheDir.test_sys_pycache_prefix_integration",
      "type": "function",
      "name": "TestPyCacheDir.test_sys_pycache_prefix_integration",
      "file": "testing/test_assertrewrite.py",
      "line": 1961
    },
    {
      "id": "testing/test_assertrewrite.py:TestReprSizeVerbosity",
      "type": "class",
      "name": "TestReprSizeVerbosity",
      "file": "testing/test_assertrewrite.py",
      "line": 1998
    },
    {
      "id": "testing/test_assertrewrite.py:TestReprSizeVerbosity.test_get_maxsize_for_saferepr",
      "type": "function",
      "name": "TestReprSizeVerbosity.test_get_maxsize_for_saferepr",
      "file": "testing/test_assertrewrite.py",
      "line": 2013
    },
    {
      "id": "testing/test_assertrewrite.py:TestReprSizeVerbosity.test_get_maxsize_for_saferepr.FakeConfig",
      "type": "class",
      "name": "TestReprSizeVerbosity.test_get_maxsize_for_saferepr.FakeConfig",
      "file": "testing/test_assertrewrite.py",
      "line": 2014
    },
    {
      "id": "testing/test_assertrewrite.py:TestReprSizeVerbosity.test_get_maxsize_for_saferepr.FakeConfig.getoption",
      "type": "function",
      "name": "TestReprSizeVerbosity.test_get_maxsize_for_saferepr.FakeConfig.getoption",
      "file": "testing/test_assertrewrite.py",
      "line": 2015
    },
    {
      "id": "testing/test_assertrewrite.py:TestReprSizeVerbosity.create_test_file",
      "type": "function",
      "name": "TestReprSizeVerbosity.create_test_file",
      "file": "testing/test_assertrewrite.py",
      "line": 2022
    },
    {
      "id": "testing/test_assertrewrite.py:TestReprSizeVerbosity.test_default_verbosity",
      "type": "function",
      "name": "TestReprSizeVerbosity.test_default_verbosity",
      "file": "testing/test_assertrewrite.py",
      "line": 2031
    },
    {
      "id": "testing/test_assertrewrite.py:TestReprSizeVerbosity.test_increased_verbosity",
      "type": "function",
      "name": "TestReprSizeVerbosity.test_increased_verbosity",
      "file": "testing/test_assertrewrite.py",
      "line": 2036
    },
    {
      "id": "testing/test_assertrewrite.py:TestReprSizeVerbosity.test_max_increased_verbosity",
      "type": "function",
      "name": "TestReprSizeVerbosity.test_max_increased_verbosity",
      "file": "testing/test_assertrewrite.py",
      "line": 2041
    },
    {
      "id": "testing/conftest.py",
      "type": "file",
      "name": "conftest.py",
      "file": "testing/conftest.py",
      "line": 0
    },
    {
      "id": "testing/conftest.py:restore_tracing",
      "type": "function",
      "name": "restore_tracing",
      "file": "testing/conftest.py",
      "line": 13
    },
    {
      "id": "testing/conftest.py:pytest_collection_modifyitems",
      "type": "function",
      "name": "pytest_collection_modifyitems",
      "file": "testing/conftest.py",
      "line": 25
    },
    {
      "id": "testing/conftest.py:tw_mock",
      "type": "function",
      "name": "tw_mock",
      "file": "testing/conftest.py",
      "line": 69
    },
    {
      "id": "testing/conftest.py:tw_mock.TWMock",
      "type": "class",
      "name": "tw_mock.TWMock",
      "file": "testing/conftest.py",
      "line": 72
    },
    {
      "id": "testing/conftest.py:tw_mock.TWMock.sep",
      "type": "function",
      "name": "tw_mock.TWMock.sep",
      "file": "testing/conftest.py",
      "line": 79
    },
    {
      "id": "testing/conftest.py:tw_mock.TWMock.write",
      "type": "function",
      "name": "tw_mock.TWMock.write",
      "file": "testing/conftest.py",
      "line": 82
    },
    {
      "id": "testing/conftest.py:tw_mock.TWMock._write_source",
      "type": "function",
      "name": "tw_mock.TWMock._write_source",
      "file": "testing/conftest.py",
      "line": 85
    },
    {
      "id": "testing/conftest.py:tw_mock.TWMock.line",
      "type": "function",
      "name": "tw_mock.TWMock.line",
      "file": "testing/conftest.py",
      "line": 91
    },
    {
      "id": "testing/conftest.py:tw_mock.TWMock.markup",
      "type": "function",
      "name": "tw_mock.TWMock.markup",
      "file": "testing/conftest.py",
      "line": 94
    },
    {
      "id": "testing/conftest.py:tw_mock.TWMock.get_write_msg",
      "type": "function",
      "name": "tw_mock.TWMock.get_write_msg",
      "file": "testing/conftest.py",
      "line": 97
    },
    {
      "id": "testing/conftest.py:dummy_yaml_custom_test",
      "type": "function",
      "name": "dummy_yaml_custom_test",
      "file": "testing/conftest.py",
      "line": 108
    },
    {
      "id": "testing/conftest.py:pytester",
      "type": "function",
      "name": "pytester",
      "file": "testing/conftest.py",
      "line": 135
    },
    {
      "id": "testing/conftest.py:color_mapping",
      "type": "function",
      "name": "color_mapping",
      "file": "testing/conftest.py",
      "line": 141
    },
    {
      "id": "testing/conftest.py:color_mapping.ColorMapping",
      "type": "class",
      "name": "color_mapping.ColorMapping",
      "file": "testing/conftest.py",
      "line": 148
    },
    {
      "id": "testing/conftest.py:color_mapping.ColorMapping.format",
      "type": "function",
      "name": "color_mapping.ColorMapping.format",
      "file": "testing/conftest.py",
      "line": 166
    },
    {
      "id": "testing/conftest.py:color_mapping.ColorMapping.format_for_fnmatch",
      "type": "function",
      "name": "color_mapping.ColorMapping.format_for_fnmatch",
      "file": "testing/conftest.py",
      "line": 171
    },
    {
      "id": "testing/conftest.py:color_mapping.ColorMapping.format_for_rematch",
      "type": "function",
      "name": "color_mapping.ColorMapping.format_for_rematch",
      "file": "testing/conftest.py",
      "line": 176
    },
    {
      "id": "testing/conftest.py:mock_timing",
      "type": "function",
      "name": "mock_timing",
      "file": "testing/conftest.py",
      "line": 184
    },
    {
      "id": "testing/conftest.py:mock_timing.MockTiming",
      "type": "class",
      "name": "mock_timing.MockTiming",
      "file": "testing/conftest.py",
      "line": 198
    },
    {
      "id": "testing/conftest.py:mock_timing.MockTiming.sleep",
      "type": "function",
      "name": "mock_timing.MockTiming.sleep",
      "file": "testing/conftest.py",
      "line": 201
    },
    {
      "id": "testing/conftest.py:mock_timing.MockTiming.time",
      "type": "function",
      "name": "mock_timing.MockTiming.time",
      "file": "testing/conftest.py",
      "line": 204
    },
    {
      "id": "testing/conftest.py:mock_timing.MockTiming.patch",
      "type": "function",
      "name": "mock_timing.MockTiming.patch",
      "file": "testing/conftest.py",
      "line": 207
    },
    {
      "id": "testing/test_warnings.py",
      "type": "file",
      "name": "test_warnings.py",
      "file": "testing/test_warnings.py",
      "line": 0
    },
    {
      "id": "testing/test_warnings.py:pyfile_with_warnings",
      "type": "function",
      "name": "pyfile_with_warnings",
      "file": "testing/test_warnings.py",
      "line": 16
    },
    {
      "id": "testing/test_warnings.py:test_normal_flow",
      "type": "function",
      "name": "test_normal_flow",
      "file": "testing/test_warnings.py",
      "line": 43
    },
    {
      "id": "testing/test_warnings.py:test_setup_teardown_warnings",
      "type": "function",
      "name": "test_setup_teardown_warnings",
      "file": "testing/test_warnings.py",
      "line": 60
    },
    {
      "id": "testing/test_warnings.py:test_as_errors",
      "type": "function",
      "name": "test_as_errors",
      "file": "testing/test_warnings.py",
      "line": 90
    },
    {
      "id": "testing/test_warnings.py:test_ignore",
      "type": "function",
      "name": "test_ignore",
      "file": "testing/test_warnings.py",
      "line": 112
    },
    {
      "id": "testing/test_warnings.py:test_unicode",
      "type": "function",
      "name": "test_unicode",
      "file": "testing/test_warnings.py",
      "line": 128
    },
    {
      "id": "testing/test_warnings.py:test_works_with_filterwarnings",
      "type": "function",
      "name": "test_works_with_filterwarnings",
      "file": "testing/test_warnings.py",
      "line": 154
    },
    {
      "id": "testing/test_warnings.py:test_filterwarnings_mark",
      "type": "function",
      "name": "test_filterwarnings_mark",
      "file": "testing/test_warnings.py",
      "line": 179
    },
    {
      "id": "testing/test_warnings.py:test_non_string_warning_argument",
      "type": "function",
      "name": "test_non_string_warning_argument",
      "file": "testing/test_warnings.py",
      "line": 212
    },
    {
      "id": "testing/test_warnings.py:test_filterwarnings_mark_registration",
      "type": "function",
      "name": "test_filterwarnings_mark_registration",
      "file": "testing/test_warnings.py",
      "line": 227
    },
    {
      "id": "testing/test_warnings.py:test_warning_recorded_hook",
      "type": "function",
      "name": "test_warning_recorded_hook",
      "file": "testing/test_warnings.py",
      "line": 243
    },
    {
      "id": "testing/test_warnings.py:test_warning_recorded_hook.WarningCollector",
      "type": "class",
      "name": "test_warning_recorded_hook.WarningCollector",
      "file": "testing/test_warnings.py",
      "line": 270
    },
    {
      "id": "testing/test_warnings.py:test_warning_recorded_hook.WarningCollector.pytest_warning_recorded",
      "type": "function",
      "name": "test_warning_recorded_hook.WarningCollector.pytest_warning_recorded",
      "file": "testing/test_warnings.py",
      "line": 271
    },
    {
      "id": "testing/test_warnings.py:test_collection_warnings",
      "type": "function",
      "name": "test_collection_warnings",
      "file": "testing/test_warnings.py",
      "line": 304
    },
    {
      "id": "testing/test_warnings.py:test_mark_regex_escape",
      "type": "function",
      "name": "test_mark_regex_escape",
      "file": "testing/test_warnings.py",
      "line": 328
    },
    {
      "id": "testing/test_warnings.py:test_hide_pytest_internal_warnings",
      "type": "function",
      "name": "test_hide_pytest_internal_warnings",
      "file": "testing/test_warnings.py",
      "line": 345
    },
    {
      "id": "testing/test_warnings.py:test_option_precedence_cmdline_over_ini",
      "type": "function",
      "name": "test_option_precedence_cmdline_over_ini",
      "file": "testing/test_warnings.py",
      "line": 386
    },
    {
      "id": "testing/test_warnings.py:test_option_precedence_mark",
      "type": "function",
      "name": "test_option_precedence_mark",
      "file": "testing/test_warnings.py",
      "line": 411
    },
    {
      "id": "testing/test_warnings.py:TestDeprecationWarningsByDefault",
      "type": "class",
      "name": "TestDeprecationWarningsByDefault",
      "file": "testing/test_warnings.py",
      "line": 431
    },
    {
      "id": "testing/test_warnings.py:TestDeprecationWarningsByDefault.create_file",
      "type": "function",
      "name": "TestDeprecationWarningsByDefault.create_file",
      "file": "testing/test_warnings.py",
      "line": 437
    },
    {
      "id": "testing/test_warnings.py:TestDeprecationWarningsByDefault.test_shown_by_default",
      "type": "function",
      "name": "TestDeprecationWarningsByDefault.test_shown_by_default",
      "file": "testing/test_warnings.py",
      "line": 453
    },
    {
      "id": "testing/test_warnings.py:TestDeprecationWarningsByDefault.test_hidden_by_ini",
      "type": "function",
      "name": "TestDeprecationWarningsByDefault.test_hidden_by_ini",
      "file": "testing/test_warnings.py",
      "line": 474
    },
    {
      "id": "testing/test_warnings.py:TestDeprecationWarningsByDefault.test_hidden_by_mark",
      "type": "function",
      "name": "TestDeprecationWarningsByDefault.test_hidden_by_mark",
      "file": "testing/test_warnings.py",
      "line": 487
    },
    {
      "id": "testing/test_warnings.py:TestDeprecationWarningsByDefault.test_hidden_by_cmdline",
      "type": "function",
      "name": "TestDeprecationWarningsByDefault.test_hidden_by_cmdline",
      "file": "testing/test_warnings.py",
      "line": 504
    },
    {
      "id": "testing/test_warnings.py:TestDeprecationWarningsByDefault.test_hidden_by_system",
      "type": "function",
      "name": "TestDeprecationWarningsByDefault.test_hidden_by_system",
      "file": "testing/test_warnings.py",
      "line": 514
    },
    {
      "id": "testing/test_warnings.py:test_removed_in_x_warning_as_error",
      "type": "function",
      "name": "test_removed_in_x_warning_as_error",
      "file": "testing/test_warnings.py",
      "line": 524
    },
    {
      "id": "testing/test_warnings.py:TestAssertionWarnings",
      "type": "class",
      "name": "TestAssertionWarnings",
      "file": "testing/test_warnings.py",
      "line": 559
    },
    {
      "id": "testing/test_warnings.py:TestAssertionWarnings.assert_result_warns",
      "type": "function",
      "name": "TestAssertionWarnings.assert_result_warns",
      "file": "testing/test_warnings.py",
      "line": 561
    },
    {
      "id": "testing/test_warnings.py:TestAssertionWarnings.test_tuple_warning",
      "type": "function",
      "name": "TestAssertionWarnings.test_tuple_warning",
      "file": "testing/test_warnings.py",
      "line": 564
    },
    {
      "id": "testing/test_warnings.py:test_warnings_checker_twice",
      "type": "function",
      "name": "test_warnings_checker_twice",
      "file": "testing/test_warnings.py",
      "line": 577
    },
    {
      "id": "testing/test_warnings.py:test_group_warnings_by_message",
      "type": "function",
      "name": "test_group_warnings_by_message",
      "file": "testing/test_warnings.py",
      "line": 587
    },
    {
      "id": "testing/test_warnings.py:test_group_warnings_by_message_summary",
      "type": "function",
      "name": "test_group_warnings_by_message_summary",
      "file": "testing/test_warnings.py",
      "line": 618
    },
    {
      "id": "testing/test_warnings.py:test_pytest_configure_warning",
      "type": "function",
      "name": "test_pytest_configure_warning",
      "file": "testing/test_warnings.py",
      "line": 641
    },
    {
      "id": "testing/test_warnings.py:TestStackLevel",
      "type": "class",
      "name": "TestStackLevel",
      "file": "testing/test_warnings.py",
      "line": 659
    },
    {
      "id": "testing/test_warnings.py:TestStackLevel.capwarn",
      "type": "function",
      "name": "TestStackLevel.capwarn",
      "file": "testing/test_warnings.py",
      "line": 661
    },
    {
      "id": "testing/test_warnings.py:TestStackLevel.capwarn.CapturedWarnings",
      "type": "class",
      "name": "TestStackLevel.capwarn.CapturedWarnings",
      "file": "testing/test_warnings.py",
      "line": 662
    },
    {
      "id": "testing/test_warnings.py:TestStackLevel.capwarn.CapturedWarnings.pytest_warning_recorded",
      "type": "function",
      "name": "TestStackLevel.capwarn.CapturedWarnings.pytest_warning_recorded",
      "file": "testing/test_warnings.py",
      "line": 668
    },
    {
      "id": "testing/test_warnings.py:TestStackLevel.test_issue4445_rewrite",
      "type": "function",
      "name": "TestStackLevel.test_issue4445_rewrite",
      "file": "testing/test_warnings.py",
      "line": 675
    },
    {
      "id": "testing/test_warnings.py:TestStackLevel.test_issue4445_preparse",
      "type": "function",
      "name": "TestStackLevel.test_issue4445_preparse",
      "file": "testing/test_warnings.py",
      "line": 701
    },
    {
      "id": "testing/test_warnings.py:TestStackLevel.test_conftest_warning_captured",
      "type": "function",
      "name": "TestStackLevel.test_conftest_warning_captured",
      "file": "testing/test_warnings.py",
      "line": 723
    },
    {
      "id": "testing/test_warnings.py:TestStackLevel.test_issue4445_import_plugin",
      "type": "function",
      "name": "TestStackLevel.test_issue4445_import_plugin",
      "file": "testing/test_warnings.py",
      "line": 736
    },
    {
      "id": "testing/test_warnings.py:TestStackLevel.test_issue4445_issue5928_mark_generator",
      "type": "function",
      "name": "TestStackLevel.test_issue4445_issue5928_mark_generator",
      "file": "testing/test_warnings.py",
      "line": 758
    },
    {
      "id": "testing/test_warnings.py:test_warning_on_testpaths_not_found",
      "type": "function",
      "name": "test_warning_on_testpaths_not_found",
      "file": "testing/test_warnings.py",
      "line": 781
    },
    {
      "id": "testing/test_warnings.py:test_resource_warning",
      "type": "function",
      "name": "test_resource_warning",
      "file": "testing/test_warnings.py",
      "line": 795
    },
    {
      "id": "testing/test_mark.py",
      "type": "file",
      "name": "test_mark.py",
      "file": "testing/test_mark.py",
      "line": 0
    },
    {
      "id": "testing/test_mark.py:TestMark",
      "type": "class",
      "name": "TestMark",
      "file": "testing/test_mark.py",
      "line": 16
    },
    {
      "id": "testing/test_mark.py:TestMark.test_pytest_exists_in_namespace_all",
      "type": "function",
      "name": "TestMark.test_pytest_exists_in_namespace_all",
      "file": "testing/test_mark.py",
      "line": 18
    },
    {
      "id": "testing/test_mark.py:TestMark.test_pytest_mark_notcallable",
      "type": "function",
      "name": "TestMark.test_pytest_mark_notcallable",
      "file": "testing/test_mark.py",
      "line": 22
    },
    {
      "id": "testing/test_mark.py:TestMark.test_mark_with_param",
      "type": "function",
      "name": "TestMark.test_mark_with_param",
      "file": "testing/test_mark.py",
      "line": 27
    },
    {
      "id": "testing/test_mark.py:TestMark.test_mark_with_param.some_function",
      "type": "function",
      "name": "TestMark.test_mark_with_param.some_function",
      "file": "testing/test_mark.py",
      "line": 28
    },
    {
      "id": "testing/test_mark.py:TestMark.test_mark_with_param.SomeClass",
      "type": "class",
      "name": "TestMark.test_mark_with_param.SomeClass",
      "file": "testing/test_mark.py",
      "line": 31
    },
    {
      "id": "testing/test_mark.py:TestMark.test_pytest_mark_name_starts_with_underscore",
      "type": "function",
      "name": "TestMark.test_pytest_mark_name_starts_with_underscore",
      "file": "testing/test_mark.py",
      "line": 41
    },
    {
      "id": "testing/test_mark.py:test_marked_class_run_twice",
      "type": "function",
      "name": "test_marked_class_run_twice",
      "file": "testing/test_mark.py",
      "line": 47
    },
    {
      "id": "testing/test_mark.py:test_ini_markers",
      "type": "function",
      "name": "test_ini_markers",
      "file": "testing/test_mark.py",
      "line": 65
    },
    {
      "id": "testing/test_mark.py:test_markers_option",
      "type": "function",
      "name": "test_markers_option",
      "file": "testing/test_mark.py",
      "line": 88
    },
    {
      "id": "testing/test_mark.py:test_ini_markers_whitespace",
      "type": "function",
      "name": "test_ini_markers_whitespace",
      "file": "testing/test_mark.py",
      "line": 104
    },
    {
      "id": "testing/test_mark.py:test_marker_without_description",
      "type": "function",
      "name": "test_marker_without_description",
      "file": "testing/test_mark.py",
      "line": 125
    },
    {
      "id": "testing/test_mark.py:test_markers_option_with_plugin_in_current_dir",
      "type": "function",
      "name": "test_markers_option_with_plugin_in_current_dir",
      "file": "testing/test_mark.py",
      "line": 145
    },
    {
      "id": "testing/test_mark.py:test_mark_on_pseudo_function",
      "type": "function",
      "name": "test_mark_on_pseudo_function",
      "file": "testing/test_mark.py",
      "line": 171
    },
    {
      "id": "testing/test_mark.py:test_strict_prohibits_unregistered_markers",
      "type": "function",
      "name": "test_strict_prohibits_unregistered_markers",
      "file": "testing/test_mark.py",
      "line": 186
    },
    {
      "id": "testing/test_mark.py:test_mark_option",
      "type": "function",
      "name": "test_mark_option",
      "file": "testing/test_mark.py",
      "line": 215
    },
    {
      "id": "testing/test_mark.py:test_mark_option_custom",
      "type": "function",
      "name": "test_mark_option_custom",
      "file": "testing/test_mark.py",
      "line": 239
    },
    {
      "id": "testing/test_mark.py:test_keyword_option_custom",
      "type": "function",
      "name": "test_keyword_option_custom",
      "file": "testing/test_mark.py",
      "line": 277
    },
    {
      "id": "testing/test_mark.py:test_keyword_option_considers_mark",
      "type": "function",
      "name": "test_keyword_option_considers_mark",
      "file": "testing/test_mark.py",
      "line": 300
    },
    {
      "id": "testing/test_mark.py:test_keyword_option_parametrize",
      "type": "function",
      "name": "test_keyword_option_parametrize",
      "file": "testing/test_mark.py",
      "line": 315
    },
    {
      "id": "testing/test_mark.py:test_parametrize_with_module",
      "type": "function",
      "name": "test_parametrize_with_module",
      "file": "testing/test_mark.py",
      "line": 332
    },
    {
      "id": "testing/test_mark.py:test_keyword_option_wrong_arguments",
      "type": "function",
      "name": "test_keyword_option_wrong_arguments",
      "file": "testing/test_mark.py",
      "line": 376
    },
    {
      "id": "testing/test_mark.py:test_parametrized_collected_from_command_line",
      "type": "function",
      "name": "test_parametrized_collected_from_command_line",
      "file": "testing/test_mark.py",
      "line": 390
    },
    {
      "id": "testing/test_mark.py:test_parametrized_collect_with_wrong_args",
      "type": "function",
      "name": "test_parametrized_collect_with_wrong_args",
      "file": "testing/test_mark.py",
      "line": 406
    },
    {
      "id": "testing/test_mark.py:test_parametrized_with_kwargs",
      "type": "function",
      "name": "test_parametrized_with_kwargs",
      "file": "testing/test_mark.py",
      "line": 429
    },
    {
      "id": "testing/test_mark.py:test_parametrize_iterator",
      "type": "function",
      "name": "test_parametrize_iterator",
      "file": "testing/test_mark.py",
      "line": 449
    },
    {
      "id": "testing/test_mark.py:TestFunctional",
      "type": "class",
      "name": "TestFunctional",
      "file": "testing/test_mark.py",
      "line": 471
    },
    {
      "id": "testing/test_mark.py:TestFunctional.test_merging_markers_deep",
      "type": "function",
      "name": "TestFunctional.test_merging_markers_deep",
      "file": "testing/test_mark.py",
      "line": 472
    },
    {
      "id": "testing/test_mark.py:TestFunctional.test_mark_decorator_subclass_does_not_propagate_to_base",
      "type": "function",
      "name": "TestFunctional.test_mark_decorator_subclass_does_not_propagate_to_base",
      "file": "testing/test_mark.py",
      "line": 492
    },
    {
      "id": "testing/test_mark.py:TestFunctional.test_mark_should_not_pass_to_siebling_class",
      "type": "function",
      "name": "TestFunctional.test_mark_should_not_pass_to_siebling_class",
      "file": "testing/test_mark.py",
      "line": 513
    },
    {
      "id": "testing/test_mark.py:TestFunctional.test_mark_decorator_baseclasses_merged",
      "type": "function",
      "name": "TestFunctional.test_mark_decorator_baseclasses_merged",
      "file": "testing/test_mark.py",
      "line": 541
    },
    {
      "id": "testing/test_mark.py:TestFunctional.test_mark_closest",
      "type": "function",
      "name": "TestFunctional.test_mark_closest",
      "file": "testing/test_mark.py",
      "line": 564
    },
    {
      "id": "testing/test_mark.py:TestFunctional.test_mark_with_wrong_marker",
      "type": "function",
      "name": "TestFunctional.test_mark_with_wrong_marker",
      "file": "testing/test_mark.py",
      "line": 590
    },
    {
      "id": "testing/test_mark.py:TestFunctional.test_mark_dynamically_in_funcarg",
      "type": "function",
      "name": "TestFunctional.test_mark_dynamically_in_funcarg",
      "file": "testing/test_mark.py",
      "line": 604
    },
    {
      "id": "testing/test_mark.py:TestFunctional.test_no_marker_match_on_unmarked_names",
      "type": "function",
      "name": "TestFunctional.test_no_marker_match_on_unmarked_names",
      "file": "testing/test_mark.py",
      "line": 625
    },
    {
      "id": "testing/test_mark.py:TestFunctional.test_keywords_at_node_level",
      "type": "function",
      "name": "TestFunctional.test_keywords_at_node_level",
      "file": "testing/test_mark.py",
      "line": 644
    },
    {
      "id": "testing/test_mark.py:TestFunctional.test_keyword_added_for_session",
      "type": "function",
      "name": "TestFunctional.test_keyword_added_for_session",
      "file": "testing/test_mark.py",
      "line": 666
    },
    {
      "id": "testing/test_mark.py:TestFunctional.assert_markers",
      "type": "function",
      "name": "TestFunctional.assert_markers",
      "file": "testing/test_mark.py",
      "line": 694
    },
    {
      "id": "testing/test_mark.py:TestFunctional.test_mark_from_parameters",
      "type": "function",
      "name": "TestFunctional.test_mark_from_parameters",
      "file": "testing/test_mark.py",
      "line": 707
    },
    {
      "id": "testing/test_mark.py:TestFunctional.test_reevaluate_dynamic_expr",
      "type": "function",
      "name": "TestFunctional.test_reevaluate_dynamic_expr",
      "file": "testing/test_mark.py",
      "line": 731
    },
    {
      "id": "testing/test_mark.py:TestKeywordSelection",
      "type": "class",
      "name": "TestKeywordSelection",
      "file": "testing/test_mark.py",
      "line": 762
    },
    {
      "id": "testing/test_mark.py:TestKeywordSelection.test_select_simple",
      "type": "function",
      "name": "TestKeywordSelection.test_select_simple",
      "file": "testing/test_mark.py",
      "line": 763
    },
    {
      "id": "testing/test_mark.py:TestKeywordSelection.test_select_simple.check",
      "type": "function",
      "name": "TestKeywordSelection.test_select_simple.check",
      "file": "testing/test_mark.py",
      "line": 774
    },
    {
      "id": "testing/test_mark.py:TestKeywordSelection.test_select_extra_keywords",
      "type": "function",
      "name": "TestKeywordSelection.test_select_extra_keywords",
      "file": "testing/test_mark.py",
      "line": 796
    },
    {
      "id": "testing/test_mark.py:TestKeywordSelection.test_keyword_extra",
      "type": "function",
      "name": "TestKeywordSelection.test_keyword_extra",
      "file": "testing/test_mark.py",
      "line": 826
    },
    {
      "id": "testing/test_mark.py:TestKeywordSelection.test_keyword_extra_dash",
      "type": "function",
      "name": "TestKeywordSelection.test_keyword_extra_dash",
      "file": "testing/test_mark.py",
      "line": 839
    },
    {
      "id": "testing/test_mark.py:TestKeywordSelection.test_no_magic_values",
      "type": "function",
      "name": "TestKeywordSelection.test_no_magic_values",
      "file": "testing/test_mark.py",
      "line": 857
    },
    {
      "id": "testing/test_mark.py:TestKeywordSelection.test_no_match_directories_outside_the_suite",
      "type": "function",
      "name": "TestKeywordSelection.test_no_match_directories_outside_the_suite",
      "file": "testing/test_mark.py",
      "line": 874
    },
    {
      "id": "testing/test_mark.py:TestKeywordSelection.test_no_match_directories_outside_the_suite.get_collected_names",
      "type": "function",
      "name": "TestKeywordSelection.test_no_match_directories_outside_the_suite.get_collected_names",
      "file": "testing/test_mark.py",
      "line": 884
    },
    {
      "id": "testing/test_mark.py:TestMarkDecorator",
      "type": "class",
      "name": "TestMarkDecorator",
      "file": "testing/test_mark.py",
      "line": 903
    },
    {
      "id": "testing/test_mark.py:TestMarkDecorator.test__eq__",
      "type": "function",
      "name": "TestMarkDecorator.test__eq__",
      "file": "testing/test_mark.py",
      "line": 913
    },
    {
      "id": "testing/test_mark.py:TestMarkDecorator.test_aliases",
      "type": "function",
      "name": "TestMarkDecorator.test_aliases",
      "file": "testing/test_mark.py",
      "line": 916
    },
    {
      "id": "testing/test_mark.py:test_parameterset_for_parametrize_marks",
      "type": "function",
      "name": "test_parameterset_for_parametrize_marks",
      "file": "testing/test_mark.py",
      "line": 924
    },
    {
      "id": "testing/test_mark.py:test_parameterset_for_fail_at_collect",
      "type": "function",
      "name": "test_parameterset_for_fail_at_collect",
      "file": "testing/test_mark.py",
      "line": 951
    },
    {
      "id": "testing/test_mark.py:test_parameterset_for_parametrize_bad_markname",
      "type": "function",
      "name": "test_parameterset_for_parametrize_bad_markname",
      "file": "testing/test_mark.py",
      "line": 993
    },
    {
      "id": "testing/test_mark.py:test_mark_expressions_no_smear",
      "type": "function",
      "name": "test_mark_expressions_no_smear",
      "file": "testing/test_mark.py",
      "line": 998
    },
    {
      "id": "testing/test_mark.py:test_addmarker_order",
      "type": "function",
      "name": "test_addmarker_order",
      "file": "testing/test_mark.py",
      "line": 1033
    },
    {
      "id": "testing/test_mark.py:test_markers_from_parametrize",
      "type": "function",
      "name": "test_markers_from_parametrize",
      "file": "testing/test_mark.py",
      "line": 1048
    },
    {
      "id": "testing/test_mark.py:test_pytest_param_id_requires_string",
      "type": "function",
      "name": "test_pytest_param_id_requires_string",
      "file": "testing/test_mark.py",
      "line": 1085
    },
    {
      "id": "testing/test_mark.py:test_pytest_param_id_allows_none_or_string",
      "type": "function",
      "name": "test_pytest_param_id_allows_none_or_string",
      "file": "testing/test_mark.py",
      "line": 1093
    },
    {
      "id": "testing/test_mark.py:test_marker_expr_eval_failure_handling",
      "type": "function",
      "name": "test_marker_expr_eval_failure_handling",
      "file": "testing/test_mark.py",
      "line": 1098
    },
    {
      "id": "testing/test_mark.py:test_mark_mro",
      "type": "function",
      "name": "test_mark_mro",
      "file": "testing/test_mark.py",
      "line": 1114
    },
    {
      "id": "testing/test_mark.py:test_mark_mro.A",
      "type": "class",
      "name": "test_mark_mro.A",
      "file": "testing/test_mark.py",
      "line": 1118
    },
    {
      "id": "testing/test_mark.py:test_mark_mro.B",
      "type": "class",
      "name": "test_mark_mro.B",
      "file": "testing/test_mark.py",
      "line": 1122
    },
    {
      "id": "testing/test_mark.py:test_mark_mro.C",
      "type": "class",
      "name": "test_mark_mro.C",
      "file": "testing/test_mark.py",
      "line": 1126
    },
    {
      "id": "testing/test_mark.py:test_mark_fixture_order_mro",
      "type": "function",
      "name": "test_mark_fixture_order_mro",
      "file": "testing/test_mark.py",
      "line": 1139
    },
    {
      "id": "testing/test_faulthandler.py",
      "type": "file",
      "name": "test_faulthandler.py",
      "file": "testing/test_faulthandler.py",
      "line": 0
    },
    {
      "id": "testing/test_faulthandler.py:test_enabled",
      "type": "function",
      "name": "test_enabled",
      "file": "testing/test_faulthandler.py",
      "line": 8
    },
    {
      "id": "testing/test_faulthandler.py:setup_crashing_test",
      "type": "function",
      "name": "setup_crashing_test",
      "file": "testing/test_faulthandler.py",
      "line": 22
    },
    {
      "id": "testing/test_faulthandler.py:test_crash_during_shutdown_captured",
      "type": "function",
      "name": "test_crash_during_shutdown_captured",
      "file": "testing/test_faulthandler.py",
      "line": 33
    },
    {
      "id": "testing/test_faulthandler.py:test_crash_during_shutdown_not_captured",
      "type": "function",
      "name": "test_crash_during_shutdown_not_captured",
      "file": "testing/test_faulthandler.py",
      "line": 45
    },
    {
      "id": "testing/test_faulthandler.py:test_disabled",
      "type": "function",
      "name": "test_disabled",
      "file": "testing/test_faulthandler.py",
      "line": 57
    },
    {
      "id": "testing/test_faulthandler.py:test_timeout",
      "type": "function",
      "name": "test_timeout",
      "file": "testing/test_faulthandler.py",
      "line": 80
    },
    {
      "id": "testing/test_faulthandler.py:test_cancel_timeout_on_hook",
      "type": "function",
      "name": "test_cancel_timeout_on_hook",
      "file": "testing/test_faulthandler.py",
      "line": 111
    },
    {
      "id": "testing/test_faulthandler.py:test_already_initialized_crash",
      "type": "function",
      "name": "test_already_initialized_crash",
      "file": "testing/test_faulthandler.py",
      "line": 131
    },
    {
      "id": "testing/test_faulthandler.py:test_get_stderr_fileno_invalid_fd",
      "type": "function",
      "name": "test_get_stderr_fileno_invalid_fd",
      "file": "testing/test_faulthandler.py",
      "line": 151
    },
    {
      "id": "testing/test_faulthandler.py:test_get_stderr_fileno_invalid_fd.StdErrWrapper",
      "type": "class",
      "name": "test_get_stderr_fileno_invalid_fd.StdErrWrapper",
      "file": "testing/test_faulthandler.py",
      "line": 155
    },
    {
      "id": "testing/test_faulthandler.py:test_get_stderr_fileno_invalid_fd.StdErrWrapper.fileno",
      "type": "function",
      "name": "test_get_stderr_fileno_invalid_fd.StdErrWrapper.fileno",
      "file": "testing/test_faulthandler.py",
      "line": 162
    },
    {
      "id": "testing/test_recwarn.py",
      "type": "file",
      "name": "test_recwarn.py",
      "file": "testing/test_recwarn.py",
      "line": 0
    },
    {
      "id": "testing/test_recwarn.py:test_recwarn_stacklevel",
      "type": "function",
      "name": "test_recwarn_stacklevel",
      "file": "testing/test_recwarn.py",
      "line": 9
    },
    {
      "id": "testing/test_recwarn.py:test_recwarn_functional",
      "type": "function",
      "name": "test_recwarn_functional",
      "file": "testing/test_recwarn.py",
      "line": 15
    },
    {
      "id": "testing/test_recwarn.py:test_recwarn_captures_deprecation_warning",
      "type": "function",
      "name": "test_recwarn_captures_deprecation_warning",
      "file": "testing/test_recwarn.py",
      "line": 30
    },
    {
      "id": "testing/test_recwarn.py:TestWarningsRecorderChecker",
      "type": "class",
      "name": "TestWarningsRecorderChecker",
      "file": "testing/test_recwarn.py",
      "line": 40
    },
    {
      "id": "testing/test_recwarn.py:TestWarningsRecorderChecker.test_recording",
      "type": "function",
      "name": "TestWarningsRecorderChecker.test_recording",
      "file": "testing/test_recwarn.py",
      "line": 41
    },
    {
      "id": "testing/test_recwarn.py:TestWarningsRecorderChecker.test_warn_stacklevel",
      "type": "function",
      "name": "TestWarningsRecorderChecker.test_warn_stacklevel",
      "file": "testing/test_recwarn.py",
      "line": 57
    },
    {
      "id": "testing/test_recwarn.py:TestWarningsRecorderChecker.test_typechecking",
      "type": "function",
      "name": "TestWarningsRecorderChecker.test_typechecking",
      "file": "testing/test_recwarn.py",
      "line": 63
    },
    {
      "id": "testing/test_recwarn.py:TestWarningsRecorderChecker.test_invalid_enter_exit",
      "type": "function",
      "name": "TestWarningsRecorderChecker.test_invalid_enter_exit",
      "file": "testing/test_recwarn.py",
      "line": 73
    },
    {
      "id": "testing/test_recwarn.py:TestDeprecatedCall",
      "type": "class",
      "name": "TestDeprecatedCall",
      "file": "testing/test_recwarn.py",
      "line": 87
    },
    {
      "id": "testing/test_recwarn.py:TestDeprecatedCall.dep",
      "type": "function",
      "name": "TestDeprecatedCall.dep",
      "file": "testing/test_recwarn.py",
      "line": 90
    },
    {
      "id": "testing/test_recwarn.py:TestDeprecatedCall.dep_explicit",
      "type": "function",
      "name": "TestDeprecatedCall.dep_explicit",
      "file": "testing/test_recwarn.py",
      "line": 95
    },
    {
      "id": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_raises",
      "type": "function",
      "name": "TestDeprecatedCall.test_deprecated_call_raises",
      "file": "testing/test_recwarn.py",
      "line": 101
    },
    {
      "id": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call",
      "type": "function",
      "name": "TestDeprecatedCall.test_deprecated_call",
      "file": "testing/test_recwarn.py",
      "line": 105
    },
    {
      "id": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_ret",
      "type": "function",
      "name": "TestDeprecatedCall.test_deprecated_call_ret",
      "file": "testing/test_recwarn.py",
      "line": 108
    },
    {
      "id": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_preserves",
      "type": "function",
      "name": "TestDeprecatedCall.test_deprecated_call_preserves",
      "file": "testing/test_recwarn.py",
      "line": 112
    },
    {
      "id": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_explicit_call_raises",
      "type": "function",
      "name": "TestDeprecatedCall.test_deprecated_explicit_call_raises",
      "file": "testing/test_recwarn.py",
      "line": 126
    },
    {
      "id": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_explicit_call",
      "type": "function",
      "name": "TestDeprecatedCall.test_deprecated_explicit_call",
      "file": "testing/test_recwarn.py",
      "line": 130
    },
    {
      "id": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_no_warning",
      "type": "function",
      "name": "TestDeprecatedCall.test_deprecated_call_no_warning",
      "file": "testing/test_recwarn.py",
      "line": 135
    },
    {
      "id": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_no_warning.f",
      "type": "function",
      "name": "TestDeprecatedCall.test_deprecated_call_no_warning.f",
      "file": "testing/test_recwarn.py",
      "line": 140
    },
    {
      "id": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_modes",
      "type": "function",
      "name": "TestDeprecatedCall.test_deprecated_call_modes",
      "file": "testing/test_recwarn.py",
      "line": 157
    },
    {
      "id": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_modes.f",
      "type": "function",
      "name": "TestDeprecatedCall.test_deprecated_call_modes.f",
      "file": "testing/test_recwarn.py",
      "line": 162
    },
    {
      "id": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_specificity",
      "type": "function",
      "name": "TestDeprecatedCall.test_deprecated_call_specificity",
      "file": "testing/test_recwarn.py",
      "line": 175
    },
    {
      "id": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_specificity.f",
      "type": "function",
      "name": "TestDeprecatedCall.test_deprecated_call_specificity.f",
      "file": "testing/test_recwarn.py",
      "line": 187
    },
    {
      "id": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_supports_match",
      "type": "function",
      "name": "TestDeprecatedCall.test_deprecated_call_supports_match",
      "file": "testing/test_recwarn.py",
      "line": 197
    },
    {
      "id": "testing/test_recwarn.py:TestWarns",
      "type": "class",
      "name": "TestWarns",
      "file": "testing/test_recwarn.py",
      "line": 207
    },
    {
      "id": "testing/test_recwarn.py:TestWarns.test_check_callable",
      "type": "function",
      "name": "TestWarns.test_check_callable",
      "file": "testing/test_recwarn.py",
      "line": 208
    },
    {
      "id": "testing/test_recwarn.py:TestWarns.test_several_messages",
      "type": "function",
      "name": "TestWarns.test_several_messages",
      "file": "testing/test_recwarn.py",
      "line": 213
    },
    {
      "id": "testing/test_recwarn.py:TestWarns.test_function",
      "type": "function",
      "name": "TestWarns.test_function",
      "file": "testing/test_recwarn.py",
      "line": 221
    },
    {
      "id": "testing/test_recwarn.py:TestWarns.test_warning_tuple",
      "type": "function",
      "name": "TestWarns.test_warning_tuple",
      "file": "testing/test_recwarn.py",
      "line": 226
    },
    {
      "id": "testing/test_recwarn.py:TestWarns.test_as_contextmanager",
      "type": "function",
      "name": "TestWarns.test_as_contextmanager",
      "file": "testing/test_recwarn.py",
      "line": 242
    },
    {
      "id": "testing/test_recwarn.py:TestWarns.test_record",
      "type": "function",
      "name": "TestWarns.test_record",
      "file": "testing/test_recwarn.py",
      "line": 290
    },
    {
      "id": "testing/test_recwarn.py:TestWarns.test_record_only",
      "type": "function",
      "name": "TestWarns.test_record_only",
      "file": "testing/test_recwarn.py",
      "line": 297
    },
    {
      "id": "testing/test_recwarn.py:TestWarns.test_record_only_none_deprecated_warn",
      "type": "function",
      "name": "TestWarns.test_record_only_none_deprecated_warn",
      "file": "testing/test_recwarn.py",
      "line": 306
    },
    {
      "id": "testing/test_recwarn.py:TestWarns.test_record_by_subclass",
      "type": "function",
      "name": "TestWarns.test_record_by_subclass",
      "file": "testing/test_recwarn.py",
      "line": 318
    },
    {
      "id": "testing/test_recwarn.py:TestWarns.test_record_by_subclass.MyUserWarning",
      "type": "class",
      "name": "TestWarns.test_record_by_subclass.MyUserWarning",
      "file": "testing/test_recwarn.py",
      "line": 327
    },
    {
      "id": "testing/test_recwarn.py:TestWarns.test_record_by_subclass.MyRuntimeWarning",
      "type": "class",
      "name": "TestWarns.test_record_by_subclass.MyRuntimeWarning",
      "file": "testing/test_recwarn.py",
      "line": 330
    },
    {
      "id": "testing/test_recwarn.py:TestWarns.test_double_test",
      "type": "function",
      "name": "TestWarns.test_double_test",
      "file": "testing/test_recwarn.py",
      "line": 341
    },
    {
      "id": "testing/test_recwarn.py:TestWarns.test_match_regex",
      "type": "function",
      "name": "TestWarns.test_match_regex",
      "file": "testing/test_recwarn.py",
      "line": 357
    },
    {
      "id": "testing/test_recwarn.py:TestWarns.test_one_from_multiple_warns",
      "type": "function",
      "name": "TestWarns.test_one_from_multiple_warns",
      "file": "testing/test_recwarn.py",
      "line": 371
    },
    {
      "id": "testing/test_recwarn.py:TestWarns.test_none_of_multiple_warns",
      "type": "function",
      "name": "TestWarns.test_none_of_multiple_warns",
      "file": "testing/test_recwarn.py",
      "line": 380
    },
    {
      "id": "testing/test_recwarn.py:TestWarns.test_can_capture_previously_warned",
      "type": "function",
      "name": "TestWarns.test_can_capture_previously_warned",
      "file": "testing/test_recwarn.py",
      "line": 388
    },
    {
      "id": "testing/test_recwarn.py:TestWarns.test_can_capture_previously_warned.f",
      "type": "function",
      "name": "TestWarns.test_can_capture_previously_warned.f",
      "file": "testing/test_recwarn.py",
      "line": 389
    },
    {
      "id": "testing/test_recwarn.py:TestWarns.test_warns_context_manager_with_kwargs",
      "type": "function",
      "name": "TestWarns.test_warns_context_manager_with_kwargs",
      "file": "testing/test_recwarn.py",
      "line": 398
    },
    {
      "id": "testing/test_recwarn.py:TestWarns.test_re_emit_single",
      "type": "function",
      "name": "TestWarns.test_re_emit_single",
      "file": "testing/test_recwarn.py",
      "line": 404
    },
    {
      "id": "testing/test_recwarn.py:TestWarns.test_re_emit_multiple",
      "type": "function",
      "name": "TestWarns.test_re_emit_multiple",
      "file": "testing/test_recwarn.py",
      "line": 410
    },
    {
      "id": "testing/test_recwarn.py:TestWarns.test_re_emit_match_single",
      "type": "function",
      "name": "TestWarns.test_re_emit_match_single",
      "file": "testing/test_recwarn.py",
      "line": 415
    },
    {
      "id": "testing/test_recwarn.py:TestWarns.test_re_emit_match_multiple",
      "type": "function",
      "name": "TestWarns.test_re_emit_match_multiple",
      "file": "testing/test_recwarn.py",
      "line": 421
    },
    {
      "id": "testing/test_recwarn.py:TestWarns.test_re_emit_non_match_single",
      "type": "function",
      "name": "TestWarns.test_re_emit_non_match_single",
      "file": "testing/test_recwarn.py",
      "line": 428
    },
    {
      "id": "testing/test_recwarn.py:TestWarns.test_catch_warning_within_raise",
      "type": "function",
      "name": "TestWarns.test_catch_warning_within_raise",
      "file": "testing/test_recwarn.py",
      "line": 434
    },
    {
      "id": "testing/test_session.py",
      "type": "file",
      "name": "test_session.py",
      "file": "testing/test_session.py",
      "line": 0
    },
    {
      "id": "testing/test_session.py:SessionTests",
      "type": "class",
      "name": "SessionTests",
      "file": "testing/test_session.py",
      "line": 7
    },
    {
      "id": "testing/test_session.py:SessionTests.test_basic_testitem_events",
      "type": "function",
      "name": "SessionTests.test_basic_testitem_events",
      "file": "testing/test_session.py",
      "line": 8
    },
    {
      "id": "testing/test_session.py:SessionTests.test_basic_testitem_events.end",
      "type": "function",
      "name": "SessionTests.test_basic_testitem_events.end",
      "file": "testing/test_session.py",
      "line": 28
    },
    {
      "id": "testing/test_session.py:SessionTests.test_nested_import_error",
      "type": "function",
      "name": "SessionTests.test_nested_import_error",
      "file": "testing/test_session.py",
      "line": 40
    },
    {
      "id": "testing/test_session.py:SessionTests.test_raises_output",
      "type": "function",
      "name": "SessionTests.test_raises_output",
      "file": "testing/test_session.py",
      "line": 58
    },
    {
      "id": "testing/test_session.py:SessionTests.test_syntax_error_module",
      "type": "function",
      "name": "SessionTests.test_syntax_error_module",
      "file": "testing/test_session.py",
      "line": 71
    },
    {
      "id": "testing/test_session.py:SessionTests.test_exit_first_problem",
      "type": "function",
      "name": "SessionTests.test_exit_first_problem",
      "file": "testing/test_session.py",
      "line": 78
    },
    {
      "id": "testing/test_session.py:SessionTests.test_maxfail",
      "type": "function",
      "name": "SessionTests.test_maxfail",
      "file": "testing/test_session.py",
      "line": 90
    },
    {
      "id": "testing/test_session.py:SessionTests.test_broken_repr",
      "type": "function",
      "name": "SessionTests.test_broken_repr",
      "file": "testing/test_session.py",
      "line": 103
    },
    {
      "id": "testing/test_session.py:SessionTests.test_broken_repr_with_showlocals_verbose",
      "type": "function",
      "name": "SessionTests.test_broken_repr_with_showlocals_verbose",
      "file": "testing/test_session.py",
      "line": 135
    },
    {
      "id": "testing/test_session.py:SessionTests.test_skip_file_by_conftest",
      "type": "function",
      "name": "SessionTests.test_skip_file_by_conftest",
      "file": "testing/test_session.py",
      "line": 159
    },
    {
      "id": "testing/test_session.py:TestNewSession",
      "type": "class",
      "name": "TestNewSession",
      "file": "testing/test_session.py",
      "line": 179
    },
    {
      "id": "testing/test_session.py:TestNewSession.test_order_of_execution",
      "type": "function",
      "name": "TestNewSession.test_order_of_execution",
      "file": "testing/test_session.py",
      "line": 180
    },
    {
      "id": "testing/test_session.py:TestNewSession.test_collect_only_with_various_situations",
      "type": "function",
      "name": "TestNewSession.test_collect_only_with_various_situations",
      "file": "testing/test_session.py",
      "line": 206
    },
    {
      "id": "testing/test_session.py:TestNewSession.test_minus_x_import_error",
      "type": "function",
      "name": "TestNewSession.test_minus_x_import_error",
      "file": "testing/test_session.py",
      "line": 234
    },
    {
      "id": "testing/test_session.py:TestNewSession.test_minus_x_overridden_by_maxfail",
      "type": "function",
      "name": "TestNewSession.test_minus_x_overridden_by_maxfail",
      "file": "testing/test_session.py",
      "line": 242
    },
    {
      "id": "testing/test_session.py:test_plugin_specify",
      "type": "function",
      "name": "test_plugin_specify",
      "file": "testing/test_session.py",
      "line": 251
    },
    {
      "id": "testing/test_session.py:test_plugin_already_exists",
      "type": "function",
      "name": "test_plugin_already_exists",
      "file": "testing/test_session.py",
      "line": 259
    },
    {
      "id": "testing/test_session.py:test_exclude",
      "type": "function",
      "name": "test_exclude",
      "file": "testing/test_session.py",
      "line": 266
    },
    {
      "id": "testing/test_session.py:test_exclude_glob",
      "type": "function",
      "name": "test_exclude_glob",
      "file": "testing/test_session.py",
      "line": 277
    },
    {
      "id": "testing/test_session.py:test_deselect",
      "type": "function",
      "name": "test_deselect",
      "file": "testing/test_session.py",
      "line": 292
    },
    {
      "id": "testing/test_session.py:test_sessionfinish_with_start",
      "type": "function",
      "name": "test_sessionfinish_with_start",
      "file": "testing/test_session.py",
      "line": 320
    },
    {
      "id": "testing/test_session.py:test_collection_args_do_not_duplicate_modules",
      "type": "function",
      "name": "test_collection_args_do_not_duplicate_modules",
      "file": "testing/test_session.py",
      "line": 338
    },
    {
      "id": "testing/test_session.py:test_rootdir_option_arg",
      "type": "function",
      "name": "test_rootdir_option_arg",
      "file": "testing/test_session.py",
      "line": 387
    },
    {
      "id": "testing/test_session.py:test_rootdir_wrong_option_arg",
      "type": "function",
      "name": "test_rootdir_wrong_option_arg",
      "file": "testing/test_session.py",
      "line": 413
    },
    {
      "id": "testing/test_skipping.py",
      "type": "file",
      "name": "test_skipping.py",
      "file": "testing/test_skipping.py",
      "line": 0
    },
    {
      "id": "testing/test_skipping.py:TestEvaluation",
      "type": "class",
      "name": "TestEvaluation",
      "file": "testing/test_skipping.py",
      "line": 12
    },
    {
      "id": "testing/test_skipping.py:TestEvaluation.test_no_marker",
      "type": "function",
      "name": "TestEvaluation.test_no_marker",
      "file": "testing/test_skipping.py",
      "line": 13
    },
    {
      "id": "testing/test_skipping.py:TestEvaluation.test_marked_xfail_no_args",
      "type": "function",
      "name": "TestEvaluation.test_marked_xfail_no_args",
      "file": "testing/test_skipping.py",
      "line": 18
    },
    {
      "id": "testing/test_skipping.py:TestEvaluation.test_marked_skipif_no_args",
      "type": "function",
      "name": "TestEvaluation.test_marked_skipif_no_args",
      "file": "testing/test_skipping.py",
      "line": 32
    },
    {
      "id": "testing/test_skipping.py:TestEvaluation.test_marked_one_arg",
      "type": "function",
      "name": "TestEvaluation.test_marked_one_arg",
      "file": "testing/test_skipping.py",
      "line": 45
    },
    {
      "id": "testing/test_skipping.py:TestEvaluation.test_marked_one_arg_with_reason",
      "type": "function",
      "name": "TestEvaluation.test_marked_one_arg_with_reason",
      "file": "testing/test_skipping.py",
      "line": 58
    },
    {
      "id": "testing/test_skipping.py:TestEvaluation.test_marked_one_arg_twice",
      "type": "function",
      "name": "TestEvaluation.test_marked_one_arg_twice",
      "file": "testing/test_skipping.py",
      "line": 71
    },
    {
      "id": "testing/test_skipping.py:TestEvaluation.test_marked_one_arg_twice2",
      "type": "function",
      "name": "TestEvaluation.test_marked_one_arg_twice2",
      "file": "testing/test_skipping.py",
      "line": 91
    },
    {
      "id": "testing/test_skipping.py:TestEvaluation.test_marked_skipif_with_boolean_without_reason",
      "type": "function",
      "name": "TestEvaluation.test_marked_skipif_with_boolean_without_reason",
      "file": "testing/test_skipping.py",
      "line": 105
    },
    {
      "id": "testing/test_skipping.py:TestEvaluation.test_marked_skipif_with_invalid_boolean",
      "type": "function",
      "name": "TestEvaluation.test_marked_skipif_with_invalid_boolean",
      "file": "testing/test_skipping.py",
      "line": 124
    },
    {
      "id": "testing/test_skipping.py:TestEvaluation.test_skipif_class",
      "type": "function",
      "name": "TestEvaluation.test_skipif_class",
      "file": "testing/test_skipping.py",
      "line": 144
    },
    {
      "id": "testing/test_skipping.py:TestEvaluation.test_skipif_markeval_namespace",
      "type": "function",
      "name": "TestEvaluation.test_skipif_markeval_namespace",
      "file": "testing/test_skipping.py",
      "line": 159
    },
    {
      "id": "testing/test_skipping.py:TestEvaluation.test_skipif_markeval_namespace_multiple",
      "type": "function",
      "name": "TestEvaluation.test_skipif_markeval_namespace_multiple",
      "file": "testing/test_skipping.py",
      "line": 186
    },
    {
      "id": "testing/test_skipping.py:TestEvaluation.test_skipif_markeval_namespace_ValueError",
      "type": "function",
      "name": "TestEvaluation.test_skipif_markeval_namespace_ValueError",
      "file": "testing/test_skipping.py",
      "line": 269
    },
    {
      "id": "testing/test_skipping.py:TestXFail",
      "type": "class",
      "name": "TestXFail",
      "file": "testing/test_skipping.py",
      "line": 296
    },
    {
      "id": "testing/test_skipping.py:TestXFail.test_xfail_simple",
      "type": "function",
      "name": "TestXFail.test_xfail_simple",
      "file": "testing/test_skipping.py",
      "line": 298
    },
    {
      "id": "testing/test_skipping.py:TestXFail.test_xfail_xpassed",
      "type": "function",
      "name": "TestXFail.test_xfail_xpassed",
      "file": "testing/test_skipping.py",
      "line": 314
    },
    {
      "id": "testing/test_skipping.py:TestXFail.test_xfail_using_platform",
      "type": "function",
      "name": "TestXFail.test_xfail_using_platform",
      "file": "testing/test_skipping.py",
      "line": 329
    },
    {
      "id": "testing/test_skipping.py:TestXFail.test_xfail_xpassed_strict",
      "type": "function",
      "name": "TestXFail.test_xfail_xpassed_strict",
      "file": "testing/test_skipping.py",
      "line": 344
    },
    {
      "id": "testing/test_skipping.py:TestXFail.test_xfail_run_anyway",
      "type": "function",
      "name": "TestXFail.test_xfail_run_anyway",
      "file": "testing/test_skipping.py",
      "line": 360
    },
    {
      "id": "testing/test_skipping.py:TestXFail.test_xfail_run_with_skip_mark",
      "type": "function",
      "name": "TestXFail.test_xfail_run_with_skip_mark",
      "file": "testing/test_skipping.py",
      "line": 389
    },
    {
      "id": "testing/test_skipping.py:TestXFail.test_xfail_evalfalse_but_fails",
      "type": "function",
      "name": "TestXFail.test_xfail_evalfalse_but_fails",
      "file": "testing/test_skipping.py",
      "line": 403
    },
    {
      "id": "testing/test_skipping.py:TestXFail.test_xfail_not_report_default",
      "type": "function",
      "name": "TestXFail.test_xfail_not_report_default",
      "file": "testing/test_skipping.py",
      "line": 418
    },
    {
      "id": "testing/test_skipping.py:TestXFail.test_xfail_not_run_xfail_reporting",
      "type": "function",
      "name": "TestXFail.test_xfail_not_run_xfail_reporting",
      "file": "testing/test_skipping.py",
      "line": 432
    },
    {
      "id": "testing/test_skipping.py:TestXFail.test_xfail_not_run_no_setup_run",
      "type": "function",
      "name": "TestXFail.test_xfail_not_run_no_setup_run",
      "file": "testing/test_skipping.py",
      "line": 456
    },
    {
      "id": "testing/test_skipping.py:TestXFail.test_xfail_xpass",
      "type": "function",
      "name": "TestXFail.test_xfail_xpass",
      "file": "testing/test_skipping.py",
      "line": 470
    },
    {
      "id": "testing/test_skipping.py:TestXFail.test_xfail_imperative",
      "type": "function",
      "name": "TestXFail.test_xfail_imperative",
      "file": "testing/test_skipping.py",
      "line": 483
    },
    {
      "id": "testing/test_skipping.py:TestXFail.test_xfail_imperative_in_setup_function",
      "type": "function",
      "name": "TestXFail.test_xfail_imperative_in_setup_function",
      "file": "testing/test_skipping.py",
      "line": 498
    },
    {
      "id": "testing/test_skipping.py:TestXFail.xtest_dynamic_xfail_set_during_setup",
      "type": "function",
      "name": "TestXFail.xtest_dynamic_xfail_set_during_setup",
      "file": "testing/test_skipping.py",
      "line": 521
    },
    {
      "id": "testing/test_skipping.py:TestXFail.test_dynamic_xfail_no_run",
      "type": "function",
      "name": "TestXFail.test_dynamic_xfail_no_run",
      "file": "testing/test_skipping.py",
      "line": 536
    },
    {
      "id": "testing/test_skipping.py:TestXFail.test_dynamic_xfail_set_during_funcarg_setup",
      "type": "function",
      "name": "TestXFail.test_dynamic_xfail_set_during_funcarg_setup",
      "file": "testing/test_skipping.py",
      "line": 550
    },
    {
      "id": "testing/test_skipping.py:TestXFail.test_dynamic_xfail_set_during_runtest_failed",
      "type": "function",
      "name": "TestXFail.test_dynamic_xfail_set_during_runtest_failed",
      "file": "testing/test_skipping.py",
      "line": 564
    },
    {
      "id": "testing/test_skipping.py:TestXFail.test_dynamic_xfail_set_during_runtest_passed_strict",
      "type": "function",
      "name": "TestXFail.test_dynamic_xfail_set_during_runtest_passed_strict",
      "file": "testing/test_skipping.py",
      "line": 577
    },
    {
      "id": "testing/test_skipping.py:TestXFail.test_xfail_raises",
      "type": "function",
      "name": "TestXFail.test_xfail_raises",
      "file": "testing/test_skipping.py",
      "line": 600
    },
    {
      "id": "testing/test_skipping.py:TestXFail.test_strict_sanity",
      "type": "function",
      "name": "TestXFail.test_strict_sanity",
      "file": "testing/test_skipping.py",
      "line": 615
    },
    {
      "id": "testing/test_skipping.py:TestXFail.test_strict_xfail",
      "type": "function",
      "name": "TestXFail.test_strict_xfail",
      "file": "testing/test_skipping.py",
      "line": 631
    },
    {
      "id": "testing/test_skipping.py:TestXFail.test_strict_xfail_condition",
      "type": "function",
      "name": "TestXFail.test_strict_xfail_condition",
      "file": "testing/test_skipping.py",
      "line": 659
    },
    {
      "id": "testing/test_skipping.py:TestXFail.test_xfail_condition_keyword",
      "type": "function",
      "name": "TestXFail.test_xfail_condition_keyword",
      "file": "testing/test_skipping.py",
      "line": 675
    },
    {
      "id": "testing/test_skipping.py:TestXFail.test_strict_xfail_default_from_file",
      "type": "function",
      "name": "TestXFail.test_strict_xfail_default_from_file",
      "file": "testing/test_skipping.py",
      "line": 691
    },
    {
      "id": "testing/test_skipping.py:TestXFail.test_xfail_markeval_namespace",
      "type": "function",
      "name": "TestXFail.test_xfail_markeval_namespace",
      "file": "testing/test_skipping.py",
      "line": 714
    },
    {
      "id": "testing/test_skipping.py:TestXFailwithSetupTeardown",
      "type": "class",
      "name": "TestXFailwithSetupTeardown",
      "file": "testing/test_skipping.py",
      "line": 742
    },
    {
      "id": "testing/test_skipping.py:TestXFailwithSetupTeardown.test_failing_setup_issue9",
      "type": "function",
      "name": "TestXFailwithSetupTeardown.test_failing_setup_issue9",
      "file": "testing/test_skipping.py",
      "line": 743
    },
    {
      "id": "testing/test_skipping.py:TestXFailwithSetupTeardown.test_failing_teardown_issue9",
      "type": "function",
      "name": "TestXFailwithSetupTeardown.test_failing_teardown_issue9",
      "file": "testing/test_skipping.py",
      "line": 758
    },
    {
      "id": "testing/test_skipping.py:TestSkip",
      "type": "class",
      "name": "TestSkip",
      "file": "testing/test_skipping.py",
      "line": 774
    },
    {
      "id": "testing/test_skipping.py:TestSkip.test_skip_class",
      "type": "function",
      "name": "TestSkip.test_skip_class",
      "file": "testing/test_skipping.py",
      "line": 775
    },
    {
      "id": "testing/test_skipping.py:TestSkip.test_skips_on_false_string",
      "type": "function",
      "name": "TestSkip.test_skips_on_false_string",
      "file": "testing/test_skipping.py",
      "line": 793
    },
    {
      "id": "testing/test_skipping.py:TestSkip.test_arg_as_reason",
      "type": "function",
      "name": "TestSkip.test_arg_as_reason",
      "file": "testing/test_skipping.py",
      "line": 805
    },
    {
      "id": "testing/test_skipping.py:TestSkip.test_skip_no_reason",
      "type": "function",
      "name": "TestSkip.test_skip_no_reason",
      "file": "testing/test_skipping.py",
      "line": 817
    },
    {
      "id": "testing/test_skipping.py:TestSkip.test_skip_with_reason",
      "type": "function",
      "name": "TestSkip.test_skip_with_reason",
      "file": "testing/test_skipping.py",
      "line": 829
    },
    {
      "id": "testing/test_skipping.py:TestSkip.test_only_skips_marked_test",
      "type": "function",
      "name": "TestSkip.test_only_skips_marked_test",
      "file": "testing/test_skipping.py",
      "line": 841
    },
    {
      "id": "testing/test_skipping.py:TestSkip.test_strict_and_skip",
      "type": "function",
      "name": "TestSkip.test_strict_and_skip",
      "file": "testing/test_skipping.py",
      "line": 858
    },
    {
      "id": "testing/test_skipping.py:TestSkip.test_wrong_skip_usage",
      "type": "function",
      "name": "TestSkip.test_wrong_skip_usage",
      "file": "testing/test_skipping.py",
      "line": 870
    },
    {
      "id": "testing/test_skipping.py:TestSkipif",
      "type": "class",
      "name": "TestSkipif",
      "file": "testing/test_skipping.py",
      "line": 888
    },
    {
      "id": "testing/test_skipping.py:TestSkipif.test_skipif_conditional",
      "type": "function",
      "name": "TestSkipif.test_skipif_conditional",
      "file": "testing/test_skipping.py",
      "line": 889
    },
    {
      "id": "testing/test_skipping.py:TestSkipif.test_skipif_reporting",
      "type": "function",
      "name": "TestSkipif.test_skipif_reporting",
      "file": "testing/test_skipping.py",
      "line": 904
    },
    {
      "id": "testing/test_skipping.py:TestSkipif.test_skipif_using_platform",
      "type": "function",
      "name": "TestSkipif.test_skipif_using_platform",
      "file": "testing/test_skipping.py",
      "line": 918
    },
    {
      "id": "testing/test_skipping.py:TestSkipif.test_skipif_reporting_multiple",
      "type": "function",
      "name": "TestSkipif.test_skipif_reporting_multiple",
      "file": "testing/test_skipping.py",
      "line": 933
    },
    {
      "id": "testing/test_skipping.py:test_skip_not_report_default",
      "type": "function",
      "name": "test_skip_not_report_default",
      "file": "testing/test_skipping.py",
      "line": 954
    },
    {
      "id": "testing/test_skipping.py:test_skipif_class",
      "type": "function",
      "name": "test_skipif_class",
      "file": "testing/test_skipping.py",
      "line": 971
    },
    {
      "id": "testing/test_skipping.py:test_skipped_reasons_functional",
      "type": "function",
      "name": "test_skipped_reasons_functional",
      "file": "testing/test_skipping.py",
      "line": 988
    },
    {
      "id": "testing/test_skipping.py:test_skipped_folding",
      "type": "function",
      "name": "test_skipped_folding",
      "file": "testing/test_skipping.py",
      "line": 1025
    },
    {
      "id": "testing/test_skipping.py:test_reportchars",
      "type": "function",
      "name": "test_reportchars",
      "file": "testing/test_skipping.py",
      "line": 1044
    },
    {
      "id": "testing/test_skipping.py:test_reportchars_error",
      "type": "function",
      "name": "test_reportchars_error",
      "file": "testing/test_skipping.py",
      "line": 1066
    },
    {
      "id": "testing/test_skipping.py:test_reportchars_all",
      "type": "function",
      "name": "test_reportchars_all",
      "file": "testing/test_skipping.py",
      "line": 1081
    },
    {
      "id": "testing/test_skipping.py:test_reportchars_all_error",
      "type": "function",
      "name": "test_reportchars_all_error",
      "file": "testing/test_skipping.py",
      "line": 1114
    },
    {
      "id": "testing/test_skipping.py:test_errors_in_xfail_skip_expressions",
      "type": "function",
      "name": "test_errors_in_xfail_skip_expressions",
      "file": "testing/test_skipping.py",
      "line": 1129
    },
    {
      "id": "testing/test_skipping.py:test_xfail_skipif_with_globals",
      "type": "function",
      "name": "test_xfail_skipif_with_globals",
      "file": "testing/test_skipping.py",
      "line": 1175
    },
    {
      "id": "testing/test_skipping.py:test_default_markers",
      "type": "function",
      "name": "test_default_markers",
      "file": "testing/test_skipping.py",
      "line": 1192
    },
    {
      "id": "testing/test_skipping.py:test_xfail_test_setup_exception",
      "type": "function",
      "name": "test_xfail_test_setup_exception",
      "file": "testing/test_skipping.py",
      "line": 1202
    },
    {
      "id": "testing/test_skipping.py:test_imperativeskip_on_xfail_test",
      "type": "function",
      "name": "test_imperativeskip_on_xfail_test",
      "file": "testing/test_skipping.py",
      "line": 1223
    },
    {
      "id": "testing/test_skipping.py:TestBooleanCondition",
      "type": "class",
      "name": "TestBooleanCondition",
      "file": "testing/test_skipping.py",
      "line": 1253
    },
    {
      "id": "testing/test_skipping.py:TestBooleanCondition.test_skipif",
      "type": "function",
      "name": "TestBooleanCondition.test_skipif",
      "file": "testing/test_skipping.py",
      "line": 1254
    },
    {
      "id": "testing/test_skipping.py:TestBooleanCondition.test_skipif_noreason",
      "type": "function",
      "name": "TestBooleanCondition.test_skipif_noreason",
      "file": "testing/test_skipping.py",
      "line": 1273
    },
    {
      "id": "testing/test_skipping.py:TestBooleanCondition.test_xfail",
      "type": "function",
      "name": "TestBooleanCondition.test_xfail",
      "file": "testing/test_skipping.py",
      "line": 1289
    },
    {
      "id": "testing/test_skipping.py:test_xfail_item",
      "type": "function",
      "name": "test_xfail_item",
      "file": "testing/test_skipping.py",
      "line": 1307
    },
    {
      "id": "testing/test_skipping.py:test_module_level_skip_error",
      "type": "function",
      "name": "test_module_level_skip_error",
      "file": "testing/test_skipping.py",
      "line": 1329
    },
    {
      "id": "testing/test_skipping.py:test_module_level_skip_with_allow_module_level",
      "type": "function",
      "name": "test_module_level_skip_with_allow_module_level",
      "file": "testing/test_skipping.py",
      "line": 1346
    },
    {
      "id": "testing/test_skipping.py:test_invalid_skip_keyword_parameter",
      "type": "function",
      "name": "test_invalid_skip_keyword_parameter",
      "file": "testing/test_skipping.py",
      "line": 1361
    },
    {
      "id": "testing/test_skipping.py:test_mark_xfail_item",
      "type": "function",
      "name": "test_mark_xfail_item",
      "file": "testing/test_skipping.py",
      "line": 1376
    },
    {
      "id": "testing/test_skipping.py:test_summary_list_after_errors",
      "type": "function",
      "name": "test_summary_list_after_errors",
      "file": "testing/test_skipping.py",
      "line": 1403
    },
    {
      "id": "testing/test_skipping.py:test_importorskip",
      "type": "function",
      "name": "test_importorskip",
      "file": "testing/test_skipping.py",
      "line": 1422
    },
    {
      "id": "testing/test_skipping.py:test_relpath_rootdir",
      "type": "function",
      "name": "test_relpath_rootdir",
      "file": "testing/test_skipping.py",
      "line": 1430
    },
    {
      "id": "testing/test_skipping.py:test_skip_from_fixture",
      "type": "function",
      "name": "test_skip_from_fixture",
      "file": "testing/test_skipping.py",
      "line": 1447
    },
    {
      "id": "testing/test_skipping.py:test_skip_using_reason_works_ok",
      "type": "function",
      "name": "test_skip_using_reason_works_ok",
      "file": "testing/test_skipping.py",
      "line": 1468
    },
    {
      "id": "testing/test_skipping.py:test_fail_using_reason_works_ok",
      "type": "function",
      "name": "test_fail_using_reason_works_ok",
      "file": "testing/test_skipping.py",
      "line": 1482
    },
    {
      "id": "testing/test_skipping.py:test_fail_fails_with_msg_and_reason",
      "type": "function",
      "name": "test_fail_fails_with_msg_and_reason",
      "file": "testing/test_skipping.py",
      "line": 1496
    },
    {
      "id": "testing/test_skipping.py:test_skip_fails_with_msg_and_reason",
      "type": "function",
      "name": "test_skip_fails_with_msg_and_reason",
      "file": "testing/test_skipping.py",
      "line": 1512
    },
    {
      "id": "testing/test_skipping.py:test_exit_with_msg_and_reason_fails",
      "type": "function",
      "name": "test_exit_with_msg_and_reason_fails",
      "file": "testing/test_skipping.py",
      "line": 1528
    },
    {
      "id": "testing/test_skipping.py:test_exit_with_reason_works_ok",
      "type": "function",
      "name": "test_exit_with_reason_works_ok",
      "file": "testing/test_skipping.py",
      "line": 1544
    },
    {
      "id": "testing/test_python_path.py",
      "type": "file",
      "name": "test_python_path.py",
      "file": "testing/test_python_path.py",
      "line": 0
    },
    {
      "id": "testing/test_python_path.py:file_structure",
      "type": "function",
      "name": "file_structure",
      "file": "testing/test_python_path.py",
      "line": 12
    },
    {
      "id": "testing/test_python_path.py:test_one_dir",
      "type": "function",
      "name": "test_one_dir",
      "file": "testing/test_python_path.py",
      "line": 50
    },
    {
      "id": "testing/test_python_path.py:test_two_dirs",
      "type": "function",
      "name": "test_two_dirs",
      "file": "testing/test_python_path.py",
      "line": 57
    },
    {
      "id": "testing/test_python_path.py:test_module_not_found",
      "type": "function",
      "name": "test_module_not_found",
      "file": "testing/test_python_path.py",
      "line": 64
    },
    {
      "id": "testing/test_python_path.py:test_no_ini",
      "type": "function",
      "name": "test_no_ini",
      "file": "testing/test_python_path.py",
      "line": 74
    },
    {
      "id": "testing/test_python_path.py:test_clean_up",
      "type": "function",
      "name": "test_clean_up",
      "file": "testing/test_python_path.py",
      "line": 83
    },
    {
      "id": "testing/test_python_path.py:test_clean_up.Plugin",
      "type": "class",
      "name": "test_clean_up.Plugin",
      "file": "testing/test_python_path.py",
      "line": 96
    },
    {
      "id": "testing/test_python_path.py:test_clean_up.Plugin.pytest_unconfigure",
      "type": "function",
      "name": "test_clean_up.Plugin.pytest_unconfigure",
      "file": "testing/test_python_path.py",
      "line": 98
    },
    {
      "id": "testing/test_pastebin.py",
      "type": "file",
      "name": "test_pastebin.py",
      "file": "testing/test_pastebin.py",
      "line": 0
    },
    {
      "id": "testing/test_pastebin.py:TestPasteCapture",
      "type": "class",
      "name": "TestPasteCapture",
      "file": "testing/test_pastebin.py",
      "line": 11
    },
    {
      "id": "testing/test_pastebin.py:TestPasteCapture.pastebinlist",
      "type": "function",
      "name": "TestPasteCapture.pastebinlist",
      "file": "testing/test_pastebin.py",
      "line": 13
    },
    {
      "id": "testing/test_pastebin.py:TestPasteCapture.test_failed",
      "type": "function",
      "name": "TestPasteCapture.test_failed",
      "file": "testing/test_pastebin.py",
      "line": 19
    },
    {
      "id": "testing/test_pastebin.py:TestPasteCapture.test_all",
      "type": "function",
      "name": "TestPasteCapture.test_all",
      "file": "testing/test_pastebin.py",
      "line": 37
    },
    {
      "id": "testing/test_pastebin.py:TestPasteCapture.test_non_ascii_paste_text",
      "type": "function",
      "name": "TestPasteCapture.test_non_ascii_paste_text",
      "file": "testing/test_pastebin.py",
      "line": 65
    },
    {
      "id": "testing/test_pastebin.py:TestPaste",
      "type": "class",
      "name": "TestPaste",
      "file": "testing/test_pastebin.py",
      "line": 87
    },
    {
      "id": "testing/test_pastebin.py:TestPaste.pastebin",
      "type": "function",
      "name": "TestPaste.pastebin",
      "file": "testing/test_pastebin.py",
      "line": 89
    },
    {
      "id": "testing/test_pastebin.py:TestPaste.mocked_urlopen_fail",
      "type": "function",
      "name": "TestPaste.mocked_urlopen_fail",
      "file": "testing/test_pastebin.py",
      "line": 93
    },
    {
      "id": "testing/test_pastebin.py:TestPaste.mocked_urlopen_fail.mocked",
      "type": "function",
      "name": "TestPaste.mocked_urlopen_fail.mocked",
      "file": "testing/test_pastebin.py",
      "line": 100
    },
    {
      "id": "testing/test_pastebin.py:TestPaste.mocked_urlopen_invalid",
      "type": "function",
      "name": "TestPaste.mocked_urlopen_invalid",
      "file": "testing/test_pastebin.py",
      "line": 110
    },
    {
      "id": "testing/test_pastebin.py:TestPaste.mocked_urlopen_invalid.mocked",
      "type": "function",
      "name": "TestPaste.mocked_urlopen_invalid.mocked",
      "file": "testing/test_pastebin.py",
      "line": 116
    },
    {
      "id": "testing/test_pastebin.py:TestPaste.mocked_urlopen_invalid.mocked.DummyFile",
      "type": "class",
      "name": "TestPaste.mocked_urlopen_invalid.mocked.DummyFile",
      "file": "testing/test_pastebin.py",
      "line": 119
    },
    {
      "id": "testing/test_pastebin.py:TestPaste.mocked_urlopen_invalid.mocked.DummyFile.read",
      "type": "function",
      "name": "TestPaste.mocked_urlopen_invalid.mocked.DummyFile.read",
      "file": "testing/test_pastebin.py",
      "line": 120
    },
    {
      "id": "testing/test_pastebin.py:TestPaste.mocked_urlopen",
      "type": "function",
      "name": "TestPaste.mocked_urlopen",
      "file": "testing/test_pastebin.py",
      "line": 132
    },
    {
      "id": "testing/test_pastebin.py:TestPaste.mocked_urlopen.mocked",
      "type": "function",
      "name": "TestPaste.mocked_urlopen.mocked",
      "file": "testing/test_pastebin.py",
      "line": 137
    },
    {
      "id": "testing/test_pastebin.py:TestPaste.mocked_urlopen.mocked.DummyFile",
      "type": "class",
      "name": "TestPaste.mocked_urlopen.mocked.DummyFile",
      "file": "testing/test_pastebin.py",
      "line": 140
    },
    {
      "id": "testing/test_pastebin.py:TestPaste.mocked_urlopen.mocked.DummyFile.read",
      "type": "function",
      "name": "TestPaste.mocked_urlopen.mocked.DummyFile.read",
      "file": "testing/test_pastebin.py",
      "line": 141
    },
    {
      "id": "testing/test_pastebin.py:TestPaste.test_pastebin_invalid_url",
      "type": "function",
      "name": "TestPaste.test_pastebin_invalid_url",
      "file": "testing/test_pastebin.py",
      "line": 152
    },
    {
      "id": "testing/test_pastebin.py:TestPaste.test_pastebin_http_error",
      "type": "function",
      "name": "TestPaste.test_pastebin_http_error",
      "file": "testing/test_pastebin.py",
      "line": 160
    },
    {
      "id": "testing/test_pastebin.py:TestPaste.test_create_new_paste",
      "type": "function",
      "name": "TestPaste.test_create_new_paste",
      "file": "testing/test_pastebin.py",
      "line": 165
    },
    {
      "id": "testing/test_pastebin.py:TestPaste.test_create_new_paste_failure",
      "type": "function",
      "name": "TestPaste.test_create_new_paste_failure",
      "file": "testing/test_pastebin.py",
      "line": 177
    },
    {
      "id": "testing/test_pastebin.py:TestPaste.test_create_new_paste_failure.response",
      "type": "function",
      "name": "TestPaste.test_create_new_paste_failure.response",
      "file": "testing/test_pastebin.py",
      "line": 181
    },
    {
      "id": "testing/test_conftest.py",
      "type": "file",
      "name": "test_conftest.py",
      "file": "testing/test_conftest.py",
      "line": 0
    },
    {
      "id": "testing/test_conftest.py:ConftestWithSetinitial",
      "type": "function",
      "name": "ConftestWithSetinitial",
      "file": "testing/test_conftest.py",
      "line": 21
    },
    {
      "id": "testing/test_conftest.py:conftest_setinitial",
      "type": "function",
      "name": "conftest_setinitial",
      "file": "testing/test_conftest.py",
      "line": 27
    },
    {
      "id": "testing/test_conftest.py:TestConftestValueAccessGlobal",
      "type": "class",
      "name": "TestConftestValueAccessGlobal",
      "file": "testing/test_conftest.py",
      "line": 43
    },
    {
      "id": "testing/test_conftest.py:TestConftestValueAccessGlobal.basedir",
      "type": "function",
      "name": "TestConftestValueAccessGlobal.basedir",
      "file": "testing/test_conftest.py",
      "line": 45
    },
    {
      "id": "testing/test_conftest.py:TestConftestValueAccessGlobal.test_basic_init",
      "type": "function",
      "name": "TestConftestValueAccessGlobal.test_basic_init",
      "file": "testing/test_conftest.py",
      "line": 62
    },
    {
      "id": "testing/test_conftest.py:TestConftestValueAccessGlobal.test_immediate_initialiation_and_incremental_are_the_same",
      "type": "function",
      "name": "TestConftestValueAccessGlobal.test_immediate_initialiation_and_incremental_are_the_same",
      "file": "testing/test_conftest.py",
      "line": 72
    },
    {
      "id": "testing/test_conftest.py:TestConftestValueAccessGlobal.test_value_access_not_existing",
      "type": "function",
      "name": "TestConftestValueAccessGlobal.test_value_access_not_existing",
      "file": "testing/test_conftest.py",
      "line": 91
    },
    {
      "id": "testing/test_conftest.py:TestConftestValueAccessGlobal.test_value_access_by_path",
      "type": "function",
      "name": "TestConftestValueAccessGlobal.test_value_access_by_path",
      "file": "testing/test_conftest.py",
      "line": 98
    },
    {
      "id": "testing/test_conftest.py:TestConftestValueAccessGlobal.test_value_access_with_confmod",
      "type": "function",
      "name": "TestConftestValueAccessGlobal.test_value_access_with_confmod",
      "file": "testing/test_conftest.py",
      "line": 114
    },
    {
      "id": "testing/test_conftest.py:test_conftest_in_nonpkg_with_init",
      "type": "function",
      "name": "test_conftest_in_nonpkg_with_init",
      "file": "testing/test_conftest.py",
      "line": 128
    },
    {
      "id": "testing/test_conftest.py:test_doubledash_considered",
      "type": "function",
      "name": "test_doubledash_considered",
      "file": "testing/test_conftest.py",
      "line": 141
    },
    {
      "id": "testing/test_conftest.py:test_issue151_load_all_conftests",
      "type": "function",
      "name": "test_issue151_load_all_conftests",
      "file": "testing/test_conftest.py",
      "line": 152
    },
    {
      "id": "testing/test_conftest.py:test_conftest_global_import",
      "type": "function",
      "name": "test_conftest_global_import",
      "file": "testing/test_conftest.py",
      "line": 163
    },
    {
      "id": "testing/test_conftest.py:test_conftestcutdir",
      "type": "function",
      "name": "test_conftestcutdir",
      "file": "testing/test_conftest.py",
      "line": 190
    },
    {
      "id": "testing/test_conftest.py:test_conftestcutdir_inplace_considered",
      "type": "function",
      "name": "test_conftestcutdir_inplace_considered",
      "file": "testing/test_conftest.py",
      "line": 220
    },
    {
      "id": "testing/test_conftest.py:test_setinitial_conftest_subdirs",
      "type": "function",
      "name": "test_setinitial_conftest_subdirs",
      "file": "testing/test_conftest.py",
      "line": 233
    },
    {
      "id": "testing/test_conftest.py:test_conftest_confcutdir",
      "type": "function",
      "name": "test_conftest_confcutdir",
      "file": "testing/test_conftest.py",
      "line": 248
    },
    {
      "id": "testing/test_conftest.py:test_installed_conftest_is_picked_up",
      "type": "function",
      "name": "test_installed_conftest_is_picked_up",
      "file": "testing/test_conftest.py",
      "line": 265
    },
    {
      "id": "testing/test_conftest.py:test_conftest_symlink",
      "type": "function",
      "name": "test_conftest_symlink",
      "file": "testing/test_conftest.py",
      "line": 296
    },
    {
      "id": "testing/test_conftest.py:test_conftest_symlink_files",
      "type": "function",
      "name": "test_conftest_symlink_files",
      "file": "testing/test_conftest.py",
      "line": 341
    },
    {
      "id": "testing/test_conftest.py:test_conftest_badcase",
      "type": "function",
      "name": "test_conftest_badcase",
      "file": "testing/test_conftest.py",
      "line": 378
    },
    {
      "id": "testing/test_conftest.py:test_conftest_uppercase",
      "type": "function",
      "name": "test_conftest_uppercase",
      "file": "testing/test_conftest.py",
      "line": 389
    },
    {
      "id": "testing/test_conftest.py:test_no_conftest",
      "type": "function",
      "name": "test_no_conftest",
      "file": "testing/test_conftest.py",
      "line": 399
    },
    {
      "id": "testing/test_conftest.py:test_conftest_existing_junitxml",
      "type": "function",
      "name": "test_conftest_existing_junitxml",
      "file": "testing/test_conftest.py",
      "line": 408
    },
    {
      "id": "testing/test_conftest.py:test_conftest_import_order",
      "type": "function",
      "name": "test_conftest_import_order",
      "file": "testing/test_conftest.py",
      "line": 424
    },
    {
      "id": "testing/test_conftest.py:test_conftest_import_order.impct",
      "type": "function",
      "name": "test_conftest_import_order.impct",
      "file": "testing/test_conftest.py",
      "line": 430
    },
    {
      "id": "testing/test_conftest.py:test_fixture_dependency",
      "type": "function",
      "name": "test_fixture_dependency",
      "file": "testing/test_conftest.py",
      "line": 444
    },
    {
      "id": "testing/test_conftest.py:test_conftest_found_with_double_dash",
      "type": "function",
      "name": "test_conftest_found_with_double_dash",
      "file": "testing/test_conftest.py",
      "line": 491
    },
    {
      "id": "testing/test_conftest.py:TestConftestVisibility",
      "type": "class",
      "name": "TestConftestVisibility",
      "file": "testing/test_conftest.py",
      "line": 512
    },
    {
      "id": "testing/test_conftest.py:TestConftestVisibility._setup_tree",
      "type": "function",
      "name": "TestConftestVisibility._setup_tree",
      "file": "testing/test_conftest.py",
      "line": 513
    },
    {
      "id": "testing/test_conftest.py:TestConftestVisibility.test_parsefactories_relative_node_ids",
      "type": "function",
      "name": "TestConftestVisibility.test_parsefactories_relative_node_ids",
      "file": "testing/test_conftest.py",
      "line": 610
    },
    {
      "id": "testing/test_conftest.py:test_search_conftest_up_to_inifile",
      "type": "function",
      "name": "test_search_conftest_up_to_inifile",
      "file": "testing/test_conftest.py",
      "line": 632
    },
    {
      "id": "testing/test_conftest.py:test_issue1073_conftest_special_objects",
      "type": "function",
      "name": "test_issue1073_conftest_special_objects",
      "file": "testing/test_conftest.py",
      "line": 686
    },
    {
      "id": "testing/test_conftest.py:test_conftest_exception_handling",
      "type": "function",
      "name": "test_conftest_exception_handling",
      "file": "testing/test_conftest.py",
      "line": 706
    },
    {
      "id": "testing/test_conftest.py:test_hook_proxy",
      "type": "function",
      "name": "test_hook_proxy",
      "file": "testing/test_conftest.py",
      "line": 723
    },
    {
      "id": "testing/test_conftest.py:test_required_option_help",
      "type": "function",
      "name": "test_required_option_help",
      "file": "testing/test_conftest.py",
      "line": 745
    },
    {
      "id": "testing/test_nodes.py",
      "type": "file",
      "name": "test_nodes.py",
      "file": "testing/test_nodes.py",
      "line": 0
    },
    {
      "id": "testing/test_nodes.py:test_iterparentnodeids",
      "type": "function",
      "name": "test_iterparentnodeids",
      "file": "testing/test_nodes.py",
      "line": 34
    },
    {
      "id": "testing/test_nodes.py:test_node_from_parent_disallowed_arguments",
      "type": "function",
      "name": "test_node_from_parent_disallowed_arguments",
      "file": "testing/test_nodes.py",
      "line": 39
    },
    {
      "id": "testing/test_nodes.py:test_node_direct_construction_deprecated",
      "type": "function",
      "name": "test_node_direct_construction_deprecated",
      "file": "testing/test_nodes.py",
      "line": 46
    },
    {
      "id": "testing/test_nodes.py:test_subclassing_both_item_and_collector_deprecated",
      "type": "function",
      "name": "test_subclassing_both_item_and_collector_deprecated",
      "file": "testing/test_nodes.py",
      "line": 59
    },
    {
      "id": "testing/test_nodes.py:test_subclassing_both_item_and_collector_deprecated.SoWrong",
      "type": "class",
      "name": "test_subclassing_both_item_and_collector_deprecated.SoWrong",
      "file": "testing/test_nodes.py",
      "line": 71
    },
    {
      "id": "testing/test_nodes.py:test_node_warn_is_no_longer_only_pytest_warnings",
      "type": "function",
      "name": "test_node_warn_is_no_longer_only_pytest_warnings",
      "file": "testing/test_nodes.py",
      "line": 93
    },
    {
      "id": "testing/test_nodes.py:test_node_warning_enforces_warning_types",
      "type": "function",
      "name": "test_node_warning_enforces_warning_types",
      "file": "testing/test_nodes.py",
      "line": 106
    },
    {
      "id": "testing/test_nodes.py:test__check_initialpaths_for_relpath",
      "type": "function",
      "name": "test__check_initialpaths_for_relpath",
      "file": "testing/test_nodes.py",
      "line": 119
    },
    {
      "id": "testing/test_nodes.py:test__check_initialpaths_for_relpath.FakeSession1",
      "type": "class",
      "name": "test__check_initialpaths_for_relpath.FakeSession1",
      "file": "testing/test_nodes.py",
      "line": 123
    },
    {
      "id": "testing/test_nodes.py:test__check_initialpaths_for_relpath.FakeSession2",
      "type": "class",
      "name": "test__check_initialpaths_for_relpath.FakeSession2",
      "file": "testing/test_nodes.py",
      "line": 132
    },
    {
      "id": "testing/test_nodes.py:test_failure_with_changed_cwd",
      "type": "function",
      "name": "test_failure_with_changed_cwd",
      "file": "testing/test_nodes.py",
      "line": 143
    },
    {
      "id": "testing/test_unittest.py",
      "type": "file",
      "name": "test_unittest.py",
      "file": "testing/test_unittest.py",
      "line": 0
    },
    {
      "id": "testing/test_unittest.py:test_simple_unittest",
      "type": "function",
      "name": "test_simple_unittest",
      "file": "testing/test_unittest.py",
      "line": 11
    },
    {
      "id": "testing/test_unittest.py:test_runTest_method",
      "type": "function",
      "name": "test_runTest_method",
      "file": "testing/test_unittest.py",
      "line": 27
    },
    {
      "id": "testing/test_unittest.py:test_isclasscheck_issue53",
      "type": "function",
      "name": "test_isclasscheck_issue53",
      "file": "testing/test_unittest.py",
      "line": 51
    },
    {
      "id": "testing/test_unittest.py:test_setup",
      "type": "function",
      "name": "test_setup",
      "file": "testing/test_unittest.py",
      "line": 65
    },
    {
      "id": "testing/test_unittest.py:test_setUpModule",
      "type": "function",
      "name": "test_setUpModule",
      "file": "testing/test_unittest.py",
      "line": 88
    },
    {
      "id": "testing/test_unittest.py:test_setUpModule_failing_no_teardown",
      "type": "function",
      "name": "test_setUpModule_failing_no_teardown",
      "file": "testing/test_unittest.py",
      "line": 110
    },
    {
      "id": "testing/test_unittest.py:test_new_instances",
      "type": "function",
      "name": "test_new_instances",
      "file": "testing/test_unittest.py",
      "line": 131
    },
    {
      "id": "testing/test_unittest.py:test_function_item_obj_is_instance",
      "type": "function",
      "name": "test_function_item_obj_is_instance",
      "file": "testing/test_unittest.py",
      "line": 146
    },
    {
      "id": "testing/test_unittest.py:test_teardown",
      "type": "function",
      "name": "test_teardown",
      "file": "testing/test_unittest.py",
      "line": 169
    },
    {
      "id": "testing/test_unittest.py:test_teardown_issue1649",
      "type": "function",
      "name": "test_teardown_issue1649",
      "file": "testing/test_unittest.py",
      "line": 191
    },
    {
      "id": "testing/test_unittest.py:test_unittest_skip_issue148",
      "type": "function",
      "name": "test_unittest_skip_issue148",
      "file": "testing/test_unittest.py",
      "line": 216
    },
    {
      "id": "testing/test_unittest.py:test_method_and_teardown_failing_reporting",
      "type": "function",
      "name": "test_method_and_teardown_failing_reporting",
      "file": "testing/test_unittest.py",
      "line": 237
    },
    {
      "id": "testing/test_unittest.py:test_setup_failure_is_shown",
      "type": "function",
      "name": "test_setup_failure_is_shown",
      "file": "testing/test_unittest.py",
      "line": 261
    },
    {
      "id": "testing/test_unittest.py:test_setup_setUpClass",
      "type": "function",
      "name": "test_setup_setUpClass",
      "file": "testing/test_unittest.py",
      "line": 280
    },
    {
      "id": "testing/test_unittest.py:test_fixtures_setup_setUpClass_issue8394",
      "type": "function",
      "name": "test_fixtures_setup_setUpClass_issue8394",
      "file": "testing/test_unittest.py",
      "line": 305
    },
    {
      "id": "testing/test_unittest.py:test_setup_class",
      "type": "function",
      "name": "test_setup_class",
      "file": "testing/test_unittest.py",
      "line": 329
    },
    {
      "id": "testing/test_unittest.py:test_testcase_adderrorandfailure_defers",
      "type": "function",
      "name": "test_testcase_adderrorandfailure_defers",
      "file": "testing/test_unittest.py",
      "line": 353
    },
    {
      "id": "testing/test_unittest.py:test_testcase_custom_exception_info",
      "type": "function",
      "name": "test_testcase_custom_exception_info",
      "file": "testing/test_unittest.py",
      "line": 377
    },
    {
      "id": "testing/test_unittest.py:test_testcase_totally_incompatible_exception_info",
      "type": "function",
      "name": "test_testcase_totally_incompatible_exception_info",
      "file": "testing/test_unittest.py",
      "line": 421
    },
    {
      "id": "testing/test_unittest.py:test_module_level_pytestmark",
      "type": "function",
      "name": "test_module_level_pytestmark",
      "file": "testing/test_unittest.py",
      "line": 439
    },
    {
      "id": "testing/test_unittest.py:TestTrialUnittest",
      "type": "class",
      "name": "TestTrialUnittest",
      "file": "testing/test_unittest.py",
      "line": 454
    },
    {
      "id": "testing/test_unittest.py:TestTrialUnittest.setup_class",
      "type": "function",
      "name": "TestTrialUnittest.setup_class",
      "file": "testing/test_unittest.py",
      "line": 455
    },
    {
      "id": "testing/test_unittest.py:TestTrialUnittest.test_trial_testcase_runtest_not_collected",
      "type": "function",
      "name": "TestTrialUnittest.test_trial_testcase_runtest_not_collected",
      "file": "testing/test_unittest.py",
      "line": 461
    },
    {
      "id": "testing/test_unittest.py:TestTrialUnittest.test_trial_exceptions_with_skips",
      "type": "function",
      "name": "TestTrialUnittest.test_trial_exceptions_with_skips",
      "file": "testing/test_unittest.py",
      "line": 485
    },
    {
      "id": "testing/test_unittest.py:TestTrialUnittest.test_trial_error",
      "type": "function",
      "name": "TestTrialUnittest.test_trial_error",
      "file": "testing/test_unittest.py",
      "line": 535
    },
    {
      "id": "testing/test_unittest.py:TestTrialUnittest.test_trial_pdb",
      "type": "function",
      "name": "TestTrialUnittest.test_trial_pdb",
      "file": "testing/test_unittest.py",
      "line": 599
    },
    {
      "id": "testing/test_unittest.py:TestTrialUnittest.test_trial_testcase_skip_property",
      "type": "function",
      "name": "TestTrialUnittest.test_trial_testcase_skip_property",
      "file": "testing/test_unittest.py",
      "line": 613
    },
    {
      "id": "testing/test_unittest.py:TestTrialUnittest.test_trial_testfunction_skip_property",
      "type": "function",
      "name": "TestTrialUnittest.test_trial_testfunction_skip_property",
      "file": "testing/test_unittest.py",
      "line": 626
    },
    {
      "id": "testing/test_unittest.py:TestTrialUnittest.test_trial_testcase_todo_property",
      "type": "function",
      "name": "TestTrialUnittest.test_trial_testcase_todo_property",
      "file": "testing/test_unittest.py",
      "line": 639
    },
    {
      "id": "testing/test_unittest.py:TestTrialUnittest.test_trial_testfunction_todo_property",
      "type": "function",
      "name": "TestTrialUnittest.test_trial_testfunction_todo_property",
      "file": "testing/test_unittest.py",
      "line": 652
    },
    {
      "id": "testing/test_unittest.py:test_djangolike_testcase",
      "type": "function",
      "name": "test_djangolike_testcase",
      "file": "testing/test_unittest.py",
      "line": 668
    },
    {
      "id": "testing/test_unittest.py:test_unittest_not_shown_in_traceback",
      "type": "function",
      "name": "test_unittest_not_shown_in_traceback",
      "file": "testing/test_unittest.py",
      "line": 726
    },
    {
      "id": "testing/test_unittest.py:test_unorderable_types",
      "type": "function",
      "name": "test_unorderable_types",
      "file": "testing/test_unittest.py",
      "line": 740
    },
    {
      "id": "testing/test_unittest.py:test_unittest_typerror_traceback",
      "type": "function",
      "name": "test_unittest_typerror_traceback",
      "file": "testing/test_unittest.py",
      "line": 760
    },
    {
      "id": "testing/test_unittest.py:test_unittest_expected_failure_for_failing_test_is_xfail",
      "type": "function",
      "name": "test_unittest_expected_failure_for_failing_test_is_xfail",
      "file": "testing/test_unittest.py",
      "line": 775
    },
    {
      "id": "testing/test_unittest.py:test_unittest_expected_failure_for_passing_test_is_fail",
      "type": "function",
      "name": "test_unittest_expected_failure_for_passing_test_is_fail",
      "file": "testing/test_unittest.py",
      "line": 801
    },
    {
      "id": "testing/test_unittest.py:test_unittest_setup_interaction",
      "type": "function",
      "name": "test_unittest_setup_interaction",
      "file": "testing/test_unittest.py",
      "line": 834
    },
    {
      "id": "testing/test_unittest.py:test_non_unittest_no_setupclass_support",
      "type": "function",
      "name": "test_non_unittest_no_setupclass_support",
      "file": "testing/test_unittest.py",
      "line": 866
    },
    {
      "id": "testing/test_unittest.py:test_no_teardown_if_setupclass_failed",
      "type": "function",
      "name": "test_no_teardown_if_setupclass_failed",
      "file": "testing/test_unittest.py",
      "line": 892
    },
    {
      "id": "testing/test_unittest.py:test_cleanup_functions",
      "type": "function",
      "name": "test_cleanup_functions",
      "file": "testing/test_unittest.py",
      "line": 920
    },
    {
      "id": "testing/test_unittest.py:test_issue333_result_clearing",
      "type": "function",
      "name": "test_issue333_result_clearing",
      "file": "testing/test_unittest.py",
      "line": 951
    },
    {
      "id": "testing/test_unittest.py:test_unittest_raise_skip_issue748",
      "type": "function",
      "name": "test_unittest_raise_skip_issue748",
      "file": "testing/test_unittest.py",
      "line": 974
    },
    {
      "id": "testing/test_unittest.py:test_unittest_skip_issue1169",
      "type": "function",
      "name": "test_unittest_skip_issue1169",
      "file": "testing/test_unittest.py",
      "line": 993
    },
    {
      "id": "testing/test_unittest.py:test_class_method_containing_test_issue1558",
      "type": "function",
      "name": "test_class_method_containing_test_issue1558",
      "file": "testing/test_unittest.py",
      "line": 1013
    },
    {
      "id": "testing/test_unittest.py:test_usefixtures_marker_on_unittest",
      "type": "function",
      "name": "test_usefixtures_marker_on_unittest",
      "file": "testing/test_unittest.py",
      "line": 1031
    },
    {
      "id": "testing/test_unittest.py:test_testcase_handles_init_exceptions",
      "type": "function",
      "name": "test_testcase_handles_init_exceptions",
      "file": "testing/test_unittest.py",
      "line": 1093
    },
    {
      "id": "testing/test_unittest.py:test_error_message_with_parametrized_fixtures",
      "type": "function",
      "name": "test_error_message_with_parametrized_fixtures",
      "file": "testing/test_unittest.py",
      "line": 1114
    },
    {
      "id": "testing/test_unittest.py:test_setup_inheritance_skipping",
      "type": "function",
      "name": "test_setup_inheritance_skipping",
      "file": "testing/test_unittest.py",
      "line": 1134
    },
    {
      "id": "testing/test_unittest.py:test_BdbQuit",
      "type": "function",
      "name": "test_BdbQuit",
      "file": "testing/test_unittest.py",
      "line": 1143
    },
    {
      "id": "testing/test_unittest.py:test_exit_outcome",
      "type": "function",
      "name": "test_exit_outcome",
      "file": "testing/test_unittest.py",
      "line": 1161
    },
    {
      "id": "testing/test_unittest.py:test_trace",
      "type": "function",
      "name": "test_trace",
      "file": "testing/test_unittest.py",
      "line": 1179
    },
    {
      "id": "testing/test_unittest.py:test_trace.check_call",
      "type": "function",
      "name": "test_trace.check_call",
      "file": "testing/test_unittest.py",
      "line": 1182
    },
    {
      "id": "testing/test_unittest.py:test_trace.check_call._pdb",
      "type": "class",
      "name": "test_trace.check_call._pdb",
      "file": "testing/test_unittest.py",
      "line": 1186
    },
    {
      "id": "testing/test_unittest.py:test_trace.check_call._pdb.runcall",
      "type": "function",
      "name": "test_trace.check_call._pdb.runcall",
      "file": "testing/test_unittest.py",
      "line": 1187
    },
    {
      "id": "testing/test_unittest.py:test_pdb_teardown_called",
      "type": "function",
      "name": "test_pdb_teardown_called",
      "file": "testing/test_unittest.py",
      "line": 1208
    },
    {
      "id": "testing/test_unittest.py:test_pdb_teardown_skipped_for_functions",
      "type": "function",
      "name": "test_pdb_teardown_skipped_for_functions",
      "file": "testing/test_unittest.py",
      "line": 1244
    },
    {
      "id": "testing/test_unittest.py:test_pdb_teardown_skipped_for_classes",
      "type": "function",
      "name": "test_pdb_teardown_skipped_for_classes",
      "file": "testing/test_unittest.py",
      "line": 1281
    },
    {
      "id": "testing/test_unittest.py:test_async_support",
      "type": "function",
      "name": "test_async_support",
      "file": "testing/test_unittest.py",
      "line": 1317
    },
    {
      "id": "testing/test_unittest.py:test_asynctest_support",
      "type": "function",
      "name": "test_asynctest_support",
      "file": "testing/test_unittest.py",
      "line": 1325
    },
    {
      "id": "testing/test_unittest.py:test_plain_unittest_does_not_support_async",
      "type": "function",
      "name": "test_plain_unittest_does_not_support_async",
      "file": "testing/test_unittest.py",
      "line": 1334
    },
    {
      "id": "testing/test_unittest.py:test_do_class_cleanups_on_success",
      "type": "function",
      "name": "test_do_class_cleanups_on_success",
      "file": "testing/test_unittest.py",
      "line": 1357
    },
    {
      "id": "testing/test_unittest.py:test_do_class_cleanups_on_setupclass_failure",
      "type": "function",
      "name": "test_do_class_cleanups_on_setupclass_failure",
      "file": "testing/test_unittest.py",
      "line": 1382
    },
    {
      "id": "testing/test_unittest.py:test_do_class_cleanups_on_teardownclass_failure",
      "type": "function",
      "name": "test_do_class_cleanups_on_teardownclass_failure",
      "file": "testing/test_unittest.py",
      "line": 1406
    },
    {
      "id": "testing/test_unittest.py:test_do_cleanups_on_success",
      "type": "function",
      "name": "test_do_cleanups_on_success",
      "file": "testing/test_unittest.py",
      "line": 1433
    },
    {
      "id": "testing/test_unittest.py:test_do_cleanups_on_setup_failure",
      "type": "function",
      "name": "test_do_cleanups_on_setup_failure",
      "file": "testing/test_unittest.py",
      "line": 1457
    },
    {
      "id": "testing/test_unittest.py:test_do_cleanups_on_teardown_failure",
      "type": "function",
      "name": "test_do_cleanups_on_teardown_failure",
      "file": "testing/test_unittest.py",
      "line": 1482
    },
    {
      "id": "testing/test_unittest.py:test_traceback_pruning",
      "type": "function",
      "name": "test_traceback_pruning",
      "file": "testing/test_unittest.py",
      "line": 1508
    },
    {
      "id": "testing/test_unittest.py:test_raising_unittest_skiptest_during_collection",
      "type": "function",
      "name": "test_raising_unittest_skiptest_during_collection",
      "file": "testing/test_unittest.py",
      "line": 1534
    },
    {
      "id": "testing/test_scope.py",
      "type": "file",
      "name": "test_scope.py",
      "file": "testing/test_scope.py",
      "line": 0
    },
    {
      "id": "testing/test_scope.py:test_ordering",
      "type": "function",
      "name": "test_ordering",
      "file": "testing/test_scope.py",
      "line": 7
    },
    {
      "id": "testing/test_scope.py:test_next_lower",
      "type": "function",
      "name": "test_next_lower",
      "file": "testing/test_scope.py",
      "line": 14
    },
    {
      "id": "testing/test_scope.py:test_next_higher",
      "type": "function",
      "name": "test_next_higher",
      "file": "testing/test_scope.py",
      "line": 24
    },
    {
      "id": "testing/test_scope.py:test_from_user",
      "type": "function",
      "name": "test_from_user",
      "file": "testing/test_scope.py",
      "line": 34
    },
    {
      "id": "testing/test_setupplan.py",
      "type": "file",
      "name": "test_setupplan.py",
      "file": "testing/test_setupplan.py",
      "line": 0
    },
    {
      "id": "testing/test_setupplan.py:test_show_fixtures_and_test",
      "type": "function",
      "name": "test_show_fixtures_and_test",
      "file": "testing/test_setupplan.py",
      "line": 4
    },
    {
      "id": "testing/test_setupplan.py:test_show_multi_test_fixture_setup_and_teardown_correctly_simple",
      "type": "function",
      "name": "test_show_multi_test_fixture_setup_and_teardown_correctly_simple",
      "file": "testing/test_setupplan.py",
      "line": 27
    },
    {
      "id": "testing/test_setupplan.py:test_show_multi_test_fixture_setup_and_teardown_same_as_setup_show",
      "type": "function",
      "name": "test_show_multi_test_fixture_setup_and_teardown_same_as_setup_show",
      "file": "testing/test_setupplan.py",
      "line": 76
    },
    {
      "id": "testing/typing_checks.py",
      "type": "file",
      "name": "typing_checks.py",
      "file": "testing/typing_checks.py",
      "line": 0
    },
    {
      "id": "testing/typing_checks.py:check_mark_xfail_raises",
      "type": "function",
      "name": "check_mark_xfail_raises",
      "file": "testing/typing_checks.py",
      "line": 17
    },
    {
      "id": "testing/typing_checks.py:check_fixture_ids_callable",
      "type": "function",
      "name": "check_fixture_ids_callable",
      "file": "testing/typing_checks.py",
      "line": 23
    },
    {
      "id": "testing/typing_checks.py:check_parametrize_ids_callable",
      "type": "function",
      "name": "check_parametrize_ids_callable",
      "file": "testing/typing_checks.py",
      "line": 29
    },
    {
      "id": "testing/typing_checks.py:check_monkeypatch_typeddict",
      "type": "function",
      "name": "check_monkeypatch_typeddict",
      "file": "testing/typing_checks.py",
      "line": 34
    },
    {
      "id": "testing/typing_checks.py:check_monkeypatch_typeddict.Foo",
      "type": "class",
      "name": "check_monkeypatch_typeddict.Foo",
      "file": "testing/typing_checks.py",
      "line": 37
    },
    {
      "id": "testing/typing_checks.py:check_raises_is_a_context_manager",
      "type": "function",
      "name": "check_raises_is_a_context_manager",
      "file": "testing/typing_checks.py",
      "line": 46
    },
    {
      "id": "testing/test_collection.py",
      "type": "file",
      "name": "test_collection.py",
      "file": "testing/test_collection.py",
      "line": 0
    },
    {
      "id": "testing/test_collection.py:ensure_file",
      "type": "function",
      "name": "ensure_file",
      "file": "testing/test_collection.py",
      "line": 21
    },
    {
      "id": "testing/test_collection.py:TestCollector",
      "type": "class",
      "name": "TestCollector",
      "file": "testing/test_collection.py",
      "line": 28
    },
    {
      "id": "testing/test_collection.py:TestCollector.test_collect_versus_item",
      "type": "function",
      "name": "TestCollector.test_collect_versus_item",
      "file": "testing/test_collection.py",
      "line": 29
    },
    {
      "id": "testing/test_collection.py:TestCollector.test_check_equality",
      "type": "function",
      "name": "TestCollector.test_check_equality",
      "file": "testing/test_collection.py",
      "line": 36
    },
    {
      "id": "testing/test_collection.py:TestCollector.test_getparent_and_accessors",
      "type": "function",
      "name": "TestCollector.test_getparent_and_accessors",
      "file": "testing/test_collection.py",
      "line": 67
    },
    {
      "id": "testing/test_collection.py:TestCollector.test_getcustomfile_roundtrip",
      "type": "function",
      "name": "TestCollector.test_getcustomfile_roundtrip",
      "file": "testing/test_collection.py",
      "line": 96
    },
    {
      "id": "testing/test_collection.py:TestCollector.test_can_skip_class_with_test_attr",
      "type": "function",
      "name": "TestCollector.test_can_skip_class_with_test_attr",
      "file": "testing/test_collection.py",
      "line": 115
    },
    {
      "id": "testing/test_collection.py:TestCollectFS",
      "type": "class",
      "name": "TestCollectFS",
      "file": "testing/test_collection.py",
      "line": 131
    },
    {
      "id": "testing/test_collection.py:TestCollectFS.test_ignored_certain_directories",
      "type": "function",
      "name": "TestCollectFS.test_ignored_certain_directories",
      "file": "testing/test_collection.py",
      "line": 132
    },
    {
      "id": "testing/test_collection.py:TestCollectFS.test_ignored_virtualenvs",
      "type": "function",
      "name": "TestCollectFS.test_ignored_virtualenvs",
      "file": "testing/test_collection.py",
      "line": 161
    },
    {
      "id": "testing/test_collection.py:TestCollectFS.test_ignored_virtualenvs_norecursedirs_precedence",
      "type": "function",
      "name": "TestCollectFS.test_ignored_virtualenvs_norecursedirs_precedence",
      "file": "testing/test_collection.py",
      "line": 188
    },
    {
      "id": "testing/test_collection.py:TestCollectFS.test__in_venv",
      "type": "function",
      "name": "TestCollectFS.test__in_venv",
      "file": "testing/test_collection.py",
      "line": 213
    },
    {
      "id": "testing/test_collection.py:TestCollectFS.test_custom_norecursedirs",
      "type": "function",
      "name": "TestCollectFS.test_custom_norecursedirs",
      "file": "testing/test_collection.py",
      "line": 225
    },
    {
      "id": "testing/test_collection.py:TestCollectFS.test_testpaths_ini",
      "type": "function",
      "name": "TestCollectFS.test_testpaths_ini",
      "file": "testing/test_collection.py",
      "line": 247
    },
    {
      "id": "testing/test_collection.py:TestCollectPluginHookRelay",
      "type": "class",
      "name": "TestCollectPluginHookRelay",
      "file": "testing/test_collection.py",
      "line": 284
    },
    {
      "id": "testing/test_collection.py:TestCollectPluginHookRelay.test_pytest_collect_file",
      "type": "function",
      "name": "TestCollectPluginHookRelay.test_pytest_collect_file",
      "file": "testing/test_collection.py",
      "line": 285
    },
    {
      "id": "testing/test_collection.py:TestCollectPluginHookRelay.test_pytest_collect_file.Plugin",
      "type": "class",
      "name": "TestCollectPluginHookRelay.test_pytest_collect_file.Plugin",
      "file": "testing/test_collection.py",
      "line": 288
    },
    {
      "id": "testing/test_collection.py:TestCollectPluginHookRelay.test_pytest_collect_file.Plugin.pytest_collect_file",
      "type": "function",
      "name": "TestCollectPluginHookRelay.test_pytest_collect_file.Plugin.pytest_collect_file",
      "file": "testing/test_collection.py",
      "line": 289
    },
    {
      "id": "testing/test_collection.py:TestPrunetraceback",
      "type": "class",
      "name": "TestPrunetraceback",
      "file": "testing/test_collection.py",
      "line": 300
    },
    {
      "id": "testing/test_collection.py:TestPrunetraceback.test_custom_repr_failure",
      "type": "function",
      "name": "TestPrunetraceback.test_custom_repr_failure",
      "file": "testing/test_collection.py",
      "line": 301
    },
    {
      "id": "testing/test_collection.py:TestPrunetraceback.test_collect_report_postprocessing",
      "type": "function",
      "name": "TestPrunetraceback.test_collect_report_postprocessing",
      "file": "testing/test_collection.py",
      "line": 328
    },
    {
      "id": "testing/test_collection.py:TestCustomConftests",
      "type": "class",
      "name": "TestCustomConftests",
      "file": "testing/test_collection.py",
      "line": 349
    },
    {
      "id": "testing/test_collection.py:TestCustomConftests.test_ignore_collect_path",
      "type": "function",
      "name": "TestCustomConftests.test_ignore_collect_path",
      "file": "testing/test_collection.py",
      "line": 350
    },
    {
      "id": "testing/test_collection.py:TestCustomConftests.test_ignore_collect_not_called_on_argument",
      "type": "function",
      "name": "TestCustomConftests.test_ignore_collect_not_called_on_argument",
      "file": "testing/test_collection.py",
      "line": 366
    },
    {
      "id": "testing/test_collection.py:TestCustomConftests.test_collectignore_exclude_on_option",
      "type": "function",
      "name": "TestCustomConftests.test_collectignore_exclude_on_option",
      "file": "testing/test_collection.py",
      "line": 381
    },
    {
      "id": "testing/test_collection.py:TestCustomConftests.test_collectignoreglob_exclude_on_option",
      "type": "function",
      "name": "TestCustomConftests.test_collectignoreglob_exclude_on_option",
      "file": "testing/test_collection.py",
      "line": 411
    },
    {
      "id": "testing/test_collection.py:TestCustomConftests.test_pytest_fs_collect_hooks_are_seen",
      "type": "function",
      "name": "TestCustomConftests.test_pytest_fs_collect_hooks_are_seen",
      "file": "testing/test_collection.py",
      "line": 431
    },
    {
      "id": "testing/test_collection.py:TestCustomConftests.test_pytest_collect_file_from_sister_dir",
      "type": "function",
      "name": "TestCustomConftests.test_pytest_collect_file_from_sister_dir",
      "file": "testing/test_collection.py",
      "line": 447
    },
    {
      "id": "testing/test_collection.py:TestSession",
      "type": "class",
      "name": "TestSession",
      "file": "testing/test_collection.py",
      "line": 479
    },
    {
      "id": "testing/test_collection.py:TestSession.test_collect_topdir",
      "type": "function",
      "name": "TestSession.test_collect_topdir",
      "file": "testing/test_collection.py",
      "line": 480
    },
    {
      "id": "testing/test_collection.py:TestSession.get_reported_items",
      "type": "function",
      "name": "TestSession.get_reported_items",
      "file": "testing/test_collection.py",
      "line": 495
    },
    {
      "id": "testing/test_collection.py:TestSession.test_collect_protocol_single_function",
      "type": "function",
      "name": "TestSession.test_collect_protocol_single_function",
      "file": "testing/test_collection.py",
      "line": 505
    },
    {
      "id": "testing/test_collection.py:TestSession.test_collect_protocol_method",
      "type": "function",
      "name": "TestSession.test_collect_protocol_method",
      "file": "testing/test_collection.py",
      "line": 528
    },
    {
      "id": "testing/test_collection.py:TestSession.test_collect_custom_nodes_multi_id",
      "type": "function",
      "name": "TestSession.test_collect_custom_nodes_multi_id",
      "file": "testing/test_collection.py",
      "line": 546
    },
    {
      "id": "testing/test_collection.py:TestSession.test_collect_subdir_event_ordering",
      "type": "function",
      "name": "TestSession.test_collect_subdir_event_ordering",
      "file": "testing/test_collection.py",
      "line": 582
    },
    {
      "id": "testing/test_collection.py:TestSession.test_collect_two_commandline_args",
      "type": "function",
      "name": "TestSession.test_collect_two_commandline_args",
      "file": "testing/test_collection.py",
      "line": 599
    },
    {
      "id": "testing/test_collection.py:TestSession.test_serialization_byid",
      "type": "function",
      "name": "TestSession.test_serialization_byid",
      "file": "testing/test_collection.py",
      "line": 624
    },
    {
      "id": "testing/test_collection.py:TestSession.test_find_byid_without_instance_parents",
      "type": "function",
      "name": "TestSession.test_find_byid_without_instance_parents",
      "file": "testing/test_collection.py",
      "line": 634
    },
    {
      "id": "testing/test_collection.py:Test_getinitialnodes",
      "type": "class",
      "name": "Test_getinitialnodes",
      "file": "testing/test_collection.py",
      "line": 651
    },
    {
      "id": "testing/test_collection.py:Test_getinitialnodes.test_global_file",
      "type": "function",
      "name": "Test_getinitialnodes.test_global_file",
      "file": "testing/test_collection.py",
      "line": 652
    },
    {
      "id": "testing/test_collection.py:Test_getinitialnodes.test_pkgfile",
      "type": "function",
      "name": "Test_getinitialnodes.test_pkgfile",
      "file": "testing/test_collection.py",
      "line": 664
    },
    {
      "id": "testing/test_collection.py:Test_genitems",
      "type": "class",
      "name": "Test_genitems",
      "file": "testing/test_collection.py",
      "line": 688
    },
    {
      "id": "testing/test_collection.py:Test_genitems.test_check_collect_hashes",
      "type": "function",
      "name": "Test_genitems.test_check_collect_hashes",
      "file": "testing/test_collection.py",
      "line": 689
    },
    {
      "id": "testing/test_collection.py:Test_genitems.test_example_items1",
      "type": "function",
      "name": "Test_genitems.test_example_items1",
      "file": "testing/test_collection.py",
      "line": 708
    },
    {
      "id": "testing/test_collection.py:Test_genitems.test_classmethod_is_discovered",
      "type": "function",
      "name": "Test_genitems.test_classmethod_is_discovered",
      "file": "testing/test_collection.py",
      "line": 744
    },
    {
      "id": "testing/test_collection.py:Test_genitems.test_class_and_functions_discovery_using_glob",
      "type": "function",
      "name": "Test_genitems.test_class_and_functions_discovery_using_glob",
      "file": "testing/test_collection.py",
      "line": 758
    },
    {
      "id": "testing/test_collection.py:test_matchnodes_two_collections_same_file",
      "type": "function",
      "name": "test_matchnodes_two_collections_same_file",
      "file": "testing/test_collection.py",
      "line": 784
    },
    {
      "id": "testing/test_collection.py:TestNodeKeywords",
      "type": "class",
      "name": "TestNodeKeywords",
      "file": "testing/test_collection.py",
      "line": 825
    },
    {
      "id": "testing/test_collection.py:TestNodeKeywords.test_no_under",
      "type": "function",
      "name": "TestNodeKeywords.test_no_under",
      "file": "testing/test_collection.py",
      "line": 826
    },
    {
      "id": "testing/test_collection.py:TestNodeKeywords.test_issue345",
      "type": "function",
      "name": "TestNodeKeywords.test_issue345",
      "file": "testing/test_collection.py",
      "line": 839
    },
    {
      "id": "testing/test_collection.py:TestNodeKeywords.test_keyword_matching_is_case_insensitive_by_default",
      "type": "function",
      "name": "TestNodeKeywords.test_keyword_matching_is_case_insensitive_by_default",
      "file": "testing/test_collection.py",
      "line": 852
    },
    {
      "id": "testing/test_collection.py:TestNodeKeywords.test_duplicates_handled_correctly",
      "type": "function",
      "name": "TestNodeKeywords.test_duplicates_handled_correctly",
      "file": "testing/test_collection.py",
      "line": 891
    },
    {
      "id": "testing/test_collection.py:TestNodeKeywords.test_unpacked_marks_added_to_keywords",
      "type": "function",
      "name": "TestNodeKeywords.test_unpacked_marks_added_to_keywords",
      "file": "testing/test_collection.py",
      "line": 909
    },
    {
      "id": "testing/test_collection.py:test_exit_on_collection_error",
      "type": "function",
      "name": "test_exit_on_collection_error",
      "file": "testing/test_collection.py",
      "line": 962
    },
    {
      "id": "testing/test_collection.py:test_exit_on_collection_with_maxfail_smaller_than_n_errors",
      "type": "function",
      "name": "test_exit_on_collection_with_maxfail_smaller_than_n_errors",
      "file": "testing/test_collection.py",
      "line": 980
    },
    {
      "id": "testing/test_collection.py:test_exit_on_collection_with_maxfail_bigger_than_n_errors",
      "type": "function",
      "name": "test_exit_on_collection_with_maxfail_bigger_than_n_errors",
      "file": "testing/test_collection.py",
      "line": 1003
    },
    {
      "id": "testing/test_collection.py:test_continue_on_collection_errors",
      "type": "function",
      "name": "test_continue_on_collection_errors",
      "file": "testing/test_collection.py",
      "line": 1027
    },
    {
      "id": "testing/test_collection.py:test_continue_on_collection_errors_maxfail",
      "type": "function",
      "name": "test_continue_on_collection_errors_maxfail",
      "file": "testing/test_collection.py",
      "line": 1042
    },
    {
      "id": "testing/test_collection.py:test_fixture_scope_sibling_conftests",
      "type": "function",
      "name": "test_fixture_scope_sibling_conftests",
      "file": "testing/test_collection.py",
      "line": 1058
    },
    {
      "id": "testing/test_collection.py:test_collect_init_tests",
      "type": "function",
      "name": "test_collect_init_tests",
      "file": "testing/test_collection.py",
      "line": 1094
    },
    {
      "id": "testing/test_collection.py:test_collect_invalid_signature_message",
      "type": "function",
      "name": "test_collect_invalid_signature_message",
      "file": "testing/test_collection.py",
      "line": 1155
    },
    {
      "id": "testing/test_collection.py:test_collect_handles_raising_on_dunder_class",
      "type": "function",
      "name": "test_collect_handles_raising_on_dunder_class",
      "file": "testing/test_collection.py",
      "line": 1175
    },
    {
      "id": "testing/test_collection.py:test_collect_with_chdir_during_import",
      "type": "function",
      "name": "test_collect_with_chdir_during_import",
      "file": "testing/test_collection.py",
      "line": 1202
    },
    {
      "id": "testing/test_collection.py:test_collect_pyargs_with_testpaths",
      "type": "function",
      "name": "test_collect_pyargs_with_testpaths",
      "file": "testing/test_collection.py",
      "line": 1237
    },
    {
      "id": "testing/test_collection.py:test_initial_conftests_with_testpaths",
      "type": "function",
      "name": "test_initial_conftests_with_testpaths",
      "file": "testing/test_collection.py",
      "line": 1267
    },
    {
      "id": "testing/test_collection.py:test_large_option_breaks_initial_conftests",
      "type": "function",
      "name": "test_large_option_breaks_initial_conftests",
      "file": "testing/test_collection.py",
      "line": 1298
    },
    {
      "id": "testing/test_collection.py:test_collect_symlink_file_arg",
      "type": "function",
      "name": "test_collect_symlink_file_arg",
      "file": "testing/test_collection.py",
      "line": 1317
    },
    {
      "id": "testing/test_collection.py:test_collect_symlink_out_of_tree",
      "type": "function",
      "name": "test_collect_symlink_out_of_tree",
      "file": "testing/test_collection.py",
      "line": 1332
    },
    {
      "id": "testing/test_collection.py:test_collect_symlink_dir",
      "type": "function",
      "name": "test_collect_symlink_dir",
      "file": "testing/test_collection.py",
      "line": 1361
    },
    {
      "id": "testing/test_collection.py:test_collectignore_via_conftest",
      "type": "function",
      "name": "test_collectignore_via_conftest",
      "file": "testing/test_collection.py",
      "line": 1370
    },
    {
      "id": "testing/test_collection.py:test_collect_pkg_init_and_file_in_args",
      "type": "function",
      "name": "test_collect_pkg_init_and_file_in_args",
      "file": "testing/test_collection.py",
      "line": 1388
    },
    {
      "id": "testing/test_collection.py:test_collect_pkg_init_only",
      "type": "function",
      "name": "test_collect_pkg_init_only",
      "file": "testing/test_collection.py",
      "line": 1425
    },
    {
      "id": "testing/test_collection.py:test_collect_sub_with_symlinks",
      "type": "function",
      "name": "test_collect_sub_with_symlinks",
      "file": "testing/test_collection.py",
      "line": 1441
    },
    {
      "id": "testing/test_collection.py:test_collector_respects_tbstyle",
      "type": "function",
      "name": "test_collector_respects_tbstyle",
      "file": "testing/test_collection.py",
      "line": 1464
    },
    {
      "id": "testing/test_collection.py:test_does_not_eagerly_collect_packages",
      "type": "function",
      "name": "test_does_not_eagerly_collect_packages",
      "file": "testing/test_collection.py",
      "line": 1481
    },
    {
      "id": "testing/test_collection.py:test_does_not_put_src_on_path",
      "type": "function",
      "name": "test_does_not_put_src_on_path",
      "file": "testing/test_collection.py",
      "line": 1489
    },
    {
      "id": "testing/test_collection.py:test_fscollector_from_parent",
      "type": "function",
      "name": "test_fscollector_from_parent",
      "file": "testing/test_collection.py",
      "line": 1502
    },
    {
      "id": "testing/test_collection.py:test_fscollector_from_parent.MyCollector",
      "type": "class",
      "name": "test_fscollector_from_parent.MyCollector",
      "file": "testing/test_collection.py",
      "line": 1508
    },
    {
      "id": "testing/test_collection.py:test_class_from_parent",
      "type": "function",
      "name": "test_class_from_parent",
      "file": "testing/test_collection.py",
      "line": 1519
    },
    {
      "id": "testing/test_collection.py:test_class_from_parent.MyCollector",
      "type": "class",
      "name": "test_class_from_parent.MyCollector",
      "file": "testing/test_collection.py",
      "line": 1522
    },
    {
      "id": "testing/test_collection.py:test_class_from_parent.MyCollector.from_parent",
      "type": "function",
      "name": "test_class_from_parent.MyCollector.from_parent",
      "file": "testing/test_collection.py",
      "line": 1528
    },
    {
      "id": "testing/test_collection.py:TestImportModeImportlib",
      "type": "class",
      "name": "TestImportModeImportlib",
      "file": "testing/test_collection.py",
      "line": 1535
    },
    {
      "id": "testing/test_collection.py:TestImportModeImportlib.test_collect_duplicate_names",
      "type": "function",
      "name": "TestImportModeImportlib.test_collect_duplicate_names",
      "file": "testing/test_collection.py",
      "line": 1536
    },
    {
      "id": "testing/test_collection.py:TestImportModeImportlib.test_conftest",
      "type": "function",
      "name": "TestImportModeImportlib.test_conftest",
      "file": "testing/test_collection.py",
      "line": 1553
    },
    {
      "id": "testing/test_collection.py:TestImportModeImportlib.setup_conftest_and_foo",
      "type": "function",
      "name": "TestImportModeImportlib.setup_conftest_and_foo",
      "file": "testing/test_collection.py",
      "line": 1572
    },
    {
      "id": "testing/test_collection.py:TestImportModeImportlib.test_modules_importable_as_side_effect",
      "type": "function",
      "name": "TestImportModeImportlib.test_modules_importable_as_side_effect",
      "file": "testing/test_collection.py",
      "line": 1589
    },
    {
      "id": "testing/test_collection.py:TestImportModeImportlib.test_modules_not_importable_as_side_effect",
      "type": "function",
      "name": "TestImportModeImportlib.test_modules_not_importable_as_side_effect",
      "file": "testing/test_collection.py",
      "line": 1596
    },
    {
      "id": "testing/test_collection.py:TestImportModeImportlib.test_using_python_path",
      "type": "function",
      "name": "TestImportModeImportlib.test_using_python_path",
      "file": "testing/test_collection.py",
      "line": 1611
    },
    {
      "id": "testing/test_collection.py:test_does_not_crash_on_error_from_decorated_function",
      "type": "function",
      "name": "test_does_not_crash_on_error_from_decorated_function",
      "file": "testing/test_collection.py",
      "line": 1641
    },
    {
      "id": "testing/test_collection.py:test_does_not_crash_on_recursive_symlink",
      "type": "function",
      "name": "test_does_not_crash_on_recursive_symlink",
      "file": "testing/test_collection.py",
      "line": 1655
    },
    {
      "id": "testing/test_terminal.py",
      "type": "file",
      "name": "test_terminal.py",
      "file": "testing/test_terminal.py",
      "line": 0
    },
    {
      "id": "testing/test_terminal.py:Option",
      "type": "class",
      "name": "Option",
      "file": "testing/test_terminal.py",
      "line": 41
    },
    {
      "id": "testing/test_terminal.py:Option.args",
      "type": "function",
      "name": "Option.args",
      "file": "testing/test_terminal.py",
      "line": 46
    },
    {
      "id": "testing/test_terminal.py:option",
      "type": "function",
      "name": "option",
      "file": "testing/test_terminal.py",
      "line": 56
    },
    {
      "id": "testing/test_terminal.py:test_plugin_nameversion",
      "type": "function",
      "name": "test_plugin_nameversion",
      "file": "testing/test_terminal.py",
      "line": 75
    },
    {
      "id": "testing/test_terminal.py:TestTerminal",
      "type": "class",
      "name": "TestTerminal",
      "file": "testing/test_terminal.py",
      "line": 81
    },
    {
      "id": "testing/test_terminal.py:TestTerminal.test_pass_skip_fail",
      "type": "function",
      "name": "TestTerminal.test_pass_skip_fail",
      "file": "testing/test_terminal.py",
      "line": 82
    },
    {
      "id": "testing/test_terminal.py:TestTerminal.test_internalerror",
      "type": "function",
      "name": "TestTerminal.test_internalerror",
      "file": "testing/test_terminal.py",
      "line": 111
    },
    {
      "id": "testing/test_terminal.py:TestTerminal.test_writeline",
      "type": "function",
      "name": "TestTerminal.test_writeline",
      "file": "testing/test_terminal.py",
      "line": 119
    },
    {
      "id": "testing/test_terminal.py:TestTerminal.test_show_runtest_logstart",
      "type": "function",
      "name": "TestTerminal.test_show_runtest_logstart",
      "file": "testing/test_terminal.py",
      "line": 129
    },
    {
      "id": "testing/test_terminal.py:TestTerminal.test_runtest_location_shown_before_test_starts",
      "type": "function",
      "name": "TestTerminal.test_runtest_location_shown_before_test_starts",
      "file": "testing/test_terminal.py",
      "line": 139
    },
    {
      "id": "testing/test_terminal.py:TestTerminal.test_report_collect_after_half_a_second",
      "type": "function",
      "name": "TestTerminal.test_report_collect_after_half_a_second",
      "file": "testing/test_terminal.py",
      "line": 154
    },
    {
      "id": "testing/test_terminal.py:TestTerminal.test_itemreport_subclasses_show_subclassed_file",
      "type": "function",
      "name": "TestTerminal.test_itemreport_subclasses_show_subclassed_file",
      "file": "testing/test_terminal.py",
      "line": 183
    },
    {
      "id": "testing/test_terminal.py:TestTerminal.test_itemreport_directclasses_not_shown_as_subclasses",
      "type": "function",
      "name": "TestTerminal.test_itemreport_directclasses_not_shown_as_subclasses",
      "file": "testing/test_terminal.py",
      "line": 236
    },
    {
      "id": "testing/test_terminal.py:TestTerminal.test_keyboard_interrupt",
      "type": "function",
      "name": "TestTerminal.test_keyboard_interrupt",
      "file": "testing/test_terminal.py",
      "line": 256
    },
    {
      "id": "testing/test_terminal.py:TestTerminal.test_keyboard_in_sessionstart",
      "type": "function",
      "name": "TestTerminal.test_keyboard_in_sessionstart",
      "file": "testing/test_terminal.py",
      "line": 287
    },
    {
      "id": "testing/test_terminal.py:TestTerminal.test_collect_single_item",
      "type": "function",
      "name": "TestTerminal.test_collect_single_item",
      "file": "testing/test_terminal.py",
      "line": 305
    },
    {
      "id": "testing/test_terminal.py:TestTerminal.test_rewrite",
      "type": "function",
      "name": "TestTerminal.test_rewrite",
      "file": "testing/test_terminal.py",
      "line": 316
    },
    {
      "id": "testing/test_terminal.py:TestTerminal.test_report_teststatus_explicit_markup",
      "type": "function",
      "name": "TestTerminal.test_report_teststatus_explicit_markup",
      "file": "testing/test_terminal.py",
      "line": 326
    },
    {
      "id": "testing/test_terminal.py:TestTerminal.test_verbose_skip_reason",
      "type": "function",
      "name": "TestTerminal.test_verbose_skip_reason",
      "file": "testing/test_terminal.py",
      "line": 349
    },
    {
      "id": "testing/test_terminal.py:TestCollectonly",
      "type": "class",
      "name": "TestCollectonly",
      "file": "testing/test_terminal.py",
      "line": 444
    },
    {
      "id": "testing/test_terminal.py:TestCollectonly.test_collectonly_basic",
      "type": "function",
      "name": "TestCollectonly.test_collectonly_basic",
      "file": "testing/test_terminal.py",
      "line": 445
    },
    {
      "id": "testing/test_terminal.py:TestCollectonly.test_collectonly_skipped_module",
      "type": "function",
      "name": "TestCollectonly.test_collectonly_skipped_module",
      "file": "testing/test_terminal.py",
      "line": 457
    },
    {
      "id": "testing/test_terminal.py:TestCollectonly.test_collectonly_displays_test_description",
      "type": "function",
      "name": "TestCollectonly.test_collectonly_displays_test_description",
      "file": "testing/test_terminal.py",
      "line": 467
    },
    {
      "id": "testing/test_terminal.py:TestCollectonly.test_collectonly_failed_module",
      "type": "function",
      "name": "TestCollectonly.test_collectonly_failed_module",
      "file": "testing/test_terminal.py",
      "line": 495
    },
    {
      "id": "testing/test_terminal.py:TestCollectonly.test_collectonly_fatal",
      "type": "function",
      "name": "TestCollectonly.test_collectonly_fatal",
      "file": "testing/test_terminal.py",
      "line": 500
    },
    {
      "id": "testing/test_terminal.py:TestCollectonly.test_collectonly_simple",
      "type": "function",
      "name": "TestCollectonly.test_collectonly_simple",
      "file": "testing/test_terminal.py",
      "line": 511
    },
    {
      "id": "testing/test_terminal.py:TestCollectonly.test_collectonly_error",
      "type": "function",
      "name": "TestCollectonly.test_collectonly_error",
      "file": "testing/test_terminal.py",
      "line": 533
    },
    {
      "id": "testing/test_terminal.py:TestCollectonly.test_collectonly_missing_path",
      "type": "function",
      "name": "TestCollectonly.test_collectonly_missing_path",
      "file": "testing/test_terminal.py",
      "line": 548
    },
    {
      "id": "testing/test_terminal.py:TestCollectonly.test_collectonly_quiet",
      "type": "function",
      "name": "TestCollectonly.test_collectonly_quiet",
      "file": "testing/test_terminal.py",
      "line": 557
    },
    {
      "id": "testing/test_terminal.py:TestCollectonly.test_collectonly_more_quiet",
      "type": "function",
      "name": "TestCollectonly.test_collectonly_more_quiet",
      "file": "testing/test_terminal.py",
      "line": 562
    },
    {
      "id": "testing/test_terminal.py:TestCollectonly.test_collect_only_summary_status",
      "type": "function",
      "name": "TestCollectonly.test_collect_only_summary_status",
      "file": "testing/test_terminal.py",
      "line": 567
    },
    {
      "id": "testing/test_terminal.py:TestFixtureReporting",
      "type": "class",
      "name": "TestFixtureReporting",
      "file": "testing/test_terminal.py",
      "line": 610
    },
    {
      "id": "testing/test_terminal.py:TestFixtureReporting.test_setup_fixture_error",
      "type": "function",
      "name": "TestFixtureReporting.test_setup_fixture_error",
      "file": "testing/test_terminal.py",
      "line": 611
    },
    {
      "id": "testing/test_terminal.py:TestFixtureReporting.test_teardown_fixture_error",
      "type": "function",
      "name": "TestFixtureReporting.test_teardown_fixture_error",
      "file": "testing/test_terminal.py",
      "line": 633
    },
    {
      "id": "testing/test_terminal.py:TestFixtureReporting.test_teardown_fixture_error_and_test_failure",
      "type": "function",
      "name": "TestFixtureReporting.test_teardown_fixture_error_and_test_failure",
      "file": "testing/test_terminal.py",
      "line": 655
    },
    {
      "id": "testing/test_terminal.py:TestFixtureReporting.test_setup_teardown_output_and_test_failure",
      "type": "function",
      "name": "TestFixtureReporting.test_setup_teardown_output_and_test_failure",
      "file": "testing/test_terminal.py",
      "line": 681
    },
    {
      "id": "testing/test_terminal.py:TestTerminalFunctional",
      "type": "class",
      "name": "TestTerminalFunctional",
      "file": "testing/test_terminal.py",
      "line": 710
    },
    {
      "id": "testing/test_terminal.py:TestTerminalFunctional.test_deselected",
      "type": "function",
      "name": "TestTerminalFunctional.test_deselected",
      "file": "testing/test_terminal.py",
      "line": 711
    },
    {
      "id": "testing/test_terminal.py:TestTerminalFunctional.test_deselected_with_hookwrapper",
      "type": "function",
      "name": "TestTerminalFunctional.test_deselected_with_hookwrapper",
      "file": "testing/test_terminal.py",
      "line": 728
    },
    {
      "id": "testing/test_terminal.py:TestTerminalFunctional.test_show_deselected_items_using_markexpr_before_test_execution",
      "type": "function",
      "name": "TestTerminalFunctional.test_show_deselected_items_using_markexpr_before_test_execution",
      "file": "testing/test_terminal.py",
      "line": 759
    },
    {
      "id": "testing/test_terminal.py:TestTerminalFunctional.test_selected_count_with_error",
      "type": "function",
      "name": "TestTerminalFunctional.test_selected_count_with_error",
      "file": "testing/test_terminal.py",
      "line": 789
    },
    {
      "id": "testing/test_terminal.py:TestTerminalFunctional.test_no_skip_summary_if_failure",
      "type": "function",
      "name": "TestTerminalFunctional.test_no_skip_summary_if_failure",
      "file": "testing/test_terminal.py",
      "line": 816
    },
    {
      "id": "testing/test_terminal.py:TestTerminalFunctional.test_passes",
      "type": "function",
      "name": "TestTerminalFunctional.test_passes",
      "file": "testing/test_terminal.py",
      "line": 832
    },
    {
      "id": "testing/test_terminal.py:TestTerminalFunctional.test_header_trailer_info",
      "type": "function",
      "name": "TestTerminalFunctional.test_header_trailer_info",
      "file": "testing/test_terminal.py",
      "line": 851
    },
    {
      "id": "testing/test_terminal.py:TestTerminalFunctional.test_no_header_trailer_info",
      "type": "function",
      "name": "TestTerminalFunctional.test_no_header_trailer_info",
      "file": "testing/test_terminal.py",
      "line": 880
    },
    {
      "id": "testing/test_terminal.py:TestTerminalFunctional.test_header",
      "type": "function",
      "name": "TestTerminalFunctional.test_header",
      "file": "testing/test_terminal.py",
      "line": 904
    },
    {
      "id": "testing/test_terminal.py:TestTerminalFunctional.test_header_absolute_testpath",
      "type": "function",
      "name": "TestTerminalFunctional.test_header_absolute_testpath",
      "file": "testing/test_terminal.py",
      "line": 933
    },
    {
      "id": "testing/test_terminal.py:TestTerminalFunctional.test_no_header",
      "type": "function",
      "name": "TestTerminalFunctional.test_no_header",
      "file": "testing/test_terminal.py",
      "line": 956
    },
    {
      "id": "testing/test_terminal.py:TestTerminalFunctional.test_no_summary",
      "type": "function",
      "name": "TestTerminalFunctional.test_no_summary",
      "file": "testing/test_terminal.py",
      "line": 976
    },
    {
      "id": "testing/test_terminal.py:TestTerminalFunctional.test_showlocals",
      "type": "function",
      "name": "TestTerminalFunctional.test_showlocals",
      "file": "testing/test_terminal.py",
      "line": 986
    },
    {
      "id": "testing/test_terminal.py:TestTerminalFunctional.test_noshowlocals_addopts_override",
      "type": "function",
      "name": "TestTerminalFunctional.test_noshowlocals_addopts_override",
      "file": "testing/test_terminal.py",
      "line": 1004
    },
    {
      "id": "testing/test_terminal.py:TestTerminalFunctional.test_showlocals_short",
      "type": "function",
      "name": "TestTerminalFunctional.test_showlocals_short",
      "file": "testing/test_terminal.py",
      "line": 1020
    },
    {
      "id": "testing/test_terminal.py:TestTerminalFunctional.verbose_testfile",
      "type": "function",
      "name": "TestTerminalFunctional.verbose_testfile",
      "file": "testing/test_terminal.py",
      "line": 1041
    },
    {
      "id": "testing/test_terminal.py:TestTerminalFunctional.test_verbose_reporting",
      "type": "function",
      "name": "TestTerminalFunctional.test_verbose_reporting",
      "file": "testing/test_terminal.py",
      "line": 1059
    },
    {
      "id": "testing/test_terminal.py:TestTerminalFunctional.test_verbose_reporting_xdist",
      "type": "function",
      "name": "TestTerminalFunctional.test_verbose_reporting_xdist",
      "file": "testing/test_terminal.py",
      "line": 1073
    },
    {
      "id": "testing/test_terminal.py:TestTerminalFunctional.test_quiet_reporting",
      "type": "function",
      "name": "TestTerminalFunctional.test_quiet_reporting",
      "file": "testing/test_terminal.py",
      "line": 1092
    },
    {
      "id": "testing/test_terminal.py:TestTerminalFunctional.test_more_quiet_reporting",
      "type": "function",
      "name": "TestTerminalFunctional.test_more_quiet_reporting",
      "file": "testing/test_terminal.py",
      "line": 1101
    },
    {
      "id": "testing/test_terminal.py:TestTerminalFunctional.test_report_collectionfinish_hook",
      "type": "function",
      "name": "TestTerminalFunctional.test_report_collectionfinish_hook",
      "file": "testing/test_terminal.py",
      "line": 1113
    },
    {
      "id": "testing/test_terminal.py:TestTerminalFunctional.test_summary_f_alias",
      "type": "function",
      "name": "TestTerminalFunctional.test_summary_f_alias",
      "file": "testing/test_terminal.py",
      "line": 1131
    },
    {
      "id": "testing/test_terminal.py:TestTerminalFunctional.test_summary_s_alias",
      "type": "function",
      "name": "TestTerminalFunctional.test_summary_s_alias",
      "file": "testing/test_terminal.py",
      "line": 1144
    },
    {
      "id": "testing/test_terminal.py:test_fail_extra_reporting",
      "type": "function",
      "name": "test_fail_extra_reporting",
      "file": "testing/test_terminal.py",
      "line": 1169
    },
    {
      "id": "testing/test_terminal.py:test_fail_reporting_on_pass",
      "type": "function",
      "name": "test_fail_reporting_on_pass",
      "file": "testing/test_terminal.py",
      "line": 1189
    },
    {
      "id": "testing/test_terminal.py:test_pass_extra_reporting",
      "type": "function",
      "name": "test_pass_extra_reporting",
      "file": "testing/test_terminal.py",
      "line": 1195
    },
    {
      "id": "testing/test_terminal.py:test_pass_reporting_on_fail",
      "type": "function",
      "name": "test_pass_reporting_on_fail",
      "file": "testing/test_terminal.py",
      "line": 1203
    },
    {
      "id": "testing/test_terminal.py:test_pass_output_reporting",
      "type": "function",
      "name": "test_pass_output_reporting",
      "file": "testing/test_terminal.py",
      "line": 1209
    },
    {
      "id": "testing/test_terminal.py:test_color_yes",
      "type": "function",
      "name": "test_color_yes",
      "file": "testing/test_terminal.py",
      "line": 1249
    },
    {
      "id": "testing/test_terminal.py:test_color_no",
      "type": "function",
      "name": "test_color_no",
      "file": "testing/test_terminal.py",
      "line": 1308
    },
    {
      "id": "testing/test_terminal.py:test_color_yes_collection_on_non_atty",
      "type": "function",
      "name": "test_color_yes_collection_on_non_atty",
      "file": "testing/test_terminal.py",
      "line": 1316
    },
    {
      "id": "testing/test_terminal.py:test_getreportopt",
      "type": "function",
      "name": "test_getreportopt",
      "file": "testing/test_terminal.py",
      "line": 1338
    },
    {
      "id": "testing/test_terminal.py:test_getreportopt.FakeConfig",
      "type": "class",
      "name": "test_getreportopt.FakeConfig",
      "file": "testing/test_terminal.py",
      "line": 1341
    },
    {
      "id": "testing/test_terminal.py:test_getreportopt.FakeConfig.Option",
      "type": "class",
      "name": "test_getreportopt.FakeConfig.Option",
      "file": "testing/test_terminal.py",
      "line": 1342
    },
    {
      "id": "testing/test_terminal.py:test_terminalreporter_reportopt_addopts",
      "type": "function",
      "name": "test_terminalreporter_reportopt_addopts",
      "file": "testing/test_terminal.py",
      "line": 1397
    },
    {
      "id": "testing/test_terminal.py:test_tbstyle_short",
      "type": "function",
      "name": "test_tbstyle_short",
      "file": "testing/test_terminal.py",
      "line": 1416
    },
    {
      "id": "testing/test_terminal.py:test_traceconfig",
      "type": "function",
      "name": "test_traceconfig",
      "file": "testing/test_terminal.py",
      "line": 1440
    },
    {
      "id": "testing/test_terminal.py:TestGenericReporting",
      "type": "class",
      "name": "TestGenericReporting",
      "file": "testing/test_terminal.py",
      "line": 1446
    },
    {
      "id": "testing/test_terminal.py:TestGenericReporting.test_collect_fail",
      "type": "function",
      "name": "TestGenericReporting.test_collect_fail",
      "file": "testing/test_terminal.py",
      "line": 1450
    },
    {
      "id": "testing/test_terminal.py:TestGenericReporting.test_maxfailures",
      "type": "function",
      "name": "TestGenericReporting.test_maxfailures",
      "file": "testing/test_terminal.py",
      "line": 1457
    },
    {
      "id": "testing/test_terminal.py:TestGenericReporting.test_maxfailures_with_interrupted",
      "type": "function",
      "name": "TestGenericReporting.test_maxfailures_with_interrupted",
      "file": "testing/test_terminal.py",
      "line": 1478
    },
    {
      "id": "testing/test_terminal.py:TestGenericReporting.test_tb_option",
      "type": "function",
      "name": "TestGenericReporting.test_tb_option",
      "file": "testing/test_terminal.py",
      "line": 1497
    },
    {
      "id": "testing/test_terminal.py:TestGenericReporting.test_tb_crashline",
      "type": "function",
      "name": "TestGenericReporting.test_tb_crashline",
      "file": "testing/test_terminal.py",
      "line": 1524
    },
    {
      "id": "testing/test_terminal.py:TestGenericReporting.test_tb_crashline_pytrace_false",
      "type": "function",
      "name": "TestGenericReporting.test_tb_crashline_pytrace_false",
      "file": "testing/test_terminal.py",
      "line": 1545
    },
    {
      "id": "testing/test_terminal.py:TestGenericReporting.test_pytest_report_header",
      "type": "function",
      "name": "TestGenericReporting.test_pytest_report_header",
      "file": "testing/test_terminal.py",
      "line": 1558
    },
    {
      "id": "testing/test_terminal.py:TestGenericReporting.test_show_capture",
      "type": "function",
      "name": "TestGenericReporting.test_show_capture",
      "file": "testing/test_terminal.py",
      "line": 1577
    },
    {
      "id": "testing/test_terminal.py:TestGenericReporting.test_show_capture_with_teardown_logs",
      "type": "function",
      "name": "TestGenericReporting.test_show_capture_with_teardown_logs",
      "file": "testing/test_terminal.py",
      "line": 1628
    },
    {
      "id": "testing/test_terminal.py:test_fdopen_kept_alive_issue124",
      "type": "function",
      "name": "test_fdopen_kept_alive_issue124",
      "file": "testing/test_terminal.py",
      "line": 1670
    },
    {
      "id": "testing/test_terminal.py:test_tbstyle_native_setup_error",
      "type": "function",
      "name": "test_tbstyle_native_setup_error",
      "file": "testing/test_terminal.py",
      "line": 1688
    },
    {
      "id": "testing/test_terminal.py:test_terminal_summary",
      "type": "function",
      "name": "test_terminal_summary",
      "file": "testing/test_terminal.py",
      "line": 1706
    },
    {
      "id": "testing/test_terminal.py:test_terminal_summary_warnings_are_displayed",
      "type": "function",
      "name": "test_terminal_summary_warnings_are_displayed",
      "file": "testing/test_terminal.py",
      "line": 1727
    },
    {
      "id": "testing/test_terminal.py:test_terminal_summary_warnings_header_once",
      "type": "function",
      "name": "test_terminal_summary_warnings_header_once",
      "file": "testing/test_terminal.py",
      "line": 1764
    },
    {
      "id": "testing/test_terminal.py:test_terminal_no_summary_warnings_header_once",
      "type": "function",
      "name": "test_terminal_no_summary_warnings_header_once",
      "file": "testing/test_terminal.py",
      "line": 1789
    },
    {
      "id": "testing/test_terminal.py:tr",
      "type": "function",
      "name": "tr",
      "file": "testing/test_terminal.py",
      "line": 1804
    },
    {
      "id": "testing/test_terminal.py:test_summary_stats",
      "type": "function",
      "name": "test_summary_stats",
      "file": "testing/test_terminal.py",
      "line": 1939
    },
    {
      "id": "testing/test_terminal.py:test_summary_stats.fake_session",
      "type": "class",
      "name": "test_summary_stats.fake_session",
      "file": "testing/test_terminal.py",
      "line": 1948
    },
    {
      "id": "testing/test_terminal.py:test_skip_counting_towards_summary",
      "type": "function",
      "name": "test_skip_counting_towards_summary",
      "file": "testing/test_terminal.py",
      "line": 1965
    },
    {
      "id": "testing/test_terminal.py:test_skip_counting_towards_summary.DummyReport",
      "type": "class",
      "name": "test_skip_counting_towards_summary.DummyReport",
      "file": "testing/test_terminal.py",
      "line": 1966
    },
    {
      "id": "testing/test_terminal.py:TestClassicOutputStyle",
      "type": "class",
      "name": "TestClassicOutputStyle",
      "file": "testing/test_terminal.py",
      "line": 1983
    },
    {
      "id": "testing/test_terminal.py:TestClassicOutputStyle.test_files",
      "type": "function",
      "name": "TestClassicOutputStyle.test_files",
      "file": "testing/test_terminal.py",
      "line": 1987
    },
    {
      "id": "testing/test_terminal.py:TestClassicOutputStyle.test_normal_verbosity",
      "type": "function",
      "name": "TestClassicOutputStyle.test_normal_verbosity",
      "file": "testing/test_terminal.py",
      "line": 2000
    },
    {
      "id": "testing/test_terminal.py:TestClassicOutputStyle.test_verbose",
      "type": "function",
      "name": "TestClassicOutputStyle.test_verbose",
      "file": "testing/test_terminal.py",
      "line": 2011
    },
    {
      "id": "testing/test_terminal.py:TestClassicOutputStyle.test_quiet",
      "type": "function",
      "name": "TestClassicOutputStyle.test_quiet",
      "file": "testing/test_terminal.py",
      "line": 2024
    },
    {
      "id": "testing/test_terminal.py:TestProgressOutputStyle",
      "type": "class",
      "name": "TestProgressOutputStyle",
      "file": "testing/test_terminal.py",
      "line": 2029
    },
    {
      "id": "testing/test_terminal.py:TestProgressOutputStyle.many_tests_files",
      "type": "function",
      "name": "TestProgressOutputStyle.many_tests_files",
      "file": "testing/test_terminal.py",
      "line": 2031
    },
    {
      "id": "testing/test_terminal.py:TestProgressOutputStyle.test_zero_tests_collected",
      "type": "function",
      "name": "TestProgressOutputStyle.test_zero_tests_collected",
      "file": "testing/test_terminal.py",
      "line": 2050
    },
    {
      "id": "testing/test_terminal.py:TestProgressOutputStyle.test_normal",
      "type": "function",
      "name": "TestProgressOutputStyle.test_normal",
      "file": "testing/test_terminal.py",
      "line": 2068
    },
    {
      "id": "testing/test_terminal.py:TestProgressOutputStyle.test_colored_progress",
      "type": "function",
      "name": "TestProgressOutputStyle.test_colored_progress",
      "file": "testing/test_terminal.py",
      "line": 2078
    },
    {
      "id": "testing/test_terminal.py:TestProgressOutputStyle.test_count",
      "type": "function",
      "name": "TestProgressOutputStyle.test_count",
      "file": "testing/test_terminal.py",
      "line": 2130
    },
    {
      "id": "testing/test_terminal.py:TestProgressOutputStyle.test_verbose",
      "type": "function",
      "name": "TestProgressOutputStyle.test_verbose",
      "file": "testing/test_terminal.py",
      "line": 2146
    },
    {
      "id": "testing/test_terminal.py:TestProgressOutputStyle.test_verbose_count",
      "type": "function",
      "name": "TestProgressOutputStyle.test_verbose_count",
      "file": "testing/test_terminal.py",
      "line": 2156
    },
    {
      "id": "testing/test_terminal.py:TestProgressOutputStyle.test_xdist_normal",
      "type": "function",
      "name": "TestProgressOutputStyle.test_xdist_normal",
      "file": "testing/test_terminal.py",
      "line": 2172
    },
    {
      "id": "testing/test_terminal.py:TestProgressOutputStyle.test_xdist_normal_count",
      "type": "function",
      "name": "TestProgressOutputStyle.test_xdist_normal_count",
      "file": "testing/test_terminal.py",
      "line": 2180
    },
    {
      "id": "testing/test_terminal.py:TestProgressOutputStyle.test_xdist_verbose",
      "type": "function",
      "name": "TestProgressOutputStyle.test_xdist_verbose",
      "file": "testing/test_terminal.py",
      "line": 2194
    },
    {
      "id": "testing/test_terminal.py:TestProgressOutputStyle.test_capture_no",
      "type": "function",
      "name": "TestProgressOutputStyle.test_capture_no",
      "file": "testing/test_terminal.py",
      "line": 2224
    },
    {
      "id": "testing/test_terminal.py:TestProgressOutputStyle.test_capture_no_progress_enabled",
      "type": "function",
      "name": "TestProgressOutputStyle.test_capture_no_progress_enabled",
      "file": "testing/test_terminal.py",
      "line": 2233
    },
    {
      "id": "testing/test_terminal.py:TestProgressWithTeardown",
      "type": "class",
      "name": "TestProgressWithTeardown",
      "file": "testing/test_terminal.py",
      "line": 2252
    },
    {
      "id": "testing/test_terminal.py:TestProgressWithTeardown.contest_with_teardown_fixture",
      "type": "function",
      "name": "TestProgressWithTeardown.contest_with_teardown_fixture",
      "file": "testing/test_terminal.py",
      "line": 2256
    },
    {
      "id": "testing/test_terminal.py:TestProgressWithTeardown.many_files",
      "type": "function",
      "name": "TestProgressWithTeardown.many_files",
      "file": "testing/test_terminal.py",
      "line": 2269
    },
    {
      "id": "testing/test_terminal.py:TestProgressWithTeardown.test_teardown_simple",
      "type": "function",
      "name": "TestProgressWithTeardown.test_teardown_simple",
      "file": "testing/test_terminal.py",
      "line": 2285
    },
    {
      "id": "testing/test_terminal.py:TestProgressWithTeardown.test_teardown_with_test_also_failing",
      "type": "function",
      "name": "TestProgressWithTeardown.test_teardown_with_test_also_failing",
      "file": "testing/test_terminal.py",
      "line": 2297
    },
    {
      "id": "testing/test_terminal.py:TestProgressWithTeardown.test_teardown_many",
      "type": "function",
      "name": "TestProgressWithTeardown.test_teardown_many",
      "file": "testing/test_terminal.py",
      "line": 2315
    },
    {
      "id": "testing/test_terminal.py:TestProgressWithTeardown.test_teardown_many_verbose",
      "type": "function",
      "name": "TestProgressWithTeardown.test_teardown_many_verbose",
      "file": "testing/test_terminal.py",
      "line": 2321
    },
    {
      "id": "testing/test_terminal.py:TestProgressWithTeardown.test_xdist_normal",
      "type": "function",
      "name": "TestProgressWithTeardown.test_xdist_normal",
      "file": "testing/test_terminal.py",
      "line": 2338
    },
    {
      "id": "testing/test_terminal.py:test_skip_reasons_folding",
      "type": "function",
      "name": "test_skip_reasons_folding",
      "file": "testing/test_terminal.py",
      "line": 2345
    },
    {
      "id": "testing/test_terminal.py:test_skip_reasons_folding.X",
      "type": "class",
      "name": "test_skip_reasons_folding.X",
      "file": "testing/test_terminal.py",
      "line": 2351
    },
    {
      "id": "testing/test_terminal.py:test_line_with_reprcrash",
      "type": "function",
      "name": "test_line_with_reprcrash",
      "file": "testing/test_terminal.py",
      "line": 2379
    },
    {
      "id": "testing/test_terminal.py:test_line_with_reprcrash.mock_get_pos",
      "type": "function",
      "name": "test_line_with_reprcrash.mock_get_pos",
      "file": "testing/test_terminal.py",
      "line": 2384
    },
    {
      "id": "testing/test_terminal.py:test_line_with_reprcrash.config",
      "type": "class",
      "name": "test_line_with_reprcrash.config",
      "file": "testing/test_terminal.py",
      "line": 2389
    },
    {
      "id": "testing/test_terminal.py:test_line_with_reprcrash.rep",
      "type": "class",
      "name": "test_line_with_reprcrash.rep",
      "file": "testing/test_terminal.py",
      "line": 2392
    },
    {
      "id": "testing/test_terminal.py:test_line_with_reprcrash.rep._get_verbose_word",
      "type": "function",
      "name": "test_line_with_reprcrash.rep._get_verbose_word",
      "file": "testing/test_terminal.py",
      "line": 2393
    },
    {
      "id": "testing/test_terminal.py:test_line_with_reprcrash.rep.longrepr",
      "type": "class",
      "name": "test_line_with_reprcrash.rep.longrepr",
      "file": "testing/test_terminal.py",
      "line": 2396
    },
    {
      "id": "testing/test_terminal.py:test_line_with_reprcrash.rep.longrepr.reprcrash",
      "type": "class",
      "name": "test_line_with_reprcrash.rep.longrepr.reprcrash",
      "file": "testing/test_terminal.py",
      "line": 2397
    },
    {
      "id": "testing/test_terminal.py:test_line_with_reprcrash.check",
      "type": "function",
      "name": "test_line_with_reprcrash.check",
      "file": "testing/test_terminal.py",
      "line": 2400
    },
    {
      "id": "testing/test_terminal.py:test_line_with_reprcrash.check.DummyTerminalWriter",
      "type": "class",
      "name": "test_line_with_reprcrash.check.DummyTerminalWriter",
      "file": "testing/test_terminal.py",
      "line": 2401
    },
    {
      "id": "testing/test_terminal.py:test_line_with_reprcrash.check.DummyTerminalWriter.markup",
      "type": "function",
      "name": "test_line_with_reprcrash.check.DummyTerminalWriter.markup",
      "file": "testing/test_terminal.py",
      "line": 2404
    },
    {
      "id": "testing/test_terminal.py:test_format_session_duration",
      "type": "function",
      "name": "test_format_session_duration",
      "file": "testing/test_terminal.py",
      "line": 2461
    },
    {
      "id": "testing/test_terminal.py:test_collecterror",
      "type": "function",
      "name": "test_collecterror",
      "file": "testing/test_terminal.py",
      "line": 2467
    },
    {
      "id": "testing/test_terminal.py:test_no_summary_collecterror",
      "type": "function",
      "name": "test_no_summary_collecterror",
      "file": "testing/test_terminal.py",
      "line": 2484
    },
    {
      "id": "testing/test_terminal.py:test_via_exec",
      "type": "function",
      "name": "test_via_exec",
      "file": "testing/test_terminal.py",
      "line": 2490
    },
    {
      "id": "testing/test_terminal.py:TestCodeHighlight",
      "type": "class",
      "name": "TestCodeHighlight",
      "file": "testing/test_terminal.py",
      "line": 2498
    },
    {
      "id": "testing/test_terminal.py:TestCodeHighlight.test_code_highlight_simple",
      "type": "function",
      "name": "TestCodeHighlight.test_code_highlight_simple",
      "file": "testing/test_terminal.py",
      "line": 2499
    },
    {
      "id": "testing/test_terminal.py:TestCodeHighlight.test_code_highlight_continuation",
      "type": "function",
      "name": "TestCodeHighlight.test_code_highlight_continuation",
      "file": "testing/test_terminal.py",
      "line": 2517
    },
    {
      "id": "testing/test_terminal.py:TestCodeHighlight.test_code_highlight_custom_theme",
      "type": "function",
      "name": "TestCodeHighlight.test_code_highlight_custom_theme",
      "file": "testing/test_terminal.py",
      "line": 2540
    },
    {
      "id": "testing/test_terminal.py:TestCodeHighlight.test_code_highlight_invalid_theme",
      "type": "function",
      "name": "TestCodeHighlight.test_code_highlight_invalid_theme",
      "file": "testing/test_terminal.py",
      "line": 2562
    },
    {
      "id": "testing/test_terminal.py:TestCodeHighlight.test_code_highlight_invalid_theme_mode",
      "type": "function",
      "name": "TestCodeHighlight.test_code_highlight_invalid_theme_mode",
      "file": "testing/test_terminal.py",
      "line": 2578
    },
    {
      "id": "testing/test_terminal.py:test_raw_skip_reason_skipped",
      "type": "function",
      "name": "test_raw_skip_reason_skipped",
      "file": "testing/test_terminal.py",
      "line": 2595
    },
    {
      "id": "testing/test_terminal.py:test_raw_skip_reason_xfail",
      "type": "function",
      "name": "test_raw_skip_reason_xfail",
      "file": "testing/test_terminal.py",
      "line": 2604
    },
    {
      "id": "testing/test_terminal.py:test_format_trimmed",
      "type": "function",
      "name": "test_format_trimmed",
      "file": "testing/test_terminal.py",
      "line": 2612
    },
    {
      "id": "testing/test_threadexception.py",
      "type": "file",
      "name": "test_threadexception.py",
      "file": "testing/test_threadexception.py",
      "line": 0
    },
    {
      "id": "testing/test_threadexception.py:test_unhandled_thread_exception",
      "type": "function",
      "name": "test_unhandled_thread_exception",
      "file": "testing/test_threadexception.py",
      "line": 6
    },
    {
      "id": "testing/test_threadexception.py:test_unhandled_thread_exception_in_setup",
      "type": "function",
      "name": "test_unhandled_thread_exception_in_setup",
      "file": "testing/test_threadexception.py",
      "line": 40
    },
    {
      "id": "testing/test_threadexception.py:test_unhandled_thread_exception_in_teardown",
      "type": "function",
      "name": "test_unhandled_thread_exception_in_teardown",
      "file": "testing/test_threadexception.py",
      "line": 76
    },
    {
      "id": "testing/test_threadexception.py:test_unhandled_thread_exception_warning_error",
      "type": "function",
      "name": "test_unhandled_thread_exception_warning_error",
      "file": "testing/test_threadexception.py",
      "line": 113
    },
    {
      "id": "testing/test_error_diffs.py",
      "type": "file",
      "name": "test_error_diffs.py",
      "file": "testing/test_error_diffs.py",
      "line": 0
    },
    {
      "id": "testing/test_error_diffs.py:test_error_diff",
      "type": "function",
      "name": "test_error_diff",
      "file": "testing/test_error_diffs.py",
      "line": 269
    },
    {
      "id": "testing/test_reports.py",
      "type": "file",
      "name": "test_reports.py",
      "file": "testing/test_reports.py",
      "line": 0
    },
    {
      "id": "testing/test_reports.py:TestReportSerialization",
      "type": "class",
      "name": "TestReportSerialization",
      "file": "testing/test_reports.py",
      "line": 14
    },
    {
      "id": "testing/test_reports.py:TestReportSerialization.test_xdist_longrepr_to_str_issue_241",
      "type": "function",
      "name": "TestReportSerialization.test_xdist_longrepr_to_str_issue_241",
      "file": "testing/test_reports.py",
      "line": 15
    },
    {
      "id": "testing/test_reports.py:TestReportSerialization.test_xdist_report_longrepr_reprcrash_130",
      "type": "function",
      "name": "TestReportSerialization.test_xdist_report_longrepr_reprcrash_130",
      "file": "testing/test_reports.py",
      "line": 38
    },
    {
      "id": "testing/test_reports.py:TestReportSerialization.test_reprentries_serialization_170",
      "type": "function",
      "name": "TestReportSerialization.test_reprentries_serialization_170",
      "file": "testing/test_reports.py",
      "line": 77
    },
    {
      "id": "testing/test_reports.py:TestReportSerialization.test_reprentries_serialization_196",
      "type": "function",
      "name": "TestReportSerialization.test_reprentries_serialization_196",
      "file": "testing/test_reports.py",
      "line": 123
    },
    {
      "id": "testing/test_reports.py:TestReportSerialization.test_itemreport_outcomes",
      "type": "function",
      "name": "TestReportSerialization.test_itemreport_outcomes",
      "file": "testing/test_reports.py",
      "line": 152
    },
    {
      "id": "testing/test_reports.py:TestReportSerialization.test_collectreport_passed",
      "type": "function",
      "name": "TestReportSerialization.test_collectreport_passed",
      "file": "testing/test_reports.py",
      "line": 186
    },
    {
      "id": "testing/test_reports.py:TestReportSerialization.test_collectreport_fail",
      "type": "function",
      "name": "TestReportSerialization.test_collectreport_fail",
      "file": "testing/test_reports.py",
      "line": 197
    },
    {
      "id": "testing/test_reports.py:TestReportSerialization.test_extended_report_deserialization",
      "type": "function",
      "name": "TestReportSerialization.test_extended_report_deserialization",
      "file": "testing/test_reports.py",
      "line": 211
    },
    {
      "id": "testing/test_reports.py:TestReportSerialization.test_paths_support",
      "type": "function",
      "name": "TestReportSerialization.test_paths_support",
      "file": "testing/test_reports.py",
      "line": 227
    },
    {
      "id": "testing/test_reports.py:TestReportSerialization.test_paths_support.MyPathLike",
      "type": "class",
      "name": "TestReportSerialization.test_paths_support.MyPathLike",
      "file": "testing/test_reports.py",
      "line": 236
    },
    {
      "id": "testing/test_reports.py:TestReportSerialization.test_paths_support.MyPathLike.__fspath__",
      "type": "function",
      "name": "TestReportSerialization.test_paths_support.MyPathLike.__fspath__",
      "file": "testing/test_reports.py",
      "line": 240
    },
    {
      "id": "testing/test_reports.py:TestReportSerialization.test_deserialization_failure",
      "type": "function",
      "name": "TestReportSerialization.test_deserialization_failure",
      "file": "testing/test_reports.py",
      "line": 253
    },
    {
      "id": "testing/test_reports.py:TestReportSerialization.test_chained_exceptions",
      "type": "function",
      "name": "TestReportSerialization.test_chained_exceptions",
      "file": "testing/test_reports.py",
      "line": 276
    },
    {
      "id": "testing/test_reports.py:TestReportSerialization.test_chained_exceptions.check_longrepr",
      "type": "function",
      "name": "TestReportSerialization.test_chained_exceptions.check_longrepr",
      "file": "testing/test_reports.py",
      "line": 312
    },
    {
      "id": "testing/test_reports.py:TestReportSerialization.test_chained_exceptions_no_reprcrash",
      "type": "function",
      "name": "TestReportSerialization.test_chained_exceptions_no_reprcrash",
      "file": "testing/test_reports.py",
      "line": 351
    },
    {
      "id": "testing/test_reports.py:TestReportSerialization.test_chained_exceptions_no_reprcrash.check_longrepr",
      "type": "function",
      "name": "TestReportSerialization.test_chained_exceptions_no_reprcrash.check_longrepr",
      "file": "testing/test_reports.py",
      "line": 376
    },
    {
      "id": "testing/test_reports.py:TestReportSerialization.test_report_prevent_ConftestImportFailure_hiding_exception",
      "type": "function",
      "name": "TestReportSerialization.test_report_prevent_ConftestImportFailure_hiding_exception",
      "file": "testing/test_reports.py",
      "line": 408
    },
    {
      "id": "testing/test_reports.py:TestReportSerialization.test_report_timestamps_match_duration",
      "type": "function",
      "name": "TestReportSerialization.test_report_timestamps_match_duration",
      "file": "testing/test_reports.py",
      "line": 419
    },
    {
      "id": "testing/test_reports.py:TestHooks",
      "type": "class",
      "name": "TestHooks",
      "file": "testing/test_reports.py",
      "line": 440
    },
    {
      "id": "testing/test_reports.py:TestHooks.test_test_report",
      "type": "function",
      "name": "TestHooks.test_test_report",
      "file": "testing/test_reports.py",
      "line": 443
    },
    {
      "id": "testing/test_reports.py:TestHooks.test_collect_report",
      "type": "function",
      "name": "TestHooks.test_collect_report",
      "file": "testing/test_reports.py",
      "line": 465
    },
    {
      "id": "testing/test_reports.py:TestHooks.test_invalid_report_types",
      "type": "function",
      "name": "TestHooks.test_invalid_report_types",
      "file": "testing/test_reports.py",
      "line": 490
    },
    {
      "id": "testing/test_pluginmanager.py",
      "type": "file",
      "name": "test_pluginmanager.py",
      "file": "testing/test_pluginmanager.py",
      "line": 0
    },
    {
      "id": "testing/test_pluginmanager.py:pytestpm",
      "type": "function",
      "name": "pytestpm",
      "file": "testing/test_pluginmanager.py",
      "line": 19
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginInteractions",
      "type": "class",
      "name": "TestPytestPluginInteractions",
      "file": "testing/test_pluginmanager.py",
      "line": 23
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_addhooks_conftestplugin",
      "type": "function",
      "name": "TestPytestPluginInteractions.test_addhooks_conftestplugin",
      "file": "testing/test_pluginmanager.py",
      "line": 24
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_addhooks_nohooks",
      "type": "function",
      "name": "TestPytestPluginInteractions.test_addhooks_nohooks",
      "file": "testing/test_pluginmanager.py",
      "line": 54
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_do_option_postinitialize",
      "type": "function",
      "name": "TestPytestPluginInteractions.test_do_option_postinitialize",
      "file": "testing/test_pluginmanager.py",
      "line": 66
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_configure",
      "type": "function",
      "name": "TestPytestPluginInteractions.test_configure",
      "file": "testing/test_pluginmanager.py",
      "line": 81
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_configure.A",
      "type": "class",
      "name": "TestPytestPluginInteractions.test_configure.A",
      "file": "testing/test_pluginmanager.py",
      "line": 85
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_configure.A.pytest_configure",
      "type": "function",
      "name": "TestPytestPluginInteractions.test_configure.A.pytest_configure",
      "file": "testing/test_pluginmanager.py",
      "line": 86
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_hook_tracing",
      "type": "function",
      "name": "TestPytestPluginInteractions.test_hook_tracing",
      "file": "testing/test_pluginmanager.py",
      "line": 101
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_hook_tracing.api1",
      "type": "class",
      "name": "TestPytestPluginInteractions.test_hook_tracing.api1",
      "file": "testing/test_pluginmanager.py",
      "line": 105
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_hook_tracing.api1.pytest_plugin_registered",
      "type": "function",
      "name": "TestPytestPluginInteractions.test_hook_tracing.api1.pytest_plugin_registered",
      "file": "testing/test_pluginmanager.py",
      "line": 106
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_hook_tracing.api2",
      "type": "class",
      "name": "TestPytestPluginInteractions.test_hook_tracing.api2",
      "file": "testing/test_pluginmanager.py",
      "line": 109
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_hook_tracing.api2.pytest_plugin_registered",
      "type": "function",
      "name": "TestPytestPluginInteractions.test_hook_tracing.api2.pytest_plugin_registered",
      "file": "testing/test_pluginmanager.py",
      "line": 110
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_hook_proxy",
      "type": "function",
      "name": "TestPytestPluginInteractions.test_hook_proxy",
      "file": "testing/test_pluginmanager.py",
      "line": 134
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_hook_with_addoption",
      "type": "function",
      "name": "TestPytestPluginInteractions.test_hook_with_addoption",
      "file": "testing/test_pluginmanager.py",
      "line": 154
    },
    {
      "id": "testing/test_pluginmanager.py:test_default_markers",
      "type": "function",
      "name": "test_default_markers",
      "file": "testing/test_pluginmanager.py",
      "line": 185
    },
    {
      "id": "testing/test_pluginmanager.py:test_importplugin_error_message",
      "type": "function",
      "name": "test_importplugin_error_message",
      "file": "testing/test_pluginmanager.py",
      "line": 190
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginManager",
      "type": "class",
      "name": "TestPytestPluginManager",
      "file": "testing/test_pluginmanager.py",
      "line": 215
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginManager.test_register_imported_modules",
      "type": "function",
      "name": "TestPytestPluginManager.test_register_imported_modules",
      "file": "testing/test_pluginmanager.py",
      "line": 216
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginManager.test_canonical_import",
      "type": "function",
      "name": "TestPytestPluginManager.test_canonical_import",
      "file": "testing/test_pluginmanager.py",
      "line": 228
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginManager.test_consider_module",
      "type": "function",
      "name": "TestPytestPluginManager.test_consider_module",
      "file": "testing/test_pluginmanager.py",
      "line": 236
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginManager.test_consider_module_import_module",
      "type": "function",
      "name": "TestPytestPluginManager.test_consider_module_import_module",
      "file": "testing/test_pluginmanager.py",
      "line": 248
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginManager.test_consider_env_fails_to_import",
      "type": "function",
      "name": "TestPytestPluginManager.test_consider_env_fails_to_import",
      "file": "testing/test_pluginmanager.py",
      "line": 266
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginManager.test_plugin_skip",
      "type": "function",
      "name": "TestPytestPluginManager.test_plugin_skip",
      "file": "testing/test_pluginmanager.py",
      "line": 274
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginManager.test_consider_env_plugin_instantiation",
      "type": "function",
      "name": "TestPytestPluginManager.test_consider_env_plugin_instantiation",
      "file": "testing/test_pluginmanager.py",
      "line": 289
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginManager.test_pluginmanager_ENV_startup",
      "type": "function",
      "name": "TestPytestPluginManager.test_pluginmanager_ENV_startup",
      "file": "testing/test_pluginmanager.py",
      "line": 307
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginManager.test_import_plugin_importname",
      "type": "function",
      "name": "TestPytestPluginManager.test_import_plugin_importname",
      "file": "testing/test_pluginmanager.py",
      "line": 324
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginManager.test_import_plugin_dotted_name",
      "type": "function",
      "name": "TestPytestPluginManager.test_import_plugin_dotted_name",
      "file": "testing/test_pluginmanager.py",
      "line": 343
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginManager.test_consider_conftest_deps",
      "type": "function",
      "name": "TestPytestPluginManager.test_consider_conftest_deps",
      "file": "testing/test_pluginmanager.py",
      "line": 356
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginManagerBootstrapming",
      "type": "class",
      "name": "TestPytestPluginManagerBootstrapming",
      "file": "testing/test_pluginmanager.py",
      "line": 368
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginManagerBootstrapming.test_preparse_args",
      "type": "function",
      "name": "TestPytestPluginManagerBootstrapming.test_preparse_args",
      "file": "testing/test_pluginmanager.py",
      "line": 369
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginManagerBootstrapming.test_plugin_prevent_register",
      "type": "function",
      "name": "TestPytestPluginManagerBootstrapming.test_plugin_prevent_register",
      "file": "testing/test_pluginmanager.py",
      "line": 386
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginManagerBootstrapming.test_plugin_prevent_register_unregistered_alredy_registered",
      "type": "function",
      "name": "TestPytestPluginManagerBootstrapming.test_plugin_prevent_register_unregistered_alredy_registered",
      "file": "testing/test_pluginmanager.py",
      "line": 394
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginManagerBootstrapming.test_plugin_prevent_register_stepwise_on_cacheprovider_unregister",
      "type": "function",
      "name": "TestPytestPluginManagerBootstrapming.test_plugin_prevent_register_stepwise_on_cacheprovider_unregister",
      "file": "testing/test_pluginmanager.py",
      "line": 404
    },
    {
      "id": "testing/test_pluginmanager.py:TestPytestPluginManagerBootstrapming.test_blocked_plugin_can_be_used",
      "type": "function",
      "name": "TestPytestPluginManagerBootstrapming.test_blocked_plugin_can_be_used",
      "file": "testing/test_pluginmanager.py",
      "line": 422
    },
    {
      "id": "testing/test_runner.py",
      "type": "file",
      "name": "test_runner.py",
      "file": "testing/test_runner.py",
      "line": 0
    },
    {
      "id": "testing/test_runner.py:TestSetupState",
      "type": "class",
      "name": "TestSetupState",
      "file": "testing/test_runner.py",
      "line": 27
    },
    {
      "id": "testing/test_runner.py:TestSetupState.test_setup",
      "type": "function",
      "name": "TestSetupState.test_setup",
      "file": "testing/test_runner.py",
      "line": 28
    },
    {
      "id": "testing/test_runner.py:TestSetupState.test_teardown_exact_stack_empty",
      "type": "function",
      "name": "TestSetupState.test_teardown_exact_stack_empty",
      "file": "testing/test_runner.py",
      "line": 38
    },
    {
      "id": "testing/test_runner.py:TestSetupState.test_setup_fails_and_failure_is_cached",
      "type": "function",
      "name": "TestSetupState.test_setup_fails_and_failure_is_cached",
      "file": "testing/test_runner.py",
      "line": 46
    },
    {
      "id": "testing/test_runner.py:TestSetupState.test_teardown_multiple_one_fails",
      "type": "function",
      "name": "TestSetupState.test_teardown_multiple_one_fails",
      "file": "testing/test_runner.py",
      "line": 60
    },
    {
      "id": "testing/test_runner.py:TestSetupState.test_teardown_multiple_one_fails.fin1",
      "type": "function",
      "name": "TestSetupState.test_teardown_multiple_one_fails.fin1",
      "file": "testing/test_runner.py",
      "line": 63
    },
    {
      "id": "testing/test_runner.py:TestSetupState.test_teardown_multiple_one_fails.fin2",
      "type": "function",
      "name": "TestSetupState.test_teardown_multiple_one_fails.fin2",
      "file": "testing/test_runner.py",
      "line": 66
    },
    {
      "id": "testing/test_runner.py:TestSetupState.test_teardown_multiple_one_fails.fin3",
      "type": "function",
      "name": "TestSetupState.test_teardown_multiple_one_fails.fin3",
      "file": "testing/test_runner.py",
      "line": 69
    },
    {
      "id": "testing/test_runner.py:TestSetupState.test_teardown_multiple_fail",
      "type": "function",
      "name": "TestSetupState.test_teardown_multiple_fail",
      "file": "testing/test_runner.py",
      "line": 83
    },
    {
      "id": "testing/test_runner.py:TestSetupState.test_teardown_multiple_fail.fin1",
      "type": "function",
      "name": "TestSetupState.test_teardown_multiple_fail.fin1",
      "file": "testing/test_runner.py",
      "line": 84
    },
    {
      "id": "testing/test_runner.py:TestSetupState.test_teardown_multiple_fail.fin2",
      "type": "function",
      "name": "TestSetupState.test_teardown_multiple_fail.fin2",
      "file": "testing/test_runner.py",
      "line": 87
    },
    {
      "id": "testing/test_runner.py:TestSetupState.test_teardown_multiple_scopes_one_fails",
      "type": "function",
      "name": "TestSetupState.test_teardown_multiple_scopes_one_fails",
      "file": "testing/test_runner.py",
      "line": 104
    },
    {
      "id": "testing/test_runner.py:TestSetupState.test_teardown_multiple_scopes_one_fails.fin_func",
      "type": "function",
      "name": "TestSetupState.test_teardown_multiple_scopes_one_fails.fin_func",
      "file": "testing/test_runner.py",
      "line": 107
    },
    {
      "id": "testing/test_runner.py:TestSetupState.test_teardown_multiple_scopes_one_fails.fin_module",
      "type": "function",
      "name": "TestSetupState.test_teardown_multiple_scopes_one_fails.fin_module",
      "file": "testing/test_runner.py",
      "line": 110
    },
    {
      "id": "testing/test_runner.py:TestSetupState.test_teardown_multiple_scopes_several_fail",
      "type": "function",
      "name": "TestSetupState.test_teardown_multiple_scopes_several_fail",
      "file": "testing/test_runner.py",
      "line": 123
    },
    {
      "id": "testing/test_runner.py:TestSetupState.test_teardown_multiple_scopes_several_fail.raiser",
      "type": "function",
      "name": "TestSetupState.test_teardown_multiple_scopes_several_fail.raiser",
      "file": "testing/test_runner.py",
      "line": 124
    },
    {
      "id": "testing/test_runner.py:BaseFunctionalTests",
      "type": "class",
      "name": "BaseFunctionalTests",
      "file": "testing/test_runner.py",
      "line": 143
    },
    {
      "id": "testing/test_runner.py:BaseFunctionalTests.test_passfunction",
      "type": "function",
      "name": "BaseFunctionalTests.test_passfunction",
      "file": "testing/test_runner.py",
      "line": 144
    },
    {
      "id": "testing/test_runner.py:BaseFunctionalTests.test_failfunction",
      "type": "function",
      "name": "BaseFunctionalTests.test_failfunction",
      "file": "testing/test_runner.py",
      "line": 157
    },
    {
      "id": "testing/test_runner.py:BaseFunctionalTests.test_skipfunction",
      "type": "function",
      "name": "BaseFunctionalTests.test_skipfunction",
      "file": "testing/test_runner.py",
      "line": 172
    },
    {
      "id": "testing/test_runner.py:BaseFunctionalTests.test_skip_in_setup_function",
      "type": "function",
      "name": "BaseFunctionalTests.test_skip_in_setup_function",
      "file": "testing/test_runner.py",
      "line": 192
    },
    {
      "id": "testing/test_runner.py:BaseFunctionalTests.test_failure_in_setup_function",
      "type": "function",
      "name": "BaseFunctionalTests.test_failure_in_setup_function",
      "file": "testing/test_runner.py",
      "line": 213
    },
    {
      "id": "testing/test_runner.py:BaseFunctionalTests.test_failure_in_teardown_function",
      "type": "function",
      "name": "BaseFunctionalTests.test_failure_in_teardown_function",
      "file": "testing/test_runner.py",
      "line": 230
    },
    {
      "id": "testing/test_runner.py:BaseFunctionalTests.test_custom_failure_repr",
      "type": "function",
      "name": "BaseFunctionalTests.test_custom_failure_repr",
      "file": "testing/test_runner.py",
      "line": 250
    },
    {
      "id": "testing/test_runner.py:BaseFunctionalTests.test_teardown_final_returncode",
      "type": "function",
      "name": "BaseFunctionalTests.test_teardown_final_returncode",
      "file": "testing/test_runner.py",
      "line": 275
    },
    {
      "id": "testing/test_runner.py:BaseFunctionalTests.test_logstart_logfinish_hooks",
      "type": "function",
      "name": "BaseFunctionalTests.test_logstart_logfinish_hooks",
      "file": "testing/test_runner.py",
      "line": 286
    },
    {
      "id": "testing/test_runner.py:BaseFunctionalTests.test_exact_teardown_issue90",
      "type": "function",
      "name": "BaseFunctionalTests.test_exact_teardown_issue90",
      "file": "testing/test_runner.py",
      "line": 303
    },
    {
      "id": "testing/test_runner.py:BaseFunctionalTests.test_exact_teardown_issue1206",
      "type": "function",
      "name": "BaseFunctionalTests.test_exact_teardown_issue1206",
      "file": "testing/test_runner.py",
      "line": 343
    },
    {
      "id": "testing/test_runner.py:BaseFunctionalTests.test_failure_in_setup_function_ignores_custom_repr",
      "type": "function",
      "name": "BaseFunctionalTests.test_failure_in_setup_function_ignores_custom_repr",
      "file": "testing/test_runner.py",
      "line": 381
    },
    {
      "id": "testing/test_runner.py:BaseFunctionalTests.test_systemexit_does_not_bail_out",
      "type": "function",
      "name": "BaseFunctionalTests.test_systemexit_does_not_bail_out",
      "file": "testing/test_runner.py",
      "line": 411
    },
    {
      "id": "testing/test_runner.py:BaseFunctionalTests.test_exit_propagates",
      "type": "function",
      "name": "BaseFunctionalTests.test_exit_propagates",
      "file": "testing/test_runner.py",
      "line": 425
    },
    {
      "id": "testing/test_runner.py:TestExecutionNonForked",
      "type": "class",
      "name": "TestExecutionNonForked",
      "file": "testing/test_runner.py",
      "line": 440
    },
    {
      "id": "testing/test_runner.py:TestExecutionNonForked.getrunner",
      "type": "function",
      "name": "TestExecutionNonForked.getrunner",
      "file": "testing/test_runner.py",
      "line": 441
    },
    {
      "id": "testing/test_runner.py:TestExecutionNonForked.getrunner.f",
      "type": "function",
      "name": "TestExecutionNonForked.getrunner.f",
      "file": "testing/test_runner.py",
      "line": 442
    },
    {
      "id": "testing/test_runner.py:TestExecutionNonForked.test_keyboardinterrupt_propagates",
      "type": "function",
      "name": "TestExecutionNonForked.test_keyboardinterrupt_propagates",
      "file": "testing/test_runner.py",
      "line": 447
    },
    {
      "id": "testing/test_runner.py:TestSessionReports",
      "type": "class",
      "name": "TestSessionReports",
      "file": "testing/test_runner.py",
      "line": 461
    },
    {
      "id": "testing/test_runner.py:TestSessionReports.test_collect_result",
      "type": "function",
      "name": "TestSessionReports.test_collect_result",
      "file": "testing/test_runner.py",
      "line": 462
    },
    {
      "id": "testing/test_runner.py:test_report_extra_parameters",
      "type": "function",
      "name": "test_report_extra_parameters",
      "file": "testing/test_runner.py",
      "line": 496
    },
    {
      "id": "testing/test_runner.py:test_callinfo",
      "type": "function",
      "name": "test_callinfo",
      "file": "testing/test_runner.py",
      "line": 503
    },
    {
      "id": "testing/test_runner.py:test_callinfo.raise_assertion",
      "type": "function",
      "name": "test_callinfo.raise_assertion",
      "file": "testing/test_runner.py",
      "line": 519
    },
    {
      "id": "testing/test_runner.py:test_runtest_in_module_ordering",
      "type": "function",
      "name": "test_runtest_in_module_ordering",
      "file": "testing/test_runner.py",
      "line": 532
    },
    {
      "id": "testing/test_runner.py:test_outcomeexception_exceptionattributes",
      "type": "function",
      "name": "test_outcomeexception_exceptionattributes",
      "file": "testing/test_runner.py",
      "line": 564
    },
    {
      "id": "testing/test_runner.py:test_outcomeexception_passes_except_Exception",
      "type": "function",
      "name": "test_outcomeexception_passes_except_Exception",
      "file": "testing/test_runner.py",
      "line": 569
    },
    {
      "id": "testing/test_runner.py:test_pytest_exit",
      "type": "function",
      "name": "test_pytest_exit",
      "file": "testing/test_runner.py",
      "line": 577
    },
    {
      "id": "testing/test_runner.py:test_pytest_fail",
      "type": "function",
      "name": "test_pytest_fail",
      "file": "testing/test_runner.py",
      "line": 583
    },
    {
      "id": "testing/test_runner.py:test_pytest_exit_msg",
      "type": "function",
      "name": "test_pytest_exit_msg",
      "file": "testing/test_runner.py",
      "line": 590
    },
    {
      "id": "testing/test_runner.py:_strip_resource_warnings",
      "type": "function",
      "name": "_strip_resource_warnings",
      "file": "testing/test_runner.py",
      "line": 603
    },
    {
      "id": "testing/test_runner.py:test_pytest_exit_returncode",
      "type": "function",
      "name": "test_pytest_exit_returncode",
      "file": "testing/test_runner.py",
      "line": 613
    },
    {
      "id": "testing/test_runner.py:test_pytest_fail_notrace_runtest",
      "type": "function",
      "name": "test_pytest_fail_notrace_runtest",
      "file": "testing/test_runner.py",
      "line": 644
    },
    {
      "id": "testing/test_runner.py:test_pytest_fail_notrace_collection",
      "type": "function",
      "name": "test_pytest_fail_notrace_collection",
      "file": "testing/test_runner.py",
      "line": 660
    },
    {
      "id": "testing/test_runner.py:test_pytest_fail_notrace_non_ascii",
      "type": "function",
      "name": "test_pytest_fail_notrace_non_ascii",
      "file": "testing/test_runner.py",
      "line": 675
    },
    {
      "id": "testing/test_runner.py:test_pytest_no_tests_collected_exit_status",
      "type": "function",
      "name": "test_pytest_no_tests_collected_exit_status",
      "file": "testing/test_runner.py",
      "line": 693
    },
    {
      "id": "testing/test_runner.py:test_exception_printing_skip",
      "type": "function",
      "name": "test_exception_printing_skip",
      "file": "testing/test_runner.py",
      "line": 715
    },
    {
      "id": "testing/test_runner.py:test_importorskip",
      "type": "function",
      "name": "test_importorskip",
      "file": "testing/test_runner.py",
      "line": 725
    },
    {
      "id": "testing/test_runner.py:test_importorskip.f",
      "type": "function",
      "name": "test_importorskip.f",
      "file": "testing/test_runner.py",
      "line": 728
    },
    {
      "id": "testing/test_runner.py:test_importorskip_imports_last_module_part",
      "type": "function",
      "name": "test_importorskip_imports_last_module_part",
      "file": "testing/test_runner.py",
      "line": 758
    },
    {
      "id": "testing/test_runner.py:test_importorskip_dev_module",
      "type": "function",
      "name": "test_importorskip_dev_module",
      "file": "testing/test_runner.py",
      "line": 763
    },
    {
      "id": "testing/test_runner.py:test_importorskip_module_level",
      "type": "function",
      "name": "test_importorskip_module_level",
      "file": "testing/test_runner.py",
      "line": 776
    },
    {
      "id": "testing/test_runner.py:test_importorskip_custom_reason",
      "type": "function",
      "name": "test_importorskip_custom_reason",
      "file": "testing/test_runner.py",
      "line": 791
    },
    {
      "id": "testing/test_runner.py:test_pytest_cmdline_main",
      "type": "function",
      "name": "test_pytest_cmdline_main",
      "file": "testing/test_runner.py",
      "line": 807
    },
    {
      "id": "testing/test_runner.py:test_unicode_in_longrepr",
      "type": "function",
      "name": "test_unicode_in_longrepr",
      "file": "testing/test_runner.py",
      "line": 825
    },
    {
      "id": "testing/test_runner.py:test_failure_in_setup",
      "type": "function",
      "name": "test_failure_in_setup",
      "file": "testing/test_runner.py",
      "line": 848
    },
    {
      "id": "testing/test_runner.py:test_makereport_getsource",
      "type": "function",
      "name": "test_makereport_getsource",
      "file": "testing/test_runner.py",
      "line": 861
    },
    {
      "id": "testing/test_runner.py:test_makereport_getsource_dynamic_code",
      "type": "function",
      "name": "test_makereport_getsource_dynamic_code",
      "file": "testing/test_runner.py",
      "line": 874
    },
    {
      "id": "testing/test_runner.py:test_makereport_getsource_dynamic_code.findsource",
      "type": "function",
      "name": "test_makereport_getsource_dynamic_code.findsource",
      "file": "testing/test_runner.py",
      "line": 882
    },
    {
      "id": "testing/test_runner.py:test_store_except_info_on_error",
      "type": "function",
      "name": "test_store_except_info_on_error",
      "file": "testing/test_runner.py",
      "line": 907
    },
    {
      "id": "testing/test_runner.py:test_store_except_info_on_error.ItemMightRaise",
      "type": "class",
      "name": "test_store_except_info_on_error.ItemMightRaise",
      "file": "testing/test_runner.py",
      "line": 912
    },
    {
      "id": "testing/test_runner.py:test_store_except_info_on_error.ItemMightRaise.runtest",
      "type": "function",
      "name": "test_store_except_info_on_error.ItemMightRaise.runtest",
      "file": "testing/test_runner.py",
      "line": 916
    },
    {
      "id": "testing/test_runner.py:test_current_test_env_var",
      "type": "function",
      "name": "test_current_test_env_var",
      "file": "testing/test_runner.py",
      "line": 938
    },
    {
      "id": "testing/test_runner.py:TestReportContents",
      "type": "class",
      "name": "TestReportContents",
      "file": "testing/test_runner.py",
      "line": 970
    },
    {
      "id": "testing/test_runner.py:TestReportContents.getrunner",
      "type": "function",
      "name": "TestReportContents.getrunner",
      "file": "testing/test_runner.py",
      "line": 973
    },
    {
      "id": "testing/test_runner.py:TestReportContents.test_longreprtext_pass",
      "type": "function",
      "name": "TestReportContents.test_longreprtext_pass",
      "file": "testing/test_runner.py",
      "line": 976
    },
    {
      "id": "testing/test_runner.py:TestReportContents.test_longreprtext_skip",
      "type": "function",
      "name": "TestReportContents.test_longreprtext_skip",
      "file": "testing/test_runner.py",
      "line": 986
    },
    {
      "id": "testing/test_runner.py:TestReportContents.test_longreprtext_collect_skip",
      "type": "function",
      "name": "TestReportContents.test_longreprtext_collect_skip",
      "file": "testing/test_runner.py",
      "line": 999
    },
    {
      "id": "testing/test_runner.py:TestReportContents.test_longreprtext_failure",
      "type": "function",
      "name": "TestReportContents.test_longreprtext_failure",
      "file": "testing/test_runner.py",
      "line": 1013
    },
    {
      "id": "testing/test_runner.py:TestReportContents.test_captured_text",
      "type": "function",
      "name": "TestReportContents.test_captured_text",
      "file": "testing/test_runner.py",
      "line": 1024
    },
    {
      "id": "testing/test_runner.py:TestReportContents.test_no_captured_text",
      "type": "function",
      "name": "TestReportContents.test_no_captured_text",
      "file": "testing/test_runner.py",
      "line": 1054
    },
    {
      "id": "testing/test_runner.py:TestReportContents.test_longrepr_type",
      "type": "function",
      "name": "TestReportContents.test_longrepr_type",
      "file": "testing/test_runner.py",
      "line": 1065
    },
    {
      "id": "testing/test_runner.py:test_outcome_exception_bad_msg",
      "type": "function",
      "name": "test_outcome_exception_bad_msg",
      "file": "testing/test_runner.py",
      "line": 1077
    },
    {
      "id": "testing/test_runner.py:test_outcome_exception_bad_msg.func",
      "type": "function",
      "name": "test_outcome_exception_bad_msg.func",
      "file": "testing/test_runner.py",
      "line": 1080
    },
    {
      "id": "testing/test_monkeypatch.py",
      "type": "file",
      "name": "test_monkeypatch.py",
      "file": "testing/test_monkeypatch.py",
      "line": 0
    },
    {
      "id": "testing/test_monkeypatch.py:mp",
      "type": "function",
      "name": "mp",
      "file": "testing/test_monkeypatch.py",
      "line": 16
    },
    {
      "id": "testing/test_monkeypatch.py:test_setattr",
      "type": "function",
      "name": "test_setattr",
      "file": "testing/test_monkeypatch.py",
      "line": 24
    },
    {
      "id": "testing/test_monkeypatch.py:test_setattr.A",
      "type": "class",
      "name": "test_setattr.A",
      "file": "testing/test_monkeypatch.py",
      "line": 25
    },
    {
      "id": "testing/test_monkeypatch.py:TestSetattrWithImportPath",
      "type": "class",
      "name": "TestSetattrWithImportPath",
      "file": "testing/test_monkeypatch.py",
      "line": 51
    },
    {
      "id": "testing/test_monkeypatch.py:TestSetattrWithImportPath.test_string_expression",
      "type": "function",
      "name": "TestSetattrWithImportPath.test_string_expression",
      "file": "testing/test_monkeypatch.py",
      "line": 52
    },
    {
      "id": "testing/test_monkeypatch.py:TestSetattrWithImportPath.test_string_expression_class",
      "type": "function",
      "name": "TestSetattrWithImportPath.test_string_expression_class",
      "file": "testing/test_monkeypatch.py",
      "line": 57
    },
    {
      "id": "testing/test_monkeypatch.py:TestSetattrWithImportPath.test_unicode_string",
      "type": "function",
      "name": "TestSetattrWithImportPath.test_unicode_string",
      "file": "testing/test_monkeypatch.py",
      "line": 64
    },
    {
      "id": "testing/test_monkeypatch.py:TestSetattrWithImportPath.test_wrong_target",
      "type": "function",
      "name": "TestSetattrWithImportPath.test_wrong_target",
      "file": "testing/test_monkeypatch.py",
      "line": 72
    },
    {
      "id": "testing/test_monkeypatch.py:TestSetattrWithImportPath.test_unknown_import",
      "type": "function",
      "name": "TestSetattrWithImportPath.test_unknown_import",
      "file": "testing/test_monkeypatch.py",
      "line": 76
    },
    {
      "id": "testing/test_monkeypatch.py:TestSetattrWithImportPath.test_unknown_attr",
      "type": "function",
      "name": "TestSetattrWithImportPath.test_unknown_attr",
      "file": "testing/test_monkeypatch.py",
      "line": 80
    },
    {
      "id": "testing/test_monkeypatch.py:TestSetattrWithImportPath.test_unknown_attr_non_raising",
      "type": "function",
      "name": "TestSetattrWithImportPath.test_unknown_attr_non_raising",
      "file": "testing/test_monkeypatch.py",
      "line": 84
    },
    {
      "id": "testing/test_monkeypatch.py:TestSetattrWithImportPath.test_delattr",
      "type": "function",
      "name": "TestSetattrWithImportPath.test_delattr",
      "file": "testing/test_monkeypatch.py",
      "line": 90
    },
    {
      "id": "testing/test_monkeypatch.py:test_delattr",
      "type": "function",
      "name": "test_delattr",
      "file": "testing/test_monkeypatch.py",
      "line": 98
    },
    {
      "id": "testing/test_monkeypatch.py:test_delattr.A",
      "type": "class",
      "name": "test_delattr.A",
      "file": "testing/test_monkeypatch.py",
      "line": 99
    },
    {
      "id": "testing/test_monkeypatch.py:test_setitem",
      "type": "function",
      "name": "test_setitem",
      "file": "testing/test_monkeypatch.py",
      "line": 118
    },
    {
      "id": "testing/test_monkeypatch.py:test_setitem_deleted_meanwhile",
      "type": "function",
      "name": "test_setitem_deleted_meanwhile",
      "file": "testing/test_monkeypatch.py",
      "line": 136
    },
    {
      "id": "testing/test_monkeypatch.py:test_setenv_deleted_meanwhile",
      "type": "function",
      "name": "test_setenv_deleted_meanwhile",
      "file": "testing/test_monkeypatch.py",
      "line": 146
    },
    {
      "id": "testing/test_monkeypatch.py:test_delitem",
      "type": "function",
      "name": "test_delitem",
      "file": "testing/test_monkeypatch.py",
      "line": 161
    },
    {
      "id": "testing/test_monkeypatch.py:test_setenv",
      "type": "function",
      "name": "test_setenv",
      "file": "testing/test_monkeypatch.py",
      "line": 178
    },
    {
      "id": "testing/test_monkeypatch.py:test_delenv",
      "type": "function",
      "name": "test_delenv",
      "file": "testing/test_monkeypatch.py",
      "line": 189
    },
    {
      "id": "testing/test_monkeypatch.py:TestEnvironWarnings",
      "type": "class",
      "name": "TestEnvironWarnings",
      "file": "testing/test_monkeypatch.py",
      "line": 210
    },
    {
      "id": "testing/test_monkeypatch.py:TestEnvironWarnings.test_setenv_non_str_warning",
      "type": "function",
      "name": "TestEnvironWarnings.test_setenv_non_str_warning",
      "file": "testing/test_monkeypatch.py",
      "line": 219
    },
    {
      "id": "testing/test_monkeypatch.py:test_setenv_prepend",
      "type": "function",
      "name": "test_setenv_prepend",
      "file": "testing/test_monkeypatch.py",
      "line": 229
    },
    {
      "id": "testing/test_monkeypatch.py:test_monkeypatch_plugin",
      "type": "function",
      "name": "test_monkeypatch_plugin",
      "file": "testing/test_monkeypatch.py",
      "line": 240
    },
    {
      "id": "testing/test_monkeypatch.py:test_syspath_prepend",
      "type": "function",
      "name": "test_syspath_prepend",
      "file": "testing/test_monkeypatch.py",
      "line": 251
    },
    {
      "id": "testing/test_monkeypatch.py:test_syspath_prepend_double_undo",
      "type": "function",
      "name": "test_syspath_prepend_double_undo",
      "file": "testing/test_monkeypatch.py",
      "line": 263
    },
    {
      "id": "testing/test_monkeypatch.py:test_chdir_with_path_local",
      "type": "function",
      "name": "test_chdir_with_path_local",
      "file": "testing/test_monkeypatch.py",
      "line": 275
    },
    {
      "id": "testing/test_monkeypatch.py:test_chdir_with_str",
      "type": "function",
      "name": "test_chdir_with_str",
      "file": "testing/test_monkeypatch.py",
      "line": 280
    },
    {
      "id": "testing/test_monkeypatch.py:test_chdir_undo",
      "type": "function",
      "name": "test_chdir_undo",
      "file": "testing/test_monkeypatch.py",
      "line": 285
    },
    {
      "id": "testing/test_monkeypatch.py:test_chdir_double_undo",
      "type": "function",
      "name": "test_chdir_double_undo",
      "file": "testing/test_monkeypatch.py",
      "line": 292
    },
    {
      "id": "testing/test_monkeypatch.py:test_issue185_time_breaks",
      "type": "function",
      "name": "test_issue185_time_breaks",
      "file": "testing/test_monkeypatch.py",
      "line": 300
    },
    {
      "id": "testing/test_monkeypatch.py:test_importerror",
      "type": "function",
      "name": "test_importerror",
      "file": "testing/test_monkeypatch.py",
      "line": 318
    },
    {
      "id": "testing/test_monkeypatch.py:Sample",
      "type": "class",
      "name": "Sample",
      "file": "testing/test_monkeypatch.py",
      "line": 347
    },
    {
      "id": "testing/test_monkeypatch.py:Sample.hello",
      "type": "function",
      "name": "Sample.hello",
      "file": "testing/test_monkeypatch.py",
      "line": 349
    },
    {
      "id": "testing/test_monkeypatch.py:SampleInherit",
      "type": "class",
      "name": "SampleInherit",
      "file": "testing/test_monkeypatch.py",
      "line": 353
    },
    {
      "id": "testing/test_monkeypatch.py:test_issue156_undo_staticmethod",
      "type": "function",
      "name": "test_issue156_undo_staticmethod",
      "file": "testing/test_monkeypatch.py",
      "line": 362
    },
    {
      "id": "testing/test_monkeypatch.py:test_undo_class_descriptors_delattr",
      "type": "function",
      "name": "test_undo_class_descriptors_delattr",
      "file": "testing/test_monkeypatch.py",
      "line": 372
    },
    {
      "id": "testing/test_monkeypatch.py:test_undo_class_descriptors_delattr.SampleParent",
      "type": "class",
      "name": "test_undo_class_descriptors_delattr.SampleParent",
      "file": "testing/test_monkeypatch.py",
      "line": 373
    },
    {
      "id": "testing/test_monkeypatch.py:test_undo_class_descriptors_delattr.SampleParent.hello",
      "type": "function",
      "name": "test_undo_class_descriptors_delattr.SampleParent.hello",
      "file": "testing/test_monkeypatch.py",
      "line": 375
    },
    {
      "id": "testing/test_monkeypatch.py:test_undo_class_descriptors_delattr.SampleParent.world",
      "type": "function",
      "name": "test_undo_class_descriptors_delattr.SampleParent.world",
      "file": "testing/test_monkeypatch.py",
      "line": 379
    },
    {
      "id": "testing/test_monkeypatch.py:test_undo_class_descriptors_delattr.SampleChild",
      "type": "class",
      "name": "test_undo_class_descriptors_delattr.SampleChild",
      "file": "testing/test_monkeypatch.py",
      "line": 382
    },
    {
      "id": "testing/test_monkeypatch.py:test_issue1338_name_resolving",
      "type": "function",
      "name": "test_issue1338_name_resolving",
      "file": "testing/test_monkeypatch.py",
      "line": 399
    },
    {
      "id": "testing/test_monkeypatch.py:test_context",
      "type": "function",
      "name": "test_context",
      "file": "testing/test_monkeypatch.py",
      "line": 408
    },
    {
      "id": "testing/test_monkeypatch.py:test_context_classmethod",
      "type": "function",
      "name": "test_context_classmethod",
      "file": "testing/test_monkeypatch.py",
      "line": 420
    },
    {
      "id": "testing/test_monkeypatch.py:test_context_classmethod.A",
      "type": "class",
      "name": "test_context_classmethod.A",
      "file": "testing/test_monkeypatch.py",
      "line": 421
    },
    {
      "id": "testing/test_monkeypatch.py:test_syspath_prepend_with_namespace_packages",
      "type": "function",
      "name": "test_syspath_prepend_with_namespace_packages",
      "file": "testing/test_monkeypatch.py",
      "line": 431
    },
    {
      "id": "testing/test_doctest.py",
      "type": "file",
      "name": "test_doctest.py",
      "file": "testing/test_doctest.py",
      "line": 0
    },
    {
      "id": "testing/test_doctest.py:TestDoctests",
      "type": "class",
      "name": "TestDoctests",
      "file": "testing/test_doctest.py",
      "line": 20
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_collect_testtextfile",
      "type": "function",
      "name": "TestDoctests.test_collect_testtextfile",
      "file": "testing/test_doctest.py",
      "line": 21
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_collect_module_empty",
      "type": "function",
      "name": "TestDoctests.test_collect_module_empty",
      "file": "testing/test_doctest.py",
      "line": 42
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_collect_module_single_modulelevel_doctest",
      "type": "function",
      "name": "TestDoctests.test_collect_module_single_modulelevel_doctest",
      "file": "testing/test_doctest.py",
      "line": 48
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_collect_module_two_doctest_one_modulelevel",
      "type": "function",
      "name": "TestDoctests.test_collect_module_two_doctest_one_modulelevel",
      "file": "testing/test_doctest.py",
      "line": 56
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_collect_module_two_doctest_no_modulelevel",
      "type": "function",
      "name": "TestDoctests.test_collect_module_two_doctest_no_modulelevel",
      "file": "testing/test_doctest.py",
      "line": 73
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_simple_doctestfile",
      "type": "function",
      "name": "TestDoctests.test_simple_doctestfile",
      "file": "testing/test_doctest.py",
      "line": 105
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_importmode",
      "type": "function",
      "name": "TestDoctests.test_importmode",
      "file": "testing/test_doctest.py",
      "line": 116
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_new_pattern",
      "type": "function",
      "name": "TestDoctests.test_new_pattern",
      "file": "testing/test_doctest.py",
      "line": 138
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_multiple_patterns",
      "type": "function",
      "name": "TestDoctests.test_multiple_patterns",
      "file": "testing/test_doctest.py",
      "line": 149
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_encoding",
      "type": "function",
      "name": "TestDoctests.test_encoding",
      "file": "testing/test_doctest.py",
      "line": 182
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_doctest_unexpected_exception",
      "type": "function",
      "name": "TestDoctests.test_doctest_unexpected_exception",
      "file": "testing/test_doctest.py",
      "line": 205
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_doctest_outcomes",
      "type": "function",
      "name": "TestDoctests.test_doctest_outcomes",
      "file": "testing/test_doctest.py",
      "line": 238
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_docstring_partial_context_around_error",
      "type": "function",
      "name": "TestDoctests.test_docstring_partial_context_around_error",
      "file": "testing/test_doctest.py",
      "line": 274
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_docstring_full_context_around_error",
      "type": "function",
      "name": "TestDoctests.test_docstring_full_context_around_error",
      "file": "testing/test_doctest.py",
      "line": 318
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_doctest_linedata_missing",
      "type": "function",
      "name": "TestDoctests.test_doctest_linedata_missing",
      "file": "testing/test_doctest.py",
      "line": 348
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_doctest_linedata_on_property",
      "type": "function",
      "name": "TestDoctests.test_doctest_linedata_on_property",
      "file": "testing/test_doctest.py",
      "line": 368
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_doctest_no_linedata_on_overriden_property",
      "type": "function",
      "name": "TestDoctests.test_doctest_no_linedata_on_overriden_property",
      "file": "testing/test_doctest.py",
      "line": 398
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_doctest_unex_importerror_only_txt",
      "type": "function",
      "name": "TestDoctests.test_doctest_unex_importerror_only_txt",
      "file": "testing/test_doctest.py",
      "line": 429
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_doctest_unex_importerror_with_module",
      "type": "function",
      "name": "TestDoctests.test_doctest_unex_importerror_with_module",
      "file": "testing/test_doctest.py",
      "line": 446
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_doctestmodule",
      "type": "function",
      "name": "TestDoctests.test_doctestmodule",
      "file": "testing/test_doctest.py",
      "line": 471
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_doctestmodule_external_and_issue116",
      "type": "function",
      "name": "TestDoctests.test_doctestmodule_external_and_issue116",
      "file": "testing/test_doctest.py",
      "line": 485
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_txtfile_failing",
      "type": "function",
      "name": "TestDoctests.test_txtfile_failing",
      "file": "testing/test_doctest.py",
      "line": 513
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_txtfile_with_fixtures",
      "type": "function",
      "name": "TestDoctests.test_txtfile_with_fixtures",
      "file": "testing/test_doctest.py",
      "line": 534
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_txtfile_with_usefixtures_in_ini",
      "type": "function",
      "name": "TestDoctests.test_txtfile_with_usefixtures_in_ini",
      "file": "testing/test_doctest.py",
      "line": 545
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_doctestmodule_with_fixtures",
      "type": "function",
      "name": "TestDoctests.test_doctestmodule_with_fixtures",
      "file": "testing/test_doctest.py",
      "line": 571
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_doctestmodule_three_tests",
      "type": "function",
      "name": "TestDoctests.test_doctestmodule_three_tests",
      "file": "testing/test_doctest.py",
      "line": 584
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_doctestmodule_two_tests_one_fail",
      "type": "function",
      "name": "TestDoctests.test_doctestmodule_two_tests_one_fail",
      "file": "testing/test_doctest.py",
      "line": 611
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_ignored_whitespace",
      "type": "function",
      "name": "TestDoctests.test_ignored_whitespace",
      "file": "testing/test_doctest.py",
      "line": 632
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_non_ignored_whitespace",
      "type": "function",
      "name": "TestDoctests.test_non_ignored_whitespace",
      "file": "testing/test_doctest.py",
      "line": 653
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_ignored_whitespace_glob",
      "type": "function",
      "name": "TestDoctests.test_ignored_whitespace_glob",
      "file": "testing/test_doctest.py",
      "line": 674
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_non_ignored_whitespace_glob",
      "type": "function",
      "name": "TestDoctests.test_non_ignored_whitespace_glob",
      "file": "testing/test_doctest.py",
      "line": 691
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_contains_unicode",
      "type": "function",
      "name": "TestDoctests.test_contains_unicode",
      "file": "testing/test_doctest.py",
      "line": 708
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_ignore_import_errors_on_doctest",
      "type": "function",
      "name": "TestDoctests.test_ignore_import_errors_on_doctest",
      "file": "testing/test_doctest.py",
      "line": 722
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_junit_report_for_doctest",
      "type": "function",
      "name": "TestDoctests.test_junit_report_for_doctest",
      "file": "testing/test_doctest.py",
      "line": 741
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_unicode_doctest",
      "type": "function",
      "name": "TestDoctests.test_unicode_doctest",
      "file": "testing/test_doctest.py",
      "line": 756
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_unicode_doctest_module",
      "type": "function",
      "name": "TestDoctests.test_unicode_doctest_module",
      "file": "testing/test_doctest.py",
      "line": 778
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_print_unicode_value",
      "type": "function",
      "name": "TestDoctests.test_print_unicode_value",
      "file": "testing/test_doctest.py",
      "line": 796
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_reportinfo",
      "type": "function",
      "name": "TestDoctests.test_reportinfo",
      "file": "testing/test_doctest.py",
      "line": 812
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_valid_setup_py",
      "type": "function",
      "name": "TestDoctests.test_valid_setup_py",
      "file": "testing/test_doctest.py",
      "line": 828
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_main_py_does_not_cause_import_errors",
      "type": "function",
      "name": "TestDoctests.test_main_py_does_not_cause_import_errors",
      "file": "testing/test_doctest.py",
      "line": 847
    },
    {
      "id": "testing/test_doctest.py:TestDoctests.test_invalid_setup_py",
      "type": "function",
      "name": "TestDoctests.test_invalid_setup_py",
      "file": "testing/test_doctest.py",
      "line": 852
    },
    {
      "id": "testing/test_doctest.py:TestLiterals",
      "type": "class",
      "name": "TestLiterals",
      "file": "testing/test_doctest.py",
      "line": 867
    },
    {
      "id": "testing/test_doctest.py:TestLiterals.test_allow_unicode",
      "type": "function",
      "name": "TestLiterals.test_allow_unicode",
      "file": "testing/test_doctest.py",
      "line": 869
    },
    {
      "id": "testing/test_doctest.py:TestLiterals.test_allow_bytes",
      "type": "function",
      "name": "TestLiterals.test_allow_bytes",
      "file": "testing/test_doctest.py",
      "line": 908
    },
    {
      "id": "testing/test_doctest.py:TestLiterals.test_unicode_string",
      "type": "function",
      "name": "TestLiterals.test_unicode_string",
      "file": "testing/test_doctest.py",
      "line": 946
    },
    {
      "id": "testing/test_doctest.py:TestLiterals.test_bytes_literal",
      "type": "function",
      "name": "TestLiterals.test_bytes_literal",
      "file": "testing/test_doctest.py",
      "line": 960
    },
    {
      "id": "testing/test_doctest.py:TestLiterals.test_number_re",
      "type": "function",
      "name": "TestLiterals.test_number_re",
      "file": "testing/test_doctest.py",
      "line": 973
    },
    {
      "id": "testing/test_doctest.py:TestLiterals.test_number_precision",
      "type": "function",
      "name": "TestLiterals.test_number_precision",
      "file": "testing/test_doctest.py",
      "line": 1004
    },
    {
      "id": "testing/test_doctest.py:TestLiterals.test_number_non_matches",
      "type": "function",
      "name": "TestLiterals.test_number_non_matches",
      "file": "testing/test_doctest.py",
      "line": 1098
    },
    {
      "id": "testing/test_doctest.py:TestLiterals.test_number_and_allow_unicode",
      "type": "function",
      "name": "TestLiterals.test_number_and_allow_unicode",
      "file": "testing/test_doctest.py",
      "line": 1110
    },
    {
      "id": "testing/test_doctest.py:TestDoctestSkips",
      "type": "class",
      "name": "TestDoctestSkips",
      "file": "testing/test_doctest.py",
      "line": 1123
    },
    {
      "id": "testing/test_doctest.py:TestDoctestSkips.makedoctest",
      "type": "function",
      "name": "TestDoctestSkips.makedoctest",
      "file": "testing/test_doctest.py",
      "line": 1130
    },
    {
      "id": "testing/test_doctest.py:TestDoctestSkips.makedoctest.makeit",
      "type": "function",
      "name": "TestDoctestSkips.makedoctest.makeit",
      "file": "testing/test_doctest.py",
      "line": 1131
    },
    {
      "id": "testing/test_doctest.py:TestDoctestSkips.test_one_skipped",
      "type": "function",
      "name": "TestDoctestSkips.test_one_skipped",
      "file": "testing/test_doctest.py",
      "line": 1141
    },
    {
      "id": "testing/test_doctest.py:TestDoctestSkips.test_one_skipped_failed",
      "type": "function",
      "name": "TestDoctestSkips.test_one_skipped_failed",
      "file": "testing/test_doctest.py",
      "line": 1153
    },
    {
      "id": "testing/test_doctest.py:TestDoctestSkips.test_all_skipped",
      "type": "function",
      "name": "TestDoctestSkips.test_all_skipped",
      "file": "testing/test_doctest.py",
      "line": 1165
    },
    {
      "id": "testing/test_doctest.py:TestDoctestSkips.test_vacuous_all_skipped",
      "type": "function",
      "name": "TestDoctestSkips.test_vacuous_all_skipped",
      "file": "testing/test_doctest.py",
      "line": 1177
    },
    {
      "id": "testing/test_doctest.py:TestDoctestSkips.test_continue_on_failure",
      "type": "function",
      "name": "TestDoctestSkips.test_continue_on_failure",
      "file": "testing/test_doctest.py",
      "line": 1182
    },
    {
      "id": "testing/test_doctest.py:TestDoctestSkips.test_skipping_wrapped_test",
      "type": "function",
      "name": "TestDoctestSkips.test_skipping_wrapped_test",
      "file": "testing/test_doctest.py",
      "line": 1205
    },
    {
      "id": "testing/test_doctest.py:TestDoctestAutoUseFixtures",
      "type": "class",
      "name": "TestDoctestAutoUseFixtures",
      "file": "testing/test_doctest.py",
      "line": 1241
    },
    {
      "id": "testing/test_doctest.py:TestDoctestAutoUseFixtures.test_doctest_module_session_fixture",
      "type": "function",
      "name": "TestDoctestAutoUseFixtures.test_doctest_module_session_fixture",
      "file": "testing/test_doctest.py",
      "line": 1244
    },
    {
      "id": "testing/test_doctest.py:TestDoctestAutoUseFixtures.test_fixture_scopes",
      "type": "function",
      "name": "TestDoctestAutoUseFixtures.test_fixture_scopes",
      "file": "testing/test_doctest.py",
      "line": 1281
    },
    {
      "id": "testing/test_doctest.py:TestDoctestAutoUseFixtures.test_fixture_module_doctest_scopes",
      "type": "function",
      "name": "TestDoctestAutoUseFixtures.test_fixture_module_doctest_scopes",
      "file": "testing/test_doctest.py",
      "line": 1315
    },
    {
      "id": "testing/test_doctest.py:TestDoctestAutoUseFixtures.test_auto_use_request_attributes",
      "type": "function",
      "name": "TestDoctestAutoUseFixtures.test_auto_use_request_attributes",
      "file": "testing/test_doctest.py",
      "line": 1351
    },
    {
      "id": "testing/test_doctest.py:TestDoctestNamespaceFixture",
      "type": "class",
      "name": "TestDoctestNamespaceFixture",
      "file": "testing/test_doctest.py",
      "line": 1383
    },
    {
      "id": "testing/test_doctest.py:TestDoctestNamespaceFixture.test_namespace_doctestfile",
      "type": "function",
      "name": "TestDoctestNamespaceFixture.test_namespace_doctestfile",
      "file": "testing/test_doctest.py",
      "line": 1387
    },
    {
      "id": "testing/test_doctest.py:TestDoctestNamespaceFixture.test_namespace_pyfile",
      "type": "function",
      "name": "TestDoctestNamespaceFixture.test_namespace_pyfile",
      "file": "testing/test_doctest.py",
      "line": 1414
    },
    {
      "id": "testing/test_doctest.py:TestDoctestReportingOption",
      "type": "class",
      "name": "TestDoctestReportingOption",
      "file": "testing/test_doctest.py",
      "line": 1444
    },
    {
      "id": "testing/test_doctest.py:TestDoctestReportingOption._run_doctest_report",
      "type": "function",
      "name": "TestDoctestReportingOption._run_doctest_report",
      "file": "testing/test_doctest.py",
      "line": 1445
    },
    {
      "id": "testing/test_doctest.py:TestDoctestReportingOption.test_doctest_report_udiff",
      "type": "function",
      "name": "TestDoctestReportingOption.test_doctest_report_udiff",
      "file": "testing/test_doctest.py",
      "line": 1465
    },
    {
      "id": "testing/test_doctest.py:TestDoctestReportingOption.test_doctest_report_cdiff",
      "type": "function",
      "name": "TestDoctestReportingOption.test_doctest_report_cdiff",
      "file": "testing/test_doctest.py",
      "line": 1471
    },
    {
      "id": "testing/test_doctest.py:TestDoctestReportingOption.test_doctest_report_ndiff",
      "type": "function",
      "name": "TestDoctestReportingOption.test_doctest_report_ndiff",
      "file": "testing/test_doctest.py",
      "line": 1487
    },
    {
      "id": "testing/test_doctest.py:TestDoctestReportingOption.test_doctest_report_none_or_only_first_failure",
      "type": "function",
      "name": "TestDoctestReportingOption.test_doctest_report_none_or_only_first_failure",
      "file": "testing/test_doctest.py",
      "line": 1502
    },
    {
      "id": "testing/test_doctest.py:TestDoctestReportingOption.test_doctest_report_invalid",
      "type": "function",
      "name": "TestDoctestReportingOption.test_doctest_report_invalid",
      "file": "testing/test_doctest.py",
      "line": 1519
    },
    {
      "id": "testing/test_doctest.py:test_doctest_mock_objects_dont_recurse_missbehaved",
      "type": "function",
      "name": "test_doctest_mock_objects_dont_recurse_missbehaved",
      "file": "testing/test_doctest.py",
      "line": 1529
    },
    {
      "id": "testing/test_doctest.py:Broken",
      "type": "class",
      "name": "Broken",
      "file": "testing/test_doctest.py",
      "line": 1547
    },
    {
      "id": "testing/test_doctest.py:Broken.__getattr__",
      "type": "function",
      "name": "Broken.__getattr__",
      "file": "testing/test_doctest.py",
      "line": 1548
    },
    {
      "id": "testing/test_doctest.py:test_warning_on_unwrap_of_broken_object",
      "type": "function",
      "name": "test_warning_on_unwrap_of_broken_object",
      "file": "testing/test_doctest.py",
      "line": 1555
    },
    {
      "id": "testing/test_doctest.py:test_is_setup_py_not_named_setup_py",
      "type": "function",
      "name": "test_is_setup_py_not_named_setup_py",
      "file": "testing/test_doctest.py",
      "line": 1570
    },
    {
      "id": "testing/test_doctest.py:test_is_setup_py_is_a_setup_py",
      "type": "function",
      "name": "test_is_setup_py_is_a_setup_py",
      "file": "testing/test_doctest.py",
      "line": 1579
    },
    {
      "id": "testing/test_doctest.py:test_is_setup_py_different_encoding",
      "type": "function",
      "name": "test_is_setup_py_different_encoding",
      "file": "testing/test_doctest.py",
      "line": 1586
    },
    {
      "id": "testing/test_doctest.py:test_is_main_py",
      "type": "function",
      "name": "test_is_main_py",
      "file": "testing/test_doctest.py",
      "line": 1599
    },
    {
      "id": "testing/test_compat.py",
      "type": "file",
      "name": "test_compat.py",
      "file": "testing/test_compat.py",
      "line": 0
    },
    {
      "id": "testing/test_compat.py:test_is_generator",
      "type": "function",
      "name": "test_is_generator",
      "file": "testing/test_compat.py",
      "line": 23
    },
    {
      "id": "testing/test_compat.py:test_is_generator.zap",
      "type": "function",
      "name": "test_is_generator.zap",
      "file": "testing/test_compat.py",
      "line": 24
    },
    {
      "id": "testing/test_compat.py:test_is_generator.foo",
      "type": "function",
      "name": "test_is_generator.foo",
      "file": "testing/test_compat.py",
      "line": 27
    },
    {
      "id": "testing/test_compat.py:test_real_func_loop_limit",
      "type": "function",
      "name": "test_real_func_loop_limit",
      "file": "testing/test_compat.py",
      "line": 34
    },
    {
      "id": "testing/test_compat.py:test_real_func_loop_limit.Evil",
      "type": "class",
      "name": "test_real_func_loop_limit.Evil",
      "file": "testing/test_compat.py",
      "line": 35
    },
    {
      "id": "testing/test_compat.py:test_real_func_loop_limit.Evil.__repr__",
      "type": "function",
      "name": "test_real_func_loop_limit.Evil.__repr__",
      "file": "testing/test_compat.py",
      "line": 39
    },
    {
      "id": "testing/test_compat.py:test_real_func_loop_limit.Evil.__getattr__",
      "type": "function",
      "name": "test_real_func_loop_limit.Evil.__getattr__",
      "file": "testing/test_compat.py",
      "line": 42
    },
    {
      "id": "testing/test_compat.py:test_get_real_func",
      "type": "function",
      "name": "test_get_real_func",
      "file": "testing/test_compat.py",
      "line": 60
    },
    {
      "id": "testing/test_compat.py:test_get_real_func.decorator",
      "type": "function",
      "name": "test_get_real_func.decorator",
      "file": "testing/test_compat.py",
      "line": 63
    },
    {
      "id": "testing/test_compat.py:test_get_real_func.decorator.inner",
      "type": "function",
      "name": "test_get_real_func.decorator.inner",
      "file": "testing/test_compat.py",
      "line": 65
    },
    {
      "id": "testing/test_compat.py:test_get_real_func.func",
      "type": "function",
      "name": "test_get_real_func.func",
      "file": "testing/test_compat.py",
      "line": 70
    },
    {
      "id": "testing/test_compat.py:test_get_real_func_partial",
      "type": "function",
      "name": "test_get_real_func_partial",
      "file": "testing/test_compat.py",
      "line": 85
    },
    {
      "id": "testing/test_compat.py:test_get_real_func_partial.foo",
      "type": "function",
      "name": "test_get_real_func_partial.foo",
      "file": "testing/test_compat.py",
      "line": 88
    },
    {
      "id": "testing/test_compat.py:test_is_generator_asyncio",
      "type": "function",
      "name": "test_is_generator_asyncio",
      "file": "testing/test_compat.py",
      "line": 96
    },
    {
      "id": "testing/test_compat.py:test_is_generator_async_syntax",
      "type": "function",
      "name": "test_is_generator_async_syntax",
      "file": "testing/test_compat.py",
      "line": 115
    },
    {
      "id": "testing/test_compat.py:test_is_generator_async_gen_syntax",
      "type": "function",
      "name": "test_is_generator_async_gen_syntax",
      "file": "testing/test_compat.py",
      "line": 134
    },
    {
      "id": "testing/test_compat.py:ErrorsHelper",
      "type": "class",
      "name": "ErrorsHelper",
      "file": "testing/test_compat.py",
      "line": 154
    },
    {
      "id": "testing/test_compat.py:ErrorsHelper.raise_baseexception",
      "type": "function",
      "name": "ErrorsHelper.raise_baseexception",
      "file": "testing/test_compat.py",
      "line": 156
    },
    {
      "id": "testing/test_compat.py:ErrorsHelper.raise_exception",
      "type": "function",
      "name": "ErrorsHelper.raise_exception",
      "file": "testing/test_compat.py",
      "line": 160
    },
    {
      "id": "testing/test_compat.py:ErrorsHelper.raise_fail_outcome",
      "type": "function",
      "name": "ErrorsHelper.raise_fail_outcome",
      "file": "testing/test_compat.py",
      "line": 164
    },
    {
      "id": "testing/test_compat.py:test_helper_failures",
      "type": "function",
      "name": "test_helper_failures",
      "file": "testing/test_compat.py",
      "line": 168
    },
    {
      "id": "testing/test_compat.py:test_safe_getattr",
      "type": "function",
      "name": "test_safe_getattr",
      "file": "testing/test_compat.py",
      "line": 176
    },
    {
      "id": "testing/test_compat.py:test_safe_isclass",
      "type": "function",
      "name": "test_safe_isclass",
      "file": "testing/test_compat.py",
      "line": 184
    },
    {
      "id": "testing/test_compat.py:test_safe_isclass.CrappyClass",
      "type": "class",
      "name": "test_safe_isclass.CrappyClass",
      "file": "testing/test_compat.py",
      "line": 187
    },
    {
      "id": "testing/test_compat.py:test_safe_isclass.CrappyClass.__class__",
      "type": "function",
      "name": "test_safe_isclass.CrappyClass.__class__",
      "file": "testing/test_compat.py",
      "line": 190
    },
    {
      "id": "testing/test_compat.py:test_cached_property",
      "type": "function",
      "name": "test_cached_property",
      "file": "testing/test_compat.py",
      "line": 196
    },
    {
      "id": "testing/test_compat.py:test_cached_property.Class",
      "type": "class",
      "name": "test_cached_property.Class",
      "file": "testing/test_compat.py",
      "line": 199
    },
    {
      "id": "testing/test_compat.py:test_cached_property.Class.prop",
      "type": "function",
      "name": "test_cached_property.Class.prop",
      "file": "testing/test_compat.py",
      "line": 201
    },
    {
      "id": "testing/test_compat.py:test_assert_never_union",
      "type": "function",
      "name": "test_assert_never_union",
      "file": "testing/test_compat.py",
      "line": 216
    },
    {
      "id": "testing/test_compat.py:test_assert_never_enum",
      "type": "function",
      "name": "test_assert_never_enum",
      "file": "testing/test_compat.py",
      "line": 233
    },
    {
      "id": "testing/test_compat.py:test_assert_never_literal",
      "type": "function",
      "name": "test_assert_never_literal",
      "file": "testing/test_compat.py",
      "line": 251
    },
    {
      "id": "testing/test_config.py",
      "type": "file",
      "name": "test_config.py",
      "file": "testing/test_config.py",
      "line": 0
    },
    {
      "id": "testing/test_config.py:TestParseIni",
      "type": "class",
      "name": "TestParseIni",
      "file": "testing/test_config.py",
      "line": 33
    },
    {
      "id": "testing/test_config.py:TestParseIni.test_getcfg_and_config",
      "type": "function",
      "name": "TestParseIni.test_getcfg_and_config",
      "file": "testing/test_config.py",
      "line": 37
    },
    {
      "id": "testing/test_config.py:TestParseIni.test_setupcfg_uses_toolpytest_with_pytest",
      "type": "function",
      "name": "TestParseIni.test_setupcfg_uses_toolpytest_with_pytest",
      "file": "testing/test_config.py",
      "line": 64
    },
    {
      "id": "testing/test_config.py:TestParseIni.test_append_parse_args",
      "type": "function",
      "name": "TestParseIni.test_append_parse_args",
      "file": "testing/test_config.py",
      "line": 80
    },
    {
      "id": "testing/test_config.py:TestParseIni.test_tox_ini_wrong_version",
      "type": "function",
      "name": "TestParseIni.test_tox_ini_wrong_version",
      "file": "testing/test_config.py",
      "line": 99
    },
    {
      "id": "testing/test_config.py:TestParseIni.test_ini_names",
      "type": "function",
      "name": "TestParseIni.test_ini_names",
      "file": "testing/test_config.py",
      "line": 122
    },
    {
      "id": "testing/test_config.py:TestParseIni.test_pyproject_toml",
      "type": "function",
      "name": "TestParseIni.test_pyproject_toml",
      "file": "testing/test_config.py",
      "line": 137
    },
    {
      "id": "testing/test_config.py:TestParseIni.test_toxini_before_lower_pytestini",
      "type": "function",
      "name": "TestParseIni.test_toxini_before_lower_pytestini",
      "file": "testing/test_config.py",
      "line": 147
    },
    {
      "id": "testing/test_config.py:TestParseIni.test_ini_parse_error",
      "type": "function",
      "name": "TestParseIni.test_ini_parse_error",
      "file": "testing/test_config.py",
      "line": 170
    },
    {
      "id": "testing/test_config.py:TestParseIni.test_toml_parse_error",
      "type": "function",
      "name": "TestParseIni.test_toml_parse_error",
      "file": "testing/test_config.py",
      "line": 178
    },
    {
      "id": "testing/test_config.py:TestParseIni.test_confcutdir_default_without_configfile",
      "type": "function",
      "name": "TestParseIni.test_confcutdir_default_without_configfile",
      "file": "testing/test_config.py",
      "line": 188
    },
    {
      "id": "testing/test_config.py:TestParseIni.test_confcutdir_default_with_configfile",
      "type": "function",
      "name": "TestParseIni.test_confcutdir_default_with_configfile",
      "file": "testing/test_config.py",
      "line": 196
    },
    {
      "id": "testing/test_config.py:TestParseIni.test_confcutdir",
      "type": "function",
      "name": "TestParseIni.test_confcutdir",
      "file": "testing/test_config.py",
      "line": 206
    },
    {
      "id": "testing/test_config.py:TestParseIni.test_invalid_config_options",
      "type": "function",
      "name": "TestParseIni.test_invalid_config_options",
      "file": "testing/test_config.py",
      "line": 285
    },
    {
      "id": "testing/test_config.py:TestParseIni.test_silence_unknown_key_warning",
      "type": "function",
      "name": "TestParseIni.test_silence_unknown_key_warning",
      "file": "testing/test_config.py",
      "line": 317
    },
    {
      "id": "testing/test_config.py:TestParseIni.test_disable_warnings_plugin_disables_config_warnings",
      "type": "function",
      "name": "TestParseIni.test_disable_warnings_plugin_disables_config_warnings",
      "file": "testing/test_config.py",
      "line": 331
    },
    {
      "id": "testing/test_config.py:TestParseIni.test_missing_required_plugins",
      "type": "function",
      "name": "TestParseIni.test_missing_required_plugins",
      "file": "testing/test_config.py",
      "line": 435
    },
    {
      "id": "testing/test_config.py:TestParseIni.test_missing_required_plugins.DummyEntryPoint",
      "type": "class",
      "name": "TestParseIni.test_missing_required_plugins.DummyEntryPoint",
      "file": "testing/test_config.py",
      "line": 449
    },
    {
      "id": "testing/test_config.py:TestParseIni.test_missing_required_plugins.DummyEntryPoint.load",
      "type": "function",
      "name": "TestParseIni.test_missing_required_plugins.DummyEntryPoint.load",
      "file": "testing/test_config.py",
      "line": 454
    },
    {
      "id": "testing/test_config.py:TestParseIni.test_missing_required_plugins.DummyDist",
      "type": "class",
      "name": "TestParseIni.test_missing_required_plugins.DummyDist",
      "file": "testing/test_config.py",
      "line": 463
    },
    {
      "id": "testing/test_config.py:TestParseIni.test_missing_required_plugins.DummyDist.metadata",
      "type": "function",
      "name": "TestParseIni.test_missing_required_plugins.DummyDist.metadata",
      "file": "testing/test_config.py",
      "line": 469
    },
    {
      "id": "testing/test_config.py:TestParseIni.test_missing_required_plugins.my_dists",
      "type": "function",
      "name": "TestParseIni.test_missing_required_plugins.my_dists",
      "file": "testing/test_config.py",
      "line": 472
    },
    {
      "id": "testing/test_config.py:TestParseIni.test_early_config_cmdline",
      "type": "function",
      "name": "TestParseIni.test_early_config_cmdline",
      "file": "testing/test_config.py",
      "line": 489
    },
    {
      "id": "testing/test_config.py:TestConfigCmdlineParsing",
      "type": "class",
      "name": "TestConfigCmdlineParsing",
      "file": "testing/test_config.py",
      "line": 511
    },
    {
      "id": "testing/test_config.py:TestConfigCmdlineParsing.test_parsing_again_fails",
      "type": "function",
      "name": "TestConfigCmdlineParsing.test_parsing_again_fails",
      "file": "testing/test_config.py",
      "line": 512
    },
    {
      "id": "testing/test_config.py:TestConfigCmdlineParsing.test_explicitly_specified_config_file_is_loaded",
      "type": "function",
      "name": "TestConfigCmdlineParsing.test_explicitly_specified_config_file_is_loaded",
      "file": "testing/test_config.py",
      "line": 516
    },
    {
      "id": "testing/test_config.py:TestConfigCmdlineParsing.test_absolute_win32_path",
      "type": "function",
      "name": "TestConfigCmdlineParsing.test_absolute_win32_path",
      "file": "testing/test_config.py",
      "line": 569
    },
    {
      "id": "testing/test_config.py:TestConfigAPI",
      "type": "class",
      "name": "TestConfigAPI",
      "file": "testing/test_config.py",
      "line": 586
    },
    {
      "id": "testing/test_config.py:TestConfigAPI.test_config_trace",
      "type": "function",
      "name": "TestConfigAPI.test_config_trace",
      "file": "testing/test_config.py",
      "line": 587
    },
    {
      "id": "testing/test_config.py:TestConfigAPI.test_config_getoption",
      "type": "function",
      "name": "TestConfigAPI.test_config_getoption",
      "file": "testing/test_config.py",
      "line": 595
    },
    {
      "id": "testing/test_config.py:TestConfigAPI.test_config_getoption_unicode",
      "type": "function",
      "name": "TestConfigAPI.test_config_getoption_unicode",
      "file": "testing/test_config.py",
      "line": 607
    },
    {
      "id": "testing/test_config.py:TestConfigAPI.test_config_getvalueorskip",
      "type": "function",
      "name": "TestConfigAPI.test_config_getvalueorskip",
      "file": "testing/test_config.py",
      "line": 617
    },
    {
      "id": "testing/test_config.py:TestConfigAPI.test_config_getvalueorskip_None",
      "type": "function",
      "name": "TestConfigAPI.test_config_getvalueorskip_None",
      "file": "testing/test_config.py",
      "line": 623
    },
    {
      "id": "testing/test_config.py:TestConfigAPI.test_getoption",
      "type": "function",
      "name": "TestConfigAPI.test_getoption",
      "file": "testing/test_config.py",
      "line": 634
    },
    {
      "id": "testing/test_config.py:TestConfigAPI.test_getconftest_pathlist",
      "type": "function",
      "name": "TestConfigAPI.test_getconftest_pathlist",
      "file": "testing/test_config.py",
      "line": 640
    },
    {
      "id": "testing/test_config.py:TestConfigAPI.test_addini",
      "type": "function",
      "name": "TestConfigAPI.test_addini",
      "file": "testing/test_config.py",
      "line": 659
    },
    {
      "id": "testing/test_config.py:TestConfigAPI.test_addini_paths",
      "type": "function",
      "name": "TestConfigAPI.test_addini_paths",
      "file": "testing/test_config.py",
      "line": 683
    },
    {
      "id": "testing/test_config.py:TestConfigAPI.make_conftest_for_args",
      "type": "function",
      "name": "TestConfigAPI.make_conftest_for_args",
      "file": "testing/test_config.py",
      "line": 712
    },
    {
      "id": "testing/test_config.py:TestConfigAPI.test_addini_args_ini_files",
      "type": "function",
      "name": "TestConfigAPI.test_addini_args_ini_files",
      "file": "testing/test_config.py",
      "line": 721
    },
    {
      "id": "testing/test_config.py:TestConfigAPI.test_addini_args_pyproject_toml",
      "type": "function",
      "name": "TestConfigAPI.test_addini_args_pyproject_toml",
      "file": "testing/test_config.py",
      "line": 731
    },
    {
      "id": "testing/test_config.py:TestConfigAPI.check_config_args",
      "type": "function",
      "name": "TestConfigAPI.check_config_args",
      "file": "testing/test_config.py",
      "line": 741
    },
    {
      "id": "testing/test_config.py:TestConfigAPI.make_conftest_for_linelist",
      "type": "function",
      "name": "TestConfigAPI.make_conftest_for_linelist",
      "file": "testing/test_config.py",
      "line": 748
    },
    {
      "id": "testing/test_config.py:TestConfigAPI.test_addini_linelist_ini_files",
      "type": "function",
      "name": "TestConfigAPI.test_addini_linelist_ini_files",
      "file": "testing/test_config.py",
      "line": 757
    },
    {
      "id": "testing/test_config.py:TestConfigAPI.test_addini_linelist_pprojecttoml",
      "type": "function",
      "name": "TestConfigAPI.test_addini_linelist_pprojecttoml",
      "file": "testing/test_config.py",
      "line": 768
    },
    {
      "id": "testing/test_config.py:TestConfigAPI.check_config_linelist",
      "type": "function",
      "name": "TestConfigAPI.check_config_linelist",
      "file": "testing/test_config.py",
      "line": 778
    },
    {
      "id": "testing/test_config.py:TestConfigAPI.test_addini_bool",
      "type": "function",
      "name": "TestConfigAPI.test_addini_bool",
      "file": "testing/test_config.py",
      "line": 789
    },
    {
      "id": "testing/test_config.py:TestConfigAPI.test_addinivalue_line_existing",
      "type": "function",
      "name": "TestConfigAPI.test_addinivalue_line_existing",
      "file": "testing/test_config.py",
      "line": 809
    },
    {
      "id": "testing/test_config.py:TestConfigAPI.test_addinivalue_line_new",
      "type": "function",
      "name": "TestConfigAPI.test_addinivalue_line_new",
      "file": "testing/test_config.py",
      "line": 831
    },
    {
      "id": "testing/test_config.py:TestConfigAPI.test_confcutdir_check_isdir",
      "type": "function",
      "name": "TestConfigAPI.test_confcutdir_check_isdir",
      "file": "testing/test_config.py",
      "line": 849
    },
    {
      "id": "testing/test_config.py:TestConfigAPI.test_iter_rewritable_modules",
      "type": "function",
      "name": "TestConfigAPI.test_iter_rewritable_modules",
      "file": "testing/test_config.py",
      "line": 880
    },
    {
      "id": "testing/test_config.py:TestConfigFromdictargs",
      "type": "class",
      "name": "TestConfigFromdictargs",
      "file": "testing/test_config.py",
      "line": 884
    },
    {
      "id": "testing/test_config.py:TestConfigFromdictargs.test_basic_behavior",
      "type": "function",
      "name": "TestConfigFromdictargs.test_basic_behavior",
      "file": "testing/test_config.py",
      "line": 885
    },
    {
      "id": "testing/test_config.py:TestConfigFromdictargs.test_invocation_params_args",
      "type": "function",
      "name": "TestConfigFromdictargs.test_invocation_params_args",
      "file": "testing/test_config.py",
      "line": 897
    },
    {
      "id": "testing/test_config.py:TestConfigFromdictargs.test_inifilename",
      "type": "function",
      "name": "TestConfigFromdictargs.test_inifilename",
      "file": "testing/test_config.py",
      "line": 908
    },
    {
      "id": "testing/test_config.py:test_options_on_small_file_do_not_blow_up",
      "type": "function",
      "name": "test_options_on_small_file_do_not_blow_up",
      "file": "testing/test_config.py",
      "line": 955
    },
    {
      "id": "testing/test_config.py:test_options_on_small_file_do_not_blow_up.runfiletest",
      "type": "function",
      "name": "test_options_on_small_file_do_not_blow_up.runfiletest",
      "file": "testing/test_config.py",
      "line": 956
    },
    {
      "id": "testing/test_config.py:test_preparse_ordering_with_setuptools",
      "type": "function",
      "name": "test_preparse_ordering_with_setuptools",
      "file": "testing/test_config.py",
      "line": 983
    },
    {
      "id": "testing/test_config.py:test_preparse_ordering_with_setuptools.EntryPoint",
      "type": "class",
      "name": "test_preparse_ordering_with_setuptools.EntryPoint",
      "file": "testing/test_config.py",
      "line": 988
    },
    {
      "id": "testing/test_config.py:test_preparse_ordering_with_setuptools.EntryPoint.load",
      "type": "function",
      "name": "test_preparse_ordering_with_setuptools.EntryPoint.load",
      "file": "testing/test_config.py",
      "line": 992
    },
    {
      "id": "testing/test_config.py:test_preparse_ordering_with_setuptools.EntryPoint.load.PseudoPlugin",
      "type": "class",
      "name": "test_preparse_ordering_with_setuptools.EntryPoint.load.PseudoPlugin",
      "file": "testing/test_config.py",
      "line": 993
    },
    {
      "id": "testing/test_config.py:test_preparse_ordering_with_setuptools.Dist",
      "type": "class",
      "name": "test_preparse_ordering_with_setuptools.Dist",
      "file": "testing/test_config.py",
      "line": 998
    },
    {
      "id": "testing/test_config.py:test_preparse_ordering_with_setuptools.my_dists",
      "type": "function",
      "name": "test_preparse_ordering_with_setuptools.my_dists",
      "file": "testing/test_config.py",
      "line": 1003
    },
    {
      "id": "testing/test_config.py:test_setuptools_importerror_issue1479",
      "type": "function",
      "name": "test_setuptools_importerror_issue1479",
      "file": "testing/test_config.py",
      "line": 1018
    },
    {
      "id": "testing/test_config.py:test_setuptools_importerror_issue1479.DummyEntryPoint",
      "type": "class",
      "name": "test_setuptools_importerror_issue1479.DummyEntryPoint",
      "file": "testing/test_config.py",
      "line": 1023
    },
    {
      "id": "testing/test_config.py:test_setuptools_importerror_issue1479.DummyEntryPoint.load",
      "type": "function",
      "name": "test_setuptools_importerror_issue1479.DummyEntryPoint.load",
      "file": "testing/test_config.py",
      "line": 1027
    },
    {
      "id": "testing/test_config.py:test_setuptools_importerror_issue1479.Distribution",
      "type": "class",
      "name": "test_setuptools_importerror_issue1479.Distribution",
      "file": "testing/test_config.py",
      "line": 1030
    },
    {
      "id": "testing/test_config.py:test_setuptools_importerror_issue1479.distributions",
      "type": "function",
      "name": "test_setuptools_importerror_issue1479.distributions",
      "file": "testing/test_config.py",
      "line": 1036
    },
    {
      "id": "testing/test_config.py:test_importlib_metadata_broken_distribution",
      "type": "function",
      "name": "test_importlib_metadata_broken_distribution",
      "file": "testing/test_config.py",
      "line": 1044
    },
    {
      "id": "testing/test_config.py:test_importlib_metadata_broken_distribution.DummyEntryPoint",
      "type": "class",
      "name": "test_importlib_metadata_broken_distribution.DummyEntryPoint",
      "file": "testing/test_config.py",
      "line": 1050
    },
    {
      "id": "testing/test_config.py:test_importlib_metadata_broken_distribution.DummyEntryPoint.load",
      "type": "function",
      "name": "test_importlib_metadata_broken_distribution.DummyEntryPoint.load",
      "file": "testing/test_config.py",
      "line": 1054
    },
    {
      "id": "testing/test_config.py:test_importlib_metadata_broken_distribution.Distribution",
      "type": "class",
      "name": "test_importlib_metadata_broken_distribution.Distribution",
      "file": "testing/test_config.py",
      "line": 1057
    },
    {
      "id": "testing/test_config.py:test_importlib_metadata_broken_distribution.distributions",
      "type": "function",
      "name": "test_importlib_metadata_broken_distribution.distributions",
      "file": "testing/test_config.py",
      "line": 1063
    },
    {
      "id": "testing/test_config.py:test_plugin_preparse_prevents_setuptools_loading",
      "type": "function",
      "name": "test_plugin_preparse_prevents_setuptools_loading",
      "file": "testing/test_config.py",
      "line": 1071
    },
    {
      "id": "testing/test_config.py:test_plugin_preparse_prevents_setuptools_loading.DummyEntryPoint",
      "type": "class",
      "name": "test_plugin_preparse_prevents_setuptools_loading.DummyEntryPoint",
      "file": "testing/test_config.py",
      "line": 1078
    },
    {
      "id": "testing/test_config.py:test_plugin_preparse_prevents_setuptools_loading.DummyEntryPoint.load",
      "type": "function",
      "name": "test_plugin_preparse_prevents_setuptools_loading.DummyEntryPoint.load",
      "file": "testing/test_config.py",
      "line": 1082
    },
    {
      "id": "testing/test_config.py:test_plugin_preparse_prevents_setuptools_loading.Distribution",
      "type": "class",
      "name": "test_plugin_preparse_prevents_setuptools_loading.Distribution",
      "file": "testing/test_config.py",
      "line": 1085
    },
    {
      "id": "testing/test_config.py:test_plugin_preparse_prevents_setuptools_loading.distributions",
      "type": "function",
      "name": "test_plugin_preparse_prevents_setuptools_loading.distributions",
      "file": "testing/test_config.py",
      "line": 1091
    },
    {
      "id": "testing/test_config.py:test_disable_plugin_autoload",
      "type": "function",
      "name": "test_disable_plugin_autoload",
      "file": "testing/test_config.py",
      "line": 1110
    },
    {
      "id": "testing/test_config.py:test_disable_plugin_autoload.DummyEntryPoint",
      "type": "class",
      "name": "test_disable_plugin_autoload.DummyEntryPoint",
      "file": "testing/test_config.py",
      "line": 1116
    },
    {
      "id": "testing/test_config.py:test_disable_plugin_autoload.DummyEntryPoint.load",
      "type": "function",
      "name": "test_disable_plugin_autoload.DummyEntryPoint.load",
      "file": "testing/test_config.py",
      "line": 1121
    },
    {
      "id": "testing/test_config.py:test_disable_plugin_autoload.Distribution",
      "type": "class",
      "name": "test_disable_plugin_autoload.Distribution",
      "file": "testing/test_config.py",
      "line": 1124
    },
    {
      "id": "testing/test_config.py:test_disable_plugin_autoload.PseudoPlugin",
      "type": "class",
      "name": "test_disable_plugin_autoload.PseudoPlugin",
      "file": "testing/test_config.py",
      "line": 1129
    },
    {
      "id": "testing/test_config.py:test_disable_plugin_autoload.PseudoPlugin.__getattr__",
      "type": "function",
      "name": "test_disable_plugin_autoload.PseudoPlugin.__getattr__",
      "file": "testing/test_config.py",
      "line": 1134
    },
    {
      "id": "testing/test_config.py:test_disable_plugin_autoload.distributions",
      "type": "function",
      "name": "test_disable_plugin_autoload.distributions",
      "file": "testing/test_config.py",
      "line": 1139
    },
    {
      "id": "testing/test_config.py:test_plugin_loading_order",
      "type": "function",
      "name": "test_plugin_loading_order",
      "file": "testing/test_config.py",
      "line": 1154
    },
    {
      "id": "testing/test_config.py:test_cmdline_processargs_simple",
      "type": "function",
      "name": "test_cmdline_processargs_simple",
      "file": "testing/test_config.py",
      "line": 1180
    },
    {
      "id": "testing/test_config.py:test_invalid_options_show_extra_information",
      "type": "function",
      "name": "test_invalid_options_show_extra_information",
      "file": "testing/test_config.py",
      "line": 1191
    },
    {
      "id": "testing/test_config.py:test_consider_args_after_options_for_rootdir",
      "type": "function",
      "name": "test_consider_args_after_options_for_rootdir",
      "file": "testing/test_config.py",
      "line": 1219
    },
    {
      "id": "testing/test_config.py:test_toolongargs_issue224",
      "type": "function",
      "name": "test_toolongargs_issue224",
      "file": "testing/test_config.py",
      "line": 1243
    },
    {
      "id": "testing/test_config.py:test_config_in_subdirectory_colon_command_line_issue2148",
      "type": "function",
      "name": "test_config_in_subdirectory_colon_command_line_issue2148",
      "file": "testing/test_config.py",
      "line": 1248
    },
    {
      "id": "testing/test_config.py:test_notify_exception",
      "type": "function",
      "name": "test_notify_exception",
      "file": "testing/test_config.py",
      "line": 1276
    },
    {
      "id": "testing/test_config.py:test_notify_exception.A",
      "type": "class",
      "name": "test_notify_exception.A",
      "file": "testing/test_config.py",
      "line": 1284
    },
    {
      "id": "testing/test_config.py:test_notify_exception.A.pytest_internalerror",
      "type": "function",
      "name": "test_notify_exception.A.pytest_internalerror",
      "file": "testing/test_config.py",
      "line": 1285
    },
    {
      "id": "testing/test_config.py:test_no_terminal_discovery_error",
      "type": "function",
      "name": "test_no_terminal_discovery_error",
      "file": "testing/test_config.py",
      "line": 1301
    },
    {
      "id": "testing/test_config.py:test_load_initial_conftest_last_ordering",
      "type": "function",
      "name": "test_load_initial_conftest_last_ordering",
      "file": "testing/test_config.py",
      "line": 1307
    },
    {
      "id": "testing/test_config.py:test_load_initial_conftest_last_ordering.My",
      "type": "class",
      "name": "test_load_initial_conftest_last_ordering.My",
      "file": "testing/test_config.py",
      "line": 1310
    },
    {
      "id": "testing/test_config.py:test_load_initial_conftest_last_ordering.My.pytest_load_initial_conftests",
      "type": "function",
      "name": "test_load_initial_conftest_last_ordering.My.pytest_load_initial_conftests",
      "file": "testing/test_config.py",
      "line": 1311
    },
    {
      "id": "testing/test_config.py:test_get_plugin_specs_as_list",
      "type": "function",
      "name": "test_get_plugin_specs_as_list",
      "file": "testing/test_config.py",
      "line": 1334
    },
    {
      "id": "testing/test_config.py:test_get_plugin_specs_as_list.exp_match",
      "type": "function",
      "name": "test_get_plugin_specs_as_list.exp_match",
      "file": "testing/test_config.py",
      "line": 1335
    },
    {
      "id": "testing/test_config.py:test_collect_pytest_prefix_bug_integration",
      "type": "function",
      "name": "test_collect_pytest_prefix_bug_integration",
      "file": "testing/test_config.py",
      "line": 1354
    },
    {
      "id": "testing/test_config.py:test_collect_pytest_prefix_bug",
      "type": "function",
      "name": "test_collect_pytest_prefix_bug",
      "file": "testing/test_config.py",
      "line": 1361
    },
    {
      "id": "testing/test_config.py:test_collect_pytest_prefix_bug.Dummy",
      "type": "class",
      "name": "test_collect_pytest_prefix_bug.Dummy",
      "file": "testing/test_config.py",
      "line": 1364
    },
    {
      "id": "testing/test_config.py:test_collect_pytest_prefix_bug.Dummy.pytest_something",
      "type": "class",
      "name": "test_collect_pytest_prefix_bug.Dummy.pytest_something",
      "file": "testing/test_config.py",
      "line": 1365
    },
    {
      "id": "testing/test_config.py:TestRootdir",
      "type": "class",
      "name": "TestRootdir",
      "file": "testing/test_config.py",
      "line": 1372
    },
    {
      "id": "testing/test_config.py:TestRootdir.test_simple_noini",
      "type": "function",
      "name": "TestRootdir.test_simple_noini",
      "file": "testing/test_config.py",
      "line": 1373
    },
    {
      "id": "testing/test_config.py:TestRootdir.test_with_ini",
      "type": "function",
      "name": "TestRootdir.test_with_ini",
      "file": "testing/test_config.py",
      "line": 1396
    },
    {
      "id": "testing/test_config.py:TestRootdir.test_pytestini_overrides_empty_other",
      "type": "function",
      "name": "TestRootdir.test_pytestini_overrides_empty_other",
      "file": "testing/test_config.py",
      "line": 1414
    },
    {
      "id": "testing/test_config.py:TestRootdir.test_setuppy_fallback",
      "type": "function",
      "name": "TestRootdir.test_setuppy_fallback",
      "file": "testing/test_config.py",
      "line": 1424
    },
    {
      "id": "testing/test_config.py:TestRootdir.test_nothing",
      "type": "function",
      "name": "TestRootdir.test_nothing",
      "file": "testing/test_config.py",
      "line": 1434
    },
    {
      "id": "testing/test_config.py:TestRootdir.test_with_specific_inifile",
      "type": "function",
      "name": "TestRootdir.test_with_specific_inifile",
      "file": "testing/test_config.py",
      "line": 1452
    },
    {
      "id": "testing/test_config.py:TestRootdir.test_explicit_config_file_sets_rootdir",
      "type": "function",
      "name": "TestRootdir.test_explicit_config_file_sets_rootdir",
      "file": "testing/test_config.py",
      "line": 1463
    },
    {
      "id": "testing/test_config.py:TestRootdir.test_with_arg_outside_cwd_without_inifile",
      "type": "function",
      "name": "TestRootdir.test_with_arg_outside_cwd_without_inifile",
      "file": "testing/test_config.py",
      "line": 1483
    },
    {
      "id": "testing/test_config.py:TestRootdir.test_with_arg_outside_cwd_with_inifile",
      "type": "function",
      "name": "TestRootdir.test_with_arg_outside_cwd_with_inifile",
      "file": "testing/test_config.py",
      "line": 1495
    },
    {
      "id": "testing/test_config.py:TestRootdir.test_with_non_dir_arg",
      "type": "function",
      "name": "TestRootdir.test_with_non_dir_arg",
      "file": "testing/test_config.py",
      "line": 1507
    },
    {
      "id": "testing/test_config.py:TestRootdir.test_with_existing_file_in_subdir",
      "type": "function",
      "name": "TestRootdir.test_with_existing_file_in_subdir",
      "file": "testing/test_config.py",
      "line": 1515
    },
    {
      "id": "testing/test_config.py:TestRootdir.test_with_config_also_in_parent_directory",
      "type": "function",
      "name": "TestRootdir.test_with_config_also_in_parent_directory",
      "file": "testing/test_config.py",
      "line": 1526
    },
    {
      "id": "testing/test_config.py:TestOverrideIniArgs",
      "type": "class",
      "name": "TestOverrideIniArgs",
      "file": "testing/test_config.py",
      "line": 1542
    },
    {
      "id": "testing/test_config.py:TestOverrideIniArgs.test_override_ini_names",
      "type": "function",
      "name": "TestOverrideIniArgs.test_override_ini_names",
      "file": "testing/test_config.py",
      "line": 1544
    },
    {
      "id": "testing/test_config.py:TestOverrideIniArgs.test_override_ini_paths",
      "type": "function",
      "name": "TestOverrideIniArgs.test_override_ini_paths",
      "file": "testing/test_config.py",
      "line": 1578
    },
    {
      "id": "testing/test_config.py:TestOverrideIniArgs.test_override_multiple_and_default",
      "type": "function",
      "name": "TestOverrideIniArgs.test_override_multiple_and_default",
      "file": "testing/test_config.py",
      "line": 1603
    },
    {
      "id": "testing/test_config.py:TestOverrideIniArgs.test_override_ini_usage_error_bad_style",
      "type": "function",
      "name": "TestOverrideIniArgs.test_override_ini_usage_error_bad_style",
      "file": "testing/test_config.py",
      "line": 1649
    },
    {
      "id": "testing/test_config.py:TestOverrideIniArgs.test_override_ini_handled_asap",
      "type": "function",
      "name": "TestOverrideIniArgs.test_override_ini_handled_asap",
      "file": "testing/test_config.py",
      "line": 1664
    },
    {
      "id": "testing/test_config.py:TestOverrideIniArgs.test_addopts_before_initini",
      "type": "function",
      "name": "TestOverrideIniArgs.test_addopts_before_initini",
      "file": "testing/test_config.py",
      "line": 1684
    },
    {
      "id": "testing/test_config.py:TestOverrideIniArgs.test_addopts_from_env_not_concatenated",
      "type": "function",
      "name": "TestOverrideIniArgs.test_addopts_from_env_not_concatenated",
      "file": "testing/test_config.py",
      "line": 1693
    },
    {
      "id": "testing/test_config.py:TestOverrideIniArgs.test_addopts_from_ini_not_concatenated",
      "type": "function",
      "name": "TestOverrideIniArgs.test_addopts_from_ini_not_concatenated",
      "file": "testing/test_config.py",
      "line": 1706
    },
    {
      "id": "testing/test_config.py:TestOverrideIniArgs.test_override_ini_does_not_contain_paths",
      "type": "function",
      "name": "TestOverrideIniArgs.test_override_ini_does_not_contain_paths",
      "file": "testing/test_config.py",
      "line": 1723
    },
    {
      "id": "testing/test_config.py:TestOverrideIniArgs.test_multiple_override_ini_options",
      "type": "function",
      "name": "TestOverrideIniArgs.test_multiple_override_ini_options",
      "file": "testing/test_config.py",
      "line": 1731
    },
    {
      "id": "testing/test_config.py:test_help_via_addopts",
      "type": "function",
      "name": "test_help_via_addopts",
      "file": "testing/test_config.py",
      "line": 1756
    },
    {
      "id": "testing/test_config.py:test_help_and_version_after_argument_error",
      "type": "function",
      "name": "test_help_and_version_after_argument_error",
      "file": "testing/test_config.py",
      "line": 1775
    },
    {
      "id": "testing/test_config.py:test_help_formatter_uses_py_get_terminal_width",
      "type": "function",
      "name": "test_help_formatter_uses_py_get_terminal_width",
      "file": "testing/test_config.py",
      "line": 1819
    },
    {
      "id": "testing/test_config.py:test_config_does_not_load_blocked_plugin_from_args",
      "type": "function",
      "name": "test_config_does_not_load_blocked_plugin_from_args",
      "file": "testing/test_config.py",
      "line": 1834
    },
    {
      "id": "testing/test_config.py:test_invocation_args",
      "type": "function",
      "name": "test_invocation_args",
      "file": "testing/test_config.py",
      "line": 1850
    },
    {
      "id": "testing/test_config.py:test_invocation_args.DummyPlugin",
      "type": "class",
      "name": "test_invocation_args.DummyPlugin",
      "file": "testing/test_config.py",
      "line": 1853
    },
    {
      "id": "testing/test_config.py:test_config_blocked_default_plugins",
      "type": "function",
      "name": "test_config_blocked_default_plugins",
      "file": "testing/test_config.py",
      "line": 1885
    },
    {
      "id": "testing/test_config.py:TestSetupCfg",
      "type": "class",
      "name": "TestSetupCfg",
      "file": "testing/test_config.py",
      "line": 1921
    },
    {
      "id": "testing/test_config.py:TestSetupCfg.test_pytest_setup_cfg_unsupported",
      "type": "function",
      "name": "TestSetupCfg.test_pytest_setup_cfg_unsupported",
      "file": "testing/test_config.py",
      "line": 1922
    },
    {
      "id": "testing/test_config.py:TestSetupCfg.test_pytest_custom_cfg_unsupported",
      "type": "function",
      "name": "TestSetupCfg.test_pytest_custom_cfg_unsupported",
      "file": "testing/test_config.py",
      "line": 1933
    },
    {
      "id": "testing/test_config.py:TestPytestPluginsVariable",
      "type": "class",
      "name": "TestPytestPluginsVariable",
      "file": "testing/test_config.py",
      "line": 1948
    },
    {
      "id": "testing/test_config.py:TestPytestPluginsVariable.test_pytest_plugins_in_non_top_level_conftest_unsupported",
      "type": "function",
      "name": "TestPytestPluginsVariable.test_pytest_plugins_in_non_top_level_conftest_unsupported",
      "file": "testing/test_config.py",
      "line": 1949
    },
    {
      "id": "testing/test_config.py:TestPytestPluginsVariable.test_pytest_plugins_in_non_top_level_conftest_unsupported_pyargs",
      "type": "function",
      "name": "TestPytestPluginsVariable.test_pytest_plugins_in_non_top_level_conftest_unsupported_pyargs",
      "file": "testing/test_config.py",
      "line": 1971
    },
    {
      "id": "testing/test_config.py:TestPytestPluginsVariable.test_pytest_plugins_in_non_top_level_conftest_unsupported_no_top_level_conftest",
      "type": "function",
      "name": "TestPytestPluginsVariable.test_pytest_plugins_in_non_top_level_conftest_unsupported_no_top_level_conftest",
      "file": "testing/test_config.py",
      "line": 1998
    },
    {
      "id": "testing/test_config.py:TestPytestPluginsVariable.test_pytest_plugins_in_non_top_level_conftest_unsupported_no_false_positives",
      "type": "function",
      "name": "TestPytestPluginsVariable.test_pytest_plugins_in_non_top_level_conftest_unsupported_no_false_positives",
      "file": "testing/test_config.py",
      "line": 2024
    },
    {
      "id": "testing/test_config.py:test_conftest_import_error_repr",
      "type": "function",
      "name": "test_conftest_import_error_repr",
      "file": "testing/test_config.py",
      "line": 2044
    },
    {
      "id": "testing/test_config.py:test_strtobool",
      "type": "function",
      "name": "test_strtobool",
      "file": "testing/test_config.py",
      "line": 2060
    },
    {
      "id": "testing/test_config.py:test_parse_warning_filter",
      "type": "function",
      "name": "test_parse_warning_filter",
      "file": "testing/test_config.py",
      "line": 2095
    },
    {
      "id": "testing/test_config.py:test_parse_warning_filter_failure",
      "type": "function",
      "name": "test_parse_warning_filter_failure",
      "file": "testing/test_config.py",
      "line": 2118
    },
    {
      "id": "testing/test_config.py:TestDebugOptions",
      "type": "class",
      "name": "TestDebugOptions",
      "file": "testing/test_config.py",
      "line": 2123
    },
    {
      "id": "testing/test_config.py:TestDebugOptions.test_without_debug_does_not_write_log",
      "type": "function",
      "name": "TestDebugOptions.test_without_debug_does_not_write_log",
      "file": "testing/test_config.py",
      "line": 2124
    },
    {
      "id": "testing/test_config.py:TestDebugOptions.test_with_only_debug_writes_pytestdebug_log",
      "type": "function",
      "name": "TestDebugOptions.test_with_only_debug_writes_pytestdebug_log",
      "file": "testing/test_config.py",
      "line": 2134
    },
    {
      "id": "testing/test_config.py:TestDebugOptions.test_multiple_custom_debug_logs",
      "type": "function",
      "name": "TestDebugOptions.test_multiple_custom_debug_logs",
      "file": "testing/test_config.py",
      "line": 2144
    },
    {
      "id": "testing/test_config.py:TestDebugOptions.test_debug_help",
      "type": "function",
      "name": "TestDebugOptions.test_debug_help",
      "file": "testing/test_config.py",
      "line": 2164
    },
    {
      "id": "testing/test_capture.py",
      "type": "file",
      "name": "test_capture.py",
      "file": "testing/test_capture.py",
      "line": 0
    },
    {
      "id": "testing/test_capture.py:StdCaptureFD",
      "type": "function",
      "name": "StdCaptureFD",
      "file": "testing/test_capture.py",
      "line": 28
    },
    {
      "id": "testing/test_capture.py:StdCapture",
      "type": "function",
      "name": "StdCapture",
      "file": "testing/test_capture.py",
      "line": 38
    },
    {
      "id": "testing/test_capture.py:TeeStdCapture",
      "type": "function",
      "name": "TeeStdCapture",
      "file": "testing/test_capture.py",
      "line": 48
    },
    {
      "id": "testing/test_capture.py:TestCaptureManager",
      "type": "class",
      "name": "TestCaptureManager",
      "file": "testing/test_capture.py",
      "line": 58
    },
    {
      "id": "testing/test_capture.py:TestCaptureManager.test_capturing_basic_api",
      "type": "function",
      "name": "TestCaptureManager.test_capturing_basic_api",
      "file": "testing/test_capture.py",
      "line": 60
    },
    {
      "id": "testing/test_capture.py:TestCaptureManager.test_init_capturing",
      "type": "function",
      "name": "TestCaptureManager.test_init_capturing",
      "file": "testing/test_capture.py",
      "line": 89
    },
    {
      "id": "testing/test_capture.py:test_capturing_unicode",
      "type": "function",
      "name": "test_capturing_unicode",
      "file": "testing/test_capture.py",
      "line": 101
    },
    {
      "id": "testing/test_capture.py:test_capturing_bytes_in_utf8_encoding",
      "type": "function",
      "name": "test_capturing_bytes_in_utf8_encoding",
      "file": "testing/test_capture.py",
      "line": 118
    },
    {
      "id": "testing/test_capture.py:test_collect_capturing",
      "type": "function",
      "name": "test_collect_capturing",
      "file": "testing/test_capture.py",
      "line": 129
    },
    {
      "id": "testing/test_capture.py:TestPerTestCapturing",
      "type": "class",
      "name": "TestPerTestCapturing",
      "file": "testing/test_capture.py",
      "line": 150
    },
    {
      "id": "testing/test_capture.py:TestPerTestCapturing.test_capture_and_fixtures",
      "type": "function",
      "name": "TestPerTestCapturing.test_capture_and_fixtures",
      "file": "testing/test_capture.py",
      "line": 151
    },
    {
      "id": "testing/test_capture.py:TestPerTestCapturing.test_capture_scope_cache",
      "type": "function",
      "name": "TestPerTestCapturing.test_capture_scope_cache",
      "file": "testing/test_capture.py",
      "line": 178
    },
    {
      "id": "testing/test_capture.py:TestPerTestCapturing.test_no_carry_over",
      "type": "function",
      "name": "TestPerTestCapturing.test_no_carry_over",
      "file": "testing/test_capture.py",
      "line": 205
    },
    {
      "id": "testing/test_capture.py:TestPerTestCapturing.test_teardown_capturing",
      "type": "function",
      "name": "TestPerTestCapturing.test_teardown_capturing",
      "file": "testing/test_capture.py",
      "line": 220
    },
    {
      "id": "testing/test_capture.py:TestPerTestCapturing.test_teardown_capturing_final",
      "type": "function",
      "name": "TestPerTestCapturing.test_teardown_capturing_final",
      "file": "testing/test_capture.py",
      "line": 245
    },
    {
      "id": "testing/test_capture.py:TestPerTestCapturing.test_capturing_outerr",
      "type": "function",
      "name": "TestPerTestCapturing.test_capturing_outerr",
      "file": "testing/test_capture.py",
      "line": 265
    },
    {
      "id": "testing/test_capture.py:TestLoggingInteraction",
      "type": "class",
      "name": "TestLoggingInteraction",
      "file": "testing/test_capture.py",
      "line": 293
    },
    {
      "id": "testing/test_capture.py:TestLoggingInteraction.test_logging_stream_ownership",
      "type": "function",
      "name": "TestLoggingInteraction.test_logging_stream_ownership",
      "file": "testing/test_capture.py",
      "line": 294
    },
    {
      "id": "testing/test_capture.py:TestLoggingInteraction.test_logging_and_immediate_setupteardown",
      "type": "function",
      "name": "TestLoggingInteraction.test_logging_and_immediate_setupteardown",
      "file": "testing/test_capture.py",
      "line": 308
    },
    {
      "id": "testing/test_capture.py:TestLoggingInteraction.test_logging_and_crossscope_fixtures",
      "type": "function",
      "name": "TestLoggingInteraction.test_logging_and_crossscope_fixtures",
      "file": "testing/test_capture.py",
      "line": 334
    },
    {
      "id": "testing/test_capture.py:TestLoggingInteraction.test_conftestlogging_is_shown",
      "type": "function",
      "name": "TestLoggingInteraction.test_conftestlogging_is_shown",
      "file": "testing/test_capture.py",
      "line": 360
    },
    {
      "id": "testing/test_capture.py:TestLoggingInteraction.test_conftestlogging_and_test_logging",
      "type": "function",
      "name": "TestLoggingInteraction.test_conftestlogging_and_test_logging",
      "file": "testing/test_capture.py",
      "line": 374
    },
    {
      "id": "testing/test_capture.py:TestLoggingInteraction.test_logging_after_cap_stopped",
      "type": "function",
      "name": "TestLoggingInteraction.test_logging_after_cap_stopped",
      "file": "testing/test_capture.py",
      "line": 396
    },
    {
      "id": "testing/test_capture.py:TestCaptureFixture",
      "type": "class",
      "name": "TestCaptureFixture",
      "file": "testing/test_capture.py",
      "line": 431
    },
    {
      "id": "testing/test_capture.py:TestCaptureFixture.test_std_functional",
      "type": "function",
      "name": "TestCaptureFixture.test_std_functional",
      "file": "testing/test_capture.py",
      "line": 433
    },
    {
      "id": "testing/test_capture.py:TestCaptureFixture.test_capsyscapfd",
      "type": "function",
      "name": "TestCaptureFixture.test_capsyscapfd",
      "file": "testing/test_capture.py",
      "line": 445
    },
    {
      "id": "testing/test_capture.py:TestCaptureFixture.test_capturing_getfixturevalue",
      "type": "function",
      "name": "TestCaptureFixture.test_capturing_getfixturevalue",
      "file": "testing/test_capture.py",
      "line": 465
    },
    {
      "id": "testing/test_capture.py:TestCaptureFixture.test_capsyscapfdbinary",
      "type": "function",
      "name": "TestCaptureFixture.test_capsyscapfdbinary",
      "file": "testing/test_capture.py",
      "line": 488
    },
    {
      "id": "testing/test_capture.py:TestCaptureFixture.test_capture_is_represented_on_failure_issue128",
      "type": "function",
      "name": "TestCaptureFixture.test_capture_is_represented_on_failure_issue128",
      "file": "testing/test_capture.py",
      "line": 501
    },
    {
      "id": "testing/test_capture.py:TestCaptureFixture.test_stdfd_functional",
      "type": "function",
      "name": "TestCaptureFixture.test_stdfd_functional",
      "file": "testing/test_capture.py",
      "line": 516
    },
    {
      "id": "testing/test_capture.py:TestCaptureFixture.test_cafd_preserves_newlines",
      "type": "function",
      "name": "TestCaptureFixture.test_cafd_preserves_newlines",
      "file": "testing/test_capture.py",
      "line": 530
    },
    {
      "id": "testing/test_capture.py:TestCaptureFixture.test_capfdbinary",
      "type": "function",
      "name": "TestCaptureFixture.test_capfdbinary",
      "file": "testing/test_capture.py",
      "line": 535
    },
    {
      "id": "testing/test_capture.py:TestCaptureFixture.test_capsysbinary",
      "type": "function",
      "name": "TestCaptureFixture.test_capsysbinary",
      "file": "testing/test_capture.py",
      "line": 549
    },
    {
      "id": "testing/test_capture.py:TestCaptureFixture.test_partial_setup_failure",
      "type": "function",
      "name": "TestCaptureFixture.test_partial_setup_failure",
      "file": "testing/test_capture.py",
      "line": 585
    },
    {
      "id": "testing/test_capture.py:TestCaptureFixture.test_keyboardinterrupt_disables_capturing",
      "type": "function",
      "name": "TestCaptureFixture.test_keyboardinterrupt_disables_capturing",
      "file": "testing/test_capture.py",
      "line": 595
    },
    {
      "id": "testing/test_capture.py:TestCaptureFixture.test_capture_and_logging",
      "type": "function",
      "name": "TestCaptureFixture.test_capture_and_logging",
      "file": "testing/test_capture.py",
      "line": 608
    },
    {
      "id": "testing/test_capture.py:TestCaptureFixture.test_disabled_capture_fixture",
      "type": "function",
      "name": "TestCaptureFixture.test_disabled_capture_fixture",
      "file": "testing/test_capture.py",
      "line": 622
    },
    {
      "id": "testing/test_capture.py:TestCaptureFixture.test_disabled_capture_fixture_twice",
      "type": "function",
      "name": "TestCaptureFixture.test_disabled_capture_fixture_twice",
      "file": "testing/test_capture.py",
      "line": 650
    },
    {
      "id": "testing/test_capture.py:TestCaptureFixture.test_fixture_use_by_other_fixtures",
      "type": "function",
      "name": "TestCaptureFixture.test_fixture_use_by_other_fixtures",
      "file": "testing/test_capture.py",
      "line": 679
    },
    {
      "id": "testing/test_capture.py:TestCaptureFixture.test_fixture_use_by_other_fixtures_teardown",
      "type": "function",
      "name": "TestCaptureFixture.test_fixture_use_by_other_fixtures_teardown",
      "file": "testing/test_capture.py",
      "line": 715
    },
    {
      "id": "testing/test_capture.py:test_setup_failure_does_not_kill_capturing",
      "type": "function",
      "name": "test_setup_failure_does_not_kill_capturing",
      "file": "testing/test_capture.py",
      "line": 745
    },
    {
      "id": "testing/test_capture.py:test_capture_conftest_runtest_setup",
      "type": "function",
      "name": "test_capture_conftest_runtest_setup",
      "file": "testing/test_capture.py",
      "line": 761
    },
    {
      "id": "testing/test_capture.py:test_capture_badoutput_issue412",
      "type": "function",
      "name": "test_capture_badoutput_issue412",
      "file": "testing/test_capture.py",
      "line": 774
    },
    {
      "id": "testing/test_capture.py:test_capture_early_option_parsing",
      "type": "function",
      "name": "test_capture_early_option_parsing",
      "file": "testing/test_capture.py",
      "line": 796
    },
    {
      "id": "testing/test_capture.py:test_capture_binary_output",
      "type": "function",
      "name": "test_capture_binary_output",
      "file": "testing/test_capture.py",
      "line": 809
    },
    {
      "id": "testing/test_capture.py:test_error_during_readouterr",
      "type": "function",
      "name": "test_error_during_readouterr",
      "file": "testing/test_capture.py",
      "line": 830
    },
    {
      "id": "testing/test_capture.py:TestCaptureIO",
      "type": "class",
      "name": "TestCaptureIO",
      "file": "testing/test_capture.py",
      "line": 849
    },
    {
      "id": "testing/test_capture.py:TestCaptureIO.test_text",
      "type": "function",
      "name": "TestCaptureIO.test_text",
      "file": "testing/test_capture.py",
      "line": 850
    },
    {
      "id": "testing/test_capture.py:TestCaptureIO.test_unicode_and_str_mixture",
      "type": "function",
      "name": "TestCaptureIO.test_unicode_and_str_mixture",
      "file": "testing/test_capture.py",
      "line": 857
    },
    {
      "id": "testing/test_capture.py:TestCaptureIO.test_write_bytes_to_buffer",
      "type": "function",
      "name": "TestCaptureIO.test_write_bytes_to_buffer",
      "file": "testing/test_capture.py",
      "line": 862
    },
    {
      "id": "testing/test_capture.py:TestTeeCaptureIO",
      "type": "class",
      "name": "TestTeeCaptureIO",
      "file": "testing/test_capture.py",
      "line": 871
    },
    {
      "id": "testing/test_capture.py:TestTeeCaptureIO.test_text",
      "type": "function",
      "name": "TestTeeCaptureIO.test_text",
      "file": "testing/test_capture.py",
      "line": 872
    },
    {
      "id": "testing/test_capture.py:TestTeeCaptureIO.test_unicode_and_str_mixture",
      "type": "function",
      "name": "TestTeeCaptureIO.test_unicode_and_str_mixture",
      "file": "testing/test_capture.py",
      "line": 883
    },
    {
      "id": "testing/test_capture.py:test_dontreadfrominput",
      "type": "function",
      "name": "test_dontreadfrominput",
      "file": "testing/test_capture.py",
      "line": 890
    },
    {
      "id": "testing/test_capture.py:test_captureresult",
      "type": "function",
      "name": "test_captureresult",
      "file": "testing/test_capture.py",
      "line": 916
    },
    {
      "id": "testing/test_capture.py:tmpfile",
      "type": "function",
      "name": "tmpfile",
      "file": "testing/test_capture.py",
      "line": 947
    },
    {
      "id": "testing/test_capture.py:lsof_check",
      "type": "function",
      "name": "lsof_check",
      "file": "testing/test_capture.py",
      "line": 955
    },
    {
      "id": "testing/test_capture.py:TestFDCapture",
      "type": "class",
      "name": "TestFDCapture",
      "file": "testing/test_capture.py",
      "line": 969
    },
    {
      "id": "testing/test_capture.py:TestFDCapture.test_simple",
      "type": "function",
      "name": "TestFDCapture.test_simple",
      "file": "testing/test_capture.py",
      "line": 970
    },
    {
      "id": "testing/test_capture.py:TestFDCapture.test_simple_many",
      "type": "function",
      "name": "TestFDCapture.test_simple_many",
      "file": "testing/test_capture.py",
      "line": 984
    },
    {
      "id": "testing/test_capture.py:TestFDCapture.test_simple_many_check_open_files",
      "type": "function",
      "name": "TestFDCapture.test_simple_many_check_open_files",
      "file": "testing/test_capture.py",
      "line": 988
    },
    {
      "id": "testing/test_capture.py:TestFDCapture.test_simple_fail_second_start",
      "type": "function",
      "name": "TestFDCapture.test_simple_fail_second_start",
      "file": "testing/test_capture.py",
      "line": 993
    },
    {
      "id": "testing/test_capture.py:TestFDCapture.test_stderr",
      "type": "function",
      "name": "TestFDCapture.test_stderr",
      "file": "testing/test_capture.py",
      "line": 999
    },
    {
      "id": "testing/test_capture.py:TestFDCapture.test_stdin",
      "type": "function",
      "name": "TestFDCapture.test_stdin",
      "file": "testing/test_capture.py",
      "line": 1007
    },
    {
      "id": "testing/test_capture.py:TestFDCapture.test_writeorg",
      "type": "function",
      "name": "TestFDCapture.test_writeorg",
      "file": "testing/test_capture.py",
      "line": 1014
    },
    {
      "id": "testing/test_capture.py:TestFDCapture.test_simple_resume_suspend",
      "type": "function",
      "name": "TestFDCapture.test_simple_resume_suspend",
      "file": "testing/test_capture.py",
      "line": 1028
    },
    {
      "id": "testing/test_capture.py:TestFDCapture.test_capfd_sys_stdout_mode",
      "type": "function",
      "name": "TestFDCapture.test_capfd_sys_stdout_mode",
      "file": "testing/test_capture.py",
      "line": 1063
    },
    {
      "id": "testing/test_capture.py:saved_fd",
      "type": "function",
      "name": "saved_fd",
      "file": "testing/test_capture.py",
      "line": 1068
    },
    {
      "id": "testing/test_capture.py:TestStdCapture",
      "type": "class",
      "name": "TestStdCapture",
      "file": "testing/test_capture.py",
      "line": 1077
    },
    {
      "id": "testing/test_capture.py:TestStdCapture.getcapture",
      "type": "function",
      "name": "TestStdCapture.getcapture",
      "file": "testing/test_capture.py",
      "line": 1081
    },
    {
      "id": "testing/test_capture.py:TestStdCapture.test_capturing_done_simple",
      "type": "function",
      "name": "TestStdCapture.test_capturing_done_simple",
      "file": "testing/test_capture.py",
      "line": 1089
    },
    {
      "id": "testing/test_capture.py:TestStdCapture.test_capturing_reset_simple",
      "type": "function",
      "name": "TestStdCapture.test_capturing_reset_simple",
      "file": "testing/test_capture.py",
      "line": 1097
    },
    {
      "id": "testing/test_capture.py:TestStdCapture.test_capturing_readouterr",
      "type": "function",
      "name": "TestStdCapture.test_capturing_readouterr",
      "file": "testing/test_capture.py",
      "line": 1105
    },
    {
      "id": "testing/test_capture.py:TestStdCapture.test_capture_results_accessible_by_attribute",
      "type": "function",
      "name": "TestStdCapture.test_capture_results_accessible_by_attribute",
      "file": "testing/test_capture.py",
      "line": 1116
    },
    {
      "id": "testing/test_capture.py:TestStdCapture.test_capturing_readouterr_unicode",
      "type": "function",
      "name": "TestStdCapture.test_capturing_readouterr_unicode",
      "file": "testing/test_capture.py",
      "line": 1124
    },
    {
      "id": "testing/test_capture.py:TestStdCapture.test_reset_twice_error",
      "type": "function",
      "name": "TestStdCapture.test_reset_twice_error",
      "file": "testing/test_capture.py",
      "line": 1130
    },
    {
      "id": "testing/test_capture.py:TestStdCapture.test_capturing_modify_sysouterr_in_between",
      "type": "function",
      "name": "TestStdCapture.test_capturing_modify_sysouterr_in_between",
      "file": "testing/test_capture.py",
      "line": 1138
    },
    {
      "id": "testing/test_capture.py:TestStdCapture.test_capturing_error_recursive",
      "type": "function",
      "name": "TestStdCapture.test_capturing_error_recursive",
      "file": "testing/test_capture.py",
      "line": 1154
    },
    {
      "id": "testing/test_capture.py:TestStdCapture.test_just_out_capture",
      "type": "function",
      "name": "TestStdCapture.test_just_out_capture",
      "file": "testing/test_capture.py",
      "line": 1164
    },
    {
      "id": "testing/test_capture.py:TestStdCapture.test_just_err_capture",
      "type": "function",
      "name": "TestStdCapture.test_just_err_capture",
      "file": "testing/test_capture.py",
      "line": 1172
    },
    {
      "id": "testing/test_capture.py:TestStdCapture.test_stdin_restored",
      "type": "function",
      "name": "TestStdCapture.test_stdin_restored",
      "file": "testing/test_capture.py",
      "line": 1180
    },
    {
      "id": "testing/test_capture.py:TestStdCapture.test_stdin_nulled_by_default",
      "type": "function",
      "name": "TestStdCapture.test_stdin_nulled_by_default",
      "file": "testing/test_capture.py",
      "line": 1187
    },
    {
      "id": "testing/test_capture.py:TestTeeStdCapture",
      "type": "class",
      "name": "TestTeeStdCapture",
      "file": "testing/test_capture.py",
      "line": 1195
    },
    {
      "id": "testing/test_capture.py:TestTeeStdCapture.test_capturing_error_recursive",
      "type": "function",
      "name": "TestTeeStdCapture.test_capturing_error_recursive",
      "file": "testing/test_capture.py",
      "line": 1198
    },
    {
      "id": "testing/test_capture.py:TestStdCaptureFD",
      "type": "class",
      "name": "TestStdCaptureFD",
      "file": "testing/test_capture.py",
      "line": 1212
    },
    {
      "id": "testing/test_capture.py:TestStdCaptureFD.test_simple_only_fd",
      "type": "function",
      "name": "TestStdCaptureFD.test_simple_only_fd",
      "file": "testing/test_capture.py",
      "line": 1215
    },
    {
      "id": "testing/test_capture.py:TestStdCaptureFD.test_intermingling",
      "type": "function",
      "name": "TestStdCaptureFD.test_intermingling",
      "file": "testing/test_capture.py",
      "line": 1233
    },
    {
      "id": "testing/test_capture.py:TestStdCaptureFD.test_many",
      "type": "function",
      "name": "TestStdCaptureFD.test_many",
      "file": "testing/test_capture.py",
      "line": 1247
    },
    {
      "id": "testing/test_capture.py:TestStdCaptureFDinvalidFD",
      "type": "class",
      "name": "TestStdCaptureFDinvalidFD",
      "file": "testing/test_capture.py",
      "line": 1255
    },
    {
      "id": "testing/test_capture.py:TestStdCaptureFDinvalidFD.test_stdcapture_fd_invalid_fd",
      "type": "function",
      "name": "TestStdCaptureFDinvalidFD.test_stdcapture_fd_invalid_fd",
      "file": "testing/test_capture.py",
      "line": 1256
    },
    {
      "id": "testing/test_capture.py:TestStdCaptureFDinvalidFD.test_fdcapture_invalid_fd_with_fd_reuse",
      "type": "function",
      "name": "TestStdCaptureFDinvalidFD.test_fdcapture_invalid_fd_with_fd_reuse",
      "file": "testing/test_capture.py",
      "line": 1299
    },
    {
      "id": "testing/test_capture.py:TestStdCaptureFDinvalidFD.test_fdcapture_invalid_fd_without_fd_reuse",
      "type": "function",
      "name": "TestStdCaptureFDinvalidFD.test_fdcapture_invalid_fd_without_fd_reuse",
      "file": "testing/test_capture.py",
      "line": 1314
    },
    {
      "id": "testing/test_capture.py:test_capture_not_started_but_reset",
      "type": "function",
      "name": "test_capture_not_started_but_reset",
      "file": "testing/test_capture.py",
      "line": 1331
    },
    {
      "id": "testing/test_capture.py:test_using_capsys_fixture_works_with_sys_stdout_encoding",
      "type": "function",
      "name": "test_using_capsys_fixture_works_with_sys_stdout_encoding",
      "file": "testing/test_capture.py",
      "line": 1336
    },
    {
      "id": "testing/test_capture.py:test_capsys_results_accessible_by_attribute",
      "type": "function",
      "name": "test_capsys_results_accessible_by_attribute",
      "file": "testing/test_capture.py",
      "line": 1347
    },
    {
      "id": "testing/test_capture.py:test_fdcapture_tmpfile_remains_the_same",
      "type": "function",
      "name": "test_fdcapture_tmpfile_remains_the_same",
      "file": "testing/test_capture.py",
      "line": 1355
    },
    {
      "id": "testing/test_capture.py:test_close_and_capture_again",
      "type": "function",
      "name": "test_close_and_capture_again",
      "file": "testing/test_capture.py",
      "line": 1368
    },
    {
      "id": "testing/test_capture.py:test_capturing_and_logging_fundamentals",
      "type": "function",
      "name": "test_capturing_and_logging_fundamentals",
      "file": "testing/test_capture.py",
      "line": 1393
    },
    {
      "id": "testing/test_capture.py:test_error_attribute_issue555",
      "type": "function",
      "name": "test_error_attribute_issue555",
      "file": "testing/test_capture.py",
      "line": 1434
    },
    {
      "id": "testing/test_capture.py:test_windowsconsoleio_workaround_non_standard_streams",
      "type": "function",
      "name": "test_windowsconsoleio_workaround_non_standard_streams",
      "file": "testing/test_capture.py",
      "line": 1451
    },
    {
      "id": "testing/test_capture.py:test_windowsconsoleio_workaround_non_standard_streams.DummyStream",
      "type": "class",
      "name": "test_windowsconsoleio_workaround_non_standard_streams.DummyStream",
      "file": "testing/test_capture.py",
      "line": 1458
    },
    {
      "id": "testing/test_capture.py:test_windowsconsoleio_workaround_non_standard_streams.DummyStream.write",
      "type": "function",
      "name": "test_windowsconsoleio_workaround_non_standard_streams.DummyStream.write",
      "file": "testing/test_capture.py",
      "line": 1459
    },
    {
      "id": "testing/test_capture.py:test_dontreadfrominput_has_encoding",
      "type": "function",
      "name": "test_dontreadfrominput_has_encoding",
      "file": "testing/test_capture.py",
      "line": 1466
    },
    {
      "id": "testing/test_capture.py:test_crash_on_closing_tmpfile_py27",
      "type": "function",
      "name": "test_crash_on_closing_tmpfile_py27",
      "file": "testing/test_capture.py",
      "line": 1480
    },
    {
      "id": "testing/test_capture.py:test_global_capture_with_live_logging",
      "type": "function",
      "name": "test_global_capture_with_live_logging",
      "file": "testing/test_capture.py",
      "line": 1517
    },
    {
      "id": "testing/test_capture.py:test_capture_with_live_logging",
      "type": "function",
      "name": "test_capture_with_live_logging",
      "file": "testing/test_capture.py",
      "line": 1576
    },
    {
      "id": "testing/test_capture.py:test_typeerror_encodedfile_write",
      "type": "function",
      "name": "test_typeerror_encodedfile_write",
      "file": "testing/test_capture.py",
      "line": 1611
    },
    {
      "id": "testing/test_capture.py:test_stderr_write_returns_len",
      "type": "function",
      "name": "test_stderr_write_returns_len",
      "file": "testing/test_capture.py",
      "line": 1630
    },
    {
      "id": "testing/test_capture.py:test_encodedfile_writelines",
      "type": "function",
      "name": "test_encodedfile_writelines",
      "file": "testing/test_capture.py",
      "line": 1635
    },
    {
      "id": "testing/test_capture.py:test__get_multicapture",
      "type": "function",
      "name": "test__get_multicapture",
      "file": "testing/test_capture.py",
      "line": 1648
    },
    {
      "id": "testing/test_capture.py:test_logging_while_collecting",
      "type": "function",
      "name": "test_logging_while_collecting",
      "file": "testing/test_capture.py",
      "line": 1655
    },
    {
      "id": "testing/test_parseopt.py",
      "type": "file",
      "name": "test_parseopt.py",
      "file": "testing/test_parseopt.py",
      "line": 0
    },
    {
      "id": "testing/test_parseopt.py:parser",
      "type": "function",
      "name": "parser",
      "file": "testing/test_parseopt.py",
      "line": 17
    },
    {
      "id": "testing/test_parseopt.py:TestParser",
      "type": "class",
      "name": "TestParser",
      "file": "testing/test_parseopt.py",
      "line": 21
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_no_help_by_default",
      "type": "function",
      "name": "TestParser.test_no_help_by_default",
      "file": "testing/test_parseopt.py",
      "line": 22
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_custom_prog",
      "type": "function",
      "name": "TestParser.test_custom_prog",
      "file": "testing/test_parseopt.py",
      "line": 26
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_argument",
      "type": "function",
      "name": "TestParser.test_argument",
      "file": "testing/test_parseopt.py",
      "line": 32
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_argument_type",
      "type": "function",
      "name": "TestParser.test_argument_type",
      "file": "testing/test_parseopt.py",
      "line": 50
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_argument_processopt",
      "type": "function",
      "name": "TestParser.test_argument_processopt",
      "file": "testing/test_parseopt.py",
      "line": 65
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_group_add_and_get",
      "type": "function",
      "name": "TestParser.test_group_add_and_get",
      "file": "testing/test_parseopt.py",
      "line": 73
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_getgroup_simple",
      "type": "function",
      "name": "TestParser.test_getgroup_simple",
      "file": "testing/test_parseopt.py",
      "line": 78
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_group_ordering",
      "type": "function",
      "name": "TestParser.test_group_ordering",
      "file": "testing/test_parseopt.py",
      "line": 85
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_group_addoption",
      "type": "function",
      "name": "TestParser.test_group_addoption",
      "file": "testing/test_parseopt.py",
      "line": 93
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_group_addoption_conflict",
      "type": "function",
      "name": "TestParser.test_group_addoption_conflict",
      "file": "testing/test_parseopt.py",
      "line": 99
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_group_shortopt_lowercase",
      "type": "function",
      "name": "TestParser.test_group_shortopt_lowercase",
      "file": "testing/test_parseopt.py",
      "line": 106
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_parser_addoption",
      "type": "function",
      "name": "TestParser.test_parser_addoption",
      "file": "testing/test_parseopt.py",
      "line": 114
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_parse",
      "type": "function",
      "name": "TestParser.test_parse",
      "file": "testing/test_parseopt.py",
      "line": 120
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_parse2",
      "type": "function",
      "name": "TestParser.test_parse2",
      "file": "testing/test_parseopt.py",
      "line": 126
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_parse_known_args",
      "type": "function",
      "name": "TestParser.test_parse_known_args",
      "file": "testing/test_parseopt.py",
      "line": 130
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_parse_known_and_unknown_args",
      "type": "function",
      "name": "TestParser.test_parse_known_and_unknown_args",
      "file": "testing/test_parseopt.py",
      "line": 137
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_parse_will_set_default",
      "type": "function",
      "name": "TestParser.test_parse_will_set_default",
      "file": "testing/test_parseopt.py",
      "line": 146
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_parse_setoption",
      "type": "function",
      "name": "TestParser.test_parse_setoption",
      "file": "testing/test_parseopt.py",
      "line": 154
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_parse_special_destination",
      "type": "function",
      "name": "TestParser.test_parse_special_destination",
      "file": "testing/test_parseopt.py",
      "line": 164
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_parse_split_positional_arguments",
      "type": "function",
      "name": "TestParser.test_parse_split_positional_arguments",
      "file": "testing/test_parseopt.py",
      "line": 169
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_parse_defaultgetter",
      "type": "function",
      "name": "TestParser.test_parse_defaultgetter",
      "file": "testing/test_parseopt.py",
      "line": 183
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_parse_defaultgetter.defaultget",
      "type": "function",
      "name": "TestParser.test_parse_defaultgetter.defaultget",
      "file": "testing/test_parseopt.py",
      "line": 184
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_drop_short_helper",
      "type": "function",
      "name": "TestParser.test_drop_short_helper",
      "file": "testing/test_parseopt.py",
      "line": 201
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_drop_short_0",
      "type": "function",
      "name": "TestParser.test_drop_short_0",
      "file": "testing/test_parseopt.py",
      "line": 238
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_drop_short_2",
      "type": "function",
      "name": "TestParser.test_drop_short_2",
      "file": "testing/test_parseopt.py",
      "line": 245
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_drop_short_3",
      "type": "function",
      "name": "TestParser.test_drop_short_3",
      "file": "testing/test_parseopt.py",
      "line": 250
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_drop_short_help0",
      "type": "function",
      "name": "TestParser.test_drop_short_help0",
      "file": "testing/test_parseopt.py",
      "line": 256
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_drop_short_help1",
      "type": "function",
      "name": "TestParser.test_drop_short_help1",
      "file": "testing/test_parseopt.py",
      "line": 263
    },
    {
      "id": "testing/test_parseopt.py:TestParser.test_multiple_metavar_help",
      "type": "function",
      "name": "TestParser.test_multiple_metavar_help",
      "file": "testing/test_parseopt.py",
      "line": 277
    },
    {
      "id": "testing/test_parseopt.py:test_argcomplete",
      "type": "function",
      "name": "test_argcomplete",
      "file": "testing/test_parseopt.py",
      "line": 292
    },
    {
      "id": "testing/test_link_resolve.py",
      "type": "file",
      "name": "test_link_resolve.py",
      "file": "testing/test_link_resolve.py",
      "line": 0
    },
    {
      "id": "testing/test_link_resolve.py:subst_path_windows",
      "type": "function",
      "name": "subst_path_windows",
      "file": "testing/test_link_resolve.py",
      "line": 13
    },
    {
      "id": "testing/test_link_resolve.py:subst_path_linux",
      "type": "function",
      "name": "subst_path_linux",
      "file": "testing/test_link_resolve.py",
      "line": 37
    },
    {
      "id": "testing/test_link_resolve.py:test_link_resolve",
      "type": "function",
      "name": "test_link_resolve",
      "file": "testing/test_link_resolve.py",
      "line": 51
    },
    {
      "id": "testing/test_entry_points.py",
      "type": "file",
      "name": "test_entry_points.py",
      "file": "testing/test_entry_points.py",
      "line": 0
    },
    {
      "id": "testing/test_entry_points.py:test_pytest_entry_points_are_identical",
      "type": "function",
      "name": "test_pytest_entry_points_are_identical",
      "file": "testing/test_entry_points.py",
      "line": 4
    },
    {
      "id": "testing/test_helpconfig.py",
      "type": "file",
      "name": "test_helpconfig.py",
      "file": "testing/test_helpconfig.py",
      "line": 0
    },
    {
      "id": "testing/test_helpconfig.py:test_version_verbose",
      "type": "function",
      "name": "test_version_verbose",
      "file": "testing/test_helpconfig.py",
      "line": 6
    },
    {
      "id": "testing/test_helpconfig.py:test_version_less_verbose",
      "type": "function",
      "name": "test_version_less_verbose",
      "file": "testing/test_helpconfig.py",
      "line": 15
    },
    {
      "id": "testing/test_helpconfig.py:test_versions",
      "type": "function",
      "name": "test_versions",
      "file": "testing/test_helpconfig.py",
      "line": 22
    },
    {
      "id": "testing/test_helpconfig.py:test_help",
      "type": "function",
      "name": "test_help",
      "file": "testing/test_helpconfig.py",
      "line": 28
    },
    {
      "id": "testing/test_helpconfig.py:test_none_help_param_raises_exception",
      "type": "function",
      "name": "test_none_help_param_raises_exception",
      "file": "testing/test_helpconfig.py",
      "line": 48
    },
    {
      "id": "testing/test_helpconfig.py:test_empty_help_param",
      "type": "function",
      "name": "test_empty_help_param",
      "file": "testing/test_helpconfig.py",
      "line": 62
    },
    {
      "id": "testing/test_helpconfig.py:test_hookvalidation_unknown",
      "type": "function",
      "name": "test_hookvalidation_unknown",
      "file": "testing/test_helpconfig.py",
      "line": 81
    },
    {
      "id": "testing/test_helpconfig.py:test_hookvalidation_optional",
      "type": "function",
      "name": "test_hookvalidation_optional",
      "file": "testing/test_helpconfig.py",
      "line": 93
    },
    {
      "id": "testing/test_helpconfig.py:test_traceconfig",
      "type": "function",
      "name": "test_traceconfig",
      "file": "testing/test_helpconfig.py",
      "line": 106
    },
    {
      "id": "testing/test_helpconfig.py:test_debug",
      "type": "function",
      "name": "test_debug",
      "file": "testing/test_helpconfig.py",
      "line": 111
    },
    {
      "id": "testing/test_helpconfig.py:test_PYTEST_DEBUG",
      "type": "function",
      "name": "test_PYTEST_DEBUG",
      "file": "testing/test_helpconfig.py",
      "line": 118
    },
    {
      "id": "testing/test_debugging.py",
      "type": "file",
      "name": "test_debugging.py",
      "file": "testing/test_debugging.py",
      "line": 0
    },
    {
      "id": "testing/test_debugging.py:pdb_env",
      "type": "function",
      "name": "pdb_env",
      "file": "testing/test_debugging.py",
      "line": 16
    },
    {
      "id": "testing/test_debugging.py:runpdb",
      "type": "function",
      "name": "runpdb",
      "file": "testing/test_debugging.py",
      "line": 23
    },
    {
      "id": "testing/test_debugging.py:runpdb_and_get_stdout",
      "type": "function",
      "name": "runpdb_and_get_stdout",
      "file": "testing/test_debugging.py",
      "line": 28
    },
    {
      "id": "testing/test_debugging.py:runpdb_and_get_report",
      "type": "function",
      "name": "runpdb_and_get_report",
      "file": "testing/test_debugging.py",
      "line": 33
    },
    {
      "id": "testing/test_debugging.py:custom_pdb_calls",
      "type": "function",
      "name": "custom_pdb_calls",
      "file": "testing/test_debugging.py",
      "line": 41
    },
    {
      "id": "testing/test_debugging.py:custom_pdb_calls._CustomPdb",
      "type": "class",
      "name": "custom_pdb_calls._CustomPdb",
      "file": "testing/test_debugging.py",
      "line": 45
    },
    {
      "id": "testing/test_debugging.py:custom_pdb_calls._CustomPdb.reset",
      "type": "function",
      "name": "custom_pdb_calls._CustomPdb.reset",
      "file": "testing/test_debugging.py",
      "line": 51
    },
    {
      "id": "testing/test_debugging.py:custom_pdb_calls._CustomPdb.interaction",
      "type": "function",
      "name": "custom_pdb_calls._CustomPdb.interaction",
      "file": "testing/test_debugging.py",
      "line": 54
    },
    {
      "id": "testing/test_debugging.py:custom_debugger_hook",
      "type": "function",
      "name": "custom_debugger_hook",
      "file": "testing/test_debugging.py",
      "line": 62
    },
    {
      "id": "testing/test_debugging.py:custom_debugger_hook._CustomDebugger",
      "type": "class",
      "name": "custom_debugger_hook._CustomDebugger",
      "file": "testing/test_debugging.py",
      "line": 66
    },
    {
      "id": "testing/test_debugging.py:custom_debugger_hook._CustomDebugger.reset",
      "type": "function",
      "name": "custom_debugger_hook._CustomDebugger.reset",
      "file": "testing/test_debugging.py",
      "line": 70
    },
    {
      "id": "testing/test_debugging.py:custom_debugger_hook._CustomDebugger.interaction",
      "type": "function",
      "name": "custom_debugger_hook._CustomDebugger.interaction",
      "file": "testing/test_debugging.py",
      "line": 73
    },
    {
      "id": "testing/test_debugging.py:custom_debugger_hook._CustomDebugger.set_trace",
      "type": "function",
      "name": "custom_debugger_hook._CustomDebugger.set_trace",
      "file": "testing/test_debugging.py",
      "line": 76
    },
    {
      "id": "testing/test_debugging.py:TestPDB",
      "type": "class",
      "name": "TestPDB",
      "file": "testing/test_debugging.py",
      "line": 85
    },
    {
      "id": "testing/test_debugging.py:TestPDB.pdblist",
      "type": "function",
      "name": "TestPDB.pdblist",
      "file": "testing/test_debugging.py",
      "line": 87
    },
    {
      "id": "testing/test_debugging.py:TestPDB.pdblist.mypdb",
      "type": "function",
      "name": "TestPDB.pdblist.mypdb",
      "file": "testing/test_debugging.py",
      "line": 91
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_on_fail",
      "type": "function",
      "name": "TestPDB.test_pdb_on_fail",
      "file": "testing/test_debugging.py",
      "line": 98
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_on_xfail",
      "type": "function",
      "name": "TestPDB.test_pdb_on_xfail",
      "file": "testing/test_debugging.py",
      "line": 111
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_on_skip",
      "type": "function",
      "name": "TestPDB.test_pdb_on_skip",
      "file": "testing/test_debugging.py",
      "line": 124
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_on_top_level_raise_skiptest",
      "type": "function",
      "name": "TestPDB.test_pdb_on_top_level_raise_skiptest",
      "file": "testing/test_debugging.py",
      "line": 136
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_on_BdbQuit",
      "type": "function",
      "name": "TestPDB.test_pdb_on_BdbQuit",
      "file": "testing/test_debugging.py",
      "line": 146
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_on_KeyboardInterrupt",
      "type": "function",
      "name": "TestPDB.test_pdb_on_KeyboardInterrupt",
      "file": "testing/test_debugging.py",
      "line": 158
    },
    {
      "id": "testing/test_debugging.py:TestPDB.flush",
      "type": "function",
      "name": "TestPDB.flush",
      "file": "testing/test_debugging.py",
      "line": 170
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_unittest_postmortem",
      "type": "function",
      "name": "TestPDB.test_pdb_unittest_postmortem",
      "file": "testing/test_debugging.py",
      "line": 177
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_unittest_skip",
      "type": "function",
      "name": "TestPDB.test_pdb_unittest_skip",
      "file": "testing/test_debugging.py",
      "line": 197
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_print_captured_stdout_and_stderr",
      "type": "function",
      "name": "TestPDB.test_pdb_print_captured_stdout_and_stderr",
      "file": "testing/test_debugging.py",
      "line": 214
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_dont_print_empty_captured_stdout_and_stderr",
      "type": "function",
      "name": "TestPDB.test_pdb_dont_print_empty_captured_stdout_and_stderr",
      "file": "testing/test_debugging.py",
      "line": 243
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_print_captured_logs",
      "type": "function",
      "name": "TestPDB.test_pdb_print_captured_logs",
      "file": "testing/test_debugging.py",
      "line": 261
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_print_captured_logs_nologging",
      "type": "function",
      "name": "TestPDB.test_pdb_print_captured_logs_nologging",
      "file": "testing/test_debugging.py",
      "line": 280
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_interaction_exception",
      "type": "function",
      "name": "TestPDB.test_pdb_interaction_exception",
      "file": "testing/test_debugging.py",
      "line": 299
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_interaction_on_collection_issue181",
      "type": "function",
      "name": "TestPDB.test_pdb_interaction_on_collection_issue181",
      "file": "testing/test_debugging.py",
      "line": 319
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_interaction_on_internal_error",
      "type": "function",
      "name": "TestPDB.test_pdb_interaction_on_internal_error",
      "file": "testing/test_debugging.py",
      "line": 333
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_prevent_ConftestImportFailure_hiding_exception",
      "type": "function",
      "name": "TestPDB.test_pdb_prevent_ConftestImportFailure_hiding_exception",
      "file": "testing/test_debugging.py",
      "line": 359
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_interaction_capturing_simple",
      "type": "function",
      "name": "TestPDB.test_pdb_interaction_capturing_simple",
      "file": "testing/test_debugging.py",
      "line": 376
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_set_trace_kwargs",
      "type": "function",
      "name": "TestPDB.test_pdb_set_trace_kwargs",
      "file": "testing/test_debugging.py",
      "line": 400
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_set_trace_interception",
      "type": "function",
      "name": "TestPDB.test_pdb_set_trace_interception",
      "file": "testing/test_debugging.py",
      "line": 423
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_and_capsys",
      "type": "function",
      "name": "TestPDB.test_pdb_and_capsys",
      "file": "testing/test_debugging.py",
      "line": 441
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_with_caplog_on_pdb_invocation",
      "type": "function",
      "name": "TestPDB.test_pdb_with_caplog_on_pdb_invocation",
      "file": "testing/test_debugging.py",
      "line": 458
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_set_trace_capturing_afterwards",
      "type": "function",
      "name": "TestPDB.test_set_trace_capturing_afterwards",
      "file": "testing/test_debugging.py",
      "line": 476
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_interaction_doctest",
      "type": "function",
      "name": "TestPDB.test_pdb_interaction_doctest",
      "file": "testing/test_debugging.py",
      "line": 497
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_doctest_set_trace_quit",
      "type": "function",
      "name": "TestPDB.test_doctest_set_trace_quit",
      "file": "testing/test_debugging.py",
      "line": 523
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_interaction_capturing_twice",
      "type": "function",
      "name": "TestPDB.test_pdb_interaction_capturing_twice",
      "file": "testing/test_debugging.py",
      "line": 545
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_with_injected_do_debug",
      "type": "function",
      "name": "TestPDB.test_pdb_with_injected_do_debug",
      "file": "testing/test_debugging.py",
      "line": 581
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_without_capture",
      "type": "function",
      "name": "TestPDB.test_pdb_without_capture",
      "file": "testing/test_debugging.py",
      "line": 656
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_continue_with_recursive_debug",
      "type": "function",
      "name": "TestPDB.test_pdb_continue_with_recursive_debug",
      "file": "testing/test_debugging.py",
      "line": 673
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_used_outside_test",
      "type": "function",
      "name": "TestPDB.test_pdb_used_outside_test",
      "file": "testing/test_debugging.py",
      "line": 765
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_used_in_generate_tests",
      "type": "function",
      "name": "TestPDB.test_pdb_used_in_generate_tests",
      "file": "testing/test_debugging.py",
      "line": 779
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_collection_failure_is_shown",
      "type": "function",
      "name": "TestPDB.test_pdb_collection_failure_is_shown",
      "file": "testing/test_debugging.py",
      "line": 796
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_enter_leave_pdb_hooks_are_called",
      "type": "function",
      "name": "TestPDB.test_enter_leave_pdb_hooks_are_called",
      "file": "testing/test_debugging.py",
      "line": 804
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_custom_cls",
      "type": "function",
      "name": "TestPDB.test_pdb_custom_cls",
      "file": "testing/test_debugging.py",
      "line": 859
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_custom_cls_invalid",
      "type": "function",
      "name": "TestPDB.test_pdb_custom_cls_invalid",
      "file": "testing/test_debugging.py",
      "line": 869
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_validate_usepdb_cls",
      "type": "function",
      "name": "TestPDB.test_pdb_validate_usepdb_cls",
      "file": "testing/test_debugging.py",
      "line": 877
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_custom_cls_without_pdb",
      "type": "function",
      "name": "TestPDB.test_pdb_custom_cls_without_pdb",
      "file": "testing/test_debugging.py",
      "line": 885
    },
    {
      "id": "testing/test_debugging.py:TestPDB.test_pdb_custom_cls_with_set_trace",
      "type": "function",
      "name": "TestPDB.test_pdb_custom_cls_with_set_trace",
      "file": "testing/test_debugging.py",
      "line": 893
    },
    {
      "id": "testing/test_debugging.py:TestDebuggingBreakpoints",
      "type": "class",
      "name": "TestDebuggingBreakpoints",
      "file": "testing/test_debugging.py",
      "line": 927
    },
    {
      "id": "testing/test_debugging.py:TestDebuggingBreakpoints.test_sys_breakpointhook_configure_and_unconfigure",
      "type": "function",
      "name": "TestDebuggingBreakpoints.test_sys_breakpointhook_configure_and_unconfigure",
      "file": "testing/test_debugging.py",
      "line": 929
    },
    {
      "id": "testing/test_debugging.py:TestDebuggingBreakpoints.test_pdb_custom_cls",
      "type": "function",
      "name": "TestDebuggingBreakpoints.test_pdb_custom_cls",
      "file": "testing/test_debugging.py",
      "line": 961
    },
    {
      "id": "testing/test_debugging.py:TestDebuggingBreakpoints.test_environ_custom_class",
      "type": "function",
      "name": "TestDebuggingBreakpoints.test_environ_custom_class",
      "file": "testing/test_debugging.py",
      "line": 975
    },
    {
      "id": "testing/test_debugging.py:TestDebuggingBreakpoints.test_sys_breakpoint_interception",
      "type": "function",
      "name": "TestDebuggingBreakpoints.test_sys_breakpoint_interception",
      "file": "testing/test_debugging.py",
      "line": 1009
    },
    {
      "id": "testing/test_debugging.py:TestDebuggingBreakpoints.test_pdb_not_altered",
      "type": "function",
      "name": "TestDebuggingBreakpoints.test_pdb_not_altered",
      "file": "testing/test_debugging.py",
      "line": 1026
    },
    {
      "id": "testing/test_debugging.py:TestTraceOption",
      "type": "class",
      "name": "TestTraceOption",
      "file": "testing/test_debugging.py",
      "line": 1045
    },
    {
      "id": "testing/test_debugging.py:TestTraceOption.test_trace_sets_breakpoint",
      "type": "function",
      "name": "TestTraceOption.test_trace_sets_breakpoint",
      "file": "testing/test_debugging.py",
      "line": 1046
    },
    {
      "id": "testing/test_debugging.py:TestTraceOption.test_trace_with_parametrize_handles_shared_fixtureinfo",
      "type": "function",
      "name": "TestTraceOption.test_trace_with_parametrize_handles_shared_fixtureinfo",
      "file": "testing/test_debugging.py",
      "line": 1077
    },
    {
      "id": "testing/test_debugging.py:test_trace_after_runpytest",
      "type": "function",
      "name": "test_trace_after_runpytest",
      "file": "testing/test_debugging.py",
      "line": 1125
    },
    {
      "id": "testing/test_debugging.py:test_quit_with_swallowed_SystemExit",
      "type": "function",
      "name": "test_quit_with_swallowed_SystemExit",
      "file": "testing/test_debugging.py",
      "line": 1156
    },
    {
      "id": "testing/test_debugging.py:test_pdb_suspends_fixture_capturing",
      "type": "function",
      "name": "test_pdb_suspends_fixture_capturing",
      "file": "testing/test_debugging.py",
      "line": 1186
    },
    {
      "id": "testing/test_debugging.py:test_pdbcls_via_local_module",
      "type": "function",
      "name": "test_pdbcls_via_local_module",
      "file": "testing/test_debugging.py",
      "line": 1234
    },
    {
      "id": "testing/test_debugging.py:test_raises_bdbquit_with_eoferror",
      "type": "function",
      "name": "test_raises_bdbquit_with_eoferror",
      "file": "testing/test_debugging.py",
      "line": 1277
    },
    {
      "id": "testing/test_debugging.py:test_pdb_wrapper_class_is_reused",
      "type": "function",
      "name": "test_pdb_wrapper_class_is_reused",
      "file": "testing/test_debugging.py",
      "line": 1296
    },
    {
      "id": "testing/test_cacheprovider.py",
      "type": "file",
      "name": "test_cacheprovider.py",
      "file": "testing/test_cacheprovider.py",
      "line": 0
    },
    {
      "id": "testing/test_cacheprovider.py:TestNewAPI",
      "type": "class",
      "name": "TestNewAPI",
      "file": "testing/test_cacheprovider.py",
      "line": 16
    },
    {
      "id": "testing/test_cacheprovider.py:TestNewAPI.test_config_cache_mkdir",
      "type": "function",
      "name": "TestNewAPI.test_config_cache_mkdir",
      "file": "testing/test_cacheprovider.py",
      "line": 17
    },
    {
      "id": "testing/test_cacheprovider.py:TestNewAPI.test_config_cache_dataerror",
      "type": "function",
      "name": "TestNewAPI.test_config_cache_dataerror",
      "file": "testing/test_cacheprovider.py",
      "line": 27
    },
    {
      "id": "testing/test_cacheprovider.py:TestNewAPI.test_cache_writefail_cachfile_silent",
      "type": "function",
      "name": "TestNewAPI.test_cache_writefail_cachfile_silent",
      "file": "testing/test_cacheprovider.py",
      "line": 39
    },
    {
      "id": "testing/test_cacheprovider.py:TestNewAPI.unwritable_cache_dir",
      "type": "function",
      "name": "TestNewAPI.unwritable_cache_dir",
      "file": "testing/test_cacheprovider.py",
      "line": 50
    },
    {
      "id": "testing/test_cacheprovider.py:TestNewAPI.test_cache_writefail_permissions",
      "type": "function",
      "name": "TestNewAPI.test_cache_writefail_permissions",
      "file": "testing/test_cacheprovider.py",
      "line": 64
    },
    {
      "id": "testing/test_cacheprovider.py:TestNewAPI.test_cache_failure_warns",
      "type": "function",
      "name": "TestNewAPI.test_cache_failure_warns",
      "file": "testing/test_cacheprovider.py",
      "line": 74
    },
    {
      "id": "testing/test_cacheprovider.py:TestNewAPI.test_config_cache",
      "type": "function",
      "name": "TestNewAPI.test_config_cache",
      "file": "testing/test_cacheprovider.py",
      "line": 98
    },
    {
      "id": "testing/test_cacheprovider.py:TestNewAPI.test_cachefuncarg",
      "type": "function",
      "name": "TestNewAPI.test_cachefuncarg",
      "file": "testing/test_cacheprovider.py",
      "line": 116
    },
    {
      "id": "testing/test_cacheprovider.py:TestNewAPI.test_custom_rel_cache_dir",
      "type": "function",
      "name": "TestNewAPI.test_custom_rel_cache_dir",
      "file": "testing/test_cacheprovider.py",
      "line": 133
    },
    {
      "id": "testing/test_cacheprovider.py:TestNewAPI.test_custom_abs_cache_dir",
      "type": "function",
      "name": "TestNewAPI.test_custom_abs_cache_dir",
      "file": "testing/test_cacheprovider.py",
      "line": 147
    },
    {
      "id": "testing/test_cacheprovider.py:TestNewAPI.test_custom_cache_dir_with_env_var",
      "type": "function",
      "name": "TestNewAPI.test_custom_cache_dir_with_env_var",
      "file": "testing/test_cacheprovider.py",
      "line": 164
    },
    {
      "id": "testing/test_cacheprovider.py:test_cache_reportheader",
      "type": "function",
      "name": "test_cache_reportheader",
      "file": "testing/test_cacheprovider.py",
      "line": 182
    },
    {
      "id": "testing/test_cacheprovider.py:test_cache_reportheader_external_abspath",
      "type": "function",
      "name": "test_cache_reportheader_external_abspath",
      "file": "testing/test_cacheprovider.py",
      "line": 194
    },
    {
      "id": "testing/test_cacheprovider.py:test_cache_show",
      "type": "function",
      "name": "test_cache_show",
      "file": "testing/test_cacheprovider.py",
      "line": 214
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed",
      "type": "class",
      "name": "TestLastFailed",
      "file": "testing/test_cacheprovider.py",
      "line": 266
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_usecase",
      "type": "function",
      "name": "TestLastFailed.test_lastfailed_usecase",
      "file": "testing/test_cacheprovider.py",
      "line": 267
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_failedfirst_order",
      "type": "function",
      "name": "TestLastFailed.test_failedfirst_order",
      "file": "testing/test_cacheprovider.py",
      "line": 315
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_failedfirst_order",
      "type": "function",
      "name": "TestLastFailed.test_lastfailed_failedfirst_order",
      "file": "testing/test_cacheprovider.py",
      "line": 334
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_difference_invocations",
      "type": "function",
      "name": "TestLastFailed.test_lastfailed_difference_invocations",
      "file": "testing/test_cacheprovider.py",
      "line": 347
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_usecase_splice",
      "type": "function",
      "name": "TestLastFailed.test_lastfailed_usecase_splice",
      "file": "testing/test_cacheprovider.py",
      "line": 378
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_xpass",
      "type": "function",
      "name": "TestLastFailed.test_lastfailed_xpass",
      "file": "testing/test_cacheprovider.py",
      "line": 393
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_non_serializable_parametrize",
      "type": "function",
      "name": "TestLastFailed.test_non_serializable_parametrize",
      "file": "testing/test_cacheprovider.py",
      "line": 407
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_terminal_report_lastfailed",
      "type": "function",
      "name": "TestLastFailed.test_terminal_report_lastfailed",
      "file": "testing/test_cacheprovider.py",
      "line": 426
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_terminal_report_failedfirst",
      "type": "function",
      "name": "TestLastFailed.test_terminal_report_failedfirst",
      "file": "testing/test_cacheprovider.py",
      "line": 483
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_collectfailure",
      "type": "function",
      "name": "TestLastFailed.test_lastfailed_collectfailure",
      "file": "testing/test_cacheprovider.py",
      "line": 502
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_collectfailure.rlf",
      "type": "function",
      "name": "TestLastFailed.test_lastfailed_collectfailure.rlf",
      "file": "testing/test_cacheprovider.py",
      "line": 516
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_failure_subset",
      "type": "function",
      "name": "TestLastFailed.test_lastfailed_failure_subset",
      "file": "testing/test_cacheprovider.py",
      "line": 535
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_failure_subset.rlf",
      "type": "function",
      "name": "TestLastFailed.test_lastfailed_failure_subset.rlf",
      "file": "testing/test_cacheprovider.py",
      "line": 564
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_creates_cache_when_needed",
      "type": "function",
      "name": "TestLastFailed.test_lastfailed_creates_cache_when_needed",
      "file": "testing/test_cacheprovider.py",
      "line": 591
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_xfail_not_considered_failure",
      "type": "function",
      "name": "TestLastFailed.test_xfail_not_considered_failure",
      "file": "testing/test_cacheprovider.py",
      "line": 605
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_xfail_strict_considered_failure",
      "type": "function",
      "name": "TestLastFailed.test_xfail_strict_considered_failure",
      "file": "testing/test_cacheprovider.py",
      "line": 617
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_failed_changed_to_xfail_or_skip",
      "type": "function",
      "name": "TestLastFailed.test_failed_changed_to_xfail_or_skip",
      "file": "testing/test_cacheprovider.py",
      "line": 632
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_lf_and_ff_prints_no_needless_message",
      "type": "function",
      "name": "TestLastFailed.test_lf_and_ff_prints_no_needless_message",
      "file": "testing/test_cacheprovider.py",
      "line": 663
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.get_cached_last_failed",
      "type": "function",
      "name": "TestLastFailed.get_cached_last_failed",
      "file": "testing/test_cacheprovider.py",
      "line": 680
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_cache_cumulative",
      "type": "function",
      "name": "TestLastFailed.test_cache_cumulative",
      "file": "testing/test_cacheprovider.py",
      "line": 685
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_no_failures_behavior_all_passed",
      "type": "function",
      "name": "TestLastFailed.test_lastfailed_no_failures_behavior_all_passed",
      "file": "testing/test_cacheprovider.py",
      "line": 749
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_no_failures_behavior_empty_cache",
      "type": "function",
      "name": "TestLastFailed.test_lastfailed_no_failures_behavior_empty_cache",
      "file": "testing/test_cacheprovider.py",
      "line": 791
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_skip_collection",
      "type": "function",
      "name": "TestLastFailed.test_lastfailed_skip_collection",
      "file": "testing/test_cacheprovider.py",
      "line": 807
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_skip_collection_with_nesting",
      "type": "function",
      "name": "TestLastFailed.test_lastfailed_skip_collection_with_nesting",
      "file": "testing/test_cacheprovider.py",
      "line": 859
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_with_known_failures_not_being_selected",
      "type": "function",
      "name": "TestLastFailed.test_lastfailed_with_known_failures_not_being_selected",
      "file": "testing/test_cacheprovider.py",
      "line": 886
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_args_with_deselected",
      "type": "function",
      "name": "TestLastFailed.test_lastfailed_args_with_deselected",
      "file": "testing/test_cacheprovider.py",
      "line": 944
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_with_class_items",
      "type": "function",
      "name": "TestLastFailed.test_lastfailed_with_class_items",
      "file": "testing/test_cacheprovider.py",
      "line": 990
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_with_all_filtered",
      "type": "function",
      "name": "TestLastFailed.test_lastfailed_with_all_filtered",
      "file": "testing/test_cacheprovider.py",
      "line": 1024
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_packages",
      "type": "function",
      "name": "TestLastFailed.test_packages",
      "file": "testing/test_cacheprovider.py",
      "line": 1060
    },
    {
      "id": "testing/test_cacheprovider.py:TestLastFailed.test_non_python_file_skipped",
      "type": "function",
      "name": "TestLastFailed.test_non_python_file_skipped",
      "file": "testing/test_cacheprovider.py",
      "line": 1090
    },
    {
      "id": "testing/test_cacheprovider.py:TestNewFirst",
      "type": "class",
      "name": "TestNewFirst",
      "file": "testing/test_cacheprovider.py",
      "line": 1113
    },
    {
      "id": "testing/test_cacheprovider.py:TestNewFirst.test_newfirst_usecase",
      "type": "function",
      "name": "TestNewFirst.test_newfirst_usecase",
      "file": "testing/test_cacheprovider.py",
      "line": 1114
    },
    {
      "id": "testing/test_cacheprovider.py:TestNewFirst.test_newfirst_parametrize",
      "type": "function",
      "name": "TestNewFirst.test_newfirst_parametrize",
      "file": "testing/test_cacheprovider.py",
      "line": 1172
    },
    {
      "id": "testing/test_cacheprovider.py:TestReadme",
      "type": "class",
      "name": "TestReadme",
      "file": "testing/test_cacheprovider.py",
      "line": 1237
    },
    {
      "id": "testing/test_cacheprovider.py:TestReadme.check_readme",
      "type": "function",
      "name": "TestReadme.check_readme",
      "file": "testing/test_cacheprovider.py",
      "line": 1238
    },
    {
      "id": "testing/test_cacheprovider.py:TestReadme.test_readme_passed",
      "type": "function",
      "name": "TestReadme.test_readme_passed",
      "file": "testing/test_cacheprovider.py",
      "line": 1244
    },
    {
      "id": "testing/test_cacheprovider.py:TestReadme.test_readme_failed",
      "type": "function",
      "name": "TestReadme.test_readme_failed",
      "file": "testing/test_cacheprovider.py",
      "line": 1249
    },
    {
      "id": "testing/test_cacheprovider.py:test_gitignore",
      "type": "function",
      "name": "test_gitignore",
      "file": "testing/test_cacheprovider.py",
      "line": 1255
    },
    {
      "id": "testing/test_cacheprovider.py:test_preserve_keys_order",
      "type": "function",
      "name": "test_preserve_keys_order",
      "file": "testing/test_cacheprovider.py",
      "line": 1272
    },
    {
      "id": "testing/test_cacheprovider.py:test_does_not_create_boilerplate_in_existing_dirs",
      "type": "function",
      "name": "test_does_not_create_boilerplate_in_existing_dirs",
      "file": "testing/test_cacheprovider.py",
      "line": 1283
    },
    {
      "id": "testing/test_cacheprovider.py:test_cachedir_tag",
      "type": "function",
      "name": "test_cachedir_tag",
      "file": "testing/test_cacheprovider.py",
      "line": 1301
    },
    {
      "id": "testing/test_cacheprovider.py:test_clioption_with_cacheshow_and_help",
      "type": "function",
      "name": "test_clioption_with_cacheshow_and_help",
      "file": "testing/test_cacheprovider.py",
      "line": 1313
    },
    {
      "id": "testing/test_meta.py",
      "type": "file",
      "name": "test_meta.py",
      "file": "testing/test_meta.py",
      "line": 0
    },
    {
      "id": "testing/test_meta.py:_modules",
      "type": "function",
      "name": "_modules",
      "file": "testing/test_meta.py",
      "line": 15
    },
    {
      "id": "testing/test_meta.py:test_no_warnings",
      "type": "function",
      "name": "test_no_warnings",
      "file": "testing/test_meta.py",
      "line": 25
    },
    {
      "id": "testing/test_unraisableexception.py",
      "type": "file",
      "name": "test_unraisableexception.py",
      "file": "testing/test_unraisableexception.py",
      "line": 0
    },
    {
      "id": "testing/test_unraisableexception.py:test_unraisable",
      "type": "function",
      "name": "test_unraisable",
      "file": "testing/test_unraisableexception.py",
      "line": 11
    },
    {
      "id": "testing/test_unraisableexception.py:test_unraisable_in_setup",
      "type": "function",
      "name": "test_unraisable_in_setup",
      "file": "testing/test_unraisableexception.py",
      "line": 44
    },
    {
      "id": "testing/test_unraisableexception.py:test_unraisable_in_teardown",
      "type": "function",
      "name": "test_unraisable_in_teardown",
      "file": "testing/test_unraisableexception.py",
      "line": 81
    },
    {
      "id": "testing/test_unraisableexception.py:test_unraisable_warning_error",
      "type": "function",
      "name": "test_unraisable_warning_error",
      "file": "testing/test_unraisableexception.py",
      "line": 118
    },
    {
      "id": "testing/test_findpaths.py",
      "type": "file",
      "name": "test_findpaths.py",
      "file": "testing/test_findpaths.py",
      "line": 0
    },
    {
      "id": "testing/test_findpaths.py:TestLoadConfigDictFromFile",
      "type": "class",
      "name": "TestLoadConfigDictFromFile",
      "file": "testing/test_findpaths.py",
      "line": 13
    },
    {
      "id": "testing/test_findpaths.py:TestLoadConfigDictFromFile.test_empty_pytest_ini",
      "type": "function",
      "name": "TestLoadConfigDictFromFile.test_empty_pytest_ini",
      "file": "testing/test_findpaths.py",
      "line": 14
    },
    {
      "id": "testing/test_findpaths.py:TestLoadConfigDictFromFile.test_pytest_ini",
      "type": "function",
      "name": "TestLoadConfigDictFromFile.test_pytest_ini",
      "file": "testing/test_findpaths.py",
      "line": 20
    },
    {
      "id": "testing/test_findpaths.py:TestLoadConfigDictFromFile.test_custom_ini",
      "type": "function",
      "name": "TestLoadConfigDictFromFile.test_custom_ini",
      "file": "testing/test_findpaths.py",
      "line": 26
    },
    {
      "id": "testing/test_findpaths.py:TestLoadConfigDictFromFile.test_custom_ini_without_section",
      "type": "function",
      "name": "TestLoadConfigDictFromFile.test_custom_ini_without_section",
      "file": "testing/test_findpaths.py",
      "line": 32
    },
    {
      "id": "testing/test_findpaths.py:TestLoadConfigDictFromFile.test_custom_cfg_file",
      "type": "function",
      "name": "TestLoadConfigDictFromFile.test_custom_cfg_file",
      "file": "testing/test_findpaths.py",
      "line": 38
    },
    {
      "id": "testing/test_findpaths.py:TestLoadConfigDictFromFile.test_valid_cfg_file",
      "type": "function",
      "name": "TestLoadConfigDictFromFile.test_valid_cfg_file",
      "file": "testing/test_findpaths.py",
      "line": 44
    },
    {
      "id": "testing/test_findpaths.py:TestLoadConfigDictFromFile.test_unsupported_pytest_section_in_cfg_file",
      "type": "function",
      "name": "TestLoadConfigDictFromFile.test_unsupported_pytest_section_in_cfg_file",
      "file": "testing/test_findpaths.py",
      "line": 50
    },
    {
      "id": "testing/test_findpaths.py:TestLoadConfigDictFromFile.test_invalid_toml_file",
      "type": "function",
      "name": "TestLoadConfigDictFromFile.test_invalid_toml_file",
      "file": "testing/test_findpaths.py",
      "line": 57
    },
    {
      "id": "testing/test_findpaths.py:TestLoadConfigDictFromFile.test_custom_toml_file",
      "type": "function",
      "name": "TestLoadConfigDictFromFile.test_custom_toml_file",
      "file": "testing/test_findpaths.py",
      "line": 64
    },
    {
      "id": "testing/test_findpaths.py:TestLoadConfigDictFromFile.test_valid_toml_file",
      "type": "function",
      "name": "TestLoadConfigDictFromFile.test_valid_toml_file",
      "file": "testing/test_findpaths.py",
      "line": 78
    },
    {
      "id": "testing/test_findpaths.py:TestCommonAncestor",
      "type": "class",
      "name": "TestCommonAncestor",
      "file": "testing/test_findpaths.py",
      "line": 104
    },
    {
      "id": "testing/test_findpaths.py:TestCommonAncestor.test_has_ancestor",
      "type": "function",
      "name": "TestCommonAncestor.test_has_ancestor",
      "file": "testing/test_findpaths.py",
      "line": 105
    },
    {
      "id": "testing/test_findpaths.py:TestCommonAncestor.test_single_dir",
      "type": "function",
      "name": "TestCommonAncestor.test_single_dir",
      "file": "testing/test_findpaths.py",
      "line": 117
    },
    {
      "id": "testing/test_findpaths.py:TestCommonAncestor.test_single_file",
      "type": "function",
      "name": "TestCommonAncestor.test_single_file",
      "file": "testing/test_findpaths.py",
      "line": 120
    },
    {
      "id": "testing/test_findpaths.py:test_get_dirs_from_args",
      "type": "function",
      "name": "test_get_dirs_from_args",
      "file": "testing/test_findpaths.py",
      "line": 126
    },
    {
      "id": "testing/test_findpaths.py:test_is_fs_root",
      "type": "function",
      "name": "test_is_fs_root",
      "file": "testing/test_findpaths.py",
      "line": 151
    },
    {
      "id": "testing/test_assertion.py",
      "type": "file",
      "name": "test_assertion.py",
      "file": "testing/test_assertion.py",
      "line": 0
    },
    {
      "id": "testing/test_assertion.py:mock_config",
      "type": "function",
      "name": "mock_config",
      "file": "testing/test_assertion.py",
      "line": 20
    },
    {
      "id": "testing/test_assertion.py:mock_config.Config",
      "type": "class",
      "name": "mock_config.Config",
      "file": "testing/test_assertion.py",
      "line": 21
    },
    {
      "id": "testing/test_assertion.py:mock_config.Config.getoption",
      "type": "function",
      "name": "mock_config.Config.getoption",
      "file": "testing/test_assertion.py",
      "line": 22
    },
    {
      "id": "testing/test_assertion.py:TestImportHookInstallation",
      "type": "class",
      "name": "TestImportHookInstallation",
      "file": "testing/test_assertion.py",
      "line": 30
    },
    {
      "id": "testing/test_assertion.py:TestImportHookInstallation.test_conftest_assertion_rewrite",
      "type": "function",
      "name": "TestImportHookInstallation.test_conftest_assertion_rewrite",
      "file": "testing/test_assertion.py",
      "line": 33
    },
    {
      "id": "testing/test_assertion.py:TestImportHookInstallation.test_rewrite_assertions_pytester_plugin",
      "type": "function",
      "name": "TestImportHookInstallation.test_rewrite_assertions_pytester_plugin",
      "file": "testing/test_assertion.py",
      "line": 64
    },
    {
      "id": "testing/test_assertion.py:TestImportHookInstallation.test_pytest_plugins_rewrite",
      "type": "function",
      "name": "TestImportHookInstallation.test_pytest_plugins_rewrite",
      "file": "testing/test_assertion.py",
      "line": 98
    },
    {
      "id": "testing/test_assertion.py:TestImportHookInstallation.test_pytest_plugins_rewrite_module_names",
      "type": "function",
      "name": "TestImportHookInstallation.test_pytest_plugins_rewrite_module_names",
      "file": "testing/test_assertion.py",
      "line": 127
    },
    {
      "id": "testing/test_assertion.py:TestImportHookInstallation.test_pytest_plugins_rewrite_module_names_correctly",
      "type": "function",
      "name": "TestImportHookInstallation.test_pytest_plugins_rewrite_module_names_correctly",
      "file": "testing/test_assertion.py",
      "line": 153
    },
    {
      "id": "testing/test_assertion.py:TestImportHookInstallation.test_installed_plugin_rewrite",
      "type": "function",
      "name": "TestImportHookInstallation.test_installed_plugin_rewrite",
      "file": "testing/test_assertion.py",
      "line": 174
    },
    {
      "id": "testing/test_assertion.py:TestImportHookInstallation.test_rewrite_ast",
      "type": "function",
      "name": "TestImportHookInstallation.test_rewrite_ast",
      "file": "testing/test_assertion.py",
      "line": 246
    },
    {
      "id": "testing/test_assertion.py:TestImportHookInstallation.test_register_assert_rewrite_checks_types",
      "type": "function",
      "name": "TestImportHookInstallation.test_register_assert_rewrite_checks_types",
      "file": "testing/test_assertion.py",
      "line": 291
    },
    {
      "id": "testing/test_assertion.py:TestBinReprIntegration",
      "type": "class",
      "name": "TestBinReprIntegration",
      "file": "testing/test_assertion.py",
      "line": 299
    },
    {
      "id": "testing/test_assertion.py:TestBinReprIntegration.test_pytest_assertrepr_compare_called",
      "type": "function",
      "name": "TestBinReprIntegration.test_pytest_assertrepr_compare_called",
      "file": "testing/test_assertion.py",
      "line": 300
    },
    {
      "id": "testing/test_assertion.py:callop",
      "type": "function",
      "name": "callop",
      "file": "testing/test_assertion.py",
      "line": 325
    },
    {
      "id": "testing/test_assertion.py:callequal",
      "type": "function",
      "name": "callequal",
      "file": "testing/test_assertion.py",
      "line": 330
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare",
      "type": "class",
      "name": "TestAssert_reprcompare",
      "file": "testing/test_assertion.py",
      "line": 334
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_different_types",
      "type": "function",
      "name": "TestAssert_reprcompare.test_different_types",
      "file": "testing/test_assertion.py",
      "line": 335
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_summary",
      "type": "function",
      "name": "TestAssert_reprcompare.test_summary",
      "file": "testing/test_assertion.py",
      "line": 338
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_text_diff",
      "type": "function",
      "name": "TestAssert_reprcompare.test_text_diff",
      "file": "testing/test_assertion.py",
      "line": 344
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_text_skipping",
      "type": "function",
      "name": "TestAssert_reprcompare.test_text_skipping",
      "file": "testing/test_assertion.py",
      "line": 351
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_text_skipping_verbose",
      "type": "function",
      "name": "TestAssert_reprcompare.test_text_skipping_verbose",
      "file": "testing/test_assertion.py",
      "line": 358
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_multiline_text_diff",
      "type": "function",
      "name": "TestAssert_reprcompare.test_multiline_text_diff",
      "file": "testing/test_assertion.py",
      "line": 364
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_bytes_diff_normal",
      "type": "function",
      "name": "TestAssert_reprcompare.test_bytes_diff_normal",
      "file": "testing/test_assertion.py",
      "line": 372
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_bytes_diff_verbose",
      "type": "function",
      "name": "TestAssert_reprcompare.test_bytes_diff_verbose",
      "file": "testing/test_assertion.py",
      "line": 382
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_list",
      "type": "function",
      "name": "TestAssert_reprcompare.test_list",
      "file": "testing/test_assertion.py",
      "line": 393
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_iterable_full_diff",
      "type": "function",
      "name": "TestAssert_reprcompare.test_iterable_full_diff",
      "file": "testing/test_assertion.py",
      "line": 439
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_iterable_quiet",
      "type": "function",
      "name": "TestAssert_reprcompare.test_iterable_quiet",
      "file": "testing/test_assertion.py",
      "line": 452
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_iterable_full_diff_ci",
      "type": "function",
      "name": "TestAssert_reprcompare.test_iterable_full_diff_ci",
      "file": "testing/test_assertion.py",
      "line": 460
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_list_different_lengths",
      "type": "function",
      "name": "TestAssert_reprcompare.test_list_different_lengths",
      "file": "testing/test_assertion.py",
      "line": 479
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_list_wrap_for_multiple_lines",
      "type": "function",
      "name": "TestAssert_reprcompare.test_list_wrap_for_multiple_lines",
      "file": "testing/test_assertion.py",
      "line": 487
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_list_wrap_for_width_rewrap_same_length",
      "type": "function",
      "name": "TestAssert_reprcompare.test_list_wrap_for_width_rewrap_same_length",
      "file": "testing/test_assertion.py",
      "line": 517
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_list_dont_wrap_strings",
      "type": "function",
      "name": "TestAssert_reprcompare.test_list_dont_wrap_strings",
      "file": "testing/test_assertion.py",
      "line": 536
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_dict_wrap",
      "type": "function",
      "name": "TestAssert_reprcompare.test_dict_wrap",
      "file": "testing/test_assertion.py",
      "line": 559
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_dict",
      "type": "function",
      "name": "TestAssert_reprcompare.test_dict",
      "file": "testing/test_assertion.py",
      "line": 594
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_dict_omitting",
      "type": "function",
      "name": "TestAssert_reprcompare.test_dict_omitting",
      "file": "testing/test_assertion.py",
      "line": 599
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_dict_omitting_with_verbosity_1",
      "type": "function",
      "name": "TestAssert_reprcompare.test_dict_omitting_with_verbosity_1",
      "file": "testing/test_assertion.py",
      "line": 607
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_dict_omitting_with_verbosity_2",
      "type": "function",
      "name": "TestAssert_reprcompare.test_dict_omitting_with_verbosity_2",
      "file": "testing/test_assertion.py",
      "line": 616
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_dict_different_items",
      "type": "function",
      "name": "TestAssert_reprcompare.test_dict_different_items",
      "file": "testing/test_assertion.py",
      "line": 623
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_sequence_different_items",
      "type": "function",
      "name": "TestAssert_reprcompare.test_sequence_different_items",
      "file": "testing/test_assertion.py",
      "line": 647
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_set",
      "type": "function",
      "name": "TestAssert_reprcompare.test_set",
      "file": "testing/test_assertion.py",
      "line": 667
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_frozenzet",
      "type": "function",
      "name": "TestAssert_reprcompare.test_frozenzet",
      "file": "testing/test_assertion.py",
      "line": 672
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_Sequence",
      "type": "function",
      "name": "TestAssert_reprcompare.test_Sequence",
      "file": "testing/test_assertion.py",
      "line": 677
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_Sequence.TestSequence",
      "type": "class",
      "name": "TestAssert_reprcompare.test_Sequence.TestSequence",
      "file": "testing/test_assertion.py",
      "line": 679
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_Sequence.TestSequence.__getitem__",
      "type": "function",
      "name": "TestAssert_reprcompare.test_Sequence.TestSequence.__getitem__",
      "file": "testing/test_assertion.py",
      "line": 683
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_Sequence.TestSequence.__len__",
      "type": "function",
      "name": "TestAssert_reprcompare.test_Sequence.TestSequence.__len__",
      "file": "testing/test_assertion.py",
      "line": 686
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_Sequence.TestSequence.__setitem__",
      "type": "function",
      "name": "TestAssert_reprcompare.test_Sequence.TestSequence.__setitem__",
      "file": "testing/test_assertion.py",
      "line": 689
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_Sequence.TestSequence.__delitem__",
      "type": "function",
      "name": "TestAssert_reprcompare.test_Sequence.TestSequence.__delitem__",
      "file": "testing/test_assertion.py",
      "line": 692
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_Sequence.TestSequence.insert",
      "type": "function",
      "name": "TestAssert_reprcompare.test_Sequence.TestSequence.insert",
      "file": "testing/test_assertion.py",
      "line": 695
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_list_tuples",
      "type": "function",
      "name": "TestAssert_reprcompare.test_list_tuples",
      "file": "testing/test_assertion.py",
      "line": 702
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_list_bad_repr",
      "type": "function",
      "name": "TestAssert_reprcompare.test_list_bad_repr",
      "file": "testing/test_assertion.py",
      "line": 710
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_list_bad_repr.A",
      "type": "class",
      "name": "TestAssert_reprcompare.test_list_bad_repr.A",
      "file": "testing/test_assertion.py",
      "line": 711
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_list_bad_repr.A.__repr__",
      "type": "function",
      "name": "TestAssert_reprcompare.test_list_bad_repr.A.__repr__",
      "file": "testing/test_assertion.py",
      "line": 712
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_one_repr_empty",
      "type": "function",
      "name": "TestAssert_reprcompare.test_one_repr_empty",
      "file": "testing/test_assertion.py",
      "line": 730
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_one_repr_empty.A",
      "type": "class",
      "name": "TestAssert_reprcompare.test_one_repr_empty.A",
      "file": "testing/test_assertion.py",
      "line": 733
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_one_repr_empty.A.__repr__",
      "type": "function",
      "name": "TestAssert_reprcompare.test_one_repr_empty.A.__repr__",
      "file": "testing/test_assertion.py",
      "line": 734
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_repr_no_exc",
      "type": "function",
      "name": "TestAssert_reprcompare.test_repr_no_exc",
      "file": "testing/test_assertion.py",
      "line": 740
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_unicode",
      "type": "function",
      "name": "TestAssert_reprcompare.test_unicode",
      "file": "testing/test_assertion.py",
      "line": 745
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_nonascii_text",
      "type": "function",
      "name": "TestAssert_reprcompare.test_nonascii_text",
      "file": "testing/test_assertion.py",
      "line": 752
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_nonascii_text.A",
      "type": "class",
      "name": "TestAssert_reprcompare.test_nonascii_text.A",
      "file": "testing/test_assertion.py",
      "line": 758
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_nonascii_text.A.__repr__",
      "type": "function",
      "name": "TestAssert_reprcompare.test_nonascii_text.A.__repr__",
      "file": "testing/test_assertion.py",
      "line": 759
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_format_nonascii_explanation",
      "type": "function",
      "name": "TestAssert_reprcompare.test_format_nonascii_explanation",
      "file": "testing/test_assertion.py",
      "line": 765
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_mojibake",
      "type": "function",
      "name": "TestAssert_reprcompare.test_mojibake",
      "file": "testing/test_assertion.py",
      "line": 768
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare.test_nfc_nfd_same_string",
      "type": "function",
      "name": "TestAssert_reprcompare.test_nfc_nfd_same_string",
      "file": "testing/test_assertion.py",
      "line": 779
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_dataclass",
      "type": "class",
      "name": "TestAssert_reprcompare_dataclass",
      "file": "testing/test_assertion.py",
      "line": 798
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_dataclass.test_dataclasses",
      "type": "function",
      "name": "TestAssert_reprcompare_dataclass.test_dataclasses",
      "file": "testing/test_assertion.py",
      "line": 799
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_dataclass.test_recursive_dataclasses",
      "type": "function",
      "name": "TestAssert_reprcompare_dataclass.test_recursive_dataclasses",
      "file": "testing/test_assertion.py",
      "line": 817
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_dataclass.test_recursive_dataclasses_verbose",
      "type": "function",
      "name": "TestAssert_reprcompare_dataclass.test_recursive_dataclasses_verbose",
      "file": "testing/test_assertion.py",
      "line": 835
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_dataclass.test_dataclasses_verbose",
      "type": "function",
      "name": "TestAssert_reprcompare_dataclass.test_dataclasses_verbose",
      "file": "testing/test_assertion.py",
      "line": 865
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_dataclass.test_dataclasses_with_attribute_comparison_off",
      "type": "function",
      "name": "TestAssert_reprcompare_dataclass.test_dataclasses_with_attribute_comparison_off",
      "file": "testing/test_assertion.py",
      "line": 878
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_dataclass.test_comparing_two_different_data_classes",
      "type": "function",
      "name": "TestAssert_reprcompare_dataclass.test_comparing_two_different_data_classes",
      "file": "testing/test_assertion.py",
      "line": 887
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_dataclass.test_data_classes_with_custom_eq",
      "type": "function",
      "name": "TestAssert_reprcompare_dataclass.test_data_classes_with_custom_eq",
      "file": "testing/test_assertion.py",
      "line": 894
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_dataclass.test_data_classes_with_initvar",
      "type": "function",
      "name": "TestAssert_reprcompare_dataclass.test_data_classes_with_initvar",
      "file": "testing/test_assertion.py",
      "line": 903
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass",
      "type": "class",
      "name": "TestAssert_reprcompare_attrsclass",
      "file": "testing/test_assertion.py",
      "line": 911
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs",
      "type": "function",
      "name": "TestAssert_reprcompare_attrsclass.test_attrs",
      "file": "testing/test_assertion.py",
      "line": 912
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs.SimpleDataObject",
      "type": "class",
      "name": "TestAssert_reprcompare_attrsclass.test_attrs.SimpleDataObject",
      "file": "testing/test_assertion.py",
      "line": 914
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_recursive",
      "type": "function",
      "name": "TestAssert_reprcompare_attrsclass.test_attrs_recursive",
      "file": "testing/test_assertion.py",
      "line": 928
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_recursive.OtherDataObject",
      "type": "class",
      "name": "TestAssert_reprcompare_attrsclass.test_attrs_recursive.OtherDataObject",
      "file": "testing/test_assertion.py",
      "line": 930
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_recursive.SimpleDataObject",
      "type": "class",
      "name": "TestAssert_reprcompare_attrsclass.test_attrs_recursive.SimpleDataObject",
      "file": "testing/test_assertion.py",
      "line": 935
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_recursive_verbose",
      "type": "function",
      "name": "TestAssert_reprcompare_attrsclass.test_attrs_recursive_verbose",
      "file": "testing/test_assertion.py",
      "line": 949
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_recursive_verbose.OtherDataObject",
      "type": "class",
      "name": "TestAssert_reprcompare_attrsclass.test_attrs_recursive_verbose.OtherDataObject",
      "file": "testing/test_assertion.py",
      "line": 951
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_recursive_verbose.SimpleDataObject",
      "type": "class",
      "name": "TestAssert_reprcompare_attrsclass.test_attrs_recursive_verbose.SimpleDataObject",
      "file": "testing/test_assertion.py",
      "line": 956
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_verbose",
      "type": "function",
      "name": "TestAssert_reprcompare_attrsclass.test_attrs_verbose",
      "file": "testing/test_assertion.py",
      "line": 968
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_verbose.SimpleDataObject",
      "type": "class",
      "name": "TestAssert_reprcompare_attrsclass.test_attrs_verbose.SimpleDataObject",
      "file": "testing/test_assertion.py",
      "line": 970
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_attribute_comparison_off",
      "type": "function",
      "name": "TestAssert_reprcompare_attrsclass.test_attrs_with_attribute_comparison_off",
      "file": "testing/test_assertion.py",
      "line": 983
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_attribute_comparison_off.SimpleDataObject",
      "type": "class",
      "name": "TestAssert_reprcompare_attrsclass.test_attrs_with_attribute_comparison_off.SimpleDataObject",
      "file": "testing/test_assertion.py",
      "line": 985
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_comparing_two_different_attrs_classes",
      "type": "function",
      "name": "TestAssert_reprcompare_attrsclass.test_comparing_two_different_attrs_classes",
      "file": "testing/test_assertion.py",
      "line": 1000
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_comparing_two_different_attrs_classes.SimpleDataObjectOne",
      "type": "class",
      "name": "TestAssert_reprcompare_attrsclass.test_comparing_two_different_attrs_classes.SimpleDataObjectOne",
      "file": "testing/test_assertion.py",
      "line": 1002
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_comparing_two_different_attrs_classes.SimpleDataObjectTwo",
      "type": "class",
      "name": "TestAssert_reprcompare_attrsclass.test_comparing_two_different_attrs_classes.SimpleDataObjectTwo",
      "file": "testing/test_assertion.py",
      "line": 1007
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_auto_detect_and_custom_eq",
      "type": "function",
      "name": "TestAssert_reprcompare_attrsclass.test_attrs_with_auto_detect_and_custom_eq",
      "file": "testing/test_assertion.py",
      "line": 1017
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_auto_detect_and_custom_eq.SimpleDataObject",
      "type": "class",
      "name": "TestAssert_reprcompare_attrsclass.test_attrs_with_auto_detect_and_custom_eq.SimpleDataObject",
      "file": "testing/test_assertion.py",
      "line": 1021
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_auto_detect_and_custom_eq.SimpleDataObject.__eq__",
      "type": "function",
      "name": "TestAssert_reprcompare_attrsclass.test_attrs_with_auto_detect_and_custom_eq.SimpleDataObject.__eq__",
      "file": "testing/test_assertion.py",
      "line": 1024
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_custom_eq",
      "type": "function",
      "name": "TestAssert_reprcompare_attrsclass.test_attrs_with_custom_eq",
      "file": "testing/test_assertion.py",
      "line": 1033
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_custom_eq.SimpleDataObject",
      "type": "class",
      "name": "TestAssert_reprcompare_attrsclass.test_attrs_with_custom_eq.SimpleDataObject",
      "file": "testing/test_assertion.py",
      "line": 1035
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_custom_eq.SimpleDataObject.__eq__",
      "type": "function",
      "name": "TestAssert_reprcompare_attrsclass.test_attrs_with_custom_eq.SimpleDataObject.__eq__",
      "file": "testing/test_assertion.py",
      "line": 1038
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_namedtuple",
      "type": "class",
      "name": "TestAssert_reprcompare_namedtuple",
      "file": "testing/test_assertion.py",
      "line": 1048
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_namedtuple.test_namedtuple",
      "type": "function",
      "name": "TestAssert_reprcompare_namedtuple.test_namedtuple",
      "file": "testing/test_assertion.py",
      "line": 1049
    },
    {
      "id": "testing/test_assertion.py:TestAssert_reprcompare_namedtuple.test_comparing_two_different_namedtuple",
      "type": "function",
      "name": "TestAssert_reprcompare_namedtuple.test_comparing_two_different_namedtuple",
      "file": "testing/test_assertion.py",
      "line": 1070
    },
    {
      "id": "testing/test_assertion.py:TestFormatExplanation",
      "type": "class",
      "name": "TestFormatExplanation",
      "file": "testing/test_assertion.py",
      "line": 1086
    },
    {
      "id": "testing/test_assertion.py:TestFormatExplanation.test_special_chars_full",
      "type": "function",
      "name": "TestFormatExplanation.test_special_chars_full",
      "file": "testing/test_assertion.py",
      "line": 1087
    },
    {
      "id": "testing/test_assertion.py:TestFormatExplanation.test_fmt_simple",
      "type": "function",
      "name": "TestFormatExplanation.test_fmt_simple",
      "file": "testing/test_assertion.py",
      "line": 1099
    },
    {
      "id": "testing/test_assertion.py:TestFormatExplanation.test_fmt_where",
      "type": "function",
      "name": "TestFormatExplanation.test_fmt_where",
      "file": "testing/test_assertion.py",
      "line": 1103
    },
    {
      "id": "testing/test_assertion.py:TestFormatExplanation.test_fmt_and",
      "type": "function",
      "name": "TestFormatExplanation.test_fmt_and",
      "file": "testing/test_assertion.py",
      "line": 1108
    },
    {
      "id": "testing/test_assertion.py:TestFormatExplanation.test_fmt_where_nested",
      "type": "function",
      "name": "TestFormatExplanation.test_fmt_where_nested",
      "file": "testing/test_assertion.py",
      "line": 1113
    },
    {
      "id": "testing/test_assertion.py:TestFormatExplanation.test_fmt_newline",
      "type": "function",
      "name": "TestFormatExplanation.test_fmt_newline",
      "file": "testing/test_assertion.py",
      "line": 1118
    },
    {
      "id": "testing/test_assertion.py:TestFormatExplanation.test_fmt_newline_escaped",
      "type": "function",
      "name": "TestFormatExplanation.test_fmt_newline_escaped",
      "file": "testing/test_assertion.py",
      "line": 1123
    },
    {
      "id": "testing/test_assertion.py:TestFormatExplanation.test_fmt_newline_before_where",
      "type": "function",
      "name": "TestFormatExplanation.test_fmt_newline_before_where",
      "file": "testing/test_assertion.py",
      "line": 1128
    },
    {
      "id": "testing/test_assertion.py:TestFormatExplanation.test_fmt_multi_newline_before_where",
      "type": "function",
      "name": "TestFormatExplanation.test_fmt_multi_newline_before_where",
      "file": "testing/test_assertion.py",
      "line": 1149
    },
    {
      "id": "testing/test_assertion.py:TestTruncateExplanation",
      "type": "class",
      "name": "TestTruncateExplanation",
      "file": "testing/test_assertion.py",
      "line": 1173
    },
    {
      "id": "testing/test_assertion.py:TestTruncateExplanation.test_doesnt_truncate_when_input_is_empty_list",
      "type": "function",
      "name": "TestTruncateExplanation.test_doesnt_truncate_when_input_is_empty_list",
      "file": "testing/test_assertion.py",
      "line": 1178
    },
    {
      "id": "testing/test_assertion.py:TestTruncateExplanation.test_doesnt_truncate_at_when_input_is_5_lines_and_LT_max_chars",
      "type": "function",
      "name": "TestTruncateExplanation.test_doesnt_truncate_at_when_input_is_5_lines_and_LT_max_chars",
      "file": "testing/test_assertion.py",
      "line": 1183
    },
    {
      "id": "testing/test_assertion.py:TestTruncateExplanation.test_truncates_at_8_lines_when_given_list_of_empty_strings",
      "type": "function",
      "name": "TestTruncateExplanation.test_truncates_at_8_lines_when_given_list_of_empty_strings",
      "file": "testing/test_assertion.py",
      "line": 1188
    },
    {
      "id": "testing/test_assertion.py:TestTruncateExplanation.test_truncates_at_8_lines_when_first_8_lines_are_LT_max_chars",
      "type": "function",
      "name": "TestTruncateExplanation.test_truncates_at_8_lines_when_first_8_lines_are_LT_max_chars",
      "file": "testing/test_assertion.py",
      "line": 1199
    },
    {
      "id": "testing/test_assertion.py:TestTruncateExplanation.test_truncates_at_8_lines_when_there_is_one_line_to_remove",
      "type": "function",
      "name": "TestTruncateExplanation.test_truncates_at_8_lines_when_there_is_one_line_to_remove",
      "file": "testing/test_assertion.py",
      "line": 1210
    },
    {
      "id": "testing/test_assertion.py:TestTruncateExplanation.test_truncates_edgecase_when_truncation_message_makes_the_result_longer_for_chars",
      "type": "function",
      "name": "TestTruncateExplanation.test_truncates_edgecase_when_truncation_message_makes_the_result_longer_for_chars",
      "file": "testing/test_assertion.py",
      "line": 1217
    },
    {
      "id": "testing/test_assertion.py:TestTruncateExplanation.test_truncates_edgecase_when_truncation_message_makes_the_result_longer_for_lines",
      "type": "function",
      "name": "TestTruncateExplanation.test_truncates_edgecase_when_truncation_message_makes_the_result_longer_for_lines",
      "file": "testing/test_assertion.py",
      "line": 1225
    },
    {
      "id": "testing/test_assertion.py:TestTruncateExplanation.test_truncates_at_8_lines_when_first_8_lines_are_EQ_max_chars",
      "type": "function",
      "name": "TestTruncateExplanation.test_truncates_at_8_lines_when_first_8_lines_are_EQ_max_chars",
      "file": "testing/test_assertion.py",
      "line": 1233
    },
    {
      "id": "testing/test_assertion.py:TestTruncateExplanation.test_truncates_at_4_lines_when_first_4_lines_are_GT_max_chars",
      "type": "function",
      "name": "TestTruncateExplanation.test_truncates_at_4_lines_when_first_4_lines_are_GT_max_chars",
      "file": "testing/test_assertion.py",
      "line": 1243
    },
    {
      "id": "testing/test_assertion.py:TestTruncateExplanation.test_truncates_at_1_line_when_first_line_is_GT_max_chars",
      "type": "function",
      "name": "TestTruncateExplanation.test_truncates_at_1_line_when_first_line_is_GT_max_chars",
      "file": "testing/test_assertion.py",
      "line": 1253
    },
    {
      "id": "testing/test_assertion.py:TestTruncateExplanation.test_full_output_truncated",
      "type": "function",
      "name": "TestTruncateExplanation.test_full_output_truncated",
      "file": "testing/test_assertion.py",
      "line": 1263
    },
    {
      "id": "testing/test_assertion.py:test_python25_compile_issue257",
      "type": "function",
      "name": "test_python25_compile_issue257",
      "file": "testing/test_assertion.py",
      "line": 1301
    },
    {
      "id": "testing/test_assertion.py:test_rewritten",
      "type": "function",
      "name": "test_rewritten",
      "file": "testing/test_assertion.py",
      "line": 1319
    },
    {
      "id": "testing/test_assertion.py:test_reprcompare_notin",
      "type": "function",
      "name": "test_reprcompare_notin",
      "file": "testing/test_assertion.py",
      "line": 1329
    },
    {
      "id": "testing/test_assertion.py:test_reprcompare_whitespaces",
      "type": "function",
      "name": "test_reprcompare_whitespaces",
      "file": "testing/test_assertion.py",
      "line": 1338
    },
    {
      "id": "testing/test_assertion.py:test_pytest_assertrepr_compare_integration",
      "type": "function",
      "name": "test_pytest_assertrepr_compare_integration",
      "file": "testing/test_assertion.py",
      "line": 1348
    },
    {
      "id": "testing/test_assertion.py:test_sequence_comparison_uses_repr",
      "type": "function",
      "name": "test_sequence_comparison_uses_repr",
      "file": "testing/test_assertion.py",
      "line": 1370
    },
    {
      "id": "testing/test_assertion.py:test_assertrepr_loaded_per_dir",
      "type": "function",
      "name": "test_assertrepr_loaded_per_dir",
      "file": "testing/test_assertion.py",
      "line": 1392
    },
    {
      "id": "testing/test_assertion.py:test_assertion_options",
      "type": "function",
      "name": "test_assertion_options",
      "file": "testing/test_assertion.py",
      "line": 1418
    },
    {
      "id": "testing/test_assertion.py:test_triple_quoted_string_issue113",
      "type": "function",
      "name": "test_triple_quoted_string_issue113",
      "file": "testing/test_assertion.py",
      "line": 1432
    },
    {
      "id": "testing/test_assertion.py:test_traceback_failure",
      "type": "function",
      "name": "test_traceback_failure",
      "file": "testing/test_assertion.py",
      "line": 1444
    },
    {
      "id": "testing/test_assertion.py:test_exception_handling_no_traceback",
      "type": "function",
      "name": "test_exception_handling_no_traceback",
      "file": "testing/test_assertion.py",
      "line": 1499
    },
    {
      "id": "testing/test_assertion.py:test_warn_missing",
      "type": "function",
      "name": "test_warn_missing",
      "file": "testing/test_assertion.py",
      "line": 1556
    },
    {
      "id": "testing/test_assertion.py:test_recursion_source_decode",
      "type": "function",
      "name": "test_recursion_source_decode",
      "file": "testing/test_assertion.py",
      "line": 1563
    },
    {
      "id": "testing/test_assertion.py:test_AssertionError_message",
      "type": "function",
      "name": "test_AssertionError_message",
      "file": "testing/test_assertion.py",
      "line": 1584
    },
    {
      "id": "testing/test_assertion.py:test_diff_newline_at_end",
      "type": "function",
      "name": "test_diff_newline_at_end",
      "file": "testing/test_assertion.py",
      "line": 1602
    },
    {
      "id": "testing/test_assertion.py:test_assert_tuple_warning",
      "type": "function",
      "name": "test_assert_tuple_warning",
      "file": "testing/test_assertion.py",
      "line": 1622
    },
    {
      "id": "testing/test_assertion.py:test_assert_indirect_tuple_no_warning",
      "type": "function",
      "name": "test_assert_indirect_tuple_no_warning",
      "file": "testing/test_assertion.py",
      "line": 1644
    },
    {
      "id": "testing/test_assertion.py:test_assert_with_unicode",
      "type": "function",
      "name": "test_assert_with_unicode",
      "file": "testing/test_assertion.py",
      "line": 1657
    },
    {
      "id": "testing/test_assertion.py:test_raise_unprintable_assertion_error",
      "type": "function",
      "name": "test_raise_unprintable_assertion_error",
      "file": "testing/test_assertion.py",
      "line": 1668
    },
    {
      "id": "testing/test_assertion.py:test_raise_assertion_error_raising_repr",
      "type": "function",
      "name": "test_raise_assertion_error_raising_repr",
      "file": "testing/test_assertion.py",
      "line": 1681
    },
    {
      "id": "testing/test_assertion.py:test_issue_1944",
      "type": "function",
      "name": "test_issue_1944",
      "file": "testing/test_assertion.py",
      "line": 1695
    },
    {
      "id": "testing/test_assertion.py:test_exit_from_assertrepr_compare",
      "type": "function",
      "name": "test_exit_from_assertrepr_compare",
      "file": "testing/test_assertion.py",
      "line": 1712
    },
    {
      "id": "testing/test_assertion.py:test_exit_from_assertrepr_compare.raise_exit",
      "type": "function",
      "name": "test_exit_from_assertrepr_compare.raise_exit",
      "file": "testing/test_assertion.py",
      "line": 1713
    },
    {
      "id": "testing/test_assertion.py:test_assertion_location_with_coverage",
      "type": "function",
      "name": "test_assertion_location_with_coverage",
      "file": "testing/test_assertion.py",
      "line": 1722
    },
    {
      "id": "testing/test_assertion.py:test_reprcompare_verbose_long",
      "type": "function",
      "name": "test_reprcompare_verbose_long",
      "file": "testing/test_assertion.py",
      "line": 1742
    },
    {
      "id": "testing/test_warning_types.py",
      "type": "file",
      "name": "test_warning_types.py",
      "file": "testing/test_warning_types.py",
      "line": 0
    },
    {
      "id": "testing/test_warning_types.py:test_warning_types",
      "type": "function",
      "name": "test_warning_types",
      "file": "testing/test_warning_types.py",
      "line": 16
    },
    {
      "id": "testing/test_warning_types.py:test_pytest_warnings_repr_integration_test",
      "type": "function",
      "name": "test_pytest_warnings_repr_integration_test",
      "file": "testing/test_warning_types.py",
      "line": 24
    },
    {
      "id": "testing/test_warning_types.py:test_warn_explicit_for_annotates_errors_with_location",
      "type": "function",
      "name": "test_warn_explicit_for_annotates_errors_with_location",
      "file": "testing/test_warning_types.py",
      "line": 42
    },
    {
      "id": "testing/test_pytester.py",
      "type": "file",
      "name": "test_pytester.py",
      "file": "testing/test_pytester.py",
      "line": 0
    },
    {
      "id": "testing/test_pytester.py:test_make_hook_recorder",
      "type": "function",
      "name": "test_make_hook_recorder",
      "file": "testing/test_pytester.py",
      "line": 22
    },
    {
      "id": "testing/test_pytester.py:test_make_hook_recorder.rep",
      "type": "class",
      "name": "test_make_hook_recorder.rep",
      "file": "testing/test_pytester.py",
      "line": 31
    },
    {
      "id": "testing/test_pytester.py:test_make_hook_recorder.rep2",
      "type": "class",
      "name": "test_make_hook_recorder.rep2",
      "file": "testing/test_pytester.py",
      "line": 44
    },
    {
      "id": "testing/test_pytester.py:test_parseconfig",
      "type": "function",
      "name": "test_parseconfig",
      "file": "testing/test_pytester.py",
      "line": 77
    },
    {
      "id": "testing/test_pytester.py:test_pytester_runs_with_plugin",
      "type": "function",
      "name": "test_pytester_runs_with_plugin",
      "file": "testing/test_pytester.py",
      "line": 83
    },
    {
      "id": "testing/test_pytester.py:test_pytester_with_doctest",
      "type": "function",
      "name": "test_pytester_with_doctest",
      "file": "testing/test_pytester.py",
      "line": 95
    },
    {
      "id": "testing/test_pytester.py:test_runresult_assertion_on_xfail",
      "type": "function",
      "name": "test_runresult_assertion_on_xfail",
      "file": "testing/test_pytester.py",
      "line": 118
    },
    {
      "id": "testing/test_pytester.py:test_runresult_assertion_on_xpassed",
      "type": "function",
      "name": "test_runresult_assertion_on_xpassed",
      "file": "testing/test_pytester.py",
      "line": 135
    },
    {
      "id": "testing/test_pytester.py:test_xpassed_with_strict_is_considered_a_failure",
      "type": "function",
      "name": "test_xpassed_with_strict_is_considered_a_failure",
      "file": "testing/test_pytester.py",
      "line": 152
    },
    {
      "id": "testing/test_pytester.py:make_holder",
      "type": "function",
      "name": "make_holder",
      "file": "testing/test_pytester.py",
      "line": 169
    },
    {
      "id": "testing/test_pytester.py:make_holder.apiclass",
      "type": "class",
      "name": "make_holder.apiclass",
      "file": "testing/test_pytester.py",
      "line": 170
    },
    {
      "id": "testing/test_pytester.py:make_holder.apiclass.pytest_xyz",
      "type": "function",
      "name": "make_holder.apiclass.pytest_xyz",
      "file": "testing/test_pytester.py",
      "line": 171
    },
    {
      "id": "testing/test_pytester.py:make_holder.apiclass.pytest_xyz_noarg",
      "type": "function",
      "name": "make_holder.apiclass.pytest_xyz_noarg",
      "file": "testing/test_pytester.py",
      "line": 174
    },
    {
      "id": "testing/test_pytester.py:make_holder.pytest_xyz",
      "type": "function",
      "name": "make_holder.pytest_xyz",
      "file": "testing/test_pytester.py",
      "line": 179
    },
    {
      "id": "testing/test_pytester.py:make_holder.pytest_xyz_noarg",
      "type": "function",
      "name": "make_holder.pytest_xyz_noarg",
      "file": "testing/test_pytester.py",
      "line": 182
    },
    {
      "id": "testing/test_pytester.py:test_hookrecorder_basic",
      "type": "function",
      "name": "test_hookrecorder_basic",
      "file": "testing/test_pytester.py",
      "line": 191
    },
    {
      "id": "testing/test_pytester.py:test_makepyfile_unicode",
      "type": "function",
      "name": "test_makepyfile_unicode",
      "file": "testing/test_pytester.py",
      "line": 205
    },
    {
      "id": "testing/test_pytester.py:test_makepyfile_utf8",
      "type": "function",
      "name": "test_makepyfile_utf8",
      "file": "testing/test_pytester.py",
      "line": 209
    },
    {
      "id": "testing/test_pytester.py:TestInlineRunModulesCleanup",
      "type": "class",
      "name": "TestInlineRunModulesCleanup",
      "file": "testing/test_pytester.py",
      "line": 219
    },
    {
      "id": "testing/test_pytester.py:TestInlineRunModulesCleanup.test_inline_run_test_module_not_cleaned_up",
      "type": "function",
      "name": "TestInlineRunModulesCleanup.test_inline_run_test_module_not_cleaned_up",
      "file": "testing/test_pytester.py",
      "line": 220
    },
    {
      "id": "testing/test_pytester.py:TestInlineRunModulesCleanup.spy_factory",
      "type": "function",
      "name": "TestInlineRunModulesCleanup.spy_factory",
      "file": "testing/test_pytester.py",
      "line": 229
    },
    {
      "id": "testing/test_pytester.py:TestInlineRunModulesCleanup.spy_factory.SysModulesSnapshotSpy",
      "type": "class",
      "name": "TestInlineRunModulesCleanup.spy_factory.SysModulesSnapshotSpy",
      "file": "testing/test_pytester.py",
      "line": 230
    },
    {
      "id": "testing/test_pytester.py:TestInlineRunModulesCleanup.spy_factory.SysModulesSnapshotSpy.restore",
      "type": "function",
      "name": "TestInlineRunModulesCleanup.spy_factory.SysModulesSnapshotSpy.restore",
      "file": "testing/test_pytester.py",
      "line": 239
    },
    {
      "id": "testing/test_pytester.py:TestInlineRunModulesCleanup.test_inline_run_taking_and_restoring_a_sys_modules_snapshot",
      "type": "function",
      "name": "TestInlineRunModulesCleanup.test_inline_run_taking_and_restoring_a_sys_modules_snapshot",
      "file": "testing/test_pytester.py",
      "line": 245
    },
    {
      "id": "testing/test_pytester.py:TestInlineRunModulesCleanup.test_inline_run_sys_modules_snapshot_restore_preserving_modules",
      "type": "function",
      "name": "TestInlineRunModulesCleanup.test_inline_run_sys_modules_snapshot_restore_preserving_modules",
      "file": "testing/test_pytester.py",
      "line": 266
    },
    {
      "id": "testing/test_pytester.py:TestInlineRunModulesCleanup.test_external_test_module_imports_not_cleaned_up",
      "type": "function",
      "name": "TestInlineRunModulesCleanup.test_external_test_module_imports_not_cleaned_up",
      "file": "testing/test_pytester.py",
      "line": 279
    },
    {
      "id": "testing/test_pytester.py:test_assert_outcomes_after_pytest_error",
      "type": "function",
      "name": "test_assert_outcomes_after_pytest_error",
      "file": "testing/test_pytester.py",
      "line": 296
    },
    {
      "id": "testing/test_pytester.py:test_cwd_snapshot",
      "type": "function",
      "name": "test_cwd_snapshot",
      "file": "testing/test_pytester.py",
      "line": 304
    },
    {
      "id": "testing/test_pytester.py:TestSysModulesSnapshot",
      "type": "class",
      "name": "TestSysModulesSnapshot",
      "file": "testing/test_pytester.py",
      "line": 315
    },
    {
      "id": "testing/test_pytester.py:TestSysModulesSnapshot.test_remove_added",
      "type": "function",
      "name": "TestSysModulesSnapshot.test_remove_added",
      "file": "testing/test_pytester.py",
      "line": 318
    },
    {
      "id": "testing/test_pytester.py:TestSysModulesSnapshot.test_add_removed",
      "type": "function",
      "name": "TestSysModulesSnapshot.test_add_removed",
      "file": "testing/test_pytester.py",
      "line": 327
    },
    {
      "id": "testing/test_pytester.py:TestSysModulesSnapshot.test_restore_reloaded",
      "type": "function",
      "name": "TestSysModulesSnapshot.test_restore_reloaded",
      "file": "testing/test_pytester.py",
      "line": 338
    },
    {
      "id": "testing/test_pytester.py:TestSysModulesSnapshot.test_preserve_modules",
      "type": "function",
      "name": "TestSysModulesSnapshot.test_preserve_modules",
      "file": "testing/test_pytester.py",
      "line": 348
    },
    {
      "id": "testing/test_pytester.py:TestSysModulesSnapshot.test_preserve_modules.preserve",
      "type": "function",
      "name": "TestSysModulesSnapshot.test_preserve_modules.preserve",
      "file": "testing/test_pytester.py",
      "line": 356
    },
    {
      "id": "testing/test_pytester.py:TestSysModulesSnapshot.test_preserve_container",
      "type": "function",
      "name": "TestSysModulesSnapshot.test_preserve_container",
      "file": "testing/test_pytester.py",
      "line": 366
    },
    {
      "id": "testing/test_pytester.py:TestSysPathsSnapshot",
      "type": "class",
      "name": "TestSysPathsSnapshot",
      "file": "testing/test_pytester.py",
      "line": 379
    },
    {
      "id": "testing/test_pytester.py:TestSysPathsSnapshot.path",
      "type": "function",
      "name": "TestSysPathsSnapshot.path",
      "file": "testing/test_pytester.py",
      "line": 383
    },
    {
      "id": "testing/test_pytester.py:TestSysPathsSnapshot.test_restore",
      "type": "function",
      "name": "TestSysPathsSnapshot.test_restore",
      "file": "testing/test_pytester.py",
      "line": 386
    },
    {
      "id": "testing/test_pytester.py:TestSysPathsSnapshot.test_preserve_container",
      "type": "function",
      "name": "TestSysPathsSnapshot.test_preserve_container",
      "file": "testing/test_pytester.py",
      "line": 409
    },
    {
      "id": "testing/test_pytester.py:test_pytester_subprocess",
      "type": "function",
      "name": "test_pytester_subprocess",
      "file": "testing/test_pytester.py",
      "line": 424
    },
    {
      "id": "testing/test_pytester.py:test_pytester_subprocess_via_runpytest_arg",
      "type": "function",
      "name": "test_pytester_subprocess_via_runpytest_arg",
      "file": "testing/test_pytester.py",
      "line": 429
    },
    {
      "id": "testing/test_pytester.py:test_unicode_args",
      "type": "function",
      "name": "test_unicode_args",
      "file": "testing/test_pytester.py",
      "line": 450
    },
    {
      "id": "testing/test_pytester.py:test_pytester_run_no_timeout",
      "type": "function",
      "name": "test_pytester_run_no_timeout",
      "file": "testing/test_pytester.py",
      "line": 455
    },
    {
      "id": "testing/test_pytester.py:test_pytester_run_with_timeout",
      "type": "function",
      "name": "test_pytester_run_with_timeout",
      "file": "testing/test_pytester.py",
      "line": 460
    },
    {
      "id": "testing/test_pytester.py:test_pytester_run_timeout_expires",
      "type": "function",
      "name": "test_pytester_run_timeout_expires",
      "file": "testing/test_pytester.py",
      "line": 474
    },
    {
      "id": "testing/test_pytester.py:test_linematcher_with_nonlist",
      "type": "function",
      "name": "test_linematcher_with_nonlist",
      "file": "testing/test_pytester.py",
      "line": 486
    },
    {
      "id": "testing/test_pytester.py:test_linematcher_match_failure",
      "type": "function",
      "name": "test_linematcher_match_failure",
      "file": "testing/test_pytester.py",
      "line": 510
    },
    {
      "id": "testing/test_pytester.py:test_linematcher_consecutive",
      "type": "function",
      "name": "test_linematcher_consecutive",
      "file": "testing/test_pytester.py",
      "line": 538
    },
    {
      "id": "testing/test_pytester.py:test_linematcher_no_matching",
      "type": "function",
      "name": "test_linematcher_no_matching",
      "file": "testing/test_pytester.py",
      "line": 559
    },
    {
      "id": "testing/test_pytester.py:test_linematcher_no_matching_after_match",
      "type": "function",
      "name": "test_linematcher_no_matching_after_match",
      "file": "testing/test_pytester.py",
      "line": 607
    },
    {
      "id": "testing/test_pytester.py:test_linematcher_string_api",
      "type": "function",
      "name": "test_linematcher_string_api",
      "file": "testing/test_pytester.py",
      "line": 615
    },
    {
      "id": "testing/test_pytester.py:test_pytest_addopts_before_pytester",
      "type": "function",
      "name": "test_pytest_addopts_before_pytester",
      "file": "testing/test_pytester.py",
      "line": 620
    },
    {
      "id": "testing/test_pytester.py:test_run_stdin",
      "type": "function",
      "name": "test_run_stdin",
      "file": "testing/test_pytester.py",
      "line": 626
    },
    {
      "id": "testing/test_pytester.py:test_popen_stdin_pipe",
      "type": "function",
      "name": "test_popen_stdin_pipe",
      "file": "testing/test_pytester.py",
      "line": 656
    },
    {
      "id": "testing/test_pytester.py:test_popen_stdin_bytes",
      "type": "function",
      "name": "test_popen_stdin_bytes",
      "file": "testing/test_pytester.py",
      "line": 670
    },
    {
      "id": "testing/test_pytester.py:test_popen_default_stdin_stderr_and_stdin_None",
      "type": "function",
      "name": "test_popen_default_stdin_stderr_and_stdin_None",
      "file": "testing/test_pytester.py",
      "line": 683
    },
    {
      "id": "testing/test_pytester.py:test_spawn_uses_tmphome",
      "type": "function",
      "name": "test_spawn_uses_tmphome",
      "file": "testing/test_pytester.py",
      "line": 713
    },
    {
      "id": "testing/test_pytester.py:test_run_result_repr",
      "type": "function",
      "name": "test_run_result_repr",
      "file": "testing/test_pytester.py",
      "line": 735
    },
    {
      "id": "testing/test_pytester.py:test_pytester_outcomes_with_multiple_errors",
      "type": "function",
      "name": "test_pytester_outcomes_with_multiple_errors",
      "file": "testing/test_pytester.py",
      "line": 754
    },
    {
      "id": "testing/test_pytester.py:test_parse_summary_line_always_plural",
      "type": "function",
      "name": "test_parse_summary_line_always_plural",
      "file": "testing/test_pytester.py",
      "line": 776
    },
    {
      "id": "testing/test_pytester.py:test_makefile_joins_absolute_path",
      "type": "function",
      "name": "test_makefile_joins_absolute_path",
      "file": "testing/test_pytester.py",
      "line": 805
    },
    {
      "id": "testing/test_pytester.py:test_pytester_makefile_dot_prefixes_extension_with_warning",
      "type": "function",
      "name": "test_pytester_makefile_dot_prefixes_extension_with_warning",
      "file": "testing/test_pytester.py",
      "line": 811
    },
    {
      "id": "testing/test_pytester.py:test_pytester_assert_outcomes_warnings",
      "type": "function",
      "name": "test_pytester_assert_outcomes_warnings",
      "file": "testing/test_pytester.py",
      "line": 822
    },
    {
      "id": "testing/test_pytester.py:test_pytester_outcomes_deselected",
      "type": "function",
      "name": "test_pytester_outcomes_deselected",
      "file": "testing/test_pytester.py",
      "line": 837
    },
    {
      "id": "testing/test_argcomplete.py",
      "type": "file",
      "name": "test_argcomplete.py",
      "file": "testing/test_argcomplete.py",
      "line": 0
    },
    {
      "id": "testing/test_argcomplete.py:equal_with_bash",
      "type": "function",
      "name": "equal_with_bash",
      "file": "testing/test_argcomplete.py",
      "line": 11
    },
    {
      "id": "testing/test_argcomplete.py:_wrapcall",
      "type": "function",
      "name": "_wrapcall",
      "file": "testing/test_argcomplete.py",
      "line": 28
    },
    {
      "id": "testing/test_argcomplete.py:FilesCompleter",
      "type": "class",
      "name": "FilesCompleter",
      "file": "testing/test_argcomplete.py",
      "line": 35
    },
    {
      "id": "testing/test_argcomplete.py:FilesCompleter.__call__",
      "type": "function",
      "name": "FilesCompleter.__call__",
      "file": "testing/test_argcomplete.py",
      "line": 46
    },
    {
      "id": "testing/test_argcomplete.py:TestArgComplete",
      "type": "class",
      "name": "TestArgComplete",
      "file": "testing/test_argcomplete.py",
      "line": 68
    },
    {
      "id": "testing/test_argcomplete.py:TestArgComplete.test_compare_with_compgen",
      "type": "function",
      "name": "TestArgComplete.test_compare_with_compgen",
      "file": "testing/test_argcomplete.py",
      "line": 70
    },
    {
      "id": "testing/test_argcomplete.py:TestArgComplete.test_remove_dir_prefix",
      "type": "function",
      "name": "TestArgComplete.test_remove_dir_prefix",
      "file": "testing/test_argcomplete.py",
      "line": 88
    },
    {
      "id": "testing/test_mark_expression.py",
      "type": "file",
      "name": "test_mark_expression.py",
      "file": "testing/test_mark_expression.py",
      "line": 0
    },
    {
      "id": "testing/test_mark_expression.py:evaluate",
      "type": "function",
      "name": "evaluate",
      "file": "testing/test_mark_expression.py",
      "line": 8
    },
    {
      "id": "testing/test_mark_expression.py:test_empty_is_false",
      "type": "function",
      "name": "test_empty_is_false",
      "file": "testing/test_mark_expression.py",
      "line": 12
    },
    {
      "id": "testing/test_mark_expression.py:test_basic",
      "type": "function",
      "name": "test_basic",
      "file": "testing/test_mark_expression.py",
      "line": 48
    },
    {
      "id": "testing/test_mark_expression.py:test_syntax_oddeties",
      "type": "function",
      "name": "test_syntax_oddeties",
      "file": "testing/test_mark_expression.py",
      "line": 64
    },
    {
      "id": "testing/test_mark_expression.py:test_backslash_not_treated_specially",
      "type": "function",
      "name": "test_backslash_not_treated_specially",
      "file": "testing/test_mark_expression.py",
      "line": 69
    },
    {
      "id": "testing/test_mark_expression.py:test_syntax_errors",
      "type": "function",
      "name": "test_syntax_errors",
      "file": "testing/test_mark_expression.py",
      "line": 131
    },
    {
      "id": "testing/test_mark_expression.py:test_valid_idents",
      "type": "function",
      "name": "test_valid_idents",
      "file": "testing/test_mark_expression.py",
      "line": 167
    },
    {
      "id": "testing/test_mark_expression.py:test_invalid_idents",
      "type": "function",
      "name": "test_invalid_idents",
      "file": "testing/test_mark_expression.py",
      "line": 193
    },
    {
      "id": "testing/test_main.py",
      "type": "file",
      "name": "test_main.py",
      "file": "testing/test_main.py",
      "line": 0
    },
    {
      "id": "testing/test_main.py:test_wrap_session_notify_exception",
      "type": "function",
      "name": "test_wrap_session_notify_exception",
      "file": "testing/test_main.py",
      "line": 24
    },
    {
      "id": "testing/test_main.py:test_wrap_session_exit_sessionfinish",
      "type": "function",
      "name": "test_wrap_session_exit_sessionfinish",
      "file": "testing/test_main.py",
      "line": 83
    },
    {
      "id": "testing/test_main.py:test_validate_basetemp_ok",
      "type": "function",
      "name": "test_validate_basetemp_ok",
      "file": "testing/test_main.py",
      "line": 105
    },
    {
      "id": "testing/test_main.py:test_validate_basetemp_fails",
      "type": "function",
      "name": "test_validate_basetemp_fails",
      "file": "testing/test_main.py",
      "line": 111
    },
    {
      "id": "testing/test_main.py:test_validate_basetemp_integration",
      "type": "function",
      "name": "test_validate_basetemp_integration",
      "file": "testing/test_main.py",
      "line": 120
    },
    {
      "id": "testing/test_main.py:TestResolveCollectionArgument",
      "type": "class",
      "name": "TestResolveCollectionArgument",
      "file": "testing/test_main.py",
      "line": 125
    },
    {
      "id": "testing/test_main.py:TestResolveCollectionArgument.invocation_path",
      "type": "function",
      "name": "TestResolveCollectionArgument.invocation_path",
      "file": "testing/test_main.py",
      "line": 127
    },
    {
      "id": "testing/test_main.py:TestResolveCollectionArgument.test_file",
      "type": "function",
      "name": "TestResolveCollectionArgument.test_file",
      "file": "testing/test_main.py",
      "line": 137
    },
    {
      "id": "testing/test_main.py:TestResolveCollectionArgument.test_dir",
      "type": "function",
      "name": "TestResolveCollectionArgument.test_dir",
      "file": "testing/test_main.py",
      "line": 154
    },
    {
      "id": "testing/test_main.py:TestResolveCollectionArgument.test_pypath",
      "type": "function",
      "name": "TestResolveCollectionArgument.test_pypath",
      "file": "testing/test_main.py",
      "line": 171
    },
    {
      "id": "testing/test_main.py:TestResolveCollectionArgument.test_parametrized_name_with_colons",
      "type": "function",
      "name": "TestResolveCollectionArgument.test_parametrized_name_with_colons",
      "file": "testing/test_main.py",
      "line": 191
    },
    {
      "id": "testing/test_main.py:TestResolveCollectionArgument.test_does_not_exist",
      "type": "function",
      "name": "TestResolveCollectionArgument.test_does_not_exist",
      "file": "testing/test_main.py",
      "line": 197
    },
    {
      "id": "testing/test_main.py:TestResolveCollectionArgument.test_absolute_paths_are_resolved_correctly",
      "type": "function",
      "name": "TestResolveCollectionArgument.test_absolute_paths_are_resolved_correctly",
      "file": "testing/test_main.py",
      "line": 212
    },
    {
      "id": "testing/test_main.py:test_module_full_path_without_drive",
      "type": "function",
      "name": "test_module_full_path_without_drive",
      "file": "testing/test_main.py",
      "line": 228
    },
    {
      "id": "testing/test_tmpdir.py",
      "type": "file",
      "name": "test_tmpdir.py",
      "file": "testing/test_tmpdir.py",
      "line": 0
    },
    {
      "id": "testing/test_tmpdir.py:test_tmp_path_fixture",
      "type": "function",
      "name": "test_tmp_path_fixture",
      "file": "testing/test_tmpdir.py",
      "line": 28
    },
    {
      "id": "testing/test_tmpdir.py:FakeConfig",
      "type": "class",
      "name": "FakeConfig",
      "file": "testing/test_tmpdir.py",
      "line": 35
    },
    {
      "id": "testing/test_tmpdir.py:FakeConfig.trace",
      "type": "function",
      "name": "FakeConfig.trace",
      "file": "testing/test_tmpdir.py",
      "line": 39
    },
    {
      "id": "testing/test_tmpdir.py:FakeConfig.get",
      "type": "function",
      "name": "FakeConfig.get",
      "file": "testing/test_tmpdir.py",
      "line": 42
    },
    {
      "id": "testing/test_tmpdir.py:FakeConfig.getini",
      "type": "function",
      "name": "FakeConfig.getini",
      "file": "testing/test_tmpdir.py",
      "line": 45
    },
    {
      "id": "testing/test_tmpdir.py:FakeConfig.option",
      "type": "function",
      "name": "FakeConfig.option",
      "file": "testing/test_tmpdir.py",
      "line": 54
    },
    {
      "id": "testing/test_tmpdir.py:TestTmpPathHandler",
      "type": "class",
      "name": "TestTmpPathHandler",
      "file": "testing/test_tmpdir.py",
      "line": 58
    },
    {
      "id": "testing/test_tmpdir.py:TestTmpPathHandler.test_mktemp",
      "type": "function",
      "name": "TestTmpPathHandler.test_mktemp",
      "file": "testing/test_tmpdir.py",
      "line": 59
    },
    {
      "id": "testing/test_tmpdir.py:TestTmpPathHandler.test_tmppath_relative_basetemp_absolute",
      "type": "function",
      "name": "TestTmpPathHandler.test_tmppath_relative_basetemp_absolute",
      "file": "testing/test_tmpdir.py",
      "line": 70
    },
    {
      "id": "testing/test_tmpdir.py:TestConfigTmpPath",
      "type": "class",
      "name": "TestConfigTmpPath",
      "file": "testing/test_tmpdir.py",
      "line": 80
    },
    {
      "id": "testing/test_tmpdir.py:TestConfigTmpPath.test_getbasetemp_custom_removes_old",
      "type": "function",
      "name": "TestConfigTmpPath.test_getbasetemp_custom_removes_old",
      "file": "testing/test_tmpdir.py",
      "line": 81
    },
    {
      "id": "testing/test_tmpdir.py:TestConfigTmpPath.test_policy_failed_removes_only_passed_dir",
      "type": "function",
      "name": "TestConfigTmpPath.test_policy_failed_removes_only_passed_dir",
      "file": "testing/test_tmpdir.py",
      "line": 97
    },
    {
      "id": "testing/test_tmpdir.py:TestConfigTmpPath.test_policy_failed_removes_basedir_when_all_passed",
      "type": "function",
      "name": "TestConfigTmpPath.test_policy_failed_removes_basedir_when_all_passed",
      "file": "testing/test_tmpdir.py",
      "line": 130
    },
    {
      "id": "testing/test_tmpdir.py:TestConfigTmpPath.test_policy_failed_removes_dir_when_skipped_from_fixture",
      "type": "function",
      "name": "TestConfigTmpPath.test_policy_failed_removes_dir_when_skipped_from_fixture",
      "file": "testing/test_tmpdir.py",
      "line": 157
    },
    {
      "id": "testing/test_tmpdir.py:TestConfigTmpPath.test_policy_all_keeps_dir_when_skipped_from_fixture",
      "type": "function",
      "name": "TestConfigTmpPath.test_policy_all_keeps_dir_when_skipped_from_fixture",
      "file": "testing/test_tmpdir.py",
      "line": 190
    },
    {
      "id": "testing/test_tmpdir.py:test_mktemp",
      "type": "function",
      "name": "test_mktemp",
      "file": "testing/test_tmpdir.py",
      "line": 241
    },
    {
      "id": "testing/test_tmpdir.py:test_tmp_path_always_is_realpath",
      "type": "function",
      "name": "test_tmp_path_always_is_realpath",
      "file": "testing/test_tmpdir.py",
      "line": 261
    },
    {
      "id": "testing/test_tmpdir.py:test_tmp_path_too_long_on_parametrization",
      "type": "function",
      "name": "test_tmp_path_too_long_on_parametrization",
      "file": "testing/test_tmpdir.py",
      "line": 282
    },
    {
      "id": "testing/test_tmpdir.py:test_tmp_path_factory",
      "type": "function",
      "name": "test_tmp_path_factory",
      "file": "testing/test_tmpdir.py",
      "line": 295
    },
    {
      "id": "testing/test_tmpdir.py:test_tmp_path_fallback_tox_env",
      "type": "function",
      "name": "test_tmp_path_fallback_tox_env",
      "file": "testing/test_tmpdir.py",
      "line": 310
    },
    {
      "id": "testing/test_tmpdir.py:break_getuser",
      "type": "function",
      "name": "break_getuser",
      "file": "testing/test_tmpdir.py",
      "line": 327
    },
    {
      "id": "testing/test_tmpdir.py:test_tmp_path_fallback_uid_not_found",
      "type": "function",
      "name": "test_tmp_path_fallback_uid_not_found",
      "file": "testing/test_tmpdir.py",
      "line": 336
    },
    {
      "id": "testing/test_tmpdir.py:test_get_user_uid_not_found",
      "type": "function",
      "name": "test_get_user_uid_not_found",
      "file": "testing/test_tmpdir.py",
      "line": 353
    },
    {
      "id": "testing/test_tmpdir.py:test_get_user",
      "type": "function",
      "name": "test_get_user",
      "file": "testing/test_tmpdir.py",
      "line": 362
    },
    {
      "id": "testing/test_tmpdir.py:TestNumberedDir",
      "type": "class",
      "name": "TestNumberedDir",
      "file": "testing/test_tmpdir.py",
      "line": 372
    },
    {
      "id": "testing/test_tmpdir.py:TestNumberedDir.test_make",
      "type": "function",
      "name": "TestNumberedDir.test_make",
      "file": "testing/test_tmpdir.py",
      "line": 375
    },
    {
      "id": "testing/test_tmpdir.py:TestNumberedDir.test_cleanup_lock_create",
      "type": "function",
      "name": "TestNumberedDir.test_cleanup_lock_create",
      "file": "testing/test_tmpdir.py",
      "line": 387
    },
    {
      "id": "testing/test_tmpdir.py:TestNumberedDir.test_lock_register_cleanup_removal",
      "type": "function",
      "name": "TestNumberedDir.test_lock_register_cleanup_removal",
      "file": "testing/test_tmpdir.py",
      "line": 396
    },
    {
      "id": "testing/test_tmpdir.py:TestNumberedDir._do_cleanup",
      "type": "function",
      "name": "TestNumberedDir._do_cleanup",
      "file": "testing/test_tmpdir.py",
      "line": 418
    },
    {
      "id": "testing/test_tmpdir.py:TestNumberedDir.test_cleanup_keep",
      "type": "function",
      "name": "TestNumberedDir.test_cleanup_keep",
      "file": "testing/test_tmpdir.py",
      "line": 427
    },
    {
      "id": "testing/test_tmpdir.py:TestNumberedDir.test_cleanup_keep_0",
      "type": "function",
      "name": "TestNumberedDir.test_cleanup_keep_0",
      "file": "testing/test_tmpdir.py",
      "line": 432
    },
    {
      "id": "testing/test_tmpdir.py:TestNumberedDir.test_cleanup_locked",
      "type": "function",
      "name": "TestNumberedDir.test_cleanup_locked",
      "file": "testing/test_tmpdir.py",
      "line": 437
    },
    {
      "id": "testing/test_tmpdir.py:TestNumberedDir.test_cleanup_ignores_symlink",
      "type": "function",
      "name": "TestNumberedDir.test_cleanup_ignores_symlink",
      "file": "testing/test_tmpdir.py",
      "line": 449
    },
    {
      "id": "testing/test_tmpdir.py:TestNumberedDir.test_removal_accepts_lock",
      "type": "function",
      "name": "TestNumberedDir.test_removal_accepts_lock",
      "file": "testing/test_tmpdir.py",
      "line": 454
    },
    {
      "id": "testing/test_tmpdir.py:TestRmRf",
      "type": "class",
      "name": "TestRmRf",
      "file": "testing/test_tmpdir.py",
      "line": 461
    },
    {
      "id": "testing/test_tmpdir.py:TestRmRf.test_rm_rf",
      "type": "function",
      "name": "TestRmRf.test_rm_rf",
      "file": "testing/test_tmpdir.py",
      "line": 462
    },
    {
      "id": "testing/test_tmpdir.py:TestRmRf.test_rm_rf_with_read_only_file",
      "type": "function",
      "name": "TestRmRf.test_rm_rf_with_read_only_file",
      "file": "testing/test_tmpdir.py",
      "line": 476
    },
    {
      "id": "testing/test_tmpdir.py:TestRmRf.chmod_r",
      "type": "function",
      "name": "TestRmRf.chmod_r",
      "file": "testing/test_tmpdir.py",
      "line": 489
    },
    {
      "id": "testing/test_tmpdir.py:TestRmRf.test_rm_rf_with_read_only_directory",
      "type": "function",
      "name": "TestRmRf.test_rm_rf_with_read_only_directory",
      "file": "testing/test_tmpdir.py",
      "line": 493
    },
    {
      "id": "testing/test_tmpdir.py:TestRmRf.test_on_rm_rf_error",
      "type": "function",
      "name": "TestRmRf.test_on_rm_rf_error",
      "file": "testing/test_tmpdir.py",
      "line": 505
    },
    {
      "id": "testing/test_tmpdir.py:attempt_symlink_to",
      "type": "function",
      "name": "attempt_symlink_to",
      "file": "testing/test_tmpdir.py",
      "line": 546
    },
    {
      "id": "testing/test_tmpdir.py:test_basetemp_with_read_only_files",
      "type": "function",
      "name": "test_basetemp_with_read_only_files",
      "file": "testing/test_tmpdir.py",
      "line": 555
    },
    {
      "id": "testing/test_tmpdir.py:test_tmp_path_factory_handles_invalid_dir_characters",
      "type": "function",
      "name": "test_tmp_path_factory_handles_invalid_dir_characters",
      "file": "testing/test_tmpdir.py",
      "line": 576
    },
    {
      "id": "testing/test_tmpdir.py:test_tmp_path_factory_create_directory_with_safe_permissions",
      "type": "function",
      "name": "test_tmp_path_factory_create_directory_with_safe_permissions",
      "file": "testing/test_tmpdir.py",
      "line": 588
    },
    {
      "id": "testing/test_tmpdir.py:test_tmp_path_factory_fixes_up_world_readable_permissions",
      "type": "function",
      "name": "test_tmp_path_factory_fixes_up_world_readable_permissions",
      "file": "testing/test_tmpdir.py",
      "line": 604
    },
    {
      "id": "testing/deprecated_test.py",
      "type": "file",
      "name": "deprecated_test.py",
      "file": "testing/deprecated_test.py",
      "line": 0
    },
    {
      "id": "testing/deprecated_test.py:test_external_plugins_integrated",
      "type": "function",
      "name": "test_external_plugins_integrated",
      "file": "testing/deprecated_test.py",
      "line": 15
    },
    {
      "id": "testing/deprecated_test.py:test_hookspec_via_function_attributes_are_deprecated",
      "type": "function",
      "name": "test_hookspec_via_function_attributes_are_deprecated",
      "file": "testing/deprecated_test.py",
      "line": 23
    },
    {
      "id": "testing/deprecated_test.py:test_hookspec_via_function_attributes_are_deprecated.DeprecatedHookMarkerSpec",
      "type": "class",
      "name": "test_hookspec_via_function_attributes_are_deprecated.DeprecatedHookMarkerSpec",
      "file": "testing/deprecated_test.py",
      "line": 28
    },
    {
      "id": "testing/deprecated_test.py:test_hookspec_via_function_attributes_are_deprecated.DeprecatedHookMarkerSpec.pytest_bad_hook",
      "type": "function",
      "name": "test_hookspec_via_function_attributes_are_deprecated.DeprecatedHookMarkerSpec.pytest_bad_hook",
      "file": "testing/deprecated_test.py",
      "line": 29
    },
    {
      "id": "testing/deprecated_test.py:test_hookimpl_via_function_attributes_are_deprecated",
      "type": "function",
      "name": "test_hookimpl_via_function_attributes_are_deprecated",
      "file": "testing/deprecated_test.py",
      "line": 47
    },
    {
      "id": "testing/deprecated_test.py:test_hookimpl_via_function_attributes_are_deprecated.DeprecatedMarkImplPlugin",
      "type": "class",
      "name": "test_hookimpl_via_function_attributes_are_deprecated.DeprecatedMarkImplPlugin",
      "file": "testing/deprecated_test.py",
      "line": 52
    },
    {
      "id": "testing/deprecated_test.py:test_hookimpl_via_function_attributes_are_deprecated.DeprecatedMarkImplPlugin.pytest_runtest_call",
      "type": "function",
      "name": "test_hookimpl_via_function_attributes_are_deprecated.DeprecatedMarkImplPlugin.pytest_runtest_call",
      "file": "testing/deprecated_test.py",
      "line": 53
    },
    {
      "id": "testing/deprecated_test.py:test_fscollector_gethookproxy_isinitpath",
      "type": "function",
      "name": "test_fscollector_gethookproxy_isinitpath",
      "file": "testing/deprecated_test.py",
      "line": 71
    },
    {
      "id": "testing/deprecated_test.py:test_strict_option_is_deprecated",
      "type": "function",
      "name": "test_strict_option_is_deprecated",
      "file": "testing/deprecated_test.py",
      "line": 96
    },
    {
      "id": "testing/deprecated_test.py:test_yield_fixture_is_deprecated",
      "type": "function",
      "name": "test_yield_fixture_is_deprecated",
      "file": "testing/deprecated_test.py",
      "line": 115
    },
    {
      "id": "testing/deprecated_test.py:test_yield_fixture_is_deprecated.fix",
      "type": "function",
      "name": "test_yield_fixture_is_deprecated.fix",
      "file": "testing/deprecated_test.py",
      "line": 119
    },
    {
      "id": "testing/deprecated_test.py:test_private_is_deprecated",
      "type": "function",
      "name": "test_private_is_deprecated",
      "file": "testing/deprecated_test.py",
      "line": 123
    },
    {
      "id": "testing/deprecated_test.py:test_private_is_deprecated.PrivateInit",
      "type": "class",
      "name": "test_private_is_deprecated.PrivateInit",
      "file": "testing/deprecated_test.py",
      "line": 124
    },
    {
      "id": "testing/deprecated_test.py:test_hookproxy_warnings_for_pathlib",
      "type": "function",
      "name": "test_hookproxy_warnings_for_pathlib",
      "file": "testing/deprecated_test.py",
      "line": 138
    },
    {
      "id": "testing/deprecated_test.py:test_warns_none_is_deprecated",
      "type": "function",
      "name": "test_warns_none_is_deprecated",
      "file": "testing/deprecated_test.py",
      "line": 168
    },
    {
      "id": "testing/deprecated_test.py:TestSkipMsgArgumentDeprecated",
      "type": "class",
      "name": "TestSkipMsgArgumentDeprecated",
      "file": "testing/deprecated_test.py",
      "line": 182
    },
    {
      "id": "testing/deprecated_test.py:TestSkipMsgArgumentDeprecated.test_skip_with_msg_is_deprecated",
      "type": "function",
      "name": "TestSkipMsgArgumentDeprecated.test_skip_with_msg_is_deprecated",
      "file": "testing/deprecated_test.py",
      "line": 183
    },
    {
      "id": "testing/deprecated_test.py:TestSkipMsgArgumentDeprecated.test_fail_with_msg_is_deprecated",
      "type": "function",
      "name": "TestSkipMsgArgumentDeprecated.test_fail_with_msg_is_deprecated",
      "file": "testing/deprecated_test.py",
      "line": 202
    },
    {
      "id": "testing/deprecated_test.py:TestSkipMsgArgumentDeprecated.test_exit_with_msg_is_deprecated",
      "type": "function",
      "name": "TestSkipMsgArgumentDeprecated.test_exit_with_msg_is_deprecated",
      "file": "testing/deprecated_test.py",
      "line": 221
    },
    {
      "id": "testing/deprecated_test.py:test_deprecation_of_cmdline_preparse",
      "type": "function",
      "name": "test_deprecation_of_cmdline_preparse",
      "file": "testing/deprecated_test.py",
      "line": 240
    },
    {
      "id": "testing/deprecated_test.py:test_node_ctor_fspath_argument_is_deprecated",
      "type": "function",
      "name": "test_node_ctor_fspath_argument_is_deprecated",
      "file": "testing/deprecated_test.py",
      "line": 257
    },
    {
      "id": "testing/deprecated_test.py:test_importing_instance_is_deprecated",
      "type": "function",
      "name": "test_importing_instance_is_deprecated",
      "file": "testing/deprecated_test.py",
      "line": 270
    },
    {
      "id": "testing/deprecated_test.py:test_fixture_disallow_on_marked_functions",
      "type": "function",
      "name": "test_fixture_disallow_on_marked_functions",
      "file": "testing/deprecated_test.py",
      "line": 284
    },
    {
      "id": "testing/deprecated_test.py:test_fixture_disallow_on_marked_functions.foo",
      "type": "function",
      "name": "test_fixture_disallow_on_marked_functions.foo",
      "file": "testing/deprecated_test.py",
      "line": 294
    },
    {
      "id": "testing/deprecated_test.py:test_fixture_disallow_marks_on_fixtures",
      "type": "function",
      "name": "test_fixture_disallow_marks_on_fixtures",
      "file": "testing/deprecated_test.py",
      "line": 303
    },
    {
      "id": "testing/deprecated_test.py:test_fixture_disallow_marks_on_fixtures.foo",
      "type": "function",
      "name": "test_fixture_disallow_marks_on_fixtures.foo",
      "file": "testing/deprecated_test.py",
      "line": 313
    },
    {
      "id": "testing/deprecated_test.py:test_fixture_disallowed_between_marks",
      "type": "function",
      "name": "test_fixture_disallowed_between_marks",
      "file": "testing/deprecated_test.py",
      "line": 319
    },
    {
      "id": "testing/deprecated_test.py:test_fixture_disallowed_between_marks.foo",
      "type": "function",
      "name": "test_fixture_disallowed_between_marks.foo",
      "file": "testing/deprecated_test.py",
      "line": 329
    },
    {
      "id": "testing/deprecated_test.py:test_nose_deprecated_with_setup",
      "type": "function",
      "name": "test_nose_deprecated_with_setup",
      "file": "testing/deprecated_test.py",
      "line": 336
    },
    {
      "id": "testing/deprecated_test.py:test_nose_deprecated_setup_teardown",
      "type": "function",
      "name": "test_nose_deprecated_setup_teardown",
      "file": "testing/deprecated_test.py",
      "line": 365
    },
    {
      "id": "testing/test_stash.py",
      "type": "file",
      "name": "test_stash.py",
      "file": "testing/test_stash.py",
      "line": 0
    },
    {
      "id": "testing/test_stash.py:test_stash",
      "type": "function",
      "name": "test_stash",
      "file": "testing/test_stash.py",
      "line": 6
    },
    {
      "id": "testing/acceptance_test.py",
      "type": "file",
      "name": "acceptance_test.py",
      "file": "testing/acceptance_test.py",
      "line": 0
    },
    {
      "id": "testing/acceptance_test.py:prepend_pythonpath",
      "type": "function",
      "name": "prepend_pythonpath",
      "file": "testing/acceptance_test.py",
      "line": 13
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage",
      "type": "class",
      "name": "TestGeneralUsage",
      "file": "testing/acceptance_test.py",
      "line": 20
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_config_error",
      "type": "function",
      "name": "TestGeneralUsage.test_config_error",
      "file": "testing/acceptance_test.py",
      "line": 21
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_root_conftest_syntax_error",
      "type": "function",
      "name": "TestGeneralUsage.test_root_conftest_syntax_error",
      "file": "testing/acceptance_test.py",
      "line": 28
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_early_hook_error_issue38_1",
      "type": "function",
      "name": "TestGeneralUsage.test_early_hook_error_issue38_1",
      "file": "testing/acceptance_test.py",
      "line": 34
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_early_hook_configure_error_issue38",
      "type": "function",
      "name": "TestGeneralUsage.test_early_hook_configure_error_issue38",
      "file": "testing/acceptance_test.py",
      "line": 54
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_file_not_found",
      "type": "function",
      "name": "TestGeneralUsage.test_file_not_found",
      "file": "testing/acceptance_test.py",
      "line": 68
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_file_not_found_unconfigure_issue143",
      "type": "function",
      "name": "TestGeneralUsage.test_file_not_found_unconfigure_issue143",
      "file": "testing/acceptance_test.py",
      "line": 73
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_config_preparse_plugin_option",
      "type": "function",
      "name": "TestGeneralUsage.test_config_preparse_plugin_option",
      "file": "testing/acceptance_test.py",
      "line": 87
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_early_load_setuptools_name",
      "type": "function",
      "name": "TestGeneralUsage.test_early_load_setuptools_name",
      "file": "testing/acceptance_test.py",
      "line": 105
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_early_load_setuptools_name.DummyEntryPoint",
      "type": "class",
      "name": "TestGeneralUsage.test_early_load_setuptools_name.DummyEntryPoint",
      "file": "testing/acceptance_test.py",
      "line": 118
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_early_load_setuptools_name.DummyEntryPoint.load",
      "type": "function",
      "name": "TestGeneralUsage.test_early_load_setuptools_name.DummyEntryPoint.load",
      "file": "testing/acceptance_test.py",
      "line": 123
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_early_load_setuptools_name.DummyDist",
      "type": "class",
      "name": "TestGeneralUsage.test_early_load_setuptools_name.DummyDist",
      "file": "testing/acceptance_test.py",
      "line": 135
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_early_load_setuptools_name.my_dists",
      "type": "function",
      "name": "TestGeneralUsage.test_early_load_setuptools_name.my_dists",
      "file": "testing/acceptance_test.py",
      "line": 139
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_assertion_rewrite",
      "type": "function",
      "name": "TestGeneralUsage.test_assertion_rewrite",
      "file": "testing/acceptance_test.py",
      "line": 151
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_nested_import_error",
      "type": "function",
      "name": "TestGeneralUsage.test_nested_import_error",
      "file": "testing/acceptance_test.py",
      "line": 163
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_not_collectable_arguments",
      "type": "function",
      "name": "TestGeneralUsage.test_not_collectable_arguments",
      "file": "testing/acceptance_test.py",
      "line": 181
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_better_reporting_on_conftest_load_failure",
      "type": "function",
      "name": "TestGeneralUsage.test_better_reporting_on_conftest_load_failure",
      "file": "testing/acceptance_test.py",
      "line": 194
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_early_skip",
      "type": "function",
      "name": "TestGeneralUsage.test_early_skip",
      "file": "testing/acceptance_test.py",
      "line": 224
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_issue88_initial_file_multinodes",
      "type": "function",
      "name": "TestGeneralUsage.test_issue88_initial_file_multinodes",
      "file": "testing/acceptance_test.py",
      "line": 237
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_issue93_initialnode_importing_capturing",
      "type": "function",
      "name": "TestGeneralUsage.test_issue93_initialnode_importing_capturing",
      "file": "testing/acceptance_test.py",
      "line": 243
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_conftest_printing_shows_if_error",
      "type": "function",
      "name": "TestGeneralUsage.test_conftest_printing_shows_if_error",
      "file": "testing/acceptance_test.py",
      "line": 256
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_issue109_sibling_conftests_not_loaded",
      "type": "function",
      "name": "TestGeneralUsage.test_issue109_sibling_conftests_not_loaded",
      "file": "testing/acceptance_test.py",
      "line": 267
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_directory_skipped",
      "type": "function",
      "name": "TestGeneralUsage.test_directory_skipped",
      "file": "testing/acceptance_test.py",
      "line": 281
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_multiple_items_per_collector_byid",
      "type": "function",
      "name": "TestGeneralUsage.test_multiple_items_per_collector_byid",
      "file": "testing/acceptance_test.py",
      "line": 294
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_skip_on_generated_funcarg_id",
      "type": "function",
      "name": "TestGeneralUsage.test_skip_on_generated_funcarg_id",
      "file": "testing/acceptance_test.py",
      "line": 313
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_direct_addressing_selects",
      "type": "function",
      "name": "TestGeneralUsage.test_direct_addressing_selects",
      "file": "testing/acceptance_test.py",
      "line": 331
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_direct_addressing_notfound",
      "type": "function",
      "name": "TestGeneralUsage.test_direct_addressing_notfound",
      "file": "testing/acceptance_test.py",
      "line": 344
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_docstring_on_hookspec",
      "type": "function",
      "name": "TestGeneralUsage.test_docstring_on_hookspec",
      "file": "testing/acceptance_test.py",
      "line": 355
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_initialization_error_issue49",
      "type": "function",
      "name": "TestGeneralUsage.test_initialization_error_issue49",
      "file": "testing/acceptance_test.py",
      "line": 362
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_issue134_report_error_when_collecting_member",
      "type": "function",
      "name": "TestGeneralUsage.test_issue134_report_error_when_collecting_member",
      "file": "testing/acceptance_test.py",
      "line": 375
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_report_all_failed_collections_initargs",
      "type": "function",
      "name": "TestGeneralUsage.test_report_all_failed_collections_initargs",
      "file": "testing/acceptance_test.py",
      "line": 390
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_namespace_import_doesnt_confuse_import_hook",
      "type": "function",
      "name": "TestGeneralUsage.test_namespace_import_doesnt_confuse_import_hook",
      "file": "testing/acceptance_test.py",
      "line": 406
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_unknown_option",
      "type": "function",
      "name": "TestGeneralUsage.test_unknown_option",
      "file": "testing/acceptance_test.py",
      "line": 431
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_getsourcelines_error_issue553",
      "type": "function",
      "name": "TestGeneralUsage.test_getsourcelines_error_issue553",
      "file": "testing/acceptance_test.py",
      "line": 439
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_plugins_given_as_strings",
      "type": "function",
      "name": "TestGeneralUsage.test_plugins_given_as_strings",
      "file": "testing/acceptance_test.py",
      "line": 460
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_parametrized_with_bytes_regex",
      "type": "function",
      "name": "TestGeneralUsage.test_parametrized_with_bytes_regex",
      "file": "testing/acceptance_test.py",
      "line": 475
    },
    {
      "id": "testing/acceptance_test.py:TestGeneralUsage.test_parametrized_with_null_bytes",
      "type": "function",
      "name": "TestGeneralUsage.test_parametrized_with_null_bytes",
      "file": "testing/acceptance_test.py",
      "line": 488
    },
    {
      "id": "testing/acceptance_test.py:TestInvocationVariants",
      "type": "class",
      "name": "TestInvocationVariants",
      "file": "testing/acceptance_test.py",
      "line": 503
    },
    {
      "id": "testing/acceptance_test.py:TestInvocationVariants.test_earlyinit",
      "type": "function",
      "name": "TestInvocationVariants.test_earlyinit",
      "file": "testing/acceptance_test.py",
      "line": 504
    },
    {
      "id": "testing/acceptance_test.py:TestInvocationVariants.test_pydoc",
      "type": "function",
      "name": "TestInvocationVariants.test_pydoc",
      "file": "testing/acceptance_test.py",
      "line": 514
    },
    {
      "id": "testing/acceptance_test.py:TestInvocationVariants.test_import_star_pytest",
      "type": "function",
      "name": "TestInvocationVariants.test_import_star_pytest",
      "file": "testing/acceptance_test.py",
      "line": 520
    },
    {
      "id": "testing/acceptance_test.py:TestInvocationVariants.test_double_pytestcmdline",
      "type": "function",
      "name": "TestInvocationVariants.test_double_pytestcmdline",
      "file": "testing/acceptance_test.py",
      "line": 534
    },
    {
      "id": "testing/acceptance_test.py:TestInvocationVariants.test_python_minus_m_invocation_ok",
      "type": "function",
      "name": "TestInvocationVariants.test_python_minus_m_invocation_ok",
      "file": "testing/acceptance_test.py",
      "line": 551
    },
    {
      "id": "testing/acceptance_test.py:TestInvocationVariants.test_python_minus_m_invocation_fail",
      "type": "function",
      "name": "TestInvocationVariants.test_python_minus_m_invocation_fail",
      "file": "testing/acceptance_test.py",
      "line": 556
    },
    {
      "id": "testing/acceptance_test.py:TestInvocationVariants.test_python_pytest_package",
      "type": "function",
      "name": "TestInvocationVariants.test_python_pytest_package",
      "file": "testing/acceptance_test.py",
      "line": 561
    },
    {
      "id": "testing/acceptance_test.py:TestInvocationVariants.test_invoke_with_invalid_type",
      "type": "function",
      "name": "TestInvocationVariants.test_invoke_with_invalid_type",
      "file": "testing/acceptance_test.py",
      "line": 567
    },
    {
      "id": "testing/acceptance_test.py:TestInvocationVariants.test_invoke_with_path",
      "type": "function",
      "name": "TestInvocationVariants.test_invoke_with_path",
      "file": "testing/acceptance_test.py",
      "line": 573
    },
    {
      "id": "testing/acceptance_test.py:TestInvocationVariants.test_invoke_plugin_api",
      "type": "function",
      "name": "TestInvocationVariants.test_invoke_plugin_api",
      "file": "testing/acceptance_test.py",
      "line": 578
    },
    {
      "id": "testing/acceptance_test.py:TestInvocationVariants.test_invoke_plugin_api.MyPlugin",
      "type": "class",
      "name": "TestInvocationVariants.test_invoke_plugin_api.MyPlugin",
      "file": "testing/acceptance_test.py",
      "line": 579
    },
    {
      "id": "testing/acceptance_test.py:TestInvocationVariants.test_invoke_plugin_api.MyPlugin.pytest_addoption",
      "type": "function",
      "name": "TestInvocationVariants.test_invoke_plugin_api.MyPlugin.pytest_addoption",
      "file": "testing/acceptance_test.py",
      "line": 580
    },
    {
      "id": "testing/acceptance_test.py:TestInvocationVariants.test_pyargs_importerror",
      "type": "function",
      "name": "TestInvocationVariants.test_pyargs_importerror",
      "file": "testing/acceptance_test.py",
      "line": 587
    },
    {
      "id": "testing/acceptance_test.py:TestInvocationVariants.test_pyargs_only_imported_once",
      "type": "function",
      "name": "TestInvocationVariants.test_pyargs_only_imported_once",
      "file": "testing/acceptance_test.py",
      "line": 597
    },
    {
      "id": "testing/acceptance_test.py:TestInvocationVariants.test_pyargs_filename_looks_like_module",
      "type": "function",
      "name": "TestInvocationVariants.test_pyargs_filename_looks_like_module",
      "file": "testing/acceptance_test.py",
      "line": 614
    },
    {
      "id": "testing/acceptance_test.py:TestInvocationVariants.test_cmdline_python_package",
      "type": "function",
      "name": "TestInvocationVariants.test_cmdline_python_package",
      "file": "testing/acceptance_test.py",
      "line": 620
    },
    {
      "id": "testing/acceptance_test.py:TestInvocationVariants.test_cmdline_python_namespace_package",
      "type": "function",
      "name": "TestInvocationVariants.test_cmdline_python_namespace_package",
      "file": "testing/acceptance_test.py",
      "line": 653
    },
    {
      "id": "testing/acceptance_test.py:TestInvocationVariants.test_invoke_test_and_doctestmodules",
      "type": "function",
      "name": "TestInvocationVariants.test_invoke_test_and_doctestmodules",
      "file": "testing/acceptance_test.py",
      "line": 735
    },
    {
      "id": "testing/acceptance_test.py:TestInvocationVariants.test_cmdline_python_package_symlink",
      "type": "function",
      "name": "TestInvocationVariants.test_cmdline_python_package_symlink",
      "file": "testing/acceptance_test.py",
      "line": 745
    },
    {
      "id": "testing/acceptance_test.py:TestInvocationVariants.test_cmdline_python_package_not_exists",
      "type": "function",
      "name": "TestInvocationVariants.test_cmdline_python_package_not_exists",
      "file": "testing/acceptance_test.py",
      "line": 804
    },
    {
      "id": "testing/acceptance_test.py:TestInvocationVariants.test_noclass_discovery_if_not_testcase",
      "type": "function",
      "name": "TestInvocationVariants.test_noclass_discovery_if_not_testcase",
      "file": "testing/acceptance_test.py",
      "line": 810
    },
    {
      "id": "testing/acceptance_test.py:TestInvocationVariants.test_doctest_id",
      "type": "function",
      "name": "TestInvocationVariants.test_doctest_id",
      "file": "testing/acceptance_test.py",
      "line": 825
    },
    {
      "id": "testing/acceptance_test.py:TestInvocationVariants.test_core_backward_compatibility",
      "type": "function",
      "name": "TestInvocationVariants.test_core_backward_compatibility",
      "file": "testing/acceptance_test.py",
      "line": 850
    },
    {
      "id": "testing/acceptance_test.py:TestInvocationVariants.test_has_plugin",
      "type": "function",
      "name": "TestInvocationVariants.test_has_plugin",
      "file": "testing/acceptance_test.py",
      "line": 859
    },
    {
      "id": "testing/acceptance_test.py:TestDurations",
      "type": "class",
      "name": "TestDurations",
      "file": "testing/acceptance_test.py",
      "line": 864
    },
    {
      "id": "testing/acceptance_test.py:TestDurations.test_calls",
      "type": "function",
      "name": "TestDurations.test_calls",
      "file": "testing/acceptance_test.py",
      "line": 877
    },
    {
      "id": "testing/acceptance_test.py:TestDurations.test_calls_show_2",
      "type": "function",
      "name": "TestDurations.test_calls_show_2",
      "file": "testing/acceptance_test.py",
      "line": 890
    },
    {
      "id": "testing/acceptance_test.py:TestDurations.test_calls_showall",
      "type": "function",
      "name": "TestDurations.test_calls_showall",
      "file": "testing/acceptance_test.py",
      "line": 898
    },
    {
      "id": "testing/acceptance_test.py:TestDurations.test_calls_showall_verbose",
      "type": "function",
      "name": "TestDurations.test_calls_showall_verbose",
      "file": "testing/acceptance_test.py",
      "line": 912
    },
    {
      "id": "testing/acceptance_test.py:TestDurations.test_with_deselected",
      "type": "function",
      "name": "TestDurations.test_with_deselected",
      "file": "testing/acceptance_test.py",
      "line": 925
    },
    {
      "id": "testing/acceptance_test.py:TestDurations.test_with_failing_collection",
      "type": "function",
      "name": "TestDurations.test_with_failing_collection",
      "file": "testing/acceptance_test.py",
      "line": 932
    },
    {
      "id": "testing/acceptance_test.py:TestDurations.test_with_not",
      "type": "function",
      "name": "TestDurations.test_with_not",
      "file": "testing/acceptance_test.py",
      "line": 943
    },
    {
      "id": "testing/acceptance_test.py:TestDurationsWithFixture",
      "type": "class",
      "name": "TestDurationsWithFixture",
      "file": "testing/acceptance_test.py",
      "line": 949
    },
    {
      "id": "testing/acceptance_test.py:TestDurationsWithFixture.test_setup_function",
      "type": "function",
      "name": "TestDurationsWithFixture.test_setup_function",
      "file": "testing/acceptance_test.py",
      "line": 962
    },
    {
      "id": "testing/acceptance_test.py:test_zipimport_hook",
      "type": "function",
      "name": "test_zipimport_hook",
      "file": "testing/acceptance_test.py",
      "line": 976
    },
    {
      "id": "testing/acceptance_test.py:test_import_plugin_unicode_name",
      "type": "function",
      "name": "test_import_plugin_unicode_name",
      "file": "testing/acceptance_test.py",
      "line": 999
    },
    {
      "id": "testing/acceptance_test.py:test_pytest_plugins_as_module",
      "type": "function",
      "name": "test_pytest_plugins_as_module",
      "file": "testing/acceptance_test.py",
      "line": 1007
    },
    {
      "id": "testing/acceptance_test.py:test_deferred_hook_checking",
      "type": "function",
      "name": "test_deferred_hook_checking",
      "file": "testing/acceptance_test.py",
      "line": 1021
    },
    {
      "id": "testing/acceptance_test.py:test_fixture_values_leak",
      "type": "function",
      "name": "test_fixture_values_leak",
      "file": "testing/acceptance_test.py",
      "line": 1049
    },
    {
      "id": "testing/acceptance_test.py:test_fixture_order_respects_scope",
      "type": "function",
      "name": "test_fixture_order_respects_scope",
      "file": "testing/acceptance_test.py",
      "line": 1097
    },
    {
      "id": "testing/acceptance_test.py:test_frame_leak_on_failing_test",
      "type": "function",
      "name": "test_frame_leak_on_failing_test",
      "file": "testing/acceptance_test.py",
      "line": 1122
    },
    {
      "id": "testing/acceptance_test.py:test_fixture_mock_integration",
      "type": "function",
      "name": "test_fixture_mock_integration",
      "file": "testing/acceptance_test.py",
      "line": 1155
    },
    {
      "id": "testing/acceptance_test.py:test_usage_error_code",
      "type": "function",
      "name": "test_usage_error_code",
      "file": "testing/acceptance_test.py",
      "line": 1162
    },
    {
      "id": "testing/acceptance_test.py:test_warn_on_async_function",
      "type": "function",
      "name": "test_warn_on_async_function",
      "file": "testing/acceptance_test.py",
      "line": 1167
    },
    {
      "id": "testing/acceptance_test.py:test_warn_on_async_gen_function",
      "type": "function",
      "name": "test_warn_on_async_gen_function",
      "file": "testing/acceptance_test.py",
      "line": 1199
    },
    {
      "id": "testing/acceptance_test.py:test_pdb_can_be_rewritten",
      "type": "function",
      "name": "test_pdb_can_be_rewritten",
      "file": "testing/acceptance_test.py",
      "line": 1226
    },
    {
      "id": "testing/acceptance_test.py:test_tee_stdio_captures_and_live_prints",
      "type": "function",
      "name": "test_tee_stdio_captures_and_live_prints",
      "file": "testing/acceptance_test.py",
      "line": 1261
    },
    {
      "id": "testing/acceptance_test.py:test_no_brokenpipeerror_message",
      "type": "function",
      "name": "test_no_brokenpipeerror_message",
      "file": "testing/acceptance_test.py",
      "line": 1292
    },
    {
      "id": "testing/acceptance_test.py:test_function_return_non_none_warning",
      "type": "function",
      "name": "test_function_return_non_none_warning",
      "file": "testing/acceptance_test.py",
      "line": 1309
    },
    {
      "id": "testing/acceptance_test.py:test_doctest_and_normal_imports_with_importlib",
      "type": "function",
      "name": "test_doctest_and_normal_imports_with_importlib",
      "file": "testing/acceptance_test.py",
      "line": 1320
    },
    {
      "id": "testing/test_junitxml.py",
      "type": "file",
      "name": "test_junitxml.py",
      "file": "testing/test_junitxml.py",
      "line": 0
    },
    {
      "id": "testing/test_junitxml.py:schema",
      "type": "function",
      "name": "schema",
      "file": "testing/test_junitxml.py",
      "line": 28
    },
    {
      "id": "testing/test_junitxml.py:RunAndParse",
      "type": "class",
      "name": "RunAndParse",
      "file": "testing/test_junitxml.py",
      "line": 35
    },
    {
      "id": "testing/test_junitxml.py:RunAndParse.__call__",
      "type": "function",
      "name": "RunAndParse.__call__",
      "file": "testing/test_junitxml.py",
      "line": 40
    },
    {
      "id": "testing/test_junitxml.py:run_and_parse",
      "type": "function",
      "name": "run_and_parse",
      "file": "testing/test_junitxml.py",
      "line": 55
    },
    {
      "id": "testing/test_junitxml.py:assert_attr",
      "type": "function",
      "name": "assert_attr",
      "file": "testing/test_junitxml.py",
      "line": 65
    },
    {
      "id": "testing/test_junitxml.py:assert_attr.nodeval",
      "type": "function",
      "name": "assert_attr.nodeval",
      "file": "testing/test_junitxml.py",
      "line": 68
    },
    {
      "id": "testing/test_junitxml.py:DomNode",
      "type": "class",
      "name": "DomNode",
      "file": "testing/test_junitxml.py",
      "line": 78
    },
    {
      "id": "testing/test_junitxml.py:DomNode.__repr__",
      "type": "function",
      "name": "DomNode.__repr__",
      "file": "testing/test_junitxml.py",
      "line": 82
    },
    {
      "id": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "function",
      "name": "DomNode.find_first_by_tag",
      "file": "testing/test_junitxml.py",
      "line": 85
    },
    {
      "id": "testing/test_junitxml.py:DomNode._by_tag",
      "type": "function",
      "name": "DomNode._by_tag",
      "file": "testing/test_junitxml.py",
      "line": 88
    },
    {
      "id": "testing/test_junitxml.py:DomNode.children",
      "type": "function",
      "name": "DomNode.children",
      "file": "testing/test_junitxml.py",
      "line": 92
    },
    {
      "id": "testing/test_junitxml.py:DomNode.get_unique_child",
      "type": "function",
      "name": "DomNode.get_unique_child",
      "file": "testing/test_junitxml.py",
      "line": 96
    },
    {
      "id": "testing/test_junitxml.py:DomNode.find_nth_by_tag",
      "type": "function",
      "name": "DomNode.find_nth_by_tag",
      "file": "testing/test_junitxml.py",
      "line": 101
    },
    {
      "id": "testing/test_junitxml.py:DomNode.find_by_tag",
      "type": "function",
      "name": "DomNode.find_by_tag",
      "file": "testing/test_junitxml.py",
      "line": 110
    },
    {
      "id": "testing/test_junitxml.py:DomNode.__getitem__",
      "type": "function",
      "name": "DomNode.__getitem__",
      "file": "testing/test_junitxml.py",
      "line": 114
    },
    {
      "id": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "function",
      "name": "DomNode.assert_attr",
      "file": "testing/test_junitxml.py",
      "line": 119
    },
    {
      "id": "testing/test_junitxml.py:DomNode.toxml",
      "type": "function",
      "name": "DomNode.toxml",
      "file": "testing/test_junitxml.py",
      "line": 123
    },
    {
      "id": "testing/test_junitxml.py:DomNode.text",
      "type": "function",
      "name": "DomNode.text",
      "file": "testing/test_junitxml.py",
      "line": 127
    },
    {
      "id": "testing/test_junitxml.py:DomNode.tag",
      "type": "function",
      "name": "DomNode.tag",
      "file": "testing/test_junitxml.py",
      "line": 131
    },
    {
      "id": "testing/test_junitxml.py:DomNode.next_sibling",
      "type": "function",
      "name": "DomNode.next_sibling",
      "file": "testing/test_junitxml.py",
      "line": 135
    },
    {
      "id": "testing/test_junitxml.py:TestPython",
      "type": "class",
      "name": "TestPython",
      "file": "testing/test_junitxml.py",
      "line": 142
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_summing_simple",
      "type": "function",
      "name": "TestPython.test_summing_simple",
      "file": "testing/test_junitxml.py",
      "line": 144
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_summing_simple_with_errors",
      "type": "function",
      "name": "TestPython.test_summing_simple_with_errors",
      "file": "testing/test_junitxml.py",
      "line": 170
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_hostname_in_xml",
      "type": "function",
      "name": "TestPython.test_hostname_in_xml",
      "file": "testing/test_junitxml.py",
      "line": 199
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_timestamp_in_xml",
      "type": "function",
      "name": "TestPython.test_timestamp_in_xml",
      "file": "testing/test_junitxml.py",
      "line": 213
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_timing_function",
      "type": "function",
      "name": "TestPython.test_timing_function",
      "file": "testing/test_junitxml.py",
      "line": 228
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_junit_duration_report",
      "type": "function",
      "name": "TestPython.test_junit_duration_report",
      "file": "testing/test_junitxml.py",
      "line": 249
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_junit_duration_report.node_reporter_wrapper",
      "type": "function",
      "name": "TestPython.test_junit_duration_report.node_reporter_wrapper",
      "file": "testing/test_junitxml.py",
      "line": 259
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_setup_error",
      "type": "function",
      "name": "TestPython.test_setup_error",
      "file": "testing/test_junitxml.py",
      "line": 283
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_teardown_error",
      "type": "function",
      "name": "TestPython.test_teardown_error",
      "file": "testing/test_junitxml.py",
      "line": 308
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_call_failure_teardown_error",
      "type": "function",
      "name": "TestPython.test_call_failure_teardown_error",
      "file": "testing/test_junitxml.py",
      "line": 333
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_skip_contains_name_reason",
      "type": "function",
      "name": "TestPython.test_skip_contains_name_reason",
      "file": "testing/test_junitxml.py",
      "line": 364
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_mark_skip_contains_name_reason",
      "type": "function",
      "name": "TestPython.test_mark_skip_contains_name_reason",
      "file": "testing/test_junitxml.py",
      "line": 384
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_mark_skipif_contains_name_reason",
      "type": "function",
      "name": "TestPython.test_mark_skipif_contains_name_reason",
      "file": "testing/test_junitxml.py",
      "line": 407
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_mark_skip_doesnt_capture_output",
      "type": "function",
      "name": "TestPython.test_mark_skip_doesnt_capture_output",
      "file": "testing/test_junitxml.py",
      "line": 431
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_classname_instance",
      "type": "function",
      "name": "TestPython.test_classname_instance",
      "file": "testing/test_junitxml.py",
      "line": 448
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_classname_nested_dir",
      "type": "function",
      "name": "TestPython.test_classname_nested_dir",
      "file": "testing/test_junitxml.py",
      "line": 468
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_internal_error",
      "type": "function",
      "name": "TestPython.test_internal_error",
      "file": "testing/test_junitxml.py",
      "line": 481
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_failure_function",
      "type": "function",
      "name": "TestPython.test_failure_function",
      "file": "testing/test_junitxml.py",
      "line": 500
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_failure_verbose_message",
      "type": "function",
      "name": "TestPython.test_failure_verbose_message",
      "file": "testing/test_junitxml.py",
      "line": 568
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_failure_escape",
      "type": "function",
      "name": "TestPython.test_failure_escape",
      "file": "testing/test_junitxml.py",
      "line": 585
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_junit_prefixing",
      "type": "function",
      "name": "TestPython.test_junit_prefixing",
      "file": "testing/test_junitxml.py",
      "line": 614
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_xfailure_function",
      "type": "function",
      "name": "TestPython.test_xfailure_function",
      "file": "testing/test_junitxml.py",
      "line": 638
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_xfailure_marker",
      "type": "function",
      "name": "TestPython.test_xfailure_marker",
      "file": "testing/test_junitxml.py",
      "line": 658
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_xfail_captures_output_once",
      "type": "function",
      "name": "TestPython.test_xfail_captures_output_once",
      "file": "testing/test_junitxml.py",
      "line": 681
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_xfailure_xpass",
      "type": "function",
      "name": "TestPython.test_xfailure_xpass",
      "file": "testing/test_junitxml.py",
      "line": 710
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_xfailure_xpass_strict",
      "type": "function",
      "name": "TestPython.test_xfailure_xpass_strict",
      "file": "testing/test_junitxml.py",
      "line": 729
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_collect_error",
      "type": "function",
      "name": "TestPython.test_collect_error",
      "file": "testing/test_junitxml.py",
      "line": 750
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_unicode",
      "type": "function",
      "name": "TestPython.test_unicode",
      "file": "testing/test_junitxml.py",
      "line": 763
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_assertion_binchars",
      "type": "function",
      "name": "TestPython.test_assertion_binchars",
      "file": "testing/test_junitxml.py",
      "line": 780
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_pass_captures_stdout",
      "type": "function",
      "name": "TestPython.test_pass_captures_stdout",
      "file": "testing/test_junitxml.py",
      "line": 798
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_pass_captures_stderr",
      "type": "function",
      "name": "TestPython.test_pass_captures_stderr",
      "file": "testing/test_junitxml.py",
      "line": 821
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_setup_error_captures_stdout",
      "type": "function",
      "name": "TestPython.test_setup_error_captures_stdout",
      "file": "testing/test_junitxml.py",
      "line": 845
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_setup_error_captures_stderr",
      "type": "function",
      "name": "TestPython.test_setup_error_captures_stderr",
      "file": "testing/test_junitxml.py",
      "line": 874
    },
    {
      "id": "testing/test_junitxml.py:TestPython.test_avoid_double_stdout",
      "type": "function",
      "name": "TestPython.test_avoid_double_stdout",
      "file": "testing/test_junitxml.py",
      "line": 904
    },
    {
      "id": "testing/test_junitxml.py:test_mangle_test_address",
      "type": "function",
      "name": "test_mangle_test_address",
      "file": "testing/test_junitxml.py",
      "line": 934
    },
    {
      "id": "testing/test_junitxml.py:test_dont_configure_on_workers",
      "type": "function",
      "name": "test_dont_configure_on_workers",
      "file": "testing/test_junitxml.py",
      "line": 942
    },
    {
      "id": "testing/test_junitxml.py:test_dont_configure_on_workers.FakeConfig",
      "type": "class",
      "name": "test_dont_configure_on_workers.FakeConfig",
      "file": "testing/test_junitxml.py",
      "line": 945
    },
    {
      "id": "testing/test_junitxml.py:test_dont_configure_on_workers.FakeConfig.getini",
      "type": "function",
      "name": "test_dont_configure_on_workers.FakeConfig.getini",
      "file": "testing/test_junitxml.py",
      "line": 954
    },
    {
      "id": "testing/test_junitxml.py:TestNonPython",
      "type": "class",
      "name": "TestNonPython",
      "file": "testing/test_junitxml.py",
      "line": 972
    },
    {
      "id": "testing/test_junitxml.py:TestNonPython.test_summing_simple",
      "type": "function",
      "name": "TestNonPython.test_summing_simple",
      "file": "testing/test_junitxml.py",
      "line": 974
    },
    {
      "id": "testing/test_junitxml.py:test_nullbyte",
      "type": "function",
      "name": "test_nullbyte",
      "file": "testing/test_junitxml.py",
      "line": 1003
    },
    {
      "id": "testing/test_junitxml.py:test_nullbyte_replace",
      "type": "function",
      "name": "test_nullbyte_replace",
      "file": "testing/test_junitxml.py",
      "line": 1025
    },
    {
      "id": "testing/test_junitxml.py:test_invalid_xml_escape",
      "type": "function",
      "name": "test_invalid_xml_escape",
      "file": "testing/test_junitxml.py",
      "line": 1045
    },
    {
      "id": "testing/test_junitxml.py:test_logxml_path_expansion",
      "type": "function",
      "name": "test_logxml_path_expansion",
      "file": "testing/test_junitxml.py",
      "line": 1081
    },
    {
      "id": "testing/test_junitxml.py:test_logxml_changingdir",
      "type": "function",
      "name": "test_logxml_changingdir",
      "file": "testing/test_junitxml.py",
      "line": 1092
    },
    {
      "id": "testing/test_junitxml.py:test_logxml_makedir",
      "type": "function",
      "name": "test_logxml_makedir",
      "file": "testing/test_junitxml.py",
      "line": 1106
    },
    {
      "id": "testing/test_junitxml.py:test_logxml_check_isdir",
      "type": "function",
      "name": "test_logxml_check_isdir",
      "file": "testing/test_junitxml.py",
      "line": 1119
    },
    {
      "id": "testing/test_junitxml.py:test_escaped_parametrized_names_xml",
      "type": "function",
      "name": "test_escaped_parametrized_names_xml",
      "file": "testing/test_junitxml.py",
      "line": 1125
    },
    {
      "id": "testing/test_junitxml.py:test_double_colon_split_function_issue469",
      "type": "function",
      "name": "test_double_colon_split_function_issue469",
      "file": "testing/test_junitxml.py",
      "line": 1142
    },
    {
      "id": "testing/test_junitxml.py:test_double_colon_split_method_issue469",
      "type": "function",
      "name": "test_double_colon_split_method_issue469",
      "file": "testing/test_junitxml.py",
      "line": 1160
    },
    {
      "id": "testing/test_junitxml.py:test_unicode_issue368",
      "type": "function",
      "name": "test_unicode_issue368",
      "file": "testing/test_junitxml.py",
      "line": 1179
    },
    {
      "id": "testing/test_junitxml.py:test_unicode_issue368.Report",
      "type": "class",
      "name": "test_unicode_issue368.Report",
      "file": "testing/test_junitxml.py",
      "line": 1184
    },
    {
      "id": "testing/test_junitxml.py:test_record_property",
      "type": "function",
      "name": "test_record_property",
      "file": "testing/test_junitxml.py",
      "line": 1209
    },
    {
      "id": "testing/test_junitxml.py:test_record_property_same_name",
      "type": "function",
      "name": "test_record_property_same_name",
      "file": "testing/test_junitxml.py",
      "line": 1231
    },
    {
      "id": "testing/test_junitxml.py:test_record_fixtures_without_junitxml",
      "type": "function",
      "name": "test_record_fixtures_without_junitxml",
      "file": "testing/test_junitxml.py",
      "line": 1251
    },
    {
      "id": "testing/test_junitxml.py:test_record_attribute",
      "type": "function",
      "name": "test_record_attribute",
      "file": "testing/test_junitxml.py",
      "line": 1267
    },
    {
      "id": "testing/test_junitxml.py:test_record_fixtures_xunit2",
      "type": "function",
      "name": "test_record_fixtures_xunit2",
      "file": "testing/test_junitxml.py",
      "line": 1297
    },
    {
      "id": "testing/test_junitxml.py:test_random_report_log_xdist",
      "type": "function",
      "name": "test_random_report_log_xdist",
      "file": "testing/test_junitxml.py",
      "line": 1336
    },
    {
      "id": "testing/test_junitxml.py:test_root_testsuites_tag",
      "type": "function",
      "name": "test_root_testsuites_tag",
      "file": "testing/test_junitxml.py",
      "line": 1363
    },
    {
      "id": "testing/test_junitxml.py:test_runs_twice",
      "type": "function",
      "name": "test_runs_twice",
      "file": "testing/test_junitxml.py",
      "line": 1379
    },
    {
      "id": "testing/test_junitxml.py:test_runs_twice_xdist",
      "type": "function",
      "name": "test_runs_twice_xdist",
      "file": "testing/test_junitxml.py",
      "line": 1393
    },
    {
      "id": "testing/test_junitxml.py:test_fancy_items_regression",
      "type": "function",
      "name": "test_fancy_items_regression",
      "file": "testing/test_junitxml.py",
      "line": 1411
    },
    {
      "id": "testing/test_junitxml.py:test_global_properties",
      "type": "function",
      "name": "test_global_properties",
      "file": "testing/test_junitxml.py",
      "line": 1464
    },
    {
      "id": "testing/test_junitxml.py:test_global_properties.Report",
      "type": "class",
      "name": "test_global_properties.Report",
      "file": "testing/test_junitxml.py",
      "line": 1468
    },
    {
      "id": "testing/test_junitxml.py:test_url_property",
      "type": "function",
      "name": "test_url_property",
      "file": "testing/test_junitxml.py",
      "line": 1498
    },
    {
      "id": "testing/test_junitxml.py:test_url_property.Report",
      "type": "class",
      "name": "test_url_property.Report",
      "file": "testing/test_junitxml.py",
      "line": 1503
    },
    {
      "id": "testing/test_junitxml.py:test_record_testsuite_property",
      "type": "function",
      "name": "test_record_testsuite_property",
      "file": "testing/test_junitxml.py",
      "line": 1525
    },
    {
      "id": "testing/test_junitxml.py:test_record_testsuite_property_junit_disabled",
      "type": "function",
      "name": "test_record_testsuite_property_junit_disabled",
      "file": "testing/test_junitxml.py",
      "line": 1547
    },
    {
      "id": "testing/test_junitxml.py:test_record_testsuite_property_type_checking",
      "type": "function",
      "name": "test_record_testsuite_property_type_checking",
      "file": "testing/test_junitxml.py",
      "line": 1559
    },
    {
      "id": "testing/test_junitxml.py:test_set_suite_name",
      "type": "function",
      "name": "test_set_suite_name",
      "file": "testing/test_junitxml.py",
      "line": 1578
    },
    {
      "id": "testing/test_junitxml.py:test_escaped_skipreason_issue3533",
      "type": "function",
      "name": "test_escaped_skipreason_issue3533",
      "file": "testing/test_junitxml.py",
      "line": 1608
    },
    {
      "id": "testing/test_junitxml.py:test_escaped_setup_teardown_error",
      "type": "function",
      "name": "test_escaped_setup_teardown_error",
      "file": "testing/test_junitxml.py",
      "line": 1626
    },
    {
      "id": "testing/test_junitxml.py:test_logging_passing_tests_disabled_does_not_log_test_output",
      "type": "function",
      "name": "test_logging_passing_tests_disabled_does_not_log_test_output",
      "file": "testing/test_junitxml.py",
      "line": 1649
    },
    {
      "id": "testing/test_junitxml.py:test_logging_passing_tests_disabled_logs_output_for_failing_test_issue5430",
      "type": "function",
      "name": "test_logging_passing_tests_disabled_logs_output_for_failing_test_issue5430",
      "file": "testing/test_junitxml.py",
      "line": 1683
    },
    {
      "id": "testing/test_runner_xunit.py",
      "type": "file",
      "name": "test_runner_xunit.py",
      "file": "testing/test_runner_xunit.py",
      "line": 0
    },
    {
      "id": "testing/test_runner_xunit.py:test_module_and_function_setup",
      "type": "function",
      "name": "test_module_and_function_setup",
      "file": "testing/test_runner_xunit.py",
      "line": 8
    },
    {
      "id": "testing/test_runner_xunit.py:test_module_setup_failure_no_teardown",
      "type": "function",
      "name": "test_module_setup_failure_no_teardown",
      "file": "testing/test_runner_xunit.py",
      "line": 41
    },
    {
      "id": "testing/test_runner_xunit.py:test_setup_function_failure_no_teardown",
      "type": "function",
      "name": "test_setup_function_failure_no_teardown",
      "file": "testing/test_runner_xunit.py",
      "line": 61
    },
    {
      "id": "testing/test_runner_xunit.py:test_class_setup",
      "type": "function",
      "name": "test_class_setup",
      "file": "testing/test_runner_xunit.py",
      "line": 80
    },
    {
      "id": "testing/test_runner_xunit.py:test_class_setup_failure_no_teardown",
      "type": "function",
      "name": "test_class_setup_failure_no_teardown",
      "file": "testing/test_runner_xunit.py",
      "line": 106
    },
    {
      "id": "testing/test_runner_xunit.py:test_method_setup",
      "type": "function",
      "name": "test_method_setup",
      "file": "testing/test_runner_xunit.py",
      "line": 127
    },
    {
      "id": "testing/test_runner_xunit.py:test_method_setup_failure_no_teardown",
      "type": "function",
      "name": "test_method_setup_failure_no_teardown",
      "file": "testing/test_runner_xunit.py",
      "line": 146
    },
    {
      "id": "testing/test_runner_xunit.py:test_method_setup_uses_fresh_instances",
      "type": "function",
      "name": "test_method_setup_uses_fresh_instances",
      "file": "testing/test_runner_xunit.py",
      "line": 168
    },
    {
      "id": "testing/test_runner_xunit.py:test_setup_that_skips_calledagain",
      "type": "function",
      "name": "test_setup_that_skips_calledagain",
      "file": "testing/test_runner_xunit.py",
      "line": 183
    },
    {
      "id": "testing/test_runner_xunit.py:test_setup_fails_again_on_all_tests",
      "type": "function",
      "name": "test_setup_fails_again_on_all_tests",
      "file": "testing/test_runner_xunit.py",
      "line": 199
    },
    {
      "id": "testing/test_runner_xunit.py:test_setup_funcarg_setup_when_outer_scope_fails",
      "type": "function",
      "name": "test_setup_funcarg_setup_when_outer_scope_fails",
      "file": "testing/test_runner_xunit.py",
      "line": 215
    },
    {
      "id": "testing/test_runner_xunit.py:test_setup_teardown_function_level_with_optional_argument",
      "type": "function",
      "name": "test_setup_teardown_function_level_with_optional_argument",
      "file": "testing/test_runner_xunit.py",
      "line": 244
    },
    {
      "id": "testing/test_stepwise.py",
      "type": "file",
      "name": "test_stepwise.py",
      "file": "testing/test_stepwise.py",
      "line": 0
    },
    {
      "id": "testing/test_stepwise.py:stepwise_pytester",
      "type": "function",
      "name": "stepwise_pytester",
      "file": "testing/test_stepwise.py",
      "line": 11
    },
    {
      "id": "testing/test_stepwise.py:error_pytester",
      "type": "function",
      "name": "error_pytester",
      "file": "testing/test_stepwise.py",
      "line": 62
    },
    {
      "id": "testing/test_stepwise.py:broken_pytester",
      "type": "function",
      "name": "broken_pytester",
      "file": "testing/test_stepwise.py",
      "line": 77
    },
    {
      "id": "testing/test_stepwise.py:_strip_resource_warnings",
      "type": "function",
      "name": "_strip_resource_warnings",
      "file": "testing/test_stepwise.py",
      "line": 84
    },
    {
      "id": "testing/test_stepwise.py:test_run_without_stepwise",
      "type": "function",
      "name": "test_run_without_stepwise",
      "file": "testing/test_stepwise.py",
      "line": 94
    },
    {
      "id": "testing/test_stepwise.py:test_stepwise_output_summary",
      "type": "function",
      "name": "test_stepwise_output_summary",
      "file": "testing/test_stepwise.py",
      "line": 101
    },
    {
      "id": "testing/test_stepwise.py:test_fail_and_continue_with_stepwise",
      "type": "function",
      "name": "test_fail_and_continue_with_stepwise",
      "file": "testing/test_stepwise.py",
      "line": 118
    },
    {
      "id": "testing/test_stepwise.py:test_run_with_skip_option",
      "type": "function",
      "name": "test_run_with_skip_option",
      "file": "testing/test_stepwise.py",
      "line": 143
    },
    {
      "id": "testing/test_stepwise.py:test_fail_on_errors",
      "type": "function",
      "name": "test_fail_on_errors",
      "file": "testing/test_stepwise.py",
      "line": 162
    },
    {
      "id": "testing/test_stepwise.py:test_change_testfile",
      "type": "function",
      "name": "test_change_testfile",
      "file": "testing/test_stepwise.py",
      "line": 172
    },
    {
      "id": "testing/test_stepwise.py:test_stop_on_collection_errors",
      "type": "function",
      "name": "test_stop_on_collection_errors",
      "file": "testing/test_stepwise.py",
      "line": 193
    },
    {
      "id": "testing/test_stepwise.py:test_xfail_handling",
      "type": "function",
      "name": "test_xfail_handling",
      "file": "testing/test_stepwise.py",
      "line": 205
    },
    {
      "id": "testing/test_stepwise.py:test_stepwise_skip_is_independent",
      "type": "function",
      "name": "test_stepwise_skip_is_independent",
      "file": "testing/test_stepwise.py",
      "line": 257
    },
    {
      "id": "testing/test_stepwise.py:test_sw_skip_help",
      "type": "function",
      "name": "test_sw_skip_help",
      "file": "testing/test_stepwise.py",
      "line": 282
    },
    {
      "id": "testing/test_stepwise.py:test_stepwise_xdist_dont_store_lastfailed",
      "type": "function",
      "name": "test_stepwise_xdist_dont_store_lastfailed",
      "file": "testing/test_stepwise.py",
      "line": 287
    },
    {
      "id": "testing/test_stepwise.py:test_disabled_stepwise_xdist_dont_clear_cache",
      "type": "function",
      "name": "test_disabled_stepwise_xdist_dont_clear_cache",
      "file": "testing/test_stepwise.py",
      "line": 317
    },
    {
      "id": "testing/test_pathlib.py",
      "type": "file",
      "name": "test_pathlib.py",
      "file": "testing/test_pathlib.py",
      "line": 0
    },
    {
      "id": "testing/test_pathlib.py:TestFNMatcherPort",
      "type": "class",
      "name": "TestFNMatcherPort",
      "file": "testing/test_pathlib.py",
      "line": 31
    },
    {
      "id": "testing/test_pathlib.py:TestFNMatcherPort.test_matching",
      "type": "function",
      "name": "TestFNMatcherPort.test_matching",
      "file": "testing/test_pathlib.py",
      "line": 55
    },
    {
      "id": "testing/test_pathlib.py:TestFNMatcherPort.test_matching_abspath",
      "type": "function",
      "name": "TestFNMatcherPort.test_matching_abspath",
      "file": "testing/test_pathlib.py",
      "line": 58
    },
    {
      "id": "testing/test_pathlib.py:TestFNMatcherPort.test_not_matching",
      "type": "function",
      "name": "TestFNMatcherPort.test_not_matching",
      "file": "testing/test_pathlib.py",
      "line": 76
    },
    {
      "id": "testing/test_pathlib.py:TestImportPath",
      "type": "class",
      "name": "TestImportPath",
      "file": "testing/test_pathlib.py",
      "line": 80
    },
    {
      "id": "testing/test_pathlib.py:TestImportPath.path1",
      "type": "function",
      "name": "TestImportPath.path1",
      "file": "testing/test_pathlib.py",
      "line": 89
    },
    {
      "id": "testing/test_pathlib.py:TestImportPath.preserve_sys",
      "type": "function",
      "name": "TestImportPath.preserve_sys",
      "file": "testing/test_pathlib.py",
      "line": 96
    },
    {
      "id": "testing/test_pathlib.py:TestImportPath.setuptestfs",
      "type": "function",
      "name": "TestImportPath.setuptestfs",
      "file": "testing/test_pathlib.py",
      "line": 101
    },
    {
      "id": "testing/test_pathlib.py:TestImportPath.test_smoke_test",
      "type": "function",
      "name": "TestImportPath.test_smoke_test",
      "file": "testing/test_pathlib.py",
      "line": 150
    },
    {
      "id": "testing/test_pathlib.py:TestImportPath.test_import_path_missing_file",
      "type": "function",
      "name": "TestImportPath.test_import_path_missing_file",
      "file": "testing/test_pathlib.py",
      "line": 155
    },
    {
      "id": "testing/test_pathlib.py:TestImportPath.test_renamed_dir_creates_mismatch",
      "type": "function",
      "name": "TestImportPath.test_renamed_dir_creates_mismatch",
      "file": "testing/test_pathlib.py",
      "line": 159
    },
    {
      "id": "testing/test_pathlib.py:TestImportPath.test_messy_name",
      "type": "function",
      "name": "TestImportPath.test_messy_name",
      "file": "testing/test_pathlib.py",
      "line": 179
    },
    {
      "id": "testing/test_pathlib.py:TestImportPath.test_dir",
      "type": "function",
      "name": "TestImportPath.test_dir",
      "file": "testing/test_pathlib.py",
      "line": 186
    },
    {
      "id": "testing/test_pathlib.py:TestImportPath.test_a",
      "type": "function",
      "name": "TestImportPath.test_a",
      "file": "testing/test_pathlib.py",
      "line": 196
    },
    {
      "id": "testing/test_pathlib.py:TestImportPath.test_b",
      "type": "function",
      "name": "TestImportPath.test_b",
      "file": "testing/test_pathlib.py",
      "line": 202
    },
    {
      "id": "testing/test_pathlib.py:TestImportPath.test_c",
      "type": "function",
      "name": "TestImportPath.test_c",
      "file": "testing/test_pathlib.py",
      "line": 208
    },
    {
      "id": "testing/test_pathlib.py:TestImportPath.test_d",
      "type": "function",
      "name": "TestImportPath.test_d",
      "file": "testing/test_pathlib.py",
      "line": 213
    },
    {
      "id": "testing/test_pathlib.py:TestImportPath.test_import_after",
      "type": "function",
      "name": "TestImportPath.test_import_after",
      "file": "testing/test_pathlib.py",
      "line": 218
    },
    {
      "id": "testing/test_pathlib.py:TestImportPath.test_check_filepath_consistency",
      "type": "function",
      "name": "TestImportPath.test_check_filepath_consistency",
      "file": "testing/test_pathlib.py",
      "line": 229
    },
    {
      "id": "testing/test_pathlib.py:TestImportPath.test_issue131_on__init__",
      "type": "function",
      "name": "TestImportPath.test_issue131_on__init__",
      "file": "testing/test_pathlib.py",
      "line": 257
    },
    {
      "id": "testing/test_pathlib.py:TestImportPath.test_ensuresyspath_append",
      "type": "function",
      "name": "TestImportPath.test_ensuresyspath_append",
      "file": "testing/test_pathlib.py",
      "line": 271
    },
    {
      "id": "testing/test_pathlib.py:TestImportPath.test_invalid_path",
      "type": "function",
      "name": "TestImportPath.test_invalid_path",
      "file": "testing/test_pathlib.py",
      "line": 281
    },
    {
      "id": "testing/test_pathlib.py:TestImportPath.simple_module",
      "type": "function",
      "name": "TestImportPath.simple_module",
      "file": "testing/test_pathlib.py",
      "line": 286
    },
    {
      "id": "testing/test_pathlib.py:TestImportPath.test_importmode_importlib",
      "type": "function",
      "name": "TestImportPath.test_importmode_importlib",
      "file": "testing/test_pathlib.py",
      "line": 297
    },
    {
      "id": "testing/test_pathlib.py:TestImportPath.test_remembers_previous_imports",
      "type": "function",
      "name": "TestImportPath.test_remembers_previous_imports",
      "file": "testing/test_pathlib.py",
      "line": 309
    },
    {
      "id": "testing/test_pathlib.py:TestImportPath.test_no_meta_path_found",
      "type": "function",
      "name": "TestImportPath.test_no_meta_path_found",
      "file": "testing/test_pathlib.py",
      "line": 317
    },
    {
      "id": "testing/test_pathlib.py:test_resolve_package_path",
      "type": "function",
      "name": "test_resolve_package_path",
      "file": "testing/test_pathlib.py",
      "line": 338
    },
    {
      "id": "testing/test_pathlib.py:test_package_unimportable",
      "type": "function",
      "name": "test_package_unimportable",
      "file": "testing/test_pathlib.py",
      "line": 348
    },
    {
      "id": "testing/test_pathlib.py:test_access_denied_during_cleanup",
      "type": "function",
      "name": "test_access_denied_during_cleanup",
      "file": "testing/test_pathlib.py",
      "line": 362
    },
    {
      "id": "testing/test_pathlib.py:test_access_denied_during_cleanup.renamed_failed",
      "type": "function",
      "name": "test_access_denied_during_cleanup.renamed_failed",
      "file": "testing/test_pathlib.py",
      "line": 367
    },
    {
      "id": "testing/test_pathlib.py:test_long_path_during_cleanup",
      "type": "function",
      "name": "test_long_path_during_cleanup",
      "file": "testing/test_pathlib.py",
      "line": 377
    },
    {
      "id": "testing/test_pathlib.py:test_get_extended_length_path_str",
      "type": "function",
      "name": "test_get_extended_length_path_str",
      "file": "testing/test_pathlib.py",
      "line": 393
    },
    {
      "id": "testing/test_pathlib.py:test_suppress_error_removing_lock",
      "type": "function",
      "name": "test_suppress_error_removing_lock",
      "file": "testing/test_pathlib.py",
      "line": 400
    },
    {
      "id": "testing/test_pathlib.py:test_bestrelpath",
      "type": "function",
      "name": "test_bestrelpath",
      "file": "testing/test_pathlib.py",
      "line": 427
    },
    {
      "id": "testing/test_pathlib.py:test_commonpath",
      "type": "function",
      "name": "test_commonpath",
      "file": "testing/test_pathlib.py",
      "line": 436
    },
    {
      "id": "testing/test_pathlib.py:test_visit_ignores_errors",
      "type": "function",
      "name": "test_visit_ignores_errors",
      "file": "testing/test_pathlib.py",
      "line": 445
    },
    {
      "id": "testing/test_pathlib.py:test_samefile_false_negatives",
      "type": "function",
      "name": "test_samefile_false_negatives",
      "file": "testing/test_pathlib.py",
      "line": 456
    },
    {
      "id": "testing/test_pathlib.py:TestImportLibMode",
      "type": "class",
      "name": "TestImportLibMode",
      "file": "testing/test_pathlib.py",
      "line": 475
    },
    {
      "id": "testing/test_pathlib.py:TestImportLibMode.test_importmode_importlib_with_dataclass",
      "type": "function",
      "name": "TestImportLibMode.test_importmode_importlib_with_dataclass",
      "file": "testing/test_pathlib.py",
      "line": 476
    },
    {
      "id": "testing/test_pathlib.py:TestImportLibMode.test_importmode_importlib_with_pickle",
      "type": "function",
      "name": "TestImportLibMode.test_importmode_importlib_with_pickle",
      "file": "testing/test_pathlib.py",
      "line": 499
    },
    {
      "id": "testing/test_pathlib.py:TestImportLibMode.test_importmode_importlib_with_pickle_separate_modules",
      "type": "function",
      "name": "TestImportLibMode.test_importmode_importlib_with_pickle_separate_modules",
      "file": "testing/test_pathlib.py",
      "line": 524
    },
    {
      "id": "testing/test_pathlib.py:TestImportLibMode.test_importmode_importlib_with_pickle_separate_modules.round_trip",
      "type": "function",
      "name": "TestImportLibMode.test_importmode_importlib_with_pickle_separate_modules.round_trip",
      "file": "testing/test_pathlib.py",
      "line": 565
    },
    {
      "id": "testing/test_pathlib.py:TestImportLibMode.test_module_name_from_path",
      "type": "function",
      "name": "TestImportLibMode.test_module_name_from_path",
      "file": "testing/test_pathlib.py",
      "line": 580
    },
    {
      "id": "testing/test_pathlib.py:TestImportLibMode.test_insert_missing_modules",
      "type": "function",
      "name": "TestImportLibMode.test_insert_missing_modules",
      "file": "testing/test_pathlib.py",
      "line": 588
    },
    {
      "id": "testing/test_pathlib.py:TestImportLibMode.test_parent_contains_child_module_attribute",
      "type": "function",
      "name": "TestImportLibMode.test_parent_contains_child_module_attribute",
      "file": "testing/test_pathlib.py",
      "line": 607
    },
    {
      "id": "testing/test_nose.py",
      "type": "file",
      "name": "test_nose.py",
      "file": "testing/test_nose.py",
      "line": 0
    },
    {
      "id": "testing/test_nose.py:setup_module",
      "type": "function",
      "name": "setup_module",
      "file": "testing/test_nose.py",
      "line": 5
    },
    {
      "id": "testing/test_nose.py:test_nose_setup",
      "type": "function",
      "name": "test_nose_setup",
      "file": "testing/test_nose.py",
      "line": 9
    },
    {
      "id": "testing/test_nose.py:test_setup_func_with_setup_decorator",
      "type": "function",
      "name": "test_setup_func_with_setup_decorator",
      "file": "testing/test_nose.py",
      "line": 32
    },
    {
      "id": "testing/test_nose.py:test_setup_func_with_setup_decorator.A",
      "type": "class",
      "name": "test_setup_func_with_setup_decorator.A",
      "file": "testing/test_nose.py",
      "line": 37
    },
    {
      "id": "testing/test_nose.py:test_setup_func_with_setup_decorator.A.f",
      "type": "function",
      "name": "test_setup_func_with_setup_decorator.A.f",
      "file": "testing/test_nose.py",
      "line": 39
    },
    {
      "id": "testing/test_nose.py:test_setup_func_not_callable",
      "type": "function",
      "name": "test_setup_func_not_callable",
      "file": "testing/test_nose.py",
      "line": 46
    },
    {
      "id": "testing/test_nose.py:test_setup_func_not_callable.A",
      "type": "class",
      "name": "test_setup_func_not_callable.A",
      "file": "testing/test_nose.py",
      "line": 49
    },
    {
      "id": "testing/test_nose.py:test_nose_setup_func",
      "type": "function",
      "name": "test_nose_setup_func",
      "file": "testing/test_nose.py",
      "line": 55
    },
    {
      "id": "testing/test_nose.py:test_nose_setup_func_failure",
      "type": "function",
      "name": "test_nose_setup_func_failure",
      "file": "testing/test_nose.py",
      "line": 87
    },
    {
      "id": "testing/test_nose.py:test_nose_setup_func_failure_2",
      "type": "function",
      "name": "test_nose_setup_func_failure_2",
      "file": "testing/test_nose.py",
      "line": 113
    },
    {
      "id": "testing/test_nose.py:test_nose_setup_partial",
      "type": "function",
      "name": "test_nose_setup_partial",
      "file": "testing/test_nose.py",
      "line": 132
    },
    {
      "id": "testing/test_nose.py:test_module_level_setup",
      "type": "function",
      "name": "test_module_level_setup",
      "file": "testing/test_nose.py",
      "line": 169
    },
    {
      "id": "testing/test_nose.py:test_nose_style_setup_teardown",
      "type": "function",
      "name": "test_nose_style_setup_teardown",
      "file": "testing/test_nose.py",
      "line": 210
    },
    {
      "id": "testing/test_nose.py:test_fixtures_nose_setup_issue8394",
      "type": "function",
      "name": "test_fixtures_nose_setup_issue8394",
      "file": "testing/test_nose.py",
      "line": 232
    },
    {
      "id": "testing/test_nose.py:test_nose_setup_ordering",
      "type": "function",
      "name": "test_nose_setup_ordering",
      "file": "testing/test_nose.py",
      "line": 276
    },
    {
      "id": "testing/test_nose.py:test_apiwrapper_problem_issue260",
      "type": "function",
      "name": "test_apiwrapper_problem_issue260",
      "file": "testing/test_nose.py",
      "line": 295
    },
    {
      "id": "testing/test_nose.py:test_setup_teardown_linking_issue265",
      "type": "function",
      "name": "test_setup_teardown_linking_issue265",
      "file": "testing/test_nose.py",
      "line": 320
    },
    {
      "id": "testing/test_nose.py:test_SkipTest_during_collection",
      "type": "function",
      "name": "test_SkipTest_during_collection",
      "file": "testing/test_nose.py",
      "line": 348
    },
    {
      "id": "testing/test_nose.py:test_SkipTest_in_test",
      "type": "function",
      "name": "test_SkipTest_in_test",
      "file": "testing/test_nose.py",
      "line": 361
    },
    {
      "id": "testing/test_nose.py:test_istest_function_decorator",
      "type": "function",
      "name": "test_istest_function_decorator",
      "file": "testing/test_nose.py",
      "line": 374
    },
    {
      "id": "testing/test_nose.py:test_nottest_function_decorator",
      "type": "function",
      "name": "test_nottest_function_decorator",
      "file": "testing/test_nose.py",
      "line": 387
    },
    {
      "id": "testing/test_nose.py:test_istest_class_decorator",
      "type": "function",
      "name": "test_istest_class_decorator",
      "file": "testing/test_nose.py",
      "line": 402
    },
    {
      "id": "testing/test_nose.py:test_nottest_class_decorator",
      "type": "function",
      "name": "test_nottest_class_decorator",
      "file": "testing/test_nose.py",
      "line": 416
    },
    {
      "id": "testing/test_nose.py:test_skip_test_with_unicode",
      "type": "function",
      "name": "test_skip_test_with_unicode",
      "file": "testing/test_nose.py",
      "line": 432
    },
    {
      "id": "testing/test_nose.py:test_raises",
      "type": "function",
      "name": "test_raises",
      "file": "testing/test_nose.py",
      "line": 445
    },
    {
      "id": "testing/test_nose.py:test_nose_setup_skipped_if_non_callable",
      "type": "function",
      "name": "test_nose_setup_skipped_if_non_callable",
      "file": "testing/test_nose.py",
      "line": 492
    },
    {
      "id": "testing/test_nose.py:test_teardown_fixture_not_called_directly",
      "type": "function",
      "name": "test_teardown_fixture_not_called_directly",
      "file": "testing/test_nose.py",
      "line": 512
    },
    {
      "id": "testing/freeze",
      "type": "directory",
      "name": "freeze",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/freeze/create_executable.py",
      "type": "file",
      "name": "create_executable.py",
      "file": "testing/freeze/create_executable.py",
      "line": 0
    },
    {
      "id": "testing/freeze/tox_run.py",
      "type": "file",
      "name": "tox_run.py",
      "file": "testing/freeze/tox_run.py",
      "line": 0
    },
    {
      "id": "testing/freeze/runtests_script.py",
      "type": "file",
      "name": "runtests_script.py",
      "file": "testing/freeze/runtests_script.py",
      "line": 0
    },
    {
      "id": "testing/freeze/tests",
      "type": "directory",
      "name": "tests",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/freeze/tests/test_trivial.py",
      "type": "file",
      "name": "test_trivial.py",
      "file": "testing/freeze/tests/test_trivial.py",
      "line": 0
    },
    {
      "id": "testing/freeze/tests/test_trivial.py:test_upper",
      "type": "function",
      "name": "test_upper",
      "file": "testing/freeze/tests/test_trivial.py",
      "line": 1
    },
    {
      "id": "testing/freeze/tests/test_trivial.py:test_lower",
      "type": "function",
      "name": "test_lower",
      "file": "testing/freeze/tests/test_trivial.py",
      "line": 5
    },
    {
      "id": "testing/python",
      "type": "directory",
      "name": "python",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/python/approx.py",
      "type": "file",
      "name": "approx.py",
      "file": "testing/python/approx.py",
      "line": 0
    },
    {
      "id": "testing/python/approx.py:mocked_doctest_runner",
      "type": "function",
      "name": "mocked_doctest_runner",
      "file": "testing/python/approx.py",
      "line": 19
    },
    {
      "id": "testing/python/approx.py:mocked_doctest_runner.MockedPdb",
      "type": "class",
      "name": "mocked_doctest_runner.MockedPdb",
      "file": "testing/python/approx.py",
      "line": 22
    },
    {
      "id": "testing/python/approx.py:mocked_doctest_runner.MockedPdb.set_trace",
      "type": "function",
      "name": "mocked_doctest_runner.MockedPdb.set_trace",
      "file": "testing/python/approx.py",
      "line": 26
    },
    {
      "id": "testing/python/approx.py:mocked_doctest_runner.MockedPdb.reset",
      "type": "function",
      "name": "mocked_doctest_runner.MockedPdb.reset",
      "file": "testing/python/approx.py",
      "line": 29
    },
    {
      "id": "testing/python/approx.py:mocked_doctest_runner.MockedPdb.set_continue",
      "type": "function",
      "name": "mocked_doctest_runner.MockedPdb.set_continue",
      "file": "testing/python/approx.py",
      "line": 32
    },
    {
      "id": "testing/python/approx.py:mocked_doctest_runner.MyDocTestRunner",
      "type": "class",
      "name": "mocked_doctest_runner.MyDocTestRunner",
      "file": "testing/python/approx.py",
      "line": 37
    },
    {
      "id": "testing/python/approx.py:mocked_doctest_runner.MyDocTestRunner.report_failure",
      "type": "function",
      "name": "mocked_doctest_runner.MyDocTestRunner.report_failure",
      "file": "testing/python/approx.py",
      "line": 38
    },
    {
      "id": "testing/python/approx.py:temporary_verbosity",
      "type": "function",
      "name": "temporary_verbosity",
      "file": "testing/python/approx.py",
      "line": 49
    },
    {
      "id": "testing/python/approx.py:assert_approx_raises_regex",
      "type": "function",
      "name": "assert_approx_raises_regex",
      "file": "testing/python/approx.py",
      "line": 59
    },
    {
      "id": "testing/python/approx.py:assert_approx_raises_regex.do_assert",
      "type": "function",
      "name": "assert_approx_raises_regex.do_assert",
      "file": "testing/python/approx.py",
      "line": 60
    },
    {
      "id": "testing/python/approx.py:TestApprox",
      "type": "class",
      "name": "TestApprox",
      "file": "testing/python/approx.py",
      "line": 96
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_error_messages_native_dtypes",
      "type": "function",
      "name": "TestApprox.test_error_messages_native_dtypes",
      "file": "testing/python/approx.py",
      "line": 97
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_error_messages_numpy_dtypes",
      "type": "function",
      "name": "TestApprox.test_error_messages_numpy_dtypes",
      "file": "testing/python/approx.py",
      "line": 163
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_error_messages_invalid_args",
      "type": "function",
      "name": "TestApprox.test_error_messages_invalid_args",
      "file": "testing/python/approx.py",
      "line": 218
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_error_messages_with_different_verbosity",
      "type": "function",
      "name": "TestApprox.test_error_messages_with_different_verbosity",
      "file": "testing/python/approx.py",
      "line": 242
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_repr_string",
      "type": "function",
      "name": "TestApprox.test_repr_string",
      "file": "testing/python/approx.py",
      "line": 292
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_repr_complex_numbers",
      "type": "function",
      "name": "TestApprox.test_repr_complex_numbers",
      "file": "testing/python/approx.py",
      "line": 306
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_repr_nd_array",
      "type": "function",
      "name": "TestApprox.test_repr_nd_array",
      "file": "testing/python/approx.py",
      "line": 331
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_bool",
      "type": "function",
      "name": "TestApprox.test_bool",
      "file": "testing/python/approx.py",
      "line": 337
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_operator_overloading",
      "type": "function",
      "name": "TestApprox.test_operator_overloading",
      "file": "testing/python/approx.py",
      "line": 343
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_exactly_equal",
      "type": "function",
      "name": "TestApprox.test_exactly_equal",
      "file": "testing/python/approx.py",
      "line": 349
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_opposite_sign",
      "type": "function",
      "name": "TestApprox.test_opposite_sign",
      "file": "testing/python/approx.py",
      "line": 363
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_zero_tolerance",
      "type": "function",
      "name": "TestApprox.test_zero_tolerance",
      "file": "testing/python/approx.py",
      "line": 368
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_negative_tolerance",
      "type": "function",
      "name": "TestApprox.test_negative_tolerance",
      "file": "testing/python/approx.py",
      "line": 388
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_negative_tolerance_message",
      "type": "function",
      "name": "TestApprox.test_negative_tolerance_message",
      "file": "testing/python/approx.py",
      "line": 395
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_inf_tolerance",
      "type": "function",
      "name": "TestApprox.test_inf_tolerance",
      "file": "testing/python/approx.py",
      "line": 402
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_inf_tolerance_expecting_zero",
      "type": "function",
      "name": "TestApprox.test_inf_tolerance_expecting_zero",
      "file": "testing/python/approx.py",
      "line": 411
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_nan_tolerance",
      "type": "function",
      "name": "TestApprox.test_nan_tolerance",
      "file": "testing/python/approx.py",
      "line": 419
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_reasonable_defaults",
      "type": "function",
      "name": "TestApprox.test_reasonable_defaults",
      "file": "testing/python/approx.py",
      "line": 427
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_default_tolerances",
      "type": "function",
      "name": "TestApprox.test_default_tolerances",
      "file": "testing/python/approx.py",
      "line": 432
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_custom_tolerances",
      "type": "function",
      "name": "TestApprox.test_custom_tolerances",
      "file": "testing/python/approx.py",
      "line": 451
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_relative_tolerance",
      "type": "function",
      "name": "TestApprox.test_relative_tolerance",
      "file": "testing/python/approx.py",
      "line": 467
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_absolute_tolerance",
      "type": "function",
      "name": "TestApprox.test_absolute_tolerance",
      "file": "testing/python/approx.py",
      "line": 473
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_expecting_zero",
      "type": "function",
      "name": "TestApprox.test_expecting_zero",
      "file": "testing/python/approx.py",
      "line": 479
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_expecting_inf",
      "type": "function",
      "name": "TestApprox.test_expecting_inf",
      "file": "testing/python/approx.py",
      "line": 494
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_expecting_nan",
      "type": "function",
      "name": "TestApprox.test_expecting_nan",
      "file": "testing/python/approx.py",
      "line": 505
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_int",
      "type": "function",
      "name": "TestApprox.test_int",
      "file": "testing/python/approx.py",
      "line": 520
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_decimal",
      "type": "function",
      "name": "TestApprox.test_decimal",
      "file": "testing/python/approx.py",
      "line": 528
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_fraction",
      "type": "function",
      "name": "TestApprox.test_fraction",
      "file": "testing/python/approx.py",
      "line": 540
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_complex",
      "type": "function",
      "name": "TestApprox.test_complex",
      "file": "testing/python/approx.py",
      "line": 551
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_list",
      "type": "function",
      "name": "TestApprox.test_list",
      "file": "testing/python/approx.py",
      "line": 564
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_list_decimal",
      "type": "function",
      "name": "TestApprox.test_list_decimal",
      "file": "testing/python/approx.py",
      "line": 574
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_list_wrong_len",
      "type": "function",
      "name": "TestApprox.test_list_wrong_len",
      "file": "testing/python/approx.py",
      "line": 580
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_tuple",
      "type": "function",
      "name": "TestApprox.test_tuple",
      "file": "testing/python/approx.py",
      "line": 584
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_tuple_wrong_len",
      "type": "function",
      "name": "TestApprox.test_tuple_wrong_len",
      "file": "testing/python/approx.py",
      "line": 594
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_tuple_vs_other",
      "type": "function",
      "name": "TestApprox.test_tuple_vs_other",
      "file": "testing/python/approx.py",
      "line": 598
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_dict",
      "type": "function",
      "name": "TestApprox.test_dict",
      "file": "testing/python/approx.py",
      "line": 601
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_dict_decimal",
      "type": "function",
      "name": "TestApprox.test_dict_decimal",
      "file": "testing/python/approx.py",
      "line": 613
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_dict_wrong_len",
      "type": "function",
      "name": "TestApprox.test_dict_wrong_len",
      "file": "testing/python/approx.py",
      "line": 621
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_dict_nonnumeric",
      "type": "function",
      "name": "TestApprox.test_dict_nonnumeric",
      "file": "testing/python/approx.py",
      "line": 626
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_dict_vs_other",
      "type": "function",
      "name": "TestApprox.test_dict_vs_other",
      "file": "testing/python/approx.py",
      "line": 630
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_dict_for_div_by_zero",
      "type": "function",
      "name": "TestApprox.test_dict_for_div_by_zero",
      "file": "testing/python/approx.py",
      "line": 633
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_numpy_array",
      "type": "function",
      "name": "TestApprox.test_numpy_array",
      "file": "testing/python/approx.py",
      "line": 646
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_numpy_tolerance_args",
      "type": "function",
      "name": "TestApprox.test_numpy_tolerance_args",
      "file": "testing/python/approx.py",
      "line": 664
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_numpy_expecting_nan",
      "type": "function",
      "name": "TestApprox.test_numpy_expecting_nan",
      "file": "testing/python/approx.py",
      "line": 694
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_numpy_expecting_inf",
      "type": "function",
      "name": "TestApprox.test_numpy_expecting_inf",
      "file": "testing/python/approx.py",
      "line": 712
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_numpy_array_wrong_shape",
      "type": "function",
      "name": "TestApprox.test_numpy_array_wrong_shape",
      "file": "testing/python/approx.py",
      "line": 726
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_numpy_array_protocol",
      "type": "function",
      "name": "TestApprox.test_numpy_array_protocol",
      "file": "testing/python/approx.py",
      "line": 735
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_numpy_array_protocol.DeviceArray",
      "type": "class",
      "name": "TestApprox.test_numpy_array_protocol.DeviceArray",
      "file": "testing/python/approx.py",
      "line": 742
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_numpy_array_protocol.DeviceArray.__array__",
      "type": "function",
      "name": "TestApprox.test_numpy_array_protocol.DeviceArray.__array__",
      "file": "testing/python/approx.py",
      "line": 747
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_numpy_array_protocol.DeviceScalar",
      "type": "class",
      "name": "TestApprox.test_numpy_array_protocol.DeviceScalar",
      "file": "testing/python/approx.py",
      "line": 750
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_numpy_array_protocol.DeviceScalar.__array__",
      "type": "function",
      "name": "TestApprox.test_numpy_array_protocol.DeviceScalar.__array__",
      "file": "testing/python/approx.py",
      "line": 754
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_doctests",
      "type": "function",
      "name": "TestApprox.test_doctests",
      "file": "testing/python/approx.py",
      "line": 765
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_unicode_plus_minus",
      "type": "function",
      "name": "TestApprox.test_unicode_plus_minus",
      "file": "testing/python/approx.py",
      "line": 775
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_expected_value_type_error",
      "type": "function",
      "name": "TestApprox.test_expected_value_type_error",
      "file": "testing/python/approx.py",
      "line": 800
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_nonnumeric_okay_if_equal",
      "type": "function",
      "name": "TestApprox.test_nonnumeric_okay_if_equal",
      "file": "testing/python/approx.py",
      "line": 816
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_nonnumeric_false_if_unequal",
      "type": "function",
      "name": "TestApprox.test_nonnumeric_false_if_unequal",
      "file": "testing/python/approx.py",
      "line": 827
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_nonnumeric_dict_repr",
      "type": "function",
      "name": "TestApprox.test_nonnumeric_dict_repr",
      "file": "testing/python/approx.py",
      "line": 841
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_nonnumeric_list_repr",
      "type": "function",
      "name": "TestApprox.test_nonnumeric_list_repr",
      "file": "testing/python/approx.py",
      "line": 849
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_comparison_operator_type_error",
      "type": "function",
      "name": "TestApprox.test_comparison_operator_type_error",
      "file": "testing/python/approx.py",
      "line": 863
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_numpy_array_with_scalar",
      "type": "function",
      "name": "TestApprox.test_numpy_array_with_scalar",
      "file": "testing/python/approx.py",
      "line": 868
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_numpy_scalar_with_array",
      "type": "function",
      "name": "TestApprox.test_numpy_scalar_with_array",
      "file": "testing/python/approx.py",
      "line": 879
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_generic_ordered_sequence",
      "type": "function",
      "name": "TestApprox.test_generic_ordered_sequence",
      "file": "testing/python/approx.py",
      "line": 890
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_generic_ordered_sequence.MySequence",
      "type": "class",
      "name": "TestApprox.test_generic_ordered_sequence.MySequence",
      "file": "testing/python/approx.py",
      "line": 891
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_generic_ordered_sequence.MySequence.__getitem__",
      "type": "function",
      "name": "TestApprox.test_generic_ordered_sequence.MySequence.__getitem__",
      "file": "testing/python/approx.py",
      "line": 892
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_generic_ordered_sequence.MySequence.__len__",
      "type": "function",
      "name": "TestApprox.test_generic_ordered_sequence.MySequence.__len__",
      "file": "testing/python/approx.py",
      "line": 895
    },
    {
      "id": "testing/python/approx.py:TestApprox.test_allow_ordered_sequences_only",
      "type": "function",
      "name": "TestApprox.test_allow_ordered_sequences_only",
      "file": "testing/python/approx.py",
      "line": 904
    },
    {
      "id": "testing/python/approx.py:TestRecursiveSequenceMap",
      "type": "class",
      "name": "TestRecursiveSequenceMap",
      "file": "testing/python/approx.py",
      "line": 910
    },
    {
      "id": "testing/python/approx.py:TestRecursiveSequenceMap.test_map_over_scalar",
      "type": "function",
      "name": "TestRecursiveSequenceMap.test_map_over_scalar",
      "file": "testing/python/approx.py",
      "line": 911
    },
    {
      "id": "testing/python/approx.py:TestRecursiveSequenceMap.test_map_over_empty_list",
      "type": "function",
      "name": "TestRecursiveSequenceMap.test_map_over_empty_list",
      "file": "testing/python/approx.py",
      "line": 914
    },
    {
      "id": "testing/python/approx.py:TestRecursiveSequenceMap.test_map_over_list",
      "type": "function",
      "name": "TestRecursiveSequenceMap.test_map_over_list",
      "file": "testing/python/approx.py",
      "line": 917
    },
    {
      "id": "testing/python/approx.py:TestRecursiveSequenceMap.test_map_over_tuple",
      "type": "function",
      "name": "TestRecursiveSequenceMap.test_map_over_tuple",
      "file": "testing/python/approx.py",
      "line": 920
    },
    {
      "id": "testing/python/approx.py:TestRecursiveSequenceMap.test_map_over_nested_lists",
      "type": "function",
      "name": "TestRecursiveSequenceMap.test_map_over_nested_lists",
      "file": "testing/python/approx.py",
      "line": 923
    },
    {
      "id": "testing/python/approx.py:TestRecursiveSequenceMap.test_map_over_mixed_sequence",
      "type": "function",
      "name": "TestRecursiveSequenceMap.test_map_over_mixed_sequence",
      "file": "testing/python/approx.py",
      "line": 930
    },
    {
      "id": "testing/python/show_fixtures_per_test.py",
      "type": "file",
      "name": "show_fixtures_per_test.py",
      "file": "testing/python/show_fixtures_per_test.py",
      "line": 0
    },
    {
      "id": "testing/python/show_fixtures_per_test.py:test_no_items_should_not_show_output",
      "type": "function",
      "name": "test_no_items_should_not_show_output",
      "file": "testing/python/show_fixtures_per_test.py",
      "line": 4
    },
    {
      "id": "testing/python/show_fixtures_per_test.py:test_fixtures_in_module",
      "type": "function",
      "name": "test_fixtures_in_module",
      "file": "testing/python/show_fixtures_per_test.py",
      "line": 10
    },
    {
      "id": "testing/python/show_fixtures_per_test.py:test_fixtures_in_conftest",
      "type": "function",
      "name": "test_fixtures_in_conftest",
      "file": "testing/python/show_fixtures_per_test.py",
      "line": 39
    },
    {
      "id": "testing/python/show_fixtures_per_test.py:test_should_show_fixtures_used_by_test",
      "type": "function",
      "name": "test_should_show_fixtures_used_by_test",
      "file": "testing/python/show_fixtures_per_test.py",
      "line": 85
    },
    {
      "id": "testing/python/show_fixtures_per_test.py:test_verbose_include_private_fixtures_and_loc",
      "type": "function",
      "name": "test_verbose_include_private_fixtures_and_loc",
      "file": "testing/python/show_fixtures_per_test.py",
      "line": 122
    },
    {
      "id": "testing/python/show_fixtures_per_test.py:test_doctest_items",
      "type": "function",
      "name": "test_doctest_items",
      "file": "testing/python/show_fixtures_per_test.py",
      "line": 161
    },
    {
      "id": "testing/python/show_fixtures_per_test.py:test_multiline_docstring_in_module",
      "type": "function",
      "name": "test_multiline_docstring_in_module",
      "file": "testing/python/show_fixtures_per_test.py",
      "line": 185
    },
    {
      "id": "testing/python/show_fixtures_per_test.py:test_verbose_include_multiline_docstring",
      "type": "function",
      "name": "test_verbose_include_multiline_docstring",
      "file": "testing/python/show_fixtures_per_test.py",
      "line": 219
    },
    {
      "id": "testing/python/collect.py",
      "type": "file",
      "name": "collect.py",
      "file": "testing/python/collect.py",
      "line": 0
    },
    {
      "id": "testing/python/collect.py:TestModule",
      "type": "class",
      "name": "TestModule",
      "file": "testing/python/collect.py",
      "line": 18
    },
    {
      "id": "testing/python/collect.py:TestModule.test_failing_import",
      "type": "function",
      "name": "TestModule.test_failing_import",
      "file": "testing/python/collect.py",
      "line": 19
    },
    {
      "id": "testing/python/collect.py:TestModule.test_import_duplicate",
      "type": "function",
      "name": "TestModule.test_import_duplicate",
      "file": "testing/python/collect.py",
      "line": 23
    },
    {
      "id": "testing/python/collect.py:TestModule.test_import_prepend_append",
      "type": "function",
      "name": "TestModule.test_import_prepend_append",
      "file": "testing/python/collect.py",
      "line": 45
    },
    {
      "id": "testing/python/collect.py:TestModule.test_syntax_error_in_module",
      "type": "function",
      "name": "TestModule.test_syntax_error_in_module",
      "file": "testing/python/collect.py",
      "line": 73
    },
    {
      "id": "testing/python/collect.py:TestModule.test_module_considers_pluginmanager_at_import",
      "type": "function",
      "name": "TestModule.test_module_considers_pluginmanager_at_import",
      "file": "testing/python/collect.py",
      "line": 78
    },
    {
      "id": "testing/python/collect.py:TestModule.test_invalid_test_module_name",
      "type": "function",
      "name": "TestModule.test_invalid_test_module_name",
      "file": "testing/python/collect.py",
      "line": 82
    },
    {
      "id": "testing/python/collect.py:TestModule.test_show_traceback_import_error",
      "type": "function",
      "name": "TestModule.test_show_traceback_import_error",
      "file": "testing/python/collect.py",
      "line": 94
    },
    {
      "id": "testing/python/collect.py:TestModule.test_show_traceback_import_error_unicode",
      "type": "function",
      "name": "TestModule.test_show_traceback_import_error_unicode",
      "file": "testing/python/collect.py",
      "line": 130
    },
    {
      "id": "testing/python/collect.py:TestClass",
      "type": "class",
      "name": "TestClass",
      "file": "testing/python/collect.py",
      "line": 146
    },
    {
      "id": "testing/python/collect.py:TestClass.test_class_with_init_warning",
      "type": "function",
      "name": "TestClass.test_class_with_init_warning",
      "file": "testing/python/collect.py",
      "line": 147
    },
    {
      "id": "testing/python/collect.py:TestClass.test_class_with_new_warning",
      "type": "function",
      "name": "TestClass.test_class_with_new_warning",
      "file": "testing/python/collect.py",
      "line": 163
    },
    {
      "id": "testing/python/collect.py:TestClass.test_class_subclassobject",
      "type": "function",
      "name": "TestClass.test_class_subclassobject",
      "file": "testing/python/collect.py",
      "line": 179
    },
    {
      "id": "testing/python/collect.py:TestClass.test_static_method",
      "type": "function",
      "name": "TestClass.test_static_method",
      "file": "testing/python/collect.py",
      "line": 189
    },
    {
      "id": "testing/python/collect.py:TestClass.test_setup_teardown_class_as_classmethod",
      "type": "function",
      "name": "TestClass.test_setup_teardown_class_as_classmethod",
      "file": "testing/python/collect.py",
      "line": 211
    },
    {
      "id": "testing/python/collect.py:TestClass.test_issue1035_obj_has_getattr",
      "type": "function",
      "name": "TestClass.test_issue1035_obj_has_getattr",
      "file": "testing/python/collect.py",
      "line": 228
    },
    {
      "id": "testing/python/collect.py:TestClass.test_issue1579_namedtuple",
      "type": "function",
      "name": "TestClass.test_issue1579_namedtuple",
      "file": "testing/python/collect.py",
      "line": 240
    },
    {
      "id": "testing/python/collect.py:TestClass.test_issue2234_property",
      "type": "function",
      "name": "TestClass.test_issue2234_property",
      "file": "testing/python/collect.py",
      "line": 254
    },
    {
      "id": "testing/python/collect.py:TestFunction",
      "type": "class",
      "name": "TestFunction",
      "file": "testing/python/collect.py",
      "line": 267
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_getmodulecollector",
      "type": "function",
      "name": "TestFunction.test_getmodulecollector",
      "file": "testing/python/collect.py",
      "line": 268
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_function_as_object_instance_ignored",
      "type": "function",
      "name": "TestFunction.test_function_as_object_instance_ignored",
      "file": "testing/python/collect.py",
      "line": 275
    },
    {
      "id": "testing/python/collect.py:TestFunction.make_function",
      "type": "function",
      "name": "TestFunction.make_function",
      "file": "testing/python/collect.py",
      "line": 295
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_function_equality",
      "type": "function",
      "name": "TestFunction.test_function_equality",
      "file": "testing/python/collect.py",
      "line": 304
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_function_equality.func1",
      "type": "function",
      "name": "TestFunction.test_function_equality.func1",
      "file": "testing/python/collect.py",
      "line": 305
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_function_equality.func2",
      "type": "function",
      "name": "TestFunction.test_function_equality.func2",
      "file": "testing/python/collect.py",
      "line": 308
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_repr_produces_actual_test_id",
      "type": "function",
      "name": "TestFunction.test_repr_produces_actual_test_id",
      "file": "testing/python/collect.py",
      "line": 318
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_issue197_parametrize_emptyset",
      "type": "function",
      "name": "TestFunction.test_issue197_parametrize_emptyset",
      "file": "testing/python/collect.py",
      "line": 324
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_single_tuple_unwraps_values",
      "type": "function",
      "name": "TestFunction.test_single_tuple_unwraps_values",
      "file": "testing/python/collect.py",
      "line": 336
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_issue213_parametrize_value_no_equal",
      "type": "function",
      "name": "TestFunction.test_issue213_parametrize_value_no_equal",
      "file": "testing/python/collect.py",
      "line": 348
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_parametrize_with_non_hashable_values",
      "type": "function",
      "name": "TestFunction.test_parametrize_with_non_hashable_values",
      "file": "testing/python/collect.py",
      "line": 363
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_parametrize_with_non_hashable_values_indirect",
      "type": "function",
      "name": "TestFunction.test_parametrize_with_non_hashable_values_indirect",
      "file": "testing/python/collect.py",
      "line": 383
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_parametrize_overrides_fixture",
      "type": "function",
      "name": "TestFunction.test_parametrize_overrides_fixture",
      "file": "testing/python/collect.py",
      "line": 414
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_parametrize_overrides_parametrized_fixture",
      "type": "function",
      "name": "TestFunction.test_parametrize_overrides_parametrized_fixture",
      "file": "testing/python/collect.py",
      "line": 443
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_parametrize_overrides_indirect_dependency_fixture",
      "type": "function",
      "name": "TestFunction.test_parametrize_overrides_indirect_dependency_fixture",
      "file": "testing/python/collect.py",
      "line": 464
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_parametrize_with_mark",
      "type": "function",
      "name": "TestFunction.test_parametrize_with_mark",
      "file": "testing/python/collect.py",
      "line": 497
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_parametrize_with_empty_string_arguments",
      "type": "function",
      "name": "TestFunction.test_parametrize_with_empty_string_arguments",
      "file": "testing/python/collect.py",
      "line": 518
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_function_equality_with_callspec",
      "type": "function",
      "name": "TestFunction.test_function_equality_with_callspec",
      "file": "testing/python/collect.py",
      "line": 531
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_pyfunc_call",
      "type": "function",
      "name": "TestFunction.test_pyfunc_call",
      "file": "testing/python/collect.py",
      "line": 543
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_pyfunc_call.MyPlugin1",
      "type": "class",
      "name": "TestFunction.test_pyfunc_call.MyPlugin1",
      "file": "testing/python/collect.py",
      "line": 547
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_pyfunc_call.MyPlugin1.pytest_pyfunc_call",
      "type": "function",
      "name": "TestFunction.test_pyfunc_call.MyPlugin1.pytest_pyfunc_call",
      "file": "testing/python/collect.py",
      "line": 548
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_pyfunc_call.MyPlugin2",
      "type": "class",
      "name": "TestFunction.test_pyfunc_call.MyPlugin2",
      "file": "testing/python/collect.py",
      "line": 551
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_pyfunc_call.MyPlugin2.pytest_pyfunc_call",
      "type": "function",
      "name": "TestFunction.test_pyfunc_call.MyPlugin2.pytest_pyfunc_call",
      "file": "testing/python/collect.py",
      "line": 552
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_multiple_parametrize",
      "type": "function",
      "name": "TestFunction.test_multiple_parametrize",
      "file": "testing/python/collect.py",
      "line": 560
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_issue751_multiple_parametrize_with_ids",
      "type": "function",
      "name": "TestFunction.test_issue751_multiple_parametrize_with_ids",
      "file": "testing/python/collect.py",
      "line": 576
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_parametrize_skipif",
      "type": "function",
      "name": "TestFunction.test_parametrize_skipif",
      "file": "testing/python/collect.py",
      "line": 595
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_parametrize_skip",
      "type": "function",
      "name": "TestFunction.test_parametrize_skip",
      "file": "testing/python/collect.py",
      "line": 610
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_parametrize_skipif_no_skip",
      "type": "function",
      "name": "TestFunction.test_parametrize_skipif_no_skip",
      "file": "testing/python/collect.py",
      "line": 625
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_parametrize_xfail",
      "type": "function",
      "name": "TestFunction.test_parametrize_xfail",
      "file": "testing/python/collect.py",
      "line": 640
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_parametrize_passed",
      "type": "function",
      "name": "TestFunction.test_parametrize_passed",
      "file": "testing/python/collect.py",
      "line": 655
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_parametrize_xfail_passed",
      "type": "function",
      "name": "TestFunction.test_parametrize_xfail_passed",
      "file": "testing/python/collect.py",
      "line": 670
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_function_originalname",
      "type": "function",
      "name": "TestFunction.test_function_originalname",
      "file": "testing/python/collect.py",
      "line": 685
    },
    {
      "id": "testing/python/collect.py:TestFunction.test_function_with_square_brackets",
      "type": "function",
      "name": "TestFunction.test_function_with_square_brackets",
      "file": "testing/python/collect.py",
      "line": 708
    },
    {
      "id": "testing/python/collect.py:TestSorting",
      "type": "class",
      "name": "TestSorting",
      "file": "testing/python/collect.py",
      "line": 724
    },
    {
      "id": "testing/python/collect.py:TestSorting.test_check_equality",
      "type": "function",
      "name": "TestSorting.test_check_equality",
      "file": "testing/python/collect.py",
      "line": 725
    },
    {
      "id": "testing/python/collect.py:TestSorting.test_allow_sane_sorting_for_decorators",
      "type": "function",
      "name": "TestSorting.test_allow_sane_sorting_for_decorators",
      "file": "testing/python/collect.py",
      "line": 753
    },
    {
      "id": "testing/python/collect.py:TestSorting.test_ordered_by_definition_order",
      "type": "function",
      "name": "TestSorting.test_ordered_by_definition_order",
      "file": "testing/python/collect.py",
      "line": 775
    },
    {
      "id": "testing/python/collect.py:TestConftestCustomization",
      "type": "class",
      "name": "TestConftestCustomization",
      "file": "testing/python/collect.py",
      "line": 806
    },
    {
      "id": "testing/python/collect.py:TestConftestCustomization.test_pytest_pycollect_module",
      "type": "function",
      "name": "TestConftestCustomization.test_pytest_pycollect_module",
      "file": "testing/python/collect.py",
      "line": 807
    },
    {
      "id": "testing/python/collect.py:TestConftestCustomization.test_customized_pymakemodule_issue205_subdir",
      "type": "function",
      "name": "TestConftestCustomization.test_customized_pymakemodule_issue205_subdir",
      "file": "testing/python/collect.py",
      "line": 823
    },
    {
      "id": "testing/python/collect.py:TestConftestCustomization.test_customized_pymakeitem",
      "type": "function",
      "name": "TestConftestCustomization.test_customized_pymakeitem",
      "file": "testing/python/collect.py",
      "line": 851
    },
    {
      "id": "testing/python/collect.py:TestConftestCustomization.test_pytest_pycollect_makeitem",
      "type": "function",
      "name": "TestConftestCustomization.test_pytest_pycollect_makeitem",
      "file": "testing/python/collect.py",
      "line": 887
    },
    {
      "id": "testing/python/collect.py:TestConftestCustomization.test_issue2369_collect_module_fileext",
      "type": "function",
      "name": "TestConftestCustomization.test_issue2369_collect_module_fileext",
      "file": "testing/python/collect.py",
      "line": 902
    },
    {
      "id": "testing/python/collect.py:TestConftestCustomization.test_early_ignored_attributes",
      "type": "function",
      "name": "TestConftestCustomization.test_early_ignored_attributes",
      "file": "testing/python/collect.py",
      "line": 939
    },
    {
      "id": "testing/python/collect.py:test_setup_only_available_in_subdir",
      "type": "function",
      "name": "test_setup_only_available_in_subdir",
      "file": "testing/python/collect.py",
      "line": 968
    },
    {
      "id": "testing/python/collect.py:test_modulecol_roundtrip",
      "type": "function",
      "name": "test_modulecol_roundtrip",
      "file": "testing/python/collect.py",
      "line": 1005
    },
    {
      "id": "testing/python/collect.py:TestTracebackCutting",
      "type": "class",
      "name": "TestTracebackCutting",
      "file": "testing/python/collect.py",
      "line": 1012
    },
    {
      "id": "testing/python/collect.py:TestTracebackCutting.test_skip_simple",
      "type": "function",
      "name": "TestTracebackCutting.test_skip_simple",
      "file": "testing/python/collect.py",
      "line": 1013
    },
    {
      "id": "testing/python/collect.py:TestTracebackCutting.test_traceback_argsetup",
      "type": "function",
      "name": "TestTracebackCutting.test_traceback_argsetup",
      "file": "testing/python/collect.py",
      "line": 1021
    },
    {
      "id": "testing/python/collect.py:TestTracebackCutting.test_traceback_error_during_import",
      "type": "function",
      "name": "TestTracebackCutting.test_traceback_error_during_import",
      "file": "testing/python/collect.py",
      "line": 1046
    },
    {
      "id": "testing/python/collect.py:TestTracebackCutting.test_traceback_filter_error_during_fixture_collection",
      "type": "function",
      "name": "TestTracebackCutting.test_traceback_filter_error_during_fixture_collection",
      "file": "testing/python/collect.py",
      "line": 1067
    },
    {
      "id": "testing/python/collect.py:TestTracebackCutting.test_filter_traceback_generated_code",
      "type": "function",
      "name": "TestTracebackCutting.test_filter_traceback_generated_code",
      "file": "testing/python/collect.py",
      "line": 1095
    },
    {
      "id": "testing/python/collect.py:TestTracebackCutting.test_filter_traceback_path_no_longer_valid",
      "type": "function",
      "name": "TestTracebackCutting.test_filter_traceback_path_no_longer_valid",
      "file": "testing/python/collect.py",
      "line": 1119
    },
    {
      "id": "testing/python/collect.py:TestReportInfo",
      "type": "class",
      "name": "TestReportInfo",
      "file": "testing/python/collect.py",
      "line": 1150
    },
    {
      "id": "testing/python/collect.py:TestReportInfo.test_itemreport_reportinfo",
      "type": "function",
      "name": "TestReportInfo.test_itemreport_reportinfo",
      "file": "testing/python/collect.py",
      "line": 1151
    },
    {
      "id": "testing/python/collect.py:TestReportInfo.test_func_reportinfo",
      "type": "function",
      "name": "TestReportInfo.test_func_reportinfo",
      "file": "testing/python/collect.py",
      "line": 1167
    },
    {
      "id": "testing/python/collect.py:TestReportInfo.test_class_reportinfo",
      "type": "function",
      "name": "TestReportInfo.test_class_reportinfo",
      "file": "testing/python/collect.py",
      "line": 1174
    },
    {
      "id": "testing/python/collect.py:TestReportInfo.test_reportinfo_with_nasty_getattr",
      "type": "function",
      "name": "TestReportInfo.test_reportinfo_with_nasty_getattr",
      "file": "testing/python/collect.py",
      "line": 1192
    },
    {
      "id": "testing/python/collect.py:test_customized_python_discovery",
      "type": "function",
      "name": "test_customized_python_discovery",
      "file": "testing/python/collect.py",
      "line": 1219
    },
    {
      "id": "testing/python/collect.py:test_customized_python_discovery_functions",
      "type": "function",
      "name": "test_customized_python_discovery_functions",
      "file": "testing/python/collect.py",
      "line": 1249
    },
    {
      "id": "testing/python/collect.py:test_unorderable_types",
      "type": "function",
      "name": "test_unorderable_types",
      "file": "testing/python/collect.py",
      "line": 1270
    },
    {
      "id": "testing/python/collect.py:test_dont_collect_non_function_callable",
      "type": "function",
      "name": "test_dont_collect_non_function_callable",
      "file": "testing/python/collect.py",
      "line": 1290
    },
    {
      "id": "testing/python/collect.py:test_class_injection_does_not_break_collection",
      "type": "function",
      "name": "test_class_injection_does_not_break_collection",
      "file": "testing/python/collect.py",
      "line": 1318
    },
    {
      "id": "testing/python/collect.py:test_syntax_error_with_non_ascii_chars",
      "type": "function",
      "name": "test_syntax_error_with_non_ascii_chars",
      "file": "testing/python/collect.py",
      "line": 1348
    },
    {
      "id": "testing/python/collect.py:test_collect_error_with_fulltrace",
      "type": "function",
      "name": "test_collect_error_with_fulltrace",
      "file": "testing/python/collect.py",
      "line": 1355
    },
    {
      "id": "testing/python/collect.py:test_skip_duplicates_by_default",
      "type": "function",
      "name": "test_skip_duplicates_by_default",
      "file": "testing/python/collect.py",
      "line": 1374
    },
    {
      "id": "testing/python/collect.py:test_keep_duplicates",
      "type": "function",
      "name": "test_keep_duplicates",
      "file": "testing/python/collect.py",
      "line": 1395
    },
    {
      "id": "testing/python/collect.py:test_package_collection_infinite_recursion",
      "type": "function",
      "name": "test_package_collection_infinite_recursion",
      "file": "testing/python/collect.py",
      "line": 1416
    },
    {
      "id": "testing/python/collect.py:test_package_collection_init_given_as_argument",
      "type": "function",
      "name": "test_package_collection_init_given_as_argument",
      "file": "testing/python/collect.py",
      "line": 1422
    },
    {
      "id": "testing/python/collect.py:test_package_with_modules",
      "type": "function",
      "name": "test_package_with_modules",
      "file": "testing/python/collect.py",
      "line": 1434
    },
    {
      "id": "testing/python/collect.py:test_package_ordering",
      "type": "function",
      "name": "test_package_ordering",
      "file": "testing/python/collect.py",
      "line": 1481
    },
    {
      "id": "testing/python/metafunc.py",
      "type": "file",
      "name": "metafunc.py",
      "file": "testing/python/metafunc.py",
      "line": 0
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc",
      "type": "class",
      "name": "TestMetafunc",
      "file": "testing/python/metafunc.py",
      "line": 30
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.Metafunc",
      "type": "function",
      "name": "TestMetafunc.Metafunc",
      "file": "testing/python/metafunc.py",
      "line": 31
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.Metafunc.FuncFixtureInfoMock",
      "type": "class",
      "name": "TestMetafunc.Metafunc.FuncFixtureInfoMock",
      "file": "testing/python/metafunc.py",
      "line": 35
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.Metafunc.DefinitionMock",
      "type": "class",
      "name": "TestMetafunc.Metafunc.DefinitionMock",
      "file": "testing/python/metafunc.py",
      "line": 42
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_no_funcargs",
      "type": "function",
      "name": "TestMetafunc.test_no_funcargs",
      "file": "testing/python/metafunc.py",
      "line": 51
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_no_funcargs.function",
      "type": "function",
      "name": "TestMetafunc.test_no_funcargs.function",
      "file": "testing/python/metafunc.py",
      "line": 52
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_function_basic",
      "type": "function",
      "name": "TestMetafunc.test_function_basic",
      "file": "testing/python/metafunc.py",
      "line": 59
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_function_basic.func",
      "type": "function",
      "name": "TestMetafunc.test_function_basic.func",
      "file": "testing/python/metafunc.py",
      "line": 60
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_error",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_error",
      "file": "testing/python/metafunc.py",
      "line": 69
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_error.func",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_error.func",
      "file": "testing/python/metafunc.py",
      "line": 70
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_error_iterator",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_error_iterator",
      "file": "testing/python/metafunc.py",
      "line": 84
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_error_iterator.func",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_error_iterator.func",
      "file": "testing/python/metafunc.py",
      "line": 85
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_error_iterator.Exc",
      "type": "class",
      "name": "TestMetafunc.test_parametrize_error_iterator.Exc",
      "file": "testing/python/metafunc.py",
      "line": 88
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_error_iterator.Exc.__repr__",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_error_iterator.Exc.__repr__",
      "file": "testing/python/metafunc.py",
      "line": 89
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_error_iterator.gen",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_error_iterator.gen",
      "file": "testing/python/metafunc.py",
      "line": 92
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_bad_scope",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_bad_scope",
      "file": "testing/python/metafunc.py",
      "line": 114
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_bad_scope.func",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_bad_scope.func",
      "file": "testing/python/metafunc.py",
      "line": 115
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_request_name",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_request_name",
      "file": "testing/python/metafunc.py",
      "line": 125
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_request_name.func",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_request_name.func",
      "file": "testing/python/metafunc.py",
      "line": 128
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_find_parametrized_scope",
      "type": "function",
      "name": "TestMetafunc.test_find_parametrized_scope",
      "file": "testing/python/metafunc.py",
      "line": 138
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_find_parametrized_scope.DummyFixtureDef",
      "type": "class",
      "name": "TestMetafunc.test_find_parametrized_scope.DummyFixtureDef",
      "file": "testing/python/metafunc.py",
      "line": 143
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_find_parametrized_scope.find_scope",
      "type": "function",
      "name": "TestMetafunc.test_find_parametrized_scope.find_scope",
      "file": "testing/python/metafunc.py",
      "line": 159
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_and_id",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_and_id",
      "file": "testing/python/metafunc.py",
      "line": 191
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_and_id.func",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_and_id.func",
      "file": "testing/python/metafunc.py",
      "line": 192
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_and_id_unicode",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_and_id_unicode",
      "file": "testing/python/metafunc.py",
      "line": 202
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_and_id_unicode.func",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_and_id_unicode.func",
      "file": "testing/python/metafunc.py",
      "line": 205
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_with_wrong_number_of_ids",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_with_wrong_number_of_ids",
      "file": "testing/python/metafunc.py",
      "line": 213
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_with_wrong_number_of_ids.func",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_with_wrong_number_of_ids.func",
      "file": "testing/python/metafunc.py",
      "line": 214
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_ids_iterator_without_mark",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_ids_iterator_without_mark",
      "file": "testing/python/metafunc.py",
      "line": 227
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_ids_iterator_without_mark.func",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_ids_iterator_without_mark.func",
      "file": "testing/python/metafunc.py",
      "line": 228
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_empty_list",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_empty_list",
      "file": "testing/python/metafunc.py",
      "line": 245
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_empty_list.func",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_empty_list.func",
      "file": "testing/python/metafunc.py",
      "line": 248
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_empty_list.MockConfig",
      "type": "class",
      "name": "TestMetafunc.test_parametrize_empty_list.MockConfig",
      "file": "testing/python/metafunc.py",
      "line": 251
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_empty_list.MockConfig.getini",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_empty_list.MockConfig.getini",
      "file": "testing/python/metafunc.py",
      "line": 252
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_empty_list.MockConfig.hook",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_empty_list.MockConfig.hook",
      "file": "testing/python/metafunc.py",
      "line": 256
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_empty_list.MockConfig.pytest_make_parametrize_id",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_empty_list.MockConfig.pytest_make_parametrize_id",
      "file": "testing/python/metafunc.py",
      "line": 259
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_with_userobjects",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_with_userobjects",
      "file": "testing/python/metafunc.py",
      "line": 266
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_with_userobjects.func",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_with_userobjects.func",
      "file": "testing/python/metafunc.py",
      "line": 267
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_with_userobjects.A",
      "type": "class",
      "name": "TestMetafunc.test_parametrize_with_userobjects.A",
      "file": "testing/python/metafunc.py",
      "line": 272
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_idval_hypothesis",
      "type": "function",
      "name": "TestMetafunc.test_idval_hypothesis",
      "file": "testing/python/metafunc.py",
      "line": 286
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_unicode_idval",
      "type": "function",
      "name": "TestMetafunc.test_unicode_idval",
      "file": "testing/python/metafunc.py",
      "line": 291
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_unicode_idval_with_config",
      "type": "function",
      "name": "TestMetafunc.test_unicode_idval_with_config",
      "file": "testing/python/metafunc.py",
      "line": 314
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_unicode_idval_with_config.MockConfig",
      "type": "class",
      "name": "TestMetafunc.test_unicode_idval_with_config.MockConfig",
      "file": "testing/python/metafunc.py",
      "line": 319
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_unicode_idval_with_config.MockConfig.hook",
      "type": "function",
      "name": "TestMetafunc.test_unicode_idval_with_config.MockConfig.hook",
      "file": "testing/python/metafunc.py",
      "line": 324
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_unicode_idval_with_config.MockConfig.pytest_make_parametrize_id",
      "type": "function",
      "name": "TestMetafunc.test_unicode_idval_with_config.MockConfig.pytest_make_parametrize_id",
      "file": "testing/python/metafunc.py",
      "line": 327
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_unicode_idval_with_config.MockConfig.getini",
      "type": "function",
      "name": "TestMetafunc.test_unicode_idval_with_config.MockConfig.getini",
      "file": "testing/python/metafunc.py",
      "line": 330
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_bytes_idval",
      "type": "function",
      "name": "TestMetafunc.test_bytes_idval",
      "file": "testing/python/metafunc.py",
      "line": 343
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_class_or_function_idval",
      "type": "function",
      "name": "TestMetafunc.test_class_or_function_idval",
      "file": "testing/python/metafunc.py",
      "line": 358
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_class_or_function_idval.TestClass",
      "type": "class",
      "name": "TestMetafunc.test_class_or_function_idval.TestClass",
      "file": "testing/python/metafunc.py",
      "line": 362
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_class_or_function_idval.test_function",
      "type": "function",
      "name": "TestMetafunc.test_class_or_function_idval.test_function",
      "file": "testing/python/metafunc.py",
      "line": 365
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_notset_idval",
      "type": "function",
      "name": "TestMetafunc.test_notset_idval",
      "file": "testing/python/metafunc.py",
      "line": 375
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_idmaker_autoname",
      "type": "function",
      "name": "TestMetafunc.test_idmaker_autoname",
      "file": "testing/python/metafunc.py",
      "line": 385
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_bytes_regex",
      "type": "function",
      "name": "TestMetafunc.test_idmaker_with_bytes_regex",
      "file": "testing/python/metafunc.py",
      "line": 414
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_idmaker_native_strings",
      "type": "function",
      "name": "TestMetafunc.test_idmaker_native_strings",
      "file": "testing/python/metafunc.py",
      "line": 420
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_idmaker_non_printable_characters",
      "type": "function",
      "name": "TestMetafunc.test_idmaker_non_printable_characters",
      "file": "testing/python/metafunc.py",
      "line": 460
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_idmaker_manual_ids_must_be_printable",
      "type": "function",
      "name": "TestMetafunc.test_idmaker_manual_ids_must_be_printable",
      "file": "testing/python/metafunc.py",
      "line": 479
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_idmaker_enum",
      "type": "function",
      "name": "TestMetafunc.test_idmaker_enum",
      "file": "testing/python/metafunc.py",
      "line": 494
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_idmaker_idfn",
      "type": "function",
      "name": "TestMetafunc.test_idmaker_idfn",
      "file": "testing/python/metafunc.py",
      "line": 502
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_idmaker_idfn.ids",
      "type": "function",
      "name": "TestMetafunc.test_idmaker_idfn.ids",
      "file": "testing/python/metafunc.py",
      "line": 505
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_idmaker_idfn_unique_names",
      "type": "function",
      "name": "TestMetafunc.test_idmaker_idfn_unique_names",
      "file": "testing/python/metafunc.py",
      "line": 525
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_idmaker_idfn_unique_names.ids",
      "type": "function",
      "name": "TestMetafunc.test_idmaker_idfn_unique_names.ids",
      "file": "testing/python/metafunc.py",
      "line": 528
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_idfn_and_config",
      "type": "function",
      "name": "TestMetafunc.test_idmaker_with_idfn_and_config",
      "file": "testing/python/metafunc.py",
      "line": 546
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_idfn_and_config.MockConfig",
      "type": "class",
      "name": "TestMetafunc.test_idmaker_with_idfn_and_config.MockConfig",
      "file": "testing/python/metafunc.py",
      "line": 552
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_idfn_and_config.MockConfig.hook",
      "type": "function",
      "name": "TestMetafunc.test_idmaker_with_idfn_and_config.MockConfig.hook",
      "file": "testing/python/metafunc.py",
      "line": 557
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_idfn_and_config.MockConfig.pytest_make_parametrize_id",
      "type": "function",
      "name": "TestMetafunc.test_idmaker_with_idfn_and_config.MockConfig.pytest_make_parametrize_id",
      "file": "testing/python/metafunc.py",
      "line": 560
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_idfn_and_config.MockConfig.getini",
      "type": "function",
      "name": "TestMetafunc.test_idmaker_with_idfn_and_config.MockConfig.getini",
      "file": "testing/python/metafunc.py",
      "line": 563
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_ids_and_config",
      "type": "function",
      "name": "TestMetafunc.test_idmaker_with_ids_and_config",
      "file": "testing/python/metafunc.py",
      "line": 584
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_ids_and_config.MockConfig",
      "type": "class",
      "name": "TestMetafunc.test_idmaker_with_ids_and_config.MockConfig",
      "file": "testing/python/metafunc.py",
      "line": 590
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_ids_and_config.MockConfig.hook",
      "type": "function",
      "name": "TestMetafunc.test_idmaker_with_ids_and_config.MockConfig.hook",
      "file": "testing/python/metafunc.py",
      "line": 595
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_ids_and_config.MockConfig.pytest_make_parametrize_id",
      "type": "function",
      "name": "TestMetafunc.test_idmaker_with_ids_and_config.MockConfig.pytest_make_parametrize_id",
      "file": "testing/python/metafunc.py",
      "line": 598
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_ids_and_config.MockConfig.getini",
      "type": "function",
      "name": "TestMetafunc.test_idmaker_with_ids_and_config.MockConfig.getini",
      "file": "testing/python/metafunc.py",
      "line": 601
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_ids_exception",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_ids_exception",
      "file": "testing/python/metafunc.py",
      "line": 616
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_ids_returns_non_string",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_ids_returns_non_string",
      "file": "testing/python/metafunc.py",
      "line": 641
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_ids",
      "type": "function",
      "name": "TestMetafunc.test_idmaker_with_ids",
      "file": "testing/python/metafunc.py",
      "line": 669
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_paramset_id",
      "type": "function",
      "name": "TestMetafunc.test_idmaker_with_paramset_id",
      "file": "testing/python/metafunc.py",
      "line": 681
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_ids_unique_names",
      "type": "function",
      "name": "TestMetafunc.test_idmaker_with_ids_unique_names",
      "file": "testing/python/metafunc.py",
      "line": 693
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_indirect",
      "file": "testing/python/metafunc.py",
      "line": 705
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect.func",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_indirect.func",
      "file": "testing/python/metafunc.py",
      "line": 708
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_list",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_indirect_list",
      "file": "testing/python/metafunc.py",
      "line": 720
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_list.func",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_indirect_list.func",
      "file": "testing/python/metafunc.py",
      "line": 723
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_list_all",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_indirect_list_all",
      "file": "testing/python/metafunc.py",
      "line": 731
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_list_all.func",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_indirect_list_all.func",
      "file": "testing/python/metafunc.py",
      "line": 734
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_list_empty",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_indirect_list_empty",
      "file": "testing/python/metafunc.py",
      "line": 742
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_list_empty.func",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_indirect_list_empty.func",
      "file": "testing/python/metafunc.py",
      "line": 745
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_wrong_type",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_indirect_wrong_type",
      "file": "testing/python/metafunc.py",
      "line": 753
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_wrong_type.func",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_indirect_wrong_type.func",
      "file": "testing/python/metafunc.py",
      "line": 754
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_list_functional",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_indirect_list_functional",
      "file": "testing/python/metafunc.py",
      "line": 764
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_list_error",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_indirect_list_error",
      "file": "testing/python/metafunc.py",
      "line": 792
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_list_error.func",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_indirect_list_error.func",
      "file": "testing/python/metafunc.py",
      "line": 795
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_uses_no_fixture_error_indirect_false",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_uses_no_fixture_error_indirect_false",
      "file": "testing/python/metafunc.py",
      "line": 802
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_uses_no_fixture_error_indirect_true",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_uses_no_fixture_error_indirect_true",
      "file": "testing/python/metafunc.py",
      "line": 824
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_uses_no_fixture_error_indirect_string",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_indirect_uses_no_fixture_error_indirect_string",
      "file": "testing/python/metafunc.py",
      "line": 846
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_uses_no_fixture_error_indirect_list",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_indirect_uses_no_fixture_error_indirect_list",
      "file": "testing/python/metafunc.py",
      "line": 865
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_argument_not_in_indirect_list",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_argument_not_in_indirect_list",
      "file": "testing/python/metafunc.py",
      "line": 884
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_gives_indicative_error_on_function_with_default_argument",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_gives_indicative_error_on_function_with_default_argument",
      "file": "testing/python/metafunc.py",
      "line": 903
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_functional",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_functional",
      "file": "testing/python/metafunc.py",
      "line": 920
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_onearg",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_onearg",
      "file": "testing/python/metafunc.py",
      "line": 941
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_onearg_indirect",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_onearg_indirect",
      "file": "testing/python/metafunc.py",
      "line": 950
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_twoargs",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_twoargs",
      "file": "testing/python/metafunc.py",
      "line": 958
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_multiple_times",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_multiple_times",
      "file": "testing/python/metafunc.py",
      "line": 967
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_CSV",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_CSV",
      "file": "testing/python/metafunc.py",
      "line": 984
    },
    {
      "id": "testing/python/metafunc.py:TestMetafunc.test_parametrize_class_scenarios",
      "type": "function",
      "name": "TestMetafunc.test_parametrize_class_scenarios",
      "file": "testing/python/metafunc.py",
      "line": 996
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctional",
      "type": "class",
      "name": "TestMetafuncFunctional",
      "file": "testing/python/metafunc.py",
      "line": 1039
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctional.test_attributes",
      "type": "function",
      "name": "TestMetafuncFunctional.test_attributes",
      "file": "testing/python/metafunc.py",
      "line": 1040
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctional.test_two_functions",
      "type": "function",
      "name": "TestMetafuncFunctional.test_two_functions",
      "file": "testing/python/metafunc.py",
      "line": 1070
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctional.test_noself_in_method",
      "type": "function",
      "name": "TestMetafuncFunctional.test_noself_in_method",
      "file": "testing/python/metafunc.py",
      "line": 1094
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctional.test_generate_tests_in_class",
      "type": "function",
      "name": "TestMetafuncFunctional.test_generate_tests_in_class",
      "file": "testing/python/metafunc.py",
      "line": 1108
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctional.test_two_functions_not_same_instance",
      "type": "function",
      "name": "TestMetafuncFunctional.test_two_functions_not_same_instance",
      "file": "testing/python/metafunc.py",
      "line": 1122
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctional.test_issue28_setup_method_in_generate_tests",
      "type": "function",
      "name": "TestMetafuncFunctional.test_issue28_setup_method_in_generate_tests",
      "file": "testing/python/metafunc.py",
      "line": 1139
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctional.test_parametrize_functional2",
      "type": "function",
      "name": "TestMetafuncFunctional.test_parametrize_functional2",
      "file": "testing/python/metafunc.py",
      "line": 1155
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctional.test_parametrize_and_inner_getfixturevalue",
      "type": "function",
      "name": "TestMetafuncFunctional.test_parametrize_and_inner_getfixturevalue",
      "file": "testing/python/metafunc.py",
      "line": 1170
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctional.test_parametrize_on_setup_arg",
      "type": "function",
      "name": "TestMetafuncFunctional.test_parametrize_on_setup_arg",
      "file": "testing/python/metafunc.py",
      "line": 1194
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctional.test_parametrize_with_ids",
      "type": "function",
      "name": "TestMetafuncFunctional.test_parametrize_with_ids",
      "file": "testing/python/metafunc.py",
      "line": 1217
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctional.test_parametrize_without_ids",
      "type": "function",
      "name": "TestMetafuncFunctional.test_parametrize_without_ids",
      "file": "testing/python/metafunc.py",
      "line": 1241
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctional.test_parametrize_with_None_in_ids",
      "type": "function",
      "name": "TestMetafuncFunctional.test_parametrize_with_None_in_ids",
      "file": "testing/python/metafunc.py",
      "line": 1261
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctional.test_fixture_parametrized_empty_ids",
      "type": "function",
      "name": "TestMetafuncFunctional.test_fixture_parametrized_empty_ids",
      "file": "testing/python/metafunc.py",
      "line": 1283
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctional.test_parametrized_empty_ids",
      "type": "function",
      "name": "TestMetafuncFunctional.test_parametrized_empty_ids",
      "file": "testing/python/metafunc.py",
      "line": 1300
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctional.test_parametrized_ids_invalid_type",
      "type": "function",
      "name": "TestMetafuncFunctional.test_parametrized_ids_invalid_type",
      "file": "testing/python/metafunc.py",
      "line": 1314
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctional.test_parametrize_with_identical_ids_get_unique_names",
      "type": "function",
      "name": "TestMetafuncFunctional.test_parametrize_with_identical_ids_get_unique_names",
      "file": "testing/python/metafunc.py",
      "line": 1333
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctional.test_parametrize_scope_overrides",
      "type": "function",
      "name": "TestMetafuncFunctional.test_parametrize_scope_overrides",
      "file": "testing/python/metafunc.py",
      "line": 1354
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctional.test_parametrize_issue323",
      "type": "function",
      "name": "TestMetafuncFunctional.test_parametrize_issue323",
      "file": "testing/python/metafunc.py",
      "line": 1381
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctional.test_usefixtures_seen_in_generate_tests",
      "type": "function",
      "name": "TestMetafuncFunctional.test_usefixtures_seen_in_generate_tests",
      "file": "testing/python/metafunc.py",
      "line": 1399
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctional.test_generate_tests_only_done_in_subdir",
      "type": "function",
      "name": "TestMetafuncFunctional.test_generate_tests_only_done_in_subdir",
      "file": "testing/python/metafunc.py",
      "line": 1415
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctional.test_generate_same_function_names_issue403",
      "type": "function",
      "name": "TestMetafuncFunctional.test_generate_same_function_names_issue403",
      "file": "testing/python/metafunc.py",
      "line": 1445
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctional.test_parametrize_misspelling",
      "type": "function",
      "name": "TestMetafuncFunctional.test_parametrize_misspelling",
      "file": "testing/python/metafunc.py",
      "line": 1463
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctionalAuto",
      "type": "class",
      "name": "TestMetafuncFunctionalAuto",
      "file": "testing/python/metafunc.py",
      "line": 1490
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctionalAuto.test_parametrize_auto_scope",
      "type": "function",
      "name": "TestMetafuncFunctionalAuto.test_parametrize_auto_scope",
      "file": "testing/python/metafunc.py",
      "line": 1494
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctionalAuto.test_parametrize_auto_scope_indirect",
      "type": "function",
      "name": "TestMetafuncFunctionalAuto.test_parametrize_auto_scope_indirect",
      "file": "testing/python/metafunc.py",
      "line": 1516
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctionalAuto.test_parametrize_auto_scope_override_fixture",
      "type": "function",
      "name": "TestMetafuncFunctionalAuto.test_parametrize_auto_scope_override_fixture",
      "file": "testing/python/metafunc.py",
      "line": 1539
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctionalAuto.test_parametrize_all_indirects",
      "type": "function",
      "name": "TestMetafuncFunctionalAuto.test_parametrize_all_indirects",
      "file": "testing/python/metafunc.py",
      "line": 1556
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctionalAuto.test_parametrize_some_arguments_auto_scope",
      "type": "function",
      "name": "TestMetafuncFunctionalAuto.test_parametrize_some_arguments_auto_scope",
      "file": "testing/python/metafunc.py",
      "line": 1583
    },
    {
      "id": "testing/python/metafunc.py:TestMetafuncFunctionalAuto.test_parametrize_issue634",
      "type": "function",
      "name": "TestMetafuncFunctionalAuto.test_parametrize_issue634",
      "file": "testing/python/metafunc.py",
      "line": 1618
    },
    {
      "id": "testing/python/metafunc.py:TestMarkersWithParametrization",
      "type": "class",
      "name": "TestMarkersWithParametrization",
      "file": "testing/python/metafunc.py",
      "line": 1653
    },
    {
      "id": "testing/python/metafunc.py:TestMarkersWithParametrization.test_simple_mark",
      "type": "function",
      "name": "TestMarkersWithParametrization.test_simple_mark",
      "file": "testing/python/metafunc.py",
      "line": 1656
    },
    {
      "id": "testing/python/metafunc.py:TestMarkersWithParametrization.test_select_based_on_mark",
      "type": "function",
      "name": "TestMarkersWithParametrization.test_select_based_on_mark",
      "file": "testing/python/metafunc.py",
      "line": 1677
    },
    {
      "id": "testing/python/metafunc.py:TestMarkersWithParametrization.test_simple_xfail",
      "type": "function",
      "name": "TestMarkersWithParametrization.test_simple_xfail",
      "file": "testing/python/metafunc.py",
      "line": 1696
    },
    {
      "id": "testing/python/metafunc.py:TestMarkersWithParametrization.test_simple_xfail_single_argname",
      "type": "function",
      "name": "TestMarkersWithParametrization.test_simple_xfail_single_argname",
      "file": "testing/python/metafunc.py",
      "line": 1713
    },
    {
      "id": "testing/python/metafunc.py:TestMarkersWithParametrization.test_xfail_with_arg",
      "type": "function",
      "name": "TestMarkersWithParametrization.test_xfail_with_arg",
      "file": "testing/python/metafunc.py",
      "line": 1729
    },
    {
      "id": "testing/python/metafunc.py:TestMarkersWithParametrization.test_xfail_with_kwarg",
      "type": "function",
      "name": "TestMarkersWithParametrization.test_xfail_with_kwarg",
      "file": "testing/python/metafunc.py",
      "line": 1745
    },
    {
      "id": "testing/python/metafunc.py:TestMarkersWithParametrization.test_xfail_with_arg_and_kwarg",
      "type": "function",
      "name": "TestMarkersWithParametrization.test_xfail_with_arg_and_kwarg",
      "file": "testing/python/metafunc.py",
      "line": 1761
    },
    {
      "id": "testing/python/metafunc.py:TestMarkersWithParametrization.test_xfail_passing_is_xpass",
      "type": "function",
      "name": "TestMarkersWithParametrization.test_xfail_passing_is_xpass",
      "file": "testing/python/metafunc.py",
      "line": 1778
    },
    {
      "id": "testing/python/metafunc.py:TestMarkersWithParametrization.test_parametrize_called_in_generate_tests",
      "type": "function",
      "name": "TestMarkersWithParametrization.test_parametrize_called_in_generate_tests",
      "file": "testing/python/metafunc.py",
      "line": 1799
    },
    {
      "id": "testing/python/metafunc.py:TestMarkersWithParametrization.test_parametrize_ID_generation_string_int_works",
      "type": "function",
      "name": "TestMarkersWithParametrization.test_parametrize_ID_generation_string_int_works",
      "file": "testing/python/metafunc.py",
      "line": 1822
    },
    {
      "id": "testing/python/metafunc.py:TestMarkersWithParametrization.test_parametrize_marked_value",
      "type": "function",
      "name": "TestMarkersWithParametrization.test_parametrize_marked_value",
      "file": "testing/python/metafunc.py",
      "line": 1843
    },
    {
      "id": "testing/python/metafunc.py:TestMarkersWithParametrization.test_pytest_make_parametrize_id",
      "type": "function",
      "name": "TestMarkersWithParametrization.test_pytest_make_parametrize_id",
      "file": "testing/python/metafunc.py",
      "line": 1867
    },
    {
      "id": "testing/python/metafunc.py:TestMarkersWithParametrization.test_pytest_make_parametrize_id_with_argname",
      "type": "function",
      "name": "TestMarkersWithParametrization.test_pytest_make_parametrize_id_with_argname",
      "file": "testing/python/metafunc.py",
      "line": 1886
    },
    {
      "id": "testing/python/metafunc.py:TestMarkersWithParametrization.test_parametrize_positional_args",
      "type": "function",
      "name": "TestMarkersWithParametrization.test_parametrize_positional_args",
      "file": "testing/python/metafunc.py",
      "line": 1911
    },
    {
      "id": "testing/python/metafunc.py:TestMarkersWithParametrization.test_parametrize_iterator",
      "type": "function",
      "name": "TestMarkersWithParametrization.test_parametrize_iterator",
      "file": "testing/python/metafunc.py",
      "line": 1924
    },
    {
      "id": "testing/python/integration.py",
      "type": "file",
      "name": "integration.py",
      "file": "testing/python/integration.py",
      "line": 0
    },
    {
      "id": "testing/python/integration.py:test_wrapped_getfslineno",
      "type": "function",
      "name": "test_wrapped_getfslineno",
      "file": "testing/python/integration.py",
      "line": 8
    },
    {
      "id": "testing/python/integration.py:test_wrapped_getfslineno.func",
      "type": "function",
      "name": "test_wrapped_getfslineno.func",
      "file": "testing/python/integration.py",
      "line": 9
    },
    {
      "id": "testing/python/integration.py:test_wrapped_getfslineno.wrap",
      "type": "function",
      "name": "test_wrapped_getfslineno.wrap",
      "file": "testing/python/integration.py",
      "line": 12
    },
    {
      "id": "testing/python/integration.py:test_wrapped_getfslineno.wrapped_func",
      "type": "function",
      "name": "test_wrapped_getfslineno.wrapped_func",
      "file": "testing/python/integration.py",
      "line": 18
    },
    {
      "id": "testing/python/integration.py:TestMockDecoration",
      "type": "class",
      "name": "TestMockDecoration",
      "file": "testing/python/integration.py",
      "line": 26
    },
    {
      "id": "testing/python/integration.py:TestMockDecoration.test_wrapped_getfuncargnames",
      "type": "function",
      "name": "TestMockDecoration.test_wrapped_getfuncargnames",
      "file": "testing/python/integration.py",
      "line": 27
    },
    {
      "id": "testing/python/integration.py:TestMockDecoration.test_wrapped_getfuncargnames.wrap",
      "type": "function",
      "name": "TestMockDecoration.test_wrapped_getfuncargnames.wrap",
      "file": "testing/python/integration.py",
      "line": 30
    },
    {
      "id": "testing/python/integration.py:TestMockDecoration.test_wrapped_getfuncargnames.wrap.func",
      "type": "function",
      "name": "TestMockDecoration.test_wrapped_getfuncargnames.wrap.func",
      "file": "testing/python/integration.py",
      "line": 31
    },
    {
      "id": "testing/python/integration.py:TestMockDecoration.test_wrapped_getfuncargnames.f",
      "type": "function",
      "name": "TestMockDecoration.test_wrapped_getfuncargnames.f",
      "file": "testing/python/integration.py",
      "line": 38
    },
    {
      "id": "testing/python/integration.py:TestMockDecoration.test_getfuncargnames_patching",
      "type": "function",
      "name": "TestMockDecoration.test_getfuncargnames_patching",
      "file": "testing/python/integration.py",
      "line": 44
    },
    {
      "id": "testing/python/integration.py:TestMockDecoration.test_getfuncargnames_patching.T",
      "type": "class",
      "name": "TestMockDecoration.test_getfuncargnames_patching.T",
      "file": "testing/python/integration.py",
      "line": 48
    },
    {
      "id": "testing/python/integration.py:TestMockDecoration.test_getfuncargnames_patching.T.original",
      "type": "function",
      "name": "TestMockDecoration.test_getfuncargnames_patching.T.original",
      "file": "testing/python/integration.py",
      "line": 49
    },
    {
      "id": "testing/python/integration.py:TestMockDecoration.test_getfuncargnames_patching.f",
      "type": "function",
      "name": "TestMockDecoration.test_getfuncargnames_patching.f",
      "file": "testing/python/integration.py",
      "line": 53
    },
    {
      "id": "testing/python/integration.py:TestMockDecoration.test_unittest_mock",
      "type": "function",
      "name": "TestMockDecoration.test_unittest_mock",
      "file": "testing/python/integration.py",
      "line": 59
    },
    {
      "id": "testing/python/integration.py:TestMockDecoration.test_unittest_mock_and_fixture",
      "type": "function",
      "name": "TestMockDecoration.test_unittest_mock_and_fixture",
      "file": "testing/python/integration.py",
      "line": 74
    },
    {
      "id": "testing/python/integration.py:TestMockDecoration.test_unittest_mock_and_pypi_mock",
      "type": "function",
      "name": "TestMockDecoration.test_unittest_mock_and_pypi_mock",
      "file": "testing/python/integration.py",
      "line": 95
    },
    {
      "id": "testing/python/integration.py:TestMockDecoration.test_mock_sentinel_check_against_numpy_like",
      "type": "function",
      "name": "TestMockDecoration.test_mock_sentinel_check_against_numpy_like",
      "file": "testing/python/integration.py",
      "line": 118
    },
    {
      "id": "testing/python/integration.py:TestMockDecoration.test_mock",
      "type": "function",
      "name": "TestMockDecoration.test_mock",
      "file": "testing/python/integration.py",
      "line": 146
    },
    {
      "id": "testing/python/integration.py:TestMockDecoration.test_mock_sorting",
      "type": "function",
      "name": "TestMockDecoration.test_mock_sorting",
      "file": "testing/python/integration.py",
      "line": 179
    },
    {
      "id": "testing/python/integration.py:TestMockDecoration.test_mock_double_patch_issue473",
      "type": "function",
      "name": "TestMockDecoration.test_mock_double_patch_issue473",
      "file": "testing/python/integration.py",
      "line": 203
    },
    {
      "id": "testing/python/integration.py:TestReRunTests",
      "type": "class",
      "name": "TestReRunTests",
      "file": "testing/python/integration.py",
      "line": 222
    },
    {
      "id": "testing/python/integration.py:TestReRunTests.test_rerun",
      "type": "function",
      "name": "TestReRunTests.test_rerun",
      "file": "testing/python/integration.py",
      "line": 223
    },
    {
      "id": "testing/python/integration.py:test_pytestconfig_is_session_scoped",
      "type": "function",
      "name": "test_pytestconfig_is_session_scoped",
      "file": "testing/python/integration.py",
      "line": 262
    },
    {
      "id": "testing/python/integration.py:TestNoselikeTestAttribute",
      "type": "class",
      "name": "TestNoselikeTestAttribute",
      "file": "testing/python/integration.py",
      "line": 270
    },
    {
      "id": "testing/python/integration.py:TestNoselikeTestAttribute.test_module_with_global_test",
      "type": "function",
      "name": "TestNoselikeTestAttribute.test_module_with_global_test",
      "file": "testing/python/integration.py",
      "line": 271
    },
    {
      "id": "testing/python/integration.py:TestNoselikeTestAttribute.test_class_and_method",
      "type": "function",
      "name": "TestNoselikeTestAttribute.test_class_and_method",
      "file": "testing/python/integration.py",
      "line": 284
    },
    {
      "id": "testing/python/integration.py:TestNoselikeTestAttribute.test_unittest_class",
      "type": "function",
      "name": "TestNoselikeTestAttribute.test_unittest_class",
      "file": "testing/python/integration.py",
      "line": 303
    },
    {
      "id": "testing/python/integration.py:TestNoselikeTestAttribute.test_class_with_nasty_getattr",
      "type": "function",
      "name": "TestNoselikeTestAttribute.test_class_with_nasty_getattr",
      "file": "testing/python/integration.py",
      "line": 322
    },
    {
      "id": "testing/python/integration.py:TestParameterize",
      "type": "class",
      "name": "TestParameterize",
      "file": "testing/python/integration.py",
      "line": 354
    },
    {
      "id": "testing/python/integration.py:TestParameterize.test_idfn_marker",
      "type": "function",
      "name": "TestParameterize.test_idfn_marker",
      "file": "testing/python/integration.py",
      "line": 357
    },
    {
      "id": "testing/python/integration.py:TestParameterize.test_idfn_fixture",
      "type": "function",
      "name": "TestParameterize.test_idfn_fixture",
      "file": "testing/python/integration.py",
      "line": 378
    },
    {
      "id": "testing/python/integration.py:test_function_instance",
      "type": "function",
      "name": "test_function_instance",
      "file": "testing/python/integration.py",
      "line": 407
    },
    {
      "id": "testing/python/raises.py",
      "type": "file",
      "name": "raises.py",
      "file": "testing/python/raises.py",
      "line": 0
    },
    {
      "id": "testing/python/raises.py:TestRaises",
      "type": "class",
      "name": "TestRaises",
      "file": "testing/python/raises.py",
      "line": 9
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_check_callable",
      "type": "function",
      "name": "TestRaises.test_check_callable",
      "file": "testing/python/raises.py",
      "line": 10
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_raises",
      "type": "function",
      "name": "TestRaises.test_raises",
      "file": "testing/python/raises.py",
      "line": 14
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_raises_function",
      "type": "function",
      "name": "TestRaises.test_raises_function",
      "file": "testing/python/raises.py",
      "line": 18
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_raises_does_not_allow_none",
      "type": "function",
      "name": "TestRaises.test_raises_does_not_allow_none",
      "file": "testing/python/raises.py",
      "line": 22
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_raises_does_not_allow_empty_tuple",
      "type": "function",
      "name": "TestRaises.test_raises_does_not_allow_empty_tuple",
      "file": "testing/python/raises.py",
      "line": 28
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_raises_callable_no_exception",
      "type": "function",
      "name": "TestRaises.test_raises_callable_no_exception",
      "file": "testing/python/raises.py",
      "line": 32
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_raises_callable_no_exception.A",
      "type": "class",
      "name": "TestRaises.test_raises_callable_no_exception.A",
      "file": "testing/python/raises.py",
      "line": 33
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_raises_callable_no_exception.A.__call__",
      "type": "function",
      "name": "TestRaises.test_raises_callable_no_exception.A.__call__",
      "file": "testing/python/raises.py",
      "line": 34
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_raises_falsey_type_error",
      "type": "function",
      "name": "TestRaises.test_raises_falsey_type_error",
      "file": "testing/python/raises.py",
      "line": 42
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_raises_repr_inflight",
      "type": "function",
      "name": "TestRaises.test_raises_repr_inflight",
      "file": "testing/python/raises.py",
      "line": 47
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_raises_repr_inflight.E",
      "type": "class",
      "name": "TestRaises.test_raises_repr_inflight.E",
      "file": "testing/python/raises.py",
      "line": 50
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_raises_as_contextmanager",
      "type": "function",
      "name": "TestRaises.test_raises_as_contextmanager",
      "file": "testing/python/raises.py",
      "line": 64
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_does_not_raise",
      "type": "function",
      "name": "TestRaises.test_does_not_raise",
      "file": "testing/python/raises.py",
      "line": 92
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_does_not_raise_does_raise",
      "type": "function",
      "name": "TestRaises.test_does_not_raise_does_raise",
      "file": "testing/python/raises.py",
      "line": 113
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_noclass",
      "type": "function",
      "name": "TestRaises.test_noclass",
      "file": "testing/python/raises.py",
      "line": 132
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_invalid_arguments_to_raises",
      "type": "function",
      "name": "TestRaises.test_invalid_arguments_to_raises",
      "file": "testing/python/raises.py",
      "line": 136
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_tuple",
      "type": "function",
      "name": "TestRaises.test_tuple",
      "file": "testing/python/raises.py",
      "line": 141
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_no_raise_message",
      "type": "function",
      "name": "TestRaises.test_no_raise_message",
      "file": "testing/python/raises.py",
      "line": 145
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_raises_cyclic_reference",
      "type": "function",
      "name": "TestRaises.test_raises_cyclic_reference",
      "file": "testing/python/raises.py",
      "line": 162
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_raises_cyclic_reference.T",
      "type": "class",
      "name": "TestRaises.test_raises_cyclic_reference.T",
      "file": "testing/python/raises.py",
      "line": 166
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_raises_cyclic_reference.T.__call__",
      "type": "function",
      "name": "TestRaises.test_raises_cyclic_reference.T.__call__",
      "file": "testing/python/raises.py",
      "line": 167
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_raises_match",
      "type": "function",
      "name": "TestRaises.test_raises_match",
      "file": "testing/python/raises.py",
      "line": 186
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_raises_match.tfunc",
      "type": "function",
      "name": "TestRaises.test_raises_match.tfunc",
      "file": "testing/python/raises.py",
      "line": 213
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_match_failure_string_quoting",
      "type": "function",
      "name": "TestRaises.test_match_failure_string_quoting",
      "file": "testing/python/raises.py",
      "line": 219
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_match_failure_exact_string_message",
      "type": "function",
      "name": "TestRaises.test_match_failure_exact_string_message",
      "file": "testing/python/raises.py",
      "line": 226
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_raises_match_wrong_type",
      "type": "function",
      "name": "TestRaises.test_raises_match_wrong_type",
      "file": "testing/python/raises.py",
      "line": 239
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_raises_exception_looks_iterable",
      "type": "function",
      "name": "TestRaises.test_raises_exception_looks_iterable",
      "file": "testing/python/raises.py",
      "line": 249
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_raises_exception_looks_iterable.Meta",
      "type": "class",
      "name": "TestRaises.test_raises_exception_looks_iterable.Meta",
      "file": "testing/python/raises.py",
      "line": 250
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_raises_exception_looks_iterable.Meta.__getitem__",
      "type": "function",
      "name": "TestRaises.test_raises_exception_looks_iterable.Meta.__getitem__",
      "file": "testing/python/raises.py",
      "line": 251
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_raises_exception_looks_iterable.Meta.__len__",
      "type": "function",
      "name": "TestRaises.test_raises_exception_looks_iterable.Meta.__len__",
      "file": "testing/python/raises.py",
      "line": 254
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_raises_exception_looks_iterable.ClassLooksIterableException",
      "type": "class",
      "name": "TestRaises.test_raises_exception_looks_iterable.ClassLooksIterableException",
      "file": "testing/python/raises.py",
      "line": 257
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_raises_with_raising_dunder_class",
      "type": "function",
      "name": "TestRaises.test_raises_with_raising_dunder_class",
      "file": "testing/python/raises.py",
      "line": 266
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_raises_with_raising_dunder_class.CrappyClass",
      "type": "class",
      "name": "TestRaises.test_raises_with_raising_dunder_class.CrappyClass",
      "file": "testing/python/raises.py",
      "line": 269
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_raises_with_raising_dunder_class.CrappyClass.__class__",
      "type": "function",
      "name": "TestRaises.test_raises_with_raising_dunder_class.CrappyClass.__class__",
      "file": "testing/python/raises.py",
      "line": 272
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_raises_context_manager_with_kwargs",
      "type": "function",
      "name": "TestRaises.test_raises_context_manager_with_kwargs",
      "file": "testing/python/raises.py",
      "line": 280
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_expected_exception_is_not_a_baseexception",
      "type": "function",
      "name": "TestRaises.test_expected_exception_is_not_a_baseexception",
      "file": "testing/python/raises.py",
      "line": 286
    },
    {
      "id": "testing/python/raises.py:TestRaises.test_expected_exception_is_not_a_baseexception.NotAnException",
      "type": "class",
      "name": "TestRaises.test_expected_exception_is_not_a_baseexception.NotAnException",
      "file": "testing/python/raises.py",
      "line": 292
    },
    {
      "id": "testing/python/fixtures.py",
      "type": "file",
      "name": "fixtures.py",
      "file": "testing/python/fixtures.py",
      "line": 0
    },
    {
      "id": "testing/python/fixtures.py:test_getfuncargnames_functions",
      "type": "function",
      "name": "test_getfuncargnames_functions",
      "file": "testing/python/fixtures.py",
      "line": 17
    },
    {
      "id": "testing/python/fixtures.py:test_getfuncargnames_functions.f",
      "type": "function",
      "name": "test_getfuncargnames_functions.f",
      "file": "testing/python/fixtures.py",
      "line": 20
    },
    {
      "id": "testing/python/fixtures.py:test_getfuncargnames_functions.g",
      "type": "function",
      "name": "test_getfuncargnames_functions.g",
      "file": "testing/python/fixtures.py",
      "line": 25
    },
    {
      "id": "testing/python/fixtures.py:test_getfuncargnames_functions.h",
      "type": "function",
      "name": "test_getfuncargnames_functions.h",
      "file": "testing/python/fixtures.py",
      "line": 30
    },
    {
      "id": "testing/python/fixtures.py:test_getfuncargnames_functions.j",
      "type": "function",
      "name": "test_getfuncargnames_functions.j",
      "file": "testing/python/fixtures.py",
      "line": 35
    },
    {
      "id": "testing/python/fixtures.py:test_getfuncargnames_methods",
      "type": "function",
      "name": "test_getfuncargnames_methods",
      "file": "testing/python/fixtures.py",
      "line": 41
    },
    {
      "id": "testing/python/fixtures.py:test_getfuncargnames_methods.A",
      "type": "class",
      "name": "test_getfuncargnames_methods.A",
      "file": "testing/python/fixtures.py",
      "line": 44
    },
    {
      "id": "testing/python/fixtures.py:test_getfuncargnames_methods.A.f",
      "type": "function",
      "name": "test_getfuncargnames_methods.A.f",
      "file": "testing/python/fixtures.py",
      "line": 45
    },
    {
      "id": "testing/python/fixtures.py:test_getfuncargnames_staticmethod",
      "type": "function",
      "name": "test_getfuncargnames_staticmethod",
      "file": "testing/python/fixtures.py",
      "line": 51
    },
    {
      "id": "testing/python/fixtures.py:test_getfuncargnames_staticmethod.A",
      "type": "class",
      "name": "test_getfuncargnames_staticmethod.A",
      "file": "testing/python/fixtures.py",
      "line": 54
    },
    {
      "id": "testing/python/fixtures.py:test_getfuncargnames_staticmethod.A.static",
      "type": "function",
      "name": "test_getfuncargnames_staticmethod.A.static",
      "file": "testing/python/fixtures.py",
      "line": 56
    },
    {
      "id": "testing/python/fixtures.py:test_getfuncargnames_staticmethod_inherited",
      "type": "function",
      "name": "test_getfuncargnames_staticmethod_inherited",
      "file": "testing/python/fixtures.py",
      "line": 62
    },
    {
      "id": "testing/python/fixtures.py:test_getfuncargnames_staticmethod_inherited.A",
      "type": "class",
      "name": "test_getfuncargnames_staticmethod_inherited.A",
      "file": "testing/python/fixtures.py",
      "line": 65
    },
    {
      "id": "testing/python/fixtures.py:test_getfuncargnames_staticmethod_inherited.A.static",
      "type": "function",
      "name": "test_getfuncargnames_staticmethod_inherited.A.static",
      "file": "testing/python/fixtures.py",
      "line": 67
    },
    {
      "id": "testing/python/fixtures.py:test_getfuncargnames_staticmethod_inherited.B",
      "type": "class",
      "name": "test_getfuncargnames_staticmethod_inherited.B",
      "file": "testing/python/fixtures.py",
      "line": 70
    },
    {
      "id": "testing/python/fixtures.py:test_getfuncargnames_partial",
      "type": "function",
      "name": "test_getfuncargnames_partial",
      "file": "testing/python/fixtures.py",
      "line": 76
    },
    {
      "id": "testing/python/fixtures.py:test_getfuncargnames_partial.check",
      "type": "function",
      "name": "test_getfuncargnames_partial.check",
      "file": "testing/python/fixtures.py",
      "line": 80
    },
    {
      "id": "testing/python/fixtures.py:test_getfuncargnames_partial.T",
      "type": "class",
      "name": "test_getfuncargnames_partial.T",
      "file": "testing/python/fixtures.py",
      "line": 83
    },
    {
      "id": "testing/python/fixtures.py:test_getfuncargnames_staticmethod_partial",
      "type": "function",
      "name": "test_getfuncargnames_staticmethod_partial",
      "file": "testing/python/fixtures.py",
      "line": 90
    },
    {
      "id": "testing/python/fixtures.py:test_getfuncargnames_staticmethod_partial.check",
      "type": "function",
      "name": "test_getfuncargnames_staticmethod_partial.check",
      "file": "testing/python/fixtures.py",
      "line": 94
    },
    {
      "id": "testing/python/fixtures.py:test_getfuncargnames_staticmethod_partial.T",
      "type": "class",
      "name": "test_getfuncargnames_staticmethod_partial.T",
      "file": "testing/python/fixtures.py",
      "line": 97
    },
    {
      "id": "testing/python/fixtures.py:TestFillFixtures",
      "type": "class",
      "name": "TestFillFixtures",
      "file": "testing/python/fixtures.py",
      "line": 105
    },
    {
      "id": "testing/python/fixtures.py:TestFillFixtures.test_funcarg_lookupfails",
      "type": "function",
      "name": "TestFillFixtures.test_funcarg_lookupfails",
      "file": "testing/python/fixtures.py",
      "line": 106
    },
    {
      "id": "testing/python/fixtures.py:TestFillFixtures.test_detect_recursive_dependency_error",
      "type": "function",
      "name": "TestFillFixtures.test_detect_recursive_dependency_error",
      "file": "testing/python/fixtures.py",
      "line": 118
    },
    {
      "id": "testing/python/fixtures.py:TestFillFixtures.test_funcarg_basic",
      "type": "function",
      "name": "TestFillFixtures.test_funcarg_basic",
      "file": "testing/python/fixtures.py",
      "line": 125
    },
    {
      "id": "testing/python/fixtures.py:TestFillFixtures.test_funcarg_lookup_modulelevel",
      "type": "function",
      "name": "TestFillFixtures.test_funcarg_lookup_modulelevel",
      "file": "testing/python/fixtures.py",
      "line": 136
    },
    {
      "id": "testing/python/fixtures.py:TestFillFixtures.test_funcarg_lookup_classlevel",
      "type": "function",
      "name": "TestFillFixtures.test_funcarg_lookup_classlevel",
      "file": "testing/python/fixtures.py",
      "line": 141
    },
    {
      "id": "testing/python/fixtures.py:TestFillFixtures.test_conftest_funcargs_only_available_in_subdir",
      "type": "function",
      "name": "TestFillFixtures.test_conftest_funcargs_only_available_in_subdir",
      "file": "testing/python/fixtures.py",
      "line": 146
    },
    {
      "id": "testing/python/fixtures.py:TestFillFixtures.test_extend_fixture_module_class",
      "type": "function",
      "name": "TestFillFixtures.test_extend_fixture_module_class",
      "file": "testing/python/fixtures.py",
      "line": 153
    },
    {
      "id": "testing/python/fixtures.py:TestFillFixtures.test_extend_fixture_conftest_module",
      "type": "function",
      "name": "TestFillFixtures.test_extend_fixture_conftest_module",
      "file": "testing/python/fixtures.py",
      "line": 160
    },
    {
      "id": "testing/python/fixtures.py:TestFillFixtures.test_extend_fixture_conftest_conftest",
      "type": "function",
      "name": "TestFillFixtures.test_extend_fixture_conftest_conftest",
      "file": "testing/python/fixtures.py",
      "line": 167
    },
    {
      "id": "testing/python/fixtures.py:TestFillFixtures.test_extend_fixture_conftest_plugin",
      "type": "function",
      "name": "TestFillFixtures.test_extend_fixture_conftest_plugin",
      "file": "testing/python/fixtures.py",
      "line": 174
    },
    {
      "id": "testing/python/fixtures.py:TestFillFixtures.test_extend_fixture_plugin_plugin",
      "type": "function",
      "name": "TestFillFixtures.test_extend_fixture_plugin_plugin",
      "file": "testing/python/fixtures.py",
      "line": 205
    },
    {
      "id": "testing/python/fixtures.py:TestFillFixtures.test_override_parametrized_fixture_conftest_module",
      "type": "function",
      "name": "TestFillFixtures.test_override_parametrized_fixture_conftest_module",
      "file": "testing/python/fixtures.py",
      "line": 237
    },
    {
      "id": "testing/python/fixtures.py:TestFillFixtures.test_override_parametrized_fixture_conftest_conftest",
      "type": "function",
      "name": "TestFillFixtures.test_override_parametrized_fixture_conftest_conftest",
      "file": "testing/python/fixtures.py",
      "line": 267
    },
    {
      "id": "testing/python/fixtures.py:TestFillFixtures.test_override_non_parametrized_fixture_conftest_module",
      "type": "function",
      "name": "TestFillFixtures.test_override_non_parametrized_fixture_conftest_module",
      "file": "testing/python/fixtures.py",
      "line": 308
    },
    {
      "id": "testing/python/fixtures.py:TestFillFixtures.test_override_non_parametrized_fixture_conftest_conftest",
      "type": "function",
      "name": "TestFillFixtures.test_override_non_parametrized_fixture_conftest_conftest",
      "file": "testing/python/fixtures.py",
      "line": 341
    },
    {
      "id": "testing/python/fixtures.py:TestFillFixtures.test_override_autouse_fixture_with_parametrized_fixture_conftest_conftest",
      "type": "function",
      "name": "TestFillFixtures.test_override_autouse_fixture_with_parametrized_fixture_conftest_conftest",
      "file": "testing/python/fixtures.py",
      "line": 385
    },
    {
      "id": "testing/python/fixtures.py:TestFillFixtures.test_override_fixture_reusing_super_fixture_parametrization",
      "type": "function",
      "name": "TestFillFixtures.test_override_fixture_reusing_super_fixture_parametrization",
      "file": "testing/python/fixtures.py",
      "line": 431
    },
    {
      "id": "testing/python/fixtures.py:TestFillFixtures.test_override_parametrize_fixture_and_indirect",
      "type": "function",
      "name": "TestFillFixtures.test_override_parametrize_fixture_and_indirect",
      "file": "testing/python/fixtures.py",
      "line": 461
    },
    {
      "id": "testing/python/fixtures.py:TestFillFixtures.test_override_top_level_fixture_reusing_super_fixture_parametrization",
      "type": "function",
      "name": "TestFillFixtures.test_override_top_level_fixture_reusing_super_fixture_parametrization",
      "file": "testing/python/fixtures.py",
      "line": 497
    },
    {
      "id": "testing/python/fixtures.py:TestFillFixtures.test_override_parametrized_fixture_with_new_parametrized_fixture",
      "type": "function",
      "name": "TestFillFixtures.test_override_parametrized_fixture_with_new_parametrized_fixture",
      "file": "testing/python/fixtures.py",
      "line": 531
    },
    {
      "id": "testing/python/fixtures.py:TestFillFixtures.test_autouse_fixture_plugin",
      "type": "function",
      "name": "TestFillFixtures.test_autouse_fixture_plugin",
      "file": "testing/python/fixtures.py",
      "line": 563
    },
    {
      "id": "testing/python/fixtures.py:TestFillFixtures.test_funcarg_lookup_error",
      "type": "function",
      "name": "TestFillFixtures.test_funcarg_lookup_error",
      "file": "testing/python/fixtures.py",
      "line": 587
    },
    {
      "id": "testing/python/fixtures.py:TestFillFixtures.test_fixture_excinfo_leak",
      "type": "function",
      "name": "TestFillFixtures.test_fixture_excinfo_leak",
      "file": "testing/python/fixtures.py",
      "line": 625
    },
    {
      "id": "testing/python/fixtures.py:TestRequestBasic",
      "type": "class",
      "name": "TestRequestBasic",
      "file": "testing/python/fixtures.py",
      "line": 650
    },
    {
      "id": "testing/python/fixtures.py:TestRequestBasic.test_request_attributes",
      "type": "function",
      "name": "TestRequestBasic.test_request_attributes",
      "file": "testing/python/fixtures.py",
      "line": 651
    },
    {
      "id": "testing/python/fixtures.py:TestRequestBasic.test_request_attributes_method",
      "type": "function",
      "name": "TestRequestBasic.test_request_attributes_method",
      "file": "testing/python/fixtures.py",
      "line": 671
    },
    {
      "id": "testing/python/fixtures.py:TestRequestBasic.test_request_contains_funcarg_arg2fixturedefs",
      "type": "function",
      "name": "TestRequestBasic.test_request_contains_funcarg_arg2fixturedefs",
      "file": "testing/python/fixtures.py",
      "line": 689
    },
    {
      "id": "testing/python/fixtures.py:TestRequestBasic.test_request_garbage",
      "type": "function",
      "name": "TestRequestBasic.test_request_garbage",
      "file": "testing/python/fixtures.py",
      "line": 713
    },
    {
      "id": "testing/python/fixtures.py:TestRequestBasic.test_getfixturevalue_recursive",
      "type": "function",
      "name": "TestRequestBasic.test_getfixturevalue_recursive",
      "file": "testing/python/fixtures.py",
      "line": 749
    },
    {
      "id": "testing/python/fixtures.py:TestRequestBasic.test_getfixturevalue_teardown",
      "type": "function",
      "name": "TestRequestBasic.test_getfixturevalue_teardown",
      "file": "testing/python/fixtures.py",
      "line": 773
    },
    {
      "id": "testing/python/fixtures.py:TestRequestBasic.test_getfixturevalue",
      "type": "function",
      "name": "TestRequestBasic.test_getfixturevalue",
      "file": "testing/python/fixtures.py",
      "line": 811
    },
    {
      "id": "testing/python/fixtures.py:TestRequestBasic.test_request_addfinalizer",
      "type": "function",
      "name": "TestRequestBasic.test_request_addfinalizer",
      "file": "testing/python/fixtures.py",
      "line": 848
    },
    {
      "id": "testing/python/fixtures.py:TestRequestBasic.test_request_addfinalizer_failing_setup",
      "type": "function",
      "name": "TestRequestBasic.test_request_addfinalizer_failing_setup",
      "file": "testing/python/fixtures.py",
      "line": 872
    },
    {
      "id": "testing/python/fixtures.py:TestRequestBasic.test_request_addfinalizer_failing_setup_module",
      "type": "function",
      "name": "TestRequestBasic.test_request_addfinalizer_failing_setup_module",
      "file": "testing/python/fixtures.py",
      "line": 890
    },
    {
      "id": "testing/python/fixtures.py:TestRequestBasic.test_request_addfinalizer_partial_setup_failure",
      "type": "function",
      "name": "TestRequestBasic.test_request_addfinalizer_partial_setup_failure",
      "file": "testing/python/fixtures.py",
      "line": 910
    },
    {
      "id": "testing/python/fixtures.py:TestRequestBasic.test_request_subrequest_addfinalizer_exceptions",
      "type": "function",
      "name": "TestRequestBasic.test_request_subrequest_addfinalizer_exceptions",
      "file": "testing/python/fixtures.py",
      "line": 931
    },
    {
      "id": "testing/python/fixtures.py:TestRequestBasic.test_request_getmodulepath",
      "type": "function",
      "name": "TestRequestBasic.test_request_getmodulepath",
      "file": "testing/python/fixtures.py",
      "line": 967
    },
    {
      "id": "testing/python/fixtures.py:TestRequestBasic.test_request_fixturenames",
      "type": "function",
      "name": "TestRequestBasic.test_request_fixturenames",
      "file": "testing/python/fixtures.py",
      "line": 973
    },
    {
      "id": "testing/python/fixtures.py:TestRequestBasic.test_request_fixturenames_dynamic_fixture",
      "type": "function",
      "name": "TestRequestBasic.test_request_fixturenames_dynamic_fixture",
      "file": "testing/python/fixtures.py",
      "line": 996
    },
    {
      "id": "testing/python/fixtures.py:TestRequestBasic.test_setupdecorator_and_xunit",
      "type": "function",
      "name": "TestRequestBasic.test_setupdecorator_and_xunit",
      "file": "testing/python/fixtures.py",
      "line": 1002
    },
    {
      "id": "testing/python/fixtures.py:TestRequestBasic.test_fixtures_sub_subdir_normalize_sep",
      "type": "function",
      "name": "TestRequestBasic.test_fixtures_sub_subdir_normalize_sep",
      "file": "testing/python/fixtures.py",
      "line": 1034
    },
    {
      "id": "testing/python/fixtures.py:TestRequestBasic.test_show_fixtures_color_yes",
      "type": "function",
      "name": "TestRequestBasic.test_show_fixtures_color_yes",
      "file": "testing/python/fixtures.py",
      "line": 1060
    },
    {
      "id": "testing/python/fixtures.py:TestRequestBasic.test_newstyle_with_request",
      "type": "function",
      "name": "TestRequestBasic.test_newstyle_with_request",
      "file": "testing/python/fixtures.py",
      "line": 1065
    },
    {
      "id": "testing/python/fixtures.py:TestRequestBasic.test_setupcontext_no_param",
      "type": "function",
      "name": "TestRequestBasic.test_setupcontext_no_param",
      "file": "testing/python/fixtures.py",
      "line": 1079
    },
    {
      "id": "testing/python/fixtures.py:TestRequestSessionScoped",
      "type": "class",
      "name": "TestRequestSessionScoped",
      "file": "testing/python/fixtures.py",
      "line": 1098
    },
    {
      "id": "testing/python/fixtures.py:TestRequestSessionScoped.session_request",
      "type": "function",
      "name": "TestRequestSessionScoped.session_request",
      "file": "testing/python/fixtures.py",
      "line": 1100
    },
    {
      "id": "testing/python/fixtures.py:TestRequestSessionScoped.test_session_scoped_unavailable_attributes",
      "type": "function",
      "name": "TestRequestSessionScoped.test_session_scoped_unavailable_attributes",
      "file": "testing/python/fixtures.py",
      "line": 1104
    },
    {
      "id": "testing/python/fixtures.py:TestRequestMarking",
      "type": "class",
      "name": "TestRequestMarking",
      "file": "testing/python/fixtures.py",
      "line": 1112
    },
    {
      "id": "testing/python/fixtures.py:TestRequestMarking.test_applymarker",
      "type": "function",
      "name": "TestRequestMarking.test_applymarker",
      "file": "testing/python/fixtures.py",
      "line": 1113
    },
    {
      "id": "testing/python/fixtures.py:TestRequestMarking.test_accesskeywords",
      "type": "function",
      "name": "TestRequestMarking.test_accesskeywords",
      "file": "testing/python/fixtures.py",
      "line": 1138
    },
    {
      "id": "testing/python/fixtures.py:TestRequestMarking.test_accessmarker_dynamic",
      "type": "function",
      "name": "TestRequestMarking.test_accessmarker_dynamic",
      "file": "testing/python/fixtures.py",
      "line": 1154
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureUsages",
      "type": "class",
      "name": "TestFixtureUsages",
      "file": "testing/python/fixtures.py",
      "line": 1182
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureUsages.test_noargfixturedec",
      "type": "function",
      "name": "TestFixtureUsages.test_noargfixturedec",
      "file": "testing/python/fixtures.py",
      "line": 1183
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureUsages.test_receives_funcargs",
      "type": "function",
      "name": "TestFixtureUsages.test_receives_funcargs",
      "file": "testing/python/fixtures.py",
      "line": 1198
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureUsages.test_receives_funcargs_scope_mismatch",
      "type": "function",
      "name": "TestFixtureUsages.test_receives_funcargs_scope_mismatch",
      "file": "testing/python/fixtures.py",
      "line": 1220
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureUsages.test_receives_funcargs_scope_mismatch_issue660",
      "type": "function",
      "name": "TestFixtureUsages.test_receives_funcargs_scope_mismatch_issue660",
      "file": "testing/python/fixtures.py",
      "line": 1246
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureUsages.test_invalid_scope",
      "type": "function",
      "name": "TestFixtureUsages.test_invalid_scope",
      "file": "testing/python/fixtures.py",
      "line": 1269
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureUsages.test_parameters_without_eq_semantics",
      "type": "function",
      "name": "TestFixtureUsages.test_parameters_without_eq_semantics",
      "file": "testing/python/fixtures.py",
      "line": 1287
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureUsages.test_funcarg_parametrized_and_used_twice",
      "type": "function",
      "name": "TestFixtureUsages.test_funcarg_parametrized_and_used_twice",
      "file": "testing/python/fixtures.py",
      "line": 1318
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureUsages.test_factory_uses_unknown_funcarg_as_dependency_error",
      "type": "function",
      "name": "TestFixtureUsages.test_factory_uses_unknown_funcarg_as_dependency_error",
      "file": "testing/python/fixtures.py",
      "line": 1340
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureUsages.test_factory_setup_as_classes_fails",
      "type": "function",
      "name": "TestFixtureUsages.test_factory_setup_as_classes_fails",
      "file": "testing/python/fixtures.py",
      "line": 1370
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureUsages.test_usefixtures_marker",
      "type": "function",
      "name": "TestFixtureUsages.test_usefixtures_marker",
      "file": "testing/python/fixtures.py",
      "line": 1385
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureUsages.test_usefixtures_ini",
      "type": "function",
      "name": "TestFixtureUsages.test_usefixtures_ini",
      "file": "testing/python/fixtures.py",
      "line": 1410
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureUsages.test_usefixtures_seen_in_showmarkers",
      "type": "function",
      "name": "TestFixtureUsages.test_usefixtures_seen_in_showmarkers",
      "file": "testing/python/fixtures.py",
      "line": 1439
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureUsages.test_request_instance_issue203",
      "type": "function",
      "name": "TestFixtureUsages.test_request_instance_issue203",
      "file": "testing/python/fixtures.py",
      "line": 1447
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureUsages.test_fixture_parametrized_with_iterator",
      "type": "function",
      "name": "TestFixtureUsages.test_fixture_parametrized_with_iterator",
      "file": "testing/python/fixtures.py",
      "line": 1464
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureUsages.test_setup_functions_as_fixtures",
      "type": "function",
      "name": "TestFixtureUsages.test_setup_functions_as_fixtures",
      "file": "testing/python/fixtures.py",
      "line": 1493
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureManagerParseFactories",
      "type": "class",
      "name": "TestFixtureManagerParseFactories",
      "file": "testing/python/fixtures.py",
      "line": 1533
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureManagerParseFactories.pytester",
      "type": "function",
      "name": "TestFixtureManagerParseFactories.pytester",
      "file": "testing/python/fixtures.py",
      "line": 1535
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureManagerParseFactories.test_parsefactories_evil_objects_issue214",
      "type": "function",
      "name": "TestFixtureManagerParseFactories.test_parsefactories_evil_objects_issue214",
      "file": "testing/python/fixtures.py",
      "line": 1555
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureManagerParseFactories.test_parsefactories_conftest",
      "type": "function",
      "name": "TestFixtureManagerParseFactories.test_parsefactories_conftest",
      "file": "testing/python/fixtures.py",
      "line": 1571
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureManagerParseFactories.test_parsefactories_conftest_and_module_and_class",
      "type": "function",
      "name": "TestFixtureManagerParseFactories.test_parsefactories_conftest_and_module_and_class",
      "file": "testing/python/fixtures.py",
      "line": 1585
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureManagerParseFactories.test_parsefactories_relative_node_ids",
      "type": "function",
      "name": "TestFixtureManagerParseFactories.test_parsefactories_relative_node_ids",
      "file": "testing/python/fixtures.py",
      "line": 1612
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureManagerParseFactories.test_package_xunit_fixture",
      "type": "function",
      "name": "TestFixtureManagerParseFactories.test_package_xunit_fixture",
      "file": "testing/python/fixtures.py",
      "line": 1669
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureManagerParseFactories.test_package_fixture_complex",
      "type": "function",
      "name": "TestFixtureManagerParseFactories.test_package_fixture_complex",
      "file": "testing/python/fixtures.py",
      "line": 1724
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureManagerParseFactories.test_collect_custom_items",
      "type": "function",
      "name": "TestFixtureManagerParseFactories.test_collect_custom_items",
      "file": "testing/python/fixtures.py",
      "line": 1767
    },
    {
      "id": "testing/python/fixtures.py:TestAutouseDiscovery",
      "type": "class",
      "name": "TestAutouseDiscovery",
      "file": "testing/python/fixtures.py",
      "line": 1773
    },
    {
      "id": "testing/python/fixtures.py:TestAutouseDiscovery.pytester",
      "type": "function",
      "name": "TestAutouseDiscovery.pytester",
      "file": "testing/python/fixtures.py",
      "line": 1775
    },
    {
      "id": "testing/python/fixtures.py:TestAutouseDiscovery.test_parsefactories_conftest",
      "type": "function",
      "name": "TestAutouseDiscovery.test_parsefactories_conftest",
      "file": "testing/python/fixtures.py",
      "line": 1801
    },
    {
      "id": "testing/python/fixtures.py:TestAutouseDiscovery.test_two_classes_separated_autouse",
      "type": "function",
      "name": "TestAutouseDiscovery.test_two_classes_separated_autouse",
      "file": "testing/python/fixtures.py",
      "line": 1815
    },
    {
      "id": "testing/python/fixtures.py:TestAutouseDiscovery.test_setup_at_classlevel",
      "type": "function",
      "name": "TestAutouseDiscovery.test_setup_at_classlevel",
      "file": "testing/python/fixtures.py",
      "line": 1838
    },
    {
      "id": "testing/python/fixtures.py:TestAutouseDiscovery.test_setup_enabled_functionnode",
      "type": "function",
      "name": "TestAutouseDiscovery.test_setup_enabled_functionnode",
      "file": "testing/python/fixtures.py",
      "line": 1856
    },
    {
      "id": "testing/python/fixtures.py:TestAutouseDiscovery.test_callables_nocode",
      "type": "function",
      "name": "TestAutouseDiscovery.test_callables_nocode",
      "file": "testing/python/fixtures.py",
      "line": 1883
    },
    {
      "id": "testing/python/fixtures.py:TestAutouseDiscovery.test_autouse_in_conftests",
      "type": "function",
      "name": "TestAutouseDiscovery.test_autouse_in_conftests",
      "file": "testing/python/fixtures.py",
      "line": 1900
    },
    {
      "id": "testing/python/fixtures.py:TestAutouseDiscovery.test_autouse_in_module_and_two_classes",
      "type": "function",
      "name": "TestAutouseDiscovery.test_autouse_in_module_and_two_classes",
      "file": "testing/python/fixtures.py",
      "line": 1925
    },
    {
      "id": "testing/python/fixtures.py:TestAutouseManagement",
      "type": "class",
      "name": "TestAutouseManagement",
      "file": "testing/python/fixtures.py",
      "line": 1951
    },
    {
      "id": "testing/python/fixtures.py:TestAutouseManagement.test_autouse_conftest_mid_directory",
      "type": "function",
      "name": "TestAutouseManagement.test_autouse_conftest_mid_directory",
      "file": "testing/python/fixtures.py",
      "line": 1952
    },
    {
      "id": "testing/python/fixtures.py:TestAutouseManagement.test_funcarg_and_setup",
      "type": "function",
      "name": "TestAutouseManagement.test_funcarg_and_setup",
      "file": "testing/python/fixtures.py",
      "line": 1983
    },
    {
      "id": "testing/python/fixtures.py:TestAutouseManagement.test_uses_parametrized_resource",
      "type": "function",
      "name": "TestAutouseManagement.test_uses_parametrized_resource",
      "file": "testing/python/fixtures.py",
      "line": 2010
    },
    {
      "id": "testing/python/fixtures.py:TestAutouseManagement.test_session_parametrized_function",
      "type": "function",
      "name": "TestAutouseManagement.test_session_parametrized_function",
      "file": "testing/python/fixtures.py",
      "line": 2036
    },
    {
      "id": "testing/python/fixtures.py:TestAutouseManagement.test_class_function_parametrization_finalization",
      "type": "function",
      "name": "TestAutouseManagement.test_class_function_parametrization_finalization",
      "file": "testing/python/fixtures.py",
      "line": 2063
    },
    {
      "id": "testing/python/fixtures.py:TestAutouseManagement.test_scope_ordering",
      "type": "function",
      "name": "TestAutouseManagement.test_scope_ordering",
      "file": "testing/python/fixtures.py",
      "line": 2108
    },
    {
      "id": "testing/python/fixtures.py:TestAutouseManagement.test_parametrization_setup_teardown_ordering",
      "type": "function",
      "name": "TestAutouseManagement.test_parametrization_setup_teardown_ordering",
      "file": "testing/python/fixtures.py",
      "line": 2131
    },
    {
      "id": "testing/python/fixtures.py:TestAutouseManagement.test_ordering_autouse_before_explicit",
      "type": "function",
      "name": "TestAutouseManagement.test_ordering_autouse_before_explicit",
      "file": "testing/python/fixtures.py",
      "line": 2160
    },
    {
      "id": "testing/python/fixtures.py:TestAutouseManagement.test_ordering_dependencies_torndown_first",
      "type": "function",
      "name": "TestAutouseManagement.test_ordering_dependencies_torndown_first",
      "file": "testing/python/fixtures.py",
      "line": 2181
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker",
      "type": "class",
      "name": "TestFixtureMarker",
      "file": "testing/python/fixtures.py",
      "line": 2209
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_parametrize",
      "type": "function",
      "name": "TestFixtureMarker.test_parametrize",
      "file": "testing/python/fixtures.py",
      "line": 2210
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_multiple_parametrization_issue_736",
      "type": "function",
      "name": "TestFixtureMarker.test_multiple_parametrization_issue_736",
      "file": "testing/python/fixtures.py",
      "line": 2227
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_override_parametrized_fixture_issue_979",
      "type": "function",
      "name": "TestFixtureMarker.test_override_parametrized_fixture_issue_979",
      "file": "testing/python/fixtures.py",
      "line": 2249
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_scope_session",
      "type": "function",
      "name": "TestFixtureMarker.test_scope_session",
      "file": "testing/python/fixtures.py",
      "line": 2273
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_scope_session_exc",
      "type": "function",
      "name": "TestFixtureMarker.test_scope_session_exc",
      "file": "testing/python/fixtures.py",
      "line": 2297
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_scope_session_exc_two_fix",
      "type": "function",
      "name": "TestFixtureMarker.test_scope_session_exc_two_fix",
      "file": "testing/python/fixtures.py",
      "line": 2318
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_scope_exc",
      "type": "function",
      "name": "TestFixtureMarker.test_scope_exc",
      "file": "testing/python/fixtures.py",
      "line": 2344
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_scope_module_uses_session",
      "type": "function",
      "name": "TestFixtureMarker.test_scope_module_uses_session",
      "file": "testing/python/fixtures.py",
      "line": 2373
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_scope_module_and_finalizer",
      "type": "function",
      "name": "TestFixtureMarker.test_scope_module_and_finalizer",
      "file": "testing/python/fixtures.py",
      "line": 2397
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_scope_mismatch_various",
      "type": "function",
      "name": "TestFixtureMarker.test_scope_mismatch_various",
      "file": "testing/python/fixtures.py",
      "line": 2437
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_dynamic_scope",
      "type": "function",
      "name": "TestFixtureMarker.test_dynamic_scope",
      "file": "testing/python/fixtures.py",
      "line": 2464
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_dynamic_scope_bad_return",
      "type": "function",
      "name": "TestFixtureMarker.test_dynamic_scope_bad_return",
      "file": "testing/python/fixtures.py",
      "line": 2506
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_register_only_with_mark",
      "type": "function",
      "name": "TestFixtureMarker.test_register_only_with_mark",
      "file": "testing/python/fixtures.py",
      "line": 2526
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_parametrize_and_scope",
      "type": "function",
      "name": "TestFixtureMarker.test_parametrize_and_scope",
      "file": "testing/python/fixtures.py",
      "line": 2548
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_scope_mismatch",
      "type": "function",
      "name": "TestFixtureMarker.test_scope_mismatch",
      "file": "testing/python/fixtures.py",
      "line": 2568
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_parametrize_separated_order",
      "type": "function",
      "name": "TestFixtureMarker.test_parametrize_separated_order",
      "file": "testing/python/fixtures.py",
      "line": 2590
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_module_parametrized_ordering",
      "type": "function",
      "name": "TestFixtureMarker.test_module_parametrized_ordering",
      "file": "testing/python/fixtures.py",
      "line": 2611
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_dynamic_parametrized_ordering",
      "type": "function",
      "name": "TestFixtureMarker.test_dynamic_parametrized_ordering",
      "file": "testing/python/fixtures.py",
      "line": 2670
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_class_ordering",
      "type": "function",
      "name": "TestFixtureMarker.test_class_ordering",
      "file": "testing/python/fixtures.py",
      "line": 2719
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_parametrize_separated_order_higher_scope_first",
      "type": "function",
      "name": "TestFixtureMarker.test_parametrize_separated_order_higher_scope_first",
      "file": "testing/python/fixtures.py",
      "line": 2779
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_parametrized_fixture_teardown_order",
      "type": "function",
      "name": "TestFixtureMarker.test_parametrized_fixture_teardown_order",
      "file": "testing/python/fixtures.py",
      "line": 2857
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_fixture_finalizer",
      "type": "function",
      "name": "TestFixtureMarker.test_fixture_finalizer",
      "file": "testing/python/fixtures.py",
      "line": 2898
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_class_scope_with_normal_tests",
      "type": "function",
      "name": "TestFixtureMarker.test_class_scope_with_normal_tests",
      "file": "testing/python/fixtures.py",
      "line": 2933
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_request_is_clean",
      "type": "function",
      "name": "TestFixtureMarker.test_request_is_clean",
      "file": "testing/python/fixtures.py",
      "line": 2961
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_parametrize_separated_lifecycle",
      "type": "function",
      "name": "TestFixtureMarker.test_parametrize_separated_lifecycle",
      "file": "testing/python/fixtures.py",
      "line": 2977
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_parametrize_function_scoped_finalizers_called",
      "type": "function",
      "name": "TestFixtureMarker.test_parametrize_function_scoped_finalizers_called",
      "file": "testing/python/fixtures.py",
      "line": 3006
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_finalizer_order_on_parametrization",
      "type": "function",
      "name": "TestFixtureMarker.test_finalizer_order_on_parametrization",
      "file": "testing/python/fixtures.py",
      "line": 3033
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_class_scope_parametrization_ordering",
      "type": "function",
      "name": "TestFixtureMarker.test_class_scope_parametrization_ordering",
      "file": "testing/python/fixtures.py",
      "line": 3071
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_parametrize_setup_function",
      "type": "function",
      "name": "TestFixtureMarker.test_parametrize_setup_function",
      "file": "testing/python/fixtures.py",
      "line": 3110
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_fixture_marked_function_not_collected_as_test",
      "type": "function",
      "name": "TestFixtureMarker.test_fixture_marked_function_not_collected_as_test",
      "file": "testing/python/fixtures.py",
      "line": 3143
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_params_and_ids",
      "type": "function",
      "name": "TestFixtureMarker.test_params_and_ids",
      "file": "testing/python/fixtures.py",
      "line": 3160
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_params_and_ids_yieldfixture",
      "type": "function",
      "name": "TestFixtureMarker.test_params_and_ids_yieldfixture",
      "file": "testing/python/fixtures.py",
      "line": 3177
    },
    {
      "id": "testing/python/fixtures.py:TestFixtureMarker.test_deterministic_fixture_collection",
      "type": "function",
      "name": "TestFixtureMarker.test_deterministic_fixture_collection",
      "file": "testing/python/fixtures.py",
      "line": 3193
    },
    {
      "id": "testing/python/fixtures.py:TestRequestScopeAccess",
      "type": "class",
      "name": "TestRequestScopeAccess",
      "file": "testing/python/fixtures.py",
      "line": 3239
    },
    {
      "id": "testing/python/fixtures.py:TestRequestScopeAccess.test_setup",
      "type": "function",
      "name": "TestRequestScopeAccess.test_setup",
      "file": "testing/python/fixtures.py",
      "line": 3250
    },
    {
      "id": "testing/python/fixtures.py:TestRequestScopeAccess.test_funcarg",
      "type": "function",
      "name": "TestRequestScopeAccess.test_funcarg",
      "file": "testing/python/fixtures.py",
      "line": 3271
    },
    {
      "id": "testing/python/fixtures.py:TestErrors",
      "type": "class",
      "name": "TestErrors",
      "file": "testing/python/fixtures.py",
      "line": 3293
    },
    {
      "id": "testing/python/fixtures.py:TestErrors.test_subfactory_missing_funcarg",
      "type": "function",
      "name": "TestErrors.test_subfactory_missing_funcarg",
      "file": "testing/python/fixtures.py",
      "line": 3294
    },
    {
      "id": "testing/python/fixtures.py:TestErrors.test_issue498_fixture_finalizer_failing",
      "type": "function",
      "name": "TestErrors.test_issue498_fixture_finalizer_failing",
      "file": "testing/python/fixtures.py",
      "line": 3311
    },
    {
      "id": "testing/python/fixtures.py:TestErrors.test_setupfunc_missing_funcarg",
      "type": "function",
      "name": "TestErrors.test_setupfunc_missing_funcarg",
      "file": "testing/python/fixtures.py",
      "line": 3342
    },
    {
      "id": "testing/python/fixtures.py:TestShowFixtures",
      "type": "class",
      "name": "TestShowFixtures",
      "file": "testing/python/fixtures.py",
      "line": 3360
    },
    {
      "id": "testing/python/fixtures.py:TestShowFixtures.test_funcarg_compat",
      "type": "function",
      "name": "TestShowFixtures.test_funcarg_compat",
      "file": "testing/python/fixtures.py",
      "line": 3361
    },
    {
      "id": "testing/python/fixtures.py:TestShowFixtures.test_show_help",
      "type": "function",
      "name": "TestShowFixtures.test_show_help",
      "file": "testing/python/fixtures.py",
      "line": 3365
    },
    {
      "id": "testing/python/fixtures.py:TestShowFixtures.test_show_fixtures",
      "type": "function",
      "name": "TestShowFixtures.test_show_fixtures",
      "file": "testing/python/fixtures.py",
      "line": 3369
    },
    {
      "id": "testing/python/fixtures.py:TestShowFixtures.test_show_fixtures_verbose",
      "type": "function",
      "name": "TestShowFixtures.test_show_fixtures_verbose",
      "file": "testing/python/fixtures.py",
      "line": 3380
    },
    {
      "id": "testing/python/fixtures.py:TestShowFixtures.test_show_fixtures_testmodule",
      "type": "function",
      "name": "TestShowFixtures.test_show_fixtures_testmodule",
      "file": "testing/python/fixtures.py",
      "line": 3391
    },
    {
      "id": "testing/python/fixtures.py:TestShowFixtures.test_show_fixtures_conftest",
      "type": "function",
      "name": "TestShowFixtures.test_show_fixtures_conftest",
      "file": "testing/python/fixtures.py",
      "line": 3415
    },
    {
      "id": "testing/python/fixtures.py:TestShowFixtures.test_show_fixtures_trimmed_doc",
      "type": "function",
      "name": "TestShowFixtures.test_show_fixtures_trimmed_doc",
      "file": "testing/python/fixtures.py",
      "line": 3441
    },
    {
      "id": "testing/python/fixtures.py:TestShowFixtures.test_show_fixtures_indented_doc",
      "type": "function",
      "name": "TestShowFixtures.test_show_fixtures_indented_doc",
      "file": "testing/python/fixtures.py",
      "line": 3478
    },
    {
      "id": "testing/python/fixtures.py:TestShowFixtures.test_show_fixtures_indented_doc_first_line_unindented",
      "type": "function",
      "name": "TestShowFixtures.test_show_fixtures_indented_doc_first_line_unindented",
      "file": "testing/python/fixtures.py",
      "line": 3504
    },
    {
      "id": "testing/python/fixtures.py:TestShowFixtures.test_show_fixtures_indented_in_class",
      "type": "function",
      "name": "TestShowFixtures.test_show_fixtures_indented_in_class",
      "file": "testing/python/fixtures.py",
      "line": 3533
    },
    {
      "id": "testing/python/fixtures.py:TestShowFixtures.test_show_fixtures_different_files",
      "type": "function",
      "name": "TestShowFixtures.test_show_fixtures_different_files",
      "file": "testing/python/fixtures.py",
      "line": 3561
    },
    {
      "id": "testing/python/fixtures.py:TestShowFixtures.test_show_fixtures_with_same_name",
      "type": "function",
      "name": "TestShowFixtures.test_show_fixtures_with_same_name",
      "file": "testing/python/fixtures.py",
      "line": 3602
    },
    {
      "id": "testing/python/fixtures.py:TestShowFixtures.test_fixture_disallow_twice",
      "type": "function",
      "name": "TestShowFixtures.test_fixture_disallow_twice",
      "file": "testing/python/fixtures.py",
      "line": 3642
    },
    {
      "id": "testing/python/fixtures.py:TestShowFixtures.test_fixture_disallow_twice.foo",
      "type": "function",
      "name": "TestShowFixtures.test_fixture_disallow_twice.foo",
      "file": "testing/python/fixtures.py",
      "line": 3648
    },
    {
      "id": "testing/python/fixtures.py:TestContextManagerFixtureFuncs",
      "type": "class",
      "name": "TestContextManagerFixtureFuncs",
      "file": "testing/python/fixtures.py",
      "line": 3652
    },
    {
      "id": "testing/python/fixtures.py:TestContextManagerFixtureFuncs.test_simple",
      "type": "function",
      "name": "TestContextManagerFixtureFuncs.test_simple",
      "file": "testing/python/fixtures.py",
      "line": 3653
    },
    {
      "id": "testing/python/fixtures.py:TestContextManagerFixtureFuncs.test_scoped",
      "type": "function",
      "name": "TestContextManagerFixtureFuncs.test_scoped",
      "file": "testing/python/fixtures.py",
      "line": 3681
    },
    {
      "id": "testing/python/fixtures.py:TestContextManagerFixtureFuncs.test_setup_exception",
      "type": "function",
      "name": "TestContextManagerFixtureFuncs.test_setup_exception",
      "file": "testing/python/fixtures.py",
      "line": 3706
    },
    {
      "id": "testing/python/fixtures.py:TestContextManagerFixtureFuncs.test_teardown_exception",
      "type": "function",
      "name": "TestContextManagerFixtureFuncs.test_teardown_exception",
      "file": "testing/python/fixtures.py",
      "line": 3726
    },
    {
      "id": "testing/python/fixtures.py:TestContextManagerFixtureFuncs.test_yields_more_than_one",
      "type": "function",
      "name": "TestContextManagerFixtureFuncs.test_yields_more_than_one",
      "file": "testing/python/fixtures.py",
      "line": 3746
    },
    {
      "id": "testing/python/fixtures.py:TestContextManagerFixtureFuncs.test_custom_name",
      "type": "function",
      "name": "TestContextManagerFixtureFuncs.test_custom_name",
      "file": "testing/python/fixtures.py",
      "line": 3766
    },
    {
      "id": "testing/python/fixtures.py:TestParameterizedSubRequest",
      "type": "class",
      "name": "TestParameterizedSubRequest",
      "file": "testing/python/fixtures.py",
      "line": 3781
    },
    {
      "id": "testing/python/fixtures.py:TestParameterizedSubRequest.test_call_from_fixture",
      "type": "function",
      "name": "TestParameterizedSubRequest.test_call_from_fixture",
      "file": "testing/python/fixtures.py",
      "line": 3782
    },
    {
      "id": "testing/python/fixtures.py:TestParameterizedSubRequest.test_call_from_test",
      "type": "function",
      "name": "TestParameterizedSubRequest.test_call_from_test",
      "file": "testing/python/fixtures.py",
      "line": 3812
    },
    {
      "id": "testing/python/fixtures.py:TestParameterizedSubRequest.test_external_fixture",
      "type": "function",
      "name": "TestParameterizedSubRequest.test_external_fixture",
      "file": "testing/python/fixtures.py",
      "line": 3838
    },
    {
      "id": "testing/python/fixtures.py:TestParameterizedSubRequest.test_non_relative_path",
      "type": "function",
      "name": "TestParameterizedSubRequest.test_non_relative_path",
      "file": "testing/python/fixtures.py",
      "line": 3869
    },
    {
      "id": "testing/python/fixtures.py:test_pytest_fixture_setup_and_post_finalizer_hook",
      "type": "function",
      "name": "test_pytest_fixture_setup_and_post_finalizer_hook",
      "file": "testing/python/fixtures.py",
      "line": 3933
    },
    {
      "id": "testing/python/fixtures.py:TestScopeOrdering",
      "type": "class",
      "name": "TestScopeOrdering",
      "file": "testing/python/fixtures.py",
      "line": 3976
    },
    {
      "id": "testing/python/fixtures.py:TestScopeOrdering.test_func_closure_module_auto",
      "type": "function",
      "name": "TestScopeOrdering.test_func_closure_module_auto",
      "file": "testing/python/fixtures.py",
      "line": 3980
    },
    {
      "id": "testing/python/fixtures.py:TestScopeOrdering.test_func_closure_with_native_fixtures",
      "type": "function",
      "name": "TestScopeOrdering.test_func_closure_with_native_fixtures",
      "file": "testing/python/fixtures.py",
      "line": 4015
    },
    {
      "id": "testing/python/fixtures.py:TestScopeOrdering.test_func_closure_module",
      "type": "function",
      "name": "TestScopeOrdering.test_func_closure_module",
      "file": "testing/python/fixtures.py",
      "line": 4071
    },
    {
      "id": "testing/python/fixtures.py:TestScopeOrdering.test_func_closure_scopes_reordered",
      "type": "function",
      "name": "TestScopeOrdering.test_func_closure_scopes_reordered",
      "file": "testing/python/fixtures.py",
      "line": 4090
    },
    {
      "id": "testing/python/fixtures.py:TestScopeOrdering.test_func_closure_same_scope_closer_root_first",
      "type": "function",
      "name": "TestScopeOrdering.test_func_closure_same_scope_closer_root_first",
      "file": "testing/python/fixtures.py",
      "line": 4123
    },
    {
      "id": "testing/python/fixtures.py:TestScopeOrdering.test_func_closure_all_scopes_complex",
      "type": "function",
      "name": "TestScopeOrdering.test_func_closure_all_scopes_complex",
      "file": "testing/python/fixtures.py",
      "line": 4165
    },
    {
      "id": "testing/python/fixtures.py:TestScopeOrdering.test_multiple_packages",
      "type": "function",
      "name": "TestScopeOrdering.test_multiple_packages",
      "file": "testing/python/fixtures.py",
      "line": 4209
    },
    {
      "id": "testing/python/fixtures.py:TestScopeOrdering.test_class_fixture_self_instance",
      "type": "function",
      "name": "TestScopeOrdering.test_class_fixture_self_instance",
      "file": "testing/python/fixtures.py",
      "line": 4283
    },
    {
      "id": "testing/python/fixtures.py:test_call_fixture_function_error",
      "type": "function",
      "name": "test_call_fixture_function_error",
      "file": "testing/python/fixtures.py",
      "line": 4316
    },
    {
      "id": "testing/python/fixtures.py:test_call_fixture_function_error.fix",
      "type": "function",
      "name": "test_call_fixture_function_error.fix",
      "file": "testing/python/fixtures.py",
      "line": 4320
    },
    {
      "id": "testing/python/fixtures.py:test_fixture_param_shadowing",
      "type": "function",
      "name": "test_fixture_param_shadowing",
      "file": "testing/python/fixtures.py",
      "line": 4327
    },
    {
      "id": "testing/python/fixtures.py:test_fixture_named_request",
      "type": "function",
      "name": "test_fixture_named_request",
      "file": "testing/python/fixtures.py",
      "line": 4370
    },
    {
      "id": "testing/python/fixtures.py:test_indirect_fixture_does_not_break_scope",
      "type": "function",
      "name": "test_indirect_fixture_does_not_break_scope",
      "file": "testing/python/fixtures.py",
      "line": 4381
    },
    {
      "id": "testing/python/fixtures.py:test_fixture_parametrization_nparray",
      "type": "function",
      "name": "test_fixture_parametrization_nparray",
      "file": "testing/python/fixtures.py",
      "line": 4432
    },
    {
      "id": "testing/python/fixtures.py:test_fixture_arg_ordering",
      "type": "function",
      "name": "test_fixture_arg_ordering",
      "file": "testing/python/fixtures.py",
      "line": 4452
    },
    {
      "id": "testing/python/fixtures.py:test_yield_fixture_with_no_value",
      "type": "function",
      "name": "test_yield_fixture_with_no_value",
      "file": "testing/python/fixtures.py",
      "line": 4487
    },
    {
      "id": "testing/plugins_integration",
      "type": "directory",
      "name": "plugins_integration",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/plugins_integration/pytest_mock_integration.py",
      "type": "file",
      "name": "pytest_mock_integration.py",
      "file": "testing/plugins_integration/pytest_mock_integration.py",
      "line": 0
    },
    {
      "id": "testing/plugins_integration/pytest_mock_integration.py:test_mocker",
      "type": "function",
      "name": "test_mocker",
      "file": "testing/plugins_integration/pytest_mock_integration.py",
      "line": 1
    },
    {
      "id": "testing/plugins_integration/pytest_twisted_integration.py",
      "type": "file",
      "name": "pytest_twisted_integration.py",
      "file": "testing/plugins_integration/pytest_twisted_integration.py",
      "line": 0
    },
    {
      "id": "testing/plugins_integration/pytest_twisted_integration.py:sleep",
      "type": "function",
      "name": "sleep",
      "file": "testing/plugins_integration/pytest_twisted_integration.py",
      "line": 5
    },
    {
      "id": "testing/plugins_integration/pytest_twisted_integration.py:test_inlineCallbacks",
      "type": "function",
      "name": "test_inlineCallbacks",
      "file": "testing/plugins_integration/pytest_twisted_integration.py",
      "line": 12
    },
    {
      "id": "testing/plugins_integration/pytest_twisted_integration.py:test_inlineCallbacks_async",
      "type": "function",
      "name": "test_inlineCallbacks_async",
      "file": "testing/plugins_integration/pytest_twisted_integration.py",
      "line": 17
    },
    {
      "id": "testing/plugins_integration/django_settings.py",
      "type": "file",
      "name": "django_settings.py",
      "file": "testing/plugins_integration/django_settings.py",
      "line": 0
    },
    {
      "id": "testing/plugins_integration/simple_integration.py",
      "type": "file",
      "name": "simple_integration.py",
      "file": "testing/plugins_integration/simple_integration.py",
      "line": 0
    },
    {
      "id": "testing/plugins_integration/simple_integration.py:test_foo",
      "type": "function",
      "name": "test_foo",
      "file": "testing/plugins_integration/simple_integration.py",
      "line": 4
    },
    {
      "id": "testing/plugins_integration/simple_integration.py:test_bar",
      "type": "function",
      "name": "test_bar",
      "file": "testing/plugins_integration/simple_integration.py",
      "line": 9
    },
    {
      "id": "testing/plugins_integration/pytest_trio_integration.py",
      "type": "file",
      "name": "pytest_trio_integration.py",
      "file": "testing/plugins_integration/pytest_trio_integration.py",
      "line": 0
    },
    {
      "id": "testing/plugins_integration/pytest_trio_integration.py:test_sleep",
      "type": "function",
      "name": "test_sleep",
      "file": "testing/plugins_integration/pytest_trio_integration.py",
      "line": 7
    },
    {
      "id": "testing/plugins_integration/bdd_wallet.py",
      "type": "file",
      "name": "bdd_wallet.py",
      "file": "testing/plugins_integration/bdd_wallet.py",
      "line": 0
    },
    {
      "id": "testing/plugins_integration/bdd_wallet.py:test_publish",
      "type": "function",
      "name": "test_publish",
      "file": "testing/plugins_integration/bdd_wallet.py",
      "line": 10
    },
    {
      "id": "testing/plugins_integration/bdd_wallet.py:wallet",
      "type": "function",
      "name": "wallet",
      "file": "testing/plugins_integration/bdd_wallet.py",
      "line": 15
    },
    {
      "id": "testing/plugins_integration/bdd_wallet.py:wallet.Wallet",
      "type": "class",
      "name": "wallet.Wallet",
      "file": "testing/plugins_integration/bdd_wallet.py",
      "line": 16
    },
    {
      "id": "testing/plugins_integration/bdd_wallet.py:fill_wallet",
      "type": "function",
      "name": "fill_wallet",
      "file": "testing/plugins_integration/bdd_wallet.py",
      "line": 23
    },
    {
      "id": "testing/plugins_integration/bdd_wallet.py:buy_apples",
      "type": "function",
      "name": "buy_apples",
      "file": "testing/plugins_integration/bdd_wallet.py",
      "line": 28
    },
    {
      "id": "testing/plugins_integration/bdd_wallet.py:buy_bananas",
      "type": "function",
      "name": "buy_bananas",
      "file": "testing/plugins_integration/bdd_wallet.py",
      "line": 33
    },
    {
      "id": "testing/plugins_integration/bdd_wallet.py:check",
      "type": "function",
      "name": "check",
      "file": "testing/plugins_integration/bdd_wallet.py",
      "line": 38
    },
    {
      "id": "testing/plugins_integration/pytest_asyncio_integration.py",
      "type": "file",
      "name": "pytest_asyncio_integration.py",
      "file": "testing/plugins_integration/pytest_asyncio_integration.py",
      "line": 0
    },
    {
      "id": "testing/plugins_integration/pytest_asyncio_integration.py:test_sleep",
      "type": "function",
      "name": "test_sleep",
      "file": "testing/plugins_integration/pytest_asyncio_integration.py",
      "line": 7
    },
    {
      "id": "testing/plugins_integration/pytest_anyio_integration.py",
      "type": "file",
      "name": "pytest_anyio_integration.py",
      "file": "testing/plugins_integration/pytest_anyio_integration.py",
      "line": 0
    },
    {
      "id": "testing/plugins_integration/pytest_anyio_integration.py:test_sleep",
      "type": "function",
      "name": "test_sleep",
      "file": "testing/plugins_integration/pytest_anyio_integration.py",
      "line": 7
    },
    {
      "id": "testing/io",
      "type": "directory",
      "name": "io",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/io/test_saferepr.py",
      "type": "file",
      "name": "test_saferepr.py",
      "file": "testing/io/test_saferepr.py",
      "line": 0
    },
    {
      "id": "testing/io/test_saferepr.py:test_simple_repr",
      "type": "function",
      "name": "test_simple_repr",
      "file": "testing/io/test_saferepr.py",
      "line": 8
    },
    {
      "id": "testing/io/test_saferepr.py:test_maxsize",
      "type": "function",
      "name": "test_maxsize",
      "file": "testing/io/test_saferepr.py",
      "line": 13
    },
    {
      "id": "testing/io/test_saferepr.py:test_no_maxsize",
      "type": "function",
      "name": "test_no_maxsize",
      "file": "testing/io/test_saferepr.py",
      "line": 20
    },
    {
      "id": "testing/io/test_saferepr.py:test_maxsize_error_on_instance",
      "type": "function",
      "name": "test_maxsize_error_on_instance",
      "file": "testing/io/test_saferepr.py",
      "line": 27
    },
    {
      "id": "testing/io/test_saferepr.py:test_maxsize_error_on_instance.A",
      "type": "class",
      "name": "test_maxsize_error_on_instance.A",
      "file": "testing/io/test_saferepr.py",
      "line": 28
    },
    {
      "id": "testing/io/test_saferepr.py:test_maxsize_error_on_instance.A.__repr__",
      "type": "function",
      "name": "test_maxsize_error_on_instance.A.__repr__",
      "file": "testing/io/test_saferepr.py",
      "line": 29
    },
    {
      "id": "testing/io/test_saferepr.py:test_exceptions",
      "type": "function",
      "name": "test_exceptions",
      "file": "testing/io/test_saferepr.py",
      "line": 37
    },
    {
      "id": "testing/io/test_saferepr.py:test_exceptions.BrokenRepr",
      "type": "class",
      "name": "test_exceptions.BrokenRepr",
      "file": "testing/io/test_saferepr.py",
      "line": 38
    },
    {
      "id": "testing/io/test_saferepr.py:test_exceptions.BrokenRepr.__repr__",
      "type": "function",
      "name": "test_exceptions.BrokenRepr.__repr__",
      "file": "testing/io/test_saferepr.py",
      "line": 42
    },
    {
      "id": "testing/io/test_saferepr.py:test_exceptions.BrokenReprException",
      "type": "class",
      "name": "test_exceptions.BrokenReprException",
      "file": "testing/io/test_saferepr.py",
      "line": 45
    },
    {
      "id": "testing/io/test_saferepr.py:test_baseexception",
      "type": "function",
      "name": "test_baseexception",
      "file": "testing/io/test_saferepr.py",
      "line": 68
    },
    {
      "id": "testing/io/test_saferepr.py:test_baseexception.RaisingOnStrRepr",
      "type": "class",
      "name": "test_baseexception.RaisingOnStrRepr",
      "file": "testing/io/test_saferepr.py",
      "line": 71
    },
    {
      "id": "testing/io/test_saferepr.py:test_baseexception.RaisingOnStrRepr.raise_exc",
      "type": "function",
      "name": "test_baseexception.RaisingOnStrRepr.raise_exc",
      "file": "testing/io/test_saferepr.py",
      "line": 75
    },
    {
      "id": "testing/io/test_saferepr.py:test_baseexception.RaisingOnStrRepr.__str__",
      "type": "function",
      "name": "test_baseexception.RaisingOnStrRepr.__str__",
      "file": "testing/io/test_saferepr.py",
      "line": 84
    },
    {
      "id": "testing/io/test_saferepr.py:test_baseexception.RaisingOnStrRepr.__repr__",
      "type": "function",
      "name": "test_baseexception.RaisingOnStrRepr.__repr__",
      "file": "testing/io/test_saferepr.py",
      "line": 87
    },
    {
      "id": "testing/io/test_saferepr.py:test_baseexception.BrokenObj",
      "type": "class",
      "name": "test_baseexception.BrokenObj",
      "file": "testing/io/test_saferepr.py",
      "line": 90
    },
    {
      "id": "testing/io/test_saferepr.py:test_baseexception.BrokenObj.__repr__",
      "type": "function",
      "name": "test_baseexception.BrokenObj.__repr__",
      "file": "testing/io/test_saferepr.py",
      "line": 94
    },
    {
      "id": "testing/io/test_saferepr.py:test_buggy_builtin_repr",
      "type": "function",
      "name": "test_buggy_builtin_repr",
      "file": "testing/io/test_saferepr.py",
      "line": 131
    },
    {
      "id": "testing/io/test_saferepr.py:test_buggy_builtin_repr.int",
      "type": "class",
      "name": "test_buggy_builtin_repr.int",
      "file": "testing/io/test_saferepr.py",
      "line": 135
    },
    {
      "id": "testing/io/test_saferepr.py:test_buggy_builtin_repr.int.__repr__",
      "type": "function",
      "name": "test_buggy_builtin_repr.int.__repr__",
      "file": "testing/io/test_saferepr.py",
      "line": 136
    },
    {
      "id": "testing/io/test_saferepr.py:test_big_repr",
      "type": "function",
      "name": "test_big_repr",
      "file": "testing/io/test_saferepr.py",
      "line": 142
    },
    {
      "id": "testing/io/test_saferepr.py:test_repr_on_newstyle",
      "type": "function",
      "name": "test_repr_on_newstyle",
      "file": "testing/io/test_saferepr.py",
      "line": 148
    },
    {
      "id": "testing/io/test_saferepr.py:test_repr_on_newstyle.Function",
      "type": "class",
      "name": "test_repr_on_newstyle.Function",
      "file": "testing/io/test_saferepr.py",
      "line": 149
    },
    {
      "id": "testing/io/test_saferepr.py:test_repr_on_newstyle.Function.__repr__",
      "type": "function",
      "name": "test_repr_on_newstyle.Function.__repr__",
      "file": "testing/io/test_saferepr.py",
      "line": 150
    },
    {
      "id": "testing/io/test_saferepr.py:test_unicode",
      "type": "function",
      "name": "test_unicode",
      "file": "testing/io/test_saferepr.py",
      "line": 156
    },
    {
      "id": "testing/io/test_saferepr.py:test_pformat_dispatch",
      "type": "function",
      "name": "test_pformat_dispatch",
      "file": "testing/io/test_saferepr.py",
      "line": 162
    },
    {
      "id": "testing/io/test_saferepr.py:test_broken_getattribute",
      "type": "function",
      "name": "test_broken_getattribute",
      "file": "testing/io/test_saferepr.py",
      "line": 168
    },
    {
      "id": "testing/io/test_saferepr.py:test_broken_getattribute.SomeClass",
      "type": "class",
      "name": "test_broken_getattribute.SomeClass",
      "file": "testing/io/test_saferepr.py",
      "line": 173
    },
    {
      "id": "testing/io/test_saferepr.py:test_broken_getattribute.SomeClass.__getattribute__",
      "type": "function",
      "name": "test_broken_getattribute.SomeClass.__getattribute__",
      "file": "testing/io/test_saferepr.py",
      "line": 174
    },
    {
      "id": "testing/io/test_saferepr.py:test_broken_getattribute.SomeClass.__repr__",
      "type": "function",
      "name": "test_broken_getattribute.SomeClass.__repr__",
      "file": "testing/io/test_saferepr.py",
      "line": 177
    },
    {
      "id": "testing/io/test_saferepr.py:test_saferepr_unlimited",
      "type": "function",
      "name": "test_saferepr_unlimited",
      "file": "testing/io/test_saferepr.py",
      "line": 185
    },
    {
      "id": "testing/io/test_saferepr.py:test_saferepr_unlimited_exc",
      "type": "function",
      "name": "test_saferepr_unlimited_exc",
      "file": "testing/io/test_saferepr.py",
      "line": 195
    },
    {
      "id": "testing/io/test_saferepr.py:test_saferepr_unlimited_exc.A",
      "type": "class",
      "name": "test_saferepr_unlimited_exc.A",
      "file": "testing/io/test_saferepr.py",
      "line": 196
    },
    {
      "id": "testing/io/test_saferepr.py:test_saferepr_unlimited_exc.A.__repr__",
      "type": "function",
      "name": "test_saferepr_unlimited_exc.A.__repr__",
      "file": "testing/io/test_saferepr.py",
      "line": 197
    },
    {
      "id": "testing/io/test_wcwidth.py",
      "type": "file",
      "name": "test_wcwidth.py",
      "file": "testing/io/test_wcwidth.py",
      "line": 0
    },
    {
      "id": "testing/io/test_wcwidth.py:test_wcwidth",
      "type": "function",
      "name": "test_wcwidth",
      "file": "testing/io/test_wcwidth.py",
      "line": 21
    },
    {
      "id": "testing/io/test_wcwidth.py:test_wcswidth",
      "type": "function",
      "name": "test_wcswidth",
      "file": "testing/io/test_wcwidth.py",
      "line": 37
    },
    {
      "id": "testing/io/test_terminalwriter.py",
      "type": "file",
      "name": "test_terminalwriter.py",
      "file": "testing/io/test_terminalwriter.py",
      "line": 0
    },
    {
      "id": "testing/io/test_terminalwriter.py:test_terminal_width_COLUMNS",
      "type": "function",
      "name": "test_terminal_width_COLUMNS",
      "file": "testing/io/test_terminalwriter.py",
      "line": 18
    },
    {
      "id": "testing/io/test_terminalwriter.py:test_terminalwriter_width_bogus",
      "type": "function",
      "name": "test_terminalwriter_width_bogus",
      "file": "testing/io/test_terminalwriter.py",
      "line": 24
    },
    {
      "id": "testing/io/test_terminalwriter.py:test_terminalwriter_computes_width",
      "type": "function",
      "name": "test_terminalwriter_computes_width",
      "file": "testing/io/test_terminalwriter.py",
      "line": 31
    },
    {
      "id": "testing/io/test_terminalwriter.py:test_terminalwriter_dumb_term_no_markup",
      "type": "function",
      "name": "test_terminalwriter_dumb_term_no_markup",
      "file": "testing/io/test_terminalwriter.py",
      "line": 37
    },
    {
      "id": "testing/io/test_terminalwriter.py:test_terminalwriter_dumb_term_no_markup.MyFile",
      "type": "class",
      "name": "test_terminalwriter_dumb_term_no_markup.MyFile",
      "file": "testing/io/test_terminalwriter.py",
      "line": 40
    },
    {
      "id": "testing/io/test_terminalwriter.py:test_terminalwriter_dumb_term_no_markup.MyFile.isatty",
      "type": "function",
      "name": "test_terminalwriter_dumb_term_no_markup.MyFile.isatty",
      "file": "testing/io/test_terminalwriter.py",
      "line": 43
    },
    {
      "id": "testing/io/test_terminalwriter.py:test_terminalwriter_not_unicode",
      "type": "function",
      "name": "test_terminalwriter_not_unicode",
      "file": "testing/io/test_terminalwriter.py",
      "line": 53
    },
    {
      "id": "testing/io/test_terminalwriter.py:TestTerminalWriter",
      "type": "class",
      "name": "TestTerminalWriter",
      "file": "testing/io/test_terminalwriter.py",
      "line": 65
    },
    {
      "id": "testing/io/test_terminalwriter.py:TestTerminalWriter.tw",
      "type": "function",
      "name": "TestTerminalWriter.tw",
      "file": "testing/io/test_terminalwriter.py",
      "line": 67
    },
    {
      "id": "testing/io/test_terminalwriter.py:TestTerminalWriter.tw.getlines",
      "type": "function",
      "name": "TestTerminalWriter.tw.getlines",
      "file": "testing/io/test_terminalwriter.py",
      "line": 84
    },
    {
      "id": "testing/io/test_terminalwriter.py:TestTerminalWriter.test_line",
      "type": "function",
      "name": "TestTerminalWriter.test_line",
      "file": "testing/io/test_terminalwriter.py",
      "line": 94
    },
    {
      "id": "testing/io/test_terminalwriter.py:TestTerminalWriter.test_line_unicode",
      "type": "function",
      "name": "TestTerminalWriter.test_line_unicode",
      "file": "testing/io/test_terminalwriter.py",
      "line": 100
    },
    {
      "id": "testing/io/test_terminalwriter.py:TestTerminalWriter.test_sep_no_title",
      "type": "function",
      "name": "TestTerminalWriter.test_sep_no_title",
      "file": "testing/io/test_terminalwriter.py",
      "line": 106
    },
    {
      "id": "testing/io/test_terminalwriter.py:TestTerminalWriter.test_sep_with_title",
      "type": "function",
      "name": "TestTerminalWriter.test_sep_with_title",
      "file": "testing/io/test_terminalwriter.py",
      "line": 112
    },
    {
      "id": "testing/io/test_terminalwriter.py:TestTerminalWriter.test_sep_longer_than_width",
      "type": "function",
      "name": "TestTerminalWriter.test_sep_longer_than_width",
      "file": "testing/io/test_terminalwriter.py",
      "line": 118
    },
    {
      "id": "testing/io/test_terminalwriter.py:TestTerminalWriter.test_markup",
      "type": "function",
      "name": "TestTerminalWriter.test_markup",
      "file": "testing/io/test_terminalwriter.py",
      "line": 127
    },
    {
      "id": "testing/io/test_terminalwriter.py:TestTerminalWriter.test_markup_bad",
      "type": "function",
      "name": "TestTerminalWriter.test_markup_bad",
      "file": "testing/io/test_terminalwriter.py",
      "line": 131
    },
    {
      "id": "testing/io/test_terminalwriter.py:TestTerminalWriter.test_line_write_markup",
      "type": "function",
      "name": "TestTerminalWriter.test_line_write_markup",
      "file": "testing/io/test_terminalwriter.py",
      "line": 137
    },
    {
      "id": "testing/io/test_terminalwriter.py:TestTerminalWriter.test_attr_fullwidth",
      "type": "function",
      "name": "TestTerminalWriter.test_attr_fullwidth",
      "file": "testing/io/test_terminalwriter.py",
      "line": 146
    },
    {
      "id": "testing/io/test_terminalwriter.py:test_attr_hasmarkup",
      "type": "function",
      "name": "test_attr_hasmarkup",
      "file": "testing/io/test_terminalwriter.py",
      "line": 155
    },
    {
      "id": "testing/io/test_terminalwriter.py:assert_color_set",
      "type": "function",
      "name": "assert_color_set",
      "file": "testing/io/test_terminalwriter.py",
      "line": 167
    },
    {
      "id": "testing/io/test_terminalwriter.py:assert_color_not_set",
      "type": "function",
      "name": "assert_color_not_set",
      "file": "testing/io/test_terminalwriter.py",
      "line": 178
    },
    {
      "id": "testing/io/test_terminalwriter.py:test_should_do_markup_PY_COLORS_eq_1",
      "type": "function",
      "name": "test_should_do_markup_PY_COLORS_eq_1",
      "file": "testing/io/test_terminalwriter.py",
      "line": 188
    },
    {
      "id": "testing/io/test_terminalwriter.py:test_should_not_do_markup_PY_COLORS_eq_0",
      "type": "function",
      "name": "test_should_not_do_markup_PY_COLORS_eq_0",
      "file": "testing/io/test_terminalwriter.py",
      "line": 193
    },
    {
      "id": "testing/io/test_terminalwriter.py:test_should_not_do_markup_NO_COLOR",
      "type": "function",
      "name": "test_should_not_do_markup_NO_COLOR",
      "file": "testing/io/test_terminalwriter.py",
      "line": 198
    },
    {
      "id": "testing/io/test_terminalwriter.py:test_should_do_markup_FORCE_COLOR",
      "type": "function",
      "name": "test_should_do_markup_FORCE_COLOR",
      "file": "testing/io/test_terminalwriter.py",
      "line": 203
    },
    {
      "id": "testing/io/test_terminalwriter.py:test_should_not_do_markup_NO_COLOR_and_FORCE_COLOR",
      "type": "function",
      "name": "test_should_not_do_markup_NO_COLOR_and_FORCE_COLOR",
      "file": "testing/io/test_terminalwriter.py",
      "line": 208
    },
    {
      "id": "testing/io/test_terminalwriter.py:TestTerminalWriterLineWidth",
      "type": "class",
      "name": "TestTerminalWriterLineWidth",
      "file": "testing/io/test_terminalwriter.py",
      "line": 216
    },
    {
      "id": "testing/io/test_terminalwriter.py:TestTerminalWriterLineWidth.test_init",
      "type": "function",
      "name": "TestTerminalWriterLineWidth.test_init",
      "file": "testing/io/test_terminalwriter.py",
      "line": 217
    },
    {
      "id": "testing/io/test_terminalwriter.py:TestTerminalWriterLineWidth.test_update",
      "type": "function",
      "name": "TestTerminalWriterLineWidth.test_update",
      "file": "testing/io/test_terminalwriter.py",
      "line": 221
    },
    {
      "id": "testing/io/test_terminalwriter.py:TestTerminalWriterLineWidth.test_update_with_newline",
      "type": "function",
      "name": "TestTerminalWriterLineWidth.test_update_with_newline",
      "file": "testing/io/test_terminalwriter.py",
      "line": 226
    },
    {
      "id": "testing/io/test_terminalwriter.py:TestTerminalWriterLineWidth.test_update_with_wide_text",
      "type": "function",
      "name": "TestTerminalWriterLineWidth.test_update_with_wide_text",
      "file": "testing/io/test_terminalwriter.py",
      "line": 231
    },
    {
      "id": "testing/io/test_terminalwriter.py:TestTerminalWriterLineWidth.test_composed",
      "type": "function",
      "name": "TestTerminalWriterLineWidth.test_composed",
      "file": "testing/io/test_terminalwriter.py",
      "line": 236
    },
    {
      "id": "testing/io/test_terminalwriter.py:TestTerminalWriterLineWidth.test_combining",
      "type": "function",
      "name": "TestTerminalWriterLineWidth.test_combining",
      "file": "testing/io/test_terminalwriter.py",
      "line": 243
    },
    {
      "id": "testing/io/test_terminalwriter.py:test_code_highlight",
      "type": "function",
      "name": "test_code_highlight",
      "file": "testing/io/test_terminalwriter.py",
      "line": 280
    },
    {
      "id": "testing/code",
      "type": "directory",
      "name": "code",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/code/test_excinfo.py",
      "type": "file",
      "name": "test_excinfo.py",
      "file": "testing/code/test_excinfo.py",
      "line": 0
    },
    {
      "id": "testing/code/test_excinfo.py:limited_recursion_depth",
      "type": "function",
      "name": "limited_recursion_depth",
      "file": "testing/code/test_excinfo.py",
      "line": 32
    },
    {
      "id": "testing/code/test_excinfo.py:test_excinfo_simple",
      "type": "function",
      "name": "test_excinfo_simple",
      "file": "testing/code/test_excinfo.py",
      "line": 39
    },
    {
      "id": "testing/code/test_excinfo.py:test_excinfo_from_exc_info_simple",
      "type": "function",
      "name": "test_excinfo_from_exc_info_simple",
      "file": "testing/code/test_excinfo.py",
      "line": 47
    },
    {
      "id": "testing/code/test_excinfo.py:test_excinfo_from_exception_simple",
      "type": "function",
      "name": "test_excinfo_from_exception_simple",
      "file": "testing/code/test_excinfo.py",
      "line": 56
    },
    {
      "id": "testing/code/test_excinfo.py:test_excinfo_from_exception_missing_traceback_assertion",
      "type": "function",
      "name": "test_excinfo_from_exception_missing_traceback_assertion",
      "file": "testing/code/test_excinfo.py",
      "line": 65
    },
    {
      "id": "testing/code/test_excinfo.py:test_excinfo_getstatement",
      "type": "function",
      "name": "test_excinfo_getstatement",
      "file": "testing/code/test_excinfo.py",
      "line": 70
    },
    {
      "id": "testing/code/test_excinfo.py:test_excinfo_getstatement.g",
      "type": "function",
      "name": "test_excinfo_getstatement.g",
      "file": "testing/code/test_excinfo.py",
      "line": 71
    },
    {
      "id": "testing/code/test_excinfo.py:test_excinfo_getstatement.f",
      "type": "function",
      "name": "test_excinfo_getstatement.f",
      "file": "testing/code/test_excinfo.py",
      "line": 74
    },
    {
      "id": "testing/code/test_excinfo.py:f",
      "type": "function",
      "name": "f",
      "file": "testing/code/test_excinfo.py",
      "line": 97
    },
    {
      "id": "testing/code/test_excinfo.py:g",
      "type": "function",
      "name": "g",
      "file": "testing/code/test_excinfo.py",
      "line": 103
    },
    {
      "id": "testing/code/test_excinfo.py:h",
      "type": "function",
      "name": "h",
      "file": "testing/code/test_excinfo.py",
      "line": 110
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h",
      "type": "class",
      "name": "TestTraceback_f_g_h",
      "file": "testing/code/test_excinfo.py",
      "line": 116
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.setup_method",
      "type": "function",
      "name": "TestTraceback_f_g_h.setup_method",
      "file": "testing/code/test_excinfo.py",
      "line": 117
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_entries",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_traceback_entries",
      "file": "testing/code/test_excinfo.py",
      "line": 123
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_entry_getsource",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_traceback_entry_getsource",
      "file": "testing/code/test_excinfo.py",
      "line": 136
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_entry_getsource_in_construct",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_traceback_entry_getsource_in_construct",
      "file": "testing/code/test_excinfo.py",
      "line": 142
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_entry_getsource_in_construct.xyz",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_traceback_entry_getsource_in_construct.xyz",
      "file": "testing/code/test_excinfo.py",
      "line": 143
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_cut",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_traceback_cut",
      "file": "testing/code/test_excinfo.py",
      "line": 166
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_cut_excludepath",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_traceback_cut_excludepath",
      "file": "testing/code/test_excinfo.py",
      "line": 176
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_filter",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_traceback_filter",
      "file": "testing/code/test_excinfo.py",
      "line": 187
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_filter_selective",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_traceback_filter_selective",
      "file": "testing/code/test_excinfo.py",
      "line": 201
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_filter_selective.f",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_traceback_filter_selective.f",
      "file": "testing/code/test_excinfo.py",
      "line": 202
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_filter_selective.g",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_traceback_filter_selective.g",
      "file": "testing/code/test_excinfo.py",
      "line": 207
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_filter_selective.h",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_traceback_filter_selective.h",
      "file": "testing/code/test_excinfo.py",
      "line": 213
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_recursion_index",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_traceback_recursion_index",
      "file": "testing/code/test_excinfo.py",
      "line": 230
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_recursion_index.f",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_traceback_recursion_index.f",
      "file": "testing/code/test_excinfo.py",
      "line": 231
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_only_specific_recursion_errors",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_traceback_only_specific_recursion_errors",
      "file": "testing/code/test_excinfo.py",
      "line": 241
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_only_specific_recursion_errors.f",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_traceback_only_specific_recursion_errors.f",
      "file": "testing/code/test_excinfo.py",
      "line": 242
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_no_recursion_index",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_traceback_no_recursion_index",
      "file": "testing/code/test_excinfo.py",
      "line": 252
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_no_recursion_index.do_stuff",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_traceback_no_recursion_index.do_stuff",
      "file": "testing/code/test_excinfo.py",
      "line": 253
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_no_recursion_index.reraise_me",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_traceback_no_recursion_index.reraise_me",
      "file": "testing/code/test_excinfo.py",
      "line": 256
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_no_recursion_index.f",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_traceback_no_recursion_index.f",
      "file": "testing/code/test_excinfo.py",
      "line": 263
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_messy_recursion",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_traceback_messy_recursion",
      "file": "testing/code/test_excinfo.py",
      "line": 275
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_messy_recursion.log",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_traceback_messy_recursion.log",
      "file": "testing/code/test_excinfo.py",
      "line": 279
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_messy_recursion.fail",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_traceback_messy_recursion.fail",
      "file": "testing/code/test_excinfo.py",
      "line": 285
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_getreprcrash",
      "file": "testing/code/test_excinfo.py",
      "line": 293
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash.i",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_getreprcrash.i",
      "file": "testing/code/test_excinfo.py",
      "line": 294
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash.h",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_getreprcrash.h",
      "file": "testing/code/test_excinfo.py",
      "line": 298
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash.g",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_getreprcrash.g",
      "file": "testing/code/test_excinfo.py",
      "line": 301
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash.f",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_getreprcrash.f",
      "file": "testing/code/test_excinfo.py",
      "line": 305
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash_empty",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_getreprcrash_empty",
      "file": "testing/code/test_excinfo.py",
      "line": 315
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash_empty.g",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_getreprcrash_empty.g",
      "file": "testing/code/test_excinfo.py",
      "line": 316
    },
    {
      "id": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash_empty.f",
      "type": "function",
      "name": "TestTraceback_f_g_h.test_getreprcrash_empty.f",
      "file": "testing/code/test_excinfo.py",
      "line": 320
    },
    {
      "id": "testing/code/test_excinfo.py:test_excinfo_exconly",
      "type": "function",
      "name": "test_excinfo_exconly",
      "file": "testing/code/test_excinfo.py",
      "line": 328
    },
    {
      "id": "testing/code/test_excinfo.py:test_excinfo_repr_str",
      "type": "function",
      "name": "test_excinfo_repr_str",
      "file": "testing/code/test_excinfo.py",
      "line": 338
    },
    {
      "id": "testing/code/test_excinfo.py:test_excinfo_repr_str.CustomException",
      "type": "class",
      "name": "test_excinfo_repr_str.CustomException",
      "file": "testing/code/test_excinfo.py",
      "line": 343
    },
    {
      "id": "testing/code/test_excinfo.py:test_excinfo_repr_str.CustomException.__repr__",
      "type": "function",
      "name": "test_excinfo_repr_str.CustomException.__repr__",
      "file": "testing/code/test_excinfo.py",
      "line": 344
    },
    {
      "id": "testing/code/test_excinfo.py:test_excinfo_repr_str.raises",
      "type": "function",
      "name": "test_excinfo_repr_str.raises",
      "file": "testing/code/test_excinfo.py",
      "line": 347
    },
    {
      "id": "testing/code/test_excinfo.py:test_excinfo_for_later",
      "type": "function",
      "name": "test_excinfo_for_later",
      "file": "testing/code/test_excinfo.py",
      "line": 355
    },
    {
      "id": "testing/code/test_excinfo.py:test_excinfo_errisinstance",
      "type": "function",
      "name": "test_excinfo_errisinstance",
      "file": "testing/code/test_excinfo.py",
      "line": 361
    },
    {
      "id": "testing/code/test_excinfo.py:test_excinfo_no_sourcecode",
      "type": "function",
      "name": "test_excinfo_no_sourcecode",
      "file": "testing/code/test_excinfo.py",
      "line": 366
    },
    {
      "id": "testing/code/test_excinfo.py:test_excinfo_no_python_sourcecode",
      "type": "function",
      "name": "test_excinfo_no_python_sourcecode",
      "file": "testing/code/test_excinfo.py",
      "line": 375
    },
    {
      "id": "testing/code/test_excinfo.py:test_entrysource_Queue_example",
      "type": "function",
      "name": "test_entrysource_Queue_example",
      "file": "testing/code/test_excinfo.py",
      "line": 391
    },
    {
      "id": "testing/code/test_excinfo.py:test_codepath_Queue_example",
      "type": "function",
      "name": "test_codepath_Queue_example",
      "file": "testing/code/test_excinfo.py",
      "line": 403
    },
    {
      "id": "testing/code/test_excinfo.py:test_match_succeeds",
      "type": "function",
      "name": "test_match_succeeds",
      "file": "testing/code/test_excinfo.py",
      "line": 415
    },
    {
      "id": "testing/code/test_excinfo.py:test_match_raises_error",
      "type": "function",
      "name": "test_match_raises_error",
      "file": "testing/code/test_excinfo.py",
      "line": 421
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "type": "class",
      "name": "TestFormattedExcinfo",
      "file": "testing/code/test_excinfo.py",
      "line": 447
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.importasmod",
      "type": "function",
      "name": "TestFormattedExcinfo.importasmod",
      "file": "testing/code/test_excinfo.py",
      "line": 449
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.importasmod.importasmod",
      "type": "function",
      "name": "TestFormattedExcinfo.importasmod.importasmod",
      "file": "testing/code/test_excinfo.py",
      "line": 450
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_source",
      "type": "function",
      "name": "TestFormattedExcinfo.test_repr_source",
      "file": "testing/code/test_excinfo.py",
      "line": 460
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_source_out_of_bounds",
      "type": "function",
      "name": "TestFormattedExcinfo.test_repr_source_out_of_bounds",
      "file": "testing/code/test_excinfo.py",
      "line": 474
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_source_excinfo",
      "type": "function",
      "name": "TestFormattedExcinfo.test_repr_source_excinfo",
      "file": "testing/code/test_excinfo.py",
      "line": 492
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_source_excinfo.f",
      "type": "function",
      "name": "TestFormattedExcinfo.test_repr_source_excinfo.f",
      "file": "testing/code/test_excinfo.py",
      "line": 496
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_source_not_existing",
      "type": "function",
      "name": "TestFormattedExcinfo.test_repr_source_not_existing",
      "file": "testing/code/test_excinfo.py",
      "line": 518
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_many_line_source_not_existing",
      "type": "function",
      "name": "TestFormattedExcinfo.test_repr_many_line_source_not_existing",
      "file": "testing/code/test_excinfo.py",
      "line": 529
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_source_failing_fullsource",
      "type": "function",
      "name": "TestFormattedExcinfo.test_repr_source_failing_fullsource",
      "file": "testing/code/test_excinfo.py",
      "line": 547
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local",
      "type": "function",
      "name": "TestFormattedExcinfo.test_repr_local",
      "file": "testing/code/test_excinfo.py",
      "line": 562
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_with_error",
      "type": "function",
      "name": "TestFormattedExcinfo.test_repr_local_with_error",
      "file": "testing/code/test_excinfo.py",
      "line": 573
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_with_error.ObjWithErrorInRepr",
      "type": "class",
      "name": "TestFormattedExcinfo.test_repr_local_with_error.ObjWithErrorInRepr",
      "file": "testing/code/test_excinfo.py",
      "line": 574
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_with_error.ObjWithErrorInRepr.__repr__",
      "type": "function",
      "name": "TestFormattedExcinfo.test_repr_local_with_error.ObjWithErrorInRepr.__repr__",
      "file": "testing/code/test_excinfo.py",
      "line": 575
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_with_exception_in_class_property",
      "type": "function",
      "name": "TestFormattedExcinfo.test_repr_local_with_exception_in_class_property",
      "file": "testing/code/test_excinfo.py",
      "line": 586
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_with_exception_in_class_property.ExceptionWithBrokenClass",
      "type": "class",
      "name": "TestFormattedExcinfo.test_repr_local_with_exception_in_class_property.ExceptionWithBrokenClass",
      "file": "testing/code/test_excinfo.py",
      "line": 587
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_with_exception_in_class_property.ExceptionWithBrokenClass.__class__",
      "type": "function",
      "name": "TestFormattedExcinfo.test_repr_local_with_exception_in_class_property.ExceptionWithBrokenClass.__class__",
      "file": "testing/code/test_excinfo.py",
      "line": 590
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_with_exception_in_class_property.ObjWithErrorInRepr",
      "type": "class",
      "name": "TestFormattedExcinfo.test_repr_local_with_exception_in_class_property.ObjWithErrorInRepr",
      "file": "testing/code/test_excinfo.py",
      "line": 593
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_with_exception_in_class_property.ObjWithErrorInRepr.__repr__",
      "type": "function",
      "name": "TestFormattedExcinfo.test_repr_local_with_exception_in_class_property.ObjWithErrorInRepr.__repr__",
      "file": "testing/code/test_excinfo.py",
      "line": 594
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_truncated",
      "type": "function",
      "name": "TestFormattedExcinfo.test_repr_local_truncated",
      "file": "testing/code/test_excinfo.py",
      "line": 605
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_tracebackentry_lines",
      "type": "function",
      "name": "TestFormattedExcinfo.test_repr_tracebackentry_lines",
      "file": "testing/code/test_excinfo.py",
      "line": 619
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_tracebackentry_lines2",
      "type": "function",
      "name": "TestFormattedExcinfo.test_repr_tracebackentry_lines2",
      "file": "testing/code/test_excinfo.py",
      "line": 652
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_tracebackentry_lines_var_kw_args",
      "type": "function",
      "name": "TestFormattedExcinfo.test_repr_tracebackentry_lines_var_kw_args",
      "file": "testing/code/test_excinfo.py",
      "line": 679
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_tracebackentry_short",
      "type": "function",
      "name": "TestFormattedExcinfo.test_repr_tracebackentry_short",
      "file": "testing/code/test_excinfo.py",
      "line": 703
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_tracebackentry_no",
      "type": "function",
      "name": "TestFormattedExcinfo.test_repr_tracebackentry_no",
      "file": "testing/code/test_excinfo.py",
      "line": 732
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_traceback_tbfilter",
      "type": "function",
      "name": "TestFormattedExcinfo.test_repr_traceback_tbfilter",
      "file": "testing/code/test_excinfo.py",
      "line": 751
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_traceback_short_no_source",
      "type": "function",
      "name": "TestFormattedExcinfo.test_traceback_short_no_source",
      "file": "testing/code/test_excinfo.py",
      "line": 768
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_traceback_and_excinfo",
      "type": "function",
      "name": "TestFormattedExcinfo.test_repr_traceback_and_excinfo",
      "file": "testing/code/test_excinfo.py",
      "line": 793
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_traceback_with_invalid_cwd",
      "type": "function",
      "name": "TestFormattedExcinfo.test_repr_traceback_with_invalid_cwd",
      "file": "testing/code/test_excinfo.py",
      "line": 821
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_traceback_with_invalid_cwd.raiseos",
      "type": "function",
      "name": "TestFormattedExcinfo.test_repr_traceback_with_invalid_cwd.raiseos",
      "file": "testing/code/test_excinfo.py",
      "line": 838
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_excinfo_addouterr",
      "type": "function",
      "name": "TestFormattedExcinfo.test_repr_excinfo_addouterr",
      "file": "testing/code/test_excinfo.py",
      "line": 872
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_excinfo_reprcrash",
      "type": "function",
      "name": "TestFormattedExcinfo.test_repr_excinfo_reprcrash",
      "file": "testing/code/test_excinfo.py",
      "line": 886
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_traceback_recursion",
      "type": "function",
      "name": "TestFormattedExcinfo.test_repr_traceback_recursion",
      "file": "testing/code/test_excinfo.py",
      "line": 901
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_reprexcinfo_getrepr",
      "type": "function",
      "name": "TestFormattedExcinfo.test_reprexcinfo_getrepr",
      "file": "testing/code/test_excinfo.py",
      "line": 920
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_reprexcinfo_unicode",
      "type": "function",
      "name": "TestFormattedExcinfo.test_reprexcinfo_unicode",
      "file": "testing/code/test_excinfo.py",
      "line": 941
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_reprexcinfo_unicode.MyRepr",
      "type": "class",
      "name": "TestFormattedExcinfo.test_reprexcinfo_unicode.MyRepr",
      "file": "testing/code/test_excinfo.py",
      "line": 944
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_reprexcinfo_unicode.MyRepr.toterminal",
      "type": "function",
      "name": "TestFormattedExcinfo.test_reprexcinfo_unicode.MyRepr.toterminal",
      "file": "testing/code/test_excinfo.py",
      "line": 945
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_toterminal_long",
      "type": "function",
      "name": "TestFormattedExcinfo.test_toterminal_long",
      "file": "testing/code/test_excinfo.py",
      "line": 951
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_toterminal_long_missing_source",
      "type": "function",
      "name": "TestFormattedExcinfo.test_toterminal_long_missing_source",
      "file": "testing/code/test_excinfo.py",
      "line": 982
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_toterminal_long_incomplete_source",
      "type": "function",
      "name": "TestFormattedExcinfo.test_toterminal_long_incomplete_source",
      "file": "testing/code/test_excinfo.py",
      "line": 1014
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_toterminal_long_filenames",
      "type": "function",
      "name": "TestFormattedExcinfo.test_toterminal_long_filenames",
      "file": "testing/code/test_excinfo.py",
      "line": 1046
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_format_excinfo",
      "type": "function",
      "name": "TestFormattedExcinfo.test_format_excinfo",
      "file": "testing/code/test_excinfo.py",
      "line": 1093
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_format_excinfo.bar",
      "type": "function",
      "name": "TestFormattedExcinfo.test_format_excinfo.bar",
      "file": "testing/code/test_excinfo.py",
      "line": 1094
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_format_excinfo.foo",
      "type": "function",
      "name": "TestFormattedExcinfo.test_format_excinfo.foo",
      "file": "testing/code/test_excinfo.py",
      "line": 1097
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_traceback_repr_style",
      "type": "function",
      "name": "TestFormattedExcinfo.test_traceback_repr_style",
      "file": "testing/code/test_excinfo.py",
      "line": 1110
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_exc_chain_repr",
      "type": "function",
      "name": "TestFormattedExcinfo.test_exc_chain_repr",
      "file": "testing/code/test_excinfo.py",
      "line": 1157
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_exc_repr_chain_suppression",
      "type": "function",
      "name": "TestFormattedExcinfo.test_exc_repr_chain_suppression",
      "file": "testing/code/test_excinfo.py",
      "line": 1242
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_exc_chain_repr_without_traceback",
      "type": "function",
      "name": "TestFormattedExcinfo.test_exc_chain_repr_without_traceback",
      "file": "testing/code/test_excinfo.py",
      "line": 1296
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_exc_chain_repr_cycle",
      "type": "function",
      "name": "TestFormattedExcinfo.test_exc_chain_repr_cycle",
      "file": "testing/code/test_excinfo.py",
      "line": 1341
    },
    {
      "id": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_exec_type_error_filter",
      "type": "function",
      "name": "TestFormattedExcinfo.test_exec_type_error_filter",
      "file": "testing/code/test_excinfo.py",
      "line": 1383
    },
    {
      "id": "testing/code/test_excinfo.py:test_repr_traceback_with_unicode",
      "type": "function",
      "name": "test_repr_traceback_with_unicode",
      "file": "testing/code/test_excinfo.py",
      "line": 1399
    },
    {
      "id": "testing/code/test_excinfo.py:test_cwd_deleted",
      "type": "function",
      "name": "test_cwd_deleted",
      "file": "testing/code/test_excinfo.py",
      "line": 1413
    },
    {
      "id": "testing/code/test_excinfo.py:test_regression_nagative_line_index",
      "type": "function",
      "name": "test_regression_nagative_line_index",
      "file": "testing/code/test_excinfo.py",
      "line": 1430
    },
    {
      "id": "testing/code/test_excinfo.py:test_exception_repr_extraction_error_on_recursion",
      "type": "function",
      "name": "test_exception_repr_extraction_error_on_recursion",
      "file": "testing/code/test_excinfo.py",
      "line": 1454
    },
    {
      "id": "testing/code/test_excinfo.py:test_exception_repr_extraction_error_on_recursion.numpy_like",
      "type": "class",
      "name": "test_exception_repr_extraction_error_on_recursion.numpy_like",
      "file": "testing/code/test_excinfo.py",
      "line": 1460
    },
    {
      "id": "testing/code/test_excinfo.py:test_exception_repr_extraction_error_on_recursion.numpy_like.__eq__",
      "type": "function",
      "name": "test_exception_repr_extraction_error_on_recursion.numpy_like.__eq__",
      "file": "testing/code/test_excinfo.py",
      "line": 1461
    },
    {
      "id": "testing/code/test_excinfo.py:test_exception_repr_extraction_error_on_recursion.a",
      "type": "function",
      "name": "test_exception_repr_extraction_error_on_recursion.a",
      "file": "testing/code/test_excinfo.py",
      "line": 1468
    },
    {
      "id": "testing/code/test_excinfo.py:test_exception_repr_extraction_error_on_recursion.b",
      "type": "function",
      "name": "test_exception_repr_extraction_error_on_recursion.b",
      "file": "testing/code/test_excinfo.py",
      "line": 1471
    },
    {
      "id": "testing/code/test_excinfo.py:test_no_recursion_index_on_recursion_error",
      "type": "function",
      "name": "test_no_recursion_index_on_recursion_error",
      "file": "testing/code/test_excinfo.py",
      "line": 1488
    },
    {
      "id": "testing/code/test_excinfo.py:test_no_recursion_index_on_recursion_error.RecursionDepthError",
      "type": "class",
      "name": "test_no_recursion_index_on_recursion_error.RecursionDepthError",
      "file": "testing/code/test_excinfo.py",
      "line": 1494
    },
    {
      "id": "testing/code/test_excinfo.py:test_no_recursion_index_on_recursion_error.RecursionDepthError.__getattr__",
      "type": "function",
      "name": "test_no_recursion_index_on_recursion_error.RecursionDepthError.__getattr__",
      "file": "testing/code/test_excinfo.py",
      "line": 1495
    },
    {
      "id": "testing/code/test_excinfo.py:_exceptiongroup_common",
      "type": "function",
      "name": "_exceptiongroup_common",
      "file": "testing/code/test_excinfo.py",
      "line": 1503
    },
    {
      "id": "testing/code/test_excinfo.py:test_native_exceptiongroup",
      "type": "function",
      "name": "test_native_exceptiongroup",
      "file": "testing/code/test_excinfo.py",
      "line": 1578
    },
    {
      "id": "testing/code/test_excinfo.py:test_exceptiongroup",
      "type": "function",
      "name": "test_exceptiongroup",
      "file": "testing/code/test_excinfo.py",
      "line": 1584
    },
    {
      "id": "testing/code/test_excinfo.py:test_all_entries_hidden",
      "type": "function",
      "name": "test_all_entries_hidden",
      "file": "testing/code/test_excinfo.py",
      "line": 1591
    },
    {
      "id": "testing/code/test_excinfo.py:test_hidden_entries_of_chained_exceptions_are_not_shown",
      "type": "function",
      "name": "test_hidden_entries_of_chained_exceptions_are_not_shown",
      "file": "testing/code/test_excinfo.py",
      "line": 1608
    },
    {
      "id": "testing/code/test_code.py",
      "type": "file",
      "name": "test_code.py",
      "file": "testing/code/test_code.py",
      "line": 0
    },
    {
      "id": "testing/code/test_code.py:test_ne",
      "type": "function",
      "name": "test_ne",
      "file": "testing/code/test_code.py",
      "line": 15
    },
    {
      "id": "testing/code/test_code.py:test_code_gives_back_name_for_not_existing_file",
      "type": "function",
      "name": "test_code_gives_back_name_for_not_existing_file",
      "file": "testing/code/test_code.py",
      "line": 22
    },
    {
      "id": "testing/code/test_code.py:test_code_from_function_with_class",
      "type": "function",
      "name": "test_code_from_function_with_class",
      "file": "testing/code/test_code.py",
      "line": 31
    },
    {
      "id": "testing/code/test_code.py:test_code_from_function_with_class.A",
      "type": "class",
      "name": "test_code_from_function_with_class.A",
      "file": "testing/code/test_code.py",
      "line": 32
    },
    {
      "id": "testing/code/test_code.py:x",
      "type": "function",
      "name": "x",
      "file": "testing/code/test_code.py",
      "line": 39
    },
    {
      "id": "testing/code/test_code.py:test_code_fullsource",
      "type": "function",
      "name": "test_code_fullsource",
      "file": "testing/code/test_code.py",
      "line": 43
    },
    {
      "id": "testing/code/test_code.py:test_code_source",
      "type": "function",
      "name": "test_code_source",
      "file": "testing/code/test_code.py",
      "line": 49
    },
    {
      "id": "testing/code/test_code.py:test_frame_getsourcelineno_myself",
      "type": "function",
      "name": "test_frame_getsourcelineno_myself",
      "file": "testing/code/test_code.py",
      "line": 57
    },
    {
      "id": "testing/code/test_code.py:test_frame_getsourcelineno_myself.func",
      "type": "function",
      "name": "test_frame_getsourcelineno_myself.func",
      "file": "testing/code/test_code.py",
      "line": 58
    },
    {
      "id": "testing/code/test_code.py:test_getstatement_empty_fullsource",
      "type": "function",
      "name": "test_getstatement_empty_fullsource",
      "file": "testing/code/test_code.py",
      "line": 67
    },
    {
      "id": "testing/code/test_code.py:test_getstatement_empty_fullsource.func",
      "type": "function",
      "name": "test_getstatement_empty_fullsource.func",
      "file": "testing/code/test_code.py",
      "line": 68
    },
    {
      "id": "testing/code/test_code.py:test_code_from_func",
      "type": "function",
      "name": "test_code_from_func",
      "file": "testing/code/test_code.py",
      "line": 76
    },
    {
      "id": "testing/code/test_code.py:test_unicode_handling",
      "type": "function",
      "name": "test_unicode_handling",
      "file": "testing/code/test_code.py",
      "line": 82
    },
    {
      "id": "testing/code/test_code.py:test_unicode_handling.f",
      "type": "function",
      "name": "test_unicode_handling.f",
      "file": "testing/code/test_code.py",
      "line": 85
    },
    {
      "id": "testing/code/test_code.py:test_code_getargs",
      "type": "function",
      "name": "test_code_getargs",
      "file": "testing/code/test_code.py",
      "line": 92
    },
    {
      "id": "testing/code/test_code.py:test_code_getargs.f1",
      "type": "function",
      "name": "test_code_getargs.f1",
      "file": "testing/code/test_code.py",
      "line": 93
    },
    {
      "id": "testing/code/test_code.py:test_code_getargs.f2",
      "type": "function",
      "name": "test_code_getargs.f2",
      "file": "testing/code/test_code.py",
      "line": 99
    },
    {
      "id": "testing/code/test_code.py:test_code_getargs.f3",
      "type": "function",
      "name": "test_code_getargs.f3",
      "file": "testing/code/test_code.py",
      "line": 105
    },
    {
      "id": "testing/code/test_code.py:test_code_getargs.f4",
      "type": "function",
      "name": "test_code_getargs.f4",
      "file": "testing/code/test_code.py",
      "line": 111
    },
    {
      "id": "testing/code/test_code.py:test_frame_getargs",
      "type": "function",
      "name": "test_frame_getargs",
      "file": "testing/code/test_code.py",
      "line": 118
    },
    {
      "id": "testing/code/test_code.py:test_frame_getargs.f1",
      "type": "function",
      "name": "test_frame_getargs.f1",
      "file": "testing/code/test_code.py",
      "line": 119
    },
    {
      "id": "testing/code/test_code.py:test_frame_getargs.f2",
      "type": "function",
      "name": "test_frame_getargs.f2",
      "file": "testing/code/test_code.py",
      "line": 125
    },
    {
      "id": "testing/code/test_code.py:test_frame_getargs.f3",
      "type": "function",
      "name": "test_frame_getargs.f3",
      "file": "testing/code/test_code.py",
      "line": 131
    },
    {
      "id": "testing/code/test_code.py:test_frame_getargs.f4",
      "type": "function",
      "name": "test_frame_getargs.f4",
      "file": "testing/code/test_code.py",
      "line": 137
    },
    {
      "id": "testing/code/test_code.py:TestExceptionInfo",
      "type": "class",
      "name": "TestExceptionInfo",
      "file": "testing/code/test_code.py",
      "line": 144
    },
    {
      "id": "testing/code/test_code.py:TestExceptionInfo.test_bad_getsource",
      "type": "function",
      "name": "TestExceptionInfo.test_bad_getsource",
      "file": "testing/code/test_code.py",
      "line": 145
    },
    {
      "id": "testing/code/test_code.py:TestExceptionInfo.test_from_current_with_missing",
      "type": "function",
      "name": "TestExceptionInfo.test_from_current_with_missing",
      "file": "testing/code/test_code.py",
      "line": 155
    },
    {
      "id": "testing/code/test_code.py:TestTracebackEntry",
      "type": "class",
      "name": "TestTracebackEntry",
      "file": "testing/code/test_code.py",
      "line": 160
    },
    {
      "id": "testing/code/test_code.py:TestTracebackEntry.test_getsource",
      "type": "function",
      "name": "TestTracebackEntry.test_getsource",
      "file": "testing/code/test_code.py",
      "line": 161
    },
    {
      "id": "testing/code/test_code.py:TestTracebackEntry.test_tb_entry_str",
      "type": "function",
      "name": "TestTracebackEntry.test_tb_entry_str",
      "file": "testing/code/test_code.py",
      "line": 175
    },
    {
      "id": "testing/code/test_code.py:TestReprFuncArgs",
      "type": "class",
      "name": "TestReprFuncArgs",
      "file": "testing/code/test_code.py",
      "line": 185
    },
    {
      "id": "testing/code/test_code.py:TestReprFuncArgs.test_not_raise_exception_with_mixed_encoding",
      "type": "function",
      "name": "TestReprFuncArgs.test_not_raise_exception_with_mixed_encoding",
      "file": "testing/code/test_code.py",
      "line": 186
    },
    {
      "id": "testing/code/test_code.py:test_ExceptionChainRepr",
      "type": "function",
      "name": "test_ExceptionChainRepr",
      "file": "testing/code/test_code.py",
      "line": 198
    },
    {
      "id": "testing/code/test_source.py",
      "type": "file",
      "name": "test_source.py",
      "file": "testing/code/test_source.py",
      "line": 0
    },
    {
      "id": "testing/code/test_source.py:test_source_str_function",
      "type": "function",
      "name": "test_source_str_function",
      "file": "testing/code/test_source.py",
      "line": 20
    },
    {
      "id": "testing/code/test_source.py:test_source_from_function",
      "type": "function",
      "name": "test_source_from_function",
      "file": "testing/code/test_source.py",
      "line": 35
    },
    {
      "id": "testing/code/test_source.py:test_source_from_method",
      "type": "function",
      "name": "test_source_from_method",
      "file": "testing/code/test_source.py",
      "line": 40
    },
    {
      "id": "testing/code/test_source.py:test_source_from_method.TestClass",
      "type": "class",
      "name": "test_source_from_method.TestClass",
      "file": "testing/code/test_source.py",
      "line": 41
    },
    {
      "id": "testing/code/test_source.py:test_source_from_method.TestClass.test_method",
      "type": "function",
      "name": "test_source_from_method.TestClass.test_method",
      "file": "testing/code/test_source.py",
      "line": 42
    },
    {
      "id": "testing/code/test_source.py:test_source_from_lines",
      "type": "function",
      "name": "test_source_from_lines",
      "file": "testing/code/test_source.py",
      "line": 49
    },
    {
      "id": "testing/code/test_source.py:test_source_from_inner_function",
      "type": "function",
      "name": "test_source_from_inner_function",
      "file": "testing/code/test_source.py",
      "line": 55
    },
    {
      "id": "testing/code/test_source.py:test_source_from_inner_function.f",
      "type": "function",
      "name": "test_source_from_inner_function.f",
      "file": "testing/code/test_source.py",
      "line": 56
    },
    {
      "id": "testing/code/test_source.py:test_source_strips",
      "type": "function",
      "name": "test_source_strips",
      "file": "testing/code/test_source.py",
      "line": 63
    },
    {
      "id": "testing/code/test_source.py:test_source_strip_multiline",
      "type": "function",
      "name": "test_source_strip_multiline",
      "file": "testing/code/test_source.py",
      "line": 70
    },
    {
      "id": "testing/code/test_source.py:TestAccesses",
      "type": "class",
      "name": "TestAccesses",
      "file": "testing/code/test_source.py",
      "line": 77
    },
    {
      "id": "testing/code/test_source.py:TestAccesses.setup_class",
      "type": "function",
      "name": "TestAccesses.setup_class",
      "file": "testing/code/test_source.py",
      "line": 78
    },
    {
      "id": "testing/code/test_source.py:TestAccesses.test_getrange",
      "type": "function",
      "name": "TestAccesses.test_getrange",
      "file": "testing/code/test_source.py",
      "line": 88
    },
    {
      "id": "testing/code/test_source.py:TestAccesses.test_getrange_step_not_supported",
      "type": "function",
      "name": "TestAccesses.test_getrange_step_not_supported",
      "file": "testing/code/test_source.py",
      "line": 93
    },
    {
      "id": "testing/code/test_source.py:TestAccesses.test_getline",
      "type": "function",
      "name": "TestAccesses.test_getline",
      "file": "testing/code/test_source.py",
      "line": 97
    },
    {
      "id": "testing/code/test_source.py:TestAccesses.test_len",
      "type": "function",
      "name": "TestAccesses.test_len",
      "file": "testing/code/test_source.py",
      "line": 101
    },
    {
      "id": "testing/code/test_source.py:TestAccesses.test_iter",
      "type": "function",
      "name": "TestAccesses.test_iter",
      "file": "testing/code/test_source.py",
      "line": 104
    },
    {
      "id": "testing/code/test_source.py:TestSourceParsing",
      "type": "class",
      "name": "TestSourceParsing",
      "file": "testing/code/test_source.py",
      "line": 109
    },
    {
      "id": "testing/code/test_source.py:TestSourceParsing.setup_class",
      "type": "function",
      "name": "TestSourceParsing.setup_class",
      "file": "testing/code/test_source.py",
      "line": 110
    },
    {
      "id": "testing/code/test_source.py:TestSourceParsing.test_getstatement",
      "type": "function",
      "name": "TestSourceParsing.test_getstatement",
      "file": "testing/code/test_source.py",
      "line": 120
    },
    {
      "id": "testing/code/test_source.py:TestSourceParsing.test_getstatementrange_triple_quoted",
      "type": "function",
      "name": "TestSourceParsing.test_getstatementrange_triple_quoted",
      "file": "testing/code/test_source.py",
      "line": 129
    },
    {
      "id": "testing/code/test_source.py:TestSourceParsing.test_getstatementrange_within_constructs",
      "type": "function",
      "name": "TestSourceParsing.test_getstatementrange_within_constructs",
      "file": "testing/code/test_source.py",
      "line": 140
    },
    {
      "id": "testing/code/test_source.py:TestSourceParsing.test_getstatementrange_bug",
      "type": "function",
      "name": "TestSourceParsing.test_getstatementrange_bug",
      "file": "testing/code/test_source.py",
      "line": 162
    },
    {
      "id": "testing/code/test_source.py:TestSourceParsing.test_getstatementrange_bug2",
      "type": "function",
      "name": "TestSourceParsing.test_getstatementrange_bug2",
      "file": "testing/code/test_source.py",
      "line": 176
    },
    {
      "id": "testing/code/test_source.py:TestSourceParsing.test_getstatementrange_ast_issue58",
      "type": "function",
      "name": "TestSourceParsing.test_getstatementrange_ast_issue58",
      "file": "testing/code/test_source.py",
      "line": 193
    },
    {
      "id": "testing/code/test_source.py:TestSourceParsing.test_getstatementrange_out_of_bounds_py3",
      "type": "function",
      "name": "TestSourceParsing.test_getstatementrange_out_of_bounds_py3",
      "file": "testing/code/test_source.py",
      "line": 207
    },
    {
      "id": "testing/code/test_source.py:TestSourceParsing.test_getstatementrange_with_syntaxerror_issue7",
      "type": "function",
      "name": "TestSourceParsing.test_getstatementrange_with_syntaxerror_issue7",
      "file": "testing/code/test_source.py",
      "line": 212
    },
    {
      "id": "testing/code/test_source.py:test_getstartingblock_singleline",
      "type": "function",
      "name": "test_getstartingblock_singleline",
      "file": "testing/code/test_source.py",
      "line": 217
    },
    {
      "id": "testing/code/test_source.py:test_getstartingblock_singleline.A",
      "type": "class",
      "name": "test_getstartingblock_singleline.A",
      "file": "testing/code/test_source.py",
      "line": 218
    },
    {
      "id": "testing/code/test_source.py:test_getline_finally",
      "type": "function",
      "name": "test_getline_finally",
      "file": "testing/code/test_source.py",
      "line": 229
    },
    {
      "id": "testing/code/test_source.py:test_getline_finally.c",
      "type": "function",
      "name": "test_getline_finally.c",
      "file": "testing/code/test_source.py",
      "line": 230
    },
    {
      "id": "testing/code/test_source.py:test_getfuncsource_dynamic",
      "type": "function",
      "name": "test_getfuncsource_dynamic",
      "file": "testing/code/test_source.py",
      "line": 244
    },
    {
      "id": "testing/code/test_source.py:test_getfuncsource_dynamic.f",
      "type": "function",
      "name": "test_getfuncsource_dynamic.f",
      "file": "testing/code/test_source.py",
      "line": 245
    },
    {
      "id": "testing/code/test_source.py:test_getfuncsource_dynamic.g",
      "type": "function",
      "name": "test_getfuncsource_dynamic.g",
      "file": "testing/code/test_source.py",
      "line": 248
    },
    {
      "id": "testing/code/test_source.py:test_getfuncsource_with_multine_string",
      "type": "function",
      "name": "test_getfuncsource_with_multine_string",
      "file": "testing/code/test_source.py",
      "line": 257
    },
    {
      "id": "testing/code/test_source.py:test_getfuncsource_with_multine_string.f",
      "type": "function",
      "name": "test_getfuncsource_with_multine_string.f",
      "file": "testing/code/test_source.py",
      "line": 258
    },
    {
      "id": "testing/code/test_source.py:test_deindent",
      "type": "function",
      "name": "test_deindent",
      "file": "testing/code/test_source.py",
      "line": 272
    },
    {
      "id": "testing/code/test_source.py:test_source_of_class_at_eof_without_newline",
      "type": "function",
      "name": "test_source_of_class_at_eof_without_newline",
      "file": "testing/code/test_source.py",
      "line": 286
    },
    {
      "id": "testing/code/test_source.py:x",
      "type": "function",
      "name": "x",
      "file": "testing/code/test_source.py",
      "line": 305
    },
    {
      "id": "testing/code/test_source.py:test_source_fallback",
      "type": "function",
      "name": "test_source_fallback",
      "file": "testing/code/test_source.py",
      "line": 309
    },
    {
      "id": "testing/code/test_source.py:test_findsource_fallback",
      "type": "function",
      "name": "test_findsource_fallback",
      "file": "testing/code/test_source.py",
      "line": 316
    },
    {
      "id": "testing/code/test_source.py:test_findsource",
      "type": "function",
      "name": "test_findsource",
      "file": "testing/code/test_source.py",
      "line": 325
    },
    {
      "id": "testing/code/test_source.py:test_getfslineno",
      "type": "function",
      "name": "test_getfslineno",
      "file": "testing/code/test_source.py",
      "line": 346
    },
    {
      "id": "testing/code/test_source.py:test_getfslineno.f",
      "type": "function",
      "name": "test_getfslineno.f",
      "file": "testing/code/test_source.py",
      "line": 347
    },
    {
      "id": "testing/code/test_source.py:test_getfslineno.A",
      "type": "class",
      "name": "test_getfslineno.A",
      "file": "testing/code/test_source.py",
      "line": 356
    },
    {
      "id": "testing/code/test_source.py:test_getfslineno.B",
      "type": "class",
      "name": "test_getfslineno.B",
      "file": "testing/code/test_source.py",
      "line": 368
    },
    {
      "id": "testing/code/test_source.py:test_code_of_object_instance_with_call",
      "type": "function",
      "name": "test_code_of_object_instance_with_call",
      "file": "testing/code/test_source.py",
      "line": 375
    },
    {
      "id": "testing/code/test_source.py:test_code_of_object_instance_with_call.A",
      "type": "class",
      "name": "test_code_of_object_instance_with_call.A",
      "file": "testing/code/test_source.py",
      "line": 376
    },
    {
      "id": "testing/code/test_source.py:test_code_of_object_instance_with_call.WithCall",
      "type": "class",
      "name": "test_code_of_object_instance_with_call.WithCall",
      "file": "testing/code/test_source.py",
      "line": 381
    },
    {
      "id": "testing/code/test_source.py:test_code_of_object_instance_with_call.WithCall.__call__",
      "type": "function",
      "name": "test_code_of_object_instance_with_call.WithCall.__call__",
      "file": "testing/code/test_source.py",
      "line": 382
    },
    {
      "id": "testing/code/test_source.py:test_code_of_object_instance_with_call.Hello",
      "type": "class",
      "name": "test_code_of_object_instance_with_call.Hello",
      "file": "testing/code/test_source.py",
      "line": 388
    },
    {
      "id": "testing/code/test_source.py:test_code_of_object_instance_with_call.Hello.__call__",
      "type": "function",
      "name": "test_code_of_object_instance_with_call.Hello.__call__",
      "file": "testing/code/test_source.py",
      "line": 389
    },
    {
      "id": "testing/code/test_source.py:getstatement",
      "type": "function",
      "name": "getstatement",
      "file": "testing/code/test_source.py",
      "line": 395
    },
    {
      "id": "testing/code/test_source.py:test_oneline",
      "type": "function",
      "name": "test_oneline",
      "file": "testing/code/test_source.py",
      "line": 403
    },
    {
      "id": "testing/code/test_source.py:test_comment_and_no_newline_at_end",
      "type": "function",
      "name": "test_comment_and_no_newline_at_end",
      "file": "testing/code/test_source.py",
      "line": 408
    },
    {
      "id": "testing/code/test_source.py:test_oneline_and_comment",
      "type": "function",
      "name": "test_oneline_and_comment",
      "file": "testing/code/test_source.py",
      "line": 422
    },
    {
      "id": "testing/code/test_source.py:test_comments",
      "type": "function",
      "name": "test_comments",
      "file": "testing/code/test_source.py",
      "line": 427
    },
    {
      "id": "testing/code/test_source.py:test_comment_in_statement",
      "type": "function",
      "name": "test_comment_in_statement",
      "file": "testing/code/test_source.py",
      "line": 448
    },
    {
      "id": "testing/code/test_source.py:test_source_with_decorator",
      "type": "function",
      "name": "test_source_with_decorator",
      "file": "testing/code/test_source.py",
      "line": 460
    },
    {
      "id": "testing/code/test_source.py:test_source_with_decorator.deco_mark",
      "type": "function",
      "name": "test_source_with_decorator.deco_mark",
      "file": "testing/code/test_source.py",
      "line": 465
    },
    {
      "id": "testing/code/test_source.py:test_source_with_decorator.deco_fixture",
      "type": "function",
      "name": "test_source_with_decorator.deco_fixture",
      "file": "testing/code/test_source.py",
      "line": 473
    },
    {
      "id": "testing/code/test_source.py:test_single_line_else",
      "type": "function",
      "name": "test_single_line_else",
      "file": "testing/code/test_source.py",
      "line": 487
    },
    {
      "id": "testing/code/test_source.py:test_single_line_finally",
      "type": "function",
      "name": "test_single_line_finally",
      "file": "testing/code/test_source.py",
      "line": 492
    },
    {
      "id": "testing/code/test_source.py:test_issue55",
      "type": "function",
      "name": "test_issue55",
      "file": "testing/code/test_source.py",
      "line": 497
    },
    {
      "id": "testing/code/test_source.py:test_multiline",
      "type": "function",
      "name": "test_multiline",
      "file": "testing/code/test_source.py",
      "line": 506
    },
    {
      "id": "testing/code/test_source.py:TestTry",
      "type": "class",
      "name": "TestTry",
      "file": "testing/code/test_source.py",
      "line": 519
    },
    {
      "id": "testing/code/test_source.py:TestTry.setup_class",
      "type": "function",
      "name": "TestTry.setup_class",
      "file": "testing/code/test_source.py",
      "line": 520
    },
    {
      "id": "testing/code/test_source.py:TestTry.test_body",
      "type": "function",
      "name": "TestTry.test_body",
      "file": "testing/code/test_source.py",
      "line": 530
    },
    {
      "id": "testing/code/test_source.py:TestTry.test_except_line",
      "type": "function",
      "name": "TestTry.test_except_line",
      "file": "testing/code/test_source.py",
      "line": 534
    },
    {
      "id": "testing/code/test_source.py:TestTry.test_except_body",
      "type": "function",
      "name": "TestTry.test_except_body",
      "file": "testing/code/test_source.py",
      "line": 538
    },
    {
      "id": "testing/code/test_source.py:TestTry.test_else",
      "type": "function",
      "name": "TestTry.test_else",
      "file": "testing/code/test_source.py",
      "line": 542
    },
    {
      "id": "testing/code/test_source.py:TestTryFinally",
      "type": "class",
      "name": "TestTryFinally",
      "file": "testing/code/test_source.py",
      "line": 547
    },
    {
      "id": "testing/code/test_source.py:TestTryFinally.setup_class",
      "type": "function",
      "name": "TestTryFinally.setup_class",
      "file": "testing/code/test_source.py",
      "line": 548
    },
    {
      "id": "testing/code/test_source.py:TestTryFinally.test_body",
      "type": "function",
      "name": "TestTryFinally.test_body",
      "file": "testing/code/test_source.py",
      "line": 556
    },
    {
      "id": "testing/code/test_source.py:TestTryFinally.test_finally",
      "type": "function",
      "name": "TestTryFinally.test_finally",
      "file": "testing/code/test_source.py",
      "line": 560
    },
    {
      "id": "testing/code/test_source.py:TestIf",
      "type": "class",
      "name": "TestIf",
      "file": "testing/code/test_source.py",
      "line": 565
    },
    {
      "id": "testing/code/test_source.py:TestIf.setup_class",
      "type": "function",
      "name": "TestIf.setup_class",
      "file": "testing/code/test_source.py",
      "line": 566
    },
    {
      "id": "testing/code/test_source.py:TestIf.test_body",
      "type": "function",
      "name": "TestIf.test_body",
      "file": "testing/code/test_source.py",
      "line": 576
    },
    {
      "id": "testing/code/test_source.py:TestIf.test_elif_clause",
      "type": "function",
      "name": "TestIf.test_elif_clause",
      "file": "testing/code/test_source.py",
      "line": 580
    },
    {
      "id": "testing/code/test_source.py:TestIf.test_elif",
      "type": "function",
      "name": "TestIf.test_elif",
      "file": "testing/code/test_source.py",
      "line": 584
    },
    {
      "id": "testing/code/test_source.py:TestIf.test_else",
      "type": "function",
      "name": "TestIf.test_else",
      "file": "testing/code/test_source.py",
      "line": 588
    },
    {
      "id": "testing/code/test_source.py:test_semicolon",
      "type": "function",
      "name": "test_semicolon",
      "file": "testing/code/test_source.py",
      "line": 593
    },
    {
      "id": "testing/code/test_source.py:test_def_online",
      "type": "function",
      "name": "test_def_online",
      "file": "testing/code/test_source.py",
      "line": 601
    },
    {
      "id": "testing/code/test_source.py:test_decorator",
      "type": "function",
      "name": "test_decorator",
      "file": "testing/code/test_source.py",
      "line": 612
    },
    {
      "id": "testing/code/test_source.py:XXX_test_expression_multiline",
      "type": "function",
      "name": "XXX_test_expression_multiline",
      "file": "testing/code/test_source.py",
      "line": 625
    },
    {
      "id": "testing/code/test_source.py:test_getstartingblock_multiline",
      "type": "function",
      "name": "test_getstartingblock_multiline",
      "file": "testing/code/test_source.py",
      "line": 634
    },
    {
      "id": "testing/code/test_source.py:test_getstartingblock_multiline.A",
      "type": "class",
      "name": "test_getstartingblock_multiline.A",
      "file": "testing/code/test_source.py",
      "line": 635
    },
    {
      "id": "testing/examples",
      "type": "directory",
      "name": "examples",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/examples/test_issue519.py",
      "type": "file",
      "name": "test_issue519.py",
      "file": "testing/examples/test_issue519.py",
      "line": 0
    },
    {
      "id": "testing/examples/test_issue519.py:test_519",
      "type": "function",
      "name": "test_519",
      "file": "testing/examples/test_issue519.py",
      "line": 4
    },
    {
      "id": "testing/_py",
      "type": "directory",
      "name": "_py",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/_py/test_local.py",
      "type": "file",
      "name": "test_local.py",
      "file": "testing/_py/test_local.py",
      "line": 0
    },
    {
      "id": "testing/_py/test_local.py:ignore_encoding_warning",
      "type": "function",
      "name": "ignore_encoding_warning",
      "file": "testing/_py/test_local.py",
      "line": 15
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests",
      "type": "class",
      "name": "CommonFSTests",
      "file": "testing/_py/test_local.py",
      "line": 22
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_constructor_equality",
      "type": "function",
      "name": "CommonFSTests.test_constructor_equality",
      "file": "testing/_py/test_local.py",
      "line": 23
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_eq_nonstring",
      "type": "function",
      "name": "CommonFSTests.test_eq_nonstring",
      "file": "testing/_py/test_local.py",
      "line": 27
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_new_identical",
      "type": "function",
      "name": "CommonFSTests.test_new_identical",
      "file": "testing/_py/test_local.py",
      "line": 32
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_join",
      "type": "function",
      "name": "CommonFSTests.test_join",
      "file": "testing/_py/test_local.py",
      "line": 35
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_join_normalized",
      "type": "function",
      "name": "CommonFSTests.test_join_normalized",
      "file": "testing/_py/test_local.py",
      "line": 41
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_join_noargs",
      "type": "function",
      "name": "CommonFSTests.test_join_noargs",
      "file": "testing/_py/test_local.py",
      "line": 51
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_add_something",
      "type": "function",
      "name": "CommonFSTests.test_add_something",
      "file": "testing/_py/test_local.py",
      "line": 55
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_parts",
      "type": "function",
      "name": "CommonFSTests.test_parts",
      "file": "testing/_py/test_local.py",
      "line": 63
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_common",
      "type": "function",
      "name": "CommonFSTests.test_common",
      "file": "testing/_py/test_local.py",
      "line": 71
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_basename_checks",
      "type": "function",
      "name": "CommonFSTests.test_basename_checks",
      "file": "testing/_py/test_local.py",
      "line": 81
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_basename",
      "type": "function",
      "name": "CommonFSTests.test_basename",
      "file": "testing/_py/test_local.py",
      "line": 87
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_dirname",
      "type": "function",
      "name": "CommonFSTests.test_dirname",
      "file": "testing/_py/test_local.py",
      "line": 92
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_dirpath",
      "type": "function",
      "name": "CommonFSTests.test_dirpath",
      "file": "testing/_py/test_local.py",
      "line": 96
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_dirpath_with_args",
      "type": "function",
      "name": "CommonFSTests.test_dirpath_with_args",
      "file": "testing/_py/test_local.py",
      "line": 100
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_newbasename",
      "type": "function",
      "name": "CommonFSTests.test_newbasename",
      "file": "testing/_py/test_local.py",
      "line": 104
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_not_exists",
      "type": "function",
      "name": "CommonFSTests.test_not_exists",
      "file": "testing/_py/test_local.py",
      "line": 110
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_exists",
      "type": "function",
      "name": "CommonFSTests.test_exists",
      "file": "testing/_py/test_local.py",
      "line": 114
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_dir",
      "type": "function",
      "name": "CommonFSTests.test_dir",
      "file": "testing/_py/test_local.py",
      "line": 121
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_fnmatch_file",
      "type": "function",
      "name": "CommonFSTests.test_fnmatch_file",
      "file": "testing/_py/test_local.py",
      "line": 130
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_relto",
      "type": "function",
      "name": "CommonFSTests.test_relto",
      "file": "testing/_py/test_local.py",
      "line": 142
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_bestrelpath",
      "type": "function",
      "name": "CommonFSTests.test_bestrelpath",
      "file": "testing/_py/test_local.py",
      "line": 149
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_relto_not_relative",
      "type": "function",
      "name": "CommonFSTests.test_relto_not_relative",
      "file": "testing/_py/test_local.py",
      "line": 163
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_listdir",
      "type": "function",
      "name": "CommonFSTests.test_listdir",
      "file": "testing/_py/test_local.py",
      "line": 169
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_listdir_fnmatchstring",
      "type": "function",
      "name": "CommonFSTests.test_listdir_fnmatchstring",
      "file": "testing/_py/test_local.py",
      "line": 176
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_listdir_filter",
      "type": "function",
      "name": "CommonFSTests.test_listdir_filter",
      "file": "testing/_py/test_local.py",
      "line": 181
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_listdir_sorted",
      "type": "function",
      "name": "CommonFSTests.test_listdir_sorted",
      "file": "testing/_py/test_local.py",
      "line": 186
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_visit_nofilter",
      "type": "function",
      "name": "CommonFSTests.test_visit_nofilter",
      "file": "testing/_py/test_local.py",
      "line": 192
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_visit_norecurse",
      "type": "function",
      "name": "CommonFSTests.test_visit_norecurse",
      "file": "testing/_py/test_local.py",
      "line": 199
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_visit_filterfunc_is_string",
      "type": "function",
      "name": "CommonFSTests.test_visit_filterfunc_is_string",
      "file": "testing/_py/test_local.py",
      "line": 210
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_visit_ignore",
      "type": "function",
      "name": "CommonFSTests.test_visit_ignore",
      "file": "testing/_py/test_local.py",
      "line": 218
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_visit_endswith",
      "type": "function",
      "name": "CommonFSTests.test_visit_endswith",
      "file": "testing/_py/test_local.py",
      "line": 222
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_cmp",
      "type": "function",
      "name": "CommonFSTests.test_cmp",
      "file": "testing/_py/test_local.py",
      "line": 229
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_simple_read",
      "type": "function",
      "name": "CommonFSTests.test_simple_read",
      "file": "testing/_py/test_local.py",
      "line": 235
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_join_div_operator",
      "type": "function",
      "name": "CommonFSTests.test_join_div_operator",
      "file": "testing/_py/test_local.py",
      "line": 240
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_ext",
      "type": "function",
      "name": "CommonFSTests.test_ext",
      "file": "testing/_py/test_local.py",
      "line": 245
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_purebasename",
      "type": "function",
      "name": "CommonFSTests.test_purebasename",
      "file": "testing/_py/test_local.py",
      "line": 251
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_multiple_parts",
      "type": "function",
      "name": "CommonFSTests.test_multiple_parts",
      "file": "testing/_py/test_local.py",
      "line": 255
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_dotted_name_ext",
      "type": "function",
      "name": "CommonFSTests.test_dotted_name_ext",
      "file": "testing/_py/test_local.py",
      "line": 265
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_newext",
      "type": "function",
      "name": "CommonFSTests.test_newext",
      "file": "testing/_py/test_local.py",
      "line": 271
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_readlines",
      "type": "function",
      "name": "CommonFSTests.test_readlines",
      "file": "testing/_py/test_local.py",
      "line": 277
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_readlines_nocr",
      "type": "function",
      "name": "CommonFSTests.test_readlines_nocr",
      "file": "testing/_py/test_local.py",
      "line": 283
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_file",
      "type": "function",
      "name": "CommonFSTests.test_file",
      "file": "testing/_py/test_local.py",
      "line": 289
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_not_file",
      "type": "function",
      "name": "CommonFSTests.test_not_file",
      "file": "testing/_py/test_local.py",
      "line": 292
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_non_existent",
      "type": "function",
      "name": "CommonFSTests.test_non_existent",
      "file": "testing/_py/test_local.py",
      "line": 296
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_size",
      "type": "function",
      "name": "CommonFSTests.test_size",
      "file": "testing/_py/test_local.py",
      "line": 308
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_mtime",
      "type": "function",
      "name": "CommonFSTests.test_mtime",
      "file": "testing/_py/test_local.py",
      "line": 312
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_relto_wrong_type",
      "type": "function",
      "name": "CommonFSTests.test_relto_wrong_type",
      "file": "testing/_py/test_local.py",
      "line": 316
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_load",
      "type": "function",
      "name": "CommonFSTests.test_load",
      "file": "testing/_py/test_local.py",
      "line": 320
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_visit_filesonly",
      "type": "function",
      "name": "CommonFSTests.test_visit_filesonly",
      "file": "testing/_py/test_local.py",
      "line": 326
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_visit_nodotfiles",
      "type": "function",
      "name": "CommonFSTests.test_visit_nodotfiles",
      "file": "testing/_py/test_local.py",
      "line": 333
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_visit_breadthfirst",
      "type": "function",
      "name": "CommonFSTests.test_visit_breadthfirst",
      "file": "testing/_py/test_local.py",
      "line": 341
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_visit_sort",
      "type": "function",
      "name": "CommonFSTests.test_visit_sort",
      "file": "testing/_py/test_local.py",
      "line": 353
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_endswith",
      "type": "function",
      "name": "CommonFSTests.test_endswith",
      "file": "testing/_py/test_local.py",
      "line": 363
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_endswith.chk",
      "type": "function",
      "name": "CommonFSTests.test_endswith.chk",
      "file": "testing/_py/test_local.py",
      "line": 364
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_copy_file",
      "type": "function",
      "name": "CommonFSTests.test_copy_file",
      "file": "testing/_py/test_local.py",
      "line": 371
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_copy_dir",
      "type": "function",
      "name": "CommonFSTests.test_copy_dir",
      "file": "testing/_py/test_local.py",
      "line": 385
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_remove_file",
      "type": "function",
      "name": "CommonFSTests.test_remove_file",
      "file": "testing/_py/test_local.py",
      "line": 399
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_remove_dir_recursive_by_default",
      "type": "function",
      "name": "CommonFSTests.test_remove_dir_recursive_by_default",
      "file": "testing/_py/test_local.py",
      "line": 405
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_ensure_dir",
      "type": "function",
      "name": "CommonFSTests.test_ensure_dir",
      "file": "testing/_py/test_local.py",
      "line": 412
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_mkdir_and_remove",
      "type": "function",
      "name": "CommonFSTests.test_mkdir_and_remove",
      "file": "testing/_py/test_local.py",
      "line": 417
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_move_file",
      "type": "function",
      "name": "CommonFSTests.test_move_file",
      "file": "testing/_py/test_local.py",
      "line": 431
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_move_dir",
      "type": "function",
      "name": "CommonFSTests.test_move_dir",
      "file": "testing/_py/test_local.py",
      "line": 446
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_fspath_protocol_match_strpath",
      "type": "function",
      "name": "CommonFSTests.test_fspath_protocol_match_strpath",
      "file": "testing/_py/test_local.py",
      "line": 454
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_fspath_func_match_strpath",
      "type": "function",
      "name": "CommonFSTests.test_fspath_func_match_strpath",
      "file": "testing/_py/test_local.py",
      "line": 457
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_fspath_open",
      "type": "function",
      "name": "CommonFSTests.test_fspath_open",
      "file": "testing/_py/test_local.py",
      "line": 463
    },
    {
      "id": "testing/_py/test_local.py:CommonFSTests.test_fspath_fsencode",
      "type": "function",
      "name": "CommonFSTests.test_fspath_fsencode",
      "file": "testing/_py/test_local.py",
      "line": 468
    },
    {
      "id": "testing/_py/test_local.py:setuptestfs",
      "type": "function",
      "name": "setuptestfs",
      "file": "testing/_py/test_local.py",
      "line": 474
    },
    {
      "id": "testing/_py/test_local.py:path1",
      "type": "function",
      "name": "path1",
      "file": "testing/_py/test_local.py",
      "line": 529
    },
    {
      "id": "testing/_py/test_local.py:fake_fspath_obj",
      "type": "function",
      "name": "fake_fspath_obj",
      "file": "testing/_py/test_local.py",
      "line": 537
    },
    {
      "id": "testing/_py/test_local.py:fake_fspath_obj.FakeFSPathClass",
      "type": "class",
      "name": "fake_fspath_obj.FakeFSPathClass",
      "file": "testing/_py/test_local.py",
      "line": 538
    },
    {
      "id": "testing/_py/test_local.py:fake_fspath_obj.FakeFSPathClass.__fspath__",
      "type": "function",
      "name": "fake_fspath_obj.FakeFSPathClass.__fspath__",
      "file": "testing/_py/test_local.py",
      "line": 542
    },
    {
      "id": "testing/_py/test_local.py:batch_make_numbered_dirs",
      "type": "function",
      "name": "batch_make_numbered_dirs",
      "file": "testing/_py/test_local.py",
      "line": 548
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath",
      "type": "class",
      "name": "TestLocalPath",
      "file": "testing/_py/test_local.py",
      "line": 561
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_join_normpath",
      "type": "function",
      "name": "TestLocalPath.test_join_normpath",
      "file": "testing/_py/test_local.py",
      "line": 562
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_dirpath_abs_no_abs",
      "type": "function",
      "name": "TestLocalPath.test_dirpath_abs_no_abs",
      "file": "testing/_py/test_local.py",
      "line": 570
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_gethash",
      "type": "function",
      "name": "TestLocalPath.test_gethash",
      "file": "testing/_py/test_local.py",
      "line": 575
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_remove_removes_readonly_file",
      "type": "function",
      "name": "TestLocalPath.test_remove_removes_readonly_file",
      "file": "testing/_py/test_local.py",
      "line": 587
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_remove_removes_readonly_dir",
      "type": "function",
      "name": "TestLocalPath.test_remove_removes_readonly_dir",
      "file": "testing/_py/test_local.py",
      "line": 593
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_remove_removes_dir_and_readonly_file",
      "type": "function",
      "name": "TestLocalPath.test_remove_removes_dir_and_readonly_file",
      "file": "testing/_py/test_local.py",
      "line": 599
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_remove_routes_ignore_errors",
      "type": "function",
      "name": "TestLocalPath.test_remove_routes_ignore_errors",
      "file": "testing/_py/test_local.py",
      "line": 606
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_initialize_curdir",
      "type": "function",
      "name": "TestLocalPath.test_initialize_curdir",
      "file": "testing/_py/test_local.py",
      "line": 616
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_chdir_gone",
      "type": "function",
      "name": "TestLocalPath.test_chdir_gone",
      "file": "testing/_py/test_local.py",
      "line": 620
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_chdir_gone_in_as_cwd",
      "type": "function",
      "name": "TestLocalPath.test_chdir_gone_in_as_cwd",
      "file": "testing/_py/test_local.py",
      "line": 633
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_as_cwd",
      "type": "function",
      "name": "TestLocalPath.test_as_cwd",
      "file": "testing/_py/test_local.py",
      "line": 641
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_as_cwd_exception",
      "type": "function",
      "name": "TestLocalPath.test_as_cwd_exception",
      "file": "testing/_py/test_local.py",
      "line": 649
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_initialize_reldir",
      "type": "function",
      "name": "TestLocalPath.test_initialize_reldir",
      "file": "testing/_py/test_local.py",
      "line": 657
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_tilde_expansion",
      "type": "function",
      "name": "TestLocalPath.test_tilde_expansion",
      "file": "testing/_py/test_local.py",
      "line": 662
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_eq_hash_are_case_insensitive_on_windows",
      "type": "function",
      "name": "TestLocalPath.test_eq_hash_are_case_insensitive_on_windows",
      "file": "testing/_py/test_local.py",
      "line": 670
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_eq_with_strings",
      "type": "function",
      "name": "TestLocalPath.test_eq_with_strings",
      "file": "testing/_py/test_local.py",
      "line": 678
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_eq_with_none",
      "type": "function",
      "name": "TestLocalPath.test_eq_with_none",
      "file": "testing/_py/test_local.py",
      "line": 687
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_eq_non_ascii_unicode",
      "type": "function",
      "name": "TestLocalPath.test_eq_non_ascii_unicode",
      "file": "testing/_py/test_local.py",
      "line": 690
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_gt_with_strings",
      "type": "function",
      "name": "TestLocalPath.test_gt_with_strings",
      "file": "testing/_py/test_local.py",
      "line": 699
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_open_and_ensure",
      "type": "function",
      "name": "TestLocalPath.test_open_and_ensure",
      "file": "testing/_py/test_local.py",
      "line": 710
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_write_and_ensure",
      "type": "function",
      "name": "TestLocalPath.test_write_and_ensure",
      "file": "testing/_py/test_local.py",
      "line": 716
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_dump",
      "type": "function",
      "name": "TestLocalPath.test_dump",
      "file": "testing/_py/test_local.py",
      "line": 722
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_setmtime",
      "type": "function",
      "name": "TestLocalPath.test_setmtime",
      "file": "testing/_py/test_local.py",
      "line": 735
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_normpath",
      "type": "function",
      "name": "TestLocalPath.test_normpath",
      "file": "testing/_py/test_local.py",
      "line": 756
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_mkdtemp_creation",
      "type": "function",
      "name": "TestLocalPath.test_mkdtemp_creation",
      "file": "testing/_py/test_local.py",
      "line": 761
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_tmproot",
      "type": "function",
      "name": "TestLocalPath.test_tmproot",
      "file": "testing/_py/test_local.py",
      "line": 768
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_chdir",
      "type": "function",
      "name": "TestLocalPath.test_chdir",
      "file": "testing/_py/test_local.py",
      "line": 777
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_ensure_filepath_withdir",
      "type": "function",
      "name": "TestLocalPath.test_ensure_filepath_withdir",
      "file": "testing/_py/test_local.py",
      "line": 786
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_ensure_filepath_withoutdir",
      "type": "function",
      "name": "TestLocalPath.test_ensure_filepath_withoutdir",
      "file": "testing/_py/test_local.py",
      "line": 795
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_ensure_dirpath",
      "type": "function",
      "name": "TestLocalPath.test_ensure_dirpath",
      "file": "testing/_py/test_local.py",
      "line": 801
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_ensure_non_ascii_unicode",
      "type": "function",
      "name": "TestLocalPath.test_ensure_non_ascii_unicode",
      "file": "testing/_py/test_local.py",
      "line": 807
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_long_filenames",
      "type": "function",
      "name": "TestLocalPath.test_long_filenames",
      "file": "testing/_py/test_local.py",
      "line": 814
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_visit_depth_first",
      "type": "function",
      "name": "TestLocalPath.test_visit_depth_first",
      "file": "testing/_py/test_local.py",
      "line": 830
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_visit_rec_fnmatch",
      "type": "function",
      "name": "TestLocalPath.test_visit_rec_fnmatch",
      "file": "testing/_py/test_local.py",
      "line": 839
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_fnmatch_file_abspath",
      "type": "function",
      "name": "TestLocalPath.test_fnmatch_file_abspath",
      "file": "testing/_py/test_local.py",
      "line": 847
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_sysfind",
      "type": "function",
      "name": "TestLocalPath.test_sysfind",
      "file": "testing/_py/test_local.py",
      "line": 853
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_fspath_protocol_other_class",
      "type": "function",
      "name": "TestLocalPath.test_fspath_protocol_other_class",
      "file": "testing/_py/test_local.py",
      "line": 862
    },
    {
      "id": "testing/_py/test_local.py:TestLocalPath.test_make_numbered_dir_multiprocess_safe",
      "type": "function",
      "name": "TestLocalPath.test_make_numbered_dir_multiprocess_safe",
      "file": "testing/_py/test_local.py",
      "line": 871
    },
    {
      "id": "testing/_py/test_local.py:TestExecutionOnWindows",
      "type": "class",
      "name": "TestExecutionOnWindows",
      "file": "testing/_py/test_local.py",
      "line": 882
    },
    {
      "id": "testing/_py/test_local.py:TestExecutionOnWindows.test_sysfind_bat_exe_before",
      "type": "function",
      "name": "TestExecutionOnWindows.test_sysfind_bat_exe_before",
      "file": "testing/_py/test_local.py",
      "line": 885
    },
    {
      "id": "testing/_py/test_local.py:TestExecution",
      "type": "class",
      "name": "TestExecution",
      "file": "testing/_py/test_local.py",
      "line": 893
    },
    {
      "id": "testing/_py/test_local.py:TestExecution.test_sysfind_no_permisson_ignored",
      "type": "function",
      "name": "TestExecution.test_sysfind_no_permisson_ignored",
      "file": "testing/_py/test_local.py",
      "line": 896
    },
    {
      "id": "testing/_py/test_local.py:TestExecution.test_sysfind_absolute",
      "type": "function",
      "name": "TestExecution.test_sysfind_absolute",
      "file": "testing/_py/test_local.py",
      "line": 905
    },
    {
      "id": "testing/_py/test_local.py:TestExecution.test_sysfind_multiple",
      "type": "function",
      "name": "TestExecution.test_sysfind_multiple",
      "file": "testing/_py/test_local.py",
      "line": 912
    },
    {
      "id": "testing/_py/test_local.py:TestExecution.test_sysexec",
      "type": "function",
      "name": "TestExecution.test_sysexec",
      "file": "testing/_py/test_local.py",
      "line": 922
    },
    {
      "id": "testing/_py/test_local.py:TestExecution.test_sysexec_failing",
      "type": "function",
      "name": "TestExecution.test_sysexec_failing",
      "file": "testing/_py/test_local.py",
      "line": 928
    },
    {
      "id": "testing/_py/test_local.py:TestExecution.test_make_numbered_dir",
      "type": "function",
      "name": "TestExecution.test_make_numbered_dir",
      "file": "testing/_py/test_local.py",
      "line": 937
    },
    {
      "id": "testing/_py/test_local.py:TestExecution.test_make_numbered_dir_case",
      "type": "function",
      "name": "TestExecution.test_make_numbered_dir_case",
      "file": "testing/_py/test_local.py",
      "line": 952
    },
    {
      "id": "testing/_py/test_local.py:TestExecution.test_make_numbered_dir_NotImplemented_Error",
      "type": "function",
      "name": "TestExecution.test_make_numbered_dir_NotImplemented_Error",
      "file": "testing/_py/test_local.py",
      "line": 976
    },
    {
      "id": "testing/_py/test_local.py:TestExecution.test_make_numbered_dir_NotImplemented_Error.notimpl",
      "type": "function",
      "name": "TestExecution.test_make_numbered_dir_NotImplemented_Error.notimpl",
      "file": "testing/_py/test_local.py",
      "line": 977
    },
    {
      "id": "testing/_py/test_local.py:TestExecution.test_locked_make_numbered_dir",
      "type": "function",
      "name": "TestExecution.test_locked_make_numbered_dir",
      "file": "testing/_py/test_local.py",
      "line": 985
    },
    {
      "id": "testing/_py/test_local.py:TestExecution.test_error_preservation",
      "type": "function",
      "name": "TestExecution.test_error_preservation",
      "file": "testing/_py/test_local.py",
      "line": 993
    },
    {
      "id": "testing/_py/test_local.py:TestImport",
      "type": "class",
      "name": "TestImport",
      "file": "testing/_py/test_local.py",
      "line": 1002
    },
    {
      "id": "testing/_py/test_local.py:TestImport.preserve_sys",
      "type": "function",
      "name": "TestImport.preserve_sys",
      "file": "testing/_py/test_local.py",
      "line": 1004
    },
    {
      "id": "testing/_py/test_local.py:TestImport.test_pyimport",
      "type": "function",
      "name": "TestImport.test_pyimport",
      "file": "testing/_py/test_local.py",
      "line": 1009
    },
    {
      "id": "testing/_py/test_local.py:TestImport.test_pyimport_renamed_dir_creates_mismatch",
      "type": "function",
      "name": "TestImport.test_pyimport_renamed_dir_creates_mismatch",
      "file": "testing/_py/test_local.py",
      "line": 1014
    },
    {
      "id": "testing/_py/test_local.py:TestImport.test_pyimport_messy_name",
      "type": "function",
      "name": "TestImport.test_pyimport_messy_name",
      "file": "testing/_py/test_local.py",
      "line": 1030
    },
    {
      "id": "testing/_py/test_local.py:TestImport.test_pyimport_dir",
      "type": "function",
      "name": "TestImport.test_pyimport_dir",
      "file": "testing/_py/test_local.py",
      "line": 1035
    },
    {
      "id": "testing/_py/test_local.py:TestImport.test_pyimport_execfile_different_name",
      "type": "function",
      "name": "TestImport.test_pyimport_execfile_different_name",
      "file": "testing/_py/test_local.py",
      "line": 1043
    },
    {
      "id": "testing/_py/test_local.py:TestImport.test_pyimport_a",
      "type": "function",
      "name": "TestImport.test_pyimport_a",
      "file": "testing/_py/test_local.py",
      "line": 1048
    },
    {
      "id": "testing/_py/test_local.py:TestImport.test_pyimport_b",
      "type": "function",
      "name": "TestImport.test_pyimport_b",
      "file": "testing/_py/test_local.py",
      "line": 1054
    },
    {
      "id": "testing/_py/test_local.py:TestImport.test_pyimport_c",
      "type": "function",
      "name": "TestImport.test_pyimport_c",
      "file": "testing/_py/test_local.py",
      "line": 1060
    },
    {
      "id": "testing/_py/test_local.py:TestImport.test_pyimport_d",
      "type": "function",
      "name": "TestImport.test_pyimport_d",
      "file": "testing/_py/test_local.py",
      "line": 1065
    },
    {
      "id": "testing/_py/test_local.py:TestImport.test_pyimport_and_import",
      "type": "function",
      "name": "TestImport.test_pyimport_and_import",
      "file": "testing/_py/test_local.py",
      "line": 1070
    },
    {
      "id": "testing/_py/test_local.py:TestImport.test_pyimport_check_filepath_consistency",
      "type": "function",
      "name": "TestImport.test_pyimport_check_filepath_consistency",
      "file": "testing/_py/test_local.py",
      "line": 1079
    },
    {
      "id": "testing/_py/test_local.py:TestImport.test_issue131_pyimport_on__init__",
      "type": "function",
      "name": "TestImport.test_issue131_pyimport_on__init__",
      "file": "testing/_py/test_local.py",
      "line": 1102
    },
    {
      "id": "testing/_py/test_local.py:TestImport.test_ensuresyspath_append",
      "type": "function",
      "name": "TestImport.test_ensuresyspath_append",
      "file": "testing/_py/test_local.py",
      "line": 1112
    },
    {
      "id": "testing/_py/test_local.py:TestImportlibImport",
      "type": "class",
      "name": "TestImportlibImport",
      "file": "testing/_py/test_local.py",
      "line": 1121
    },
    {
      "id": "testing/_py/test_local.py:TestImportlibImport.test_pyimport",
      "type": "function",
      "name": "TestImportlibImport.test_pyimport",
      "file": "testing/_py/test_local.py",
      "line": 1124
    },
    {
      "id": "testing/_py/test_local.py:TestImportlibImport.test_pyimport_dir_fails",
      "type": "function",
      "name": "TestImportlibImport.test_pyimport_dir_fails",
      "file": "testing/_py/test_local.py",
      "line": 1129
    },
    {
      "id": "testing/_py/test_local.py:TestImportlibImport.test_pyimport_execfile_different_name",
      "type": "function",
      "name": "TestImportlibImport.test_pyimport_execfile_different_name",
      "file": "testing/_py/test_local.py",
      "line": 1135
    },
    {
      "id": "testing/_py/test_local.py:TestImportlibImport.test_pyimport_relative_import_fails",
      "type": "function",
      "name": "TestImportlibImport.test_pyimport_relative_import_fails",
      "file": "testing/_py/test_local.py",
      "line": 1140
    },
    {
      "id": "testing/_py/test_local.py:TestImportlibImport.test_pyimport_doesnt_use_sys_modules",
      "type": "function",
      "name": "TestImportlibImport.test_pyimport_doesnt_use_sys_modules",
      "file": "testing/_py/test_local.py",
      "line": 1145
    },
    {
      "id": "testing/_py/test_local.py:test_pypkgdir",
      "type": "function",
      "name": "test_pypkgdir",
      "file": "testing/_py/test_local.py",
      "line": 1152
    },
    {
      "id": "testing/_py/test_local.py:test_pypkgdir_unimportable",
      "type": "function",
      "name": "test_pypkgdir_unimportable",
      "file": "testing/_py/test_local.py",
      "line": 1160
    },
    {
      "id": "testing/_py/test_local.py:test_isimportable",
      "type": "function",
      "name": "test_isimportable",
      "file": "testing/_py/test_local.py",
      "line": 1169
    },
    {
      "id": "testing/_py/test_local.py:test_homedir_from_HOME",
      "type": "function",
      "name": "test_homedir_from_HOME",
      "file": "testing/_py/test_local.py",
      "line": 1185
    },
    {
      "id": "testing/_py/test_local.py:test_homedir_not_exists",
      "type": "function",
      "name": "test_homedir_not_exists",
      "file": "testing/_py/test_local.py",
      "line": 1191
    },
    {
      "id": "testing/_py/test_local.py:test_samefile",
      "type": "function",
      "name": "test_samefile",
      "file": "testing/_py/test_local.py",
      "line": 1198
    },
    {
      "id": "testing/_py/test_local.py:test_samefile_symlink",
      "type": "function",
      "name": "test_samefile_symlink",
      "file": "testing/_py/test_local.py",
      "line": 1211
    },
    {
      "id": "testing/_py/test_local.py:test_listdir_single_arg",
      "type": "function",
      "name": "test_listdir_single_arg",
      "file": "testing/_py/test_local.py",
      "line": 1224
    },
    {
      "id": "testing/_py/test_local.py:test_mkdtemp_rootdir",
      "type": "function",
      "name": "test_mkdtemp_rootdir",
      "file": "testing/_py/test_local.py",
      "line": 1229
    },
    {
      "id": "testing/_py/test_local.py:TestWINLocalPath",
      "type": "class",
      "name": "TestWINLocalPath",
      "file": "testing/_py/test_local.py",
      "line": 1234
    },
    {
      "id": "testing/_py/test_local.py:TestWINLocalPath.test_owner_group_not_implemented",
      "type": "function",
      "name": "TestWINLocalPath.test_owner_group_not_implemented",
      "file": "testing/_py/test_local.py",
      "line": 1237
    },
    {
      "id": "testing/_py/test_local.py:TestWINLocalPath.test_chmod_simple_int",
      "type": "function",
      "name": "TestWINLocalPath.test_chmod_simple_int",
      "file": "testing/_py/test_local.py",
      "line": 1243
    },
    {
      "id": "testing/_py/test_local.py:TestWINLocalPath.test_path_comparison_lowercase_mixed",
      "type": "function",
      "name": "TestWINLocalPath.test_path_comparison_lowercase_mixed",
      "file": "testing/_py/test_local.py",
      "line": 1255
    },
    {
      "id": "testing/_py/test_local.py:TestWINLocalPath.test_relto_with_mixed_case",
      "type": "function",
      "name": "TestWINLocalPath.test_relto_with_mixed_case",
      "file": "testing/_py/test_local.py",
      "line": 1261
    },
    {
      "id": "testing/_py/test_local.py:TestWINLocalPath.test_allow_unix_style_paths",
      "type": "function",
      "name": "TestWINLocalPath.test_allow_unix_style_paths",
      "file": "testing/_py/test_local.py",
      "line": 1266
    },
    {
      "id": "testing/_py/test_local.py:TestWINLocalPath.test_sysfind_in_currentdir",
      "type": "function",
      "name": "TestWINLocalPath.test_sysfind_in_currentdir",
      "file": "testing/_py/test_local.py",
      "line": 1274
    },
    {
      "id": "testing/_py/test_local.py:TestWINLocalPath.test_fnmatch_file_abspath_posix_pattern_on_win32",
      "type": "function",
      "name": "TestWINLocalPath.test_fnmatch_file_abspath_posix_pattern_on_win32",
      "file": "testing/_py/test_local.py",
      "line": 1281
    },
    {
      "id": "testing/_py/test_local.py:TestPOSIXLocalPath",
      "type": "class",
      "name": "TestPOSIXLocalPath",
      "file": "testing/_py/test_local.py",
      "line": 1292
    },
    {
      "id": "testing/_py/test_local.py:TestPOSIXLocalPath.test_hardlink",
      "type": "function",
      "name": "TestPOSIXLocalPath.test_hardlink",
      "file": "testing/_py/test_local.py",
      "line": 1295
    },
    {
      "id": "testing/_py/test_local.py:TestPOSIXLocalPath.test_symlink_are_identical",
      "type": "function",
      "name": "TestPOSIXLocalPath.test_symlink_are_identical",
      "file": "testing/_py/test_local.py",
      "line": 1303
    },
    {
      "id": "testing/_py/test_local.py:TestPOSIXLocalPath.test_symlink_isfile",
      "type": "function",
      "name": "TestPOSIXLocalPath.test_symlink_isfile",
      "file": "testing/_py/test_local.py",
      "line": 1310
    },
    {
      "id": "testing/_py/test_local.py:TestPOSIXLocalPath.test_symlink_relative",
      "type": "function",
      "name": "TestPOSIXLocalPath.test_symlink_relative",
      "file": "testing/_py/test_local.py",
      "line": 1319
    },
    {
      "id": "testing/_py/test_local.py:TestPOSIXLocalPath.test_symlink_not_existing",
      "type": "function",
      "name": "TestPOSIXLocalPath.test_symlink_not_existing",
      "file": "testing/_py/test_local.py",
      "line": 1329
    },
    {
      "id": "testing/_py/test_local.py:TestPOSIXLocalPath.test_relto_with_root",
      "type": "function",
      "name": "TestPOSIXLocalPath.test_relto_with_root",
      "file": "testing/_py/test_local.py",
      "line": 1334
    },
    {
      "id": "testing/_py/test_local.py:TestPOSIXLocalPath.test_visit_recursive_symlink",
      "type": "function",
      "name": "TestPOSIXLocalPath.test_visit_recursive_symlink",
      "file": "testing/_py/test_local.py",
      "line": 1338
    },
    {
      "id": "testing/_py/test_local.py:TestPOSIXLocalPath.test_symlink_isdir",
      "type": "function",
      "name": "TestPOSIXLocalPath.test_symlink_isdir",
      "file": "testing/_py/test_local.py",
      "line": 1344
    },
    {
      "id": "testing/_py/test_local.py:TestPOSIXLocalPath.test_symlink_remove",
      "type": "function",
      "name": "TestPOSIXLocalPath.test_symlink_remove",
      "file": "testing/_py/test_local.py",
      "line": 1350
    },
    {
      "id": "testing/_py/test_local.py:TestPOSIXLocalPath.test_realpath_file",
      "type": "function",
      "name": "TestPOSIXLocalPath.test_realpath_file",
      "file": "testing/_py/test_local.py",
      "line": 1357
    },
    {
      "id": "testing/_py/test_local.py:TestPOSIXLocalPath.test_owner",
      "type": "function",
      "name": "TestPOSIXLocalPath.test_owner",
      "file": "testing/_py/test_local.py",
      "line": 1365
    },
    {
      "id": "testing/_py/test_local.py:TestPOSIXLocalPath.test_stat_helpers",
      "type": "function",
      "name": "TestPOSIXLocalPath.test_stat_helpers",
      "file": "testing/_py/test_local.py",
      "line": 1382
    },
    {
      "id": "testing/_py/test_local.py:TestPOSIXLocalPath.test_stat_non_raising",
      "type": "function",
      "name": "TestPOSIXLocalPath.test_stat_non_raising",
      "file": "testing/_py/test_local.py",
      "line": 1391
    },
    {
      "id": "testing/_py/test_local.py:TestPOSIXLocalPath.test_atime",
      "type": "function",
      "name": "TestPOSIXLocalPath.test_atime",
      "file": "testing/_py/test_local.py",
      "line": 1397
    },
    {
      "id": "testing/_py/test_local.py:TestPOSIXLocalPath.test_commondir",
      "type": "function",
      "name": "TestPOSIXLocalPath.test_commondir",
      "file": "testing/_py/test_local.py",
      "line": 1412
    },
    {
      "id": "testing/_py/test_local.py:TestPOSIXLocalPath.test_commondir_nocommon",
      "type": "function",
      "name": "TestPOSIXLocalPath.test_commondir_nocommon",
      "file": "testing/_py/test_local.py",
      "line": 1420
    },
    {
      "id": "testing/_py/test_local.py:TestPOSIXLocalPath.test_join_to_root",
      "type": "function",
      "name": "TestPOSIXLocalPath.test_join_to_root",
      "file": "testing/_py/test_local.py",
      "line": 1427
    },
    {
      "id": "testing/_py/test_local.py:TestPOSIXLocalPath.test_join_root_to_root_with_no_abs",
      "type": "function",
      "name": "TestPOSIXLocalPath.test_join_root_to_root_with_no_abs",
      "file": "testing/_py/test_local.py",
      "line": 1432
    },
    {
      "id": "testing/_py/test_local.py:TestPOSIXLocalPath.test_chmod_simple_int",
      "type": "function",
      "name": "TestPOSIXLocalPath.test_chmod_simple_int",
      "file": "testing/_py/test_local.py",
      "line": 1437
    },
    {
      "id": "testing/_py/test_local.py:TestPOSIXLocalPath.test_chmod_rec_int",
      "type": "function",
      "name": "TestPOSIXLocalPath.test_chmod_rec_int",
      "file": "testing/_py/test_local.py",
      "line": 1446
    },
    {
      "id": "testing/_py/test_local.py:TestPOSIXLocalPath.test_chmod_rec_int.recfilter",
      "type": "function",
      "name": "TestPOSIXLocalPath.test_chmod_rec_int.recfilter",
      "file": "testing/_py/test_local.py",
      "line": 1448
    },
    {
      "id": "testing/_py/test_local.py:TestPOSIXLocalPath.test_copy_archiving",
      "type": "function",
      "name": "TestPOSIXLocalPath.test_copy_archiving",
      "file": "testing/_py/test_local.py",
      "line": 1462
    },
    {
      "id": "testing/_py/test_local.py:TestPOSIXLocalPath.test_copy_stat_file",
      "type": "function",
      "name": "TestPOSIXLocalPath.test_copy_stat_file",
      "file": "testing/_py/test_local.py",
      "line": 1473
    },
    {
      "id": "testing/_py/test_local.py:TestPOSIXLocalPath.test_copy_stat_dir",
      "type": "function",
      "name": "TestPOSIXLocalPath.test_copy_stat_dir",
      "file": "testing/_py/test_local.py",
      "line": 1485
    },
    {
      "id": "testing/_py/test_local.py:TestPOSIXLocalPath.test_chown_identity",
      "type": "function",
      "name": "TestPOSIXLocalPath.test_chown_identity",
      "file": "testing/_py/test_local.py",
      "line": 1501
    },
    {
      "id": "testing/_py/test_local.py:TestPOSIXLocalPath.test_chown_dangling_link",
      "type": "function",
      "name": "TestPOSIXLocalPath.test_chown_dangling_link",
      "file": "testing/_py/test_local.py",
      "line": 1506
    },
    {
      "id": "testing/_py/test_local.py:TestPOSIXLocalPath.test_chown_identity_rec_mayfail",
      "type": "function",
      "name": "TestPOSIXLocalPath.test_chown_identity_rec_mayfail",
      "file": "testing/_py/test_local.py",
      "line": 1516
    },
    {
      "id": "testing/_py/test_local.py:TestUnicodePy2Py3",
      "type": "class",
      "name": "TestUnicodePy2Py3",
      "file": "testing/_py/test_local.py",
      "line": 1522
    },
    {
      "id": "testing/_py/test_local.py:TestUnicodePy2Py3.test_join_ensure",
      "type": "function",
      "name": "TestUnicodePy2Py3.test_join_ensure",
      "file": "testing/_py/test_local.py",
      "line": 1523
    },
    {
      "id": "testing/_py/test_local.py:TestUnicodePy2Py3.test_listdir",
      "type": "function",
      "name": "TestUnicodePy2Py3.test_listdir",
      "file": "testing/_py/test_local.py",
      "line": 1531
    },
    {
      "id": "testing/_py/test_local.py:TestUnicodePy2Py3.test_read_write",
      "type": "function",
      "name": "TestUnicodePy2Py3.test_read_write",
      "file": "testing/_py/test_local.py",
      "line": 1540
    },
    {
      "id": "testing/_py/test_local.py:TestBinaryAndTextMethods",
      "type": "class",
      "name": "TestBinaryAndTextMethods",
      "file": "testing/_py/test_local.py",
      "line": 1550
    },
    {
      "id": "testing/_py/test_local.py:TestBinaryAndTextMethods.test_read_binwrite",
      "type": "function",
      "name": "TestBinaryAndTextMethods.test_read_binwrite",
      "file": "testing/_py/test_local.py",
      "line": 1551
    },
    {
      "id": "testing/_py/test_local.py:TestBinaryAndTextMethods.test_read_textwrite",
      "type": "function",
      "name": "TestBinaryAndTextMethods.test_read_textwrite",
      "file": "testing/_py/test_local.py",
      "line": 1561
    },
    {
      "id": "testing/_py/test_local.py:TestBinaryAndTextMethods.test_default_encoding",
      "type": "function",
      "name": "TestBinaryAndTextMethods.test_default_encoding",
      "file": "testing/_py/test_local.py",
      "line": 1569
    },
    {
      "id": "testing/logging",
      "type": "directory",
      "name": "logging",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/logging/test_fixture.py",
      "type": "file",
      "name": "test_fixture.py",
      "file": "testing/logging/test_fixture.py",
      "line": 0
    },
    {
      "id": "testing/logging/test_fixture.py:cleanup_disabled_logging",
      "type": "function",
      "name": "cleanup_disabled_logging",
      "file": "testing/logging/test_fixture.py",
      "line": 13
    },
    {
      "id": "testing/logging/test_fixture.py:test_fixture_help",
      "type": "function",
      "name": "test_fixture_help",
      "file": "testing/logging/test_fixture.py",
      "line": 25
    },
    {
      "id": "testing/logging/test_fixture.py:test_change_level",
      "type": "function",
      "name": "test_change_level",
      "file": "testing/logging/test_fixture.py",
      "line": 30
    },
    {
      "id": "testing/logging/test_fixture.py:test_change_level_logging_disabled",
      "type": "function",
      "name": "test_change_level_logging_disabled",
      "file": "testing/logging/test_fixture.py",
      "line": 45
    },
    {
      "id": "testing/logging/test_fixture.py:test_change_level_undo",
      "type": "function",
      "name": "test_change_level_undo",
      "file": "testing/logging/test_fixture.py",
      "line": 62
    },
    {
      "id": "testing/logging/test_fixture.py:test_change_disabled_level_undo",
      "type": "function",
      "name": "test_change_disabled_level_undo",
      "file": "testing/logging/test_fixture.py",
      "line": 88
    },
    {
      "id": "testing/logging/test_fixture.py:test_change_level_undos_handler_level",
      "type": "function",
      "name": "test_change_level_undos_handler_level",
      "file": "testing/logging/test_fixture.py",
      "line": 119
    },
    {
      "id": "testing/logging/test_fixture.py:test_with_statement",
      "type": "function",
      "name": "test_with_statement",
      "file": "testing/logging/test_fixture.py",
      "line": 147
    },
    {
      "id": "testing/logging/test_fixture.py:test_with_statement_logging_disabled",
      "type": "function",
      "name": "test_with_statement_logging_disabled",
      "file": "testing/logging/test_fixture.py",
      "line": 162
    },
    {
      "id": "testing/logging/test_fixture.py:test_force_enable_logging_level_string",
      "type": "function",
      "name": "test_force_enable_logging_level_string",
      "file": "testing/logging/test_fixture.py",
      "line": 200
    },
    {
      "id": "testing/logging/test_fixture.py:test_log_access",
      "type": "function",
      "name": "test_log_access",
      "file": "testing/logging/test_fixture.py",
      "line": 221
    },
    {
      "id": "testing/logging/test_fixture.py:test_messages",
      "type": "function",
      "name": "test_messages",
      "file": "testing/logging/test_fixture.py",
      "line": 229
    },
    {
      "id": "testing/logging/test_fixture.py:test_record_tuples",
      "type": "function",
      "name": "test_record_tuples",
      "file": "testing/logging/test_fixture.py",
      "line": 250
    },
    {
      "id": "testing/logging/test_fixture.py:test_unicode",
      "type": "function",
      "name": "test_unicode",
      "file": "testing/logging/test_fixture.py",
      "line": 257
    },
    {
      "id": "testing/logging/test_fixture.py:test_clear",
      "type": "function",
      "name": "test_clear",
      "file": "testing/logging/test_fixture.py",
      "line": 265
    },
    {
      "id": "testing/logging/test_fixture.py:logging_during_setup_and_teardown",
      "type": "function",
      "name": "logging_during_setup_and_teardown",
      "file": "testing/logging/test_fixture.py",
      "line": 276
    },
    {
      "id": "testing/logging/test_fixture.py:test_caplog_captures_for_all_stages",
      "type": "function",
      "name": "test_caplog_captures_for_all_stages",
      "file": "testing/logging/test_fixture.py",
      "line": 284
    },
    {
      "id": "testing/logging/test_fixture.py:test_clear_for_call_stage",
      "type": "function",
      "name": "test_clear_for_call_stage",
      "file": "testing/logging/test_fixture.py",
      "line": 296
    },
    {
      "id": "testing/logging/test_fixture.py:test_ini_controls_global_log_level",
      "type": "function",
      "name": "test_ini_controls_global_log_level",
      "file": "testing/logging/test_fixture.py",
      "line": 314
    },
    {
      "id": "testing/logging/test_fixture.py:test_caplog_can_override_global_log_level",
      "type": "function",
      "name": "test_caplog_can_override_global_log_level",
      "file": "testing/logging/test_fixture.py",
      "line": 341
    },
    {
      "id": "testing/logging/test_fixture.py:test_caplog_captures_despite_exception",
      "type": "function",
      "name": "test_caplog_captures_despite_exception",
      "file": "testing/logging/test_fixture.py",
      "line": 380
    },
    {
      "id": "testing/logging/test_fixture.py:test_log_report_captures_according_to_config_option_upon_failure",
      "type": "function",
      "name": "test_log_report_captures_according_to_config_option_upon_failure",
      "file": "testing/logging/test_fixture.py",
      "line": 410
    },
    {
      "id": "testing/logging/test_reporting.py",
      "type": "file",
      "name": "test_reporting.py",
      "file": "testing/logging/test_reporting.py",
      "line": 0
    },
    {
      "id": "testing/logging/test_reporting.py:test_nothing_logged",
      "type": "function",
      "name": "test_nothing_logged",
      "file": "testing/logging/test_reporting.py",
      "line": 14
    },
    {
      "id": "testing/logging/test_reporting.py:test_messages_logged",
      "type": "function",
      "name": "test_messages_logged",
      "file": "testing/logging/test_reporting.py",
      "line": 33
    },
    {
      "id": "testing/logging/test_reporting.py:test_root_logger_affected",
      "type": "function",
      "name": "test_root_logger_affected",
      "file": "testing/logging/test_reporting.py",
      "line": 55
    },
    {
      "id": "testing/logging/test_reporting.py:test_log_cli_level_log_level_interaction",
      "type": "function",
      "name": "test_log_cli_level_log_level_interaction",
      "file": "testing/logging/test_reporting.py",
      "line": 91
    },
    {
      "id": "testing/logging/test_reporting.py:test_setup_logging",
      "type": "function",
      "name": "test_setup_logging",
      "file": "testing/logging/test_reporting.py",
      "line": 121
    },
    {
      "id": "testing/logging/test_reporting.py:test_teardown_logging",
      "type": "function",
      "name": "test_teardown_logging",
      "file": "testing/logging/test_reporting.py",
      "line": 148
    },
    {
      "id": "testing/logging/test_reporting.py:test_log_cli_enabled_disabled",
      "type": "function",
      "name": "test_log_cli_enabled_disabled",
      "file": "testing/logging/test_reporting.py",
      "line": 176
    },
    {
      "id": "testing/logging/test_reporting.py:test_log_cli_default_level",
      "type": "function",
      "name": "test_log_cli_default_level",
      "file": "testing/logging/test_reporting.py",
      "line": 208
    },
    {
      "id": "testing/logging/test_reporting.py:test_log_cli_default_level_multiple_tests",
      "type": "function",
      "name": "test_log_cli_default_level_multiple_tests",
      "file": "testing/logging/test_reporting.py",
      "line": 242
    },
    {
      "id": "testing/logging/test_reporting.py:test_log_cli_default_level_sections",
      "type": "function",
      "name": "test_log_cli_default_level_sections",
      "file": "testing/logging/test_reporting.py",
      "line": 279
    },
    {
      "id": "testing/logging/test_reporting.py:test_live_logs_unknown_sections",
      "type": "function",
      "name": "test_live_logs_unknown_sections",
      "file": "testing/logging/test_reporting.py",
      "line": 355
    },
    {
      "id": "testing/logging/test_reporting.py:test_sections_single_new_line_after_test_outcome",
      "type": "function",
      "name": "test_sections_single_new_line_after_test_outcome",
      "file": "testing/logging/test_reporting.py",
      "line": 419
    },
    {
      "id": "testing/logging/test_reporting.py:test_log_cli_level",
      "type": "function",
      "name": "test_log_cli_level",
      "file": "testing/logging/test_reporting.py",
      "line": 499
    },
    {
      "id": "testing/logging/test_reporting.py:test_log_cli_ini_level",
      "type": "function",
      "name": "test_log_cli_ini_level",
      "file": "testing/logging/test_reporting.py",
      "line": 549
    },
    {
      "id": "testing/logging/test_reporting.py:test_log_cli_auto_enable",
      "type": "function",
      "name": "test_log_cli_auto_enable",
      "file": "testing/logging/test_reporting.py",
      "line": 589
    },
    {
      "id": "testing/logging/test_reporting.py:test_log_file_cli",
      "type": "function",
      "name": "test_log_file_cli",
      "file": "testing/logging/test_reporting.py",
      "line": 632
    },
    {
      "id": "testing/logging/test_reporting.py:test_log_file_cli_level",
      "type": "function",
      "name": "test_log_file_cli_level",
      "file": "testing/logging/test_reporting.py",
      "line": 665
    },
    {
      "id": "testing/logging/test_reporting.py:test_log_level_not_changed_by_default",
      "type": "function",
      "name": "test_log_level_not_changed_by_default",
      "file": "testing/logging/test_reporting.py",
      "line": 696
    },
    {
      "id": "testing/logging/test_reporting.py:test_log_file_ini",
      "type": "function",
      "name": "test_log_file_ini",
      "file": "testing/logging/test_reporting.py",
      "line": 708
    },
    {
      "id": "testing/logging/test_reporting.py:test_log_file_ini_level",
      "type": "function",
      "name": "test_log_file_ini_level",
      "file": "testing/logging/test_reporting.py",
      "line": 747
    },
    {
      "id": "testing/logging/test_reporting.py:test_log_file_unicode",
      "type": "function",
      "name": "test_log_file_unicode",
      "file": "testing/logging/test_reporting.py",
      "line": 786
    },
    {
      "id": "testing/logging/test_reporting.py:test_live_logging_suspends_capture",
      "type": "function",
      "name": "test_live_logging_suspends_capture",
      "file": "testing/logging/test_reporting.py",
      "line": 822
    },
    {
      "id": "testing/logging/test_reporting.py:test_live_logging_suspends_capture.MockCaptureManager",
      "type": "class",
      "name": "test_live_logging_suspends_capture.MockCaptureManager",
      "file": "testing/logging/test_reporting.py",
      "line": 838
    },
    {
      "id": "testing/logging/test_reporting.py:test_live_logging_suspends_capture.MockCaptureManager.global_and_fixture_disabled",
      "type": "function",
      "name": "test_live_logging_suspends_capture.MockCaptureManager.global_and_fixture_disabled",
      "file": "testing/logging/test_reporting.py",
      "line": 842
    },
    {
      "id": "testing/logging/test_reporting.py:test_live_logging_suspends_capture.DummyTerminal",
      "type": "class",
      "name": "test_live_logging_suspends_capture.DummyTerminal",
      "file": "testing/logging/test_reporting.py",
      "line": 847
    },
    {
      "id": "testing/logging/test_reporting.py:test_live_logging_suspends_capture.DummyTerminal.section",
      "type": "function",
      "name": "test_live_logging_suspends_capture.DummyTerminal.section",
      "file": "testing/logging/test_reporting.py",
      "line": 848
    },
    {
      "id": "testing/logging/test_reporting.py:test_collection_live_logging",
      "type": "function",
      "name": "test_collection_live_logging",
      "file": "testing/logging/test_reporting.py",
      "line": 870
    },
    {
      "id": "testing/logging/test_reporting.py:test_collection_collect_only_live_logging",
      "type": "function",
      "name": "test_collection_collect_only_live_logging",
      "file": "testing/logging/test_reporting.py",
      "line": 886
    },
    {
      "id": "testing/logging/test_reporting.py:test_collection_logging_to_file",
      "type": "function",
      "name": "test_collection_logging_to_file",
      "file": "testing/logging/test_reporting.py",
      "line": 921
    },
    {
      "id": "testing/logging/test_reporting.py:test_log_in_hooks",
      "type": "function",
      "name": "test_log_in_hooks",
      "file": "testing/logging/test_reporting.py",
      "line": 959
    },
    {
      "id": "testing/logging/test_reporting.py:test_log_in_runtest_logreport",
      "type": "function",
      "name": "test_log_in_runtest_logreport",
      "file": "testing/logging/test_reporting.py",
      "line": 995
    },
    {
      "id": "testing/logging/test_reporting.py:test_log_set_path",
      "type": "function",
      "name": "test_log_set_path",
      "file": "testing/logging/test_reporting.py",
      "line": 1029
    },
    {
      "id": "testing/logging/test_reporting.py:test_colored_captured_log",
      "type": "function",
      "name": "test_colored_captured_log",
      "file": "testing/logging/test_reporting.py",
      "line": 1077
    },
    {
      "id": "testing/logging/test_reporting.py:test_colored_ansi_esc_caplogtext",
      "type": "function",
      "name": "test_colored_ansi_esc_caplogtext",
      "file": "testing/logging/test_reporting.py",
      "line": 1101
    },
    {
      "id": "testing/logging/test_reporting.py:test_logging_emit_error",
      "type": "function",
      "name": "test_logging_emit_error",
      "file": "testing/logging/test_reporting.py",
      "line": 1118
    },
    {
      "id": "testing/logging/test_reporting.py:test_logging_emit_error_supressed",
      "type": "function",
      "name": "test_logging_emit_error_supressed",
      "file": "testing/logging/test_reporting.py",
      "line": 1144
    },
    {
      "id": "testing/logging/test_reporting.py:test_log_file_cli_subdirectories_are_successfully_created",
      "type": "function",
      "name": "test_log_file_cli_subdirectories_are_successfully_created",
      "file": "testing/logging/test_reporting.py",
      "line": 1160
    },
    {
      "id": "testing/logging/test_reporting.py:test_disable_loggers",
      "type": "function",
      "name": "test_disable_loggers",
      "file": "testing/logging/test_reporting.py",
      "line": 1170
    },
    {
      "id": "testing/logging/test_reporting.py:test_disable_loggers_does_not_propagate",
      "type": "function",
      "name": "test_disable_loggers_does_not_propagate",
      "file": "testing/logging/test_reporting.py",
      "line": 1189
    },
    {
      "id": "testing/logging/test_reporting.py:test_log_disabling_works_with_log_cli",
      "type": "function",
      "name": "test_log_disabling_works_with_log_cli",
      "file": "testing/logging/test_reporting.py",
      "line": 1213
    },
    {
      "id": "testing/logging/test_reporting.py:test_without_date_format_log",
      "type": "function",
      "name": "test_without_date_format_log",
      "file": "testing/logging/test_reporting.py",
      "line": 1239
    },
    {
      "id": "testing/logging/test_reporting.py:test_date_format_log",
      "type": "function",
      "name": "test_date_format_log",
      "file": "testing/logging/test_reporting.py",
      "line": 1259
    },
    {
      "id": "testing/logging/test_reporting.py:test_date_format_percentf_log",
      "type": "function",
      "name": "test_date_format_percentf_log",
      "file": "testing/logging/test_reporting.py",
      "line": 1284
    },
    {
      "id": "testing/logging/test_reporting.py:test_date_format_percentf_tz_log",
      "type": "function",
      "name": "test_date_format_percentf_tz_log",
      "file": "testing/logging/test_reporting.py",
      "line": 1309
    },
    {
      "id": "testing/logging/test_formatter.py",
      "type": "file",
      "name": "test_formatter.py",
      "file": "testing/logging/test_formatter.py",
      "line": 0
    },
    {
      "id": "testing/logging/test_formatter.py:test_coloredlogformatter",
      "type": "function",
      "name": "test_coloredlogformatter",
      "file": "testing/logging/test_formatter.py",
      "line": 8
    },
    {
      "id": "testing/logging/test_formatter.py:test_coloredlogformatter_with_width_precision",
      "type": "function",
      "name": "test_coloredlogformatter_with_width_precision",
      "file": "testing/logging/test_formatter.py",
      "line": 35
    },
    {
      "id": "testing/logging/test_formatter.py:test_multiline_message",
      "type": "function",
      "name": "test_multiline_message",
      "file": "testing/logging/test_formatter.py",
      "line": 62
    },
    {
      "id": "testing/logging/test_formatter.py:test_colored_short_level",
      "type": "function",
      "name": "test_colored_short_level",
      "file": "testing/logging/test_formatter.py",
      "line": 151
    },
    {
      "id": "testing/logging/test_formatter.py:test_colored_short_level.ColorConfig",
      "type": "class",
      "name": "test_colored_short_level.ColorConfig",
      "file": "testing/logging/test_formatter.py",
      "line": 164
    },
    {
      "id": "testing/logging/test_formatter.py:test_colored_short_level.ColorConfig.option",
      "type": "class",
      "name": "test_colored_short_level.ColorConfig.option",
      "file": "testing/logging/test_formatter.py",
      "line": 165
    },
    {
      "id": "testing/example_scripts",
      "type": "directory",
      "name": "example_scripts",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/issue_519.py",
      "type": "file",
      "name": "issue_519.py",
      "file": "testing/example_scripts/issue_519.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/issue_519.py:pytest_generate_tests",
      "type": "function",
      "name": "pytest_generate_tests",
      "file": "testing/example_scripts/issue_519.py",
      "line": 8
    },
    {
      "id": "testing/example_scripts/issue_519.py:checked_order",
      "type": "function",
      "name": "checked_order",
      "file": "testing/example_scripts/issue_519.py",
      "line": 17
    },
    {
      "id": "testing/example_scripts/issue_519.py:fix1",
      "type": "function",
      "name": "fix1",
      "file": "testing/example_scripts/issue_519.py",
      "line": 37
    },
    {
      "id": "testing/example_scripts/issue_519.py:fix2",
      "type": "function",
      "name": "fix2",
      "file": "testing/example_scripts/issue_519.py",
      "line": 43
    },
    {
      "id": "testing/example_scripts/issue_519.py:test_one",
      "type": "function",
      "name": "test_one",
      "file": "testing/example_scripts/issue_519.py",
      "line": 48
    },
    {
      "id": "testing/example_scripts/issue_519.py:test_two",
      "type": "function",
      "name": "test_two",
      "file": "testing/example_scripts/issue_519.py",
      "line": 52
    },
    {
      "id": "testing/example_scripts/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "testing/example_scripts/__init__.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/collect",
      "type": "directory",
      "name": "collect",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/collect/package_infinite_recursion",
      "type": "directory",
      "name": "package_infinite_recursion",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/collect/package_infinite_recursion/conftest.py",
      "type": "file",
      "name": "conftest.py",
      "file": "testing/example_scripts/collect/package_infinite_recursion/conftest.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/collect/package_infinite_recursion/conftest.py:pytest_ignore_collect",
      "type": "function",
      "name": "pytest_ignore_collect",
      "file": "testing/example_scripts/collect/package_infinite_recursion/conftest.py",
      "line": 1
    },
    {
      "id": "testing/example_scripts/collect/package_infinite_recursion/tests",
      "type": "directory",
      "name": "tests",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/collect/package_infinite_recursion/tests/test_basic.py",
      "type": "file",
      "name": "test_basic.py",
      "file": "testing/example_scripts/collect/package_infinite_recursion/tests/test_basic.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/collect/package_infinite_recursion/tests/test_basic.py:test",
      "type": "function",
      "name": "test",
      "file": "testing/example_scripts/collect/package_infinite_recursion/tests/test_basic.py",
      "line": 1
    },
    {
      "id": "testing/example_scripts/collect/package_infinite_recursion/tests/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "testing/example_scripts/collect/package_infinite_recursion/tests/__init__.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/collect/collect_init_tests",
      "type": "directory",
      "name": "collect_init_tests",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/collect/collect_init_tests/tests",
      "type": "directory",
      "name": "tests",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/collect/collect_init_tests/tests/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "testing/example_scripts/collect/collect_init_tests/tests/__init__.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/collect/collect_init_tests/tests/__init__.py:test_init",
      "type": "function",
      "name": "test_init",
      "file": "testing/example_scripts/collect/collect_init_tests/tests/__init__.py",
      "line": 1
    },
    {
      "id": "testing/example_scripts/collect/collect_init_tests/tests/test_foo.py",
      "type": "file",
      "name": "test_foo.py",
      "file": "testing/example_scripts/collect/collect_init_tests/tests/test_foo.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/collect/collect_init_tests/tests/test_foo.py:test_foo",
      "type": "function",
      "name": "test_foo",
      "file": "testing/example_scripts/collect/collect_init_tests/tests/test_foo.py",
      "line": 1
    },
    {
      "id": "testing/example_scripts/collect/package_init_given_as_arg",
      "type": "directory",
      "name": "package_init_given_as_arg",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/collect/package_init_given_as_arg/pkg",
      "type": "directory",
      "name": "pkg",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/collect/package_init_given_as_arg/pkg/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "testing/example_scripts/collect/package_init_given_as_arg/pkg/__init__.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/collect/package_init_given_as_arg/pkg/__init__.py:test_init",
      "type": "function",
      "name": "test_init",
      "file": "testing/example_scripts/collect/package_init_given_as_arg/pkg/__init__.py",
      "line": 1
    },
    {
      "id": "testing/example_scripts/collect/package_init_given_as_arg/pkg/test_foo.py",
      "type": "file",
      "name": "test_foo.py",
      "file": "testing/example_scripts/collect/package_init_given_as_arg/pkg/test_foo.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/collect/package_init_given_as_arg/pkg/test_foo.py:test_foo",
      "type": "function",
      "name": "test_foo",
      "file": "testing/example_scripts/collect/package_init_given_as_arg/pkg/test_foo.py",
      "line": 1
    },
    {
      "id": "testing/example_scripts/unittest",
      "type": "directory",
      "name": "unittest",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/unittest/test_unittest_asynctest.py",
      "type": "file",
      "name": "test_unittest_asynctest.py",
      "file": "testing/example_scripts/unittest/test_unittest_asynctest.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/unittest/test_unittest_asynctest.py:Test",
      "type": "class",
      "name": "Test",
      "file": "testing/example_scripts/unittest/test_unittest_asynctest.py",
      "line": 11
    },
    {
      "id": "testing/example_scripts/unittest/test_unittest_asynctest.py:Test.tearDown",
      "type": "function",
      "name": "Test.tearDown",
      "file": "testing/example_scripts/unittest/test_unittest_asynctest.py",
      "line": 12
    },
    {
      "id": "testing/example_scripts/unittest/test_unittest_asynctest.py:Test.test_error",
      "type": "function",
      "name": "Test.test_error",
      "file": "testing/example_scripts/unittest/test_unittest_asynctest.py",
      "line": 15
    },
    {
      "id": "testing/example_scripts/unittest/test_unittest_asynctest.py:Test.test_ok",
      "type": "function",
      "name": "Test.test_ok",
      "file": "testing/example_scripts/unittest/test_unittest_asynctest.py",
      "line": 19
    },
    {
      "id": "testing/example_scripts/unittest/test_unittest_asynctest.py:Test.test_teardowns",
      "type": "function",
      "name": "Test.test_teardowns",
      "file": "testing/example_scripts/unittest/test_unittest_asynctest.py",
      "line": 22
    },
    {
      "id": "testing/example_scripts/unittest/test_setup_skip.py",
      "type": "file",
      "name": "test_setup_skip.py",
      "file": "testing/example_scripts/unittest/test_setup_skip.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/unittest/test_setup_skip.py:Base",
      "type": "class",
      "name": "Base",
      "file": "testing/example_scripts/unittest/test_setup_skip.py",
      "line": 5
    },
    {
      "id": "testing/example_scripts/unittest/test_setup_skip.py:Base.setUp",
      "type": "function",
      "name": "Base.setUp",
      "file": "testing/example_scripts/unittest/test_setup_skip.py",
      "line": 6
    },
    {
      "id": "testing/example_scripts/unittest/test_setup_skip.py:Test",
      "type": "class",
      "name": "Test",
      "file": "testing/example_scripts/unittest/test_setup_skip.py",
      "line": 11
    },
    {
      "id": "testing/example_scripts/unittest/test_setup_skip.py:Test.test_foo",
      "type": "function",
      "name": "Test.test_foo",
      "file": "testing/example_scripts/unittest/test_setup_skip.py",
      "line": 12
    },
    {
      "id": "testing/example_scripts/unittest/test_setup_skip_module.py",
      "type": "file",
      "name": "test_setup_skip_module.py",
      "file": "testing/example_scripts/unittest/test_setup_skip_module.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/unittest/test_setup_skip_module.py:setUpModule",
      "type": "function",
      "name": "setUpModule",
      "file": "testing/example_scripts/unittest/test_setup_skip_module.py",
      "line": 5
    },
    {
      "id": "testing/example_scripts/unittest/test_setup_skip_module.py:Base",
      "type": "class",
      "name": "Base",
      "file": "testing/example_scripts/unittest/test_setup_skip_module.py",
      "line": 10
    },
    {
      "id": "testing/example_scripts/unittest/test_setup_skip_module.py:Base.test",
      "type": "function",
      "name": "Base.test",
      "file": "testing/example_scripts/unittest/test_setup_skip_module.py",
      "line": 11
    },
    {
      "id": "testing/example_scripts/unittest/test_setup_skip_class.py",
      "type": "file",
      "name": "test_setup_skip_class.py",
      "file": "testing/example_scripts/unittest/test_setup_skip_class.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/unittest/test_setup_skip_class.py:Base",
      "type": "class",
      "name": "Base",
      "file": "testing/example_scripts/unittest/test_setup_skip_class.py",
      "line": 5
    },
    {
      "id": "testing/example_scripts/unittest/test_setup_skip_class.py:Base.setUpClass",
      "type": "function",
      "name": "Base.setUpClass",
      "file": "testing/example_scripts/unittest/test_setup_skip_class.py",
      "line": 7
    },
    {
      "id": "testing/example_scripts/unittest/test_setup_skip_class.py:Test",
      "type": "class",
      "name": "Test",
      "file": "testing/example_scripts/unittest/test_setup_skip_class.py",
      "line": 12
    },
    {
      "id": "testing/example_scripts/unittest/test_setup_skip_class.py:Test.test_foo",
      "type": "function",
      "name": "Test.test_foo",
      "file": "testing/example_scripts/unittest/test_setup_skip_class.py",
      "line": 13
    },
    {
      "id": "testing/example_scripts/unittest/test_unittest_asyncio.py",
      "type": "file",
      "name": "test_unittest_asyncio.py",
      "file": "testing/example_scripts/unittest/test_unittest_asyncio.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/unittest/test_unittest_asyncio.py:AsyncArguments",
      "type": "class",
      "name": "AsyncArguments",
      "file": "testing/example_scripts/unittest/test_unittest_asyncio.py",
      "line": 8
    },
    {
      "id": "testing/example_scripts/unittest/test_unittest_asyncio.py:AsyncArguments.asyncTearDown",
      "type": "function",
      "name": "AsyncArguments.asyncTearDown",
      "file": "testing/example_scripts/unittest/test_unittest_asyncio.py",
      "line": 9
    },
    {
      "id": "testing/example_scripts/unittest/test_unittest_asyncio.py:AsyncArguments.test_something_async",
      "type": "function",
      "name": "AsyncArguments.test_something_async",
      "file": "testing/example_scripts/unittest/test_unittest_asyncio.py",
      "line": 12
    },
    {
      "id": "testing/example_scripts/unittest/test_unittest_asyncio.py:AsyncArguments.test_something_async.addition",
      "type": "function",
      "name": "AsyncArguments.test_something_async.addition",
      "file": "testing/example_scripts/unittest/test_unittest_asyncio.py",
      "line": 13
    },
    {
      "id": "testing/example_scripts/unittest/test_unittest_asyncio.py:AsyncArguments.test_something_async_fails",
      "type": "function",
      "name": "AsyncArguments.test_something_async_fails",
      "file": "testing/example_scripts/unittest/test_unittest_asyncio.py",
      "line": 18
    },
    {
      "id": "testing/example_scripts/unittest/test_unittest_asyncio.py:AsyncArguments.test_something_async_fails.addition",
      "type": "function",
      "name": "AsyncArguments.test_something_async_fails.addition",
      "file": "testing/example_scripts/unittest/test_unittest_asyncio.py",
      "line": 19
    },
    {
      "id": "testing/example_scripts/unittest/test_unittest_asyncio.py:AsyncArguments.test_teardowns",
      "type": "function",
      "name": "AsyncArguments.test_teardowns",
      "file": "testing/example_scripts/unittest/test_unittest_asyncio.py",
      "line": 24
    },
    {
      "id": "testing/example_scripts/unittest/test_unittest_plain_async.py",
      "type": "file",
      "name": "test_unittest_plain_async.py",
      "file": "testing/example_scripts/unittest/test_unittest_plain_async.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/unittest/test_unittest_plain_async.py:Test",
      "type": "class",
      "name": "Test",
      "file": "testing/example_scripts/unittest/test_unittest_plain_async.py",
      "line": 4
    },
    {
      "id": "testing/example_scripts/unittest/test_unittest_plain_async.py:Test.test_foo",
      "type": "function",
      "name": "Test.test_foo",
      "file": "testing/example_scripts/unittest/test_unittest_plain_async.py",
      "line": 5
    },
    {
      "id": "testing/example_scripts/unittest/test_parametrized_fixture_error_message.py",
      "type": "file",
      "name": "test_parametrized_fixture_error_message.py",
      "file": "testing/example_scripts/unittest/test_parametrized_fixture_error_message.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/unittest/test_parametrized_fixture_error_message.py:two",
      "type": "function",
      "name": "two",
      "file": "testing/example_scripts/unittest/test_parametrized_fixture_error_message.py",
      "line": 7
    },
    {
      "id": "testing/example_scripts/unittest/test_parametrized_fixture_error_message.py:TestSomethingElse",
      "type": "class",
      "name": "TestSomethingElse",
      "file": "testing/example_scripts/unittest/test_parametrized_fixture_error_message.py",
      "line": 12
    },
    {
      "id": "testing/example_scripts/unittest/test_parametrized_fixture_error_message.py:TestSomethingElse.test_two",
      "type": "function",
      "name": "TestSomethingElse.test_two",
      "file": "testing/example_scripts/unittest/test_parametrized_fixture_error_message.py",
      "line": 13
    },
    {
      "id": "testing/example_scripts/conftest_usageerror",
      "type": "directory",
      "name": "conftest_usageerror",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/conftest_usageerror/conftest.py",
      "type": "file",
      "name": "conftest.py",
      "file": "testing/example_scripts/conftest_usageerror/conftest.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/conftest_usageerror/conftest.py:pytest_configure",
      "type": "function",
      "name": "pytest_configure",
      "file": "testing/example_scripts/conftest_usageerror/conftest.py",
      "line": 1
    },
    {
      "id": "testing/example_scripts/conftest_usageerror/conftest.py:pytest_unconfigure",
      "type": "function",
      "name": "pytest_unconfigure",
      "file": "testing/example_scripts/conftest_usageerror/conftest.py",
      "line": 7
    },
    {
      "id": "testing/example_scripts/marks",
      "type": "directory",
      "name": "marks",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/marks/marks_considered_keywords",
      "type": "directory",
      "name": "marks_considered_keywords",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/marks/marks_considered_keywords/conftest.py",
      "type": "file",
      "name": "conftest.py",
      "file": "testing/example_scripts/marks/marks_considered_keywords/conftest.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/marks/marks_considered_keywords/test_marks_as_keywords.py",
      "type": "file",
      "name": "test_marks_as_keywords.py",
      "file": "testing/example_scripts/marks/marks_considered_keywords/test_marks_as_keywords.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/marks/marks_considered_keywords/test_marks_as_keywords.py:test_mark",
      "type": "function",
      "name": "test_mark",
      "file": "testing/example_scripts/marks/marks_considered_keywords/test_marks_as_keywords.py",
      "line": 5
    },
    {
      "id": "testing/example_scripts/config",
      "type": "directory",
      "name": "config",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/config/collect_pytest_prefix",
      "type": "directory",
      "name": "collect_pytest_prefix",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/config/collect_pytest_prefix/conftest.py",
      "type": "file",
      "name": "conftest.py",
      "file": "testing/example_scripts/config/collect_pytest_prefix/conftest.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/config/collect_pytest_prefix/conftest.py:pytest_something",
      "type": "class",
      "name": "pytest_something",
      "file": "testing/example_scripts/config/collect_pytest_prefix/conftest.py",
      "line": 1
    },
    {
      "id": "testing/example_scripts/config/collect_pytest_prefix/test_foo.py",
      "type": "file",
      "name": "test_foo.py",
      "file": "testing/example_scripts/config/collect_pytest_prefix/test_foo.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/config/collect_pytest_prefix/test_foo.py:test_foo",
      "type": "function",
      "name": "test_foo",
      "file": "testing/example_scripts/config/collect_pytest_prefix/test_foo.py",
      "line": 1
    },
    {
      "id": "testing/example_scripts/doctest",
      "type": "directory",
      "name": "doctest",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/doctest/main_py",
      "type": "directory",
      "name": "main_py",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/doctest/main_py/test_normal_module.py",
      "type": "file",
      "name": "test_normal_module.py",
      "file": "testing/example_scripts/doctest/main_py/test_normal_module.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/doctest/main_py/test_normal_module.py:test_doc",
      "type": "function",
      "name": "test_doc",
      "file": "testing/example_scripts/doctest/main_py/test_normal_module.py",
      "line": 1
    },
    {
      "id": "testing/example_scripts/doctest/main_py/__main__.py",
      "type": "file",
      "name": "__main__.py",
      "file": "testing/example_scripts/doctest/main_py/__main__.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/doctest/main_py/__main__.py:test_this_is_ignored",
      "type": "function",
      "name": "test_this_is_ignored",
      "file": "testing/example_scripts/doctest/main_py/__main__.py",
      "line": 1
    },
    {
      "id": "testing/example_scripts/issue88_initial_file_multinodes",
      "type": "directory",
      "name": "issue88_initial_file_multinodes",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/issue88_initial_file_multinodes/conftest.py",
      "type": "file",
      "name": "conftest.py",
      "file": "testing/example_scripts/issue88_initial_file_multinodes/conftest.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/issue88_initial_file_multinodes/conftest.py:MyFile",
      "type": "class",
      "name": "MyFile",
      "file": "testing/example_scripts/issue88_initial_file_multinodes/conftest.py",
      "line": 4
    },
    {
      "id": "testing/example_scripts/issue88_initial_file_multinodes/conftest.py:MyFile.collect",
      "type": "function",
      "name": "MyFile.collect",
      "file": "testing/example_scripts/issue88_initial_file_multinodes/conftest.py",
      "line": 5
    },
    {
      "id": "testing/example_scripts/issue88_initial_file_multinodes/conftest.py:pytest_collect_file",
      "type": "function",
      "name": "pytest_collect_file",
      "file": "testing/example_scripts/issue88_initial_file_multinodes/conftest.py",
      "line": 9
    },
    {
      "id": "testing/example_scripts/issue88_initial_file_multinodes/conftest.py:MyItem",
      "type": "class",
      "name": "MyItem",
      "file": "testing/example_scripts/issue88_initial_file_multinodes/conftest.py",
      "line": 13
    },
    {
      "id": "testing/example_scripts/issue88_initial_file_multinodes/test_hello.py",
      "type": "file",
      "name": "test_hello.py",
      "file": "testing/example_scripts/issue88_initial_file_multinodes/test_hello.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/issue88_initial_file_multinodes/test_hello.py:test_hello",
      "type": "function",
      "name": "test_hello",
      "file": "testing/example_scripts/issue88_initial_file_multinodes/test_hello.py",
      "line": 1
    },
    {
      "id": "testing/example_scripts/acceptance",
      "type": "directory",
      "name": "acceptance",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/acceptance/fixture_mock_integration.py",
      "type": "file",
      "name": "fixture_mock_integration.py",
      "file": "testing/example_scripts/acceptance/fixture_mock_integration.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/acceptance/fixture_mock_integration.py:my_fixture",
      "type": "function",
      "name": "my_fixture",
      "file": "testing/example_scripts/acceptance/fixture_mock_integration.py",
      "line": 11
    },
    {
      "id": "testing/example_scripts/acceptance/fixture_mock_integration.py:test_foobar",
      "type": "function",
      "name": "test_foobar",
      "file": "testing/example_scripts/acceptance/fixture_mock_integration.py",
      "line": 15
    },
    {
      "id": "testing/example_scripts/perf_examples",
      "type": "directory",
      "name": "perf_examples",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/perf_examples/collect_stats",
      "type": "directory",
      "name": "collect_stats",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/perf_examples/collect_stats/template_test.py",
      "type": "file",
      "name": "template_test.py",
      "file": "testing/example_scripts/perf_examples/collect_stats/template_test.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/perf_examples/collect_stats/template_test.py:test_x",
      "type": "function",
      "name": "test_x",
      "file": "testing/example_scripts/perf_examples/collect_stats/template_test.py",
      "line": 1
    },
    {
      "id": "testing/example_scripts/perf_examples/collect_stats/generate_folders.py",
      "type": "file",
      "name": "generate_folders.py",
      "file": "testing/example_scripts/perf_examples/collect_stats/generate_folders.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/perf_examples/collect_stats/generate_folders.py:generate_folders",
      "type": "function",
      "name": "generate_folders",
      "file": "testing/example_scripts/perf_examples/collect_stats/generate_folders.py",
      "line": 11
    },
    {
      "id": "testing/example_scripts/tmpdir",
      "type": "directory",
      "name": "tmpdir",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/tmpdir/tmp_path_fixture.py",
      "type": "file",
      "name": "tmp_path_fixture.py",
      "file": "testing/example_scripts/tmpdir/tmp_path_fixture.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/tmpdir/tmp_path_fixture.py:test_fixture",
      "type": "function",
      "name": "test_fixture",
      "file": "testing/example_scripts/tmpdir/tmp_path_fixture.py",
      "line": 5
    },
    {
      "id": "testing/example_scripts/fixtures",
      "type": "directory",
      "name": "fixtures",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/test_getfixturevalue_dynamic.py",
      "type": "file",
      "name": "test_getfixturevalue_dynamic.py",
      "file": "testing/example_scripts/fixtures/test_getfixturevalue_dynamic.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/test_getfixturevalue_dynamic.py:dynamic",
      "type": "function",
      "name": "dynamic",
      "file": "testing/example_scripts/fixtures/test_getfixturevalue_dynamic.py",
      "line": 5
    },
    {
      "id": "testing/example_scripts/fixtures/test_getfixturevalue_dynamic.py:a",
      "type": "function",
      "name": "a",
      "file": "testing/example_scripts/fixtures/test_getfixturevalue_dynamic.py",
      "line": 10
    },
    {
      "id": "testing/example_scripts/fixtures/test_getfixturevalue_dynamic.py:b",
      "type": "function",
      "name": "b",
      "file": "testing/example_scripts/fixtures/test_getfixturevalue_dynamic.py",
      "line": 15
    },
    {
      "id": "testing/example_scripts/fixtures/test_getfixturevalue_dynamic.py:test",
      "type": "function",
      "name": "test",
      "file": "testing/example_scripts/fixtures/test_getfixturevalue_dynamic.py",
      "line": 19
    },
    {
      "id": "testing/example_scripts/fixtures/test_fixture_named_request.py",
      "type": "file",
      "name": "test_fixture_named_request.py",
      "file": "testing/example_scripts/fixtures/test_fixture_named_request.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/test_fixture_named_request.py:request",
      "type": "function",
      "name": "request",
      "file": "testing/example_scripts/fixtures/test_fixture_named_request.py",
      "line": 5
    },
    {
      "id": "testing/example_scripts/fixtures/test_fixture_named_request.py:test",
      "type": "function",
      "name": "test",
      "file": "testing/example_scripts/fixtures/test_fixture_named_request.py",
      "line": 9
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures",
      "type": "directory",
      "name": "fill_fixtures",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_module_class.py",
      "type": "file",
      "name": "test_extend_fixture_module_class.py",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_module_class.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_module_class.py:spam",
      "type": "function",
      "name": "spam",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_module_class.py",
      "line": 5
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_module_class.py:TestSpam",
      "type": "class",
      "name": "TestSpam",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_module_class.py",
      "line": 9
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_module_class.py:TestSpam.spam",
      "type": "function",
      "name": "TestSpam.spam",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_module_class.py",
      "line": 11
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_module_class.py:TestSpam.test_spam",
      "type": "function",
      "name": "TestSpam.test_spam",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_module_class.py",
      "line": 14
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_detect_recursive_dependency_error.py",
      "type": "file",
      "name": "test_detect_recursive_dependency_error.py",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_detect_recursive_dependency_error.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_detect_recursive_dependency_error.py:fix1",
      "type": "function",
      "name": "fix1",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_detect_recursive_dependency_error.py",
      "line": 5
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_detect_recursive_dependency_error.py:fix2",
      "type": "function",
      "name": "fix2",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_detect_recursive_dependency_error.py",
      "line": 10
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_detect_recursive_dependency_error.py:test",
      "type": "function",
      "name": "test",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_detect_recursive_dependency_error.py",
      "line": 14
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_basic.py",
      "type": "file",
      "name": "test_funcarg_basic.py",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_basic.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_basic.py:some",
      "type": "function",
      "name": "some",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_basic.py",
      "line": 5
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_basic.py:other",
      "type": "function",
      "name": "other",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_basic.py",
      "line": 10
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_basic.py:test_func",
      "type": "function",
      "name": "test_func",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_basic.py",
      "line": 14
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookupfails.py",
      "type": "file",
      "name": "test_funcarg_lookupfails.py",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookupfails.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookupfails.py:xyzsomething",
      "type": "function",
      "name": "xyzsomething",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookupfails.py",
      "line": 5
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookupfails.py:test_func",
      "type": "function",
      "name": "test_func",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookupfails.py",
      "line": 9
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_modulelevel.py",
      "type": "file",
      "name": "test_funcarg_lookup_modulelevel.py",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_modulelevel.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_modulelevel.py:something",
      "type": "function",
      "name": "something",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_modulelevel.py",
      "line": 5
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_modulelevel.py:TestClass",
      "type": "class",
      "name": "TestClass",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_modulelevel.py",
      "line": 9
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_modulelevel.py:TestClass.test_method",
      "type": "function",
      "name": "TestClass.test_method",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_modulelevel.py",
      "line": 10
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_modulelevel.py:test_func",
      "type": "function",
      "name": "test_func",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_modulelevel.py",
      "line": 14
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_classlevel.py",
      "type": "file",
      "name": "test_funcarg_lookup_classlevel.py",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_classlevel.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_classlevel.py:TestClass",
      "type": "class",
      "name": "TestClass",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_classlevel.py",
      "line": 4
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_classlevel.py:TestClass.something",
      "type": "function",
      "name": "TestClass.something",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_classlevel.py",
      "line": 6
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_classlevel.py:TestClass.test_method",
      "type": "function",
      "name": "TestClass.test_method",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_classlevel.py",
      "line": 9
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest",
      "type": "directory",
      "name": "test_extend_fixture_conftest_conftest",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/conftest.py",
      "type": "file",
      "name": "conftest.py",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/conftest.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/conftest.py:spam",
      "type": "function",
      "name": "spam",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/conftest.py",
      "line": 5
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/pkg",
      "type": "directory",
      "name": "pkg",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/pkg/conftest.py",
      "type": "file",
      "name": "conftest.py",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/pkg/conftest.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/pkg/conftest.py:spam",
      "type": "function",
      "name": "spam",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/pkg/conftest.py",
      "line": 5
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/pkg/test_spam.py",
      "type": "file",
      "name": "test_spam.py",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/pkg/test_spam.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/pkg/test_spam.py:test_spam",
      "type": "function",
      "name": "test_spam",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/pkg/test_spam.py",
      "line": 1
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/pkg/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/pkg/__init__.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_module",
      "type": "directory",
      "name": "test_extend_fixture_conftest_module",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_module/conftest.py",
      "type": "file",
      "name": "conftest.py",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_module/conftest.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_module/conftest.py:spam",
      "type": "function",
      "name": "spam",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_module/conftest.py",
      "line": 5
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_module/test_extend_fixture_conftest_module.py",
      "type": "file",
      "name": "test_extend_fixture_conftest_module.py",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_module/test_extend_fixture_conftest_module.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_module/test_extend_fixture_conftest_module.py:spam",
      "type": "function",
      "name": "spam",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_module/test_extend_fixture_conftest_module.py",
      "line": 5
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_module/test_extend_fixture_conftest_module.py:test_spam",
      "type": "function",
      "name": "test_spam",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_module/test_extend_fixture_conftest_module.py",
      "line": 9
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir",
      "type": "directory",
      "name": "test_conftest_funcargs_only_available_in_subdir",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub1",
      "type": "directory",
      "name": "sub1",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub1/conftest.py",
      "type": "file",
      "name": "conftest.py",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub1/conftest.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub1/conftest.py:arg1",
      "type": "function",
      "name": "arg1",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub1/conftest.py",
      "line": 5
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub1/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub1/__init__.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub1/test_in_sub1.py",
      "type": "file",
      "name": "test_in_sub1.py",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub1/test_in_sub1.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub1/test_in_sub1.py:test_1",
      "type": "function",
      "name": "test_1",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub1/test_in_sub1.py",
      "line": 1
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub2",
      "type": "directory",
      "name": "sub2",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub2/conftest.py",
      "type": "file",
      "name": "conftest.py",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub2/conftest.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub2/conftest.py:arg2",
      "type": "function",
      "name": "arg2",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub2/conftest.py",
      "line": 5
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub2/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub2/__init__.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub2/test_in_sub2.py",
      "type": "file",
      "name": "test_in_sub2.py",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub2/test_in_sub2.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub2/test_in_sub2.py:test_2",
      "type": "function",
      "name": "test_2",
      "file": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub2/test_in_sub2.py",
      "line": 1
    },
    {
      "id": "testing/example_scripts/fixtures/custom_item",
      "type": "directory",
      "name": "custom_item",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/custom_item/conftest.py",
      "type": "file",
      "name": "conftest.py",
      "file": "testing/example_scripts/fixtures/custom_item/conftest.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/custom_item/conftest.py:CustomItem",
      "type": "class",
      "name": "CustomItem",
      "file": "testing/example_scripts/fixtures/custom_item/conftest.py",
      "line": 4
    },
    {
      "id": "testing/example_scripts/fixtures/custom_item/conftest.py:CustomItem.runtest",
      "type": "function",
      "name": "CustomItem.runtest",
      "file": "testing/example_scripts/fixtures/custom_item/conftest.py",
      "line": 5
    },
    {
      "id": "testing/example_scripts/fixtures/custom_item/conftest.py:CustomFile",
      "type": "class",
      "name": "CustomFile",
      "file": "testing/example_scripts/fixtures/custom_item/conftest.py",
      "line": 9
    },
    {
      "id": "testing/example_scripts/fixtures/custom_item/conftest.py:CustomFile.collect",
      "type": "function",
      "name": "CustomFile.collect",
      "file": "testing/example_scripts/fixtures/custom_item/conftest.py",
      "line": 10
    },
    {
      "id": "testing/example_scripts/fixtures/custom_item/conftest.py:pytest_collect_file",
      "type": "function",
      "name": "pytest_collect_file",
      "file": "testing/example_scripts/fixtures/custom_item/conftest.py",
      "line": 14
    },
    {
      "id": "testing/example_scripts/fixtures/custom_item/foo",
      "type": "directory",
      "name": "foo",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/custom_item/foo/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "testing/example_scripts/fixtures/custom_item/foo/__init__.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/custom_item/foo/test_foo.py",
      "type": "file",
      "name": "test_foo.py",
      "file": "testing/example_scripts/fixtures/custom_item/foo/test_foo.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/fixtures/custom_item/foo/test_foo.py:test",
      "type": "function",
      "name": "test",
      "file": "testing/example_scripts/fixtures/custom_item/foo/test_foo.py",
      "line": 1
    },
    {
      "id": "testing/example_scripts/warnings",
      "type": "directory",
      "name": "warnings",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/warnings/test_group_warnings_by_message.py",
      "type": "file",
      "name": "test_group_warnings_by_message.py",
      "file": "testing/example_scripts/warnings/test_group_warnings_by_message.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/warnings/test_group_warnings_by_message.py:func",
      "type": "function",
      "name": "func",
      "file": "testing/example_scripts/warnings/test_group_warnings_by_message.py",
      "line": 6
    },
    {
      "id": "testing/example_scripts/warnings/test_group_warnings_by_message.py:test_foo",
      "type": "function",
      "name": "test_foo",
      "file": "testing/example_scripts/warnings/test_group_warnings_by_message.py",
      "line": 11
    },
    {
      "id": "testing/example_scripts/warnings/test_group_warnings_by_message.py:test_foo_1",
      "type": "function",
      "name": "test_foo_1",
      "file": "testing/example_scripts/warnings/test_group_warnings_by_message.py",
      "line": 15
    },
    {
      "id": "testing/example_scripts/warnings/test_group_warnings_by_message.py:test_bar",
      "type": "function",
      "name": "test_bar",
      "file": "testing/example_scripts/warnings/test_group_warnings_by_message.py",
      "line": 20
    },
    {
      "id": "testing/example_scripts/warnings/test_group_warnings_by_message_summary",
      "type": "directory",
      "name": "test_group_warnings_by_message_summary",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_1.py",
      "type": "file",
      "name": "test_1.py",
      "file": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_1.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_1.py:func",
      "type": "function",
      "name": "func",
      "file": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_1.py",
      "line": 6
    },
    {
      "id": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_1.py:test_foo",
      "type": "function",
      "name": "test_foo",
      "file": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_1.py",
      "line": 11
    },
    {
      "id": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_1.py:test_foo_1",
      "type": "function",
      "name": "test_foo_1",
      "file": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_1.py",
      "line": 15
    },
    {
      "id": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_1.py:test_bar",
      "type": "function",
      "name": "test_bar",
      "file": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_1.py",
      "line": 20
    },
    {
      "id": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_2.py",
      "type": "file",
      "name": "test_2.py",
      "file": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_2.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_2.py:test_2",
      "type": "function",
      "name": "test_2",
      "file": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_2.py",
      "line": 4
    },
    {
      "id": "testing/example_scripts/dataclasses",
      "type": "directory",
      "name": "dataclasses",
      "file": "",
      "line": 0
    },
    {
      "id": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py",
      "type": "file",
      "name": "test_compare_recursive_dataclasses.py",
      "file": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py:S",
      "type": "class",
      "name": "S",
      "file": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py",
      "line": 5
    },
    {
      "id": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py:C",
      "type": "class",
      "name": "C",
      "file": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py",
      "line": 11
    },
    {
      "id": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py:C2",
      "type": "class",
      "name": "C2",
      "file": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py",
      "line": 17
    },
    {
      "id": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py:C3",
      "type": "class",
      "name": "C3",
      "file": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py",
      "line": 23
    },
    {
      "id": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py:test_recursive_dataclasses",
      "type": "function",
      "name": "test_recursive_dataclasses",
      "file": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py",
      "line": 30
    },
    {
      "id": "testing/example_scripts/dataclasses/test_compare_two_different_dataclasses.py",
      "type": "file",
      "name": "test_compare_two_different_dataclasses.py",
      "file": "testing/example_scripts/dataclasses/test_compare_two_different_dataclasses.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/dataclasses/test_compare_two_different_dataclasses.py:test_comparing_two_different_data_classes",
      "type": "function",
      "name": "test_comparing_two_different_data_classes",
      "file": "testing/example_scripts/dataclasses/test_compare_two_different_dataclasses.py",
      "line": 5
    },
    {
      "id": "testing/example_scripts/dataclasses/test_compare_two_different_dataclasses.py:test_comparing_two_different_data_classes.SimpleDataObjectOne",
      "type": "class",
      "name": "test_comparing_two_different_data_classes.SimpleDataObjectOne",
      "file": "testing/example_scripts/dataclasses/test_compare_two_different_dataclasses.py",
      "line": 7
    },
    {
      "id": "testing/example_scripts/dataclasses/test_compare_two_different_dataclasses.py:test_comparing_two_different_data_classes.SimpleDataObjectTwo",
      "type": "class",
      "name": "test_comparing_two_different_data_classes.SimpleDataObjectTwo",
      "file": "testing/example_scripts/dataclasses/test_compare_two_different_dataclasses.py",
      "line": 12
    },
    {
      "id": "testing/example_scripts/dataclasses/test_compare_dataclasses_with_custom_eq.py",
      "type": "file",
      "name": "test_compare_dataclasses_with_custom_eq.py",
      "file": "testing/example_scripts/dataclasses/test_compare_dataclasses_with_custom_eq.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/dataclasses/test_compare_dataclasses_with_custom_eq.py:test_dataclasses",
      "type": "function",
      "name": "test_dataclasses",
      "file": "testing/example_scripts/dataclasses/test_compare_dataclasses_with_custom_eq.py",
      "line": 5
    },
    {
      "id": "testing/example_scripts/dataclasses/test_compare_dataclasses_with_custom_eq.py:test_dataclasses.SimpleDataObject",
      "type": "class",
      "name": "test_dataclasses.SimpleDataObject",
      "file": "testing/example_scripts/dataclasses/test_compare_dataclasses_with_custom_eq.py",
      "line": 7
    },
    {
      "id": "testing/example_scripts/dataclasses/test_compare_dataclasses_with_custom_eq.py:test_dataclasses.SimpleDataObject.__eq__",
      "type": "function",
      "name": "test_dataclasses.SimpleDataObject.__eq__",
      "file": "testing/example_scripts/dataclasses/test_compare_dataclasses_with_custom_eq.py",
      "line": 11
    },
    {
      "id": "testing/example_scripts/dataclasses/test_compare_dataclasses.py",
      "type": "file",
      "name": "test_compare_dataclasses.py",
      "file": "testing/example_scripts/dataclasses/test_compare_dataclasses.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/dataclasses/test_compare_dataclasses.py:test_dataclasses",
      "type": "function",
      "name": "test_dataclasses",
      "file": "testing/example_scripts/dataclasses/test_compare_dataclasses.py",
      "line": 5
    },
    {
      "id": "testing/example_scripts/dataclasses/test_compare_dataclasses.py:test_dataclasses.SimpleDataObject",
      "type": "class",
      "name": "test_dataclasses.SimpleDataObject",
      "file": "testing/example_scripts/dataclasses/test_compare_dataclasses.py",
      "line": 7
    },
    {
      "id": "testing/example_scripts/dataclasses/test_compare_dataclasses_field_comparison_off.py",
      "type": "file",
      "name": "test_compare_dataclasses_field_comparison_off.py",
      "file": "testing/example_scripts/dataclasses/test_compare_dataclasses_field_comparison_off.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/dataclasses/test_compare_dataclasses_field_comparison_off.py:test_dataclasses_with_attribute_comparison_off",
      "type": "function",
      "name": "test_dataclasses_with_attribute_comparison_off",
      "file": "testing/example_scripts/dataclasses/test_compare_dataclasses_field_comparison_off.py",
      "line": 5
    },
    {
      "id": "testing/example_scripts/dataclasses/test_compare_dataclasses_field_comparison_off.py:test_dataclasses_with_attribute_comparison_off.SimpleDataObject",
      "type": "class",
      "name": "test_dataclasses_with_attribute_comparison_off.SimpleDataObject",
      "file": "testing/example_scripts/dataclasses/test_compare_dataclasses_field_comparison_off.py",
      "line": 7
    },
    {
      "id": "testing/example_scripts/dataclasses/test_compare_initvar.py",
      "type": "file",
      "name": "test_compare_initvar.py",
      "file": "testing/example_scripts/dataclasses/test_compare_initvar.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/dataclasses/test_compare_initvar.py:Foo",
      "type": "class",
      "name": "Foo",
      "file": "testing/example_scripts/dataclasses/test_compare_initvar.py",
      "line": 6
    },
    {
      "id": "testing/example_scripts/dataclasses/test_compare_initvar.py:test_demonstrate",
      "type": "function",
      "name": "test_demonstrate",
      "file": "testing/example_scripts/dataclasses/test_compare_initvar.py",
      "line": 11
    },
    {
      "id": "testing/example_scripts/dataclasses/test_compare_dataclasses_verbose.py",
      "type": "file",
      "name": "test_compare_dataclasses_verbose.py",
      "file": "testing/example_scripts/dataclasses/test_compare_dataclasses_verbose.py",
      "line": 0
    },
    {
      "id": "testing/example_scripts/dataclasses/test_compare_dataclasses_verbose.py:test_dataclasses_verbose",
      "type": "function",
      "name": "test_dataclasses_verbose",
      "file": "testing/example_scripts/dataclasses/test_compare_dataclasses_verbose.py",
      "line": 5
    },
    {
      "id": "testing/example_scripts/dataclasses/test_compare_dataclasses_verbose.py:test_dataclasses_verbose.SimpleDataObject",
      "type": "class",
      "name": "test_dataclasses_verbose.SimpleDataObject",
      "file": "testing/example_scripts/dataclasses/test_compare_dataclasses_verbose.py",
      "line": 7
    },
    {
      "id": "extra",
      "type": "directory",
      "name": "extra",
      "file": "",
      "line": 0
    },
    {
      "id": "extra/get_issues.py",
      "type": "file",
      "name": "get_issues.py",
      "file": "extra/get_issues.py",
      "line": 0
    },
    {
      "id": "extra/get_issues.py:get_issues",
      "type": "function",
      "name": "get_issues",
      "file": "extra/get_issues.py",
      "line": 9
    },
    {
      "id": "extra/get_issues.py:main",
      "type": "function",
      "name": "main",
      "file": "extra/get_issues.py",
      "line": 33
    },
    {
      "id": "extra/get_issues.py:_get_kind",
      "type": "function",
      "name": "_get_kind",
      "file": "extra/get_issues.py",
      "line": 47
    },
    {
      "id": "extra/get_issues.py:report",
      "type": "function",
      "name": "report",
      "file": "extra/get_issues.py",
      "line": 55
    },
    {
      "id": "scripts",
      "type": "directory",
      "name": "scripts",
      "file": "",
      "line": 0
    },
    {
      "id": "scripts/release.py",
      "type": "file",
      "name": "release.py",
      "file": "scripts/release.py",
      "line": 0
    },
    {
      "id": "scripts/release.py:announce",
      "type": "function",
      "name": "announce",
      "file": "scripts/release.py",
      "line": 13
    },
    {
      "id": "scripts/release.py:regen",
      "type": "function",
      "name": "regen",
      "file": "scripts/release.py",
      "line": 64
    },
    {
      "id": "scripts/release.py:fix_formatting",
      "type": "function",
      "name": "fix_formatting",
      "file": "scripts/release.py",
      "line": 73
    },
    {
      "id": "scripts/release.py:check_links",
      "type": "function",
      "name": "check_links",
      "file": "scripts/release.py",
      "line": 81
    },
    {
      "id": "scripts/release.py:pre_release",
      "type": "function",
      "name": "pre_release",
      "file": "scripts/release.py",
      "line": 87
    },
    {
      "id": "scripts/release.py:changelog",
      "type": "function",
      "name": "changelog",
      "file": "scripts/release.py",
      "line": 105
    },
    {
      "id": "scripts/release.py:main",
      "type": "function",
      "name": "main",
      "file": "scripts/release.py",
      "line": 110
    },
    {
      "id": "scripts/publish-gh-release-notes.py",
      "type": "file",
      "name": "publish-gh-release-notes.py",
      "file": "scripts/publish-gh-release-notes.py",
      "line": 0
    },
    {
      "id": "scripts/publish-gh-release-notes.py:publish_github_release",
      "type": "function",
      "name": "publish_github_release",
      "file": "scripts/publish-gh-release-notes.py",
      "line": 31
    },
    {
      "id": "scripts/publish-gh-release-notes.py:parse_changelog",
      "type": "function",
      "name": "parse_changelog",
      "file": "scripts/publish-gh-release-notes.py",
      "line": 38
    },
    {
      "id": "scripts/publish-gh-release-notes.py:convert_rst_to_md",
      "type": "function",
      "name": "convert_rst_to_md",
      "file": "scripts/publish-gh-release-notes.py",
      "line": 60
    },
    {
      "id": "scripts/publish-gh-release-notes.py:main",
      "type": "function",
      "name": "main",
      "file": "scripts/publish-gh-release-notes.py",
      "line": 66
    },
    {
      "id": "scripts/update-plugin-list.py",
      "type": "file",
      "name": "update-plugin-list.py",
      "file": "scripts/update-plugin-list.py",
      "line": 0
    },
    {
      "id": "scripts/update-plugin-list.py:escape_rst",
      "type": "function",
      "name": "escape_rst",
      "file": "scripts/update-plugin-list.py",
      "line": 43
    },
    {
      "id": "scripts/update-plugin-list.py:iter_plugins",
      "type": "function",
      "name": "iter_plugins",
      "file": "scripts/update-plugin-list.py",
      "line": 56
    },
    {
      "id": "scripts/update-plugin-list.py:iter_plugins.version_sort_key",
      "type": "function",
      "name": "iter_plugins.version_sort_key",
      "file": "scripts/update-plugin-list.py",
      "line": 90
    },
    {
      "id": "scripts/update-plugin-list.py:plugin_definitions",
      "type": "function",
      "name": "plugin_definitions",
      "file": "scripts/update-plugin-list.py",
      "line": 122
    },
    {
      "id": "scripts/update-plugin-list.py:main",
      "type": "function",
      "name": "main",
      "file": "scripts/update-plugin-list.py",
      "line": 138
    },
    {
      "id": "scripts/towncrier-draft-to-file.py",
      "type": "file",
      "name": "towncrier-draft-to-file.py",
      "file": "scripts/towncrier-draft-to-file.py",
      "line": 0
    },
    {
      "id": "scripts/towncrier-draft-to-file.py:main",
      "type": "function",
      "name": "main",
      "file": "scripts/towncrier-draft-to-file.py",
      "line": 5
    },
    {
      "id": "scripts/prepare-release-pr.py",
      "type": "file",
      "name": "prepare-release-pr.py",
      "file": "scripts/prepare-release-pr.py",
      "line": 0
    },
    {
      "id": "scripts/prepare-release-pr.py:InvalidFeatureRelease",
      "type": "class",
      "name": "InvalidFeatureRelease",
      "file": "scripts/prepare-release-pr.py",
      "line": 27
    },
    {
      "id": "scripts/prepare-release-pr.py:login",
      "type": "function",
      "name": "login",
      "file": "scripts/prepare-release-pr.py",
      "line": 41
    },
    {
      "id": "scripts/prepare-release-pr.py:prepare_release_pr",
      "type": "function",
      "name": "prepare_release_pr",
      "file": "scripts/prepare-release-pr.py",
      "line": 49
    },
    {
      "id": "scripts/prepare-release-pr.py:find_next_version",
      "type": "function",
      "name": "find_next_version",
      "file": "scripts/prepare-release-pr.py",
      "line": 136
    },
    {
      "id": "scripts/prepare-release-pr.py:main",
      "type": "function",
      "name": "main",
      "file": "scripts/prepare-release-pr.py",
      "line": 157
    },
    {
      "id": "doc",
      "type": "directory",
      "name": "doc",
      "file": "",
      "line": 0
    },
    {
      "id": "doc/en",
      "type": "directory",
      "name": "en",
      "file": "",
      "line": 0
    },
    {
      "id": "doc/en/conftest.py",
      "type": "file",
      "name": "conftest.py",
      "file": "doc/en/conftest.py",
      "line": 0
    },
    {
      "id": "doc/en/conf.py",
      "type": "file",
      "name": "conf.py",
      "file": "doc/en/conf.py",
      "line": 0
    },
    {
      "id": "doc/en/conf.py:configure_logging",
      "type": "function",
      "name": "configure_logging",
      "file": "doc/en/conf.py",
      "line": 398
    },
    {
      "id": "doc/en/conf.py:configure_logging.WarnLogFilter",
      "type": "class",
      "name": "configure_logging.WarnLogFilter",
      "file": "doc/en/conf.py",
      "line": 403
    },
    {
      "id": "doc/en/conf.py:configure_logging.WarnLogFilter.filter",
      "type": "function",
      "name": "configure_logging.WarnLogFilter.filter",
      "file": "doc/en/conf.py",
      "line": 404
    },
    {
      "id": "doc/en/conf.py:setup",
      "type": "function",
      "name": "setup",
      "file": "doc/en/conf.py",
      "line": 421
    },
    {
      "id": "doc/en/example",
      "type": "directory",
      "name": "example",
      "file": "",
      "line": 0
    },
    {
      "id": "doc/en/example/conftest.py",
      "type": "file",
      "name": "conftest.py",
      "file": "doc/en/example/conftest.py",
      "line": 0
    },
    {
      "id": "doc/en/example/multipython.py",
      "type": "file",
      "name": "multipython.py",
      "file": "doc/en/example/multipython.py",
      "line": 0
    },
    {
      "id": "doc/en/example/multipython.py:python1",
      "type": "function",
      "name": "python1",
      "file": "doc/en/example/multipython.py",
      "line": 15
    },
    {
      "id": "doc/en/example/multipython.py:python2",
      "type": "function",
      "name": "python2",
      "file": "doc/en/example/multipython.py",
      "line": 21
    },
    {
      "id": "doc/en/example/multipython.py:Python",
      "type": "class",
      "name": "Python",
      "file": "doc/en/example/multipython.py",
      "line": 25
    },
    {
      "id": "doc/en/example/multipython.py:Python.dumps",
      "type": "function",
      "name": "Python.dumps",
      "file": "doc/en/example/multipython.py",
      "line": 32
    },
    {
      "id": "doc/en/example/multipython.py:Python.load_and_is_true",
      "type": "function",
      "name": "Python.load_and_is_true",
      "file": "doc/en/example/multipython.py",
      "line": 48
    },
    {
      "id": "doc/en/example/multipython.py:test_basic_objects",
      "type": "function",
      "name": "test_basic_objects",
      "file": "doc/en/example/multipython.py",
      "line": 70
    },
    {
      "id": "doc/en/example/pythoncollection.py",
      "type": "file",
      "name": "pythoncollection.py",
      "file": "doc/en/example/pythoncollection.py",
      "line": 0
    },
    {
      "id": "doc/en/example/pythoncollection.py:test_function",
      "type": "function",
      "name": "test_function",
      "file": "doc/en/example/pythoncollection.py",
      "line": 5
    },
    {
      "id": "doc/en/example/pythoncollection.py:TestClass",
      "type": "class",
      "name": "TestClass",
      "file": "doc/en/example/pythoncollection.py",
      "line": 9
    },
    {
      "id": "doc/en/example/pythoncollection.py:TestClass.test_method",
      "type": "function",
      "name": "TestClass.test_method",
      "file": "doc/en/example/pythoncollection.py",
      "line": 10
    },
    {
      "id": "doc/en/example/pythoncollection.py:TestClass.test_anothermethod",
      "type": "function",
      "name": "TestClass.test_anothermethod",
      "file": "doc/en/example/pythoncollection.py",
      "line": 13
    },
    {
      "id": "doc/en/example/xfail_demo.py",
      "type": "file",
      "name": "xfail_demo.py",
      "file": "doc/en/example/xfail_demo.py",
      "line": 0
    },
    {
      "id": "doc/en/example/xfail_demo.py:test_hello",
      "type": "function",
      "name": "test_hello",
      "file": "doc/en/example/xfail_demo.py",
      "line": 7
    },
    {
      "id": "doc/en/example/xfail_demo.py:test_hello2",
      "type": "function",
      "name": "test_hello2",
      "file": "doc/en/example/xfail_demo.py",
      "line": 12
    },
    {
      "id": "doc/en/example/xfail_demo.py:test_hello3",
      "type": "function",
      "name": "test_hello3",
      "file": "doc/en/example/xfail_demo.py",
      "line": 17
    },
    {
      "id": "doc/en/example/xfail_demo.py:test_hello4",
      "type": "function",
      "name": "test_hello4",
      "file": "doc/en/example/xfail_demo.py",
      "line": 22
    },
    {
      "id": "doc/en/example/xfail_demo.py:test_hello5",
      "type": "function",
      "name": "test_hello5",
      "file": "doc/en/example/xfail_demo.py",
      "line": 27
    },
    {
      "id": "doc/en/example/xfail_demo.py:test_hello6",
      "type": "function",
      "name": "test_hello6",
      "file": "doc/en/example/xfail_demo.py",
      "line": 31
    },
    {
      "id": "doc/en/example/xfail_demo.py:test_hello7",
      "type": "function",
      "name": "test_hello7",
      "file": "doc/en/example/xfail_demo.py",
      "line": 36
    },
    {
      "id": "doc/en/example/assertion",
      "type": "directory",
      "name": "assertion",
      "file": "",
      "line": 0
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py",
      "type": "file",
      "name": "failure_demo.py",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 0
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:otherfunc",
      "type": "function",
      "name": "otherfunc",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 5
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:somefunc",
      "type": "function",
      "name": "somefunc",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 9
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:otherfunc_multi",
      "type": "function",
      "name": "otherfunc_multi",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 13
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:test_generative",
      "type": "function",
      "name": "test_generative",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 18
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestFailing",
      "type": "class",
      "name": "TestFailing",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 22
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestFailing.test_simple",
      "type": "function",
      "name": "TestFailing.test_simple",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 23
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestFailing.test_simple.f",
      "type": "function",
      "name": "TestFailing.test_simple.f",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 24
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestFailing.test_simple.g",
      "type": "function",
      "name": "TestFailing.test_simple.g",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 27
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestFailing.test_simple_multiline",
      "type": "function",
      "name": "TestFailing.test_simple_multiline",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 32
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestFailing.test_not",
      "type": "function",
      "name": "TestFailing.test_not",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 35
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestFailing.test_not.f",
      "type": "function",
      "name": "TestFailing.test_not.f",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 36
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations",
      "type": "class",
      "name": "TestSpecialisedExplanations",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 42
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_text",
      "type": "function",
      "name": "TestSpecialisedExplanations.test_eq_text",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 43
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_similar_text",
      "type": "function",
      "name": "TestSpecialisedExplanations.test_eq_similar_text",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 46
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_multiline_text",
      "type": "function",
      "name": "TestSpecialisedExplanations.test_eq_multiline_text",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 49
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_long_text",
      "type": "function",
      "name": "TestSpecialisedExplanations.test_eq_long_text",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 52
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_long_text_multiline",
      "type": "function",
      "name": "TestSpecialisedExplanations.test_eq_long_text_multiline",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 57
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_list",
      "type": "function",
      "name": "TestSpecialisedExplanations.test_eq_list",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 62
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_list_long",
      "type": "function",
      "name": "TestSpecialisedExplanations.test_eq_list_long",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 65
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_dict",
      "type": "function",
      "name": "TestSpecialisedExplanations.test_eq_dict",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 70
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_set",
      "type": "function",
      "name": "TestSpecialisedExplanations.test_eq_set",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 73
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_longer_list",
      "type": "function",
      "name": "TestSpecialisedExplanations.test_eq_longer_list",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 76
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_in_list",
      "type": "function",
      "name": "TestSpecialisedExplanations.test_in_list",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 79
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_not_in_text_multiline",
      "type": "function",
      "name": "TestSpecialisedExplanations.test_not_in_text_multiline",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 82
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_not_in_text_single",
      "type": "function",
      "name": "TestSpecialisedExplanations.test_not_in_text_single",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 86
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_not_in_text_single_long",
      "type": "function",
      "name": "TestSpecialisedExplanations.test_not_in_text_single_long",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 90
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_not_in_text_single_long_term",
      "type": "function",
      "name": "TestSpecialisedExplanations.test_not_in_text_single_long_term",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 94
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_dataclass",
      "type": "function",
      "name": "TestSpecialisedExplanations.test_eq_dataclass",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 98
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_dataclass.Foo",
      "type": "class",
      "name": "TestSpecialisedExplanations.test_eq_dataclass.Foo",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 102
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_attrs",
      "type": "function",
      "name": "TestSpecialisedExplanations.test_eq_attrs",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 110
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_attrs.Foo",
      "type": "class",
      "name": "TestSpecialisedExplanations.test_eq_attrs.Foo",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 114
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:test_attribute",
      "type": "function",
      "name": "test_attribute",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 123
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:test_attribute.Foo",
      "type": "class",
      "name": "test_attribute.Foo",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 124
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:test_attribute_instance",
      "type": "function",
      "name": "test_attribute_instance",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 131
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:test_attribute_instance.Foo",
      "type": "class",
      "name": "test_attribute_instance.Foo",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 132
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:test_attribute_failure",
      "type": "function",
      "name": "test_attribute_failure",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 138
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:test_attribute_failure.Foo",
      "type": "class",
      "name": "test_attribute_failure.Foo",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 139
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:test_attribute_failure.Foo._get_b",
      "type": "function",
      "name": "test_attribute_failure.Foo._get_b",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 140
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:test_attribute_multiple",
      "type": "function",
      "name": "test_attribute_multiple",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 149
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:test_attribute_multiple.Foo",
      "type": "class",
      "name": "test_attribute_multiple.Foo",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 150
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:test_attribute_multiple.Bar",
      "type": "class",
      "name": "test_attribute_multiple.Bar",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 153
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:globf",
      "type": "function",
      "name": "globf",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 159
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestRaises",
      "type": "class",
      "name": "TestRaises",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 163
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestRaises.test_raises",
      "type": "function",
      "name": "TestRaises.test_raises",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 164
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestRaises.test_raises_doesnt",
      "type": "function",
      "name": "TestRaises.test_raises_doesnt",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 168
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestRaises.test_raise",
      "type": "function",
      "name": "TestRaises.test_raise",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 171
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestRaises.test_tupleerror",
      "type": "function",
      "name": "TestRaises.test_tupleerror",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 174
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestRaises.test_reinterpret_fails_with_print_for_the_fun_of_it",
      "type": "function",
      "name": "TestRaises.test_reinterpret_fails_with_print_for_the_fun_of_it",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 177
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestRaises.test_some_error",
      "type": "function",
      "name": "TestRaises.test_some_error",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 182
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestRaises.func1",
      "type": "function",
      "name": "TestRaises.func1",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 186
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:test_dynamic_compile_shows_nicely",
      "type": "function",
      "name": "test_dynamic_compile_shows_nicely",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 191
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestMoreErrors",
      "type": "class",
      "name": "TestMoreErrors",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 205
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_complex_error",
      "type": "function",
      "name": "TestMoreErrors.test_complex_error",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 206
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_complex_error.f",
      "type": "function",
      "name": "TestMoreErrors.test_complex_error.f",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 207
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_complex_error.g",
      "type": "function",
      "name": "TestMoreErrors.test_complex_error.g",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 210
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_z1_unpack_error",
      "type": "function",
      "name": "TestMoreErrors.test_z1_unpack_error",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 215
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_z2_type_error",
      "type": "function",
      "name": "TestMoreErrors.test_z2_type_error",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 219
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_startswith",
      "type": "function",
      "name": "TestMoreErrors.test_startswith",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 223
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_startswith_nested",
      "type": "function",
      "name": "TestMoreErrors.test_startswith_nested",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 228
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_startswith_nested.f",
      "type": "function",
      "name": "TestMoreErrors.test_startswith_nested.f",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 229
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_startswith_nested.g",
      "type": "function",
      "name": "TestMoreErrors.test_startswith_nested.g",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 232
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_global_func",
      "type": "function",
      "name": "TestMoreErrors.test_global_func",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 237
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_instance",
      "type": "function",
      "name": "TestMoreErrors.test_instance",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 240
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_compare",
      "type": "function",
      "name": "TestMoreErrors.test_compare",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 244
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_try_finally",
      "type": "function",
      "name": "TestMoreErrors.test_try_finally",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 247
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestCustomAssertMsg",
      "type": "class",
      "name": "TestCustomAssertMsg",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 255
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestCustomAssertMsg.test_single_line",
      "type": "function",
      "name": "TestCustomAssertMsg.test_single_line",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 256
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestCustomAssertMsg.test_single_line.A",
      "type": "class",
      "name": "TestCustomAssertMsg.test_single_line.A",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 257
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestCustomAssertMsg.test_multiline",
      "type": "function",
      "name": "TestCustomAssertMsg.test_multiline",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 263
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestCustomAssertMsg.test_multiline.A",
      "type": "class",
      "name": "TestCustomAssertMsg.test_multiline.A",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 264
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestCustomAssertMsg.test_custom_repr",
      "type": "function",
      "name": "TestCustomAssertMsg.test_custom_repr",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 272
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestCustomAssertMsg.test_custom_repr.JSON",
      "type": "class",
      "name": "TestCustomAssertMsg.test_custom_repr.JSON",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 273
    },
    {
      "id": "doc/en/example/assertion/failure_demo.py:TestCustomAssertMsg.test_custom_repr.JSON.__repr__",
      "type": "function",
      "name": "TestCustomAssertMsg.test_custom_repr.JSON.__repr__",
      "file": "doc/en/example/assertion/failure_demo.py",
      "line": 276
    },
    {
      "id": "doc/en/example/assertion/test_setup_flow_example.py",
      "type": "file",
      "name": "test_setup_flow_example.py",
      "file": "doc/en/example/assertion/test_setup_flow_example.py",
      "line": 0
    },
    {
      "id": "doc/en/example/assertion/test_setup_flow_example.py:setup_module",
      "type": "function",
      "name": "setup_module",
      "file": "doc/en/example/assertion/test_setup_flow_example.py",
      "line": 1
    },
    {
      "id": "doc/en/example/assertion/test_setup_flow_example.py:TestStateFullThing",
      "type": "class",
      "name": "TestStateFullThing",
      "file": "doc/en/example/assertion/test_setup_flow_example.py",
      "line": 5
    },
    {
      "id": "doc/en/example/assertion/test_setup_flow_example.py:TestStateFullThing.setup_class",
      "type": "function",
      "name": "TestStateFullThing.setup_class",
      "file": "doc/en/example/assertion/test_setup_flow_example.py",
      "line": 6
    },
    {
      "id": "doc/en/example/assertion/test_setup_flow_example.py:TestStateFullThing.teardown_class",
      "type": "function",
      "name": "TestStateFullThing.teardown_class",
      "file": "doc/en/example/assertion/test_setup_flow_example.py",
      "line": 9
    },
    {
      "id": "doc/en/example/assertion/test_setup_flow_example.py:TestStateFullThing.setup_method",
      "type": "function",
      "name": "TestStateFullThing.setup_method",
      "file": "doc/en/example/assertion/test_setup_flow_example.py",
      "line": 12
    },
    {
      "id": "doc/en/example/assertion/test_setup_flow_example.py:TestStateFullThing.test_42",
      "type": "function",
      "name": "TestStateFullThing.test_42",
      "file": "doc/en/example/assertion/test_setup_flow_example.py",
      "line": 15
    },
    {
      "id": "doc/en/example/assertion/test_setup_flow_example.py:TestStateFullThing.test_23",
      "type": "function",
      "name": "TestStateFullThing.test_23",
      "file": "doc/en/example/assertion/test_setup_flow_example.py",
      "line": 19
    },
    {
      "id": "doc/en/example/assertion/test_setup_flow_example.py:teardown_module",
      "type": "function",
      "name": "teardown_module",
      "file": "doc/en/example/assertion/test_setup_flow_example.py",
      "line": 24
    },
    {
      "id": "doc/en/example/assertion/test_failures.py",
      "type": "file",
      "name": "test_failures.py",
      "file": "doc/en/example/assertion/test_failures.py",
      "line": 0
    },
    {
      "id": "doc/en/example/assertion/test_failures.py:test_failure_demo_fails_properly",
      "type": "function",
      "name": "test_failure_demo_fails_properly",
      "file": "doc/en/example/assertion/test_failures.py",
      "line": 8
    },
    {
      "id": "doc/en/example/assertion/global_testmodule_config",
      "type": "directory",
      "name": "global_testmodule_config",
      "file": "",
      "line": 0
    },
    {
      "id": "doc/en/example/assertion/global_testmodule_config/conftest.py",
      "type": "file",
      "name": "conftest.py",
      "file": "doc/en/example/assertion/global_testmodule_config/conftest.py",
      "line": 0
    },
    {
      "id": "doc/en/example/assertion/global_testmodule_config/conftest.py:pytest_runtest_setup",
      "type": "function",
      "name": "pytest_runtest_setup",
      "file": "doc/en/example/assertion/global_testmodule_config/conftest.py",
      "line": 8
    },
    {
      "id": "doc/en/example/assertion/global_testmodule_config/test_hello_world.py",
      "type": "file",
      "name": "test_hello_world.py",
      "file": "doc/en/example/assertion/global_testmodule_config/test_hello_world.py",
      "line": 0
    },
    {
      "id": "doc/en/example/assertion/global_testmodule_config/test_hello_world.py:test_func",
      "type": "function",
      "name": "test_func",
      "file": "doc/en/example/assertion/global_testmodule_config/test_hello_world.py",
      "line": 4
    },
    {
      "id": "doc/en/example/nonpython",
      "type": "directory",
      "name": "nonpython",
      "file": "",
      "line": 0
    },
    {
      "id": "doc/en/example/nonpython/conftest.py",
      "type": "file",
      "name": "conftest.py",
      "file": "doc/en/example/nonpython/conftest.py",
      "line": 0
    },
    {
      "id": "doc/en/example/nonpython/conftest.py:pytest_collect_file",
      "type": "function",
      "name": "pytest_collect_file",
      "file": "doc/en/example/nonpython/conftest.py",
      "line": 5
    },
    {
      "id": "doc/en/example/nonpython/conftest.py:YamlFile",
      "type": "class",
      "name": "YamlFile",
      "file": "doc/en/example/nonpython/conftest.py",
      "line": 10
    },
    {
      "id": "doc/en/example/nonpython/conftest.py:YamlFile.collect",
      "type": "function",
      "name": "YamlFile.collect",
      "file": "doc/en/example/nonpython/conftest.py",
      "line": 11
    },
    {
      "id": "doc/en/example/nonpython/conftest.py:YamlItem",
      "type": "class",
      "name": "YamlItem",
      "file": "doc/en/example/nonpython/conftest.py",
      "line": 20
    },
    {
      "id": "doc/en/example/nonpython/conftest.py:YamlItem.runtest",
      "type": "function",
      "name": "YamlItem.runtest",
      "file": "doc/en/example/nonpython/conftest.py",
      "line": 25
    },
    {
      "id": "doc/en/example/nonpython/conftest.py:YamlItem.repr_failure",
      "type": "function",
      "name": "YamlItem.repr_failure",
      "file": "doc/en/example/nonpython/conftest.py",
      "line": 31
    },
    {
      "id": "doc/en/example/nonpython/conftest.py:YamlItem.reportinfo",
      "type": "function",
      "name": "YamlItem.reportinfo",
      "file": "doc/en/example/nonpython/conftest.py",
      "line": 43
    },
    {
      "id": "doc/en/example/nonpython/conftest.py:YamlException",
      "type": "class",
      "name": "YamlException",
      "file": "doc/en/example/nonpython/conftest.py",
      "line": 47
    },
    {
      "id": "doc/en/example/nonpython/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "doc/en/example/nonpython/__init__.py",
      "line": 0
    },
    {
      "id": "doc/en/example/fixtures",
      "type": "directory",
      "name": "fixtures",
      "file": "",
      "line": 0
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_request_different_scope.py",
      "type": "file",
      "name": "test_fixtures_request_different_scope.py",
      "file": "doc/en/example/fixtures/test_fixtures_request_different_scope.py",
      "line": 0
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_request_different_scope.py:order",
      "type": "function",
      "name": "order",
      "file": "doc/en/example/fixtures/test_fixtures_request_different_scope.py",
      "line": 5
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_request_different_scope.py:outer",
      "type": "function",
      "name": "outer",
      "file": "doc/en/example/fixtures/test_fixtures_request_different_scope.py",
      "line": 10
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_request_different_scope.py:TestOne",
      "type": "class",
      "name": "TestOne",
      "file": "doc/en/example/fixtures/test_fixtures_request_different_scope.py",
      "line": 14
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_request_different_scope.py:TestOne.inner",
      "type": "function",
      "name": "TestOne.inner",
      "file": "doc/en/example/fixtures/test_fixtures_request_different_scope.py",
      "line": 16
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_request_different_scope.py:TestOne.test_order",
      "type": "function",
      "name": "TestOne.test_order",
      "file": "doc/en/example/fixtures/test_fixtures_request_different_scope.py",
      "line": 19
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_request_different_scope.py:TestTwo",
      "type": "class",
      "name": "TestTwo",
      "file": "doc/en/example/fixtures/test_fixtures_request_different_scope.py",
      "line": 23
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_request_different_scope.py:TestTwo.inner",
      "type": "function",
      "name": "TestTwo.inner",
      "file": "doc/en/example/fixtures/test_fixtures_request_different_scope.py",
      "line": 25
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_request_different_scope.py:TestTwo.test_order",
      "type": "function",
      "name": "TestTwo.test_order",
      "file": "doc/en/example/fixtures/test_fixtures_request_different_scope.py",
      "line": 28
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_dependencies.py",
      "type": "file",
      "name": "test_fixtures_order_dependencies.py",
      "file": "doc/en/example/fixtures/test_fixtures_order_dependencies.py",
      "line": 0
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_dependencies.py:order",
      "type": "function",
      "name": "order",
      "file": "doc/en/example/fixtures/test_fixtures_order_dependencies.py",
      "line": 5
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_dependencies.py:a",
      "type": "function",
      "name": "a",
      "file": "doc/en/example/fixtures/test_fixtures_order_dependencies.py",
      "line": 10
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_dependencies.py:b",
      "type": "function",
      "name": "b",
      "file": "doc/en/example/fixtures/test_fixtures_order_dependencies.py",
      "line": 15
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_dependencies.py:c",
      "type": "function",
      "name": "c",
      "file": "doc/en/example/fixtures/test_fixtures_order_dependencies.py",
      "line": 20
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_dependencies.py:d",
      "type": "function",
      "name": "d",
      "file": "doc/en/example/fixtures/test_fixtures_order_dependencies.py",
      "line": 25
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_dependencies.py:e",
      "type": "function",
      "name": "e",
      "file": "doc/en/example/fixtures/test_fixtures_order_dependencies.py",
      "line": 30
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_dependencies.py:f",
      "type": "function",
      "name": "f",
      "file": "doc/en/example/fixtures/test_fixtures_order_dependencies.py",
      "line": 35
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_dependencies.py:g",
      "type": "function",
      "name": "g",
      "file": "doc/en/example/fixtures/test_fixtures_order_dependencies.py",
      "line": 40
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_dependencies.py:test_order",
      "type": "function",
      "name": "test_order",
      "file": "doc/en/example/fixtures/test_fixtures_order_dependencies.py",
      "line": 44
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_scope.py",
      "type": "file",
      "name": "test_fixtures_order_scope.py",
      "file": "doc/en/example/fixtures/test_fixtures_order_scope.py",
      "line": 0
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_scope.py:order",
      "type": "function",
      "name": "order",
      "file": "doc/en/example/fixtures/test_fixtures_order_scope.py",
      "line": 5
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_scope.py:func",
      "type": "function",
      "name": "func",
      "file": "doc/en/example/fixtures/test_fixtures_order_scope.py",
      "line": 10
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_scope.py:cls",
      "type": "function",
      "name": "cls",
      "file": "doc/en/example/fixtures/test_fixtures_order_scope.py",
      "line": 15
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_scope.py:mod",
      "type": "function",
      "name": "mod",
      "file": "doc/en/example/fixtures/test_fixtures_order_scope.py",
      "line": 20
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_scope.py:pack",
      "type": "function",
      "name": "pack",
      "file": "doc/en/example/fixtures/test_fixtures_order_scope.py",
      "line": 25
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_scope.py:sess",
      "type": "function",
      "name": "sess",
      "file": "doc/en/example/fixtures/test_fixtures_order_scope.py",
      "line": 30
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_scope.py:TestClass",
      "type": "class",
      "name": "TestClass",
      "file": "doc/en/example/fixtures/test_fixtures_order_scope.py",
      "line": 34
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_scope.py:TestClass.test_order",
      "type": "function",
      "name": "TestClass.test_order",
      "file": "doc/en/example/fixtures/test_fixtures_order_scope.py",
      "line": 35
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse.py",
      "type": "file",
      "name": "test_fixtures_order_autouse.py",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse.py",
      "line": 0
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse.py:order",
      "type": "function",
      "name": "order",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse.py",
      "line": 5
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse.py:a",
      "type": "function",
      "name": "a",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse.py",
      "line": 10
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse.py:b",
      "type": "function",
      "name": "b",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse.py",
      "line": 15
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse.py:c",
      "type": "function",
      "name": "c",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse.py",
      "line": 20
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse.py:d",
      "type": "function",
      "name": "d",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse.py",
      "line": 25
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse.py:e",
      "type": "function",
      "name": "e",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse.py",
      "line": 30
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse.py:f",
      "type": "function",
      "name": "f",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse.py",
      "line": 35
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse.py:g",
      "type": "function",
      "name": "g",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse.py",
      "line": 40
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse.py:test_order_and_g",
      "type": "function",
      "name": "test_order_and_g",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse.py",
      "line": 44
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py",
      "type": "file",
      "name": "test_fixtures_order_autouse_temp_effects.py",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py",
      "line": 0
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py:order",
      "type": "function",
      "name": "order",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py",
      "line": 5
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py:c1",
      "type": "function",
      "name": "c1",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py",
      "line": 10
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py:c2",
      "type": "function",
      "name": "c2",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py",
      "line": 15
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py:TestClassWithAutouse",
      "type": "class",
      "name": "TestClassWithAutouse",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py",
      "line": 19
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py:TestClassWithAutouse.c3",
      "type": "function",
      "name": "TestClassWithAutouse.c3",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py",
      "line": 21
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py:TestClassWithAutouse.test_req",
      "type": "function",
      "name": "TestClassWithAutouse.test_req",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py",
      "line": 24
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py:TestClassWithAutouse.test_no_req",
      "type": "function",
      "name": "TestClassWithAutouse.test_no_req",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py",
      "line": 27
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py:TestClassWithoutAutouse",
      "type": "class",
      "name": "TestClassWithoutAutouse",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py",
      "line": 31
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py:TestClassWithoutAutouse.test_req",
      "type": "function",
      "name": "TestClassWithoutAutouse.test_req",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py",
      "line": 32
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py:TestClassWithoutAutouse.test_no_req",
      "type": "function",
      "name": "TestClassWithoutAutouse.test_no_req",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py",
      "line": 35
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py",
      "type": "file",
      "name": "test_fixtures_order_autouse_multiple_scopes.py",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py",
      "line": 0
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py:order",
      "type": "function",
      "name": "order",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py",
      "line": 5
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py:c1",
      "type": "function",
      "name": "c1",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py",
      "line": 10
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py:c2",
      "type": "function",
      "name": "c2",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py",
      "line": 15
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py:c3",
      "type": "function",
      "name": "c3",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py",
      "line": 20
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py:TestClassWithC1Request",
      "type": "class",
      "name": "TestClassWithC1Request",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py",
      "line": 24
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py:TestClassWithC1Request.test_order",
      "type": "function",
      "name": "TestClassWithC1Request.test_order",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py",
      "line": 25
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py:TestClassWithoutC1Request",
      "type": "class",
      "name": "TestClassWithoutC1Request",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py",
      "line": 29
    },
    {
      "id": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py:TestClassWithoutC1Request.test_order",
      "type": "function",
      "name": "TestClassWithoutC1Request.test_order",
      "file": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py",
      "line": 30
    },
    {
      "id": "src",
      "type": "directory",
      "name": "src",
      "file": "",
      "line": 0
    },
    {
      "id": "src/py.py",
      "type": "file",
      "name": "py.py",
      "file": "src/py.py",
      "line": 0
    },
    {
      "id": "src/pytest",
      "type": "directory",
      "name": "pytest",
      "file": "",
      "line": 0
    },
    {
      "id": "src/pytest/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "src/pytest/__init__.py",
      "line": 0
    },
    {
      "id": "src/pytest/__init__.py:__getattr__",
      "type": "function",
      "name": "__getattr__",
      "file": "src/pytest/__init__.py",
      "line": 167
    },
    {
      "id": "src/pytest/__main__.py",
      "type": "file",
      "name": "__main__.py",
      "file": "src/pytest/__main__.py",
      "line": 0
    },
    {
      "id": "src/_pytest",
      "type": "directory",
      "name": "_pytest",
      "file": "",
      "line": 0
    },
    {
      "id": "src/_pytest/skipping.py",
      "type": "file",
      "name": "skipping.py",
      "file": "src/_pytest/skipping.py",
      "line": 0
    },
    {
      "id": "src/_pytest/skipping.py:pytest_addoption",
      "type": "function",
      "name": "pytest_addoption",
      "file": "src/_pytest/skipping.py",
      "line": 26
    },
    {
      "id": "src/_pytest/skipping.py:pytest_configure",
      "type": "function",
      "name": "pytest_configure",
      "file": "src/_pytest/skipping.py",
      "line": 45
    },
    {
      "id": "src/_pytest/skipping.py:pytest_configure.nop",
      "type": "function",
      "name": "pytest_configure.nop",
      "file": "src/_pytest/skipping.py",
      "line": 53
    },
    {
      "id": "src/_pytest/skipping.py:evaluate_condition",
      "type": "function",
      "name": "evaluate_condition",
      "file": "src/_pytest/skipping.py",
      "line": 84
    },
    {
      "id": "src/_pytest/skipping.py:Skip",
      "type": "class",
      "name": "Skip",
      "file": "src/_pytest/skipping.py",
      "line": 160
    },
    {
      "id": "src/_pytest/skipping.py:evaluate_skip_marks",
      "type": "function",
      "name": "evaluate_skip_marks",
      "file": "src/_pytest/skipping.py",
      "line": 166
    },
    {
      "id": "src/_pytest/skipping.py:Xfail",
      "type": "class",
      "name": "Xfail",
      "file": "src/_pytest/skipping.py",
      "line": 195
    },
    {
      "id": "src/_pytest/skipping.py:evaluate_xfail_marks",
      "type": "function",
      "name": "evaluate_xfail_marks",
      "file": "src/_pytest/skipping.py",
      "line": 206
    },
    {
      "id": "src/_pytest/skipping.py:pytest_runtest_setup",
      "type": "function",
      "name": "pytest_runtest_setup",
      "file": "src/_pytest/skipping.py",
      "line": 236
    },
    {
      "id": "src/_pytest/skipping.py:pytest_runtest_call",
      "type": "function",
      "name": "pytest_runtest_call",
      "file": "src/_pytest/skipping.py",
      "line": 247
    },
    {
      "id": "src/_pytest/skipping.py:pytest_runtest_makereport",
      "type": "function",
      "name": "pytest_runtest_makereport",
      "file": "src/_pytest/skipping.py",
      "line": 264
    },
    {
      "id": "src/_pytest/skipping.py:pytest_report_teststatus",
      "type": "function",
      "name": "pytest_report_teststatus",
      "file": "src/_pytest/skipping.py",
      "line": 291
    },
    {
      "id": "src/_pytest/logging.py",
      "type": "file",
      "name": "logging.py",
      "file": "src/_pytest/logging.py",
      "line": 0
    },
    {
      "id": "src/_pytest/logging.py:_remove_ansi_escape_sequences",
      "type": "function",
      "name": "_remove_ansi_escape_sequences",
      "file": "src/_pytest/logging.py",
      "line": 56
    },
    {
      "id": "src/_pytest/logging.py:DatetimeFormatter",
      "type": "class",
      "name": "DatetimeFormatter",
      "file": "src/_pytest/logging.py",
      "line": 60
    },
    {
      "id": "src/_pytest/logging.py:DatetimeFormatter.formatTime",
      "type": "function",
      "name": "DatetimeFormatter.formatTime",
      "file": "src/_pytest/logging.py",
      "line": 66
    },
    {
      "id": "src/_pytest/logging.py:ColoredLevelFormatter",
      "type": "class",
      "name": "ColoredLevelFormatter",
      "file": "src/_pytest/logging.py",
      "line": 78
    },
    {
      "id": "src/_pytest/logging.py:ColoredLevelFormatter.add_color_level",
      "type": "function",
      "name": "ColoredLevelFormatter.add_color_level",
      "file": "src/_pytest/logging.py",
      "line": 102
    },
    {
      "id": "src/_pytest/logging.py:ColoredLevelFormatter.format",
      "type": "function",
      "name": "ColoredLevelFormatter.format",
      "file": "src/_pytest/logging.py",
      "line": 133
    },
    {
      "id": "src/_pytest/logging.py:PercentStyleMultiline",
      "type": "class",
      "name": "PercentStyleMultiline",
      "file": "src/_pytest/logging.py",
      "line": 139
    },
    {
      "id": "src/_pytest/logging.py:PercentStyleMultiline._get_auto_indent",
      "type": "function",
      "name": "PercentStyleMultiline._get_auto_indent",
      "file": "src/_pytest/logging.py",
      "line": 151
    },
    {
      "id": "src/_pytest/logging.py:PercentStyleMultiline.format",
      "type": "function",
      "name": "PercentStyleMultiline.format",
      "file": "src/_pytest/logging.py",
      "line": 205
    },
    {
      "id": "src/_pytest/logging.py:get_option_ini",
      "type": "function",
      "name": "get_option_ini",
      "file": "src/_pytest/logging.py",
      "line": 229
    },
    {
      "id": "src/_pytest/logging.py:pytest_addoption",
      "type": "function",
      "name": "pytest_addoption",
      "file": "src/_pytest/logging.py",
      "line": 238
    },
    {
      "id": "src/_pytest/logging.py:pytest_addoption.add_option_ini",
      "type": "function",
      "name": "pytest_addoption.add_option_ini",
      "file": "src/_pytest/logging.py",
      "line": 242
    },
    {
      "id": "src/_pytest/logging.py:catching_logs",
      "type": "class",
      "name": "catching_logs",
      "file": "src/_pytest/logging.py",
      "line": 335
    },
    {
      "id": "src/_pytest/logging.py:catching_logs.__enter__",
      "type": "function",
      "name": "catching_logs.__enter__",
      "file": "src/_pytest/logging.py",
      "line": 344
    },
    {
      "id": "src/_pytest/logging.py:catching_logs.__exit__",
      "type": "function",
      "name": "catching_logs.__exit__",
      "file": "src/_pytest/logging.py",
      "line": 354
    },
    {
      "id": "src/_pytest/logging.py:LogCaptureHandler",
      "type": "class",
      "name": "LogCaptureHandler",
      "file": "src/_pytest/logging.py",
      "line": 361
    },
    {
      "id": "src/_pytest/logging.py:LogCaptureHandler.emit",
      "type": "function",
      "name": "LogCaptureHandler.emit",
      "file": "src/_pytest/logging.py",
      "line": 369
    },
    {
      "id": "src/_pytest/logging.py:LogCaptureHandler.reset",
      "type": "function",
      "name": "LogCaptureHandler.reset",
      "file": "src/_pytest/logging.py",
      "line": 374
    },
    {
      "id": "src/_pytest/logging.py:LogCaptureHandler.clear",
      "type": "function",
      "name": "LogCaptureHandler.clear",
      "file": "src/_pytest/logging.py",
      "line": 378
    },
    {
      "id": "src/_pytest/logging.py:LogCaptureHandler.handleError",
      "type": "function",
      "name": "LogCaptureHandler.handleError",
      "file": "src/_pytest/logging.py",
      "line": 382
    },
    {
      "id": "src/_pytest/logging.py:LogCaptureFixture",
      "type": "class",
      "name": "LogCaptureFixture",
      "file": "src/_pytest/logging.py",
      "line": 392
    },
    {
      "id": "src/_pytest/logging.py:LogCaptureFixture._finalize",
      "type": "function",
      "name": "LogCaptureFixture._finalize",
      "file": "src/_pytest/logging.py",
      "line": 403
    },
    {
      "id": "src/_pytest/logging.py:LogCaptureFixture.handler",
      "type": "function",
      "name": "LogCaptureFixture.handler",
      "file": "src/_pytest/logging.py",
      "line": 420
    },
    {
      "id": "src/_pytest/logging.py:LogCaptureFixture.get_records",
      "type": "function",
      "name": "LogCaptureFixture.get_records",
      "file": "src/_pytest/logging.py",
      "line": 424
    },
    {
      "id": "src/_pytest/logging.py:LogCaptureFixture.text",
      "type": "function",
      "name": "LogCaptureFixture.text",
      "file": "src/_pytest/logging.py",
      "line": 440
    },
    {
      "id": "src/_pytest/logging.py:LogCaptureFixture.records",
      "type": "function",
      "name": "LogCaptureFixture.records",
      "file": "src/_pytest/logging.py",
      "line": 445
    },
    {
      "id": "src/_pytest/logging.py:LogCaptureFixture.record_tuples",
      "type": "function",
      "name": "LogCaptureFixture.record_tuples",
      "file": "src/_pytest/logging.py",
      "line": 450
    },
    {
      "id": "src/_pytest/logging.py:LogCaptureFixture.messages",
      "type": "function",
      "name": "LogCaptureFixture.messages",
      "file": "src/_pytest/logging.py",
      "line": 461
    },
    {
      "id": "src/_pytest/logging.py:LogCaptureFixture.clear",
      "type": "function",
      "name": "LogCaptureFixture.clear",
      "file": "src/_pytest/logging.py",
      "line": 479
    },
    {
      "id": "src/_pytest/logging.py:LogCaptureFixture._force_enable_logging",
      "type": "function",
      "name": "LogCaptureFixture._force_enable_logging",
      "file": "src/_pytest/logging.py",
      "line": 483
    },
    {
      "id": "src/_pytest/logging.py:LogCaptureFixture.set_level",
      "type": "function",
      "name": "LogCaptureFixture.set_level",
      "file": "src/_pytest/logging.py",
      "line": 517
    },
    {
      "id": "src/_pytest/logging.py:LogCaptureFixture.at_level",
      "type": "function",
      "name": "LogCaptureFixture.at_level",
      "file": "src/_pytest/logging.py",
      "line": 543
    },
    {
      "id": "src/_pytest/logging.py:caplog",
      "type": "function",
      "name": "caplog",
      "file": "src/_pytest/logging.py",
      "line": 570
    },
    {
      "id": "src/_pytest/logging.py:get_log_level_for_setting",
      "type": "function",
      "name": "get_log_level_for_setting",
      "file": "src/_pytest/logging.py",
      "line": 586
    },
    {
      "id": "src/_pytest/logging.py:pytest_configure",
      "type": "function",
      "name": "pytest_configure",
      "file": "src/_pytest/logging.py",
      "line": 611
    },
    {
      "id": "src/_pytest/logging.py:LoggingPlugin",
      "type": "class",
      "name": "LoggingPlugin",
      "file": "src/_pytest/logging.py",
      "line": 615
    },
    {
      "id": "src/_pytest/logging.py:LoggingPlugin._disable_loggers",
      "type": "function",
      "name": "LoggingPlugin._disable_loggers",
      "file": "src/_pytest/logging.py",
      "line": 678
    },
    {
      "id": "src/_pytest/logging.py:LoggingPlugin._create_formatter",
      "type": "function",
      "name": "LoggingPlugin._create_formatter",
      "file": "src/_pytest/logging.py",
      "line": 686
    },
    {
      "id": "src/_pytest/logging.py:LoggingPlugin.set_log_path",
      "type": "function",
      "name": "LoggingPlugin.set_log_path",
      "file": "src/_pytest/logging.py",
      "line": 704
    },
    {
      "id": "src/_pytest/logging.py:LoggingPlugin._log_cli_enabled",
      "type": "function",
      "name": "LoggingPlugin._log_cli_enabled",
      "file": "src/_pytest/logging.py",
      "line": 726
    },
    {
      "id": "src/_pytest/logging.py:LoggingPlugin.pytest_sessionstart",
      "type": "function",
      "name": "LoggingPlugin.pytest_sessionstart",
      "file": "src/_pytest/logging.py",
      "line": 742
    },
    {
      "id": "src/_pytest/logging.py:LoggingPlugin.pytest_collection",
      "type": "function",
      "name": "LoggingPlugin.pytest_collection",
      "file": "src/_pytest/logging.py",
      "line": 750
    },
    {
      "id": "src/_pytest/logging.py:LoggingPlugin.pytest_runtestloop",
      "type": "function",
      "name": "LoggingPlugin.pytest_runtestloop",
      "file": "src/_pytest/logging.py",
      "line": 758
    },
    {
      "id": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_logstart",
      "type": "function",
      "name": "LoggingPlugin.pytest_runtest_logstart",
      "file": "src/_pytest/logging.py",
      "line": 772
    },
    {
      "id": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_logreport",
      "type": "function",
      "name": "LoggingPlugin.pytest_runtest_logreport",
      "file": "src/_pytest/logging.py",
      "line": 777
    },
    {
      "id": "src/_pytest/logging.py:LoggingPlugin._runtest_for",
      "type": "function",
      "name": "LoggingPlugin._runtest_for",
      "file": "src/_pytest/logging.py",
      "line": 780
    },
    {
      "id": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_setup",
      "type": "function",
      "name": "LoggingPlugin.pytest_runtest_setup",
      "file": "src/_pytest/logging.py",
      "line": 800
    },
    {
      "id": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_call",
      "type": "function",
      "name": "LoggingPlugin.pytest_runtest_call",
      "file": "src/_pytest/logging.py",
      "line": 808
    },
    {
      "id": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_teardown",
      "type": "function",
      "name": "LoggingPlugin.pytest_runtest_teardown",
      "file": "src/_pytest/logging.py",
      "line": 814
    },
    {
      "id": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_logfinish",
      "type": "function",
      "name": "LoggingPlugin.pytest_runtest_logfinish",
      "file": "src/_pytest/logging.py",
      "line": 822
    },
    {
      "id": "src/_pytest/logging.py:LoggingPlugin.pytest_sessionfinish",
      "type": "function",
      "name": "LoggingPlugin.pytest_sessionfinish",
      "file": "src/_pytest/logging.py",
      "line": 826
    },
    {
      "id": "src/_pytest/logging.py:LoggingPlugin.pytest_unconfigure",
      "type": "function",
      "name": "LoggingPlugin.pytest_unconfigure",
      "file": "src/_pytest/logging.py",
      "line": 834
    },
    {
      "id": "src/_pytest/logging.py:_FileHandler",
      "type": "class",
      "name": "_FileHandler",
      "file": "src/_pytest/logging.py",
      "line": 840
    },
    {
      "id": "src/_pytest/logging.py:_FileHandler.handleError",
      "type": "function",
      "name": "_FileHandler.handleError",
      "file": "src/_pytest/logging.py",
      "line": 843
    },
    {
      "id": "src/_pytest/logging.py:_LiveLoggingStreamHandler",
      "type": "class",
      "name": "_LiveLoggingStreamHandler",
      "file": "src/_pytest/logging.py",
      "line": 848
    },
    {
      "id": "src/_pytest/logging.py:_LiveLoggingStreamHandler.reset",
      "type": "function",
      "name": "_LiveLoggingStreamHandler.reset",
      "file": "src/_pytest/logging.py",
      "line": 872
    },
    {
      "id": "src/_pytest/logging.py:_LiveLoggingStreamHandler.set_when",
      "type": "function",
      "name": "_LiveLoggingStreamHandler.set_when",
      "file": "src/_pytest/logging.py",
      "line": 876
    },
    {
      "id": "src/_pytest/logging.py:_LiveLoggingStreamHandler.emit",
      "type": "function",
      "name": "_LiveLoggingStreamHandler.emit",
      "file": "src/_pytest/logging.py",
      "line": 883
    },
    {
      "id": "src/_pytest/logging.py:_LiveLoggingStreamHandler.handleError",
      "type": "function",
      "name": "_LiveLoggingStreamHandler.handleError",
      "file": "src/_pytest/logging.py",
      "line": 902
    },
    {
      "id": "src/_pytest/logging.py:_LiveLoggingNullHandler",
      "type": "class",
      "name": "_LiveLoggingNullHandler",
      "file": "src/_pytest/logging.py",
      "line": 907
    },
    {
      "id": "src/_pytest/logging.py:_LiveLoggingNullHandler.reset",
      "type": "function",
      "name": "_LiveLoggingNullHandler.reset",
      "file": "src/_pytest/logging.py",
      "line": 910
    },
    {
      "id": "src/_pytest/logging.py:_LiveLoggingNullHandler.set_when",
      "type": "function",
      "name": "_LiveLoggingNullHandler.set_when",
      "file": "src/_pytest/logging.py",
      "line": 913
    },
    {
      "id": "src/_pytest/logging.py:_LiveLoggingNullHandler.handleError",
      "type": "function",
      "name": "_LiveLoggingNullHandler.handleError",
      "file": "src/_pytest/logging.py",
      "line": 916
    },
    {
      "id": "src/_pytest/unittest.py",
      "type": "file",
      "name": "unittest.py",
      "file": "src/_pytest/unittest.py",
      "line": 0
    },
    {
      "id": "src/_pytest/unittest.py:pytest_pycollect_makeitem",
      "type": "function",
      "name": "pytest_pycollect_makeitem",
      "file": "src/_pytest/unittest.py",
      "line": 44
    },
    {
      "id": "src/_pytest/unittest.py:UnitTestCase",
      "type": "class",
      "name": "UnitTestCase",
      "file": "src/_pytest/unittest.py",
      "line": 60
    },
    {
      "id": "src/_pytest/unittest.py:UnitTestCase.collect",
      "type": "function",
      "name": "UnitTestCase.collect",
      "file": "src/_pytest/unittest.py",
      "line": 65
    },
    {
      "id": "src/_pytest/unittest.py:UnitTestCase._inject_setup_teardown_fixtures",
      "type": "function",
      "name": "UnitTestCase._inject_setup_teardown_fixtures",
      "file": "src/_pytest/unittest.py",
      "line": 96
    },
    {
      "id": "src/_pytest/unittest.py:_make_xunit_fixture",
      "type": "function",
      "name": "_make_xunit_fixture",
      "file": "src/_pytest/unittest.py",
      "line": 122
    },
    {
      "id": "src/_pytest/unittest.py:_make_xunit_fixture.cleanup",
      "type": "function",
      "name": "_make_xunit_fixture.cleanup",
      "file": "src/_pytest/unittest.py",
      "line": 139
    },
    {
      "id": "src/_pytest/unittest.py:_make_xunit_fixture.fixture",
      "type": "function",
      "name": "_make_xunit_fixture.fixture",
      "file": "src/_pytest/unittest.py",
      "line": 148
    },
    {
      "id": "src/_pytest/unittest.py:TestCaseFunction",
      "type": "class",
      "name": "TestCaseFunction",
      "file": "src/_pytest/unittest.py",
      "line": 183
    },
    {
      "id": "src/_pytest/unittest.py:TestCaseFunction._getobj",
      "type": "function",
      "name": "TestCaseFunction._getobj",
      "file": "src/_pytest/unittest.py",
      "line": 188
    },
    {
      "id": "src/_pytest/unittest.py:TestCaseFunction.setup",
      "type": "function",
      "name": "TestCaseFunction.setup",
      "file": "src/_pytest/unittest.py",
      "line": 197
    },
    {
      "id": "src/_pytest/unittest.py:TestCaseFunction.teardown",
      "type": "function",
      "name": "TestCaseFunction.teardown",
      "file": "src/_pytest/unittest.py",
      "line": 206
    },
    {
      "id": "src/_pytest/unittest.py:TestCaseFunction.startTest",
      "type": "function",
      "name": "TestCaseFunction.startTest",
      "file": "src/_pytest/unittest.py",
      "line": 213
    },
    {
      "id": "src/_pytest/unittest.py:TestCaseFunction._addexcinfo",
      "type": "function",
      "name": "TestCaseFunction._addexcinfo",
      "file": "src/_pytest/unittest.py",
      "line": 216
    },
    {
      "id": "src/_pytest/unittest.py:TestCaseFunction.addError",
      "type": "function",
      "name": "TestCaseFunction.addError",
      "file": "src/_pytest/unittest.py",
      "line": 249
    },
    {
      "id": "src/_pytest/unittest.py:TestCaseFunction.addFailure",
      "type": "function",
      "name": "TestCaseFunction.addFailure",
      "file": "src/_pytest/unittest.py",
      "line": 259
    },
    {
      "id": "src/_pytest/unittest.py:TestCaseFunction.addSkip",
      "type": "function",
      "name": "TestCaseFunction.addSkip",
      "file": "src/_pytest/unittest.py",
      "line": 264
    },
    {
      "id": "src/_pytest/unittest.py:TestCaseFunction.addExpectedFailure",
      "type": "function",
      "name": "TestCaseFunction.addExpectedFailure",
      "file": "src/_pytest/unittest.py",
      "line": 270
    },
    {
      "id": "src/_pytest/unittest.py:TestCaseFunction.addUnexpectedSuccess",
      "type": "function",
      "name": "TestCaseFunction.addUnexpectedSuccess",
      "file": "src/_pytest/unittest.py",
      "line": 281
    },
    {
      "id": "src/_pytest/unittest.py:TestCaseFunction.addSuccess",
      "type": "function",
      "name": "TestCaseFunction.addSuccess",
      "file": "src/_pytest/unittest.py",
      "line": 295
    },
    {
      "id": "src/_pytest/unittest.py:TestCaseFunction.stopTest",
      "type": "function",
      "name": "TestCaseFunction.stopTest",
      "file": "src/_pytest/unittest.py",
      "line": 298
    },
    {
      "id": "src/_pytest/unittest.py:TestCaseFunction.addDuration",
      "type": "function",
      "name": "TestCaseFunction.addDuration",
      "file": "src/_pytest/unittest.py",
      "line": 301
    },
    {
      "id": "src/_pytest/unittest.py:TestCaseFunction.runtest",
      "type": "function",
      "name": "TestCaseFunction.runtest",
      "file": "src/_pytest/unittest.py",
      "line": 304
    },
    {
      "id": "src/_pytest/unittest.py:TestCaseFunction._traceback_filter",
      "type": "function",
      "name": "TestCaseFunction._traceback_filter",
      "file": "src/_pytest/unittest.py",
      "line": 337
    },
    {
      "id": "src/_pytest/unittest.py:pytest_runtest_makereport",
      "type": "function",
      "name": "pytest_runtest_makereport",
      "file": "src/_pytest/unittest.py",
      "line": 350
    },
    {
      "id": "src/_pytest/unittest.py:pytest_runtest_protocol",
      "type": "function",
      "name": "pytest_runtest_protocol",
      "file": "src/_pytest/unittest.py",
      "line": 380
    },
    {
      "id": "src/_pytest/unittest.py:pytest_runtest_protocol.excstore",
      "type": "function",
      "name": "pytest_runtest_protocol.excstore",
      "file": "src/_pytest/unittest.py",
      "line": 386
    },
    {
      "id": "src/_pytest/unittest.py:check_testcase_implements_trial_reporter",
      "type": "function",
      "name": "check_testcase_implements_trial_reporter",
      "file": "src/_pytest/unittest.py",
      "line": 409
    },
    {
      "id": "src/_pytest/unittest.py:_is_skipped",
      "type": "function",
      "name": "_is_skipped",
      "file": "src/_pytest/unittest.py",
      "line": 419
    },
    {
      "id": "src/_pytest/python_path.py",
      "type": "file",
      "name": "python_path.py",
      "file": "src/_pytest/python_path.py",
      "line": 0
    },
    {
      "id": "src/_pytest/python_path.py:pytest_addoption",
      "type": "function",
      "name": "pytest_addoption",
      "file": "src/_pytest/python_path.py",
      "line": 8
    },
    {
      "id": "src/_pytest/python_path.py:pytest_load_initial_conftests",
      "type": "function",
      "name": "pytest_load_initial_conftests",
      "file": "src/_pytest/python_path.py",
      "line": 13
    },
    {
      "id": "src/_pytest/python_path.py:pytest_unconfigure",
      "type": "function",
      "name": "pytest_unconfigure",
      "file": "src/_pytest/python_path.py",
      "line": 20
    },
    {
      "id": "src/_pytest/runner.py",
      "type": "file",
      "name": "runner.py",
      "file": "src/_pytest/runner.py",
      "line": 0
    },
    {
      "id": "src/_pytest/runner.py:pytest_addoption",
      "type": "function",
      "name": "pytest_addoption",
      "file": "src/_pytest/runner.py",
      "line": 50
    },
    {
      "id": "src/_pytest/runner.py:pytest_terminal_summary",
      "type": "function",
      "name": "pytest_terminal_summary",
      "file": "src/_pytest/runner.py",
      "line": 71
    },
    {
      "id": "src/_pytest/runner.py:pytest_sessionstart",
      "type": "function",
      "name": "pytest_sessionstart",
      "file": "src/_pytest/runner.py",
      "line": 103
    },
    {
      "id": "src/_pytest/runner.py:pytest_sessionfinish",
      "type": "function",
      "name": "pytest_sessionfinish",
      "file": "src/_pytest/runner.py",
      "line": 107
    },
    {
      "id": "src/_pytest/runner.py:pytest_runtest_protocol",
      "type": "function",
      "name": "pytest_runtest_protocol",
      "file": "src/_pytest/runner.py",
      "line": 111
    },
    {
      "id": "src/_pytest/runner.py:runtestprotocol",
      "type": "function",
      "name": "runtestprotocol",
      "file": "src/_pytest/runner.py",
      "line": 119
    },
    {
      "id": "src/_pytest/runner.py:show_test_item",
      "type": "function",
      "name": "show_test_item",
      "file": "src/_pytest/runner.py",
      "line": 143
    },
    {
      "id": "src/_pytest/runner.py:pytest_runtest_setup",
      "type": "function",
      "name": "pytest_runtest_setup",
      "file": "src/_pytest/runner.py",
      "line": 155
    },
    {
      "id": "src/_pytest/runner.py:pytest_runtest_call",
      "type": "function",
      "name": "pytest_runtest_call",
      "file": "src/_pytest/runner.py",
      "line": 160
    },
    {
      "id": "src/_pytest/runner.py:pytest_runtest_teardown",
      "type": "function",
      "name": "pytest_runtest_teardown",
      "file": "src/_pytest/runner.py",
      "line": 180
    },
    {
      "id": "src/_pytest/runner.py:_update_current_test_var",
      "type": "function",
      "name": "_update_current_test_var",
      "file": "src/_pytest/runner.py",
      "line": 186
    },
    {
      "id": "src/_pytest/runner.py:pytest_report_teststatus",
      "type": "function",
      "name": "pytest_report_teststatus",
      "file": "src/_pytest/runner.py",
      "line": 203
    },
    {
      "id": "src/_pytest/runner.py:call_and_report",
      "type": "function",
      "name": "call_and_report",
      "file": "src/_pytest/runner.py",
      "line": 219
    },
    {
      "id": "src/_pytest/runner.py:check_interactive_exception",
      "type": "function",
      "name": "check_interactive_exception",
      "file": "src/_pytest/runner.py",
      "line": 232
    },
    {
      "id": "src/_pytest/runner.py:call_runtest_hook",
      "type": "function",
      "name": "call_runtest_hook",
      "file": "src/_pytest/runner.py",
      "line": 247
    },
    {
      "id": "src/_pytest/runner.py:CallInfo",
      "type": "class",
      "name": "CallInfo",
      "file": "src/_pytest/runner.py",
      "line": 271
    },
    {
      "id": "src/_pytest/runner.py:CallInfo.result",
      "type": "function",
      "name": "CallInfo.result",
      "file": "src/_pytest/runner.py",
      "line": 306
    },
    {
      "id": "src/_pytest/runner.py:CallInfo.from_call",
      "type": "function",
      "name": "CallInfo.from_call",
      "file": "src/_pytest/runner.py",
      "line": 319
    },
    {
      "id": "src/_pytest/runner.py:CallInfo.__repr__",
      "type": "function",
      "name": "CallInfo.__repr__",
      "file": "src/_pytest/runner.py",
      "line": 361
    },
    {
      "id": "src/_pytest/runner.py:pytest_runtest_makereport",
      "type": "function",
      "name": "pytest_runtest_makereport",
      "file": "src/_pytest/runner.py",
      "line": 367
    },
    {
      "id": "src/_pytest/runner.py:pytest_make_collect_report",
      "type": "function",
      "name": "pytest_make_collect_report",
      "file": "src/_pytest/runner.py",
      "line": 371
    },
    {
      "id": "src/_pytest/runner.py:SetupState",
      "type": "class",
      "name": "SetupState",
      "file": "src/_pytest/runner.py",
      "line": 402
    },
    {
      "id": "src/_pytest/runner.py:SetupState.setup",
      "type": "function",
      "name": "SetupState.setup",
      "file": "src/_pytest/runner.py",
      "line": 478
    },
    {
      "id": "src/_pytest/runner.py:SetupState.addfinalizer",
      "type": "function",
      "name": "SetupState.addfinalizer",
      "file": "src/_pytest/runner.py",
      "line": 499
    },
    {
      "id": "src/_pytest/runner.py:SetupState.teardown_exact",
      "type": "function",
      "name": "SetupState.teardown_exact",
      "file": "src/_pytest/runner.py",
      "line": 509
    },
    {
      "id": "src/_pytest/runner.py:collect_one_node",
      "type": "function",
      "name": "collect_one_node",
      "file": "src/_pytest/runner.py",
      "line": 544
    },
    {
      "id": "src/_pytest/helpconfig.py",
      "type": "file",
      "name": "helpconfig.py",
      "file": "src/_pytest/helpconfig.py",
      "line": 0
    },
    {
      "id": "src/_pytest/helpconfig.py:HelpAction",
      "type": "class",
      "name": "HelpAction",
      "file": "src/_pytest/helpconfig.py",
      "line": 16
    },
    {
      "id": "src/_pytest/helpconfig.py:HelpAction.__call__",
      "type": "function",
      "name": "HelpAction.__call__",
      "file": "src/_pytest/helpconfig.py",
      "line": 36
    },
    {
      "id": "src/_pytest/helpconfig.py:pytest_addoption",
      "type": "function",
      "name": "pytest_addoption",
      "file": "src/_pytest/helpconfig.py",
      "line": 44
    },
    {
      "id": "src/_pytest/helpconfig.py:pytest_cmdline_parse",
      "type": "function",
      "name": "pytest_cmdline_parse",
      "file": "src/_pytest/helpconfig.py",
      "line": 101
    },
    {
      "id": "src/_pytest/helpconfig.py:pytest_cmdline_parse.unset_tracing",
      "type": "function",
      "name": "pytest_cmdline_parse.unset_tracing",
      "file": "src/_pytest/helpconfig.py",
      "line": 123
    },
    {
      "id": "src/_pytest/helpconfig.py:showversion",
      "type": "function",
      "name": "showversion",
      "file": "src/_pytest/helpconfig.py",
      "line": 132
    },
    {
      "id": "src/_pytest/helpconfig.py:pytest_cmdline_main",
      "type": "function",
      "name": "pytest_cmdline_main",
      "file": "src/_pytest/helpconfig.py",
      "line": 147
    },
    {
      "id": "src/_pytest/helpconfig.py:showhelp",
      "type": "function",
      "name": "showhelp",
      "file": "src/_pytest/helpconfig.py",
      "line": 159
    },
    {
      "id": "src/_pytest/helpconfig.py:getpluginversioninfo",
      "type": "function",
      "name": "getpluginversioninfo",
      "file": "src/_pytest/helpconfig.py",
      "line": 236
    },
    {
      "id": "src/_pytest/helpconfig.py:pytest_report_header",
      "type": "function",
      "name": "pytest_report_header",
      "file": "src/_pytest/helpconfig.py",
      "line": 248
    },
    {
      "id": "src/_pytest/pastebin.py",
      "type": "file",
      "name": "pastebin.py",
      "file": "src/_pytest/pastebin.py",
      "line": 0
    },
    {
      "id": "src/_pytest/pastebin.py:pytest_addoption",
      "type": "function",
      "name": "pytest_addoption",
      "file": "src/_pytest/pastebin.py",
      "line": 18
    },
    {
      "id": "src/_pytest/pastebin.py:pytest_configure",
      "type": "function",
      "name": "pytest_configure",
      "file": "src/_pytest/pastebin.py",
      "line": 32
    },
    {
      "id": "src/_pytest/pastebin.py:pytest_configure.tee_write",
      "type": "function",
      "name": "pytest_configure.tee_write",
      "file": "src/_pytest/pastebin.py",
      "line": 43
    },
    {
      "id": "src/_pytest/pastebin.py:pytest_unconfigure",
      "type": "function",
      "name": "pytest_unconfigure",
      "file": "src/_pytest/pastebin.py",
      "line": 52
    },
    {
      "id": "src/_pytest/pastebin.py:create_new_paste",
      "type": "function",
      "name": "create_new_paste",
      "file": "src/_pytest/pastebin.py",
      "line": 69
    },
    {
      "id": "src/_pytest/pastebin.py:pytest_terminal_summary",
      "type": "function",
      "name": "pytest_terminal_summary",
      "file": "src/_pytest/pastebin.py",
      "line": 94
    },
    {
      "id": "src/_pytest/compat.py",
      "type": "file",
      "name": "compat.py",
      "file": "src/_pytest/compat.py",
      "line": 0
    },
    {
      "id": "src/_pytest/compat.py:legacy_path",
      "type": "function",
      "name": "legacy_path",
      "file": "src/_pytest/compat.py",
      "line": 34
    },
    {
      "id": "src/_pytest/compat.py:NotSetType",
      "type": "class",
      "name": "NotSetType",
      "file": "src/_pytest/compat.py",
      "line": 42
    },
    {
      "id": "src/_pytest/compat.py:is_generator",
      "type": "function",
      "name": "is_generator",
      "file": "src/_pytest/compat.py",
      "line": 48
    },
    {
      "id": "src/_pytest/compat.py:iscoroutinefunction",
      "type": "function",
      "name": "iscoroutinefunction",
      "file": "src/_pytest/compat.py",
      "line": 53
    },
    {
      "id": "src/_pytest/compat.py:is_async_function",
      "type": "function",
      "name": "is_async_function",
      "file": "src/_pytest/compat.py",
      "line": 65
    },
    {
      "id": "src/_pytest/compat.py:getlocation",
      "type": "function",
      "name": "getlocation",
      "file": "src/_pytest/compat.py",
      "line": 71
    },
    {
      "id": "src/_pytest/compat.py:num_mock_patch_args",
      "type": "function",
      "name": "num_mock_patch_args",
      "file": "src/_pytest/compat.py",
      "line": 85
    },
    {
      "id": "src/_pytest/compat.py:getfuncargnames",
      "type": "function",
      "name": "getfuncargnames",
      "file": "src/_pytest/compat.py",
      "line": 104
    },
    {
      "id": "src/_pytest/compat.py:get_default_arg_names",
      "type": "function",
      "name": "get_default_arg_names",
      "file": "src/_pytest/compat.py",
      "line": 174
    },
    {
      "id": "src/_pytest/compat.py:_translate_non_printable",
      "type": "function",
      "name": "_translate_non_printable",
      "file": "src/_pytest/compat.py",
      "line": 194
    },
    {
      "id": "src/_pytest/compat.py:_bytes_to_ascii",
      "type": "function",
      "name": "_bytes_to_ascii",
      "file": "src/_pytest/compat.py",
      "line": 201
    },
    {
      "id": "src/_pytest/compat.py:ascii_escaped",
      "type": "function",
      "name": "ascii_escaped",
      "file": "src/_pytest/compat.py",
      "line": 205
    },
    {
      "id": "src/_pytest/compat.py:_PytestWrapper",
      "type": "class",
      "name": "_PytestWrapper",
      "file": "src/_pytest/compat.py",
      "line": 230
    },
    {
      "id": "src/_pytest/compat.py:get_real_func",
      "type": "function",
      "name": "get_real_func",
      "file": "src/_pytest/compat.py",
      "line": 241
    },
    {
      "id": "src/_pytest/compat.py:get_real_method",
      "type": "function",
      "name": "get_real_method",
      "file": "src/_pytest/compat.py",
      "line": 270
    },
    {
      "id": "src/_pytest/compat.py:getimfunc",
      "type": "function",
      "name": "getimfunc",
      "file": "src/_pytest/compat.py",
      "line": 284
    },
    {
      "id": "src/_pytest/compat.py:safe_getattr",
      "type": "function",
      "name": "safe_getattr",
      "file": "src/_pytest/compat.py",
      "line": 291
    },
    {
      "id": "src/_pytest/compat.py:safe_isclass",
      "type": "function",
      "name": "safe_isclass",
      "file": "src/_pytest/compat.py",
      "line": 308
    },
    {
      "id": "src/_pytest/compat.py:get_user_id",
      "type": "function",
      "name": "get_user_id",
      "file": "src/_pytest/compat.py",
      "line": 316
    },
    {
      "id": "src/_pytest/compat.py:assert_never",
      "type": "function",
      "name": "assert_never",
      "file": "src/_pytest/compat.py",
      "line": 359
    },
    {
      "id": "src/_pytest/terminal.py",
      "type": "file",
      "name": "terminal.py",
      "file": "src/_pytest/terminal.py",
      "line": 0
    },
    {
      "id": "src/_pytest/terminal.py:MoreQuietAction",
      "type": "class",
      "name": "MoreQuietAction",
      "file": "src/_pytest/terminal.py",
      "line": 79
    },
    {
      "id": "src/_pytest/terminal.py:MoreQuietAction.__call__",
      "type": "function",
      "name": "MoreQuietAction.__call__",
      "file": "src/_pytest/terminal.py",
      "line": 103
    },
    {
      "id": "src/_pytest/terminal.py:TestShortLogReport",
      "type": "class",
      "name": "TestShortLogReport",
      "file": "src/_pytest/terminal.py",
      "line": 116
    },
    {
      "id": "src/_pytest/terminal.py:pytest_addoption",
      "type": "function",
      "name": "pytest_addoption",
      "file": "src/_pytest/terminal.py",
      "line": 136
    },
    {
      "id": "src/_pytest/terminal.py:pytest_configure",
      "type": "function",
      "name": "pytest_configure",
      "file": "src/_pytest/terminal.py",
      "line": 260
    },
    {
      "id": "src/_pytest/terminal.py:pytest_configure.mywriter",
      "type": "function",
      "name": "pytest_configure.mywriter",
      "file": "src/_pytest/terminal.py",
      "line": 265
    },
    {
      "id": "src/_pytest/terminal.py:getreportopt",
      "type": "function",
      "name": "getreportopt",
      "file": "src/_pytest/terminal.py",
      "line": 272
    },
    {
      "id": "src/_pytest/terminal.py:pytest_report_teststatus",
      "type": "function",
      "name": "pytest_report_teststatus",
      "file": "src/_pytest/terminal.py",
      "line": 298
    },
    {
      "id": "src/_pytest/terminal.py:WarningReport",
      "type": "class",
      "name": "WarningReport",
      "file": "src/_pytest/terminal.py",
      "line": 314
    },
    {
      "id": "src/_pytest/terminal.py:WarningReport.get_location",
      "type": "function",
      "name": "WarningReport.get_location",
      "file": "src/_pytest/terminal.py",
      "line": 331
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter",
      "type": "class",
      "name": "TerminalReporter",
      "file": "src/_pytest/terminal.py",
      "line": 343
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter._determine_show_progress_info",
      "type": "function",
      "name": "TerminalReporter._determine_show_progress_info",
      "file": "src/_pytest/terminal.py",
      "line": 370
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.verbosity",
      "type": "function",
      "name": "TerminalReporter.verbosity",
      "file": "src/_pytest/terminal.py",
      "line": 392
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.showheader",
      "type": "function",
      "name": "TerminalReporter.showheader",
      "file": "src/_pytest/terminal.py",
      "line": 397
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.no_header",
      "type": "function",
      "name": "TerminalReporter.no_header",
      "file": "src/_pytest/terminal.py",
      "line": 401
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.no_summary",
      "type": "function",
      "name": "TerminalReporter.no_summary",
      "file": "src/_pytest/terminal.py",
      "line": 405
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.showfspath",
      "type": "function",
      "name": "TerminalReporter.showfspath",
      "file": "src/_pytest/terminal.py",
      "line": 415
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.showlongtestinfo",
      "type": "function",
      "name": "TerminalReporter.showlongtestinfo",
      "file": "src/_pytest/terminal.py",
      "line": 419
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.hasopt",
      "type": "function",
      "name": "TerminalReporter.hasopt",
      "file": "src/_pytest/terminal.py",
      "line": 422
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.write_fspath_result",
      "type": "function",
      "name": "TerminalReporter.write_fspath_result",
      "file": "src/_pytest/terminal.py",
      "line": 426
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.write_ensure_prefix",
      "type": "function",
      "name": "TerminalReporter.write_ensure_prefix",
      "file": "src/_pytest/terminal.py",
      "line": 437
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.ensure_newline",
      "type": "function",
      "name": "TerminalReporter.ensure_newline",
      "file": "src/_pytest/terminal.py",
      "line": 446
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.wrap_write",
      "type": "function",
      "name": "TerminalReporter.wrap_write",
      "file": "src/_pytest/terminal.py",
      "line": 451
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.write",
      "type": "function",
      "name": "TerminalReporter.write",
      "file": "src/_pytest/terminal.py",
      "line": 473
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.flush",
      "type": "function",
      "name": "TerminalReporter.flush",
      "file": "src/_pytest/terminal.py",
      "line": 476
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.write_line",
      "type": "function",
      "name": "TerminalReporter.write_line",
      "file": "src/_pytest/terminal.py",
      "line": 479
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.rewrite",
      "type": "function",
      "name": "TerminalReporter.rewrite",
      "file": "src/_pytest/terminal.py",
      "line": 485
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.write_sep",
      "type": "function",
      "name": "TerminalReporter.write_sep",
      "file": "src/_pytest/terminal.py",
      "line": 503
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.section",
      "type": "function",
      "name": "TerminalReporter.section",
      "file": "src/_pytest/terminal.py",
      "line": 513
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.line",
      "type": "function",
      "name": "TerminalReporter.line",
      "file": "src/_pytest/terminal.py",
      "line": 516
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter._add_stats",
      "type": "function",
      "name": "TerminalReporter._add_stats",
      "file": "src/_pytest/terminal.py",
      "line": 519
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.pytest_internalerror",
      "type": "function",
      "name": "TerminalReporter.pytest_internalerror",
      "file": "src/_pytest/terminal.py",
      "line": 525
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.pytest_warning_recorded",
      "type": "function",
      "name": "TerminalReporter.pytest_warning_recorded",
      "file": "src/_pytest/terminal.py",
      "line": 530
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.pytest_plugin_registered",
      "type": "function",
      "name": "TerminalReporter.pytest_plugin_registered",
      "file": "src/_pytest/terminal.py",
      "line": 545
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.pytest_deselected",
      "type": "function",
      "name": "TerminalReporter.pytest_deselected",
      "file": "src/_pytest/terminal.py",
      "line": 553
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.pytest_runtest_logstart",
      "type": "function",
      "name": "TerminalReporter.pytest_runtest_logstart",
      "file": "src/_pytest/terminal.py",
      "line": 556
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.pytest_runtest_logreport",
      "type": "function",
      "name": "TerminalReporter.pytest_runtest_logreport",
      "file": "src/_pytest/terminal.py",
      "line": 569
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter._is_last_item",
      "type": "function",
      "name": "TerminalReporter._is_last_item",
      "file": "src/_pytest/terminal.py",
      "line": 638
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.pytest_runtest_logfinish",
      "type": "function",
      "name": "TerminalReporter.pytest_runtest_logfinish",
      "file": "src/_pytest/terminal.py",
      "line": 642
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter._get_progress_information_message",
      "type": "function",
      "name": "TerminalReporter._get_progress_information_message",
      "file": "src/_pytest/terminal.py",
      "line": 663
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter._write_progress_information_filling_space",
      "type": "function",
      "name": "TerminalReporter._write_progress_information_filling_space",
      "file": "src/_pytest/terminal.py",
      "line": 680
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter._width_of_current_line",
      "type": "function",
      "name": "TerminalReporter._width_of_current_line",
      "file": "src/_pytest/terminal.py",
      "line": 688
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.pytest_collection",
      "type": "function",
      "name": "TerminalReporter.pytest_collection",
      "file": "src/_pytest/terminal.py",
      "line": 692
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.pytest_collectreport",
      "type": "function",
      "name": "TerminalReporter.pytest_collectreport",
      "file": "src/_pytest/terminal.py",
      "line": 700
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.report_collect",
      "type": "function",
      "name": "TerminalReporter.report_collect",
      "file": "src/_pytest/terminal.py",
      "line": 710
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.pytest_sessionstart",
      "type": "function",
      "name": "TerminalReporter.pytest_sessionstart",
      "file": "src/_pytest/terminal.py",
      "line": 748
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter._write_report_lines_from_hooks",
      "type": "function",
      "name": "TerminalReporter._write_report_lines_from_hooks",
      "file": "src/_pytest/terminal.py",
      "line": 776
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.pytest_report_header",
      "type": "function",
      "name": "TerminalReporter.pytest_report_header",
      "file": "src/_pytest/terminal.py",
      "line": 786
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.pytest_collection_finish",
      "type": "function",
      "name": "TerminalReporter.pytest_collection_finish",
      "file": "src/_pytest/terminal.py",
      "line": 801
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter._printcollecteditems",
      "type": "function",
      "name": "TerminalReporter._printcollecteditems",
      "file": "src/_pytest/terminal.py",
      "line": 823
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.pytest_sessionfinish",
      "type": "function",
      "name": "TerminalReporter.pytest_sessionfinish",
      "file": "src/_pytest/terminal.py",
      "line": 853
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.pytest_terminal_summary",
      "type": "function",
      "name": "TerminalReporter.pytest_terminal_summary",
      "file": "src/_pytest/terminal.py",
      "line": 880
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.pytest_keyboard_interrupt",
      "type": "function",
      "name": "TerminalReporter.pytest_keyboard_interrupt",
      "file": "src/_pytest/terminal.py",
      "line": 890
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.pytest_unconfigure",
      "type": "function",
      "name": "TerminalReporter.pytest_unconfigure",
      "file": "src/_pytest/terminal.py",
      "line": 893
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter._report_keyboardinterrupt",
      "type": "function",
      "name": "TerminalReporter._report_keyboardinterrupt",
      "file": "src/_pytest/terminal.py",
      "line": 897
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter._locationline",
      "type": "function",
      "name": "TerminalReporter._locationline",
      "file": "src/_pytest/terminal.py",
      "line": 913
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter._locationline.mkrel",
      "type": "function",
      "name": "TerminalReporter._locationline.mkrel",
      "file": "src/_pytest/terminal.py",
      "line": 916
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter._getfailureheadline",
      "type": "function",
      "name": "TerminalReporter._getfailureheadline",
      "file": "src/_pytest/terminal.py",
      "line": 936
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter._getcrashline",
      "type": "function",
      "name": "TerminalReporter._getcrashline",
      "file": "src/_pytest/terminal.py",
      "line": 942
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.getreports",
      "type": "function",
      "name": "TerminalReporter.getreports",
      "file": "src/_pytest/terminal.py",
      "line": 954
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.summary_warnings",
      "type": "function",
      "name": "TerminalReporter.summary_warnings",
      "file": "src/_pytest/terminal.py",
      "line": 957
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.summary_warnings.collapsed_location_report",
      "type": "function",
      "name": "TerminalReporter.summary_warnings.collapsed_location_report",
      "file": "src/_pytest/terminal.py",
      "line": 976
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.summary_passes",
      "type": "function",
      "name": "TerminalReporter.summary_passes",
      "file": "src/_pytest/terminal.py",
      "line": 1011
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter._get_teardown_reports",
      "type": "function",
      "name": "TerminalReporter._get_teardown_reports",
      "file": "src/_pytest/terminal.py",
      "line": 1025
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter._handle_teardown_sections",
      "type": "function",
      "name": "TerminalReporter._handle_teardown_sections",
      "file": "src/_pytest/terminal.py",
      "line": 1033
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.print_teardown_sections",
      "type": "function",
      "name": "TerminalReporter.print_teardown_sections",
      "file": "src/_pytest/terminal.py",
      "line": 1037
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.summary_failures",
      "type": "function",
      "name": "TerminalReporter.summary_failures",
      "file": "src/_pytest/terminal.py",
      "line": 1050
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.summary_errors",
      "type": "function",
      "name": "TerminalReporter.summary_errors",
      "file": "src/_pytest/terminal.py",
      "line": 1067
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter._outrep_summary",
      "type": "function",
      "name": "TerminalReporter._outrep_summary",
      "file": "src/_pytest/terminal.py",
      "line": 1082
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.summary_stats",
      "type": "function",
      "name": "TerminalReporter.summary_stats",
      "file": "src/_pytest/terminal.py",
      "line": 1095
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.short_test_summary",
      "type": "function",
      "name": "TerminalReporter.short_test_summary",
      "file": "src/_pytest/terminal.py",
      "line": 1132
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.short_test_summary.show_simple",
      "type": "function",
      "name": "TerminalReporter.short_test_summary.show_simple",
      "file": "src/_pytest/terminal.py",
      "line": 1136
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.short_test_summary.show_xfailed",
      "type": "function",
      "name": "TerminalReporter.short_test_summary.show_xfailed",
      "file": "src/_pytest/terminal.py",
      "line": 1148
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.short_test_summary.show_xpassed",
      "type": "function",
      "name": "TerminalReporter.short_test_summary.show_xpassed",
      "file": "src/_pytest/terminal.py",
      "line": 1163
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.short_test_summary.show_skipped",
      "type": "function",
      "name": "TerminalReporter.short_test_summary.show_skipped",
      "file": "src/_pytest/terminal.py",
      "line": 1174
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter._get_main_color",
      "type": "function",
      "name": "TerminalReporter._get_main_color",
      "file": "src/_pytest/terminal.py",
      "line": 1214
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter._determine_main_color",
      "type": "function",
      "name": "TerminalReporter._determine_main_color",
      "file": "src/_pytest/terminal.py",
      "line": 1221
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter._set_main_color",
      "type": "function",
      "name": "TerminalReporter._set_main_color",
      "file": "src/_pytest/terminal.py",
      "line": 1233
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter.build_summary_stats_line",
      "type": "function",
      "name": "TerminalReporter.build_summary_stats_line",
      "file": "src/_pytest/terminal.py",
      "line": 1242
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter._get_reports_to_display",
      "type": "function",
      "name": "TerminalReporter._get_reports_to_display",
      "file": "src/_pytest/terminal.py",
      "line": 1267
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter._build_normal_summary_stats_line",
      "type": "function",
      "name": "TerminalReporter._build_normal_summary_stats_line",
      "file": "src/_pytest/terminal.py",
      "line": 1272
    },
    {
      "id": "src/_pytest/terminal.py:TerminalReporter._build_collect_only_summary_stats_line",
      "type": "function",
      "name": "TerminalReporter._build_collect_only_summary_stats_line",
      "file": "src/_pytest/terminal.py",
      "line": 1291
    },
    {
      "id": "src/_pytest/terminal.py:_get_node_id_with_markup",
      "type": "function",
      "name": "_get_node_id_with_markup",
      "file": "src/_pytest/terminal.py",
      "line": 1324
    },
    {
      "id": "src/_pytest/terminal.py:_format_trimmed",
      "type": "function",
      "name": "_format_trimmed",
      "file": "src/_pytest/terminal.py",
      "line": 1334
    },
    {
      "id": "src/_pytest/terminal.py:_get_line_with_reprcrash_message",
      "type": "function",
      "name": "_get_line_with_reprcrash_message",
      "file": "src/_pytest/terminal.py",
      "line": 1359
    },
    {
      "id": "src/_pytest/terminal.py:_folded_skips",
      "type": "function",
      "name": "_folded_skips",
      "file": "src/_pytest/terminal.py",
      "line": 1387
    },
    {
      "id": "src/_pytest/terminal.py:pluralize",
      "type": "function",
      "name": "pluralize",
      "file": "src/_pytest/terminal.py",
      "line": 1427
    },
    {
      "id": "src/_pytest/terminal.py:_plugin_nameversions",
      "type": "function",
      "name": "_plugin_nameversions",
      "file": "src/_pytest/terminal.py",
      "line": 1440
    },
    {
      "id": "src/_pytest/terminal.py:format_session_duration",
      "type": "function",
      "name": "format_session_duration",
      "file": "src/_pytest/terminal.py",
      "line": 1454
    },
    {
      "id": "src/_pytest/terminal.py:_get_raw_skip_reason",
      "type": "function",
      "name": "_get_raw_skip_reason",
      "file": "src/_pytest/terminal.py",
      "line": 1463
    },
    {
      "id": "src/_pytest/warnings.py",
      "type": "file",
      "name": "warnings.py",
      "file": "src/_pytest/warnings.py",
      "line": 0
    },
    {
      "id": "src/_pytest/warnings.py:pytest_configure",
      "type": "function",
      "name": "pytest_configure",
      "file": "src/_pytest/warnings.py",
      "line": 20
    },
    {
      "id": "src/_pytest/warnings.py:catch_warnings_for_item",
      "type": "function",
      "name": "catch_warnings_for_item",
      "file": "src/_pytest/warnings.py",
      "line": 29
    },
    {
      "id": "src/_pytest/warnings.py:warning_record_to_str",
      "type": "function",
      "name": "warning_record_to_str",
      "file": "src/_pytest/warnings.py",
      "line": 76
    },
    {
      "id": "src/_pytest/warnings.py:pytest_runtest_protocol",
      "type": "function",
      "name": "pytest_runtest_protocol",
      "file": "src/_pytest/warnings.py",
      "line": 107
    },
    {
      "id": "src/_pytest/warnings.py:pytest_collection",
      "type": "function",
      "name": "pytest_collection",
      "file": "src/_pytest/warnings.py",
      "line": 115
    },
    {
      "id": "src/_pytest/warnings.py:pytest_terminal_summary",
      "type": "function",
      "name": "pytest_terminal_summary",
      "file": "src/_pytest/warnings.py",
      "line": 124
    },
    {
      "id": "src/_pytest/warnings.py:pytest_sessionfinish",
      "type": "function",
      "name": "pytest_sessionfinish",
      "file": "src/_pytest/warnings.py",
      "line": 135
    },
    {
      "id": "src/_pytest/warnings.py:pytest_load_initial_conftests",
      "type": "function",
      "name": "pytest_load_initial_conftests",
      "file": "src/_pytest/warnings.py",
      "line": 144
    },
    {
      "id": "src/_pytest/pytester_assertions.py",
      "type": "file",
      "name": "pytester_assertions.py",
      "file": "src/_pytest/pytester_assertions.py",
      "line": 0
    },
    {
      "id": "src/_pytest/pytester_assertions.py:assertoutcome",
      "type": "function",
      "name": "assertoutcome",
      "file": "src/_pytest/pytester_assertions.py",
      "line": 16
    },
    {
      "id": "src/_pytest/pytester_assertions.py:assert_outcomes",
      "type": "function",
      "name": "assert_outcomes",
      "file": "src/_pytest/pytester_assertions.py",
      "line": 38
    },
    {
      "id": "src/_pytest/deprecated.py",
      "type": "file",
      "name": "deprecated.py",
      "file": "src/_pytest/deprecated.py",
      "line": 0
    },
    {
      "id": "src/_pytest/deprecated.py:check_ispytest",
      "type": "function",
      "name": "check_ispytest",
      "file": "src/_pytest/deprecated.py",
      "line": 149
    },
    {
      "id": "src/_pytest/recwarn.py",
      "type": "file",
      "name": "recwarn.py",
      "file": "src/_pytest/recwarn.py",
      "line": 0
    },
    {
      "id": "src/_pytest/recwarn.py:recwarn",
      "type": "function",
      "name": "recwarn",
      "file": "src/_pytest/recwarn.py",
      "line": 30
    },
    {
      "id": "src/_pytest/recwarn.py:deprecated_call",
      "type": "function",
      "name": "deprecated_call",
      "file": "src/_pytest/recwarn.py",
      "line": 56
    },
    {
      "id": "src/_pytest/recwarn.py:warns",
      "type": "function",
      "name": "warns",
      "file": "src/_pytest/recwarn.py",
      "line": 107
    },
    {
      "id": "src/_pytest/recwarn.py:WarningsRecorder",
      "type": "class",
      "name": "WarningsRecorder",
      "file": "src/_pytest/recwarn.py",
      "line": 171
    },
    {
      "id": "src/_pytest/recwarn.py:WarningsRecorder.list",
      "type": "function",
      "name": "WarningsRecorder.list",
      "file": "src/_pytest/recwarn.py",
      "line": 192
    },
    {
      "id": "src/_pytest/recwarn.py:WarningsRecorder.__getitem__",
      "type": "function",
      "name": "WarningsRecorder.__getitem__",
      "file": "src/_pytest/recwarn.py",
      "line": 196
    },
    {
      "id": "src/_pytest/recwarn.py:WarningsRecorder.__iter__",
      "type": "function",
      "name": "WarningsRecorder.__iter__",
      "file": "src/_pytest/recwarn.py",
      "line": 200
    },
    {
      "id": "src/_pytest/recwarn.py:WarningsRecorder.__len__",
      "type": "function",
      "name": "WarningsRecorder.__len__",
      "file": "src/_pytest/recwarn.py",
      "line": 204
    },
    {
      "id": "src/_pytest/recwarn.py:WarningsRecorder.pop",
      "type": "function",
      "name": "WarningsRecorder.pop",
      "file": "src/_pytest/recwarn.py",
      "line": 208
    },
    {
      "id": "src/_pytest/recwarn.py:WarningsRecorder.clear",
      "type": "function",
      "name": "WarningsRecorder.clear",
      "file": "src/_pytest/recwarn.py",
      "line": 216
    },
    {
      "id": "src/_pytest/recwarn.py:WarningsRecorder.__enter__",
      "type": "function",
      "name": "WarningsRecorder.__enter__",
      "file": "src/_pytest/recwarn.py",
      "line": 222
    },
    {
      "id": "src/_pytest/recwarn.py:WarningsRecorder.__exit__",
      "type": "function",
      "name": "WarningsRecorder.__exit__",
      "file": "src/_pytest/recwarn.py",
      "line": 233
    },
    {
      "id": "src/_pytest/recwarn.py:WarningsChecker",
      "type": "class",
      "name": "WarningsChecker",
      "file": "src/_pytest/recwarn.py",
      "line": 251
    },
    {
      "id": "src/_pytest/recwarn.py:WarningsChecker.matches",
      "type": "function",
      "name": "WarningsChecker.matches",
      "file": "src/_pytest/recwarn.py",
      "line": 281
    },
    {
      "id": "src/_pytest/recwarn.py:WarningsChecker.__exit__",
      "type": "function",
      "name": "WarningsChecker.__exit__",
      "file": "src/_pytest/recwarn.py",
      "line": 287
    },
    {
      "id": "src/_pytest/recwarn.py:WarningsChecker.__exit__.found_str",
      "type": "function",
      "name": "WarningsChecker.__exit__.found_str",
      "file": "src/_pytest/recwarn.py",
      "line": 301
    },
    {
      "id": "src/_pytest/tmpdir.py",
      "type": "file",
      "name": "tmpdir.py",
      "file": "src/_pytest/tmpdir.py",
      "line": 0
    },
    {
      "id": "src/_pytest/tmpdir.py:TempPathFactory",
      "type": "class",
      "name": "TempPathFactory",
      "file": "src/_pytest/tmpdir.py",
      "line": 40
    },
    {
      "id": "src/_pytest/tmpdir.py:TempPathFactory.from_config",
      "type": "function",
      "name": "TempPathFactory.from_config",
      "file": "src/_pytest/tmpdir.py",
      "line": 77
    },
    {
      "id": "src/_pytest/tmpdir.py:TempPathFactory._ensure_relative_to_basetemp",
      "type": "function",
      "name": "TempPathFactory._ensure_relative_to_basetemp",
      "file": "src/_pytest/tmpdir.py",
      "line": 108
    },
    {
      "id": "src/_pytest/tmpdir.py:TempPathFactory.mktemp",
      "type": "function",
      "name": "TempPathFactory.mktemp",
      "file": "src/_pytest/tmpdir.py",
      "line": 114
    },
    {
      "id": "src/_pytest/tmpdir.py:TempPathFactory.getbasetemp",
      "type": "function",
      "name": "TempPathFactory.getbasetemp",
      "file": "src/_pytest/tmpdir.py",
      "line": 138
    },
    {
      "id": "src/_pytest/tmpdir.py:get_user",
      "type": "function",
      "name": "get_user",
      "file": "src/_pytest/tmpdir.py",
      "line": 198
    },
    {
      "id": "src/_pytest/tmpdir.py:pytest_configure",
      "type": "function",
      "name": "pytest_configure",
      "file": "src/_pytest/tmpdir.py",
      "line": 210
    },
    {
      "id": "src/_pytest/tmpdir.py:pytest_addoption",
      "type": "function",
      "name": "pytest_addoption",
      "file": "src/_pytest/tmpdir.py",
      "line": 223
    },
    {
      "id": "src/_pytest/tmpdir.py:tmp_path_factory",
      "type": "function",
      "name": "tmp_path_factory",
      "file": "src/_pytest/tmpdir.py",
      "line": 239
    },
    {
      "id": "src/_pytest/tmpdir.py:_mk_tmp",
      "type": "function",
      "name": "_mk_tmp",
      "file": "src/_pytest/tmpdir.py",
      "line": 245
    },
    {
      "id": "src/_pytest/tmpdir.py:tmp_path",
      "type": "function",
      "name": "tmp_path",
      "file": "src/_pytest/tmpdir.py",
      "line": 254
    },
    {
      "id": "src/_pytest/tmpdir.py:pytest_sessionfinish",
      "type": "function",
      "name": "pytest_sessionfinish",
      "file": "src/_pytest/tmpdir.py",
      "line": 287
    },
    {
      "id": "src/_pytest/tmpdir.py:pytest_runtest_makereport",
      "type": "function",
      "name": "pytest_runtest_makereport",
      "file": "src/_pytest/tmpdir.py",
      "line": 313
    },
    {
      "id": "src/_pytest/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "src/_pytest/__init__.py",
      "line": 0
    },
    {
      "id": "src/_pytest/stash.py",
      "type": "file",
      "name": "stash.py",
      "file": "src/_pytest/stash.py",
      "line": 0
    },
    {
      "id": "src/_pytest/stash.py:StashKey",
      "type": "class",
      "name": "StashKey",
      "file": "src/_pytest/stash.py",
      "line": 16
    },
    {
      "id": "src/_pytest/stash.py:Stash",
      "type": "class",
      "name": "Stash",
      "file": "src/_pytest/stash.py",
      "line": 27
    },
    {
      "id": "src/_pytest/stash.py:Stash.__setitem__",
      "type": "function",
      "name": "Stash.__setitem__",
      "file": "src/_pytest/stash.py",
      "line": 71
    },
    {
      "id": "src/_pytest/stash.py:Stash.__getitem__",
      "type": "function",
      "name": "Stash.__getitem__",
      "file": "src/_pytest/stash.py",
      "line": 75
    },
    {
      "id": "src/_pytest/stash.py:Stash.get",
      "type": "function",
      "name": "Stash.get",
      "file": "src/_pytest/stash.py",
      "line": 82
    },
    {
      "id": "src/_pytest/stash.py:Stash.setdefault",
      "type": "function",
      "name": "Stash.setdefault",
      "file": "src/_pytest/stash.py",
      "line": 90
    },
    {
      "id": "src/_pytest/stash.py:Stash.__delitem__",
      "type": "function",
      "name": "Stash.__delitem__",
      "file": "src/_pytest/stash.py",
      "line": 99
    },
    {
      "id": "src/_pytest/stash.py:Stash.__contains__",
      "type": "function",
      "name": "Stash.__contains__",
      "file": "src/_pytest/stash.py",
      "line": 106
    },
    {
      "id": "src/_pytest/stash.py:Stash.__len__",
      "type": "function",
      "name": "Stash.__len__",
      "file": "src/_pytest/stash.py",
      "line": 110
    },
    {
      "id": "src/_pytest/debugging.py",
      "type": "file",
      "name": "debugging.py",
      "file": "src/_pytest/debugging.py",
      "line": 0
    },
    {
      "id": "src/_pytest/debugging.py:_validate_usepdb_cls",
      "type": "function",
      "name": "_validate_usepdb_cls",
      "file": "src/_pytest/debugging.py",
      "line": 33
    },
    {
      "id": "src/_pytest/debugging.py:pytest_addoption",
      "type": "function",
      "name": "pytest_addoption",
      "file": "src/_pytest/debugging.py",
      "line": 44
    },
    {
      "id": "src/_pytest/debugging.py:pytest_configure",
      "type": "function",
      "name": "pytest_configure",
      "file": "src/_pytest/debugging.py",
      "line": 68
    },
    {
      "id": "src/_pytest/debugging.py:pytest_configure.fin",
      "type": "function",
      "name": "pytest_configure.fin",
      "file": "src/_pytest/debugging.py",
      "line": 85
    },
    {
      "id": "src/_pytest/debugging.py:pytestPDB",
      "type": "class",
      "name": "pytestPDB",
      "file": "src/_pytest/debugging.py",
      "line": 95
    },
    {
      "id": "src/_pytest/debugging.py:pytestPDB._is_capturing",
      "type": "function",
      "name": "pytestPDB._is_capturing",
      "file": "src/_pytest/debugging.py",
      "line": 107
    },
    {
      "id": "src/_pytest/debugging.py:pytestPDB._import_pdb_cls",
      "type": "function",
      "name": "pytestPDB._import_pdb_cls",
      "file": "src/_pytest/debugging.py",
      "line": 113
    },
    {
      "id": "src/_pytest/debugging.py:pytestPDB._get_pdb_wrapper_class",
      "type": "function",
      "name": "pytestPDB._get_pdb_wrapper_class",
      "file": "src/_pytest/debugging.py",
      "line": 152
    },
    {
      "id": "src/_pytest/debugging.py:pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper",
      "type": "class",
      "name": "pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper",
      "file": "src/_pytest/debugging.py",
      "line": 157
    },
    {
      "id": "src/_pytest/debugging.py:pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper.do_debug",
      "type": "function",
      "name": "pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper.do_debug",
      "file": "src/_pytest/debugging.py",
      "line": 161
    },
    {
      "id": "src/_pytest/debugging.py:pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper.do_continue",
      "type": "function",
      "name": "pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper.do_continue",
      "file": "src/_pytest/debugging.py",
      "line": 167
    },
    {
      "id": "src/_pytest/debugging.py:pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper.do_quit",
      "type": "function",
      "name": "pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper.do_quit",
      "file": "src/_pytest/debugging.py",
      "line": 196
    },
    {
      "id": "src/_pytest/debugging.py:pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper.setup",
      "type": "function",
      "name": "pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper.setup",
      "file": "src/_pytest/debugging.py",
      "line": 213
    },
    {
      "id": "src/_pytest/debugging.py:pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper.get_stack",
      "type": "function",
      "name": "pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper.get_stack",
      "file": "src/_pytest/debugging.py",
      "line": 227
    },
    {
      "id": "src/_pytest/debugging.py:pytestPDB._init_pdb",
      "type": "function",
      "name": "pytestPDB._init_pdb",
      "file": "src/_pytest/debugging.py",
      "line": 239
    },
    {
      "id": "src/_pytest/debugging.py:pytestPDB.set_trace",
      "type": "function",
      "name": "pytestPDB.set_trace",
      "file": "src/_pytest/debugging.py",
      "line": 279
    },
    {
      "id": "src/_pytest/debugging.py:PdbInvoke",
      "type": "class",
      "name": "PdbInvoke",
      "file": "src/_pytest/debugging.py",
      "line": 286
    },
    {
      "id": "src/_pytest/debugging.py:PdbInvoke.pytest_exception_interact",
      "type": "function",
      "name": "PdbInvoke.pytest_exception_interact",
      "file": "src/_pytest/debugging.py",
      "line": 287
    },
    {
      "id": "src/_pytest/debugging.py:PdbInvoke.pytest_internalerror",
      "type": "function",
      "name": "PdbInvoke.pytest_internalerror",
      "file": "src/_pytest/debugging.py",
      "line": 301
    },
    {
      "id": "src/_pytest/debugging.py:PdbTrace",
      "type": "class",
      "name": "PdbTrace",
      "file": "src/_pytest/debugging.py",
      "line": 306
    },
    {
      "id": "src/_pytest/debugging.py:PdbTrace.pytest_pyfunc_call",
      "type": "function",
      "name": "PdbTrace.pytest_pyfunc_call",
      "file": "src/_pytest/debugging.py",
      "line": 308
    },
    {
      "id": "src/_pytest/debugging.py:wrap_pytest_function_for_tracing",
      "type": "function",
      "name": "wrap_pytest_function_for_tracing",
      "file": "src/_pytest/debugging.py",
      "line": 313
    },
    {
      "id": "src/_pytest/debugging.py:wrap_pytest_function_for_tracing.wrapper",
      "type": "function",
      "name": "wrap_pytest_function_for_tracing.wrapper",
      "file": "src/_pytest/debugging.py",
      "line": 325
    },
    {
      "id": "src/_pytest/debugging.py:maybe_wrap_pytest_function_for_tracing",
      "type": "function",
      "name": "maybe_wrap_pytest_function_for_tracing",
      "file": "src/_pytest/debugging.py",
      "line": 332
    },
    {
      "id": "src/_pytest/debugging.py:_enter_pdb",
      "type": "function",
      "name": "_enter_pdb",
      "file": "src/_pytest/debugging.py",
      "line": 339
    },
    {
      "id": "src/_pytest/debugging.py:_postmortem_traceback",
      "type": "function",
      "name": "_postmortem_traceback",
      "file": "src/_pytest/debugging.py",
      "line": 370
    },
    {
      "id": "src/_pytest/debugging.py:post_mortem",
      "type": "function",
      "name": "post_mortem",
      "file": "src/_pytest/debugging.py",
      "line": 386
    },
    {
      "id": "src/_pytest/python_api.py",
      "type": "file",
      "name": "python_api.py",
      "file": "src/_pytest/python_api.py",
      "line": 0
    },
    {
      "id": "src/_pytest/python_api.py:_non_numeric_type_error",
      "type": "function",
      "name": "_non_numeric_type_error",
      "file": "src/_pytest/python_api.py",
      "line": 33
    },
    {
      "id": "src/_pytest/python_api.py:_compare_approx",
      "type": "function",
      "name": "_compare_approx",
      "file": "src/_pytest/python_api.py",
      "line": 42
    },
    {
      "id": "src/_pytest/python_api.py:ApproxBase",
      "type": "class",
      "name": "ApproxBase",
      "file": "src/_pytest/python_api.py",
      "line": 71
    },
    {
      "id": "src/_pytest/python_api.py:ApproxBase.__repr__",
      "type": "function",
      "name": "ApproxBase.__repr__",
      "file": "src/_pytest/python_api.py",
      "line": 87
    },
    {
      "id": "src/_pytest/python_api.py:ApproxBase._repr_compare",
      "type": "function",
      "name": "ApproxBase._repr_compare",
      "file": "src/_pytest/python_api.py",
      "line": 90
    },
    {
      "id": "src/_pytest/python_api.py:ApproxBase.__eq__",
      "type": "function",
      "name": "ApproxBase.__eq__",
      "file": "src/_pytest/python_api.py",
      "line": 97
    },
    {
      "id": "src/_pytest/python_api.py:ApproxBase.__bool__",
      "type": "function",
      "name": "ApproxBase.__bool__",
      "file": "src/_pytest/python_api.py",
      "line": 102
    },
    {
      "id": "src/_pytest/python_api.py:ApproxBase.__ne__",
      "type": "function",
      "name": "ApproxBase.__ne__",
      "file": "src/_pytest/python_api.py",
      "line": 111
    },
    {
      "id": "src/_pytest/python_api.py:ApproxBase._approx_scalar",
      "type": "function",
      "name": "ApproxBase._approx_scalar",
      "file": "src/_pytest/python_api.py",
      "line": 114
    },
    {
      "id": "src/_pytest/python_api.py:ApproxBase._yield_comparisons",
      "type": "function",
      "name": "ApproxBase._yield_comparisons",
      "file": "src/_pytest/python_api.py",
      "line": 119
    },
    {
      "id": "src/_pytest/python_api.py:ApproxBase._check_type",
      "type": "function",
      "name": "ApproxBase._check_type",
      "file": "src/_pytest/python_api.py",
      "line": 126
    },
    {
      "id": "src/_pytest/python_api.py:_recursive_sequence_map",
      "type": "function",
      "name": "_recursive_sequence_map",
      "file": "src/_pytest/python_api.py",
      "line": 135
    },
    {
      "id": "src/_pytest/python_api.py:ApproxNumpy",
      "type": "class",
      "name": "ApproxNumpy",
      "file": "src/_pytest/python_api.py",
      "line": 144
    },
    {
      "id": "src/_pytest/python_api.py:ApproxNumpy.__repr__",
      "type": "function",
      "name": "ApproxNumpy.__repr__",
      "file": "src/_pytest/python_api.py",
      "line": 147
    },
    {
      "id": "src/_pytest/python_api.py:ApproxNumpy._repr_compare",
      "type": "function",
      "name": "ApproxNumpy._repr_compare",
      "file": "src/_pytest/python_api.py",
      "line": 153
    },
    {
      "id": "src/_pytest/python_api.py:ApproxNumpy._repr_compare.get_value_from_nested_list",
      "type": "function",
      "name": "ApproxNumpy._repr_compare.get_value_from_nested_list",
      "file": "src/_pytest/python_api.py",
      "line": 157
    },
    {
      "id": "src/_pytest/python_api.py:ApproxNumpy.__eq__",
      "type": "function",
      "name": "ApproxNumpy.__eq__",
      "file": "src/_pytest/python_api.py",
      "line": 213
    },
    {
      "id": "src/_pytest/python_api.py:ApproxNumpy._yield_comparisons",
      "type": "function",
      "name": "ApproxNumpy._yield_comparisons",
      "file": "src/_pytest/python_api.py",
      "line": 229
    },
    {
      "id": "src/_pytest/python_api.py:ApproxMapping",
      "type": "class",
      "name": "ApproxMapping",
      "file": "src/_pytest/python_api.py",
      "line": 244
    },
    {
      "id": "src/_pytest/python_api.py:ApproxMapping.__repr__",
      "type": "function",
      "name": "ApproxMapping.__repr__",
      "file": "src/_pytest/python_api.py",
      "line": 248
    },
    {
      "id": "src/_pytest/python_api.py:ApproxMapping._repr_compare",
      "type": "function",
      "name": "ApproxMapping._repr_compare",
      "file": "src/_pytest/python_api.py",
      "line": 253
    },
    {
      "id": "src/_pytest/python_api.py:ApproxMapping.__eq__",
      "type": "function",
      "name": "ApproxMapping.__eq__",
      "file": "src/_pytest/python_api.py",
      "line": 297
    },
    {
      "id": "src/_pytest/python_api.py:ApproxMapping._yield_comparisons",
      "type": "function",
      "name": "ApproxMapping._yield_comparisons",
      "file": "src/_pytest/python_api.py",
      "line": 306
    },
    {
      "id": "src/_pytest/python_api.py:ApproxMapping._check_type",
      "type": "function",
      "name": "ApproxMapping._check_type",
      "file": "src/_pytest/python_api.py",
      "line": 310
    },
    {
      "id": "src/_pytest/python_api.py:ApproxSequenceLike",
      "type": "class",
      "name": "ApproxSequenceLike",
      "file": "src/_pytest/python_api.py",
      "line": 318
    },
    {
      "id": "src/_pytest/python_api.py:ApproxSequenceLike.__repr__",
      "type": "function",
      "name": "ApproxSequenceLike.__repr__",
      "file": "src/_pytest/python_api.py",
      "line": 321
    },
    {
      "id": "src/_pytest/python_api.py:ApproxSequenceLike._repr_compare",
      "type": "function",
      "name": "ApproxSequenceLike._repr_compare",
      "file": "src/_pytest/python_api.py",
      "line": 329
    },
    {
      "id": "src/_pytest/python_api.py:ApproxSequenceLike.__eq__",
      "type": "function",
      "name": "ApproxSequenceLike.__eq__",
      "file": "src/_pytest/python_api.py",
      "line": 370
    },
    {
      "id": "src/_pytest/python_api.py:ApproxSequenceLike._yield_comparisons",
      "type": "function",
      "name": "ApproxSequenceLike._yield_comparisons",
      "file": "src/_pytest/python_api.py",
      "line": 378
    },
    {
      "id": "src/_pytest/python_api.py:ApproxSequenceLike._check_type",
      "type": "function",
      "name": "ApproxSequenceLike._check_type",
      "file": "src/_pytest/python_api.py",
      "line": 381
    },
    {
      "id": "src/_pytest/python_api.py:ApproxScalar",
      "type": "class",
      "name": "ApproxScalar",
      "file": "src/_pytest/python_api.py",
      "line": 389
    },
    {
      "id": "src/_pytest/python_api.py:ApproxScalar.__repr__",
      "type": "function",
      "name": "ApproxScalar.__repr__",
      "file": "src/_pytest/python_api.py",
      "line": 397
    },
    {
      "id": "src/_pytest/python_api.py:ApproxScalar.__eq__",
      "type": "function",
      "name": "ApproxScalar.__eq__",
      "file": "src/_pytest/python_api.py",
      "line": 426
    },
    {
      "id": "src/_pytest/python_api.py:ApproxScalar.tolerance",
      "type": "function",
      "name": "ApproxScalar.tolerance",
      "file": "src/_pytest/python_api.py",
      "line": 471
    },
    {
      "id": "src/_pytest/python_api.py:ApproxScalar.tolerance.set_default",
      "type": "function",
      "name": "ApproxScalar.tolerance.set_default",
      "file": "src/_pytest/python_api.py",
      "line": 478
    },
    {
      "id": "src/_pytest/python_api.py:ApproxDecimal",
      "type": "class",
      "name": "ApproxDecimal",
      "file": "src/_pytest/python_api.py",
      "line": 518
    },
    {
      "id": "src/_pytest/python_api.py:approx",
      "type": "function",
      "name": "approx",
      "file": "src/_pytest/python_api.py",
      "line": 525
    },
    {
      "id": "src/_pytest/python_api.py:_is_numpy_array",
      "type": "function",
      "name": "_is_numpy_array",
      "file": "src/_pytest/python_api.py",
      "line": 752
    },
    {
      "id": "src/_pytest/python_api.py:_as_numpy_array",
      "type": "function",
      "name": "_as_numpy_array",
      "file": "src/_pytest/python_api.py",
      "line": 760
    },
    {
      "id": "src/_pytest/python_api.py:raises",
      "type": "function",
      "name": "raises",
      "file": "src/_pytest/python_api.py",
      "line": 803
    },
    {
      "id": "src/_pytest/python_api.py:RaisesContext",
      "type": "class",
      "name": "RaisesContext",
      "file": "src/_pytest/python_api.py",
      "line": 961
    },
    {
      "id": "src/_pytest/python_api.py:RaisesContext.__enter__",
      "type": "function",
      "name": "RaisesContext.__enter__",
      "file": "src/_pytest/python_api.py",
      "line": 973
    },
    {
      "id": "src/_pytest/python_api.py:RaisesContext.__exit__",
      "type": "function",
      "name": "RaisesContext.__exit__",
      "file": "src/_pytest/python_api.py",
      "line": 977
    },
    {
      "id": "src/_pytest/_argcomplete.py",
      "type": "file",
      "name": "_argcomplete.py",
      "file": "src/_pytest/_argcomplete.py",
      "line": 0
    },
    {
      "id": "src/_pytest/_argcomplete.py:FastFilesCompleter",
      "type": "class",
      "name": "FastFilesCompleter",
      "file": "src/_pytest/_argcomplete.py",
      "line": 73
    },
    {
      "id": "src/_pytest/_argcomplete.py:FastFilesCompleter.__call__",
      "type": "function",
      "name": "FastFilesCompleter.__call__",
      "file": "src/_pytest/_argcomplete.py",
      "line": 79
    },
    {
      "id": "src/_pytest/_argcomplete.py:try_argcomplete",
      "type": "function",
      "name": "try_argcomplete",
      "file": "src/_pytest/_argcomplete.py",
      "line": 113
    },
    {
      "id": "src/_pytest/unraisableexception.py",
      "type": "file",
      "name": "unraisableexception.py",
      "file": "src/_pytest/unraisableexception.py",
      "line": 0
    },
    {
      "id": "src/_pytest/unraisableexception.py:catch_unraisable_exception",
      "type": "class",
      "name": "catch_unraisable_exception",
      "file": "src/_pytest/unraisableexception.py",
      "line": 15
    },
    {
      "id": "src/_pytest/unraisableexception.py:catch_unraisable_exception._hook",
      "type": "function",
      "name": "catch_unraisable_exception._hook",
      "file": "src/_pytest/unraisableexception.py",
      "line": 40
    },
    {
      "id": "src/_pytest/unraisableexception.py:catch_unraisable_exception.__enter__",
      "type": "function",
      "name": "catch_unraisable_exception.__enter__",
      "file": "src/_pytest/unraisableexception.py",
      "line": 45
    },
    {
      "id": "src/_pytest/unraisableexception.py:catch_unraisable_exception.__exit__",
      "type": "function",
      "name": "catch_unraisable_exception.__exit__",
      "file": "src/_pytest/unraisableexception.py",
      "line": 50
    },
    {
      "id": "src/_pytest/unraisableexception.py:unraisable_exception_runtest_hook",
      "type": "function",
      "name": "unraisable_exception_runtest_hook",
      "file": "src/_pytest/unraisableexception.py",
      "line": 62
    },
    {
      "id": "src/_pytest/unraisableexception.py:pytest_runtest_setup",
      "type": "function",
      "name": "pytest_runtest_setup",
      "file": "src/_pytest/unraisableexception.py",
      "line": 82
    },
    {
      "id": "src/_pytest/unraisableexception.py:pytest_runtest_call",
      "type": "function",
      "name": "pytest_runtest_call",
      "file": "src/_pytest/unraisableexception.py",
      "line": 87
    },
    {
      "id": "src/_pytest/unraisableexception.py:pytest_runtest_teardown",
      "type": "function",
      "name": "pytest_runtest_teardown",
      "file": "src/_pytest/unraisableexception.py",
      "line": 92
    },
    {
      "id": "src/_pytest/capture.py",
      "type": "file",
      "name": "capture.py",
      "file": "src/_pytest/capture.py",
      "line": 0
    },
    {
      "id": "src/_pytest/capture.py:pytest_addoption",
      "type": "function",
      "name": "pytest_addoption",
      "file": "src/_pytest/capture.py",
      "line": 43
    },
    {
      "id": "src/_pytest/capture.py:_colorama_workaround",
      "type": "function",
      "name": "_colorama_workaround",
      "file": "src/_pytest/capture.py",
      "line": 62
    },
    {
      "id": "src/_pytest/capture.py:_windowsconsoleio_workaround",
      "type": "function",
      "name": "_windowsconsoleio_workaround",
      "file": "src/_pytest/capture.py",
      "line": 77
    },
    {
      "id": "src/_pytest/capture.py:_windowsconsoleio_workaround._reopen_stdio",
      "type": "function",
      "name": "_windowsconsoleio_workaround._reopen_stdio",
      "file": "src/_pytest/capture.py",
      "line": 114
    },
    {
      "id": "src/_pytest/capture.py:pytest_load_initial_conftests",
      "type": "function",
      "name": "pytest_load_initial_conftests",
      "file": "src/_pytest/capture.py",
      "line": 134
    },
    {
      "id": "src/_pytest/capture.py:EncodedFile",
      "type": "class",
      "name": "EncodedFile",
      "file": "src/_pytest/capture.py",
      "line": 159
    },
    {
      "id": "src/_pytest/capture.py:EncodedFile.name",
      "type": "function",
      "name": "EncodedFile.name",
      "file": "src/_pytest/capture.py",
      "line": 163
    },
    {
      "id": "src/_pytest/capture.py:EncodedFile.mode",
      "type": "function",
      "name": "EncodedFile.mode",
      "file": "src/_pytest/capture.py",
      "line": 169
    },
    {
      "id": "src/_pytest/capture.py:CaptureIO",
      "type": "class",
      "name": "CaptureIO",
      "file": "src/_pytest/capture.py",
      "line": 175
    },
    {
      "id": "src/_pytest/capture.py:CaptureIO.getvalue",
      "type": "function",
      "name": "CaptureIO.getvalue",
      "file": "src/_pytest/capture.py",
      "line": 179
    },
    {
      "id": "src/_pytest/capture.py:TeeCaptureIO",
      "type": "class",
      "name": "TeeCaptureIO",
      "file": "src/_pytest/capture.py",
      "line": 184
    },
    {
      "id": "src/_pytest/capture.py:TeeCaptureIO.write",
      "type": "function",
      "name": "TeeCaptureIO.write",
      "file": "src/_pytest/capture.py",
      "line": 189
    },
    {
      "id": "src/_pytest/capture.py:DontReadFromInput",
      "type": "class",
      "name": "DontReadFromInput",
      "file": "src/_pytest/capture.py",
      "line": 194
    },
    {
      "id": "src/_pytest/capture.py:DontReadFromInput.encoding",
      "type": "function",
      "name": "DontReadFromInput.encoding",
      "file": "src/_pytest/capture.py",
      "line": 196
    },
    {
      "id": "src/_pytest/capture.py:DontReadFromInput.read",
      "type": "function",
      "name": "DontReadFromInput.read",
      "file": "src/_pytest/capture.py",
      "line": 199
    },
    {
      "id": "src/_pytest/capture.py:DontReadFromInput.__next__",
      "type": "function",
      "name": "DontReadFromInput.__next__",
      "file": "src/_pytest/capture.py",
      "line": 206
    },
    {
      "id": "src/_pytest/capture.py:DontReadFromInput.readlines",
      "type": "function",
      "name": "DontReadFromInput.readlines",
      "file": "src/_pytest/capture.py",
      "line": 209
    },
    {
      "id": "src/_pytest/capture.py:DontReadFromInput.__iter__",
      "type": "function",
      "name": "DontReadFromInput.__iter__",
      "file": "src/_pytest/capture.py",
      "line": 214
    },
    {
      "id": "src/_pytest/capture.py:DontReadFromInput.fileno",
      "type": "function",
      "name": "DontReadFromInput.fileno",
      "file": "src/_pytest/capture.py",
      "line": 217
    },
    {
      "id": "src/_pytest/capture.py:DontReadFromInput.flush",
      "type": "function",
      "name": "DontReadFromInput.flush",
      "file": "src/_pytest/capture.py",
      "line": 220
    },
    {
      "id": "src/_pytest/capture.py:DontReadFromInput.isatty",
      "type": "function",
      "name": "DontReadFromInput.isatty",
      "file": "src/_pytest/capture.py",
      "line": 223
    },
    {
      "id": "src/_pytest/capture.py:DontReadFromInput.close",
      "type": "function",
      "name": "DontReadFromInput.close",
      "file": "src/_pytest/capture.py",
      "line": 226
    },
    {
      "id": "src/_pytest/capture.py:DontReadFromInput.readable",
      "type": "function",
      "name": "DontReadFromInput.readable",
      "file": "src/_pytest/capture.py",
      "line": 229
    },
    {
      "id": "src/_pytest/capture.py:DontReadFromInput.seek",
      "type": "function",
      "name": "DontReadFromInput.seek",
      "file": "src/_pytest/capture.py",
      "line": 232
    },
    {
      "id": "src/_pytest/capture.py:DontReadFromInput.seekable",
      "type": "function",
      "name": "DontReadFromInput.seekable",
      "file": "src/_pytest/capture.py",
      "line": 235
    },
    {
      "id": "src/_pytest/capture.py:DontReadFromInput.tell",
      "type": "function",
      "name": "DontReadFromInput.tell",
      "file": "src/_pytest/capture.py",
      "line": 238
    },
    {
      "id": "src/_pytest/capture.py:DontReadFromInput.truncate",
      "type": "function",
      "name": "DontReadFromInput.truncate",
      "file": "src/_pytest/capture.py",
      "line": 241
    },
    {
      "id": "src/_pytest/capture.py:DontReadFromInput.write",
      "type": "function",
      "name": "DontReadFromInput.write",
      "file": "src/_pytest/capture.py",
      "line": 244
    },
    {
      "id": "src/_pytest/capture.py:DontReadFromInput.writelines",
      "type": "function",
      "name": "DontReadFromInput.writelines",
      "file": "src/_pytest/capture.py",
      "line": 247
    },
    {
      "id": "src/_pytest/capture.py:DontReadFromInput.writable",
      "type": "function",
      "name": "DontReadFromInput.writable",
      "file": "src/_pytest/capture.py",
      "line": 250
    },
    {
      "id": "src/_pytest/capture.py:DontReadFromInput.__enter__",
      "type": "function",
      "name": "DontReadFromInput.__enter__",
      "file": "src/_pytest/capture.py",
      "line": 253
    },
    {
      "id": "src/_pytest/capture.py:DontReadFromInput.__exit__",
      "type": "function",
      "name": "DontReadFromInput.__exit__",
      "file": "src/_pytest/capture.py",
      "line": 256
    },
    {
      "id": "src/_pytest/capture.py:DontReadFromInput.buffer",
      "type": "function",
      "name": "DontReadFromInput.buffer",
      "file": "src/_pytest/capture.py",
      "line": 265
    },
    {
      "id": "src/_pytest/capture.py:CaptureBase",
      "type": "class",
      "name": "CaptureBase",
      "file": "src/_pytest/capture.py",
      "line": 273
    },
    {
      "id": "src/_pytest/capture.py:CaptureBase.start",
      "type": "function",
      "name": "CaptureBase.start",
      "file": "src/_pytest/capture.py",
      "line": 281
    },
    {
      "id": "src/_pytest/capture.py:CaptureBase.done",
      "type": "function",
      "name": "CaptureBase.done",
      "file": "src/_pytest/capture.py",
      "line": 285
    },
    {
      "id": "src/_pytest/capture.py:CaptureBase.suspend",
      "type": "function",
      "name": "CaptureBase.suspend",
      "file": "src/_pytest/capture.py",
      "line": 289
    },
    {
      "id": "src/_pytest/capture.py:CaptureBase.resume",
      "type": "function",
      "name": "CaptureBase.resume",
      "file": "src/_pytest/capture.py",
      "line": 293
    },
    {
      "id": "src/_pytest/capture.py:CaptureBase.writeorg",
      "type": "function",
      "name": "CaptureBase.writeorg",
      "file": "src/_pytest/capture.py",
      "line": 297
    },
    {
      "id": "src/_pytest/capture.py:CaptureBase.snap",
      "type": "function",
      "name": "CaptureBase.snap",
      "file": "src/_pytest/capture.py",
      "line": 301
    },
    {
      "id": "src/_pytest/capture.py:NoCapture",
      "type": "class",
      "name": "NoCapture",
      "file": "src/_pytest/capture.py",
      "line": 308
    },
    {
      "id": "src/_pytest/capture.py:NoCapture.start",
      "type": "function",
      "name": "NoCapture.start",
      "file": "src/_pytest/capture.py",
      "line": 314
    },
    {
      "id": "src/_pytest/capture.py:NoCapture.done",
      "type": "function",
      "name": "NoCapture.done",
      "file": "src/_pytest/capture.py",
      "line": 317
    },
    {
      "id": "src/_pytest/capture.py:NoCapture.suspend",
      "type": "function",
      "name": "NoCapture.suspend",
      "file": "src/_pytest/capture.py",
      "line": 320
    },
    {
      "id": "src/_pytest/capture.py:NoCapture.resume",
      "type": "function",
      "name": "NoCapture.resume",
      "file": "src/_pytest/capture.py",
      "line": 323
    },
    {
      "id": "src/_pytest/capture.py:NoCapture.snap",
      "type": "function",
      "name": "NoCapture.snap",
      "file": "src/_pytest/capture.py",
      "line": 326
    },
    {
      "id": "src/_pytest/capture.py:NoCapture.writeorg",
      "type": "function",
      "name": "NoCapture.writeorg",
      "file": "src/_pytest/capture.py",
      "line": 329
    },
    {
      "id": "src/_pytest/capture.py:SysCaptureBase",
      "type": "class",
      "name": "SysCaptureBase",
      "file": "src/_pytest/capture.py",
      "line": 333
    },
    {
      "id": "src/_pytest/capture.py:SysCaptureBase.repr",
      "type": "function",
      "name": "SysCaptureBase.repr",
      "file": "src/_pytest/capture.py",
      "line": 348
    },
    {
      "id": "src/_pytest/capture.py:SysCaptureBase.__repr__",
      "type": "function",
      "name": "SysCaptureBase.__repr__",
      "file": "src/_pytest/capture.py",
      "line": 357
    },
    {
      "id": "src/_pytest/capture.py:SysCaptureBase._assert_state",
      "type": "function",
      "name": "SysCaptureBase._assert_state",
      "file": "src/_pytest/capture.py",
      "line": 366
    },
    {
      "id": "src/_pytest/capture.py:SysCaptureBase.start",
      "type": "function",
      "name": "SysCaptureBase.start",
      "file": "src/_pytest/capture.py",
      "line": 373
    },
    {
      "id": "src/_pytest/capture.py:SysCaptureBase.done",
      "type": "function",
      "name": "SysCaptureBase.done",
      "file": "src/_pytest/capture.py",
      "line": 378
    },
    {
      "id": "src/_pytest/capture.py:SysCaptureBase.suspend",
      "type": "function",
      "name": "SysCaptureBase.suspend",
      "file": "src/_pytest/capture.py",
      "line": 387
    },
    {
      "id": "src/_pytest/capture.py:SysCaptureBase.resume",
      "type": "function",
      "name": "SysCaptureBase.resume",
      "file": "src/_pytest/capture.py",
      "line": 392
    },
    {
      "id": "src/_pytest/capture.py:SysCaptureBinary",
      "type": "class",
      "name": "SysCaptureBinary",
      "file": "src/_pytest/capture.py",
      "line": 400
    },
    {
      "id": "src/_pytest/capture.py:SysCaptureBinary.snap",
      "type": "function",
      "name": "SysCaptureBinary.snap",
      "file": "src/_pytest/capture.py",
      "line": 403
    },
    {
      "id": "src/_pytest/capture.py:SysCaptureBinary.writeorg",
      "type": "function",
      "name": "SysCaptureBinary.writeorg",
      "file": "src/_pytest/capture.py",
      "line": 411
    },
    {
      "id": "src/_pytest/capture.py:SysCapture",
      "type": "class",
      "name": "SysCapture",
      "file": "src/_pytest/capture.py",
      "line": 418
    },
    {
      "id": "src/_pytest/capture.py:SysCapture.snap",
      "type": "function",
      "name": "SysCapture.snap",
      "file": "src/_pytest/capture.py",
      "line": 421
    },
    {
      "id": "src/_pytest/capture.py:SysCapture.writeorg",
      "type": "function",
      "name": "SysCapture.writeorg",
      "file": "src/_pytest/capture.py",
      "line": 429
    },
    {
      "id": "src/_pytest/capture.py:FDCaptureBase",
      "type": "class",
      "name": "FDCaptureBase",
      "file": "src/_pytest/capture.py",
      "line": 435
    },
    {
      "id": "src/_pytest/capture.py:FDCaptureBase.__repr__",
      "type": "function",
      "name": "FDCaptureBase.__repr__",
      "file": "src/_pytest/capture.py",
      "line": 477
    },
    {
      "id": "src/_pytest/capture.py:FDCaptureBase._assert_state",
      "type": "function",
      "name": "FDCaptureBase._assert_state",
      "file": "src/_pytest/capture.py",
      "line": 486
    },
    {
      "id": "src/_pytest/capture.py:FDCaptureBase.start",
      "type": "function",
      "name": "FDCaptureBase.start",
      "file": "src/_pytest/capture.py",
      "line": 493
    },
    {
      "id": "src/_pytest/capture.py:FDCaptureBase.done",
      "type": "function",
      "name": "FDCaptureBase.done",
      "file": "src/_pytest/capture.py",
      "line": 500
    },
    {
      "id": "src/_pytest/capture.py:FDCaptureBase.suspend",
      "type": "function",
      "name": "FDCaptureBase.suspend",
      "file": "src/_pytest/capture.py",
      "line": 516
    },
    {
      "id": "src/_pytest/capture.py:FDCaptureBase.resume",
      "type": "function",
      "name": "FDCaptureBase.resume",
      "file": "src/_pytest/capture.py",
      "line": 524
    },
    {
      "id": "src/_pytest/capture.py:FDCaptureBinary",
      "type": "class",
      "name": "FDCaptureBinary",
      "file": "src/_pytest/capture.py",
      "line": 533
    },
    {
      "id": "src/_pytest/capture.py:FDCaptureBinary.snap",
      "type": "function",
      "name": "FDCaptureBinary.snap",
      "file": "src/_pytest/capture.py",
      "line": 541
    },
    {
      "id": "src/_pytest/capture.py:FDCaptureBinary.writeorg",
      "type": "function",
      "name": "FDCaptureBinary.writeorg",
      "file": "src/_pytest/capture.py",
      "line": 549
    },
    {
      "id": "src/_pytest/capture.py:FDCapture",
      "type": "class",
      "name": "FDCapture",
      "file": "src/_pytest/capture.py",
      "line": 555
    },
    {
      "id": "src/_pytest/capture.py:FDCapture.snap",
      "type": "function",
      "name": "FDCapture.snap",
      "file": "src/_pytest/capture.py",
      "line": 563
    },
    {
      "id": "src/_pytest/capture.py:FDCapture.writeorg",
      "type": "function",
      "name": "FDCapture.writeorg",
      "file": "src/_pytest/capture.py",
      "line": 571
    },
    {
      "id": "src/_pytest/capture.py:CaptureResult",
      "type": "class",
      "name": "CaptureResult",
      "file": "src/_pytest/capture.py",
      "line": 593
    },
    {
      "id": "src/_pytest/capture.py:MultiCapture",
      "type": "class",
      "name": "MultiCapture",
      "file": "src/_pytest/capture.py",
      "line": 601
    },
    {
      "id": "src/_pytest/capture.py:MultiCapture.__repr__",
      "type": "function",
      "name": "MultiCapture.__repr__",
      "file": "src/_pytest/capture.py",
      "line": 615
    },
    {
      "id": "src/_pytest/capture.py:MultiCapture.start_capturing",
      "type": "function",
      "name": "MultiCapture.start_capturing",
      "file": "src/_pytest/capture.py",
      "line": 624
    },
    {
      "id": "src/_pytest/capture.py:MultiCapture.pop_outerr_to_orig",
      "type": "function",
      "name": "MultiCapture.pop_outerr_to_orig",
      "file": "src/_pytest/capture.py",
      "line": 633
    },
    {
      "id": "src/_pytest/capture.py:MultiCapture.suspend_capturing",
      "type": "function",
      "name": "MultiCapture.suspend_capturing",
      "file": "src/_pytest/capture.py",
      "line": 644
    },
    {
      "id": "src/_pytest/capture.py:MultiCapture.resume_capturing",
      "type": "function",
      "name": "MultiCapture.resume_capturing",
      "file": "src/_pytest/capture.py",
      "line": 654
    },
    {
      "id": "src/_pytest/capture.py:MultiCapture.stop_capturing",
      "type": "function",
      "name": "MultiCapture.stop_capturing",
      "file": "src/_pytest/capture.py",
      "line": 665
    },
    {
      "id": "src/_pytest/capture.py:MultiCapture.is_started",
      "type": "function",
      "name": "MultiCapture.is_started",
      "file": "src/_pytest/capture.py",
      "line": 677
    },
    {
      "id": "src/_pytest/capture.py:MultiCapture.readouterr",
      "type": "function",
      "name": "MultiCapture.readouterr",
      "file": "src/_pytest/capture.py",
      "line": 681
    },
    {
      "id": "src/_pytest/capture.py:_get_multicapture",
      "type": "function",
      "name": "_get_multicapture",
      "file": "src/_pytest/capture.py",
      "line": 688
    },
    {
      "id": "src/_pytest/capture.py:CaptureManager",
      "type": "class",
      "name": "CaptureManager",
      "file": "src/_pytest/capture.py",
      "line": 705
    },
    {
      "id": "src/_pytest/capture.py:CaptureManager.__repr__",
      "type": "function",
      "name": "CaptureManager.__repr__",
      "file": "src/_pytest/capture.py",
      "line": 729
    },
    {
      "id": "src/_pytest/capture.py:CaptureManager.is_capturing",
      "type": "function",
      "name": "CaptureManager.is_capturing",
      "file": "src/_pytest/capture.py",
      "line": 734
    },
    {
      "id": "src/_pytest/capture.py:CaptureManager.is_globally_capturing",
      "type": "function",
      "name": "CaptureManager.is_globally_capturing",
      "file": "src/_pytest/capture.py",
      "line": 743
    },
    {
      "id": "src/_pytest/capture.py:CaptureManager.start_global_capturing",
      "type": "function",
      "name": "CaptureManager.start_global_capturing",
      "file": "src/_pytest/capture.py",
      "line": 746
    },
    {
      "id": "src/_pytest/capture.py:CaptureManager.stop_global_capturing",
      "type": "function",
      "name": "CaptureManager.stop_global_capturing",
      "file": "src/_pytest/capture.py",
      "line": 751
    },
    {
      "id": "src/_pytest/capture.py:CaptureManager.resume_global_capture",
      "type": "function",
      "name": "CaptureManager.resume_global_capture",
      "file": "src/_pytest/capture.py",
      "line": 757
    },
    {
      "id": "src/_pytest/capture.py:CaptureManager.suspend_global_capture",
      "type": "function",
      "name": "CaptureManager.suspend_global_capture",
      "file": "src/_pytest/capture.py",
      "line": 763
    },
    {
      "id": "src/_pytest/capture.py:CaptureManager.suspend",
      "type": "function",
      "name": "CaptureManager.suspend",
      "file": "src/_pytest/capture.py",
      "line": 767
    },
    {
      "id": "src/_pytest/capture.py:CaptureManager.resume",
      "type": "function",
      "name": "CaptureManager.resume",
      "file": "src/_pytest/capture.py",
      "line": 772
    },
    {
      "id": "src/_pytest/capture.py:CaptureManager.read_global_capture",
      "type": "function",
      "name": "CaptureManager.read_global_capture",
      "file": "src/_pytest/capture.py",
      "line": 776
    },
    {
      "id": "src/_pytest/capture.py:CaptureManager.set_fixture",
      "type": "function",
      "name": "CaptureManager.set_fixture",
      "file": "src/_pytest/capture.py",
      "line": 782
    },
    {
      "id": "src/_pytest/capture.py:CaptureManager.unset_fixture",
      "type": "function",
      "name": "CaptureManager.unset_fixture",
      "file": "src/_pytest/capture.py",
      "line": 793
    },
    {
      "id": "src/_pytest/capture.py:CaptureManager.activate_fixture",
      "type": "function",
      "name": "CaptureManager.activate_fixture",
      "file": "src/_pytest/capture.py",
      "line": 796
    },
    {
      "id": "src/_pytest/capture.py:CaptureManager.deactivate_fixture",
      "type": "function",
      "name": "CaptureManager.deactivate_fixture",
      "file": "src/_pytest/capture.py",
      "line": 802
    },
    {
      "id": "src/_pytest/capture.py:CaptureManager.suspend_fixture",
      "type": "function",
      "name": "CaptureManager.suspend_fixture",
      "file": "src/_pytest/capture.py",
      "line": 807
    },
    {
      "id": "src/_pytest/capture.py:CaptureManager.resume_fixture",
      "type": "function",
      "name": "CaptureManager.resume_fixture",
      "file": "src/_pytest/capture.py",
      "line": 811
    },
    {
      "id": "src/_pytest/capture.py:CaptureManager.global_and_fixture_disabled",
      "type": "function",
      "name": "CaptureManager.global_and_fixture_disabled",
      "file": "src/_pytest/capture.py",
      "line": 818
    },
    {
      "id": "src/_pytest/capture.py:CaptureManager.item_capture",
      "type": "function",
      "name": "CaptureManager.item_capture",
      "file": "src/_pytest/capture.py",
      "line": 835
    },
    {
      "id": "src/_pytest/capture.py:CaptureManager.pytest_make_collect_report",
      "type": "function",
      "name": "CaptureManager.pytest_make_collect_report",
      "file": "src/_pytest/capture.py",
      "line": 851
    },
    {
      "id": "src/_pytest/capture.py:CaptureManager.pytest_runtest_setup",
      "type": "function",
      "name": "CaptureManager.pytest_runtest_setup",
      "file": "src/_pytest/capture.py",
      "line": 866
    },
    {
      "id": "src/_pytest/capture.py:CaptureManager.pytest_runtest_call",
      "type": "function",
      "name": "CaptureManager.pytest_runtest_call",
      "file": "src/_pytest/capture.py",
      "line": 871
    },
    {
      "id": "src/_pytest/capture.py:CaptureManager.pytest_runtest_teardown",
      "type": "function",
      "name": "CaptureManager.pytest_runtest_teardown",
      "file": "src/_pytest/capture.py",
      "line": 876
    },
    {
      "id": "src/_pytest/capture.py:CaptureManager.pytest_keyboard_interrupt",
      "type": "function",
      "name": "CaptureManager.pytest_keyboard_interrupt",
      "file": "src/_pytest/capture.py",
      "line": 881
    },
    {
      "id": "src/_pytest/capture.py:CaptureManager.pytest_internalerror",
      "type": "function",
      "name": "CaptureManager.pytest_internalerror",
      "file": "src/_pytest/capture.py",
      "line": 885
    },
    {
      "id": "src/_pytest/capture.py:CaptureFixture",
      "type": "class",
      "name": "CaptureFixture",
      "file": "src/_pytest/capture.py",
      "line": 889
    },
    {
      "id": "src/_pytest/capture.py:CaptureFixture._start",
      "type": "function",
      "name": "CaptureFixture._start",
      "file": "src/_pytest/capture.py",
      "line": 907
    },
    {
      "id": "src/_pytest/capture.py:CaptureFixture.close",
      "type": "function",
      "name": "CaptureFixture.close",
      "file": "src/_pytest/capture.py",
      "line": 916
    },
    {
      "id": "src/_pytest/capture.py:CaptureFixture.readouterr",
      "type": "function",
      "name": "CaptureFixture.readouterr",
      "file": "src/_pytest/capture.py",
      "line": 924
    },
    {
      "id": "src/_pytest/capture.py:CaptureFixture._suspend",
      "type": "function",
      "name": "CaptureFixture._suspend",
      "file": "src/_pytest/capture.py",
      "line": 941
    },
    {
      "id": "src/_pytest/capture.py:CaptureFixture._resume",
      "type": "function",
      "name": "CaptureFixture._resume",
      "file": "src/_pytest/capture.py",
      "line": 946
    },
    {
      "id": "src/_pytest/capture.py:CaptureFixture._is_started",
      "type": "function",
      "name": "CaptureFixture._is_started",
      "file": "src/_pytest/capture.py",
      "line": 951
    },
    {
      "id": "src/_pytest/capture.py:CaptureFixture.disabled",
      "type": "function",
      "name": "CaptureFixture.disabled",
      "file": "src/_pytest/capture.py",
      "line": 958
    },
    {
      "id": "src/_pytest/capture.py:capsys",
      "type": "function",
      "name": "capsys",
      "file": "src/_pytest/capture.py",
      "line": 971
    },
    {
      "id": "src/_pytest/capture.py:capsysbinary",
      "type": "function",
      "name": "capsysbinary",
      "file": "src/_pytest/capture.py",
      "line": 999
    },
    {
      "id": "src/_pytest/capture.py:capfd",
      "type": "function",
      "name": "capfd",
      "file": "src/_pytest/capture.py",
      "line": 1027
    },
    {
      "id": "src/_pytest/capture.py:capfdbinary",
      "type": "function",
      "name": "capfdbinary",
      "file": "src/_pytest/capture.py",
      "line": 1055
    },
    {
      "id": "src/_pytest/hookspec.py",
      "type": "file",
      "name": "hookspec.py",
      "file": "src/_pytest/hookspec.py",
      "line": 0
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_addhooks",
      "type": "function",
      "name": "pytest_addhooks",
      "file": "src/_pytest/hookspec.py",
      "line": 56
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_plugin_registered",
      "type": "function",
      "name": "pytest_plugin_registered",
      "file": "src/_pytest/hookspec.py",
      "line": 68
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_addoption",
      "type": "function",
      "name": "pytest_addoption",
      "file": "src/_pytest/hookspec.py",
      "line": 82
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_configure",
      "type": "function",
      "name": "pytest_configure",
      "file": "src/_pytest/hookspec.py",
      "line": 121
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_cmdline_parse",
      "type": "function",
      "name": "pytest_cmdline_parse",
      "file": "src/_pytest/hookspec.py",
      "line": 144
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_cmdline_preparse",
      "type": "function",
      "name": "pytest_cmdline_preparse",
      "file": "src/_pytest/hookspec.py",
      "line": 163
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_cmdline_main",
      "type": "function",
      "name": "pytest_cmdline_main",
      "file": "src/_pytest/hookspec.py",
      "line": 178
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_load_initial_conftests",
      "type": "function",
      "name": "pytest_load_initial_conftests",
      "file": "src/_pytest/hookspec.py",
      "line": 189
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_collection",
      "type": "function",
      "name": "pytest_collection",
      "file": "src/_pytest/hookspec.py",
      "line": 210
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_collection_modifyitems",
      "type": "function",
      "name": "pytest_collection_modifyitems",
      "file": "src/_pytest/hookspec.py",
      "line": 246
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_collection_finish",
      "type": "function",
      "name": "pytest_collection_finish",
      "file": "src/_pytest/hookspec.py",
      "line": 258
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_ignore_collect",
      "type": "function",
      "name": "pytest_ignore_collect",
      "file": "src/_pytest/hookspec.py",
      "line": 266
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_collect_file",
      "type": "function",
      "name": "pytest_collect_file",
      "file": "src/_pytest/hookspec.py",
      "line": 287
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_collectstart",
      "type": "function",
      "name": "pytest_collectstart",
      "file": "src/_pytest/hookspec.py",
      "line": 307
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_itemcollected",
      "type": "function",
      "name": "pytest_itemcollected",
      "file": "src/_pytest/hookspec.py",
      "line": 315
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_collectreport",
      "type": "function",
      "name": "pytest_collectreport",
      "file": "src/_pytest/hookspec.py",
      "line": 323
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_deselected",
      "type": "function",
      "name": "pytest_deselected",
      "file": "src/_pytest/hookspec.py",
      "line": 331
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_make_collect_report",
      "type": "function",
      "name": "pytest_make_collect_report",
      "file": "src/_pytest/hookspec.py",
      "line": 342
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_pycollect_makemodule",
      "type": "function",
      "name": "pytest_pycollect_makemodule",
      "file": "src/_pytest/hookspec.py",
      "line": 359
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_pycollect_makeitem",
      "type": "function",
      "name": "pytest_pycollect_makeitem",
      "file": "src/_pytest/hookspec.py",
      "line": 382
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_pyfunc_call",
      "type": "function",
      "name": "pytest_pyfunc_call",
      "file": "src/_pytest/hookspec.py",
      "line": 401
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_generate_tests",
      "type": "function",
      "name": "pytest_generate_tests",
      "file": "src/_pytest/hookspec.py",
      "line": 411
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_make_parametrize_id",
      "type": "function",
      "name": "pytest_make_parametrize_id",
      "file": "src/_pytest/hookspec.py",
      "line": 420
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_runtestloop",
      "type": "function",
      "name": "pytest_runtestloop",
      "file": "src/_pytest/hookspec.py",
      "line": 443
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_runtest_protocol",
      "type": "function",
      "name": "pytest_runtest_protocol",
      "file": "src/_pytest/hookspec.py",
      "line": 464
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_runtest_logstart",
      "type": "function",
      "name": "pytest_runtest_logstart",
      "file": "src/_pytest/hookspec.py",
      "line": 501
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_runtest_logfinish",
      "type": "function",
      "name": "pytest_runtest_logfinish",
      "file": "src/_pytest/hookspec.py",
      "line": 515
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_runtest_setup",
      "type": "function",
      "name": "pytest_runtest_setup",
      "file": "src/_pytest/hookspec.py",
      "line": 529
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_runtest_call",
      "type": "function",
      "name": "pytest_runtest_call",
      "file": "src/_pytest/hookspec.py",
      "line": 542
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_runtest_teardown",
      "type": "function",
      "name": "pytest_runtest_teardown",
      "file": "src/_pytest/hookspec.py",
      "line": 552
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_runtest_makereport",
      "type": "function",
      "name": "pytest_runtest_makereport",
      "file": "src/_pytest/hookspec.py",
      "line": 571
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_runtest_logreport",
      "type": "function",
      "name": "pytest_runtest_logreport",
      "file": "src/_pytest/hookspec.py",
      "line": 586
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_report_to_serializable",
      "type": "function",
      "name": "pytest_report_to_serializable",
      "file": "src/_pytest/hookspec.py",
      "line": 595
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_report_from_serializable",
      "type": "function",
      "name": "pytest_report_from_serializable",
      "file": "src/_pytest/hookspec.py",
      "line": 608
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_fixture_setup",
      "type": "function",
      "name": "pytest_fixture_setup",
      "file": "src/_pytest/hookspec.py",
      "line": 625
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_fixture_post_finalizer",
      "type": "function",
      "name": "pytest_fixture_post_finalizer",
      "file": "src/_pytest/hookspec.py",
      "line": 646
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_sessionstart",
      "type": "function",
      "name": "pytest_sessionstart",
      "file": "src/_pytest/hookspec.py",
      "line": 665
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_sessionfinish",
      "type": "function",
      "name": "pytest_sessionfinish",
      "file": "src/_pytest/hookspec.py",
      "line": 673
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_unconfigure",
      "type": "function",
      "name": "pytest_unconfigure",
      "file": "src/_pytest/hookspec.py",
      "line": 684
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_assertrepr_compare",
      "type": "function",
      "name": "pytest_assertrepr_compare",
      "file": "src/_pytest/hookspec.py",
      "line": 696
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_assertion_pass",
      "type": "function",
      "name": "pytest_assertion_pass",
      "file": "src/_pytest/hookspec.py",
      "line": 713
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_report_header",
      "type": "function",
      "name": "pytest_report_header",
      "file": "src/_pytest/hookspec.py",
      "line": 746
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_report_collectionfinish",
      "type": "function",
      "name": "pytest_report_collectionfinish",
      "file": "src/_pytest/hookspec.py",
      "line": 775
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_report_teststatus",
      "type": "function",
      "name": "pytest_report_teststatus",
      "file": "src/_pytest/hookspec.py",
      "line": 808
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_terminal_summary",
      "type": "function",
      "name": "pytest_terminal_summary",
      "file": "src/_pytest/hookspec.py",
      "line": 835
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_warning_recorded",
      "type": "function",
      "name": "pytest_warning_recorded",
      "file": "src/_pytest/hookspec.py",
      "line": 852
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_markeval_namespace",
      "type": "function",
      "name": "pytest_markeval_namespace",
      "file": "src/_pytest/hookspec.py",
      "line": 888
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_internalerror",
      "type": "function",
      "name": "pytest_internalerror",
      "file": "src/_pytest/hookspec.py",
      "line": 911
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_keyboard_interrupt",
      "type": "function",
      "name": "pytest_keyboard_interrupt",
      "file": "src/_pytest/hookspec.py",
      "line": 925
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_exception_interact",
      "type": "function",
      "name": "pytest_exception_interact",
      "file": "src/_pytest/hookspec.py",
      "line": 934
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_enter_pdb",
      "type": "function",
      "name": "pytest_enter_pdb",
      "file": "src/_pytest/hookspec.py",
      "line": 960
    },
    {
      "id": "src/_pytest/hookspec.py:pytest_leave_pdb",
      "type": "function",
      "name": "pytest_leave_pdb",
      "file": "src/_pytest/hookspec.py",
      "line": 971
    },
    {
      "id": "src/_pytest/timing.py",
      "type": "file",
      "name": "timing.py",
      "file": "src/_pytest/timing.py",
      "line": 0
    },
    {
      "id": "src/_pytest/pytester.py",
      "type": "file",
      "name": "pytester.py",
      "file": "src/_pytest/pytester.py",
      "line": 0
    },
    {
      "id": "src/_pytest/pytester.py:pytest_addoption",
      "type": "function",
      "name": "pytest_addoption",
      "file": "src/_pytest/pytester.py",
      "line": 85
    },
    {
      "id": "src/_pytest/pytester.py:pytest_configure",
      "type": "function",
      "name": "pytest_configure",
      "file": "src/_pytest/pytester.py",
      "line": 110
    },
    {
      "id": "src/_pytest/pytester.py:LsofFdLeakChecker",
      "type": "class",
      "name": "LsofFdLeakChecker",
      "file": "src/_pytest/pytester.py",
      "line": 123
    },
    {
      "id": "src/_pytest/pytester.py:LsofFdLeakChecker.get_open_files",
      "type": "function",
      "name": "LsofFdLeakChecker.get_open_files",
      "file": "src/_pytest/pytester.py",
      "line": 124
    },
    {
      "id": "src/_pytest/pytester.py:LsofFdLeakChecker.get_open_files.isopen",
      "type": "function",
      "name": "LsofFdLeakChecker.get_open_files.isopen",
      "file": "src/_pytest/pytester.py",
      "line": 134
    },
    {
      "id": "src/_pytest/pytester.py:LsofFdLeakChecker.matching_platform",
      "type": "function",
      "name": "LsofFdLeakChecker.matching_platform",
      "file": "src/_pytest/pytester.py",
      "line": 156
    },
    {
      "id": "src/_pytest/pytester.py:LsofFdLeakChecker.pytest_runtest_protocol",
      "type": "function",
      "name": "LsofFdLeakChecker.pytest_runtest_protocol",
      "file": "src/_pytest/pytester.py",
      "line": 165
    },
    {
      "id": "src/_pytest/pytester.py:_pytest",
      "type": "function",
      "name": "_pytest",
      "file": "src/_pytest/pytester.py",
      "line": 193
    },
    {
      "id": "src/_pytest/pytester.py:PytestArg",
      "type": "class",
      "name": "PytestArg",
      "file": "src/_pytest/pytester.py",
      "line": 200
    },
    {
      "id": "src/_pytest/pytester.py:PytestArg.gethookrecorder",
      "type": "function",
      "name": "PytestArg.gethookrecorder",
      "file": "src/_pytest/pytester.py",
      "line": 204
    },
    {
      "id": "src/_pytest/pytester.py:get_public_names",
      "type": "function",
      "name": "get_public_names",
      "file": "src/_pytest/pytester.py",
      "line": 210
    },
    {
      "id": "src/_pytest/pytester.py:RecordedHookCall",
      "type": "class",
      "name": "RecordedHookCall",
      "file": "src/_pytest/pytester.py",
      "line": 216
    },
    {
      "id": "src/_pytest/pytester.py:RecordedHookCall.__repr__",
      "type": "function",
      "name": "RecordedHookCall.__repr__",
      "file": "src/_pytest/pytester.py",
      "line": 233
    },
    {
      "id": "src/_pytest/pytester.py:RecordedHookCall.__getattr__",
      "type": "function",
      "name": "RecordedHookCall.__getattr__",
      "file": "src/_pytest/pytester.py",
      "line": 240
    },
    {
      "id": "src/_pytest/pytester.py:HookRecorder",
      "type": "class",
      "name": "HookRecorder",
      "file": "src/_pytest/pytester.py",
      "line": 245
    },
    {
      "id": "src/_pytest/pytester.py:HookRecorder.finish_recording",
      "type": "function",
      "name": "HookRecorder.finish_recording",
      "file": "src/_pytest/pytester.py",
      "line": 271
    },
    {
      "id": "src/_pytest/pytester.py:HookRecorder.getcalls",
      "type": "function",
      "name": "HookRecorder.getcalls",
      "file": "src/_pytest/pytester.py",
      "line": 274
    },
    {
      "id": "src/_pytest/pytester.py:HookRecorder.assert_contains",
      "type": "function",
      "name": "HookRecorder.assert_contains",
      "file": "src/_pytest/pytester.py",
      "line": 280
    },
    {
      "id": "src/_pytest/pytester.py:HookRecorder.popcall",
      "type": "function",
      "name": "HookRecorder.popcall",
      "file": "src/_pytest/pytester.py",
      "line": 301
    },
    {
      "id": "src/_pytest/pytester.py:HookRecorder.getcall",
      "type": "function",
      "name": "HookRecorder.getcall",
      "file": "src/_pytest/pytester.py",
      "line": 311
    },
    {
      "id": "src/_pytest/pytester.py:HookRecorder.getreports",
      "type": "function",
      "name": "HookRecorder.getreports",
      "file": "src/_pytest/pytester.py",
      "line": 342
    },
    {
      "id": "src/_pytest/pytester.py:HookRecorder.matchreport",
      "type": "function",
      "name": "HookRecorder.matchreport",
      "file": "src/_pytest/pytester.py",
      "line": 351
    },
    {
      "id": "src/_pytest/pytester.py:HookRecorder.getfailures",
      "type": "function",
      "name": "HookRecorder.getfailures",
      "file": "src/_pytest/pytester.py",
      "line": 407
    },
    {
      "id": "src/_pytest/pytester.py:HookRecorder.getfailedcollections",
      "type": "function",
      "name": "HookRecorder.getfailedcollections",
      "file": "src/_pytest/pytester.py",
      "line": 416
    },
    {
      "id": "src/_pytest/pytester.py:HookRecorder.listoutcomes",
      "type": "function",
      "name": "HookRecorder.listoutcomes",
      "file": "src/_pytest/pytester.py",
      "line": 419
    },
    {
      "id": "src/_pytest/pytester.py:HookRecorder.countoutcomes",
      "type": "function",
      "name": "HookRecorder.countoutcomes",
      "file": "src/_pytest/pytester.py",
      "line": 443
    },
    {
      "id": "src/_pytest/pytester.py:HookRecorder.assertoutcome",
      "type": "function",
      "name": "HookRecorder.assertoutcome",
      "file": "src/_pytest/pytester.py",
      "line": 446
    },
    {
      "id": "src/_pytest/pytester.py:HookRecorder.clear",
      "type": "function",
      "name": "HookRecorder.clear",
      "file": "src/_pytest/pytester.py",
      "line": 458
    },
    {
      "id": "src/_pytest/pytester.py:linecomp",
      "type": "function",
      "name": "linecomp",
      "file": "src/_pytest/pytester.py",
      "line": 463
    },
    {
      "id": "src/_pytest/pytester.py:LineMatcher_fixture",
      "type": "function",
      "name": "LineMatcher_fixture",
      "file": "src/_pytest/pytester.py",
      "line": 470
    },
    {
      "id": "src/_pytest/pytester.py:pytester",
      "type": "function",
      "name": "pytester",
      "file": "src/_pytest/pytester.py",
      "line": 480
    },
    {
      "id": "src/_pytest/pytester.py:_sys_snapshot",
      "type": "function",
      "name": "_sys_snapshot",
      "file": "src/_pytest/pytester.py",
      "line": 497
    },
    {
      "id": "src/_pytest/pytester.py:_config_for_test",
      "type": "function",
      "name": "_config_for_test",
      "file": "src/_pytest/pytester.py",
      "line": 506
    },
    {
      "id": "src/_pytest/pytester.py:RunResult",
      "type": "class",
      "name": "RunResult",
      "file": "src/_pytest/pytester.py",
      "line": 521
    },
    {
      "id": "src/_pytest/pytester.py:RunResult.__repr__",
      "type": "function",
      "name": "RunResult.__repr__",
      "file": "src/_pytest/pytester.py",
      "line": 551
    },
    {
      "id": "src/_pytest/pytester.py:RunResult.parseoutcomes",
      "type": "function",
      "name": "RunResult.parseoutcomes",
      "file": "src/_pytest/pytester.py",
      "line": 557
    },
    {
      "id": "src/_pytest/pytester.py:RunResult.parse_summary_nouns",
      "type": "function",
      "name": "RunResult.parse_summary_nouns",
      "file": "src/_pytest/pytester.py",
      "line": 570
    },
    {
      "id": "src/_pytest/pytester.py:RunResult.assert_outcomes",
      "type": "function",
      "name": "RunResult.assert_outcomes",
      "file": "src/_pytest/pytester.py",
      "line": 593
    },
    {
      "id": "src/_pytest/pytester.py:CwdSnapshot",
      "type": "class",
      "name": "CwdSnapshot",
      "file": "src/_pytest/pytester.py",
      "line": 627
    },
    {
      "id": "src/_pytest/pytester.py:CwdSnapshot.restore",
      "type": "function",
      "name": "CwdSnapshot.restore",
      "file": "src/_pytest/pytester.py",
      "line": 631
    },
    {
      "id": "src/_pytest/pytester.py:SysModulesSnapshot",
      "type": "class",
      "name": "SysModulesSnapshot",
      "file": "src/_pytest/pytester.py",
      "line": 635
    },
    {
      "id": "src/_pytest/pytester.py:SysModulesSnapshot.restore",
      "type": "function",
      "name": "SysModulesSnapshot.restore",
      "file": "src/_pytest/pytester.py",
      "line": 640
    },
    {
      "id": "src/_pytest/pytester.py:SysPathsSnapshot",
      "type": "class",
      "name": "SysPathsSnapshot",
      "file": "src/_pytest/pytester.py",
      "line": 649
    },
    {
      "id": "src/_pytest/pytester.py:SysPathsSnapshot.restore",
      "type": "function",
      "name": "SysPathsSnapshot.restore",
      "file": "src/_pytest/pytester.py",
      "line": 653
    },
    {
      "id": "src/_pytest/pytester.py:Pytester",
      "type": "class",
      "name": "Pytester",
      "file": "src/_pytest/pytester.py",
      "line": 658
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.TimeoutExpired",
      "type": "class",
      "name": "Pytester.TimeoutExpired",
      "file": "src/_pytest/pytester.py",
      "line": 671
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.path",
      "type": "function",
      "name": "Pytester.path",
      "file": "src/_pytest/pytester.py",
      "line": 720
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.__repr__",
      "type": "function",
      "name": "Pytester.__repr__",
      "file": "src/_pytest/pytester.py",
      "line": 724
    },
    {
      "id": "src/_pytest/pytester.py:Pytester._finalize",
      "type": "function",
      "name": "Pytester._finalize",
      "file": "src/_pytest/pytester.py",
      "line": 727
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.__take_sys_modules_snapshot",
      "type": "function",
      "name": "Pytester.__take_sys_modules_snapshot",
      "file": "src/_pytest/pytester.py",
      "line": 739
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.__take_sys_modules_snapshot.preserve_module",
      "type": "function",
      "name": "Pytester.__take_sys_modules_snapshot.preserve_module",
      "file": "src/_pytest/pytester.py",
      "line": 746
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.make_hook_recorder",
      "type": "function",
      "name": "Pytester.make_hook_recorder",
      "file": "src/_pytest/pytester.py",
      "line": 751
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.chdir",
      "type": "function",
      "name": "Pytester.chdir",
      "file": "src/_pytest/pytester.py",
      "line": 757
    },
    {
      "id": "src/_pytest/pytester.py:Pytester._makefile",
      "type": "function",
      "name": "Pytester._makefile",
      "file": "src/_pytest/pytester.py",
      "line": 764
    },
    {
      "id": "src/_pytest/pytester.py:Pytester._makefile.to_text",
      "type": "function",
      "name": "Pytester._makefile.to_text",
      "file": "src/_pytest/pytester.py",
      "line": 778
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.makefile",
      "type": "function",
      "name": "Pytester.makefile",
      "file": "src/_pytest/pytester.py",
      "line": 798
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.makeconftest",
      "type": "function",
      "name": "Pytester.makeconftest",
      "file": "src/_pytest/pytester.py",
      "line": 830
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.makeini",
      "type": "function",
      "name": "Pytester.makeini",
      "file": "src/_pytest/pytester.py",
      "line": 838
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.getinicfg",
      "type": "function",
      "name": "Pytester.getinicfg",
      "file": "src/_pytest/pytester.py",
      "line": 846
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.makepyprojecttoml",
      "type": "function",
      "name": "Pytester.makepyprojecttoml",
      "file": "src/_pytest/pytester.py",
      "line": 851
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.makepyfile",
      "type": "function",
      "name": "Pytester.makepyfile",
      "file": "src/_pytest/pytester.py",
      "line": 861
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.maketxtfile",
      "type": "function",
      "name": "Pytester.maketxtfile",
      "file": "src/_pytest/pytester.py",
      "line": 881
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.syspathinsert",
      "type": "function",
      "name": "Pytester.syspathinsert",
      "file": "src/_pytest/pytester.py",
      "line": 901
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.mkdir",
      "type": "function",
      "name": "Pytester.mkdir",
      "file": "src/_pytest/pytester.py",
      "line": 917
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.mkpydir",
      "type": "function",
      "name": "Pytester.mkpydir",
      "file": "src/_pytest/pytester.py",
      "line": 929
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.copy_example",
      "type": "function",
      "name": "Pytester.copy_example",
      "file": "src/_pytest/pytester.py",
      "line": 940
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.getnode",
      "type": "function",
      "name": "Pytester.getnode",
      "file": "src/_pytest/pytester.py",
      "line": 985
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.getpathnode",
      "type": "function",
      "name": "Pytester.getpathnode",
      "file": "src/_pytest/pytester.py",
      "line": 1006
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.genitems",
      "type": "function",
      "name": "Pytester.genitems",
      "file": "src/_pytest/pytester.py",
      "line": 1028
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.runitem",
      "type": "function",
      "name": "Pytester.runitem",
      "file": "src/_pytest/pytester.py",
      "line": 1045
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.inline_runsource",
      "type": "function",
      "name": "Pytester.inline_runsource",
      "file": "src/_pytest/pytester.py",
      "line": 1060
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.inline_genitems",
      "type": "function",
      "name": "Pytester.inline_genitems",
      "file": "src/_pytest/pytester.py",
      "line": 1074
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.inline_run",
      "type": "function",
      "name": "Pytester.inline_run",
      "file": "src/_pytest/pytester.py",
      "line": 1085
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.inline_run.Collect",
      "type": "class",
      "name": "Pytester.inline_run.Collect",
      "file": "src/_pytest/pytester.py",
      "line": 1130
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.inline_run.Collect.pytest_configure",
      "type": "function",
      "name": "Pytester.inline_run.Collect.pytest_configure",
      "file": "src/_pytest/pytester.py",
      "line": 1131
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.inline_run.reprec",
      "type": "class",
      "name": "Pytester.inline_run.reprec",
      "file": "src/_pytest/pytester.py",
      "line": 1140
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.runpytest_inprocess",
      "type": "function",
      "name": "Pytester.runpytest_inprocess",
      "file": "src/_pytest/pytester.py",
      "line": 1156
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.runpytest_inprocess.reprec",
      "type": "class",
      "name": "Pytester.runpytest_inprocess.reprec",
      "file": "src/_pytest/pytester.py",
      "line": 1184
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.runpytest",
      "type": "function",
      "name": "Pytester.runpytest",
      "file": "src/_pytest/pytester.py",
      "line": 1200
    },
    {
      "id": "src/_pytest/pytester.py:Pytester._ensure_basetemp",
      "type": "function",
      "name": "Pytester._ensure_basetemp",
      "file": "src/_pytest/pytester.py",
      "line": 1212
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.parseconfig",
      "type": "function",
      "name": "Pytester.parseconfig",
      "file": "src/_pytest/pytester.py",
      "line": 1223
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.parseconfigure",
      "type": "function",
      "name": "Pytester.parseconfigure",
      "file": "src/_pytest/pytester.py",
      "line": 1247
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.getitem",
      "type": "function",
      "name": "Pytester.getitem",
      "file": "src/_pytest/pytester.py",
      "line": 1258
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.getitems",
      "type": "function",
      "name": "Pytester.getitems",
      "file": "src/_pytest/pytester.py",
      "line": 1282
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.getmodulecol",
      "type": "function",
      "name": "Pytester.getmodulecol",
      "file": "src/_pytest/pytester.py",
      "line": 1291
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.collect_by_name",
      "type": "function",
      "name": "Pytester.collect_by_name",
      "file": "src/_pytest/pytester.py",
      "line": 1325
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.popen",
      "type": "function",
      "name": "Pytester.popen",
      "file": "src/_pytest/pytester.py",
      "line": 1343
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.run",
      "type": "function",
      "name": "Pytester.run",
      "file": "src/_pytest/pytester.py",
      "line": 1381
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.run.handle_timeout",
      "type": "function",
      "name": "Pytester.run.handle_timeout",
      "file": "src/_pytest/pytester.py",
      "line": 1436
    },
    {
      "id": "src/_pytest/pytester.py:Pytester._dump_lines",
      "type": "function",
      "name": "Pytester._dump_lines",
      "file": "src/_pytest/pytester.py",
      "line": 1467
    },
    {
      "id": "src/_pytest/pytester.py:Pytester._getpytestargs",
      "type": "function",
      "name": "Pytester._getpytestargs",
      "file": "src/_pytest/pytester.py",
      "line": 1474
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.runpython",
      "type": "function",
      "name": "Pytester.runpython",
      "file": "src/_pytest/pytester.py",
      "line": 1477
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.runpython_c",
      "type": "function",
      "name": "Pytester.runpython_c",
      "file": "src/_pytest/pytester.py",
      "line": 1481
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.runpytest_subprocess",
      "type": "function",
      "name": "Pytester.runpytest_subprocess",
      "file": "src/_pytest/pytester.py",
      "line": 1485
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.spawn_pytest",
      "type": "function",
      "name": "Pytester.spawn_pytest",
      "file": "src/_pytest/pytester.py",
      "line": 1513
    },
    {
      "id": "src/_pytest/pytester.py:Pytester.spawn",
      "type": "function",
      "name": "Pytester.spawn",
      "file": "src/_pytest/pytester.py",
      "line": 1529
    },
    {
      "id": "src/_pytest/pytester.py:LineComp",
      "type": "class",
      "name": "LineComp",
      "file": "src/_pytest/pytester.py",
      "line": 1546
    },
    {
      "id": "src/_pytest/pytester.py:LineComp.assert_contains_lines",
      "type": "function",
      "name": "LineComp.assert_contains_lines",
      "file": "src/_pytest/pytester.py",
      "line": 1551
    },
    {
      "id": "src/_pytest/pytester.py:LineMatcher",
      "type": "class",
      "name": "LineMatcher",
      "file": "src/_pytest/pytester.py",
      "line": 1564
    },
    {
      "id": "src/_pytest/pytester.py:LineMatcher.__str__",
      "type": "function",
      "name": "LineMatcher.__str__",
      "file": "src/_pytest/pytester.py",
      "line": 1578
    },
    {
      "id": "src/_pytest/pytester.py:LineMatcher._getlines",
      "type": "function",
      "name": "LineMatcher._getlines",
      "file": "src/_pytest/pytester.py",
      "line": 1586
    },
    {
      "id": "src/_pytest/pytester.py:LineMatcher.fnmatch_lines_random",
      "type": "function",
      "name": "LineMatcher.fnmatch_lines_random",
      "file": "src/_pytest/pytester.py",
      "line": 1593
    },
    {
      "id": "src/_pytest/pytester.py:LineMatcher.re_match_lines_random",
      "type": "function",
      "name": "LineMatcher.re_match_lines_random",
      "file": "src/_pytest/pytester.py",
      "line": 1598
    },
    {
      "id": "src/_pytest/pytester.py:LineMatcher._match_lines_random",
      "type": "function",
      "name": "LineMatcher._match_lines_random",
      "file": "src/_pytest/pytester.py",
      "line": 1603
    },
    {
      "id": "src/_pytest/pytester.py:LineMatcher.get_lines_after",
      "type": "function",
      "name": "LineMatcher.get_lines_after",
      "file": "src/_pytest/pytester.py",
      "line": 1618
    },
    {
      "id": "src/_pytest/pytester.py:LineMatcher._log",
      "type": "function",
      "name": "LineMatcher._log",
      "file": "src/_pytest/pytester.py",
      "line": 1628
    },
    {
      "id": "src/_pytest/pytester.py:LineMatcher._log_text",
      "type": "function",
      "name": "LineMatcher._log_text",
      "file": "src/_pytest/pytester.py",
      "line": 1632
    },
    {
      "id": "src/_pytest/pytester.py:LineMatcher.fnmatch_lines",
      "type": "function",
      "name": "LineMatcher.fnmatch_lines",
      "file": "src/_pytest/pytester.py",
      "line": 1635
    },
    {
      "id": "src/_pytest/pytester.py:LineMatcher.re_match_lines",
      "type": "function",
      "name": "LineMatcher.re_match_lines",
      "file": "src/_pytest/pytester.py",
      "line": 1650
    },
    {
      "id": "src/_pytest/pytester.py:LineMatcher._match_lines",
      "type": "function",
      "name": "LineMatcher._match_lines",
      "file": "src/_pytest/pytester.py",
      "line": 1671
    },
    {
      "id": "src/_pytest/pytester.py:LineMatcher.no_fnmatch_line",
      "type": "function",
      "name": "LineMatcher.no_fnmatch_line",
      "file": "src/_pytest/pytester.py",
      "line": 1738
    },
    {
      "id": "src/_pytest/pytester.py:LineMatcher.no_re_match_line",
      "type": "function",
      "name": "LineMatcher.no_re_match_line",
      "file": "src/_pytest/pytester.py",
      "line": 1746
    },
    {
      "id": "src/_pytest/pytester.py:LineMatcher._no_match_line",
      "type": "function",
      "name": "LineMatcher._no_match_line",
      "file": "src/_pytest/pytester.py",
      "line": 1756
    },
    {
      "id": "src/_pytest/pytester.py:LineMatcher._fail",
      "type": "function",
      "name": "LineMatcher._fail",
      "file": "src/_pytest/pytester.py",
      "line": 1779
    },
    {
      "id": "src/_pytest/pytester.py:LineMatcher.str",
      "type": "function",
      "name": "LineMatcher.str",
      "file": "src/_pytest/pytester.py",
      "line": 1785
    },
    {
      "id": "src/_pytest/faulthandler.py",
      "type": "file",
      "name": "faulthandler.py",
      "file": "src/_pytest/faulthandler.py",
      "line": 0
    },
    {
      "id": "src/_pytest/faulthandler.py:pytest_addoption",
      "type": "function",
      "name": "pytest_addoption",
      "file": "src/_pytest/faulthandler.py",
      "line": 17
    },
    {
      "id": "src/_pytest/faulthandler.py:pytest_configure",
      "type": "function",
      "name": "pytest_configure",
      "file": "src/_pytest/faulthandler.py",
      "line": 25
    },
    {
      "id": "src/_pytest/faulthandler.py:pytest_unconfigure",
      "type": "function",
      "name": "pytest_unconfigure",
      "file": "src/_pytest/faulthandler.py",
      "line": 33
    },
    {
      "id": "src/_pytest/faulthandler.py:get_stderr_fileno",
      "type": "function",
      "name": "get_stderr_fileno",
      "file": "src/_pytest/faulthandler.py",
      "line": 46
    },
    {
      "id": "src/_pytest/faulthandler.py:get_timeout_config_value",
      "type": "function",
      "name": "get_timeout_config_value",
      "file": "src/_pytest/faulthandler.py",
      "line": 61
    },
    {
      "id": "src/_pytest/faulthandler.py:pytest_runtest_protocol",
      "type": "function",
      "name": "pytest_runtest_protocol",
      "file": "src/_pytest/faulthandler.py",
      "line": 66
    },
    {
      "id": "src/_pytest/faulthandler.py:pytest_enter_pdb",
      "type": "function",
      "name": "pytest_enter_pdb",
      "file": "src/_pytest/faulthandler.py",
      "line": 82
    },
    {
      "id": "src/_pytest/faulthandler.py:pytest_exception_interact",
      "type": "function",
      "name": "pytest_exception_interact",
      "file": "src/_pytest/faulthandler.py",
      "line": 90
    },
    {
      "id": "src/_pytest/outcomes.py",
      "type": "file",
      "name": "outcomes.py",
      "file": "src/_pytest/outcomes.py",
      "line": 0
    },
    {
      "id": "src/_pytest/outcomes.py:OutcomeException",
      "type": "class",
      "name": "OutcomeException",
      "file": "src/_pytest/outcomes.py",
      "line": 17
    },
    {
      "id": "src/_pytest/outcomes.py:OutcomeException.__repr__",
      "type": "function",
      "name": "OutcomeException.__repr__",
      "file": "src/_pytest/outcomes.py",
      "line": 32
    },
    {
      "id": "src/_pytest/outcomes.py:Skipped",
      "type": "class",
      "name": "Skipped",
      "file": "src/_pytest/outcomes.py",
      "line": 43
    },
    {
      "id": "src/_pytest/outcomes.py:Failed",
      "type": "class",
      "name": "Failed",
      "file": "src/_pytest/outcomes.py",
      "line": 63
    },
    {
      "id": "src/_pytest/outcomes.py:Exit",
      "type": "class",
      "name": "Exit",
      "file": "src/_pytest/outcomes.py",
      "line": 69
    },
    {
      "id": "src/_pytest/outcomes.py:_WithException",
      "type": "class",
      "name": "_WithException",
      "file": "src/_pytest/outcomes.py",
      "line": 87
    },
    {
      "id": "src/_pytest/outcomes.py:_with_exception",
      "type": "function",
      "name": "_with_exception",
      "file": "src/_pytest/outcomes.py",
      "line": 92
    },
    {
      "id": "src/_pytest/outcomes.py:_with_exception.decorate",
      "type": "function",
      "name": "_with_exception.decorate",
      "file": "src/_pytest/outcomes.py",
      "line": 93
    },
    {
      "id": "src/_pytest/outcomes.py:exit",
      "type": "function",
      "name": "exit",
      "file": "src/_pytest/outcomes.py",
      "line": 105
    },
    {
      "id": "src/_pytest/outcomes.py:skip",
      "type": "function",
      "name": "skip",
      "file": "src/_pytest/outcomes.py",
      "line": 136
    },
    {
      "id": "src/_pytest/outcomes.py:fail",
      "type": "function",
      "name": "fail",
      "file": "src/_pytest/outcomes.py",
      "line": 172
    },
    {
      "id": "src/_pytest/outcomes.py:_resolve_msg_to_reason",
      "type": "function",
      "name": "_resolve_msg_to_reason",
      "file": "src/_pytest/outcomes.py",
      "line": 190
    },
    {
      "id": "src/_pytest/outcomes.py:XFailed",
      "type": "class",
      "name": "XFailed",
      "file": "src/_pytest/outcomes.py",
      "line": 226
    },
    {
      "id": "src/_pytest/outcomes.py:xfail",
      "type": "function",
      "name": "xfail",
      "file": "src/_pytest/outcomes.py",
      "line": 231
    },
    {
      "id": "src/_pytest/outcomes.py:importorskip",
      "type": "function",
      "name": "importorskip",
      "file": "src/_pytest/outcomes.py",
      "line": 248
    },
    {
      "id": "src/_pytest/stepwise.py",
      "type": "file",
      "name": "stepwise.py",
      "file": "src/_pytest/stepwise.py",
      "line": 0
    },
    {
      "id": "src/_pytest/stepwise.py:pytest_addoption",
      "type": "function",
      "name": "pytest_addoption",
      "file": "src/_pytest/stepwise.py",
      "line": 18
    },
    {
      "id": "src/_pytest/stepwise.py:pytest_configure",
      "type": "function",
      "name": "pytest_configure",
      "file": "src/_pytest/stepwise.py",
      "line": 40
    },
    {
      "id": "src/_pytest/stepwise.py:pytest_sessionfinish",
      "type": "function",
      "name": "pytest_sessionfinish",
      "file": "src/_pytest/stepwise.py",
      "line": 48
    },
    {
      "id": "src/_pytest/stepwise.py:StepwisePlugin",
      "type": "class",
      "name": "StepwisePlugin",
      "file": "src/_pytest/stepwise.py",
      "line": 59
    },
    {
      "id": "src/_pytest/stepwise.py:StepwisePlugin.pytest_sessionstart",
      "type": "function",
      "name": "StepwisePlugin.pytest_sessionstart",
      "file": "src/_pytest/stepwise.py",
      "line": 69
    },
    {
      "id": "src/_pytest/stepwise.py:StepwisePlugin.pytest_collection_modifyitems",
      "type": "function",
      "name": "StepwisePlugin.pytest_collection_modifyitems",
      "file": "src/_pytest/stepwise.py",
      "line": 72
    },
    {
      "id": "src/_pytest/stepwise.py:StepwisePlugin.pytest_runtest_logreport",
      "type": "function",
      "name": "StepwisePlugin.pytest_runtest_logreport",
      "file": "src/_pytest/stepwise.py",
      "line": 96
    },
    {
      "id": "src/_pytest/stepwise.py:StepwisePlugin.pytest_report_collectionfinish",
      "type": "function",
      "name": "StepwisePlugin.pytest_report_collectionfinish",
      "file": "src/_pytest/stepwise.py",
      "line": 120
    },
    {
      "id": "src/_pytest/stepwise.py:StepwisePlugin.pytest_sessionfinish",
      "type": "function",
      "name": "StepwisePlugin.pytest_sessionfinish",
      "file": "src/_pytest/stepwise.py",
      "line": 125
    },
    {
      "id": "src/_pytest/junitxml.py",
      "type": "file",
      "name": "junitxml.py",
      "file": "src/_pytest/junitxml.py",
      "line": 0
    },
    {
      "id": "src/_pytest/junitxml.py:bin_xml_escape",
      "type": "function",
      "name": "bin_xml_escape",
      "file": "src/_pytest/junitxml.py",
      "line": 40
    },
    {
      "id": "src/_pytest/junitxml.py:bin_xml_escape.repl",
      "type": "function",
      "name": "bin_xml_escape.repl",
      "file": "src/_pytest/junitxml.py",
      "line": 51
    },
    {
      "id": "src/_pytest/junitxml.py:merge_family",
      "type": "function",
      "name": "merge_family",
      "file": "src/_pytest/junitxml.py",
      "line": 67
    },
    {
      "id": "src/_pytest/junitxml.py:_NodeReporter",
      "type": "class",
      "name": "_NodeReporter",
      "file": "src/_pytest/junitxml.py",
      "line": 89
    },
    {
      "id": "src/_pytest/junitxml.py:_NodeReporter.append",
      "type": "function",
      "name": "_NodeReporter.append",
      "file": "src/_pytest/junitxml.py",
      "line": 100
    },
    {
      "id": "src/_pytest/junitxml.py:_NodeReporter.add_property",
      "type": "function",
      "name": "_NodeReporter.add_property",
      "file": "src/_pytest/junitxml.py",
      "line": 104
    },
    {
      "id": "src/_pytest/junitxml.py:_NodeReporter.add_attribute",
      "type": "function",
      "name": "_NodeReporter.add_attribute",
      "file": "src/_pytest/junitxml.py",
      "line": 107
    },
    {
      "id": "src/_pytest/junitxml.py:_NodeReporter.make_properties_node",
      "type": "function",
      "name": "_NodeReporter.make_properties_node",
      "file": "src/_pytest/junitxml.py",
      "line": 110
    },
    {
      "id": "src/_pytest/junitxml.py:_NodeReporter.record_testreport",
      "type": "function",
      "name": "_NodeReporter.record_testreport",
      "file": "src/_pytest/junitxml.py",
      "line": 119
    },
    {
      "id": "src/_pytest/junitxml.py:_NodeReporter.to_xml",
      "type": "function",
      "name": "_NodeReporter.to_xml",
      "file": "src/_pytest/junitxml.py",
      "line": 149
    },
    {
      "id": "src/_pytest/junitxml.py:_NodeReporter._add_simple",
      "type": "function",
      "name": "_NodeReporter._add_simple",
      "file": "src/_pytest/junitxml.py",
      "line": 157
    },
    {
      "id": "src/_pytest/junitxml.py:_NodeReporter.write_captured_output",
      "type": "function",
      "name": "_NodeReporter.write_captured_output",
      "file": "src/_pytest/junitxml.py",
      "line": 162
    },
    {
      "id": "src/_pytest/junitxml.py:_NodeReporter._prepare_content",
      "type": "function",
      "name": "_NodeReporter._prepare_content",
      "file": "src/_pytest/junitxml.py",
      "line": 185
    },
    {
      "id": "src/_pytest/junitxml.py:_NodeReporter._write_content",
      "type": "function",
      "name": "_NodeReporter._write_content",
      "file": "src/_pytest/junitxml.py",
      "line": 188
    },
    {
      "id": "src/_pytest/junitxml.py:_NodeReporter.append_pass",
      "type": "function",
      "name": "_NodeReporter.append_pass",
      "file": "src/_pytest/junitxml.py",
      "line": 193
    },
    {
      "id": "src/_pytest/junitxml.py:_NodeReporter.append_failure",
      "type": "function",
      "name": "_NodeReporter.append_failure",
      "file": "src/_pytest/junitxml.py",
      "line": 196
    },
    {
      "id": "src/_pytest/junitxml.py:_NodeReporter.append_collect_error",
      "type": "function",
      "name": "_NodeReporter.append_collect_error",
      "file": "src/_pytest/junitxml.py",
      "line": 212
    },
    {
      "id": "src/_pytest/junitxml.py:_NodeReporter.append_collect_skipped",
      "type": "function",
      "name": "_NodeReporter.append_collect_skipped",
      "file": "src/_pytest/junitxml.py",
      "line": 217
    },
    {
      "id": "src/_pytest/junitxml.py:_NodeReporter.append_error",
      "type": "function",
      "name": "_NodeReporter.append_error",
      "file": "src/_pytest/junitxml.py",
      "line": 220
    },
    {
      "id": "src/_pytest/junitxml.py:_NodeReporter.append_skipped",
      "type": "function",
      "name": "_NodeReporter.append_skipped",
      "file": "src/_pytest/junitxml.py",
      "line": 236
    },
    {
      "id": "src/_pytest/junitxml.py:_NodeReporter.finalize",
      "type": "function",
      "name": "_NodeReporter.finalize",
      "file": "src/_pytest/junitxml.py",
      "line": 256
    },
    {
      "id": "src/_pytest/junitxml.py:_warn_incompatibility_with_xunit2",
      "type": "function",
      "name": "_warn_incompatibility_with_xunit2",
      "file": "src/_pytest/junitxml.py",
      "line": 264
    },
    {
      "id": "src/_pytest/junitxml.py:record_property",
      "type": "function",
      "name": "record_property",
      "file": "src/_pytest/junitxml.py",
      "line": 282
    },
    {
      "id": "src/_pytest/junitxml.py:record_property.append_property",
      "type": "function",
      "name": "record_property.append_property",
      "file": "src/_pytest/junitxml.py",
      "line": 298
    },
    {
      "id": "src/_pytest/junitxml.py:record_xml_attribute",
      "type": "function",
      "name": "record_xml_attribute",
      "file": "src/_pytest/junitxml.py",
      "line": 305
    },
    {
      "id": "src/_pytest/junitxml.py:record_xml_attribute.add_attr_noop",
      "type": "function",
      "name": "record_xml_attribute.add_attr_noop",
      "file": "src/_pytest/junitxml.py",
      "line": 320
    },
    {
      "id": "src/_pytest/junitxml.py:_check_record_param_type",
      "type": "function",
      "name": "_check_record_param_type",
      "file": "src/_pytest/junitxml.py",
      "line": 333
    },
    {
      "id": "src/_pytest/junitxml.py:record_testsuite_property",
      "type": "function",
      "name": "record_testsuite_property",
      "file": "src/_pytest/junitxml.py",
      "line": 343
    },
    {
      "id": "src/_pytest/junitxml.py:record_testsuite_property.record_func",
      "type": "function",
      "name": "record_testsuite_property.record_func",
      "file": "src/_pytest/junitxml.py",
      "line": 371
    },
    {
      "id": "src/_pytest/junitxml.py:pytest_addoption",
      "type": "function",
      "name": "pytest_addoption",
      "file": "src/_pytest/junitxml.py",
      "line": 382
    },
    {
      "id": "src/_pytest/junitxml.py:pytest_configure",
      "type": "function",
      "name": "pytest_configure",
      "file": "src/_pytest/junitxml.py",
      "line": 429
    },
    {
      "id": "src/_pytest/junitxml.py:pytest_unconfigure",
      "type": "function",
      "name": "pytest_unconfigure",
      "file": "src/_pytest/junitxml.py",
      "line": 446
    },
    {
      "id": "src/_pytest/junitxml.py:mangle_test_address",
      "type": "function",
      "name": "mangle_test_address",
      "file": "src/_pytest/junitxml.py",
      "line": 453
    },
    {
      "id": "src/_pytest/junitxml.py:LogXML",
      "type": "class",
      "name": "LogXML",
      "file": "src/_pytest/junitxml.py",
      "line": 464
    },
    {
      "id": "src/_pytest/junitxml.py:LogXML.finalize",
      "type": "function",
      "name": "LogXML.finalize",
      "file": "src/_pytest/junitxml.py",
      "line": 500
    },
    {
      "id": "src/_pytest/junitxml.py:LogXML.node_reporter",
      "type": "function",
      "name": "LogXML.node_reporter",
      "file": "src/_pytest/junitxml.py",
      "line": 508
    },
    {
      "id": "src/_pytest/junitxml.py:LogXML.add_stats",
      "type": "function",
      "name": "LogXML.add_stats",
      "file": "src/_pytest/junitxml.py",
      "line": 526
    },
    {
      "id": "src/_pytest/junitxml.py:LogXML._opentestcase",
      "type": "function",
      "name": "LogXML._opentestcase",
      "file": "src/_pytest/junitxml.py",
      "line": 530
    },
    {
      "id": "src/_pytest/junitxml.py:LogXML.pytest_runtest_logreport",
      "type": "function",
      "name": "LogXML.pytest_runtest_logreport",
      "file": "src/_pytest/junitxml.py",
      "line": 535
    },
    {
      "id": "src/_pytest/junitxml.py:LogXML.update_testcase_duration",
      "type": "function",
      "name": "LogXML.update_testcase_duration",
      "file": "src/_pytest/junitxml.py",
      "line": 623
    },
    {
      "id": "src/_pytest/junitxml.py:LogXML.pytest_collectreport",
      "type": "function",
      "name": "LogXML.pytest_collectreport",
      "file": "src/_pytest/junitxml.py",
      "line": 630
    },
    {
      "id": "src/_pytest/junitxml.py:LogXML.pytest_internalerror",
      "type": "function",
      "name": "LogXML.pytest_internalerror",
      "file": "src/_pytest/junitxml.py",
      "line": 638
    },
    {
      "id": "src/_pytest/junitxml.py:LogXML.pytest_sessionstart",
      "type": "function",
      "name": "LogXML.pytest_sessionstart",
      "file": "src/_pytest/junitxml.py",
      "line": 643
    },
    {
      "id": "src/_pytest/junitxml.py:LogXML.pytest_sessionfinish",
      "type": "function",
      "name": "LogXML.pytest_sessionfinish",
      "file": "src/_pytest/junitxml.py",
      "line": 646
    },
    {
      "id": "src/_pytest/junitxml.py:LogXML.pytest_terminal_summary",
      "type": "function",
      "name": "LogXML.pytest_terminal_summary",
      "file": "src/_pytest/junitxml.py",
      "line": 684
    },
    {
      "id": "src/_pytest/junitxml.py:LogXML.add_global_property",
      "type": "function",
      "name": "LogXML.add_global_property",
      "file": "src/_pytest/junitxml.py",
      "line": 687
    },
    {
      "id": "src/_pytest/junitxml.py:LogXML._get_global_properties_node",
      "type": "function",
      "name": "LogXML._get_global_properties_node",
      "file": "src/_pytest/junitxml.py",
      "line": 692
    },
    {
      "id": "src/_pytest/python.py",
      "type": "file",
      "name": "python.py",
      "file": "src/_pytest/python.py",
      "line": 0
    },
    {
      "id": "src/_pytest/python.py:pytest_addoption",
      "type": "function",
      "name": "pytest_addoption",
      "file": "src/_pytest/python.py",
      "line": 92
    },
    {
      "id": "src/_pytest/python.py:pytest_cmdline_main",
      "type": "function",
      "name": "pytest_cmdline_main",
      "file": "src/_pytest/python.py",
      "line": 138
    },
    {
      "id": "src/_pytest/python.py:pytest_generate_tests",
      "type": "function",
      "name": "pytest_generate_tests",
      "file": "src/_pytest/python.py",
      "line": 148
    },
    {
      "id": "src/_pytest/python.py:pytest_configure",
      "type": "function",
      "name": "pytest_configure",
      "file": "src/_pytest/python.py",
      "line": 153
    },
    {
      "id": "src/_pytest/python.py:async_warn_and_skip",
      "type": "function",
      "name": "async_warn_and_skip",
      "file": "src/_pytest/python.py",
      "line": 173
    },
    {
      "id": "src/_pytest/python.py:pytest_pyfunc_call",
      "type": "function",
      "name": "pytest_pyfunc_call",
      "file": "src/_pytest/python.py",
      "line": 188
    },
    {
      "id": "src/_pytest/python.py:pytest_collect_file",
      "type": "function",
      "name": "pytest_collect_file",
      "file": "src/_pytest/python.py",
      "line": 207
    },
    {
      "id": "src/_pytest/python.py:path_matches_patterns",
      "type": "function",
      "name": "path_matches_patterns",
      "file": "src/_pytest/python.py",
      "line": 222
    },
    {
      "id": "src/_pytest/python.py:pytest_pycollect_makemodule",
      "type": "function",
      "name": "pytest_pycollect_makemodule",
      "file": "src/_pytest/python.py",
      "line": 227
    },
    {
      "id": "src/_pytest/python.py:pytest_pycollect_makeitem",
      "type": "function",
      "name": "pytest_pycollect_makeitem",
      "file": "src/_pytest/python.py",
      "line": 236
    },
    {
      "id": "src/_pytest/python.py:PyobjMixin",
      "type": "class",
      "name": "PyobjMixin",
      "file": "src/_pytest/python.py",
      "line": 275
    },
    {
      "id": "src/_pytest/python.py:PyobjMixin.module",
      "type": "function",
      "name": "PyobjMixin.module",
      "file": "src/_pytest/python.py",
      "line": 284
    },
    {
      "id": "src/_pytest/python.py:PyobjMixin.cls",
      "type": "function",
      "name": "PyobjMixin.cls",
      "file": "src/_pytest/python.py",
      "line": 290
    },
    {
      "id": "src/_pytest/python.py:PyobjMixin.instance",
      "type": "function",
      "name": "PyobjMixin.instance",
      "file": "src/_pytest/python.py",
      "line": 296
    },
    {
      "id": "src/_pytest/python.py:PyobjMixin.obj",
      "type": "function",
      "name": "PyobjMixin.obj",
      "file": "src/_pytest/python.py",
      "line": 321
    },
    {
      "id": "src/_pytest/python.py:PyobjMixin._getobj",
      "type": "function",
      "name": "PyobjMixin._getobj",
      "file": "src/_pytest/python.py",
      "line": 324
    },
    {
      "id": "src/_pytest/python.py:PyobjMixin.getmodpath",
      "type": "function",
      "name": "PyobjMixin.getmodpath",
      "file": "src/_pytest/python.py",
      "line": 331
    },
    {
      "id": "src/_pytest/python.py:PyobjMixin.reportinfo",
      "type": "function",
      "name": "PyobjMixin.reportinfo",
      "file": "src/_pytest/python.py",
      "line": 348
    },
    {
      "id": "src/_pytest/python.py:_EmptyClass",
      "type": "class",
      "name": "_EmptyClass",
      "file": "src/_pytest/python.py",
      "line": 371
    },
    {
      "id": "src/_pytest/python.py:PyCollector",
      "type": "class",
      "name": "PyCollector",
      "file": "src/_pytest/python.py",
      "line": 387
    },
    {
      "id": "src/_pytest/python.py:PyCollector.funcnamefilter",
      "type": "function",
      "name": "PyCollector.funcnamefilter",
      "file": "src/_pytest/python.py",
      "line": 388
    },
    {
      "id": "src/_pytest/python.py:PyCollector.isnosetest",
      "type": "function",
      "name": "PyCollector.isnosetest",
      "file": "src/_pytest/python.py",
      "line": 391
    },
    {
      "id": "src/_pytest/python.py:PyCollector.classnamefilter",
      "type": "function",
      "name": "PyCollector.classnamefilter",
      "file": "src/_pytest/python.py",
      "line": 400
    },
    {
      "id": "src/_pytest/python.py:PyCollector.istestfunction",
      "type": "function",
      "name": "PyCollector.istestfunction",
      "file": "src/_pytest/python.py",
      "line": 403
    },
    {
      "id": "src/_pytest/python.py:PyCollector.istestclass",
      "type": "function",
      "name": "PyCollector.istestclass",
      "file": "src/_pytest/python.py",
      "line": 412
    },
    {
      "id": "src/_pytest/python.py:PyCollector._matches_prefix_or_glob_option",
      "type": "function",
      "name": "PyCollector._matches_prefix_or_glob_option",
      "file": "src/_pytest/python.py",
      "line": 415
    },
    {
      "id": "src/_pytest/python.py:PyCollector.collect",
      "type": "function",
      "name": "PyCollector.collect",
      "file": "src/_pytest/python.py",
      "line": 430
    },
    {
      "id": "src/_pytest/python.py:PyCollector._genfunctions",
      "type": "function",
      "name": "PyCollector._genfunctions",
      "file": "src/_pytest/python.py",
      "line": 473
    },
    {
      "id": "src/_pytest/python.py:Module",
      "type": "class",
      "name": "Module",
      "file": "src/_pytest/python.py",
      "line": 524
    },
    {
      "id": "src/_pytest/python.py:Module._getobj",
      "type": "function",
      "name": "Module._getobj",
      "file": "src/_pytest/python.py",
      "line": 527
    },
    {
      "id": "src/_pytest/python.py:Module.collect",
      "type": "function",
      "name": "Module.collect",
      "file": "src/_pytest/python.py",
      "line": 530
    },
    {
      "id": "src/_pytest/python.py:Module._inject_setup_module_fixture",
      "type": "function",
      "name": "Module._inject_setup_module_fixture",
      "file": "src/_pytest/python.py",
      "line": 536
    },
    {
      "id": "src/_pytest/python.py:Module._inject_setup_module_fixture.xunit_setup_module_fixture",
      "type": "function",
      "name": "Module._inject_setup_module_fixture.xunit_setup_module_fixture",
      "file": "src/_pytest/python.py",
      "line": 570
    },
    {
      "id": "src/_pytest/python.py:Module._inject_setup_function_fixture",
      "type": "function",
      "name": "Module._inject_setup_function_fixture",
      "file": "src/_pytest/python.py",
      "line": 579
    },
    {
      "id": "src/_pytest/python.py:Module._inject_setup_function_fixture.xunit_setup_function_fixture",
      "type": "function",
      "name": "Module._inject_setup_function_fixture.xunit_setup_function_fixture",
      "file": "src/_pytest/python.py",
      "line": 599
    },
    {
      "id": "src/_pytest/python.py:Module._importtestmodule",
      "type": "function",
      "name": "Module._importtestmodule",
      "file": "src/_pytest/python.py",
      "line": 613
    },
    {
      "id": "src/_pytest/python.py:Package",
      "type": "class",
      "name": "Package",
      "file": "src/_pytest/python.py",
      "line": 661
    },
    {
      "id": "src/_pytest/python.py:Package.setup",
      "type": "function",
      "name": "Package.setup",
      "file": "src/_pytest/python.py",
      "line": 686
    },
    {
      "id": "src/_pytest/python.py:Package._recurse",
      "type": "function",
      "name": "Package._recurse",
      "file": "src/_pytest/python.py",
      "line": 702
    },
    {
      "id": "src/_pytest/python.py:Package._collectfile",
      "type": "function",
      "name": "Package._collectfile",
      "file": "src/_pytest/python.py",
      "line": 711
    },
    {
      "id": "src/_pytest/python.py:Package.collect",
      "type": "function",
      "name": "Package.collect",
      "file": "src/_pytest/python.py",
      "line": 735
    },
    {
      "id": "src/_pytest/python.py:_call_with_optional_argument",
      "type": "function",
      "name": "_call_with_optional_argument",
      "file": "src/_pytest/python.py",
      "line": 769
    },
    {
      "id": "src/_pytest/python.py:_get_first_non_fixture_func",
      "type": "function",
      "name": "_get_first_non_fixture_func",
      "file": "src/_pytest/python.py",
      "line": 781
    },
    {
      "id": "src/_pytest/python.py:Class",
      "type": "class",
      "name": "Class",
      "file": "src/_pytest/python.py",
      "line": 792
    },
    {
      "id": "src/_pytest/python.py:Class.from_parent",
      "type": "function",
      "name": "Class.from_parent",
      "file": "src/_pytest/python.py",
      "line": 796
    },
    {
      "id": "src/_pytest/python.py:Class.newinstance",
      "type": "function",
      "name": "Class.newinstance",
      "file": "src/_pytest/python.py",
      "line": 800
    },
    {
      "id": "src/_pytest/python.py:Class.collect",
      "type": "function",
      "name": "Class.collect",
      "file": "src/_pytest/python.py",
      "line": 803
    },
    {
      "id": "src/_pytest/python.py:Class._inject_setup_class_fixture",
      "type": "function",
      "name": "Class._inject_setup_class_fixture",
      "file": "src/_pytest/python.py",
      "line": 834
    },
    {
      "id": "src/_pytest/python.py:Class._inject_setup_class_fixture.xunit_setup_class_fixture",
      "type": "function",
      "name": "Class._inject_setup_class_fixture.xunit_setup_class_fixture",
      "file": "src/_pytest/python.py",
      "line": 852
    },
    {
      "id": "src/_pytest/python.py:Class._inject_setup_method_fixture",
      "type": "function",
      "name": "Class._inject_setup_method_fixture",
      "file": "src/_pytest/python.py",
      "line": 863
    },
    {
      "id": "src/_pytest/python.py:Class._inject_setup_method_fixture.xunit_setup_method_fixture",
      "type": "function",
      "name": "Class._inject_setup_method_fixture.xunit_setup_method_fixture",
      "file": "src/_pytest/python.py",
      "line": 894
    },
    {
      "id": "src/_pytest/python.py:InstanceDummy",
      "type": "class",
      "name": "InstanceDummy",
      "file": "src/_pytest/python.py",
      "line": 921
    },
    {
      "id": "src/_pytest/python.py:__getattr__",
      "type": "function",
      "name": "__getattr__",
      "file": "src/_pytest/python.py",
      "line": 928
    },
    {
      "id": "src/_pytest/python.py:hasinit",
      "type": "function",
      "name": "hasinit",
      "file": "src/_pytest/python.py",
      "line": 935
    },
    {
      "id": "src/_pytest/python.py:hasnew",
      "type": "function",
      "name": "hasnew",
      "file": "src/_pytest/python.py",
      "line": 942
    },
    {
      "id": "src/_pytest/python.py:IdMaker",
      "type": "class",
      "name": "IdMaker",
      "file": "src/_pytest/python.py",
      "line": 951
    },
    {
      "id": "src/_pytest/python.py:IdMaker.make_unique_parameterset_ids",
      "type": "function",
      "name": "IdMaker.make_unique_parameterset_ids",
      "file": "src/_pytest/python.py",
      "line": 984
    },
    {
      "id": "src/_pytest/python.py:IdMaker._resolve_ids",
      "type": "function",
      "name": "IdMaker._resolve_ids",
      "file": "src/_pytest/python.py",
      "line": 1009
    },
    {
      "id": "src/_pytest/python.py:IdMaker._idval",
      "type": "function",
      "name": "IdMaker._idval",
      "file": "src/_pytest/python.py",
      "line": 1025
    },
    {
      "id": "src/_pytest/python.py:IdMaker._idval_from_function",
      "type": "function",
      "name": "IdMaker._idval_from_function",
      "file": "src/_pytest/python.py",
      "line": 1038
    },
    {
      "id": "src/_pytest/python.py:IdMaker._idval_from_hook",
      "type": "function",
      "name": "IdMaker._idval_from_hook",
      "file": "src/_pytest/python.py",
      "line": 1056
    },
    {
      "id": "src/_pytest/python.py:IdMaker._idval_from_value",
      "type": "function",
      "name": "IdMaker._idval_from_value",
      "file": "src/_pytest/python.py",
      "line": 1066
    },
    {
      "id": "src/_pytest/python.py:IdMaker._idval_from_value_required",
      "type": "function",
      "name": "IdMaker._idval_from_value_required",
      "file": "src/_pytest/python.py",
      "line": 1086
    },
    {
      "id": "src/_pytest/python.py:IdMaker._idval_from_argname",
      "type": "function",
      "name": "IdMaker._idval_from_argname",
      "file": "src/_pytest/python.py",
      "line": 1106
    },
    {
      "id": "src/_pytest/python.py:CallSpec2",
      "type": "class",
      "name": "CallSpec2",
      "file": "src/_pytest/python.py",
      "line": 1114
    },
    {
      "id": "src/_pytest/python.py:CallSpec2.setmulti",
      "type": "function",
      "name": "CallSpec2.setmulti",
      "file": "src/_pytest/python.py",
      "line": 1137
    },
    {
      "id": "src/_pytest/python.py:CallSpec2.getparam",
      "type": "function",
      "name": "CallSpec2.getparam",
      "file": "src/_pytest/python.py",
      "line": 1173
    },
    {
      "id": "src/_pytest/python.py:CallSpec2.id",
      "type": "function",
      "name": "CallSpec2.id",
      "file": "src/_pytest/python.py",
      "line": 1180
    },
    {
      "id": "src/_pytest/python.py:Metafunc",
      "type": "class",
      "name": "Metafunc",
      "file": "src/_pytest/python.py",
      "line": 1185
    },
    {
      "id": "src/_pytest/python.py:Metafunc.parametrize",
      "type": "function",
      "name": "Metafunc.parametrize",
      "file": "src/_pytest/python.py",
      "line": 1228
    },
    {
      "id": "src/_pytest/python.py:Metafunc._resolve_parameter_set_ids",
      "type": "function",
      "name": "Metafunc._resolve_parameter_set_ids",
      "file": "src/_pytest/python.py",
      "line": 1361
    },
    {
      "id": "src/_pytest/python.py:Metafunc._validate_ids",
      "type": "function",
      "name": "Metafunc._validate_ids",
      "file": "src/_pytest/python.py",
      "line": 1405
    },
    {
      "id": "src/_pytest/python.py:Metafunc._resolve_arg_value_types",
      "type": "function",
      "name": "Metafunc._resolve_arg_value_types",
      "file": "src/_pytest/python.py",
      "line": 1427
    },
    {
      "id": "src/_pytest/python.py:Metafunc._validate_if_using_arg_names",
      "type": "function",
      "name": "Metafunc._validate_if_using_arg_names",
      "file": "src/_pytest/python.py",
      "line": 1467
    },
    {
      "id": "src/_pytest/python.py:_find_parametrized_scope",
      "type": "function",
      "name": "_find_parametrized_scope",
      "file": "src/_pytest/python.py",
      "line": 1500
    },
    {
      "id": "src/_pytest/python.py:_ascii_escaped_by_config",
      "type": "function",
      "name": "_ascii_escaped_by_config",
      "file": "src/_pytest/python.py",
      "line": 1532
    },
    {
      "id": "src/_pytest/python.py:_pretty_fixture_path",
      "type": "function",
      "name": "_pretty_fixture_path",
      "file": "src/_pytest/python.py",
      "line": 1545
    },
    {
      "id": "src/_pytest/python.py:show_fixtures_per_test",
      "type": "function",
      "name": "show_fixtures_per_test",
      "file": "src/_pytest/python.py",
      "line": 1555
    },
    {
      "id": "src/_pytest/python.py:_show_fixtures_per_test",
      "type": "function",
      "name": "_show_fixtures_per_test",
      "file": "src/_pytest/python.py",
      "line": 1561
    },
    {
      "id": "src/_pytest/python.py:_show_fixtures_per_test.get_best_relpath",
      "type": "function",
      "name": "_show_fixtures_per_test.get_best_relpath",
      "file": "src/_pytest/python.py",
      "line": 1569
    },
    {
      "id": "src/_pytest/python.py:_show_fixtures_per_test.write_fixture",
      "type": "function",
      "name": "_show_fixtures_per_test.write_fixture",
      "file": "src/_pytest/python.py",
      "line": 1573
    },
    {
      "id": "src/_pytest/python.py:_show_fixtures_per_test.write_item",
      "type": "function",
      "name": "_show_fixtures_per_test.write_item",
      "file": "src/_pytest/python.py",
      "line": 1589
    },
    {
      "id": "src/_pytest/python.py:showfixtures",
      "type": "function",
      "name": "showfixtures",
      "file": "src/_pytest/python.py",
      "line": 1611
    },
    {
      "id": "src/_pytest/python.py:_showfixtures_main",
      "type": "function",
      "name": "_showfixtures_main",
      "file": "src/_pytest/python.py",
      "line": 1617
    },
    {
      "id": "src/_pytest/python.py:write_docstring",
      "type": "function",
      "name": "write_docstring",
      "file": "src/_pytest/python.py",
      "line": 1672
    },
    {
      "id": "src/_pytest/python.py:Function",
      "type": "class",
      "name": "Function",
      "file": "src/_pytest/python.py",
      "line": 1677
    },
    {
      "id": "src/_pytest/python.py:Function.from_parent",
      "type": "function",
      "name": "Function.from_parent",
      "file": "src/_pytest/python.py",
      "line": 1761
    },
    {
      "id": "src/_pytest/python.py:Function._initrequest",
      "type": "function",
      "name": "Function._initrequest",
      "file": "src/_pytest/python.py",
      "line": 1765
    },
    {
      "id": "src/_pytest/python.py:Function.function",
      "type": "function",
      "name": "Function.function",
      "file": "src/_pytest/python.py",
      "line": 1770
    },
    {
      "id": "src/_pytest/python.py:Function._getobj",
      "type": "function",
      "name": "Function._getobj",
      "file": "src/_pytest/python.py",
      "line": 1774
    },
    {
      "id": "src/_pytest/python.py:Function._pyfuncitem",
      "type": "function",
      "name": "Function._pyfuncitem",
      "file": "src/_pytest/python.py",
      "line": 1784
    },
    {
      "id": "src/_pytest/python.py:Function.runtest",
      "type": "function",
      "name": "Function.runtest",
      "file": "src/_pytest/python.py",
      "line": 1788
    },
    {
      "id": "src/_pytest/python.py:Function.setup",
      "type": "function",
      "name": "Function.setup",
      "file": "src/_pytest/python.py",
      "line": 1792
    },
    {
      "id": "src/_pytest/python.py:Function._traceback_filter",
      "type": "function",
      "name": "Function._traceback_filter",
      "file": "src/_pytest/python.py",
      "line": 1795
    },
    {
      "id": "src/_pytest/python.py:Function.repr_failure",
      "type": "function",
      "name": "Function.repr_failure",
      "file": "src/_pytest/python.py",
      "line": 1824
    },
    {
      "id": "src/_pytest/python.py:FunctionDefinition",
      "type": "class",
      "name": "FunctionDefinition",
      "file": "src/_pytest/python.py",
      "line": 1834
    },
    {
      "id": "src/_pytest/python.py:FunctionDefinition.runtest",
      "type": "function",
      "name": "FunctionDefinition.runtest",
      "file": "src/_pytest/python.py",
      "line": 1840
    },
    {
      "id": "src/_pytest/reports.py",
      "type": "file",
      "name": "reports.py",
      "file": "src/_pytest/reports.py",
      "line": 0
    },
    {
      "id": "src/_pytest/reports.py:getworkerinfoline",
      "type": "function",
      "name": "getworkerinfoline",
      "file": "src/_pytest/reports.py",
      "line": 44
    },
    {
      "id": "src/_pytest/reports.py:BaseReport",
      "type": "class",
      "name": "BaseReport",
      "file": "src/_pytest/reports.py",
      "line": 59
    },
    {
      "id": "src/_pytest/reports.py:BaseReport.__getattr__",
      "type": "function",
      "name": "BaseReport.__getattr__",
      "file": "src/_pytest/reports.py",
      "line": 74
    },
    {
      "id": "src/_pytest/reports.py:BaseReport.toterminal",
      "type": "function",
      "name": "BaseReport.toterminal",
      "file": "src/_pytest/reports.py",
      "line": 77
    },
    {
      "id": "src/_pytest/reports.py:BaseReport.get_sections",
      "type": "function",
      "name": "BaseReport.get_sections",
      "file": "src/_pytest/reports.py",
      "line": 97
    },
    {
      "id": "src/_pytest/reports.py:BaseReport.longreprtext",
      "type": "function",
      "name": "BaseReport.longreprtext",
      "file": "src/_pytest/reports.py",
      "line": 103
    },
    {
      "id": "src/_pytest/reports.py:BaseReport.caplog",
      "type": "function",
      "name": "BaseReport.caplog",
      "file": "src/_pytest/reports.py",
      "line": 117
    },
    {
      "id": "src/_pytest/reports.py:BaseReport.capstdout",
      "type": "function",
      "name": "BaseReport.capstdout",
      "file": "src/_pytest/reports.py",
      "line": 127
    },
    {
      "id": "src/_pytest/reports.py:BaseReport.capstderr",
      "type": "function",
      "name": "BaseReport.capstderr",
      "file": "src/_pytest/reports.py",
      "line": 137
    },
    {
      "id": "src/_pytest/reports.py:BaseReport.passed",
      "type": "function",
      "name": "BaseReport.passed",
      "file": "src/_pytest/reports.py",
      "line": 147
    },
    {
      "id": "src/_pytest/reports.py:BaseReport.failed",
      "type": "function",
      "name": "BaseReport.failed",
      "file": "src/_pytest/reports.py",
      "line": 152
    },
    {
      "id": "src/_pytest/reports.py:BaseReport.skipped",
      "type": "function",
      "name": "BaseReport.skipped",
      "file": "src/_pytest/reports.py",
      "line": 157
    },
    {
      "id": "src/_pytest/reports.py:BaseReport.fspath",
      "type": "function",
      "name": "BaseReport.fspath",
      "file": "src/_pytest/reports.py",
      "line": 162
    },
    {
      "id": "src/_pytest/reports.py:BaseReport.count_towards_summary",
      "type": "function",
      "name": "BaseReport.count_towards_summary",
      "file": "src/_pytest/reports.py",
      "line": 167
    },
    {
      "id": "src/_pytest/reports.py:BaseReport.head_line",
      "type": "function",
      "name": "BaseReport.head_line",
      "file": "src/_pytest/reports.py",
      "line": 179
    },
    {
      "id": "src/_pytest/reports.py:BaseReport._get_verbose_word",
      "type": "function",
      "name": "BaseReport._get_verbose_word",
      "file": "src/_pytest/reports.py",
      "line": 199
    },
    {
      "id": "src/_pytest/reports.py:BaseReport._to_json",
      "type": "function",
      "name": "BaseReport._to_json",
      "file": "src/_pytest/reports.py",
      "line": 205
    },
    {
      "id": "src/_pytest/reports.py:BaseReport._from_json",
      "type": "function",
      "name": "BaseReport._from_json",
      "file": "src/_pytest/reports.py",
      "line": 216
    },
    {
      "id": "src/_pytest/reports.py:_report_unserialization_failure",
      "type": "function",
      "name": "_report_unserialization_failure",
      "file": "src/_pytest/reports.py",
      "line": 229
    },
    {
      "id": "src/_pytest/reports.py:TestReport",
      "type": "class",
      "name": "TestReport",
      "file": "src/_pytest/reports.py",
      "line": 244
    },
    {
      "id": "src/_pytest/reports.py:TestReport.__repr__",
      "type": "function",
      "name": "TestReport.__repr__",
      "file": "src/_pytest/reports.py",
      "line": 313
    },
    {
      "id": "src/_pytest/reports.py:TestReport.from_item_and_call",
      "type": "function",
      "name": "TestReport.from_item_and_call",
      "file": "src/_pytest/reports.py",
      "line": 319
    },
    {
      "id": "src/_pytest/reports.py:CollectReport",
      "type": "class",
      "name": "CollectReport",
      "file": "src/_pytest/reports.py",
      "line": 385
    },
    {
      "id": "src/_pytest/reports.py:CollectReport.location",
      "type": "function",
      "name": "CollectReport.location",
      "file": "src/_pytest/reports.py",
      "line": 425
    },
    {
      "id": "src/_pytest/reports.py:CollectReport.__repr__",
      "type": "function",
      "name": "CollectReport.__repr__",
      "file": "src/_pytest/reports.py",
      "line": 430
    },
    {
      "id": "src/_pytest/reports.py:CollectErrorRepr",
      "type": "class",
      "name": "CollectErrorRepr",
      "file": "src/_pytest/reports.py",
      "line": 436
    },
    {
      "id": "src/_pytest/reports.py:CollectErrorRepr.toterminal",
      "type": "function",
      "name": "CollectErrorRepr.toterminal",
      "file": "src/_pytest/reports.py",
      "line": 440
    },
    {
      "id": "src/_pytest/reports.py:pytest_report_to_serializable",
      "type": "function",
      "name": "pytest_report_to_serializable",
      "file": "src/_pytest/reports.py",
      "line": 444
    },
    {
      "id": "src/_pytest/reports.py:pytest_report_from_serializable",
      "type": "function",
      "name": "pytest_report_from_serializable",
      "file": "src/_pytest/reports.py",
      "line": 455
    },
    {
      "id": "src/_pytest/reports.py:_report_to_json",
      "type": "function",
      "name": "_report_to_json",
      "file": "src/_pytest/reports.py",
      "line": 469
    },
    {
      "id": "src/_pytest/reports.py:_report_to_json.serialize_repr_entry",
      "type": "function",
      "name": "_report_to_json.serialize_repr_entry",
      "file": "src/_pytest/reports.py",
      "line": 476
    },
    {
      "id": "src/_pytest/reports.py:_report_to_json.serialize_repr_traceback",
      "type": "function",
      "name": "_report_to_json.serialize_repr_traceback",
      "file": "src/_pytest/reports.py",
      "line": 486
    },
    {
      "id": "src/_pytest/reports.py:_report_to_json.serialize_repr_crash",
      "type": "function",
      "name": "_report_to_json.serialize_repr_crash",
      "file": "src/_pytest/reports.py",
      "line": 493
    },
    {
      "id": "src/_pytest/reports.py:_report_to_json.serialize_exception_longrepr",
      "type": "function",
      "name": "_report_to_json.serialize_exception_longrepr",
      "file": "src/_pytest/reports.py",
      "line": 501
    },
    {
      "id": "src/_pytest/reports.py:_report_kwargs_from_json",
      "type": "function",
      "name": "_report_kwargs_from_json",
      "file": "src/_pytest/reports.py",
      "line": 542
    },
    {
      "id": "src/_pytest/reports.py:_report_kwargs_from_json.deserialize_repr_entry",
      "type": "function",
      "name": "_report_kwargs_from_json.deserialize_repr_entry",
      "file": "src/_pytest/reports.py",
      "line": 549
    },
    {
      "id": "src/_pytest/reports.py:_report_kwargs_from_json.deserialize_repr_traceback",
      "type": "function",
      "name": "_report_kwargs_from_json.deserialize_repr_traceback",
      "file": "src/_pytest/reports.py",
      "line": 576
    },
    {
      "id": "src/_pytest/reports.py:_report_kwargs_from_json.deserialize_repr_crash",
      "type": "function",
      "name": "_report_kwargs_from_json.deserialize_repr_crash",
      "file": "src/_pytest/reports.py",
      "line": 582
    },
    {
      "id": "src/_pytest/doctest.py",
      "type": "file",
      "name": "doctest.py",
      "file": "src/_pytest/doctest.py",
      "line": 0
    },
    {
      "id": "src/_pytest/doctest.py:pytest_addoption",
      "type": "function",
      "name": "pytest_addoption",
      "file": "src/_pytest/doctest.py",
      "line": 69
    },
    {
      "id": "src/_pytest/doctest.py:pytest_unconfigure",
      "type": "function",
      "name": "pytest_unconfigure",
      "file": "src/_pytest/doctest.py",
      "line": 119
    },
    {
      "id": "src/_pytest/doctest.py:pytest_collect_file",
      "type": "function",
      "name": "pytest_collect_file",
      "file": "src/_pytest/doctest.py",
      "line": 125
    },
    {
      "id": "src/_pytest/doctest.py:_is_setup_py",
      "type": "function",
      "name": "_is_setup_py",
      "file": "src/_pytest/doctest.py",
      "line": 142
    },
    {
      "id": "src/_pytest/doctest.py:_is_doctest",
      "type": "function",
      "name": "_is_doctest",
      "file": "src/_pytest/doctest.py",
      "line": 149
    },
    {
      "id": "src/_pytest/doctest.py:_is_main_py",
      "type": "function",
      "name": "_is_main_py",
      "file": "src/_pytest/doctest.py",
      "line": 156
    },
    {
      "id": "src/_pytest/doctest.py:ReprFailDoctest",
      "type": "class",
      "name": "ReprFailDoctest",
      "file": "src/_pytest/doctest.py",
      "line": 160
    },
    {
      "id": "src/_pytest/doctest.py:ReprFailDoctest.toterminal",
      "type": "function",
      "name": "ReprFailDoctest.toterminal",
      "file": "src/_pytest/doctest.py",
      "line": 166
    },
    {
      "id": "src/_pytest/doctest.py:MultipleDoctestFailures",
      "type": "class",
      "name": "MultipleDoctestFailures",
      "file": "src/_pytest/doctest.py",
      "line": 173
    },
    {
      "id": "src/_pytest/doctest.py:_init_runner_class",
      "type": "function",
      "name": "_init_runner_class",
      "file": "src/_pytest/doctest.py",
      "line": 179
    },
    {
      "id": "src/_pytest/doctest.py:_init_runner_class.PytestDoctestRunner",
      "type": "class",
      "name": "_init_runner_class.PytestDoctestRunner",
      "file": "src/_pytest/doctest.py",
      "line": 182
    },
    {
      "id": "src/_pytest/doctest.py:_init_runner_class.PytestDoctestRunner.report_failure",
      "type": "function",
      "name": "_init_runner_class.PytestDoctestRunner.report_failure",
      "file": "src/_pytest/doctest.py",
      "line": 199
    },
    {
      "id": "src/_pytest/doctest.py:_init_runner_class.PytestDoctestRunner.report_unexpected_exception",
      "type": "function",
      "name": "_init_runner_class.PytestDoctestRunner.report_unexpected_exception",
      "file": "src/_pytest/doctest.py",
      "line": 212
    },
    {
      "id": "src/_pytest/doctest.py:_get_runner",
      "type": "function",
      "name": "_get_runner",
      "file": "src/_pytest/doctest.py",
      "line": 232
    },
    {
      "id": "src/_pytest/doctest.py:DoctestItem",
      "type": "class",
      "name": "DoctestItem",
      "file": "src/_pytest/doctest.py",
      "line": 252
    },
    {
      "id": "src/_pytest/doctest.py:DoctestItem.from_parent",
      "type": "function",
      "name": "DoctestItem.from_parent",
      "file": "src/_pytest/doctest.py",
      "line": 267
    },
    {
      "id": "src/_pytest/doctest.py:DoctestItem.setup",
      "type": "function",
      "name": "DoctestItem.setup",
      "file": "src/_pytest/doctest.py",
      "line": 279
    },
    {
      "id": "src/_pytest/doctest.py:DoctestItem.runtest",
      "type": "function",
      "name": "DoctestItem.runtest",
      "file": "src/_pytest/doctest.py",
      "line": 289
    },
    {
      "id": "src/_pytest/doctest.py:DoctestItem._disable_output_capturing_for_darwin",
      "type": "function",
      "name": "DoctestItem._disable_output_capturing_for_darwin",
      "file": "src/_pytest/doctest.py",
      "line": 301
    },
    {
      "id": "src/_pytest/doctest.py:DoctestItem.repr_failure",
      "type": "function",
      "name": "DoctestItem.repr_failure",
      "file": "src/_pytest/doctest.py",
      "line": 313
    },
    {
      "id": "src/_pytest/doctest.py:DoctestItem.reportinfo",
      "type": "function",
      "name": "DoctestItem.reportinfo",
      "file": "src/_pytest/doctest.py",
      "line": 377
    },
    {
      "id": "src/_pytest/doctest.py:_get_flag_lookup",
      "type": "function",
      "name": "_get_flag_lookup",
      "file": "src/_pytest/doctest.py",
      "line": 382
    },
    {
      "id": "src/_pytest/doctest.py:get_optionflags",
      "type": "function",
      "name": "get_optionflags",
      "file": "src/_pytest/doctest.py",
      "line": 398
    },
    {
      "id": "src/_pytest/doctest.py:_get_continue_on_failure",
      "type": "function",
      "name": "_get_continue_on_failure",
      "file": "src/_pytest/doctest.py",
      "line": 407
    },
    {
      "id": "src/_pytest/doctest.py:DoctestTextfile",
      "type": "class",
      "name": "DoctestTextfile",
      "file": "src/_pytest/doctest.py",
      "line": 417
    },
    {
      "id": "src/_pytest/doctest.py:DoctestTextfile.collect",
      "type": "function",
      "name": "DoctestTextfile.collect",
      "file": "src/_pytest/doctest.py",
      "line": 420
    },
    {
      "id": "src/_pytest/doctest.py:_check_all_skipped",
      "type": "function",
      "name": "_check_all_skipped",
      "file": "src/_pytest/doctest.py",
      "line": 448
    },
    {
      "id": "src/_pytest/doctest.py:_is_mocked",
      "type": "function",
      "name": "_is_mocked",
      "file": "src/_pytest/doctest.py",
      "line": 458
    },
    {
      "id": "src/_pytest/doctest.py:_patch_unwrap_mock_aware",
      "type": "function",
      "name": "_patch_unwrap_mock_aware",
      "file": "src/_pytest/doctest.py",
      "line": 468
    },
    {
      "id": "src/_pytest/doctest.py:_patch_unwrap_mock_aware._mock_aware_unwrap",
      "type": "function",
      "name": "_patch_unwrap_mock_aware._mock_aware_unwrap",
      "file": "src/_pytest/doctest.py",
      "line": 473
    },
    {
      "id": "src/_pytest/doctest.py:DoctestModule",
      "type": "class",
      "name": "DoctestModule",
      "file": "src/_pytest/doctest.py",
      "line": 497
    },
    {
      "id": "src/_pytest/doctest.py:DoctestModule.collect",
      "type": "function",
      "name": "DoctestModule.collect",
      "file": "src/_pytest/doctest.py",
      "line": 498
    },
    {
      "id": "src/_pytest/doctest.py:DoctestModule.collect.MockAwareDocTestFinder",
      "type": "class",
      "name": "DoctestModule.collect.MockAwareDocTestFinder",
      "file": "src/_pytest/doctest.py",
      "line": 501
    },
    {
      "id": "src/_pytest/doctest.py:DoctestModule.collect.MockAwareDocTestFinder._find_lineno",
      "type": "function",
      "name": "DoctestModule.collect.MockAwareDocTestFinder._find_lineno",
      "file": "src/_pytest/doctest.py",
      "line": 508
    },
    {
      "id": "src/_pytest/doctest.py:DoctestModule.collect.MockAwareDocTestFinder._find",
      "type": "function",
      "name": "DoctestModule.collect.MockAwareDocTestFinder._find",
      "file": "src/_pytest/doctest.py",
      "line": 528
    },
    {
      "id": "src/_pytest/doctest.py:_setup_fixtures",
      "type": "function",
      "name": "_setup_fixtures",
      "file": "src/_pytest/doctest.py",
      "line": 574
    },
    {
      "id": "src/_pytest/doctest.py:_setup_fixtures.func",
      "type": "function",
      "name": "_setup_fixtures.func",
      "file": "src/_pytest/doctest.py",
      "line": 577
    },
    {
      "id": "src/_pytest/doctest.py:_init_checker_class",
      "type": "function",
      "name": "_init_checker_class",
      "file": "src/_pytest/doctest.py",
      "line": 590
    },
    {
      "id": "src/_pytest/doctest.py:_init_checker_class.LiteralsOutputChecker",
      "type": "class",
      "name": "_init_checker_class.LiteralsOutputChecker",
      "file": "src/_pytest/doctest.py",
      "line": 594
    },
    {
      "id": "src/_pytest/doctest.py:_init_checker_class.LiteralsOutputChecker.check_output",
      "type": "function",
      "name": "_init_checker_class.LiteralsOutputChecker.check_output",
      "file": "src/_pytest/doctest.py",
      "line": 624
    },
    {
      "id": "src/_pytest/doctest.py:_init_checker_class.LiteralsOutputChecker.check_output.remove_prefixes",
      "type": "function",
      "name": "_init_checker_class.LiteralsOutputChecker.check_output.remove_prefixes",
      "file": "src/_pytest/doctest.py",
      "line": 635
    },
    {
      "id": "src/_pytest/doctest.py:_init_checker_class.LiteralsOutputChecker._remove_unwanted_precision",
      "type": "function",
      "name": "_init_checker_class.LiteralsOutputChecker._remove_unwanted_precision",
      "file": "src/_pytest/doctest.py",
      "line": 651
    },
    {
      "id": "src/_pytest/doctest.py:_get_checker",
      "type": "function",
      "name": "_get_checker",
      "file": "src/_pytest/doctest.py",
      "line": 678
    },
    {
      "id": "src/_pytest/doctest.py:_get_allow_unicode_flag",
      "type": "function",
      "name": "_get_allow_unicode_flag",
      "file": "src/_pytest/doctest.py",
      "line": 698
    },
    {
      "id": "src/_pytest/doctest.py:_get_allow_bytes_flag",
      "type": "function",
      "name": "_get_allow_bytes_flag",
      "file": "src/_pytest/doctest.py",
      "line": 705
    },
    {
      "id": "src/_pytest/doctest.py:_get_number_flag",
      "type": "function",
      "name": "_get_number_flag",
      "file": "src/_pytest/doctest.py",
      "line": 712
    },
    {
      "id": "src/_pytest/doctest.py:_get_report_choice",
      "type": "function",
      "name": "_get_report_choice",
      "file": "src/_pytest/doctest.py",
      "line": 719
    },
    {
      "id": "src/_pytest/doctest.py:doctest_namespace",
      "type": "function",
      "name": "doctest_namespace",
      "file": "src/_pytest/doctest.py",
      "line": 737
    },
    {
      "id": "src/_pytest/setuponly.py",
      "type": "file",
      "name": "setuponly.py",
      "file": "src/_pytest/setuponly.py",
      "line": 0
    },
    {
      "id": "src/_pytest/setuponly.py:pytest_addoption",
      "type": "function",
      "name": "pytest_addoption",
      "file": "src/_pytest/setuponly.py",
      "line": 15
    },
    {
      "id": "src/_pytest/setuponly.py:pytest_fixture_setup",
      "type": "function",
      "name": "pytest_fixture_setup",
      "file": "src/_pytest/setuponly.py",
      "line": 32
    },
    {
      "id": "src/_pytest/setuponly.py:pytest_fixture_post_finalizer",
      "type": "function",
      "name": "pytest_fixture_post_finalizer",
      "file": "src/_pytest/setuponly.py",
      "line": 51
    },
    {
      "id": "src/_pytest/setuponly.py:_show_fixture_action",
      "type": "function",
      "name": "_show_fixture_action",
      "file": "src/_pytest/setuponly.py",
      "line": 60
    },
    {
      "id": "src/_pytest/setuponly.py:pytest_cmdline_main",
      "type": "function",
      "name": "pytest_cmdline_main",
      "file": "src/_pytest/setuponly.py",
      "line": 94
    },
    {
      "id": "src/_pytest/nose.py",
      "type": "file",
      "name": "nose.py",
      "file": "src/_pytest/nose.py",
      "line": 0
    },
    {
      "id": "src/_pytest/nose.py:pytest_runtest_setup",
      "type": "function",
      "name": "pytest_runtest_setup",
      "file": "src/_pytest/nose.py",
      "line": 13
    },
    {
      "id": "src/_pytest/nose.py:call_optional",
      "type": "function",
      "name": "call_optional",
      "file": "src/_pytest/nose.py",
      "line": 33
    },
    {
      "id": "src/_pytest/nodes.py",
      "type": "file",
      "name": "nodes.py",
      "file": "src/_pytest/nodes.py",
      "line": 0
    },
    {
      "id": "src/_pytest/nodes.py:iterparentnodeids",
      "type": "function",
      "name": "iterparentnodeids",
      "file": "src/_pytest/nodes.py",
      "line": 52
    },
    {
      "id": "src/_pytest/nodes.py:_check_path",
      "type": "function",
      "name": "_check_path",
      "file": "src/_pytest/nodes.py",
      "line": 97
    },
    {
      "id": "src/_pytest/nodes.py:_imply_path",
      "type": "function",
      "name": "_imply_path",
      "file": "src/_pytest/nodes.py",
      "line": 105
    },
    {
      "id": "src/_pytest/nodes.py:NodeMeta",
      "type": "class",
      "name": "NodeMeta",
      "file": "src/_pytest/nodes.py",
      "line": 129
    },
    {
      "id": "src/_pytest/nodes.py:NodeMeta.__call__",
      "type": "function",
      "name": "NodeMeta.__call__",
      "file": "src/_pytest/nodes.py",
      "line": 130
    },
    {
      "id": "src/_pytest/nodes.py:NodeMeta._create",
      "type": "function",
      "name": "NodeMeta._create",
      "file": "src/_pytest/nodes.py",
      "line": 139
    },
    {
      "id": "src/_pytest/nodes.py:Node",
      "type": "class",
      "name": "Node",
      "file": "src/_pytest/nodes.py",
      "line": 159
    },
    {
      "id": "src/_pytest/nodes.py:Node.from_parent",
      "type": "function",
      "name": "Node.from_parent",
      "file": "src/_pytest/nodes.py",
      "line": 248
    },
    {
      "id": "src/_pytest/nodes.py:Node.ihook",
      "type": "function",
      "name": "Node.ihook",
      "file": "src/_pytest/nodes.py",
      "line": 266
    },
    {
      "id": "src/_pytest/nodes.py:Node.__repr__",
      "type": "function",
      "name": "Node.__repr__",
      "file": "src/_pytest/nodes.py",
      "line": 270
    },
    {
      "id": "src/_pytest/nodes.py:Node.warn",
      "type": "function",
      "name": "Node.warn",
      "file": "src/_pytest/nodes.py",
      "line": 273
    },
    {
      "id": "src/_pytest/nodes.py:Node.nodeid",
      "type": "function",
      "name": "Node.nodeid",
      "file": "src/_pytest/nodes.py",
      "line": 313
    },
    {
      "id": "src/_pytest/nodes.py:Node.__hash__",
      "type": "function",
      "name": "Node.__hash__",
      "file": "src/_pytest/nodes.py",
      "line": 317
    },
    {
      "id": "src/_pytest/nodes.py:Node.setup",
      "type": "function",
      "name": "Node.setup",
      "file": "src/_pytest/nodes.py",
      "line": 320
    },
    {
      "id": "src/_pytest/nodes.py:Node.teardown",
      "type": "function",
      "name": "Node.teardown",
      "file": "src/_pytest/nodes.py",
      "line": 323
    },
    {
      "id": "src/_pytest/nodes.py:Node.listchain",
      "type": "function",
      "name": "Node.listchain",
      "file": "src/_pytest/nodes.py",
      "line": 326
    },
    {
      "id": "src/_pytest/nodes.py:Node.add_marker",
      "type": "function",
      "name": "Node.add_marker",
      "file": "src/_pytest/nodes.py",
      "line": 340
    },
    {
      "id": "src/_pytest/nodes.py:Node.iter_markers",
      "type": "function",
      "name": "Node.iter_markers",
      "file": "src/_pytest/nodes.py",
      "line": 364
    },
    {
      "id": "src/_pytest/nodes.py:Node.iter_markers_with_node",
      "type": "function",
      "name": "Node.iter_markers_with_node",
      "file": "src/_pytest/nodes.py",
      "line": 372
    },
    {
      "id": "src/_pytest/nodes.py:Node.get_closest_marker",
      "type": "function",
      "name": "Node.get_closest_marker",
      "file": "src/_pytest/nodes.py",
      "line": 393
    },
    {
      "id": "src/_pytest/nodes.py:Node.listextrakeywords",
      "type": "function",
      "name": "Node.listextrakeywords",
      "file": "src/_pytest/nodes.py",
      "line": 404
    },
    {
      "id": "src/_pytest/nodes.py:Node.listnames",
      "type": "function",
      "name": "Node.listnames",
      "file": "src/_pytest/nodes.py",
      "line": 411
    },
    {
      "id": "src/_pytest/nodes.py:Node.addfinalizer",
      "type": "function",
      "name": "Node.addfinalizer",
      "file": "src/_pytest/nodes.py",
      "line": 414
    },
    {
      "id": "src/_pytest/nodes.py:Node.getparent",
      "type": "function",
      "name": "Node.getparent",
      "file": "src/_pytest/nodes.py",
      "line": 423
    },
    {
      "id": "src/_pytest/nodes.py:Node._traceback_filter",
      "type": "function",
      "name": "Node._traceback_filter",
      "file": "src/_pytest/nodes.py",
      "line": 436
    },
    {
      "id": "src/_pytest/nodes.py:Node._repr_failure_py",
      "type": "function",
      "name": "Node._repr_failure_py",
      "file": "src/_pytest/nodes.py",
      "line": 439
    },
    {
      "id": "src/_pytest/nodes.py:Node.repr_failure",
      "type": "function",
      "name": "Node.repr_failure",
      "file": "src/_pytest/nodes.py",
      "line": 494
    },
    {
      "id": "src/_pytest/nodes.py:get_fslocation_from_item",
      "type": "function",
      "name": "get_fslocation_from_item",
      "file": "src/_pytest/nodes.py",
      "line": 508
    },
    {
      "id": "src/_pytest/nodes.py:Collector",
      "type": "class",
      "name": "Collector",
      "file": "src/_pytest/nodes.py",
      "line": 527
    },
    {
      "id": "src/_pytest/nodes.py:Collector.CollectError",
      "type": "class",
      "name": "Collector.CollectError",
      "file": "src/_pytest/nodes.py",
      "line": 531
    },
    {
      "id": "src/_pytest/nodes.py:Collector.collect",
      "type": "function",
      "name": "Collector.collect",
      "file": "src/_pytest/nodes.py",
      "line": 534
    },
    {
      "id": "src/_pytest/nodes.py:Collector.repr_failure",
      "type": "function",
      "name": "Collector.repr_failure",
      "file": "src/_pytest/nodes.py",
      "line": 540
    },
    {
      "id": "src/_pytest/nodes.py:Collector._traceback_filter",
      "type": "function",
      "name": "Collector._traceback_filter",
      "file": "src/_pytest/nodes.py",
      "line": 561
    },
    {
      "id": "src/_pytest/nodes.py:_check_initialpaths_for_relpath",
      "type": "function",
      "name": "_check_initialpaths_for_relpath",
      "file": "src/_pytest/nodes.py",
      "line": 571
    },
    {
      "id": "src/_pytest/nodes.py:FSCollector",
      "type": "class",
      "name": "FSCollector",
      "file": "src/_pytest/nodes.py",
      "line": 579
    },
    {
      "id": "src/_pytest/nodes.py:FSCollector.from_parent",
      "type": "function",
      "name": "FSCollector.from_parent",
      "file": "src/_pytest/nodes.py",
      "line": 635
    },
    {
      "id": "src/_pytest/nodes.py:FSCollector.gethookproxy",
      "type": "function",
      "name": "FSCollector.gethookproxy",
      "file": "src/_pytest/nodes.py",
      "line": 646
    },
    {
      "id": "src/_pytest/nodes.py:FSCollector.isinitpath",
      "type": "function",
      "name": "FSCollector.isinitpath",
      "file": "src/_pytest/nodes.py",
      "line": 650
    },
    {
      "id": "src/_pytest/nodes.py:File",
      "type": "class",
      "name": "File",
      "file": "src/_pytest/nodes.py",
      "line": 655
    },
    {
      "id": "src/_pytest/nodes.py:Item",
      "type": "class",
      "name": "Item",
      "file": "src/_pytest/nodes.py",
      "line": 662
    },
    {
      "id": "src/_pytest/nodes.py:Item._check_item_and_collector_diamond_inheritance",
      "type": "function",
      "name": "Item._check_item_and_collector_diamond_inheritance",
      "file": "src/_pytest/nodes.py",
      "line": 699
    },
    {
      "id": "src/_pytest/nodes.py:Item.runtest",
      "type": "function",
      "name": "Item.runtest",
      "file": "src/_pytest/nodes.py",
      "line": 728
    },
    {
      "id": "src/_pytest/nodes.py:Item.add_report_section",
      "type": "function",
      "name": "Item.add_report_section",
      "file": "src/_pytest/nodes.py",
      "line": 737
    },
    {
      "id": "src/_pytest/nodes.py:Item.reportinfo",
      "type": "function",
      "name": "Item.reportinfo",
      "file": "src/_pytest/nodes.py",
      "line": 754
    },
    {
      "id": "src/_pytest/nodes.py:Item.location",
      "type": "function",
      "name": "Item.location",
      "file": "src/_pytest/nodes.py",
      "line": 768
    },
    {
      "id": "src/_pytest/threadexception.py",
      "type": "file",
      "name": "threadexception.py",
      "file": "src/_pytest/threadexception.py",
      "line": 0
    },
    {
      "id": "src/_pytest/threadexception.py:catch_threading_exception",
      "type": "class",
      "name": "catch_threading_exception",
      "file": "src/_pytest/threadexception.py",
      "line": 15
    },
    {
      "id": "src/_pytest/threadexception.py:catch_threading_exception._hook",
      "type": "function",
      "name": "catch_threading_exception._hook",
      "file": "src/_pytest/threadexception.py",
      "line": 40
    },
    {
      "id": "src/_pytest/threadexception.py:catch_threading_exception.__enter__",
      "type": "function",
      "name": "catch_threading_exception.__enter__",
      "file": "src/_pytest/threadexception.py",
      "line": 43
    },
    {
      "id": "src/_pytest/threadexception.py:catch_threading_exception.__exit__",
      "type": "function",
      "name": "catch_threading_exception.__exit__",
      "file": "src/_pytest/threadexception.py",
      "line": 48
    },
    {
      "id": "src/_pytest/threadexception.py:thread_exception_runtest_hook",
      "type": "function",
      "name": "thread_exception_runtest_hook",
      "file": "src/_pytest/threadexception.py",
      "line": 60
    },
    {
      "id": "src/_pytest/threadexception.py:pytest_runtest_setup",
      "type": "function",
      "name": "pytest_runtest_setup",
      "file": "src/_pytest/threadexception.py",
      "line": 77
    },
    {
      "id": "src/_pytest/threadexception.py:pytest_runtest_call",
      "type": "function",
      "name": "pytest_runtest_call",
      "file": "src/_pytest/threadexception.py",
      "line": 82
    },
    {
      "id": "src/_pytest/threadexception.py:pytest_runtest_teardown",
      "type": "function",
      "name": "pytest_runtest_teardown",
      "file": "src/_pytest/threadexception.py",
      "line": 87
    },
    {
      "id": "src/_pytest/main.py",
      "type": "file",
      "name": "main.py",
      "file": "src/_pytest/main.py",
      "line": 0
    },
    {
      "id": "src/_pytest/main.py:pytest_addoption",
      "type": "function",
      "name": "pytest_addoption",
      "file": "src/_pytest/main.py",
      "line": 50
    },
    {
      "id": "src/_pytest/main.py:validate_basetemp",
      "type": "function",
      "name": "validate_basetemp",
      "file": "src/_pytest/main.py",
      "line": 232
    },
    {
      "id": "src/_pytest/main.py:validate_basetemp.is_ancestor",
      "type": "function",
      "name": "validate_basetemp.is_ancestor",
      "file": "src/_pytest/main.py",
      "line": 240
    },
    {
      "id": "src/_pytest/main.py:wrap_session",
      "type": "function",
      "name": "wrap_session",
      "file": "src/_pytest/main.py",
      "line": 257
    },
    {
      "id": "src/_pytest/main.py:pytest_cmdline_main",
      "type": "function",
      "name": "pytest_cmdline_main",
      "file": "src/_pytest/main.py",
      "line": 316
    },
    {
      "id": "src/_pytest/main.py:_main",
      "type": "function",
      "name": "_main",
      "file": "src/_pytest/main.py",
      "line": 320
    },
    {
      "id": "src/_pytest/main.py:pytest_collection",
      "type": "function",
      "name": "pytest_collection",
      "file": "src/_pytest/main.py",
      "line": 333
    },
    {
      "id": "src/_pytest/main.py:pytest_runtestloop",
      "type": "function",
      "name": "pytest_runtestloop",
      "file": "src/_pytest/main.py",
      "line": 337
    },
    {
      "id": "src/_pytest/main.py:_in_venv",
      "type": "function",
      "name": "_in_venv",
      "file": "src/_pytest/main.py",
      "line": 357
    },
    {
      "id": "src/_pytest/main.py:pytest_ignore_collect",
      "type": "function",
      "name": "pytest_ignore_collect",
      "file": "src/_pytest/main.py",
      "line": 377
    },
    {
      "id": "src/_pytest/main.py:pytest_collection_modifyitems",
      "type": "function",
      "name": "pytest_collection_modifyitems",
      "file": "src/_pytest/main.py",
      "line": 412
    },
    {
      "id": "src/_pytest/main.py:FSHookProxy",
      "type": "class",
      "name": "FSHookProxy",
      "file": "src/_pytest/main.py",
      "line": 430
    },
    {
      "id": "src/_pytest/main.py:FSHookProxy.__getattr__",
      "type": "function",
      "name": "FSHookProxy.__getattr__",
      "file": "src/_pytest/main.py",
      "line": 435
    },
    {
      "id": "src/_pytest/main.py:Interrupted",
      "type": "class",
      "name": "Interrupted",
      "file": "src/_pytest/main.py",
      "line": 441
    },
    {
      "id": "src/_pytest/main.py:Failed",
      "type": "class",
      "name": "Failed",
      "file": "src/_pytest/main.py",
      "line": 447
    },
    {
      "id": "src/_pytest/main.py:_bestrelpath_cache",
      "type": "class",
      "name": "_bestrelpath_cache",
      "file": "src/_pytest/main.py",
      "line": 452
    },
    {
      "id": "src/_pytest/main.py:_bestrelpath_cache.__missing__",
      "type": "function",
      "name": "_bestrelpath_cache.__missing__",
      "file": "src/_pytest/main.py",
      "line": 457
    },
    {
      "id": "src/_pytest/main.py:Session",
      "type": "class",
      "name": "Session",
      "file": "src/_pytest/main.py",
      "line": 464
    },
    {
      "id": "src/_pytest/main.py:Session.from_config",
      "type": "function",
      "name": "Session.from_config",
      "file": "src/_pytest/main.py",
      "line": 494
    },
    {
      "id": "src/_pytest/main.py:Session.__repr__",
      "type": "function",
      "name": "Session.__repr__",
      "file": "src/_pytest/main.py",
      "line": 498
    },
    {
      "id": "src/_pytest/main.py:Session.startpath",
      "type": "function",
      "name": "Session.startpath",
      "file": "src/_pytest/main.py",
      "line": 508
    },
    {
      "id": "src/_pytest/main.py:Session._node_location_to_relpath",
      "type": "function",
      "name": "Session._node_location_to_relpath",
      "file": "src/_pytest/main.py",
      "line": 515
    },
    {
      "id": "src/_pytest/main.py:Session.pytest_collectstart",
      "type": "function",
      "name": "Session.pytest_collectstart",
      "file": "src/_pytest/main.py",
      "line": 520
    },
    {
      "id": "src/_pytest/main.py:Session.pytest_runtest_logreport",
      "type": "function",
      "name": "Session.pytest_runtest_logreport",
      "file": "src/_pytest/main.py",
      "line": 527
    },
    {
      "id": "src/_pytest/main.py:Session.isinitpath",
      "type": "function",
      "name": "Session.isinitpath",
      "file": "src/_pytest/main.py",
      "line": 538
    },
    {
      "id": "src/_pytest/main.py:Session.gethookproxy",
      "type": "function",
      "name": "Session.gethookproxy",
      "file": "src/_pytest/main.py",
      "line": 543
    },
    {
      "id": "src/_pytest/main.py:Session._recurse",
      "type": "function",
      "name": "Session._recurse",
      "file": "src/_pytest/main.py",
      "line": 565
    },
    {
      "id": "src/_pytest/main.py:Session._collectfile",
      "type": "function",
      "name": "Session._collectfile",
      "file": "src/_pytest/main.py",
      "line": 574
    },
    {
      "id": "src/_pytest/main.py:Session.perform_collect",
      "type": "function",
      "name": "Session.perform_collect",
      "file": "src/_pytest/main.py",
      "line": 610
    },
    {
      "id": "src/_pytest/main.py:Session.collect",
      "type": "function",
      "name": "Session.collect",
      "file": "src/_pytest/main.py",
      "line": 681
    },
    {
      "id": "src/_pytest/main.py:Session.genitems",
      "type": "function",
      "name": "Session.genitems",
      "file": "src/_pytest/main.py",
      "line": 827
    },
    {
      "id": "src/_pytest/main.py:search_pypath",
      "type": "function",
      "name": "search_pypath",
      "file": "src/_pytest/main.py",
      "line": 843
    },
    {
      "id": "src/_pytest/main.py:resolve_collection_argument",
      "type": "function",
      "name": "resolve_collection_argument",
      "file": "src/_pytest/main.py",
      "line": 860
    },
    {
      "id": "src/_pytest/monkeypatch.py",
      "type": "file",
      "name": "monkeypatch.py",
      "file": "src/_pytest/monkeypatch.py",
      "line": 0
    },
    {
      "id": "src/_pytest/monkeypatch.py:monkeypatch",
      "type": "function",
      "name": "monkeypatch",
      "file": "src/_pytest/monkeypatch.py",
      "line": 30
    },
    {
      "id": "src/_pytest/monkeypatch.py:resolve",
      "type": "function",
      "name": "resolve",
      "file": "src/_pytest/monkeypatch.py",
      "line": 59
    },
    {
      "id": "src/_pytest/monkeypatch.py:annotated_getattr",
      "type": "function",
      "name": "annotated_getattr",
      "file": "src/_pytest/monkeypatch.py",
      "line": 87
    },
    {
      "id": "src/_pytest/monkeypatch.py:derive_importpath",
      "type": "function",
      "name": "derive_importpath",
      "file": "src/_pytest/monkeypatch.py",
      "line": 99
    },
    {
      "id": "src/_pytest/monkeypatch.py:Notset",
      "type": "class",
      "name": "Notset",
      "file": "src/_pytest/monkeypatch.py",
      "line": 109
    },
    {
      "id": "src/_pytest/monkeypatch.py:Notset.__repr__",
      "type": "function",
      "name": "Notset.__repr__",
      "file": "src/_pytest/monkeypatch.py",
      "line": 110
    },
    {
      "id": "src/_pytest/monkeypatch.py:MonkeyPatch",
      "type": "class",
      "name": "MonkeyPatch",
      "file": "src/_pytest/monkeypatch.py",
      "line": 118
    },
    {
      "id": "src/_pytest/monkeypatch.py:MonkeyPatch.context",
      "type": "function",
      "name": "MonkeyPatch.context",
      "file": "src/_pytest/monkeypatch.py",
      "line": 139
    },
    {
      "id": "src/_pytest/monkeypatch.py:MonkeyPatch.setattr",
      "type": "function",
      "name": "MonkeyPatch.setattr",
      "file": "src/_pytest/monkeypatch.py",
      "line": 184
    },
    {
      "id": "src/_pytest/monkeypatch.py:MonkeyPatch.delattr",
      "type": "function",
      "name": "MonkeyPatch.delattr",
      "file": "src/_pytest/monkeypatch.py",
      "line": 256
    },
    {
      "id": "src/_pytest/monkeypatch.py:MonkeyPatch.setitem",
      "type": "function",
      "name": "MonkeyPatch.setitem",
      "file": "src/_pytest/monkeypatch.py",
      "line": 294
    },
    {
      "id": "src/_pytest/monkeypatch.py:MonkeyPatch.delitem",
      "type": "function",
      "name": "MonkeyPatch.delitem",
      "file": "src/_pytest/monkeypatch.py",
      "line": 300
    },
    {
      "id": "src/_pytest/monkeypatch.py:MonkeyPatch.setenv",
      "type": "function",
      "name": "MonkeyPatch.setenv",
      "file": "src/_pytest/monkeypatch.py",
      "line": 314
    },
    {
      "id": "src/_pytest/monkeypatch.py:MonkeyPatch.delenv",
      "type": "function",
      "name": "MonkeyPatch.delenv",
      "file": "src/_pytest/monkeypatch.py",
      "line": 336
    },
    {
      "id": "src/_pytest/monkeypatch.py:MonkeyPatch.syspath_prepend",
      "type": "function",
      "name": "MonkeyPatch.syspath_prepend",
      "file": "src/_pytest/monkeypatch.py",
      "line": 345
    },
    {
      "id": "src/_pytest/monkeypatch.py:MonkeyPatch.chdir",
      "type": "function",
      "name": "MonkeyPatch.chdir",
      "file": "src/_pytest/monkeypatch.py",
      "line": 370
    },
    {
      "id": "src/_pytest/monkeypatch.py:MonkeyPatch.undo",
      "type": "function",
      "name": "MonkeyPatch.undo",
      "file": "src/_pytest/monkeypatch.py",
      "line": 380
    },
    {
      "id": "src/_pytest/legacypath.py",
      "type": "file",
      "name": "legacypath.py",
      "file": "src/_pytest/legacypath.py",
      "line": 0
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir",
      "type": "class",
      "name": "Testdir",
      "file": "src/_pytest/legacypath.py",
      "line": 40
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.tmpdir",
      "type": "function",
      "name": "Testdir.tmpdir",
      "file": "src/_pytest/legacypath.py",
      "line": 58
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.test_tmproot",
      "type": "function",
      "name": "Testdir.test_tmproot",
      "file": "src/_pytest/legacypath.py",
      "line": 63
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.request",
      "type": "function",
      "name": "Testdir.request",
      "file": "src/_pytest/legacypath.py",
      "line": 67
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.plugins",
      "type": "function",
      "name": "Testdir.plugins",
      "file": "src/_pytest/legacypath.py",
      "line": 75
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.monkeypatch",
      "type": "function",
      "name": "Testdir.monkeypatch",
      "file": "src/_pytest/legacypath.py",
      "line": 79
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.make_hook_recorder",
      "type": "function",
      "name": "Testdir.make_hook_recorder",
      "file": "src/_pytest/legacypath.py",
      "line": 82
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.chdir",
      "type": "function",
      "name": "Testdir.chdir",
      "file": "src/_pytest/legacypath.py",
      "line": 86
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.finalize",
      "type": "function",
      "name": "Testdir.finalize",
      "file": "src/_pytest/legacypath.py",
      "line": 90
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.makefile",
      "type": "function",
      "name": "Testdir.makefile",
      "file": "src/_pytest/legacypath.py",
      "line": 94
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.makeconftest",
      "type": "function",
      "name": "Testdir.makeconftest",
      "file": "src/_pytest/legacypath.py",
      "line": 106
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.makeini",
      "type": "function",
      "name": "Testdir.makeini",
      "file": "src/_pytest/legacypath.py",
      "line": 110
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.getinicfg",
      "type": "function",
      "name": "Testdir.getinicfg",
      "file": "src/_pytest/legacypath.py",
      "line": 114
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.makepyprojecttoml",
      "type": "function",
      "name": "Testdir.makepyprojecttoml",
      "file": "src/_pytest/legacypath.py",
      "line": 118
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.makepyfile",
      "type": "function",
      "name": "Testdir.makepyfile",
      "file": "src/_pytest/legacypath.py",
      "line": 122
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.maketxtfile",
      "type": "function",
      "name": "Testdir.maketxtfile",
      "file": "src/_pytest/legacypath.py",
      "line": 126
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.syspathinsert",
      "type": "function",
      "name": "Testdir.syspathinsert",
      "file": "src/_pytest/legacypath.py",
      "line": 130
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.mkdir",
      "type": "function",
      "name": "Testdir.mkdir",
      "file": "src/_pytest/legacypath.py",
      "line": 134
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.mkpydir",
      "type": "function",
      "name": "Testdir.mkpydir",
      "file": "src/_pytest/legacypath.py",
      "line": 138
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.copy_example",
      "type": "function",
      "name": "Testdir.copy_example",
      "file": "src/_pytest/legacypath.py",
      "line": 142
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.getnode",
      "type": "function",
      "name": "Testdir.getnode",
      "file": "src/_pytest/legacypath.py",
      "line": 146
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.getpathnode",
      "type": "function",
      "name": "Testdir.getpathnode",
      "file": "src/_pytest/legacypath.py",
      "line": 150
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.genitems",
      "type": "function",
      "name": "Testdir.genitems",
      "file": "src/_pytest/legacypath.py",
      "line": 154
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.runitem",
      "type": "function",
      "name": "Testdir.runitem",
      "file": "src/_pytest/legacypath.py",
      "line": 158
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.inline_runsource",
      "type": "function",
      "name": "Testdir.inline_runsource",
      "file": "src/_pytest/legacypath.py",
      "line": 162
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.inline_genitems",
      "type": "function",
      "name": "Testdir.inline_genitems",
      "file": "src/_pytest/legacypath.py",
      "line": 166
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.inline_run",
      "type": "function",
      "name": "Testdir.inline_run",
      "file": "src/_pytest/legacypath.py",
      "line": 170
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.runpytest_inprocess",
      "type": "function",
      "name": "Testdir.runpytest_inprocess",
      "file": "src/_pytest/legacypath.py",
      "line": 176
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.runpytest",
      "type": "function",
      "name": "Testdir.runpytest",
      "file": "src/_pytest/legacypath.py",
      "line": 180
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.parseconfig",
      "type": "function",
      "name": "Testdir.parseconfig",
      "file": "src/_pytest/legacypath.py",
      "line": 184
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.parseconfigure",
      "type": "function",
      "name": "Testdir.parseconfigure",
      "file": "src/_pytest/legacypath.py",
      "line": 188
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.getitem",
      "type": "function",
      "name": "Testdir.getitem",
      "file": "src/_pytest/legacypath.py",
      "line": 192
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.getitems",
      "type": "function",
      "name": "Testdir.getitems",
      "file": "src/_pytest/legacypath.py",
      "line": 196
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.getmodulecol",
      "type": "function",
      "name": "Testdir.getmodulecol",
      "file": "src/_pytest/legacypath.py",
      "line": 200
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.collect_by_name",
      "type": "function",
      "name": "Testdir.collect_by_name",
      "file": "src/_pytest/legacypath.py",
      "line": 206
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.popen",
      "type": "function",
      "name": "Testdir.popen",
      "file": "src/_pytest/legacypath.py",
      "line": 212
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.run",
      "type": "function",
      "name": "Testdir.run",
      "file": "src/_pytest/legacypath.py",
      "line": 223
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.runpython",
      "type": "function",
      "name": "Testdir.runpython",
      "file": "src/_pytest/legacypath.py",
      "line": 227
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.runpython_c",
      "type": "function",
      "name": "Testdir.runpython_c",
      "file": "src/_pytest/legacypath.py",
      "line": 231
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.runpytest_subprocess",
      "type": "function",
      "name": "Testdir.runpytest_subprocess",
      "file": "src/_pytest/legacypath.py",
      "line": 235
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.spawn_pytest",
      "type": "function",
      "name": "Testdir.spawn_pytest",
      "file": "src/_pytest/legacypath.py",
      "line": 239
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.spawn",
      "type": "function",
      "name": "Testdir.spawn",
      "file": "src/_pytest/legacypath.py",
      "line": 245
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.__repr__",
      "type": "function",
      "name": "Testdir.__repr__",
      "file": "src/_pytest/legacypath.py",
      "line": 249
    },
    {
      "id": "src/_pytest/legacypath.py:Testdir.__str__",
      "type": "function",
      "name": "Testdir.__str__",
      "file": "src/_pytest/legacypath.py",
      "line": 252
    },
    {
      "id": "src/_pytest/legacypath.py:LegacyTestdirPlugin",
      "type": "class",
      "name": "LegacyTestdirPlugin",
      "file": "src/_pytest/legacypath.py",
      "line": 256
    },
    {
      "id": "src/_pytest/legacypath.py:LegacyTestdirPlugin.testdir",
      "type": "function",
      "name": "LegacyTestdirPlugin.testdir",
      "file": "src/_pytest/legacypath.py",
      "line": 259
    },
    {
      "id": "src/_pytest/legacypath.py:TempdirFactory",
      "type": "class",
      "name": "TempdirFactory",
      "file": "src/_pytest/legacypath.py",
      "line": 271
    },
    {
      "id": "src/_pytest/legacypath.py:TempdirFactory.mktemp",
      "type": "function",
      "name": "TempdirFactory.mktemp",
      "file": "src/_pytest/legacypath.py",
      "line": 290
    },
    {
      "id": "src/_pytest/legacypath.py:TempdirFactory.getbasetemp",
      "type": "function",
      "name": "TempdirFactory.getbasetemp",
      "file": "src/_pytest/legacypath.py",
      "line": 294
    },
    {
      "id": "src/_pytest/legacypath.py:LegacyTmpdirPlugin",
      "type": "class",
      "name": "LegacyTmpdirPlugin",
      "file": "src/_pytest/legacypath.py",
      "line": 299
    },
    {
      "id": "src/_pytest/legacypath.py:LegacyTmpdirPlugin.tmpdir_factory",
      "type": "function",
      "name": "LegacyTmpdirPlugin.tmpdir_factory",
      "file": "src/_pytest/legacypath.py",
      "line": 302
    },
    {
      "id": "src/_pytest/legacypath.py:LegacyTmpdirPlugin.tmpdir",
      "type": "function",
      "name": "LegacyTmpdirPlugin.tmpdir",
      "file": "src/_pytest/legacypath.py",
      "line": 309
    },
    {
      "id": "src/_pytest/legacypath.py:Cache_makedir",
      "type": "function",
      "name": "Cache_makedir",
      "file": "src/_pytest/legacypath.py",
      "line": 331
    },
    {
      "id": "src/_pytest/legacypath.py:FixtureRequest_fspath",
      "type": "function",
      "name": "FixtureRequest_fspath",
      "file": "src/_pytest/legacypath.py",
      "line": 339
    },
    {
      "id": "src/_pytest/legacypath.py:TerminalReporter_startdir",
      "type": "function",
      "name": "TerminalReporter_startdir",
      "file": "src/_pytest/legacypath.py",
      "line": 344
    },
    {
      "id": "src/_pytest/legacypath.py:Config_invocation_dir",
      "type": "function",
      "name": "Config_invocation_dir",
      "file": "src/_pytest/legacypath.py",
      "line": 354
    },
    {
      "id": "src/_pytest/legacypath.py:Config_rootdir",
      "type": "function",
      "name": "Config_rootdir",
      "file": "src/_pytest/legacypath.py",
      "line": 365
    },
    {
      "id": "src/_pytest/legacypath.py:Config_inifile",
      "type": "function",
      "name": "Config_inifile",
      "file": "src/_pytest/legacypath.py",
      "line": 375
    },
    {
      "id": "src/_pytest/legacypath.py:Session_stardir",
      "type": "function",
      "name": "Session_stardir",
      "file": "src/_pytest/legacypath.py",
      "line": 385
    },
    {
      "id": "src/_pytest/legacypath.py:Config__getini_unknown_type",
      "type": "function",
      "name": "Config__getini_unknown_type",
      "file": "src/_pytest/legacypath.py",
      "line": 395
    },
    {
      "id": "src/_pytest/legacypath.py:Node_fspath",
      "type": "function",
      "name": "Node_fspath",
      "file": "src/_pytest/legacypath.py",
      "line": 408
    },
    {
      "id": "src/_pytest/legacypath.py:Node_fspath_set",
      "type": "function",
      "name": "Node_fspath_set",
      "file": "src/_pytest/legacypath.py",
      "line": 413
    },
    {
      "id": "src/_pytest/legacypath.py:pytest_load_initial_conftests",
      "type": "function",
      "name": "pytest_load_initial_conftests",
      "file": "src/_pytest/legacypath.py",
      "line": 418
    },
    {
      "id": "src/_pytest/legacypath.py:pytest_configure",
      "type": "function",
      "name": "pytest_configure",
      "file": "src/_pytest/legacypath.py",
      "line": 450
    },
    {
      "id": "src/_pytest/legacypath.py:pytest_plugin_registered",
      "type": "function",
      "name": "pytest_plugin_registered",
      "file": "src/_pytest/legacypath.py",
      "line": 473
    },
    {
      "id": "src/_pytest/setupplan.py",
      "type": "file",
      "name": "setupplan.py",
      "file": "src/_pytest/setupplan.py",
      "line": 0
    },
    {
      "id": "src/_pytest/setupplan.py:pytest_addoption",
      "type": "function",
      "name": "pytest_addoption",
      "file": "src/_pytest/setupplan.py",
      "line": 12
    },
    {
      "id": "src/_pytest/setupplan.py:pytest_fixture_setup",
      "type": "function",
      "name": "pytest_fixture_setup",
      "file": "src/_pytest/setupplan.py",
      "line": 24
    },
    {
      "id": "src/_pytest/setupplan.py:pytest_cmdline_main",
      "type": "function",
      "name": "pytest_cmdline_main",
      "file": "src/_pytest/setupplan.py",
      "line": 36
    },
    {
      "id": "src/_pytest/pathlib.py",
      "type": "file",
      "name": "pathlib.py",
      "file": "src/_pytest/pathlib.py",
      "line": 0
    },
    {
      "id": "src/_pytest/pathlib.py:_ignore_error",
      "type": "function",
      "name": "_ignore_error",
      "file": "src/_pytest/pathlib.py",
      "line": 59
    },
    {
      "id": "src/_pytest/pathlib.py:get_lock_path",
      "type": "function",
      "name": "get_lock_path",
      "file": "src/_pytest/pathlib.py",
      "line": 66
    },
    {
      "id": "src/_pytest/pathlib.py:on_rm_rf_error",
      "type": "function",
      "name": "on_rm_rf_error",
      "file": "src/_pytest/pathlib.py",
      "line": 70
    },
    {
      "id": "src/_pytest/pathlib.py:on_rm_rf_error.chmod_rw",
      "type": "function",
      "name": "on_rm_rf_error.chmod_rw",
      "file": "src/_pytest/pathlib.py",
      "line": 114
    },
    {
      "id": "src/_pytest/pathlib.py:ensure_extended_length_path",
      "type": "function",
      "name": "ensure_extended_length_path",
      "file": "src/_pytest/pathlib.py",
      "line": 133
    },
    {
      "id": "src/_pytest/pathlib.py:get_extended_length_path_str",
      "type": "function",
      "name": "get_extended_length_path_str",
      "file": "src/_pytest/pathlib.py",
      "line": 151
    },
    {
      "id": "src/_pytest/pathlib.py:rm_rf",
      "type": "function",
      "name": "rm_rf",
      "file": "src/_pytest/pathlib.py",
      "line": 163
    },
    {
      "id": "src/_pytest/pathlib.py:find_prefixed",
      "type": "function",
      "name": "find_prefixed",
      "file": "src/_pytest/pathlib.py",
      "line": 174
    },
    {
      "id": "src/_pytest/pathlib.py:extract_suffixes",
      "type": "function",
      "name": "extract_suffixes",
      "file": "src/_pytest/pathlib.py",
      "line": 182
    },
    {
      "id": "src/_pytest/pathlib.py:find_suffixes",
      "type": "function",
      "name": "find_suffixes",
      "file": "src/_pytest/pathlib.py",
      "line": 193
    },
    {
      "id": "src/_pytest/pathlib.py:parse_num",
      "type": "function",
      "name": "parse_num",
      "file": "src/_pytest/pathlib.py",
      "line": 198
    },
    {
      "id": "src/_pytest/pathlib.py:_force_symlink",
      "type": "function",
      "name": "_force_symlink",
      "file": "src/_pytest/pathlib.py",
      "line": 206
    },
    {
      "id": "src/_pytest/pathlib.py:make_numbered_dir",
      "type": "function",
      "name": "make_numbered_dir",
      "file": "src/_pytest/pathlib.py",
      "line": 228
    },
    {
      "id": "src/_pytest/pathlib.py:create_cleanup_lock",
      "type": "function",
      "name": "create_cleanup_lock",
      "file": "src/_pytest/pathlib.py",
      "line": 249
    },
    {
      "id": "src/_pytest/pathlib.py:register_cleanup_lock_removal",
      "type": "function",
      "name": "register_cleanup_lock_removal",
      "file": "src/_pytest/pathlib.py",
      "line": 266
    },
    {
      "id": "src/_pytest/pathlib.py:register_cleanup_lock_removal.cleanup_on_exit",
      "type": "function",
      "name": "register_cleanup_lock_removal.cleanup_on_exit",
      "file": "src/_pytest/pathlib.py",
      "line": 270
    },
    {
      "id": "src/_pytest/pathlib.py:maybe_delete_a_numbered_dir",
      "type": "function",
      "name": "maybe_delete_a_numbered_dir",
      "file": "src/_pytest/pathlib.py",
      "line": 283
    },
    {
      "id": "src/_pytest/pathlib.py:ensure_deletable",
      "type": "function",
      "name": "ensure_deletable",
      "file": "src/_pytest/pathlib.py",
      "line": 311
    },
    {
      "id": "src/_pytest/pathlib.py:try_cleanup",
      "type": "function",
      "name": "try_cleanup",
      "file": "src/_pytest/pathlib.py",
      "line": 339
    },
    {
      "id": "src/_pytest/pathlib.py:cleanup_candidates",
      "type": "function",
      "name": "cleanup_candidates",
      "file": "src/_pytest/pathlib.py",
      "line": 345
    },
    {
      "id": "src/_pytest/pathlib.py:cleanup_dead_symlinks",
      "type": "function",
      "name": "cleanup_dead_symlinks",
      "file": "src/_pytest/pathlib.py",
      "line": 357
    },
    {
      "id": "src/_pytest/pathlib.py:cleanup_numbered_dir",
      "type": "function",
      "name": "cleanup_numbered_dir",
      "file": "src/_pytest/pathlib.py",
      "line": 364
    },
    {
      "id": "src/_pytest/pathlib.py:make_numbered_dir_with_cleanup",
      "type": "function",
      "name": "make_numbered_dir_with_cleanup",
      "file": "src/_pytest/pathlib.py",
      "line": 378
    },
    {
      "id": "src/_pytest/pathlib.py:resolve_from_str",
      "type": "function",
      "name": "resolve_from_str",
      "file": "src/_pytest/pathlib.py",
      "line": 411
    },
    {
      "id": "src/_pytest/pathlib.py:fnmatch_ex",
      "type": "function",
      "name": "fnmatch_ex",
      "file": "src/_pytest/pathlib.py",
      "line": 420
    },
    {
      "id": "src/_pytest/pathlib.py:parts",
      "type": "function",
      "name": "parts",
      "file": "src/_pytest/pathlib.py",
      "line": 456
    },
    {
      "id": "src/_pytest/pathlib.py:symlink_or_skip",
      "type": "function",
      "name": "symlink_or_skip",
      "file": "src/_pytest/pathlib.py",
      "line": 461
    },
    {
      "id": "src/_pytest/pathlib.py:ImportMode",
      "type": "class",
      "name": "ImportMode",
      "file": "src/_pytest/pathlib.py",
      "line": 469
    },
    {
      "id": "src/_pytest/pathlib.py:ImportPathMismatchError",
      "type": "class",
      "name": "ImportPathMismatchError",
      "file": "src/_pytest/pathlib.py",
      "line": 477
    },
    {
      "id": "src/_pytest/pathlib.py:import_path",
      "type": "function",
      "name": "import_path",
      "file": "src/_pytest/pathlib.py",
      "line": 486
    },
    {
      "id": "src/_pytest/pathlib.py:_is_same",
      "type": "function",
      "name": "_is_same",
      "file": "src/_pytest/pathlib.py",
      "line": 604
    },
    {
      "id": "src/_pytest/pathlib.py:module_name_from_path",
      "type": "function",
      "name": "module_name_from_path",
      "file": "src/_pytest/pathlib.py",
      "line": 608
    },
    {
      "id": "src/_pytest/pathlib.py:insert_missing_modules",
      "type": "function",
      "name": "insert_missing_modules",
      "file": "src/_pytest/pathlib.py",
      "line": 629
    },
    {
      "id": "src/_pytest/pathlib.py:resolve_package_path",
      "type": "function",
      "name": "resolve_package_path",
      "file": "src/_pytest/pathlib.py",
      "line": 670
    },
    {
      "id": "src/_pytest/pathlib.py:scandir",
      "type": "function",
      "name": "scandir",
      "file": "src/_pytest/pathlib.py",
      "line": 687
    },
    {
      "id": "src/_pytest/pathlib.py:visit",
      "type": "function",
      "name": "visit",
      "file": "src/_pytest/pathlib.py",
      "line": 708
    },
    {
      "id": "src/_pytest/pathlib.py:absolutepath",
      "type": "function",
      "name": "absolutepath",
      "file": "src/_pytest/pathlib.py",
      "line": 724
    },
    {
      "id": "src/_pytest/pathlib.py:commonpath",
      "type": "function",
      "name": "commonpath",
      "file": "src/_pytest/pathlib.py",
      "line": 733
    },
    {
      "id": "src/_pytest/pathlib.py:bestrelpath",
      "type": "function",
      "name": "bestrelpath",
      "file": "src/_pytest/pathlib.py",
      "line": 745
    },
    {
      "id": "src/_pytest/pathlib.py:copytree",
      "type": "function",
      "name": "copytree",
      "file": "src/_pytest/pathlib.py",
      "line": 776
    },
    {
      "id": "src/_pytest/scope.py",
      "type": "file",
      "name": "scope.py",
      "file": "src/_pytest/scope.py",
      "line": 0
    },
    {
      "id": "src/_pytest/scope.py:Scope",
      "type": "class",
      "name": "Scope",
      "file": "src/_pytest/scope.py",
      "line": 22
    },
    {
      "id": "src/_pytest/scope.py:Scope.next_lower",
      "type": "function",
      "name": "Scope.next_lower",
      "file": "src/_pytest/scope.py",
      "line": 42
    },
    {
      "id": "src/_pytest/scope.py:Scope.next_higher",
      "type": "function",
      "name": "Scope.next_higher",
      "file": "src/_pytest/scope.py",
      "line": 49
    },
    {
      "id": "src/_pytest/scope.py:Scope.__lt__",
      "type": "function",
      "name": "Scope.__lt__",
      "file": "src/_pytest/scope.py",
      "line": 56
    },
    {
      "id": "src/_pytest/scope.py:Scope.from_user",
      "type": "function",
      "name": "Scope.from_user",
      "file": "src/_pytest/scope.py",
      "line": 62
    },
    {
      "id": "src/_pytest/freeze_support.py",
      "type": "file",
      "name": "freeze_support.py",
      "file": "src/_pytest/freeze_support.py",
      "line": 0
    },
    {
      "id": "src/_pytest/freeze_support.py:freeze_includes",
      "type": "function",
      "name": "freeze_includes",
      "file": "src/_pytest/freeze_support.py",
      "line": 9
    },
    {
      "id": "src/_pytest/freeze_support.py:_iter_all_modules",
      "type": "function",
      "name": "_iter_all_modules",
      "file": "src/_pytest/freeze_support.py",
      "line": 18
    },
    {
      "id": "src/_pytest/fixtures.py",
      "type": "file",
      "name": "fixtures.py",
      "file": "src/_pytest/fixtures.py",
      "line": 0
    },
    {
      "id": "src/_pytest/fixtures.py:PseudoFixtureDef",
      "type": "class",
      "name": "PseudoFixtureDef",
      "file": "src/_pytest/fixtures.py",
      "line": 107
    },
    {
      "id": "src/_pytest/fixtures.py:pytest_sessionstart",
      "type": "function",
      "name": "pytest_sessionstart",
      "file": "src/_pytest/fixtures.py",
      "line": 112
    },
    {
      "id": "src/_pytest/fixtures.py:get_scope_package",
      "type": "function",
      "name": "get_scope_package",
      "file": "src/_pytest/fixtures.py",
      "line": 116
    },
    {
      "id": "src/_pytest/fixtures.py:get_scope_node",
      "type": "function",
      "name": "get_scope_node",
      "file": "src/_pytest/fixtures.py",
      "line": 133
    },
    {
      "id": "src/_pytest/fixtures.py:add_funcarg_pseudo_fixture_def",
      "type": "function",
      "name": "add_funcarg_pseudo_fixture_def",
      "file": "src/_pytest/fixtures.py",
      "line": 156
    },
    {
      "id": "src/_pytest/fixtures.py:getfixturemarker",
      "type": "function",
      "name": "getfixturemarker",
      "file": "src/_pytest/fixtures.py",
      "line": 226
    },
    {
      "id": "src/_pytest/fixtures.py:get_parametrized_fixture_keys",
      "type": "function",
      "name": "get_parametrized_fixture_keys",
      "file": "src/_pytest/fixtures.py",
      "line": 239
    },
    {
      "id": "src/_pytest/fixtures.py:reorder_items",
      "type": "function",
      "name": "reorder_items",
      "file": "src/_pytest/fixtures.py",
      "line": 275
    },
    {
      "id": "src/_pytest/fixtures.py:fix_cache_order",
      "type": "function",
      "name": "fix_cache_order",
      "file": "src/_pytest/fixtures.py",
      "line": 295
    },
    {
      "id": "src/_pytest/fixtures.py:reorder_items_atscope",
      "type": "function",
      "name": "reorder_items_atscope",
      "file": "src/_pytest/fixtures.py",
      "line": 305
    },
    {
      "id": "src/_pytest/fixtures.py:get_direct_param_fixture_func",
      "type": "function",
      "name": "get_direct_param_fixture_func",
      "file": "src/_pytest/fixtures.py",
      "line": 351
    },
    {
      "id": "src/_pytest/fixtures.py:FuncFixtureInfo",
      "type": "class",
      "name": "FuncFixtureInfo",
      "file": "src/_pytest/fixtures.py",
      "line": 356
    },
    {
      "id": "src/_pytest/fixtures.py:FuncFixtureInfo.prune_dependency_tree",
      "type": "function",
      "name": "FuncFixtureInfo.prune_dependency_tree",
      "file": "src/_pytest/fixtures.py",
      "line": 368
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureRequest",
      "type": "class",
      "name": "FixtureRequest",
      "file": "src/_pytest/fixtures.py",
      "line": 396
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureRequest.scope",
      "type": "function",
      "name": "FixtureRequest.scope",
      "file": "src/_pytest/fixtures.py",
      "line": 426
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureRequest.fixturenames",
      "type": "function",
      "name": "FixtureRequest.fixturenames",
      "file": "src/_pytest/fixtures.py",
      "line": 431
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureRequest.node",
      "type": "function",
      "name": "FixtureRequest.node",
      "file": "src/_pytest/fixtures.py",
      "line": 438
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureRequest._getnextfixturedef",
      "type": "function",
      "name": "FixtureRequest._getnextfixturedef",
      "file": "src/_pytest/fixtures.py",
      "line": 458
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureRequest.config",
      "type": "function",
      "name": "FixtureRequest.config",
      "file": "src/_pytest/fixtures.py",
      "line": 478
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureRequest.function",
      "type": "function",
      "name": "FixtureRequest.function",
      "file": "src/_pytest/fixtures.py",
      "line": 483
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureRequest.cls",
      "type": "function",
      "name": "FixtureRequest.cls",
      "file": "src/_pytest/fixtures.py",
      "line": 492
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureRequest.instance",
      "type": "function",
      "name": "FixtureRequest.instance",
      "file": "src/_pytest/fixtures.py",
      "line": 501
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureRequest.module",
      "type": "function",
      "name": "FixtureRequest.module",
      "file": "src/_pytest/fixtures.py",
      "line": 511
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureRequest.path",
      "type": "function",
      "name": "FixtureRequest.path",
      "file": "src/_pytest/fixtures.py",
      "line": 518
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureRequest.keywords",
      "type": "function",
      "name": "FixtureRequest.keywords",
      "file": "src/_pytest/fixtures.py",
      "line": 526
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureRequest.session",
      "type": "function",
      "name": "FixtureRequest.session",
      "file": "src/_pytest/fixtures.py",
      "line": 532
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureRequest.addfinalizer",
      "type": "function",
      "name": "FixtureRequest.addfinalizer",
      "file": "src/_pytest/fixtures.py",
      "line": 536
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureRequest.applymarker",
      "type": "function",
      "name": "FixtureRequest.applymarker",
      "file": "src/_pytest/fixtures.py",
      "line": 542
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureRequest.raiseerror",
      "type": "function",
      "name": "FixtureRequest.raiseerror",
      "file": "src/_pytest/fixtures.py",
      "line": 553
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureRequest._fillfixtures",
      "type": "function",
      "name": "FixtureRequest._fillfixtures",
      "file": "src/_pytest/fixtures.py",
      "line": 561
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureRequest.getfixturevalue",
      "type": "function",
      "name": "FixtureRequest.getfixturevalue",
      "file": "src/_pytest/fixtures.py",
      "line": 568
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureRequest._get_active_fixturedef",
      "type": "function",
      "name": "FixtureRequest._get_active_fixturedef",
      "file": "src/_pytest/fixtures.py",
      "line": 592
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureRequest._get_fixturestack",
      "type": "function",
      "name": "FixtureRequest._get_fixturestack",
      "file": "src/_pytest/fixtures.py",
      "line": 611
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureRequest._compute_fixture_value",
      "type": "function",
      "name": "FixtureRequest._compute_fixture_value",
      "file": "src/_pytest/fixtures.py",
      "line": 620
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureRequest._schedule_finalizers",
      "type": "function",
      "name": "FixtureRequest._schedule_finalizers",
      "file": "src/_pytest/fixtures.py",
      "line": 697
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureRequest._check_scope",
      "type": "function",
      "name": "FixtureRequest._check_scope",
      "file": "src/_pytest/fixtures.py",
      "line": 703
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureRequest._factorytraceback",
      "type": "function",
      "name": "FixtureRequest._factorytraceback",
      "file": "src/_pytest/fixtures.py",
      "line": 721
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureRequest.__repr__",
      "type": "function",
      "name": "FixtureRequest.__repr__",
      "file": "src/_pytest/fixtures.py",
      "line": 737
    },
    {
      "id": "src/_pytest/fixtures.py:SubRequest",
      "type": "class",
      "name": "SubRequest",
      "file": "src/_pytest/fixtures.py",
      "line": 742
    },
    {
      "id": "src/_pytest/fixtures.py:SubRequest.__repr__",
      "type": "function",
      "name": "SubRequest.__repr__",
      "file": "src/_pytest/fixtures.py",
      "line": 769
    },
    {
      "id": "src/_pytest/fixtures.py:SubRequest.addfinalizer",
      "type": "function",
      "name": "SubRequest.addfinalizer",
      "file": "src/_pytest/fixtures.py",
      "line": 772
    },
    {
      "id": "src/_pytest/fixtures.py:SubRequest._schedule_finalizers",
      "type": "function",
      "name": "SubRequest._schedule_finalizers",
      "file": "src/_pytest/fixtures.py",
      "line": 777
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureLookupError",
      "type": "class",
      "name": "FixtureLookupError",
      "file": "src/_pytest/fixtures.py",
      "line": 791
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureLookupError.formatrepr",
      "type": "function",
      "name": "FixtureLookupError.formatrepr",
      "file": "src/_pytest/fixtures.py",
      "line": 802
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureLookupErrorRepr",
      "type": "class",
      "name": "FixtureLookupErrorRepr",
      "file": "src/_pytest/fixtures.py",
      "line": 847
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureLookupErrorRepr.toterminal",
      "type": "function",
      "name": "FixtureLookupErrorRepr.toterminal",
      "file": "src/_pytest/fixtures.py",
      "line": 862
    },
    {
      "id": "src/_pytest/fixtures.py:fail_fixturefunc",
      "type": "function",
      "name": "fail_fixturefunc",
      "file": "src/_pytest/fixtures.py",
      "line": 881
    },
    {
      "id": "src/_pytest/fixtures.py:call_fixture_func",
      "type": "function",
      "name": "call_fixture_func",
      "file": "src/_pytest/fixtures.py",
      "line": 888
    },
    {
      "id": "src/_pytest/fixtures.py:_teardown_yield_fixture",
      "type": "function",
      "name": "_teardown_yield_fixture",
      "file": "src/_pytest/fixtures.py",
      "line": 908
    },
    {
      "id": "src/_pytest/fixtures.py:_eval_scope_callable",
      "type": "function",
      "name": "_eval_scope_callable",
      "file": "src/_pytest/fixtures.py",
      "line": 920
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureDef",
      "type": "class",
      "name": "FixtureDef",
      "file": "src/_pytest/fixtures.py",
      "line": 946
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureDef.scope",
      "type": "function",
      "name": "FixtureDef.scope",
      "file": "src/_pytest/fixtures.py",
      "line": 1013
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureDef.addfinalizer",
      "type": "function",
      "name": "FixtureDef.addfinalizer",
      "file": "src/_pytest/fixtures.py",
      "line": 1017
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureDef.finish",
      "type": "function",
      "name": "FixtureDef.finish",
      "file": "src/_pytest/fixtures.py",
      "line": 1020
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureDef.execute",
      "type": "function",
      "name": "FixtureDef.execute",
      "file": "src/_pytest/fixtures.py",
      "line": 1043
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureDef.cache_key",
      "type": "function",
      "name": "FixtureDef.cache_key",
      "file": "src/_pytest/fixtures.py",
      "line": 1074
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureDef.__repr__",
      "type": "function",
      "name": "FixtureDef.__repr__",
      "file": "src/_pytest/fixtures.py",
      "line": 1077
    },
    {
      "id": "src/_pytest/fixtures.py:resolve_fixture_function",
      "type": "function",
      "name": "resolve_fixture_function",
      "file": "src/_pytest/fixtures.py",
      "line": 1083
    },
    {
      "id": "src/_pytest/fixtures.py:pytest_fixture_setup",
      "type": "function",
      "name": "pytest_fixture_setup",
      "file": "src/_pytest/fixtures.py",
      "line": 1110
    },
    {
      "id": "src/_pytest/fixtures.py:_ensure_immutable_ids",
      "type": "function",
      "name": "_ensure_immutable_ids",
      "file": "src/_pytest/fixtures.py",
      "line": 1139
    },
    {
      "id": "src/_pytest/fixtures.py:_params_converter",
      "type": "function",
      "name": "_params_converter",
      "file": "src/_pytest/fixtures.py",
      "line": 1149
    },
    {
      "id": "src/_pytest/fixtures.py:wrap_function_to_error_out_if_called_directly",
      "type": "function",
      "name": "wrap_function_to_error_out_if_called_directly",
      "file": "src/_pytest/fixtures.py",
      "line": 1155
    },
    {
      "id": "src/_pytest/fixtures.py:wrap_function_to_error_out_if_called_directly.result",
      "type": "function",
      "name": "wrap_function_to_error_out_if_called_directly.result",
      "file": "src/_pytest/fixtures.py",
      "line": 1169
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureFunctionMarker",
      "type": "class",
      "name": "FixtureFunctionMarker",
      "file": "src/_pytest/fixtures.py",
      "line": 1181
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureFunctionMarker.__post_init__",
      "type": "function",
      "name": "FixtureFunctionMarker.__post_init__",
      "file": "src/_pytest/fixtures.py",
      "line": 1192
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureFunctionMarker.__call__",
      "type": "function",
      "name": "FixtureFunctionMarker.__call__",
      "file": "src/_pytest/fixtures.py",
      "line": 1195
    },
    {
      "id": "src/_pytest/fixtures.py:fixture",
      "type": "function",
      "name": "fixture",
      "file": "src/_pytest/fixtures.py",
      "line": 1254
    },
    {
      "id": "src/_pytest/fixtures.py:yield_fixture",
      "type": "function",
      "name": "yield_fixture",
      "file": "src/_pytest/fixtures.py",
      "line": 1331
    },
    {
      "id": "src/_pytest/fixtures.py:pytestconfig",
      "type": "function",
      "name": "pytestconfig",
      "file": "src/_pytest/fixtures.py",
      "line": 1358
    },
    {
      "id": "src/_pytest/fixtures.py:pytest_addoption",
      "type": "function",
      "name": "pytest_addoption",
      "file": "src/_pytest/fixtures.py",
      "line": 1372
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureManager",
      "type": "class",
      "name": "FixtureManager",
      "file": "src/_pytest/fixtures.py",
      "line": 1381
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureManager._get_direct_parametrize_args",
      "type": "function",
      "name": "FixtureManager._get_direct_parametrize_args",
      "file": "src/_pytest/fixtures.py",
      "line": 1426
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureManager.getfixtureinfo",
      "type": "function",
      "name": "FixtureManager.getfixtureinfo",
      "file": "src/_pytest/fixtures.py",
      "line": 1445
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureManager.pytest_plugin_registered",
      "type": "function",
      "name": "FixtureManager.pytest_plugin_registered",
      "file": "src/_pytest/fixtures.py",
      "line": 1463
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureManager._getautousenames",
      "type": "function",
      "name": "FixtureManager._getautousenames",
      "file": "src/_pytest/fixtures.py",
      "line": 1485
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureManager.getfixtureclosure",
      "type": "function",
      "name": "FixtureManager.getfixtureclosure",
      "file": "src/_pytest/fixtures.py",
      "line": 1492
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureManager.getfixtureclosure.merge",
      "type": "function",
      "name": "FixtureManager.getfixtureclosure.merge",
      "file": "src/_pytest/fixtures.py",
      "line": 1508
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureManager.getfixtureclosure.sort_by_scope",
      "type": "function",
      "name": "FixtureManager.getfixtureclosure.sort_by_scope",
      "file": "src/_pytest/fixtures.py",
      "line": 1534
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureManager.pytest_generate_tests",
      "type": "function",
      "name": "FixtureManager.pytest_generate_tests",
      "file": "src/_pytest/fixtures.py",
      "line": 1545
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureManager.pytest_generate_tests.get_parametrize_mark_argnames",
      "type": "function",
      "name": "FixtureManager.pytest_generate_tests.get_parametrize_mark_argnames",
      "file": "src/_pytest/fixtures.py",
      "line": 1548
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureManager.pytest_collection_modifyitems",
      "type": "function",
      "name": "FixtureManager.pytest_collection_modifyitems",
      "file": "src/_pytest/fixtures.py",
      "line": 1590
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureManager.parsefactories",
      "type": "function",
      "name": "FixtureManager.parsefactories",
      "file": "src/_pytest/fixtures.py",
      "line": 1613
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureManager.getfixturedefs",
      "type": "function",
      "name": "FixtureManager.getfixturedefs",
      "file": "src/_pytest/fixtures.py",
      "line": 1697
    },
    {
      "id": "src/_pytest/fixtures.py:FixtureManager._matchfactories",
      "type": "function",
      "name": "FixtureManager._matchfactories",
      "file": "src/_pytest/fixtures.py",
      "line": 1712
    },
    {
      "id": "src/_pytest/cacheprovider.py",
      "type": "file",
      "name": "cacheprovider.py",
      "file": "src/_pytest/cacheprovider.py",
      "line": 0
    },
    {
      "id": "src/_pytest/cacheprovider.py:Cache",
      "type": "class",
      "name": "Cache",
      "file": "src/_pytest/cacheprovider.py",
      "line": 55
    },
    {
      "id": "src/_pytest/cacheprovider.py:Cache.for_config",
      "type": "function",
      "name": "Cache.for_config",
      "file": "src/_pytest/cacheprovider.py",
      "line": 75
    },
    {
      "id": "src/_pytest/cacheprovider.py:Cache.clear_cache",
      "type": "function",
      "name": "Cache.clear_cache",
      "file": "src/_pytest/cacheprovider.py",
      "line": 87
    },
    {
      "id": "src/_pytest/cacheprovider.py:Cache.cache_dir_from_config",
      "type": "function",
      "name": "Cache.cache_dir_from_config",
      "file": "src/_pytest/cacheprovider.py",
      "line": 99
    },
    {
      "id": "src/_pytest/cacheprovider.py:Cache.warn",
      "type": "function",
      "name": "Cache.warn",
      "file": "src/_pytest/cacheprovider.py",
      "line": 107
    },
    {
      "id": "src/_pytest/cacheprovider.py:Cache.mkdir",
      "type": "function",
      "name": "Cache.mkdir",
      "file": "src/_pytest/cacheprovider.py",
      "line": 122
    },
    {
      "id": "src/_pytest/cacheprovider.py:Cache._getvaluepath",
      "type": "function",
      "name": "Cache._getvaluepath",
      "file": "src/_pytest/cacheprovider.py",
      "line": 143
    },
    {
      "id": "src/_pytest/cacheprovider.py:Cache.get",
      "type": "function",
      "name": "Cache.get",
      "file": "src/_pytest/cacheprovider.py",
      "line": 146
    },
    {
      "id": "src/_pytest/cacheprovider.py:Cache.set",
      "type": "function",
      "name": "Cache.set",
      "file": "src/_pytest/cacheprovider.py",
      "line": 165
    },
    {
      "id": "src/_pytest/cacheprovider.py:Cache._ensure_supporting_files",
      "type": "function",
      "name": "Cache._ensure_supporting_files",
      "file": "src/_pytest/cacheprovider.py",
      "line": 202
    },
    {
      "id": "src/_pytest/cacheprovider.py:LFPluginCollWrapper",
      "type": "class",
      "name": "LFPluginCollWrapper",
      "file": "src/_pytest/cacheprovider.py",
      "line": 215
    },
    {
      "id": "src/_pytest/cacheprovider.py:LFPluginCollWrapper.pytest_make_collect_report",
      "type": "function",
      "name": "LFPluginCollWrapper.pytest_make_collect_report",
      "file": "src/_pytest/cacheprovider.py",
      "line": 221
    },
    {
      "id": "src/_pytest/cacheprovider.py:LFPluginCollWrapper.pytest_make_collect_report.sort_key",
      "type": "function",
      "name": "LFPluginCollWrapper.pytest_make_collect_report.sort_key",
      "file": "src/_pytest/cacheprovider.py",
      "line": 230
    },
    {
      "id": "src/_pytest/cacheprovider.py:LFPluginCollSkipfiles",
      "type": "class",
      "name": "LFPluginCollSkipfiles",
      "file": "src/_pytest/cacheprovider.py",
      "line": 275
    },
    {
      "id": "src/_pytest/cacheprovider.py:LFPluginCollSkipfiles.pytest_make_collect_report",
      "type": "function",
      "name": "LFPluginCollSkipfiles.pytest_make_collect_report",
      "file": "src/_pytest/cacheprovider.py",
      "line": 280
    },
    {
      "id": "src/_pytest/cacheprovider.py:LFPlugin",
      "type": "class",
      "name": "LFPlugin",
      "file": "src/_pytest/cacheprovider.py",
      "line": 295
    },
    {
      "id": "src/_pytest/cacheprovider.py:LFPlugin.get_last_failed_paths",
      "type": "function",
      "name": "LFPlugin.get_last_failed_paths",
      "file": "src/_pytest/cacheprovider.py",
      "line": 314
    },
    {
      "id": "src/_pytest/cacheprovider.py:LFPlugin.pytest_report_collectionfinish",
      "type": "function",
      "name": "LFPlugin.pytest_report_collectionfinish",
      "file": "src/_pytest/cacheprovider.py",
      "line": 325
    },
    {
      "id": "src/_pytest/cacheprovider.py:LFPlugin.pytest_runtest_logreport",
      "type": "function",
      "name": "LFPlugin.pytest_runtest_logreport",
      "file": "src/_pytest/cacheprovider.py",
      "line": 330
    },
    {
      "id": "src/_pytest/cacheprovider.py:LFPlugin.pytest_collectreport",
      "type": "function",
      "name": "LFPlugin.pytest_collectreport",
      "file": "src/_pytest/cacheprovider.py",
      "line": 336
    },
    {
      "id": "src/_pytest/cacheprovider.py:LFPlugin.pytest_collection_modifyitems",
      "type": "function",
      "name": "LFPlugin.pytest_collection_modifyitems",
      "file": "src/_pytest/cacheprovider.py",
      "line": 346
    },
    {
      "id": "src/_pytest/cacheprovider.py:LFPlugin.pytest_sessionfinish",
      "type": "function",
      "name": "LFPlugin.pytest_sessionfinish",
      "file": "src/_pytest/cacheprovider.py",
      "line": 397
    },
    {
      "id": "src/_pytest/cacheprovider.py:NFPlugin",
      "type": "class",
      "name": "NFPlugin",
      "file": "src/_pytest/cacheprovider.py",
      "line": 408
    },
    {
      "id": "src/_pytest/cacheprovider.py:NFPlugin.pytest_collection_modifyitems",
      "type": "function",
      "name": "NFPlugin.pytest_collection_modifyitems",
      "file": "src/_pytest/cacheprovider.py",
      "line": 418
    },
    {
      "id": "src/_pytest/cacheprovider.py:NFPlugin._get_increasing_order",
      "type": "function",
      "name": "NFPlugin._get_increasing_order",
      "file": "src/_pytest/cacheprovider.py",
      "line": 439
    },
    {
      "id": "src/_pytest/cacheprovider.py:NFPlugin.pytest_sessionfinish",
      "type": "function",
      "name": "NFPlugin.pytest_sessionfinish",
      "file": "src/_pytest/cacheprovider.py",
      "line": 442
    },
    {
      "id": "src/_pytest/cacheprovider.py:pytest_addoption",
      "type": "function",
      "name": "pytest_addoption",
      "file": "src/_pytest/cacheprovider.py",
      "line": 454
    },
    {
      "id": "src/_pytest/cacheprovider.py:pytest_cmdline_main",
      "type": "function",
      "name": "pytest_cmdline_main",
      "file": "src/_pytest/cacheprovider.py",
      "line": 512
    },
    {
      "id": "src/_pytest/cacheprovider.py:pytest_configure",
      "type": "function",
      "name": "pytest_configure",
      "file": "src/_pytest/cacheprovider.py",
      "line": 521
    },
    {
      "id": "src/_pytest/cacheprovider.py:cache",
      "type": "function",
      "name": "cache",
      "file": "src/_pytest/cacheprovider.py",
      "line": 528
    },
    {
      "id": "src/_pytest/cacheprovider.py:pytest_report_header",
      "type": "function",
      "name": "pytest_report_header",
      "file": "src/_pytest/cacheprovider.py",
      "line": 543
    },
    {
      "id": "src/_pytest/cacheprovider.py:cacheshow",
      "type": "function",
      "name": "cacheshow",
      "file": "src/_pytest/cacheprovider.py",
      "line": 559
    },
    {
      "id": "src/_pytest/warning_types.py",
      "type": "file",
      "name": "warning_types.py",
      "file": "src/_pytest/warning_types.py",
      "line": 0
    },
    {
      "id": "src/_pytest/warning_types.py:PytestWarning",
      "type": "class",
      "name": "PytestWarning",
      "file": "src/_pytest/warning_types.py",
      "line": 12
    },
    {
      "id": "src/_pytest/warning_types.py:PytestAssertRewriteWarning",
      "type": "class",
      "name": "PytestAssertRewriteWarning",
      "file": "src/_pytest/warning_types.py",
      "line": 19
    },
    {
      "id": "src/_pytest/warning_types.py:PytestCacheWarning",
      "type": "class",
      "name": "PytestCacheWarning",
      "file": "src/_pytest/warning_types.py",
      "line": 26
    },
    {
      "id": "src/_pytest/warning_types.py:PytestConfigWarning",
      "type": "class",
      "name": "PytestConfigWarning",
      "file": "src/_pytest/warning_types.py",
      "line": 33
    },
    {
      "id": "src/_pytest/warning_types.py:PytestCollectionWarning",
      "type": "class",
      "name": "PytestCollectionWarning",
      "file": "src/_pytest/warning_types.py",
      "line": 40
    },
    {
      "id": "src/_pytest/warning_types.py:PytestDeprecationWarning",
      "type": "class",
      "name": "PytestDeprecationWarning",
      "file": "src/_pytest/warning_types.py",
      "line": 46
    },
    {
      "id": "src/_pytest/warning_types.py:PytestRemovedIn8Warning",
      "type": "class",
      "name": "PytestRemovedIn8Warning",
      "file": "src/_pytest/warning_types.py",
      "line": 52
    },
    {
      "id": "src/_pytest/warning_types.py:PytestRemovedIn9Warning",
      "type": "class",
      "name": "PytestRemovedIn9Warning",
      "file": "src/_pytest/warning_types.py",
      "line": 58
    },
    {
      "id": "src/_pytest/warning_types.py:PytestReturnNotNoneWarning",
      "type": "class",
      "name": "PytestReturnNotNoneWarning",
      "file": "src/_pytest/warning_types.py",
      "line": 64
    },
    {
      "id": "src/_pytest/warning_types.py:PytestExperimentalApiWarning",
      "type": "class",
      "name": "PytestExperimentalApiWarning",
      "file": "src/_pytest/warning_types.py",
      "line": 71
    },
    {
      "id": "src/_pytest/warning_types.py:PytestExperimentalApiWarning.simple",
      "type": "function",
      "name": "PytestExperimentalApiWarning.simple",
      "file": "src/_pytest/warning_types.py",
      "line": 81
    },
    {
      "id": "src/_pytest/warning_types.py:PytestUnhandledCoroutineWarning",
      "type": "class",
      "name": "PytestUnhandledCoroutineWarning",
      "file": "src/_pytest/warning_types.py",
      "line": 90
    },
    {
      "id": "src/_pytest/warning_types.py:PytestUnknownMarkWarning",
      "type": "class",
      "name": "PytestUnknownMarkWarning",
      "file": "src/_pytest/warning_types.py",
      "line": 102
    },
    {
      "id": "src/_pytest/warning_types.py:PytestUnraisableExceptionWarning",
      "type": "class",
      "name": "PytestUnraisableExceptionWarning",
      "file": "src/_pytest/warning_types.py",
      "line": 112
    },
    {
      "id": "src/_pytest/warning_types.py:PytestUnhandledThreadExceptionWarning",
      "type": "class",
      "name": "PytestUnhandledThreadExceptionWarning",
      "file": "src/_pytest/warning_types.py",
      "line": 124
    },
    {
      "id": "src/_pytest/warning_types.py:UnformattedWarning",
      "type": "class",
      "name": "UnformattedWarning",
      "file": "src/_pytest/warning_types.py",
      "line": 138
    },
    {
      "id": "src/_pytest/warning_types.py:UnformattedWarning.format",
      "type": "function",
      "name": "UnformattedWarning.format",
      "file": "src/_pytest/warning_types.py",
      "line": 148
    },
    {
      "id": "src/_pytest/warning_types.py:warn_explicit_for",
      "type": "function",
      "name": "warn_explicit_for",
      "file": "src/_pytest/warning_types.py",
      "line": 153
    },
    {
      "id": "src/_pytest/config",
      "type": "directory",
      "name": "config",
      "file": "",
      "line": 0
    },
    {
      "id": "src/_pytest/config/compat.py",
      "type": "file",
      "name": "compat.py",
      "file": "src/_pytest/config/compat.py",
      "line": 0
    },
    {
      "id": "src/_pytest/config/compat.py:PathAwareHookProxy",
      "type": "class",
      "name": "PathAwareHookProxy",
      "file": "src/_pytest/config/compat.py",
      "line": 21
    },
    {
      "id": "src/_pytest/config/compat.py:PathAwareHookProxy.__dir__",
      "type": "function",
      "name": "PathAwareHookProxy.__dir__",
      "file": "src/_pytest/config/compat.py",
      "line": 33
    },
    {
      "id": "src/_pytest/config/compat.py:PathAwareHookProxy.__getattr__",
      "type": "function",
      "name": "PathAwareHookProxy.__getattr__",
      "file": "src/_pytest/config/compat.py",
      "line": 36
    },
    {
      "id": "src/_pytest/config/compat.py:PathAwareHookProxy.__getattr__.fixed_hook",
      "type": "function",
      "name": "PathAwareHookProxy.__getattr__.fixed_hook",
      "file": "src/_pytest/config/compat.py",
      "line": 45
    },
    {
      "id": "src/_pytest/config/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "src/_pytest/config/__init__.py",
      "line": 0
    },
    {
      "id": "src/_pytest/config/__init__.py:ExitCode",
      "type": "class",
      "name": "ExitCode",
      "file": "src/_pytest/config/__init__.py",
      "line": 85
    },
    {
      "id": "src/_pytest/config/__init__.py:ConftestImportFailure",
      "type": "class",
      "name": "ConftestImportFailure",
      "file": "src/_pytest/config/__init__.py",
      "line": 107
    },
    {
      "id": "src/_pytest/config/__init__.py:ConftestImportFailure.__str__",
      "type": "function",
      "name": "ConftestImportFailure.__str__",
      "file": "src/_pytest/config/__init__.py",
      "line": 117
    },
    {
      "id": "src/_pytest/config/__init__.py:filter_traceback_for_conftest_import_failure",
      "type": "function",
      "name": "filter_traceback_for_conftest_import_failure",
      "file": "src/_pytest/config/__init__.py",
      "line": 123
    },
    {
      "id": "src/_pytest/config/__init__.py:main",
      "type": "function",
      "name": "main",
      "file": "src/_pytest/config/__init__.py",
      "line": 134
    },
    {
      "id": "src/_pytest/config/__init__.py:console_main",
      "type": "function",
      "name": "console_main",
      "file": "src/_pytest/config/__init__.py",
      "line": 182
    },
    {
      "id": "src/_pytest/config/__init__.py:cmdline",
      "type": "class",
      "name": "cmdline",
      "file": "src/_pytest/config/__init__.py",
      "line": 200
    },
    {
      "id": "src/_pytest/config/__init__.py:filename_arg",
      "type": "function",
      "name": "filename_arg",
      "file": "src/_pytest/config/__init__.py",
      "line": 204
    },
    {
      "id": "src/_pytest/config/__init__.py:directory_arg",
      "type": "function",
      "name": "directory_arg",
      "file": "src/_pytest/config/__init__.py",
      "line": 215
    },
    {
      "id": "src/_pytest/config/__init__.py:get_config",
      "type": "function",
      "name": "get_config",
      "file": "src/_pytest/config/__init__.py",
      "line": 270
    },
    {
      "id": "src/_pytest/config/__init__.py:get_plugin_manager",
      "type": "function",
      "name": "get_plugin_manager",
      "file": "src/_pytest/config/__init__.py",
      "line": 295
    },
    {
      "id": "src/_pytest/config/__init__.py:_prepareconfig",
      "type": "function",
      "name": "_prepareconfig",
      "file": "src/_pytest/config/__init__.py",
      "line": 306
    },
    {
      "id": "src/_pytest/config/__init__.py:_get_directory",
      "type": "function",
      "name": "_get_directory",
      "file": "src/_pytest/config/__init__.py",
      "line": 338
    },
    {
      "id": "src/_pytest/config/__init__.py:_get_legacy_hook_marks",
      "type": "function",
      "name": "_get_legacy_hook_marks",
      "file": "src/_pytest/config/__init__.py",
      "line": 346
    },
    {
      "id": "src/_pytest/config/__init__.py:PytestPluginManager",
      "type": "class",
      "name": "PytestPluginManager",
      "file": "src/_pytest/config/__init__.py",
      "line": 379
    },
    {
      "id": "src/_pytest/config/__init__.py:PytestPluginManager.parse_hookimpl_opts",
      "type": "function",
      "name": "PytestPluginManager.parse_hookimpl_opts",
      "file": "src/_pytest/config/__init__.py",
      "line": 441
    },
    {
      "id": "src/_pytest/config/__init__.py:PytestPluginManager.parse_hookspec_opts",
      "type": "function",
      "name": "PytestPluginManager.parse_hookspec_opts",
      "file": "src/_pytest/config/__init__.py",
      "line": 464
    },
    {
      "id": "src/_pytest/config/__init__.py:PytestPluginManager.register",
      "type": "function",
      "name": "PytestPluginManager.register",
      "file": "src/_pytest/config/__init__.py",
      "line": 476
    },
    {
      "id": "src/_pytest/config/__init__.py:PytestPluginManager.getplugin",
      "type": "function",
      "name": "PytestPluginManager.getplugin",
      "file": "src/_pytest/config/__init__.py",
      "line": 499
    },
    {
      "id": "src/_pytest/config/__init__.py:PytestPluginManager.hasplugin",
      "type": "function",
      "name": "PytestPluginManager.hasplugin",
      "file": "src/_pytest/config/__init__.py",
      "line": 504
    },
    {
      "id": "src/_pytest/config/__init__.py:PytestPluginManager.pytest_configure",
      "type": "function",
      "name": "PytestPluginManager.pytest_configure",
      "file": "src/_pytest/config/__init__.py",
      "line": 508
    },
    {
      "id": "src/_pytest/config/__init__.py:PytestPluginManager._set_initial_conftests",
      "type": "function",
      "name": "PytestPluginManager._set_initial_conftests",
      "file": "src/_pytest/config/__init__.py",
      "line": 529
    },
    {
      "id": "src/_pytest/config/__init__.py:PytestPluginManager._is_in_confcutdir",
      "type": "function",
      "name": "PytestPluginManager._is_in_confcutdir",
      "file": "src/_pytest/config/__init__.py",
      "line": 570
    },
    {
      "id": "src/_pytest/config/__init__.py:PytestPluginManager._try_load_conftest",
      "type": "function",
      "name": "PytestPluginManager._try_load_conftest",
      "file": "src/_pytest/config/__init__.py",
      "line": 579
    },
    {
      "id": "src/_pytest/config/__init__.py:PytestPluginManager._getconftestmodules",
      "type": "function",
      "name": "PytestPluginManager._getconftestmodules",
      "file": "src/_pytest/config/__init__.py",
      "line": 589
    },
    {
      "id": "src/_pytest/config/__init__.py:PytestPluginManager._rget_with_confmod",
      "type": "function",
      "name": "PytestPluginManager._rget_with_confmod",
      "file": "src/_pytest/config/__init__.py",
      "line": 616
    },
    {
      "id": "src/_pytest/config/__init__.py:PytestPluginManager._importconftest",
      "type": "function",
      "name": "PytestPluginManager._importconftest",
      "file": "src/_pytest/config/__init__.py",
      "line": 631
    },
    {
      "id": "src/_pytest/config/__init__.py:PytestPluginManager._check_non_top_pytest_plugins",
      "type": "function",
      "name": "PytestPluginManager._check_non_top_pytest_plugins",
      "file": "src/_pytest/config/__init__.py",
      "line": 662
    },
    {
      "id": "src/_pytest/config/__init__.py:PytestPluginManager.consider_preparse",
      "type": "function",
      "name": "PytestPluginManager.consider_preparse",
      "file": "src/_pytest/config/__init__.py",
      "line": 688
    },
    {
      "id": "src/_pytest/config/__init__.py:PytestPluginManager.consider_pluginarg",
      "type": "function",
      "name": "PytestPluginManager.consider_pluginarg",
      "file": "src/_pytest/config/__init__.py",
      "line": 713
    },
    {
      "id": "src/_pytest/config/__init__.py:PytestPluginManager.consider_conftest",
      "type": "function",
      "name": "PytestPluginManager.consider_conftest",
      "file": "src/_pytest/config/__init__.py",
      "line": 739
    },
    {
      "id": "src/_pytest/config/__init__.py:PytestPluginManager.consider_env",
      "type": "function",
      "name": "PytestPluginManager.consider_env",
      "file": "src/_pytest/config/__init__.py",
      "line": 743
    },
    {
      "id": "src/_pytest/config/__init__.py:PytestPluginManager.consider_module",
      "type": "function",
      "name": "PytestPluginManager.consider_module",
      "file": "src/_pytest/config/__init__.py",
      "line": 747
    },
    {
      "id": "src/_pytest/config/__init__.py:PytestPluginManager._import_plugin_specs",
      "type": "function",
      "name": "PytestPluginManager._import_plugin_specs",
      "file": "src/_pytest/config/__init__.py",
      "line": 751
    },
    {
      "id": "src/_pytest/config/__init__.py:PytestPluginManager.import_plugin",
      "type": "function",
      "name": "PytestPluginManager.import_plugin",
      "file": "src/_pytest/config/__init__.py",
      "line": 758
    },
    {
      "id": "src/_pytest/config/__init__.py:_get_plugin_specs_as_list",
      "type": "function",
      "name": "_get_plugin_specs_as_list",
      "file": "src/_pytest/config/__init__.py",
      "line": 796
    },
    {
      "id": "src/_pytest/config/__init__.py:_ensure_removed_sysmodule",
      "type": "function",
      "name": "_ensure_removed_sysmodule",
      "file": "src/_pytest/config/__init__.py",
      "line": 818
    },
    {
      "id": "src/_pytest/config/__init__.py:Notset",
      "type": "class",
      "name": "Notset",
      "file": "src/_pytest/config/__init__.py",
      "line": 825
    },
    {
      "id": "src/_pytest/config/__init__.py:Notset.__repr__",
      "type": "function",
      "name": "Notset.__repr__",
      "file": "src/_pytest/config/__init__.py",
      "line": 826
    },
    {
      "id": "src/_pytest/config/__init__.py:_iter_rewritable_modules",
      "type": "function",
      "name": "_iter_rewritable_modules",
      "file": "src/_pytest/config/__init__.py",
      "line": 833
    },
    {
      "id": "src/_pytest/config/__init__.py:Config",
      "type": "class",
      "name": "Config",
      "file": "src/_pytest/config/__init__.py",
      "line": 899
    },
    {
      "id": "src/_pytest/config/__init__.py:Config.InvocationParams",
      "type": "class",
      "name": "Config.InvocationParams",
      "file": "src/_pytest/config/__init__.py",
      "line": 912
    },
    {
      "id": "src/_pytest/config/__init__.py:Config.ArgsSource",
      "type": "class",
      "name": "Config.ArgsSource",
      "file": "src/_pytest/config/__init__.py",
      "line": 945
    },
    {
      "id": "src/_pytest/config/__init__.py:Config.rootpath",
      "type": "function",
      "name": "Config.rootpath",
      "file": "src/_pytest/config/__init__.py",
      "line": 1026
    },
    {
      "id": "src/_pytest/config/__init__.py:Config.inipath",
      "type": "function",
      "name": "Config.inipath",
      "file": "src/_pytest/config/__init__.py",
      "line": 1036
    },
    {
      "id": "src/_pytest/config/__init__.py:Config.add_cleanup",
      "type": "function",
      "name": "Config.add_cleanup",
      "file": "src/_pytest/config/__init__.py",
      "line": 1045
    },
    {
      "id": "src/_pytest/config/__init__.py:Config._do_configure",
      "type": "function",
      "name": "Config._do_configure",
      "file": "src/_pytest/config/__init__.py",
      "line": 1050
    },
    {
      "id": "src/_pytest/config/__init__.py:Config._ensure_unconfigure",
      "type": "function",
      "name": "Config._ensure_unconfigure",
      "file": "src/_pytest/config/__init__.py",
      "line": 1057
    },
    {
      "id": "src/_pytest/config/__init__.py:Config.get_terminal_writer",
      "type": "function",
      "name": "Config.get_terminal_writer",
      "file": "src/_pytest/config/__init__.py",
      "line": 1066
    },
    {
      "id": "src/_pytest/config/__init__.py:Config.pytest_cmdline_parse",
      "type": "function",
      "name": "Config.pytest_cmdline_parse",
      "file": "src/_pytest/config/__init__.py",
      "line": 1072
    },
    {
      "id": "src/_pytest/config/__init__.py:Config.notify_exception",
      "type": "function",
      "name": "Config.notify_exception",
      "file": "src/_pytest/config/__init__.py",
      "line": 1097
    },
    {
      "id": "src/_pytest/config/__init__.py:Config.cwd_relative_nodeid",
      "type": "function",
      "name": "Config.cwd_relative_nodeid",
      "file": "src/_pytest/config/__init__.py",
      "line": 1115
    },
    {
      "id": "src/_pytest/config/__init__.py:Config.fromdictargs",
      "type": "function",
      "name": "Config.fromdictargs",
      "file": "src/_pytest/config/__init__.py",
      "line": 1123
    },
    {
      "id": "src/_pytest/config/__init__.py:Config._processopt",
      "type": "function",
      "name": "Config._processopt",
      "file": "src/_pytest/config/__init__.py",
      "line": 1132
    },
    {
      "id": "src/_pytest/config/__init__.py:Config.pytest_load_initial_conftests",
      "type": "function",
      "name": "Config.pytest_load_initial_conftests",
      "file": "src/_pytest/config/__init__.py",
      "line": 1141
    },
    {
      "id": "src/_pytest/config/__init__.py:Config._initini",
      "type": "function",
      "name": "Config._initini",
      "file": "src/_pytest/config/__init__.py",
      "line": 1163
    },
    {
      "id": "src/_pytest/config/__init__.py:Config._consider_importhook",
      "type": "function",
      "name": "Config._consider_importhook",
      "file": "src/_pytest/config/__init__.py",
      "line": 1188
    },
    {
      "id": "src/_pytest/config/__init__.py:Config._mark_plugins_for_rewrite",
      "type": "function",
      "name": "Config._mark_plugins_for_rewrite",
      "file": "src/_pytest/config/__init__.py",
      "line": 1208
    },
    {
      "id": "src/_pytest/config/__init__.py:Config._validate_args",
      "type": "function",
      "name": "Config._validate_args",
      "file": "src/_pytest/config/__init__.py",
      "line": 1228
    },
    {
      "id": "src/_pytest/config/__init__.py:Config._decide_args",
      "type": "function",
      "name": "Config._decide_args",
      "file": "src/_pytest/config/__init__.py",
      "line": 1240
    },
    {
      "id": "src/_pytest/config/__init__.py:Config._preparse",
      "type": "function",
      "name": "Config._preparse",
      "file": "src/_pytest/config/__init__.py",
      "line": 1283
    },
    {
      "id": "src/_pytest/config/__init__.py:Config.pytest_collection",
      "type": "function",
      "name": "Config.pytest_collection",
      "file": "src/_pytest/config/__init__.py",
      "line": 1343
    },
    {
      "id": "src/_pytest/config/__init__.py:Config._checkversion",
      "type": "function",
      "name": "Config._checkversion",
      "file": "src/_pytest/config/__init__.py",
      "line": 1349
    },
    {
      "id": "src/_pytest/config/__init__.py:Config._validate_config_options",
      "type": "function",
      "name": "Config._validate_config_options",
      "file": "src/_pytest/config/__init__.py",
      "line": 1372
    },
    {
      "id": "src/_pytest/config/__init__.py:Config._validate_plugins",
      "type": "function",
      "name": "Config._validate_plugins",
      "file": "src/_pytest/config/__init__.py",
      "line": 1376
    },
    {
      "id": "src/_pytest/config/__init__.py:Config._warn_or_fail_if_strict",
      "type": "function",
      "name": "Config._warn_or_fail_if_strict",
      "file": "src/_pytest/config/__init__.py",
      "line": 1408
    },
    {
      "id": "src/_pytest/config/__init__.py:Config._get_unknown_ini_keys",
      "type": "function",
      "name": "Config._get_unknown_ini_keys",
      "file": "src/_pytest/config/__init__.py",
      "line": 1414
    },
    {
      "id": "src/_pytest/config/__init__.py:Config.parse",
      "type": "function",
      "name": "Config.parse",
      "file": "src/_pytest/config/__init__.py",
      "line": 1418
    },
    {
      "id": "src/_pytest/config/__init__.py:Config.issue_config_time_warning",
      "type": "function",
      "name": "Config.issue_config_time_warning",
      "file": "src/_pytest/config/__init__.py",
      "line": 1445
    },
    {
      "id": "src/_pytest/config/__init__.py:Config.addinivalue_line",
      "type": "function",
      "name": "Config.addinivalue_line",
      "file": "src/_pytest/config/__init__.py",
      "line": 1480
    },
    {
      "id": "src/_pytest/config/__init__.py:Config.getini",
      "type": "function",
      "name": "Config.getini",
      "file": "src/_pytest/config/__init__.py",
      "line": 1488
    },
    {
      "id": "src/_pytest/config/__init__.py:Config._getini_unknown_type",
      "type": "function",
      "name": "Config._getini_unknown_type",
      "file": "src/_pytest/config/__init__.py",
      "line": 1503
    },
    {
      "id": "src/_pytest/config/__init__.py:Config._getini",
      "type": "function",
      "name": "Config._getini",
      "file": "src/_pytest/config/__init__.py",
      "line": 1507
    },
    {
      "id": "src/_pytest/config/__init__.py:Config._getconftest_pathlist",
      "type": "function",
      "name": "Config._getconftest_pathlist",
      "file": "src/_pytest/config/__init__.py",
      "line": 1561
    },
    {
      "id": "src/_pytest/config/__init__.py:Config._get_override_ini_value",
      "type": "function",
      "name": "Config._get_override_ini_value",
      "file": "src/_pytest/config/__init__.py",
      "line": 1582
    },
    {
      "id": "src/_pytest/config/__init__.py:Config.getoption",
      "type": "function",
      "name": "Config.getoption",
      "file": "src/_pytest/config/__init__.py",
      "line": 1601
    },
    {
      "id": "src/_pytest/config/__init__.py:Config.getvalue",
      "type": "function",
      "name": "Config.getvalue",
      "file": "src/_pytest/config/__init__.py",
      "line": 1625
    },
    {
      "id": "src/_pytest/config/__init__.py:Config.getvalueorskip",
      "type": "function",
      "name": "Config.getvalueorskip",
      "file": "src/_pytest/config/__init__.py",
      "line": 1629
    },
    {
      "id": "src/_pytest/config/__init__.py:Config._warn_about_missing_assertion",
      "type": "function",
      "name": "Config._warn_about_missing_assertion",
      "file": "src/_pytest/config/__init__.py",
      "line": 1633
    },
    {
      "id": "src/_pytest/config/__init__.py:Config._warn_about_skipped_plugins",
      "type": "function",
      "name": "Config._warn_about_skipped_plugins",
      "file": "src/_pytest/config/__init__.py",
      "line": 1654
    },
    {
      "id": "src/_pytest/config/__init__.py:_assertion_supported",
      "type": "function",
      "name": "_assertion_supported",
      "file": "src/_pytest/config/__init__.py",
      "line": 1662
    },
    {
      "id": "src/_pytest/config/__init__.py:create_terminal_writer",
      "type": "function",
      "name": "create_terminal_writer",
      "file": "src/_pytest/config/__init__.py",
      "line": 1671
    },
    {
      "id": "src/_pytest/config/__init__.py:_strtobool",
      "type": "function",
      "name": "_strtobool",
      "file": "src/_pytest/config/__init__.py",
      "line": 1695
    },
    {
      "id": "src/_pytest/config/__init__.py:parse_warning_filter",
      "type": "function",
      "name": "parse_warning_filter",
      "file": "src/_pytest/config/__init__.py",
      "line": 1714
    },
    {
      "id": "src/_pytest/config/__init__.py:_resolve_warning_category",
      "type": "function",
      "name": "_resolve_warning_category",
      "file": "src/_pytest/config/__init__.py",
      "line": 1785
    },
    {
      "id": "src/_pytest/config/__init__.py:apply_warning_filters",
      "type": "function",
      "name": "apply_warning_filters",
      "file": "src/_pytest/config/__init__.py",
      "line": 1807
    },
    {
      "id": "src/_pytest/config/findpaths.py",
      "type": "file",
      "name": "findpaths.py",
      "file": "src/_pytest/config/findpaths.py",
      "line": 0
    },
    {
      "id": "src/_pytest/config/findpaths.py:_parse_ini_config",
      "type": "function",
      "name": "_parse_ini_config",
      "file": "src/_pytest/config/findpaths.py",
      "line": 24
    },
    {
      "id": "src/_pytest/config/findpaths.py:load_config_dict_from_file",
      "type": "function",
      "name": "load_config_dict_from_file",
      "file": "src/_pytest/config/findpaths.py",
      "line": 36
    },
    {
      "id": "src/_pytest/config/findpaths.py:load_config_dict_from_file.make_scalar",
      "type": "function",
      "name": "load_config_dict_from_file.make_scalar",
      "file": "src/_pytest/config/findpaths.py",
      "line": 84
    },
    {
      "id": "src/_pytest/config/findpaths.py:locate_config",
      "type": "function",
      "name": "locate_config",
      "file": "src/_pytest/config/findpaths.py",
      "line": 92
    },
    {
      "id": "src/_pytest/config/findpaths.py:get_common_ancestor",
      "type": "function",
      "name": "get_common_ancestor",
      "file": "src/_pytest/config/findpaths.py",
      "line": 119
    },
    {
      "id": "src/_pytest/config/findpaths.py:get_dirs_from_args",
      "type": "function",
      "name": "get_dirs_from_args",
      "file": "src/_pytest/config/findpaths.py",
      "line": 142
    },
    {
      "id": "src/_pytest/config/findpaths.py:get_dirs_from_args.is_option",
      "type": "function",
      "name": "get_dirs_from_args.is_option",
      "file": "src/_pytest/config/findpaths.py",
      "line": 143
    },
    {
      "id": "src/_pytest/config/findpaths.py:get_dirs_from_args.get_file_part_from_node_id",
      "type": "function",
      "name": "get_dirs_from_args.get_file_part_from_node_id",
      "file": "src/_pytest/config/findpaths.py",
      "line": 146
    },
    {
      "id": "src/_pytest/config/findpaths.py:get_dirs_from_args.get_dir_from_path",
      "type": "function",
      "name": "get_dirs_from_args.get_dir_from_path",
      "file": "src/_pytest/config/findpaths.py",
      "line": 149
    },
    {
      "id": "src/_pytest/config/findpaths.py:get_dirs_from_args.safe_exists",
      "type": "function",
      "name": "get_dirs_from_args.safe_exists",
      "file": "src/_pytest/config/findpaths.py",
      "line": 154
    },
    {
      "id": "src/_pytest/config/findpaths.py:determine_setup",
      "type": "function",
      "name": "determine_setup",
      "file": "src/_pytest/config/findpaths.py",
      "line": 175
    },
    {
      "id": "src/_pytest/config/findpaths.py:is_fs_root",
      "type": "function",
      "name": "is_fs_root",
      "file": "src/_pytest/config/findpaths.py",
      "line": 220
    },
    {
      "id": "src/_pytest/config/exceptions.py",
      "type": "file",
      "name": "exceptions.py",
      "file": "src/_pytest/config/exceptions.py",
      "line": 0
    },
    {
      "id": "src/_pytest/config/exceptions.py:UsageError",
      "type": "class",
      "name": "UsageError",
      "file": "src/_pytest/config/exceptions.py",
      "line": 5
    },
    {
      "id": "src/_pytest/config/exceptions.py:PrintHelp",
      "type": "class",
      "name": "PrintHelp",
      "file": "src/_pytest/config/exceptions.py",
      "line": 9
    },
    {
      "id": "src/_pytest/config/argparsing.py",
      "type": "file",
      "name": "argparsing.py",
      "file": "src/_pytest/config/argparsing.py",
      "line": 0
    },
    {
      "id": "src/_pytest/config/argparsing.py:Parser",
      "type": "class",
      "name": "Parser",
      "file": "src/_pytest/config/argparsing.py",
      "line": 34
    },
    {
      "id": "src/_pytest/config/argparsing.py:Parser.processoption",
      "type": "function",
      "name": "Parser.processoption",
      "file": "src/_pytest/config/argparsing.py",
      "line": 59
    },
    {
      "id": "src/_pytest/config/argparsing.py:Parser.getgroup",
      "type": "function",
      "name": "Parser.getgroup",
      "file": "src/_pytest/config/argparsing.py",
      "line": 64
    },
    {
      "id": "src/_pytest/config/argparsing.py:Parser.addoption",
      "type": "function",
      "name": "Parser.addoption",
      "file": "src/_pytest/config/argparsing.py",
      "line": 90
    },
    {
      "id": "src/_pytest/config/argparsing.py:Parser.parse",
      "type": "function",
      "name": "Parser.parse",
      "file": "src/_pytest/config/argparsing.py",
      "line": 106
    },
    {
      "id": "src/_pytest/config/argparsing.py:Parser._getparser",
      "type": "function",
      "name": "Parser._getparser",
      "file": "src/_pytest/config/argparsing.py",
      "line": 118
    },
    {
      "id": "src/_pytest/config/argparsing.py:Parser.parse_setoption",
      "type": "function",
      "name": "Parser.parse_setoption",
      "file": "src/_pytest/config/argparsing.py",
      "line": 137
    },
    {
      "id": "src/_pytest/config/argparsing.py:Parser.parse_known_args",
      "type": "function",
      "name": "Parser.parse_known_args",
      "file": "src/_pytest/config/argparsing.py",
      "line": 148
    },
    {
      "id": "src/_pytest/config/argparsing.py:Parser.parse_known_and_unknown_args",
      "type": "function",
      "name": "Parser.parse_known_and_unknown_args",
      "file": "src/_pytest/config/argparsing.py",
      "line": 159
    },
    {
      "id": "src/_pytest/config/argparsing.py:Parser.addini",
      "type": "function",
      "name": "Parser.addini",
      "file": "src/_pytest/config/argparsing.py",
      "line": 175
    },
    {
      "id": "src/_pytest/config/argparsing.py:ArgumentError",
      "type": "class",
      "name": "ArgumentError",
      "file": "src/_pytest/config/argparsing.py",
      "line": 213
    },
    {
      "id": "src/_pytest/config/argparsing.py:ArgumentError.__str__",
      "type": "function",
      "name": "ArgumentError.__str__",
      "file": "src/_pytest/config/argparsing.py",
      "line": 221
    },
    {
      "id": "src/_pytest/config/argparsing.py:Argument",
      "type": "class",
      "name": "Argument",
      "file": "src/_pytest/config/argparsing.py",
      "line": 228
    },
    {
      "id": "src/_pytest/config/argparsing.py:Argument.names",
      "type": "function",
      "name": "Argument.names",
      "file": "src/_pytest/config/argparsing.py",
      "line": 288
    },
    {
      "id": "src/_pytest/config/argparsing.py:Argument.attrs",
      "type": "function",
      "name": "Argument.attrs",
      "file": "src/_pytest/config/argparsing.py",
      "line": 291
    },
    {
      "id": "src/_pytest/config/argparsing.py:Argument._set_opt_strings",
      "type": "function",
      "name": "Argument._set_opt_strings",
      "file": "src/_pytest/config/argparsing.py",
      "line": 307
    },
    {
      "id": "src/_pytest/config/argparsing.py:Argument.__repr__",
      "type": "function",
      "name": "Argument.__repr__",
      "file": "src/_pytest/config/argparsing.py",
      "line": 336
    },
    {
      "id": "src/_pytest/config/argparsing.py:OptionGroup",
      "type": "class",
      "name": "OptionGroup",
      "file": "src/_pytest/config/argparsing.py",
      "line": 350
    },
    {
      "id": "src/_pytest/config/argparsing.py:OptionGroup.addoption",
      "type": "function",
      "name": "OptionGroup.addoption",
      "file": "src/_pytest/config/argparsing.py",
      "line": 367
    },
    {
      "id": "src/_pytest/config/argparsing.py:OptionGroup._addoption",
      "type": "function",
      "name": "OptionGroup._addoption",
      "file": "src/_pytest/config/argparsing.py",
      "line": 389
    },
    {
      "id": "src/_pytest/config/argparsing.py:OptionGroup._addoption_instance",
      "type": "function",
      "name": "OptionGroup._addoption_instance",
      "file": "src/_pytest/config/argparsing.py",
      "line": 393
    },
    {
      "id": "src/_pytest/config/argparsing.py:MyOptionParser",
      "type": "class",
      "name": "MyOptionParser",
      "file": "src/_pytest/config/argparsing.py",
      "line": 403
    },
    {
      "id": "src/_pytest/config/argparsing.py:MyOptionParser.error",
      "type": "function",
      "name": "MyOptionParser.error",
      "file": "src/_pytest/config/argparsing.py",
      "line": 422
    },
    {
      "id": "src/_pytest/config/argparsing.py:MyOptionParser.parse_args",
      "type": "function",
      "name": "MyOptionParser.parse_args",
      "file": "src/_pytest/config/argparsing.py",
      "line": 433
    },
    {
      "id": "src/_pytest/config/argparsing.py:MyOptionParser._parse_optional",
      "type": "function",
      "name": "MyOptionParser._parse_optional",
      "file": "src/_pytest/config/argparsing.py",
      "line": 453
    },
    {
      "id": "src/_pytest/config/argparsing.py:DropShorterLongHelpFormatter",
      "type": "class",
      "name": "DropShorterLongHelpFormatter",
      "file": "src/_pytest/config/argparsing.py",
      "line": 489
    },
    {
      "id": "src/_pytest/config/argparsing.py:DropShorterLongHelpFormatter._format_action_invocation",
      "type": "function",
      "name": "DropShorterLongHelpFormatter._format_action_invocation",
      "file": "src/_pytest/config/argparsing.py",
      "line": 503
    },
    {
      "id": "src/_pytest/config/argparsing.py:DropShorterLongHelpFormatter._split_lines",
      "type": "function",
      "name": "DropShorterLongHelpFormatter._split_lines",
      "file": "src/_pytest/config/argparsing.py",
      "line": 541
    },
    {
      "id": "src/_pytest/mark",
      "type": "directory",
      "name": "mark",
      "file": "",
      "line": 0
    },
    {
      "id": "src/_pytest/mark/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "src/_pytest/mark/__init__.py",
      "line": 0
    },
    {
      "id": "src/_pytest/mark/__init__.py:param",
      "type": "function",
      "name": "param",
      "file": "src/_pytest/mark/__init__.py",
      "line": 43
    },
    {
      "id": "src/_pytest/mark/__init__.py:pytest_addoption",
      "type": "function",
      "name": "pytest_addoption",
      "file": "src/_pytest/mark/__init__.py",
      "line": 70
    },
    {
      "id": "src/_pytest/mark/__init__.py:pytest_cmdline_main",
      "type": "function",
      "name": "pytest_cmdline_main",
      "file": "src/_pytest/mark/__init__.py",
      "line": 113
    },
    {
      "id": "src/_pytest/mark/__init__.py:KeywordMatcher",
      "type": "class",
      "name": "KeywordMatcher",
      "file": "src/_pytest/mark/__init__.py",
      "line": 133
    },
    {
      "id": "src/_pytest/mark/__init__.py:KeywordMatcher.from_item",
      "type": "function",
      "name": "KeywordMatcher.from_item",
      "file": "src/_pytest/mark/__init__.py",
      "line": 152
    },
    {
      "id": "src/_pytest/mark/__init__.py:KeywordMatcher.__call__",
      "type": "function",
      "name": "KeywordMatcher.__call__",
      "file": "src/_pytest/mark/__init__.py",
      "line": 175
    },
    {
      "id": "src/_pytest/mark/__init__.py:deselect_by_keyword",
      "type": "function",
      "name": "deselect_by_keyword",
      "file": "src/_pytest/mark/__init__.py",
      "line": 185
    },
    {
      "id": "src/_pytest/mark/__init__.py:MarkMatcher",
      "type": "class",
      "name": "MarkMatcher",
      "file": "src/_pytest/mark/__init__.py",
      "line": 206
    },
    {
      "id": "src/_pytest/mark/__init__.py:MarkMatcher.from_item",
      "type": "function",
      "name": "MarkMatcher.from_item",
      "file": "src/_pytest/mark/__init__.py",
      "line": 217
    },
    {
      "id": "src/_pytest/mark/__init__.py:MarkMatcher.__call__",
      "type": "function",
      "name": "MarkMatcher.__call__",
      "file": "src/_pytest/mark/__init__.py",
      "line": 221
    },
    {
      "id": "src/_pytest/mark/__init__.py:deselect_by_mark",
      "type": "function",
      "name": "deselect_by_mark",
      "file": "src/_pytest/mark/__init__.py",
      "line": 225
    },
    {
      "id": "src/_pytest/mark/__init__.py:_parse_expression",
      "type": "function",
      "name": "_parse_expression",
      "file": "src/_pytest/mark/__init__.py",
      "line": 243
    },
    {
      "id": "src/_pytest/mark/__init__.py:pytest_collection_modifyitems",
      "type": "function",
      "name": "pytest_collection_modifyitems",
      "file": "src/_pytest/mark/__init__.py",
      "line": 250
    },
    {
      "id": "src/_pytest/mark/__init__.py:pytest_configure",
      "type": "function",
      "name": "pytest_configure",
      "file": "src/_pytest/mark/__init__.py",
      "line": 255
    },
    {
      "id": "src/_pytest/mark/__init__.py:pytest_unconfigure",
      "type": "function",
      "name": "pytest_unconfigure",
      "file": "src/_pytest/mark/__init__.py",
      "line": 268
    },
    {
      "id": "src/_pytest/mark/structures.py",
      "type": "file",
      "name": "structures.py",
      "file": "src/_pytest/mark/structures.py",
      "line": 0
    },
    {
      "id": "src/_pytest/mark/structures.py:istestfunc",
      "type": "function",
      "name": "istestfunc",
      "file": "src/_pytest/mark/structures.py",
      "line": 42
    },
    {
      "id": "src/_pytest/mark/structures.py:get_empty_parameterset_mark",
      "type": "function",
      "name": "get_empty_parameterset_mark",
      "file": "src/_pytest/mark/structures.py",
      "line": 46
    },
    {
      "id": "src/_pytest/mark/structures.py:ParameterSet",
      "type": "class",
      "name": "ParameterSet",
      "file": "src/_pytest/mark/structures.py",
      "line": 75
    },
    {
      "id": "src/_pytest/mark/structures.py:ParameterSet.param",
      "type": "function",
      "name": "ParameterSet.param",
      "file": "src/_pytest/mark/structures.py",
      "line": 81
    },
    {
      "id": "src/_pytest/mark/structures.py:ParameterSet.extract_from",
      "type": "function",
      "name": "ParameterSet.extract_from",
      "file": "src/_pytest/mark/structures.py",
      "line": 99
    },
    {
      "id": "src/_pytest/mark/structures.py:ParameterSet._parse_parametrize_args",
      "type": "function",
      "name": "ParameterSet._parse_parametrize_args",
      "file": "src/_pytest/mark/structures.py",
      "line": 128
    },
    {
      "id": "src/_pytest/mark/structures.py:ParameterSet._parse_parametrize_parameters",
      "type": "function",
      "name": "ParameterSet._parse_parametrize_parameters",
      "file": "src/_pytest/mark/structures.py",
      "line": 142
    },
    {
      "id": "src/_pytest/mark/structures.py:ParameterSet._for_parametrize",
      "type": "function",
      "name": "ParameterSet._for_parametrize",
      "file": "src/_pytest/mark/structures.py",
      "line": 151
    },
    {
      "id": "src/_pytest/mark/structures.py:Mark",
      "type": "class",
      "name": "Mark",
      "file": "src/_pytest/mark/structures.py",
      "line": 195
    },
    {
      "id": "src/_pytest/mark/structures.py:Mark._has_param_ids",
      "type": "function",
      "name": "Mark._has_param_ids",
      "file": "src/_pytest/mark/structures.py",
      "line": 231
    },
    {
      "id": "src/_pytest/mark/structures.py:Mark.combined_with",
      "type": "function",
      "name": "Mark.combined_with",
      "file": "src/_pytest/mark/structures.py",
      "line": 234
    },
    {
      "id": "src/_pytest/mark/structures.py:MarkDecorator",
      "type": "class",
      "name": "MarkDecorator",
      "file": "src/_pytest/mark/structures.py",
      "line": 269
    },
    {
      "id": "src/_pytest/mark/structures.py:MarkDecorator.name",
      "type": "function",
      "name": "MarkDecorator.name",
      "file": "src/_pytest/mark/structures.py",
      "line": 312
    },
    {
      "id": "src/_pytest/mark/structures.py:MarkDecorator.args",
      "type": "function",
      "name": "MarkDecorator.args",
      "file": "src/_pytest/mark/structures.py",
      "line": 317
    },
    {
      "id": "src/_pytest/mark/structures.py:MarkDecorator.kwargs",
      "type": "function",
      "name": "MarkDecorator.kwargs",
      "file": "src/_pytest/mark/structures.py",
      "line": 322
    },
    {
      "id": "src/_pytest/mark/structures.py:MarkDecorator.markname",
      "type": "function",
      "name": "MarkDecorator.markname",
      "file": "src/_pytest/mark/structures.py",
      "line": 327
    },
    {
      "id": "src/_pytest/mark/structures.py:MarkDecorator.with_args",
      "type": "function",
      "name": "MarkDecorator.with_args",
      "file": "src/_pytest/mark/structures.py",
      "line": 331
    },
    {
      "id": "src/_pytest/mark/structures.py:MarkDecorator.__call__",
      "type": "function",
      "name": "MarkDecorator.__call__",
      "file": "src/_pytest/mark/structures.py",
      "line": 351
    },
    {
      "id": "src/_pytest/mark/structures.py:get_unpacked_marks",
      "type": "function",
      "name": "get_unpacked_marks",
      "file": "src/_pytest/mark/structures.py",
      "line": 362
    },
    {
      "id": "src/_pytest/mark/structures.py:normalize_mark_list",
      "type": "function",
      "name": "normalize_mark_list",
      "file": "src/_pytest/mark/structures.py",
      "line": 395
    },
    {
      "id": "src/_pytest/mark/structures.py:store_mark",
      "type": "function",
      "name": "store_mark",
      "file": "src/_pytest/mark/structures.py",
      "line": 412
    },
    {
      "id": "src/_pytest/mark/structures.py:_SkipMarkDecorator",
      "type": "class",
      "name": "_SkipMarkDecorator",
      "file": "src/_pytest/mark/structures.py",
      "line": 434
    },
    {
      "id": "src/_pytest/mark/structures.py:_SkipMarkDecorator.__call__",
      "type": "function",
      "name": "_SkipMarkDecorator.__call__",
      "file": "src/_pytest/mark/structures.py",
      "line": 440
    },
    {
      "id": "src/_pytest/mark/structures.py:_SkipifMarkDecorator",
      "type": "class",
      "name": "_SkipifMarkDecorator",
      "file": "src/_pytest/mark/structures.py",
      "line": 443
    },
    {
      "id": "src/_pytest/mark/structures.py:_SkipifMarkDecorator.__call__",
      "type": "function",
      "name": "_SkipifMarkDecorator.__call__",
      "file": "src/_pytest/mark/structures.py",
      "line": 444
    },
    {
      "id": "src/_pytest/mark/structures.py:_XfailMarkDecorator",
      "type": "class",
      "name": "_XfailMarkDecorator",
      "file": "src/_pytest/mark/structures.py",
      "line": 452
    },
    {
      "id": "src/_pytest/mark/structures.py:_XfailMarkDecorator.__call__",
      "type": "function",
      "name": "_XfailMarkDecorator.__call__",
      "file": "src/_pytest/mark/structures.py",
      "line": 458
    },
    {
      "id": "src/_pytest/mark/structures.py:_ParametrizeMarkDecorator",
      "type": "class",
      "name": "_ParametrizeMarkDecorator",
      "file": "src/_pytest/mark/structures.py",
      "line": 469
    },
    {
      "id": "src/_pytest/mark/structures.py:_ParametrizeMarkDecorator.__call__",
      "type": "function",
      "name": "_ParametrizeMarkDecorator.__call__",
      "file": "src/_pytest/mark/structures.py",
      "line": 470
    },
    {
      "id": "src/_pytest/mark/structures.py:_UsefixturesMarkDecorator",
      "type": "class",
      "name": "_UsefixturesMarkDecorator",
      "file": "src/_pytest/mark/structures.py",
      "line": 486
    },
    {
      "id": "src/_pytest/mark/structures.py:_UsefixturesMarkDecorator.__call__",
      "type": "function",
      "name": "_UsefixturesMarkDecorator.__call__",
      "file": "src/_pytest/mark/structures.py",
      "line": 487
    },
    {
      "id": "src/_pytest/mark/structures.py:_FilterwarningsMarkDecorator",
      "type": "class",
      "name": "_FilterwarningsMarkDecorator",
      "file": "src/_pytest/mark/structures.py",
      "line": 490
    },
    {
      "id": "src/_pytest/mark/structures.py:_FilterwarningsMarkDecorator.__call__",
      "type": "function",
      "name": "_FilterwarningsMarkDecorator.__call__",
      "file": "src/_pytest/mark/structures.py",
      "line": 491
    },
    {
      "id": "src/_pytest/mark/structures.py:MarkGenerator",
      "type": "class",
      "name": "MarkGenerator",
      "file": "src/_pytest/mark/structures.py",
      "line": 496
    },
    {
      "id": "src/_pytest/mark/structures.py:MarkGenerator.__getattr__",
      "type": "function",
      "name": "MarkGenerator.__getattr__",
      "file": "src/_pytest/mark/structures.py",
      "line": 525
    },
    {
      "id": "src/_pytest/mark/structures.py:NodeKeywords",
      "type": "class",
      "name": "NodeKeywords",
      "file": "src/_pytest/mark/structures.py",
      "line": 571
    },
    {
      "id": "src/_pytest/mark/structures.py:NodeKeywords.__getitem__",
      "type": "function",
      "name": "NodeKeywords.__getitem__",
      "file": "src/_pytest/mark/structures.py",
      "line": 579
    },
    {
      "id": "src/_pytest/mark/structures.py:NodeKeywords.__setitem__",
      "type": "function",
      "name": "NodeKeywords.__setitem__",
      "file": "src/_pytest/mark/structures.py",
      "line": 587
    },
    {
      "id": "src/_pytest/mark/structures.py:NodeKeywords.__contains__",
      "type": "function",
      "name": "NodeKeywords.__contains__",
      "file": "src/_pytest/mark/structures.py",
      "line": 593
    },
    {
      "id": "src/_pytest/mark/structures.py:NodeKeywords.update",
      "type": "function",
      "name": "NodeKeywords.update",
      "file": "src/_pytest/mark/structures.py",
      "line": 600
    },
    {
      "id": "src/_pytest/mark/structures.py:NodeKeywords.__delitem__",
      "type": "function",
      "name": "NodeKeywords.__delitem__",
      "file": "src/_pytest/mark/structures.py",
      "line": 608
    },
    {
      "id": "src/_pytest/mark/structures.py:NodeKeywords.__iter__",
      "type": "function",
      "name": "NodeKeywords.__iter__",
      "file": "src/_pytest/mark/structures.py",
      "line": 611
    },
    {
      "id": "src/_pytest/mark/structures.py:NodeKeywords.__len__",
      "type": "function",
      "name": "NodeKeywords.__len__",
      "file": "src/_pytest/mark/structures.py",
      "line": 620
    },
    {
      "id": "src/_pytest/mark/structures.py:NodeKeywords.__repr__",
      "type": "function",
      "name": "NodeKeywords.__repr__",
      "file": "src/_pytest/mark/structures.py",
      "line": 624
    },
    {
      "id": "src/_pytest/mark/expression.py",
      "type": "file",
      "name": "expression.py",
      "file": "src/_pytest/mark/expression.py",
      "line": 0
    },
    {
      "id": "src/_pytest/mark/expression.py:TokenType",
      "type": "class",
      "name": "TokenType",
      "file": "src/_pytest/mark/expression.py",
      "line": 35
    },
    {
      "id": "src/_pytest/mark/expression.py:Token",
      "type": "class",
      "name": "Token",
      "file": "src/_pytest/mark/expression.py",
      "line": 46
    },
    {
      "id": "src/_pytest/mark/expression.py:ParseError",
      "type": "class",
      "name": "ParseError",
      "file": "src/_pytest/mark/expression.py",
      "line": 53
    },
    {
      "id": "src/_pytest/mark/expression.py:ParseError.__str__",
      "type": "function",
      "name": "ParseError.__str__",
      "file": "src/_pytest/mark/expression.py",
      "line": 64
    },
    {
      "id": "src/_pytest/mark/expression.py:Scanner",
      "type": "class",
      "name": "Scanner",
      "file": "src/_pytest/mark/expression.py",
      "line": 68
    },
    {
      "id": "src/_pytest/mark/expression.py:Scanner.lex",
      "type": "function",
      "name": "Scanner.lex",
      "file": "src/_pytest/mark/expression.py",
      "line": 75
    },
    {
      "id": "src/_pytest/mark/expression.py:Scanner.accept",
      "type": "function",
      "name": "Scanner.accept",
      "file": "src/_pytest/mark/expression.py",
      "line": 106
    },
    {
      "id": "src/_pytest/mark/expression.py:Scanner.reject",
      "type": "function",
      "name": "Scanner.reject",
      "file": "src/_pytest/mark/expression.py",
      "line": 116
    },
    {
      "id": "src/_pytest/mark/expression.py:expression",
      "type": "function",
      "name": "expression",
      "file": "src/_pytest/mark/expression.py",
      "line": 132
    },
    {
      "id": "src/_pytest/mark/expression.py:expr",
      "type": "function",
      "name": "expr",
      "file": "src/_pytest/mark/expression.py",
      "line": 141
    },
    {
      "id": "src/_pytest/mark/expression.py:and_expr",
      "type": "function",
      "name": "and_expr",
      "file": "src/_pytest/mark/expression.py",
      "line": 149
    },
    {
      "id": "src/_pytest/mark/expression.py:not_expr",
      "type": "function",
      "name": "not_expr",
      "file": "src/_pytest/mark/expression.py",
      "line": 157
    },
    {
      "id": "src/_pytest/mark/expression.py:MatcherAdapter",
      "type": "class",
      "name": "MatcherAdapter",
      "file": "src/_pytest/mark/expression.py",
      "line": 170
    },
    {
      "id": "src/_pytest/mark/expression.py:MatcherAdapter.__getitem__",
      "type": "function",
      "name": "MatcherAdapter.__getitem__",
      "file": "src/_pytest/mark/expression.py",
      "line": 176
    },
    {
      "id": "src/_pytest/mark/expression.py:MatcherAdapter.__iter__",
      "type": "function",
      "name": "MatcherAdapter.__iter__",
      "file": "src/_pytest/mark/expression.py",
      "line": 179
    },
    {
      "id": "src/_pytest/mark/expression.py:MatcherAdapter.__len__",
      "type": "function",
      "name": "MatcherAdapter.__len__",
      "file": "src/_pytest/mark/expression.py",
      "line": 182
    },
    {
      "id": "src/_pytest/mark/expression.py:Expression",
      "type": "class",
      "name": "Expression",
      "file": "src/_pytest/mark/expression.py",
      "line": 186
    },
    {
      "id": "src/_pytest/mark/expression.py:Expression.compile",
      "type": "function",
      "name": "Expression.compile",
      "file": "src/_pytest/mark/expression.py",
      "line": 198
    },
    {
      "id": "src/_pytest/mark/expression.py:Expression.evaluate",
      "type": "function",
      "name": "Expression.evaluate",
      "file": "src/_pytest/mark/expression.py",
      "line": 211
    },
    {
      "id": "src/_pytest/_code",
      "type": "directory",
      "name": "_code",
      "file": "",
      "line": 0
    },
    {
      "id": "src/_pytest/_code/code.py",
      "type": "file",
      "name": "code.py",
      "file": "src/_pytest/_code/code.py",
      "line": 0
    },
    {
      "id": "src/_pytest/_code/code.py:Code",
      "type": "class",
      "name": "Code",
      "file": "src/_pytest/_code/code.py",
      "line": 59
    },
    {
      "id": "src/_pytest/_code/code.py:Code.from_function",
      "type": "function",
      "name": "Code.from_function",
      "file": "src/_pytest/_code/code.py",
      "line": 68
    },
    {
      "id": "src/_pytest/_code/code.py:Code.__eq__",
      "type": "function",
      "name": "Code.__eq__",
      "file": "src/_pytest/_code/code.py",
      "line": 71
    },
    {
      "id": "src/_pytest/_code/code.py:Code.firstlineno",
      "type": "function",
      "name": "Code.firstlineno",
      "file": "src/_pytest/_code/code.py",
      "line": 78
    },
    {
      "id": "src/_pytest/_code/code.py:Code.name",
      "type": "function",
      "name": "Code.name",
      "file": "src/_pytest/_code/code.py",
      "line": 82
    },
    {
      "id": "src/_pytest/_code/code.py:Code.path",
      "type": "function",
      "name": "Code.path",
      "file": "src/_pytest/_code/code.py",
      "line": 86
    },
    {
      "id": "src/_pytest/_code/code.py:Code.fullsource",
      "type": "function",
      "name": "Code.fullsource",
      "file": "src/_pytest/_code/code.py",
      "line": 103
    },
    {
      "id": "src/_pytest/_code/code.py:Code.source",
      "type": "function",
      "name": "Code.source",
      "file": "src/_pytest/_code/code.py",
      "line": 108
    },
    {
      "id": "src/_pytest/_code/code.py:Code.getargs",
      "type": "function",
      "name": "Code.getargs",
      "file": "src/_pytest/_code/code.py",
      "line": 113
    },
    {
      "id": "src/_pytest/_code/code.py:Frame",
      "type": "class",
      "name": "Frame",
      "file": "src/_pytest/_code/code.py",
      "line": 128
    },
    {
      "id": "src/_pytest/_code/code.py:Frame.lineno",
      "type": "function",
      "name": "Frame.lineno",
      "file": "src/_pytest/_code/code.py",
      "line": 138
    },
    {
      "id": "src/_pytest/_code/code.py:Frame.f_globals",
      "type": "function",
      "name": "Frame.f_globals",
      "file": "src/_pytest/_code/code.py",
      "line": 142
    },
    {
      "id": "src/_pytest/_code/code.py:Frame.f_locals",
      "type": "function",
      "name": "Frame.f_locals",
      "file": "src/_pytest/_code/code.py",
      "line": 146
    },
    {
      "id": "src/_pytest/_code/code.py:Frame.code",
      "type": "function",
      "name": "Frame.code",
      "file": "src/_pytest/_code/code.py",
      "line": 150
    },
    {
      "id": "src/_pytest/_code/code.py:Frame.statement",
      "type": "function",
      "name": "Frame.statement",
      "file": "src/_pytest/_code/code.py",
      "line": 154
    },
    {
      "id": "src/_pytest/_code/code.py:Frame.eval",
      "type": "function",
      "name": "Frame.eval",
      "file": "src/_pytest/_code/code.py",
      "line": 160
    },
    {
      "id": "src/_pytest/_code/code.py:Frame.repr",
      "type": "function",
      "name": "Frame.repr",
      "file": "src/_pytest/_code/code.py",
      "line": 171
    },
    {
      "id": "src/_pytest/_code/code.py:Frame.getargs",
      "type": "function",
      "name": "Frame.getargs",
      "file": "src/_pytest/_code/code.py",
      "line": 175
    },
    {
      "id": "src/_pytest/_code/code.py:TracebackEntry",
      "type": "class",
      "name": "TracebackEntry",
      "file": "src/_pytest/_code/code.py",
      "line": 190
    },
    {
      "id": "src/_pytest/_code/code.py:TracebackEntry.with_repr_style",
      "type": "function",
      "name": "TracebackEntry.with_repr_style",
      "file": "src/_pytest/_code/code.py",
      "line": 203
    },
    {
      "id": "src/_pytest/_code/code.py:TracebackEntry.lineno",
      "type": "function",
      "name": "TracebackEntry.lineno",
      "file": "src/_pytest/_code/code.py",
      "line": 209
    },
    {
      "id": "src/_pytest/_code/code.py:TracebackEntry.frame",
      "type": "function",
      "name": "TracebackEntry.frame",
      "file": "src/_pytest/_code/code.py",
      "line": 213
    },
    {
      "id": "src/_pytest/_code/code.py:TracebackEntry.relline",
      "type": "function",
      "name": "TracebackEntry.relline",
      "file": "src/_pytest/_code/code.py",
      "line": 217
    },
    {
      "id": "src/_pytest/_code/code.py:TracebackEntry.__repr__",
      "type": "function",
      "name": "TracebackEntry.__repr__",
      "file": "src/_pytest/_code/code.py",
      "line": 220
    },
    {
      "id": "src/_pytest/_code/code.py:TracebackEntry.statement",
      "type": "function",
      "name": "TracebackEntry.statement",
      "file": "src/_pytest/_code/code.py",
      "line": 224
    },
    {
      "id": "src/_pytest/_code/code.py:TracebackEntry.path",
      "type": "function",
      "name": "TracebackEntry.path",
      "file": "src/_pytest/_code/code.py",
      "line": 231
    },
    {
      "id": "src/_pytest/_code/code.py:TracebackEntry.locals",
      "type": "function",
      "name": "TracebackEntry.locals",
      "file": "src/_pytest/_code/code.py",
      "line": 236
    },
    {
      "id": "src/_pytest/_code/code.py:TracebackEntry.getfirstlinesource",
      "type": "function",
      "name": "TracebackEntry.getfirstlinesource",
      "file": "src/_pytest/_code/code.py",
      "line": 240
    },
    {
      "id": "src/_pytest/_code/code.py:TracebackEntry.getsource",
      "type": "function",
      "name": "TracebackEntry.getsource",
      "file": "src/_pytest/_code/code.py",
      "line": 243
    },
    {
      "id": "src/_pytest/_code/code.py:TracebackEntry.ishidden",
      "type": "function",
      "name": "TracebackEntry.ishidden",
      "file": "src/_pytest/_code/code.py",
      "line": 271
    },
    {
      "id": "src/_pytest/_code/code.py:TracebackEntry.__str__",
      "type": "function",
      "name": "TracebackEntry.__str__",
      "file": "src/_pytest/_code/code.py",
      "line": 298
    },
    {
      "id": "src/_pytest/_code/code.py:TracebackEntry.name",
      "type": "function",
      "name": "TracebackEntry.name",
      "file": "src/_pytest/_code/code.py",
      "line": 317
    },
    {
      "id": "src/_pytest/_code/code.py:Traceback",
      "type": "class",
      "name": "Traceback",
      "file": "src/_pytest/_code/code.py",
      "line": 322
    },
    {
      "id": "src/_pytest/_code/code.py:Traceback.cut",
      "type": "function",
      "name": "Traceback.cut",
      "file": "src/_pytest/_code/code.py",
      "line": 342
    },
    {
      "id": "src/_pytest/_code/code.py:Traceback.__getitem__",
      "type": "function",
      "name": "Traceback.__getitem__",
      "file": "src/_pytest/_code/code.py",
      "line": 386
    },
    {
      "id": "src/_pytest/_code/code.py:Traceback.filter",
      "type": "function",
      "name": "Traceback.filter",
      "file": "src/_pytest/_code/code.py",
      "line": 394
    },
    {
      "id": "src/_pytest/_code/code.py:Traceback.recursionindex",
      "type": "function",
      "name": "Traceback.recursionindex",
      "file": "src/_pytest/_code/code.py",
      "line": 417
    },
    {
      "id": "src/_pytest/_code/code.py:ExceptionInfo",
      "type": "class",
      "name": "ExceptionInfo",
      "file": "src/_pytest/_code/code.py",
      "line": 444
    },
    {
      "id": "src/_pytest/_code/code.py:ExceptionInfo.from_exception",
      "type": "function",
      "name": "ExceptionInfo.from_exception",
      "file": "src/_pytest/_code/code.py",
      "line": 467
    },
    {
      "id": "src/_pytest/_code/code.py:ExceptionInfo.from_exc_info",
      "type": "function",
      "name": "ExceptionInfo.from_exc_info",
      "file": "src/_pytest/_code/code.py",
      "line": 496
    },
    {
      "id": "src/_pytest/_code/code.py:ExceptionInfo.from_current",
      "type": "function",
      "name": "ExceptionInfo.from_current",
      "file": "src/_pytest/_code/code.py",
      "line": 513
    },
    {
      "id": "src/_pytest/_code/code.py:ExceptionInfo.for_later",
      "type": "function",
      "name": "ExceptionInfo.for_later",
      "file": "src/_pytest/_code/code.py",
      "line": 535
    },
    {
      "id": "src/_pytest/_code/code.py:ExceptionInfo.fill_unfilled",
      "type": "function",
      "name": "ExceptionInfo.fill_unfilled",
      "file": "src/_pytest/_code/code.py",
      "line": 539
    },
    {
      "id": "src/_pytest/_code/code.py:ExceptionInfo.type",
      "type": "function",
      "name": "ExceptionInfo.type",
      "file": "src/_pytest/_code/code.py",
      "line": 545
    },
    {
      "id": "src/_pytest/_code/code.py:ExceptionInfo.value",
      "type": "function",
      "name": "ExceptionInfo.value",
      "file": "src/_pytest/_code/code.py",
      "line": 553
    },
    {
      "id": "src/_pytest/_code/code.py:ExceptionInfo.tb",
      "type": "function",
      "name": "ExceptionInfo.tb",
      "file": "src/_pytest/_code/code.py",
      "line": 561
    },
    {
      "id": "src/_pytest/_code/code.py:ExceptionInfo.typename",
      "type": "function",
      "name": "ExceptionInfo.typename",
      "file": "src/_pytest/_code/code.py",
      "line": 569
    },
    {
      "id": "src/_pytest/_code/code.py:ExceptionInfo.traceback",
      "type": "function",
      "name": "ExceptionInfo.traceback",
      "file": "src/_pytest/_code/code.py",
      "line": 584
    },
    {
      "id": "src/_pytest/_code/code.py:ExceptionInfo.__repr__",
      "type": "function",
      "name": "ExceptionInfo.__repr__",
      "file": "src/_pytest/_code/code.py",
      "line": 587
    },
    {
      "id": "src/_pytest/_code/code.py:ExceptionInfo.exconly",
      "type": "function",
      "name": "ExceptionInfo.exconly",
      "file": "src/_pytest/_code/code.py",
      "line": 594
    },
    {
      "id": "src/_pytest/_code/code.py:ExceptionInfo.errisinstance",
      "type": "function",
      "name": "ExceptionInfo.errisinstance",
      "file": "src/_pytest/_code/code.py",
      "line": 610
    },
    {
      "id": "src/_pytest/_code/code.py:ExceptionInfo._getreprcrash",
      "type": "function",
      "name": "ExceptionInfo._getreprcrash",
      "file": "src/_pytest/_code/code.py",
      "line": 619
    },
    {
      "id": "src/_pytest/_code/code.py:ExceptionInfo.getrepr",
      "type": "function",
      "name": "ExceptionInfo.getrepr",
      "file": "src/_pytest/_code/code.py",
      "line": 630
    },
    {
      "id": "src/_pytest/_code/code.py:ExceptionInfo.match",
      "type": "function",
      "name": "ExceptionInfo.match",
      "file": "src/_pytest/_code/code.py",
      "line": 700
    },
    {
      "id": "src/_pytest/_code/code.py:FormattedExcinfo",
      "type": "class",
      "name": "FormattedExcinfo",
      "file": "src/_pytest/_code/code.py",
      "line": 717
    },
    {
      "id": "src/_pytest/_code/code.py:FormattedExcinfo._getindent",
      "type": "function",
      "name": "FormattedExcinfo._getindent",
      "file": "src/_pytest/_code/code.py",
      "line": 735
    },
    {
      "id": "src/_pytest/_code/code.py:FormattedExcinfo._getentrysource",
      "type": "function",
      "name": "FormattedExcinfo._getentrysource",
      "file": "src/_pytest/_code/code.py",
      "line": 750
    },
    {
      "id": "src/_pytest/_code/code.py:FormattedExcinfo.repr_args",
      "type": "function",
      "name": "FormattedExcinfo.repr_args",
      "file": "src/_pytest/_code/code.py",
      "line": 756
    },
    {
      "id": "src/_pytest/_code/code.py:FormattedExcinfo.get_source",
      "type": "function",
      "name": "FormattedExcinfo.get_source",
      "file": "src/_pytest/_code/code.py",
      "line": 764
    },
    {
      "id": "src/_pytest/_code/code.py:FormattedExcinfo.get_exconly",
      "type": "function",
      "name": "FormattedExcinfo.get_exconly",
      "file": "src/_pytest/_code/code.py",
      "line": 794
    },
    {
      "id": "src/_pytest/_code/code.py:FormattedExcinfo.repr_locals",
      "type": "function",
      "name": "FormattedExcinfo.repr_locals",
      "file": "src/_pytest/_code/code.py",
      "line": 811
    },
    {
      "id": "src/_pytest/_code/code.py:FormattedExcinfo.repr_traceback_entry",
      "type": "function",
      "name": "FormattedExcinfo.repr_traceback_entry",
      "file": "src/_pytest/_code/code.py",
      "line": 837
    },
    {
      "id": "src/_pytest/_code/code.py:FormattedExcinfo._makepath",
      "type": "function",
      "name": "FormattedExcinfo._makepath",
      "file": "src/_pytest/_code/code.py",
      "line": 877
    },
    {
      "id": "src/_pytest/_code/code.py:FormattedExcinfo.repr_traceback",
      "type": "function",
      "name": "FormattedExcinfo.repr_traceback",
      "file": "src/_pytest/_code/code.py",
      "line": 887
    },
    {
      "id": "src/_pytest/_code/code.py:FormattedExcinfo._truncate_recursive_traceback",
      "type": "function",
      "name": "FormattedExcinfo._truncate_recursive_traceback",
      "file": "src/_pytest/_code/code.py",
      "line": 916
    },
    {
      "id": "src/_pytest/_code/code.py:FormattedExcinfo.repr_excinfo",
      "type": "function",
      "name": "FormattedExcinfo.repr_excinfo",
      "file": "src/_pytest/_code/code.py",
      "line": 958
    },
    {
      "id": "src/_pytest/_code/code.py:TerminalRepr",
      "type": "class",
      "name": "TerminalRepr",
      "file": "src/_pytest/_code/code.py",
      "line": 1014
    },
    {
      "id": "src/_pytest/_code/code.py:TerminalRepr.__str__",
      "type": "function",
      "name": "TerminalRepr.__str__",
      "file": "src/_pytest/_code/code.py",
      "line": 1015
    },
    {
      "id": "src/_pytest/_code/code.py:TerminalRepr.__repr__",
      "type": "function",
      "name": "TerminalRepr.__repr__",
      "file": "src/_pytest/_code/code.py",
      "line": 1023
    },
    {
      "id": "src/_pytest/_code/code.py:TerminalRepr.toterminal",
      "type": "function",
      "name": "TerminalRepr.toterminal",
      "file": "src/_pytest/_code/code.py",
      "line": 1026
    },
    {
      "id": "src/_pytest/_code/code.py:ExceptionRepr",
      "type": "class",
      "name": "ExceptionRepr",
      "file": "src/_pytest/_code/code.py",
      "line": 1032
    },
    {
      "id": "src/_pytest/_code/code.py:ExceptionRepr.addsection",
      "type": "function",
      "name": "ExceptionRepr.addsection",
      "file": "src/_pytest/_code/code.py",
      "line": 1040
    },
    {
      "id": "src/_pytest/_code/code.py:ExceptionRepr.toterminal",
      "type": "function",
      "name": "ExceptionRepr.toterminal",
      "file": "src/_pytest/_code/code.py",
      "line": 1043
    },
    {
      "id": "src/_pytest/_code/code.py:ExceptionChainRepr",
      "type": "class",
      "name": "ExceptionChainRepr",
      "file": "src/_pytest/_code/code.py",
      "line": 1050
    },
    {
      "id": "src/_pytest/_code/code.py:ExceptionChainRepr.toterminal",
      "type": "function",
      "name": "ExceptionChainRepr.toterminal",
      "file": "src/_pytest/_code/code.py",
      "line": 1067
    },
    {
      "id": "src/_pytest/_code/code.py:ReprExceptionInfo",
      "type": "class",
      "name": "ReprExceptionInfo",
      "file": "src/_pytest/_code/code.py",
      "line": 1077
    },
    {
      "id": "src/_pytest/_code/code.py:ReprExceptionInfo.toterminal",
      "type": "function",
      "name": "ReprExceptionInfo.toterminal",
      "file": "src/_pytest/_code/code.py",
      "line": 1081
    },
    {
      "id": "src/_pytest/_code/code.py:ReprTraceback",
      "type": "class",
      "name": "ReprTraceback",
      "file": "src/_pytest/_code/code.py",
      "line": 1087
    },
    {
      "id": "src/_pytest/_code/code.py:ReprTraceback.toterminal",
      "type": "function",
      "name": "ReprTraceback.toterminal",
      "file": "src/_pytest/_code/code.py",
      "line": 1094
    },
    {
      "id": "src/_pytest/_code/code.py:ReprTracebackNative",
      "type": "class",
      "name": "ReprTracebackNative",
      "file": "src/_pytest/_code/code.py",
      "line": 1113
    },
    {
      "id": "src/_pytest/_code/code.py:ReprEntryNative",
      "type": "class",
      "name": "ReprEntryNative",
      "file": "src/_pytest/_code/code.py",
      "line": 1121
    },
    {
      "id": "src/_pytest/_code/code.py:ReprEntryNative.toterminal",
      "type": "function",
      "name": "ReprEntryNative.toterminal",
      "file": "src/_pytest/_code/code.py",
      "line": 1126
    },
    {
      "id": "src/_pytest/_code/code.py:ReprEntry",
      "type": "class",
      "name": "ReprEntry",
      "file": "src/_pytest/_code/code.py",
      "line": 1131
    },
    {
      "id": "src/_pytest/_code/code.py:ReprEntry._write_entry_lines",
      "type": "function",
      "name": "ReprEntry._write_entry_lines",
      "file": "src/_pytest/_code/code.py",
      "line": 1138
    },
    {
      "id": "src/_pytest/_code/code.py:ReprEntry.toterminal",
      "type": "function",
      "name": "ReprEntry.toterminal",
      "file": "src/_pytest/_code/code.py",
      "line": 1182
    },
    {
      "id": "src/_pytest/_code/code.py:ReprEntry.__str__",
      "type": "function",
      "name": "ReprEntry.__str__",
      "file": "src/_pytest/_code/code.py",
      "line": 1204
    },
    {
      "id": "src/_pytest/_code/code.py:ReprFileLocation",
      "type": "class",
      "name": "ReprFileLocation",
      "file": "src/_pytest/_code/code.py",
      "line": 1211
    },
    {
      "id": "src/_pytest/_code/code.py:ReprFileLocation.__post_init__",
      "type": "function",
      "name": "ReprFileLocation.__post_init__",
      "file": "src/_pytest/_code/code.py",
      "line": 1216
    },
    {
      "id": "src/_pytest/_code/code.py:ReprFileLocation.toterminal",
      "type": "function",
      "name": "ReprFileLocation.toterminal",
      "file": "src/_pytest/_code/code.py",
      "line": 1219
    },
    {
      "id": "src/_pytest/_code/code.py:ReprLocals",
      "type": "class",
      "name": "ReprLocals",
      "file": "src/_pytest/_code/code.py",
      "line": 1231
    },
    {
      "id": "src/_pytest/_code/code.py:ReprLocals.toterminal",
      "type": "function",
      "name": "ReprLocals.toterminal",
      "file": "src/_pytest/_code/code.py",
      "line": 1234
    },
    {
      "id": "src/_pytest/_code/code.py:ReprFuncArgs",
      "type": "class",
      "name": "ReprFuncArgs",
      "file": "src/_pytest/_code/code.py",
      "line": 1240
    },
    {
      "id": "src/_pytest/_code/code.py:ReprFuncArgs.toterminal",
      "type": "function",
      "name": "ReprFuncArgs.toterminal",
      "file": "src/_pytest/_code/code.py",
      "line": 1243
    },
    {
      "id": "src/_pytest/_code/code.py:getfslineno",
      "type": "function",
      "name": "getfslineno",
      "file": "src/_pytest/_code/code.py",
      "line": 1262
    },
    {
      "id": "src/_pytest/_code/code.py:filter_traceback",
      "type": "function",
      "name": "filter_traceback",
      "file": "src/_pytest/_code/code.py",
      "line": 1308
    },
    {
      "id": "src/_pytest/_code/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "src/_pytest/_code/__init__.py",
      "line": 0
    },
    {
      "id": "src/_pytest/_code/source.py",
      "type": "file",
      "name": "source.py",
      "file": "src/_pytest/_code/source.py",
      "line": 0
    },
    {
      "id": "src/_pytest/_code/source.py:Source",
      "type": "class",
      "name": "Source",
      "file": "src/_pytest/_code/source.py",
      "line": 17
    },
    {
      "id": "src/_pytest/_code/source.py:Source.__eq__",
      "type": "function",
      "name": "Source.__eq__",
      "file": "src/_pytest/_code/source.py",
      "line": 40
    },
    {
      "id": "src/_pytest/_code/source.py:Source.__getitem__",
      "type": "function",
      "name": "Source.__getitem__",
      "file": "src/_pytest/_code/source.py",
      "line": 56
    },
    {
      "id": "src/_pytest/_code/source.py:Source.__iter__",
      "type": "function",
      "name": "Source.__iter__",
      "file": "src/_pytest/_code/source.py",
      "line": 66
    },
    {
      "id": "src/_pytest/_code/source.py:Source.__len__",
      "type": "function",
      "name": "Source.__len__",
      "file": "src/_pytest/_code/source.py",
      "line": 69
    },
    {
      "id": "src/_pytest/_code/source.py:Source.strip",
      "type": "function",
      "name": "Source.strip",
      "file": "src/_pytest/_code/source.py",
      "line": 72
    },
    {
      "id": "src/_pytest/_code/source.py:Source.indent",
      "type": "function",
      "name": "Source.indent",
      "file": "src/_pytest/_code/source.py",
      "line": 83
    },
    {
      "id": "src/_pytest/_code/source.py:Source.getstatement",
      "type": "function",
      "name": "Source.getstatement",
      "file": "src/_pytest/_code/source.py",
      "line": 90
    },
    {
      "id": "src/_pytest/_code/source.py:Source.getstatementrange",
      "type": "function",
      "name": "Source.getstatementrange",
      "file": "src/_pytest/_code/source.py",
      "line": 96
    },
    {
      "id": "src/_pytest/_code/source.py:Source.deindent",
      "type": "function",
      "name": "Source.deindent",
      "file": "src/_pytest/_code/source.py",
      "line": 104
    },
    {
      "id": "src/_pytest/_code/source.py:Source.__str__",
      "type": "function",
      "name": "Source.__str__",
      "file": "src/_pytest/_code/source.py",
      "line": 110
    },
    {
      "id": "src/_pytest/_code/source.py:findsource",
      "type": "function",
      "name": "findsource",
      "file": "src/_pytest/_code/source.py",
      "line": 119
    },
    {
      "id": "src/_pytest/_code/source.py:getrawcode",
      "type": "function",
      "name": "getrawcode",
      "file": "src/_pytest/_code/source.py",
      "line": 129
    },
    {
      "id": "src/_pytest/_code/source.py:deindent",
      "type": "function",
      "name": "deindent",
      "file": "src/_pytest/_code/source.py",
      "line": 142
    },
    {
      "id": "src/_pytest/_code/source.py:get_statement_startend2",
      "type": "function",
      "name": "get_statement_startend2",
      "file": "src/_pytest/_code/source.py",
      "line": 146
    },
    {
      "id": "src/_pytest/_code/source.py:getstatementrange_ast",
      "type": "function",
      "name": "getstatementrange_ast",
      "file": "src/_pytest/_code/source.py",
      "line": 172
    },
    {
      "id": "src/_pytest/assertion",
      "type": "directory",
      "name": "assertion",
      "file": "",
      "line": 0
    },
    {
      "id": "src/_pytest/assertion/truncate.py",
      "type": "file",
      "name": "truncate.py",
      "file": "src/_pytest/assertion/truncate.py",
      "line": 0
    },
    {
      "id": "src/_pytest/assertion/truncate.py:truncate_if_required",
      "type": "function",
      "name": "truncate_if_required",
      "file": "src/_pytest/assertion/truncate.py",
      "line": 18
    },
    {
      "id": "src/_pytest/assertion/truncate.py:_should_truncate_item",
      "type": "function",
      "name": "_should_truncate_item",
      "file": "src/_pytest/assertion/truncate.py",
      "line": 27
    },
    {
      "id": "src/_pytest/assertion/truncate.py:_truncate_explanation",
      "type": "function",
      "name": "_truncate_explanation",
      "file": "src/_pytest/assertion/truncate.py",
      "line": 33
    },
    {
      "id": "src/_pytest/assertion/truncate.py:_truncate_by_char_count",
      "type": "function",
      "name": "_truncate_by_char_count",
      "file": "src/_pytest/assertion/truncate.py",
      "line": 100
    },
    {
      "id": "src/_pytest/assertion/util.py",
      "type": "file",
      "name": "util.py",
      "file": "src/_pytest/assertion/util.py",
      "line": 0
    },
    {
      "id": "src/_pytest/assertion/util.py:format_explanation",
      "type": "function",
      "name": "format_explanation",
      "file": "src/_pytest/assertion/util.py",
      "line": 36
    },
    {
      "id": "src/_pytest/assertion/util.py:_split_explanation",
      "type": "function",
      "name": "_split_explanation",
      "file": "src/_pytest/assertion/util.py",
      "line": 51
    },
    {
      "id": "src/_pytest/assertion/util.py:_format_lines",
      "type": "function",
      "name": "_format_lines",
      "file": "src/_pytest/assertion/util.py",
      "line": 68
    },
    {
      "id": "src/_pytest/assertion/util.py:issequence",
      "type": "function",
      "name": "issequence",
      "file": "src/_pytest/assertion/util.py",
      "line": 103
    },
    {
      "id": "src/_pytest/assertion/util.py:istext",
      "type": "function",
      "name": "istext",
      "file": "src/_pytest/assertion/util.py",
      "line": 107
    },
    {
      "id": "src/_pytest/assertion/util.py:isdict",
      "type": "function",
      "name": "isdict",
      "file": "src/_pytest/assertion/util.py",
      "line": 111
    },
    {
      "id": "src/_pytest/assertion/util.py:isset",
      "type": "function",
      "name": "isset",
      "file": "src/_pytest/assertion/util.py",
      "line": 115
    },
    {
      "id": "src/_pytest/assertion/util.py:isnamedtuple",
      "type": "function",
      "name": "isnamedtuple",
      "file": "src/_pytest/assertion/util.py",
      "line": 119
    },
    {
      "id": "src/_pytest/assertion/util.py:isdatacls",
      "type": "function",
      "name": "isdatacls",
      "file": "src/_pytest/assertion/util.py",
      "line": 123
    },
    {
      "id": "src/_pytest/assertion/util.py:isattrs",
      "type": "function",
      "name": "isattrs",
      "file": "src/_pytest/assertion/util.py",
      "line": 127
    },
    {
      "id": "src/_pytest/assertion/util.py:isiterable",
      "type": "function",
      "name": "isiterable",
      "file": "src/_pytest/assertion/util.py",
      "line": 131
    },
    {
      "id": "src/_pytest/assertion/util.py:has_default_eq",
      "type": "function",
      "name": "has_default_eq",
      "file": "src/_pytest/assertion/util.py",
      "line": 139
    },
    {
      "id": "src/_pytest/assertion/util.py:assertrepr_compare",
      "type": "function",
      "name": "assertrepr_compare",
      "file": "src/_pytest/assertion/util.py",
      "line": 160
    },
    {
      "id": "src/_pytest/assertion/util.py:_compare_eq_any",
      "type": "function",
      "name": "_compare_eq_any",
      "file": "src/_pytest/assertion/util.py",
      "line": 212
    },
    {
      "id": "src/_pytest/assertion/util.py:_diff_text",
      "type": "function",
      "name": "_diff_text",
      "file": "src/_pytest/assertion/util.py",
      "line": 247
    },
    {
      "id": "src/_pytest/assertion/util.py:_surrounding_parens_on_own_lines",
      "type": "function",
      "name": "_surrounding_parens_on_own_lines",
      "file": "src/_pytest/assertion/util.py",
      "line": 295
    },
    {
      "id": "src/_pytest/assertion/util.py:_compare_eq_iterable",
      "type": "function",
      "name": "_compare_eq_iterable",
      "file": "src/_pytest/assertion/util.py",
      "line": 307
    },
    {
      "id": "src/_pytest/assertion/util.py:_compare_eq_sequence",
      "type": "function",
      "name": "_compare_eq_sequence",
      "file": "src/_pytest/assertion/util.py",
      "line": 338
    },
    {
      "id": "src/_pytest/assertion/util.py:_compare_eq_set",
      "type": "function",
      "name": "_compare_eq_set",
      "file": "src/_pytest/assertion/util.py",
      "line": 391
    },
    {
      "id": "src/_pytest/assertion/util.py:_compare_eq_dict",
      "type": "function",
      "name": "_compare_eq_dict",
      "file": "src/_pytest/assertion/util.py",
      "line": 408
    },
    {
      "id": "src/_pytest/assertion/util.py:_compare_eq_cls",
      "type": "function",
      "name": "_compare_eq_cls",
      "file": "src/_pytest/assertion/util.py",
      "line": 449
    },
    {
      "id": "src/_pytest/assertion/util.py:_notin_text",
      "type": "function",
      "name": "_notin_text",
      "file": "src/_pytest/assertion/util.py",
      "line": 500
    },
    {
      "id": "src/_pytest/assertion/util.py:running_on_ci",
      "type": "function",
      "name": "running_on_ci",
      "file": "src/_pytest/assertion/util.py",
      "line": 519
    },
    {
      "id": "src/_pytest/assertion/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "src/_pytest/assertion/__init__.py",
      "line": 0
    },
    {
      "id": "src/_pytest/assertion/__init__.py:pytest_addoption",
      "type": "function",
      "name": "pytest_addoption",
      "file": "src/_pytest/assertion/__init__.py",
      "line": 22
    },
    {
      "id": "src/_pytest/assertion/__init__.py:register_assert_rewrite",
      "type": "function",
      "name": "register_assert_rewrite",
      "file": "src/_pytest/assertion/__init__.py",
      "line": 47
    },
    {
      "id": "src/_pytest/assertion/__init__.py:DummyRewriteHook",
      "type": "class",
      "name": "DummyRewriteHook",
      "file": "src/_pytest/assertion/__init__.py",
      "line": 73
    },
    {
      "id": "src/_pytest/assertion/__init__.py:DummyRewriteHook.mark_rewrite",
      "type": "function",
      "name": "DummyRewriteHook.mark_rewrite",
      "file": "src/_pytest/assertion/__init__.py",
      "line": 76
    },
    {
      "id": "src/_pytest/assertion/__init__.py:AssertionState",
      "type": "class",
      "name": "AssertionState",
      "file": "src/_pytest/assertion/__init__.py",
      "line": 80
    },
    {
      "id": "src/_pytest/assertion/__init__.py:install_importhook",
      "type": "function",
      "name": "install_importhook",
      "file": "src/_pytest/assertion/__init__.py",
      "line": 89
    },
    {
      "id": "src/_pytest/assertion/__init__.py:install_importhook.undo",
      "type": "function",
      "name": "install_importhook.undo",
      "file": "src/_pytest/assertion/__init__.py",
      "line": 96
    },
    {
      "id": "src/_pytest/assertion/__init__.py:pytest_collection",
      "type": "function",
      "name": "pytest_collection",
      "file": "src/_pytest/assertion/__init__.py",
      "line": 105
    },
    {
      "id": "src/_pytest/assertion/__init__.py:pytest_runtest_protocol",
      "type": "function",
      "name": "pytest_runtest_protocol",
      "file": "src/_pytest/assertion/__init__.py",
      "line": 116
    },
    {
      "id": "src/_pytest/assertion/__init__.py:pytest_runtest_protocol.callbinrepr",
      "type": "function",
      "name": "pytest_runtest_protocol.callbinrepr",
      "file": "src/_pytest/assertion/__init__.py",
      "line": 126
    },
    {
      "id": "src/_pytest/assertion/__init__.py:pytest_runtest_protocol.call_assertion_pass_hook",
      "type": "function",
      "name": "pytest_runtest_protocol.call_assertion_pass_hook",
      "file": "src/_pytest/assertion/__init__.py",
      "line": 160
    },
    {
      "id": "src/_pytest/assertion/__init__.py:pytest_sessionfinish",
      "type": "function",
      "name": "pytest_sessionfinish",
      "file": "src/_pytest/assertion/__init__.py",
      "line": 171
    },
    {
      "id": "src/_pytest/assertion/__init__.py:pytest_assertrepr_compare",
      "type": "function",
      "name": "pytest_assertrepr_compare",
      "file": "src/_pytest/assertion/__init__.py",
      "line": 178
    },
    {
      "id": "src/_pytest/assertion/rewrite.py",
      "type": "file",
      "name": "rewrite.py",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 0
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook",
      "type": "class",
      "name": "AssertionRewritingHook",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 56
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook.set_session",
      "type": "function",
      "name": "AssertionRewritingHook.set_session",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 75
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook.find_spec",
      "type": "function",
      "name": "AssertionRewritingHook.find_spec",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 82
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook.create_module",
      "type": "function",
      "name": "AssertionRewritingHook.create_module",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 122
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook.exec_module",
      "type": "function",
      "name": "AssertionRewritingHook.exec_module",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 127
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook._early_rewrite_bailout",
      "type": "function",
      "name": "AssertionRewritingHook._early_rewrite_bailout",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 169
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook._should_rewrite",
      "type": "function",
      "name": "AssertionRewritingHook._should_rewrite",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 208
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook._is_marked_for_rewrite",
      "type": "function",
      "name": "AssertionRewritingHook._is_marked_for_rewrite",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 229
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook.mark_rewrite",
      "type": "function",
      "name": "AssertionRewritingHook.mark_rewrite",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 242
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook._warn_already_imported",
      "type": "function",
      "name": "AssertionRewritingHook._warn_already_imported",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 260
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook.get_data",
      "type": "function",
      "name": "AssertionRewritingHook.get_data",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 270
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook.get_resource_reader",
      "type": "function",
      "name": "AssertionRewritingHook.get_resource_reader",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 281
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:_write_pyc_fp",
      "type": "function",
      "name": "_write_pyc_fp",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 292
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:_write_pyc",
      "type": "function",
      "name": "_write_pyc",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 310
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:_rewrite_test",
      "type": "function",
      "name": "_rewrite_test",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 335
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:_read_pyc",
      "type": "function",
      "name": "_read_pyc",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 346
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:rewrite_asserts",
      "type": "function",
      "name": "rewrite_asserts",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 395
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:_saferepr",
      "type": "function",
      "name": "_saferepr",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 405
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:_get_maxsize_for_saferepr",
      "type": "function",
      "name": "_get_maxsize_for_saferepr",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 419
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:_format_assertmsg",
      "type": "function",
      "name": "_format_assertmsg",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 429
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:_should_repr_global_name",
      "type": "function",
      "name": "_should_repr_global_name",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 451
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:_format_boolop",
      "type": "function",
      "name": "_format_boolop",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 461
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:_call_reprcompare",
      "type": "function",
      "name": "_call_reprcompare",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 466
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:_call_assertion_pass",
      "type": "function",
      "name": "_call_assertion_pass",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 486
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:_check_if_assertion_pass_impl",
      "type": "function",
      "name": "_check_if_assertion_pass_impl",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 491
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:traverse_node",
      "type": "function",
      "name": "traverse_node",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 526
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:_get_assertion_exprs",
      "type": "function",
      "name": "_get_assertion_exprs",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 534
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:_get_assertion_exprs._write_and_reset",
      "type": "function",
      "name": "_get_assertion_exprs._write_and_reset",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 543
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewriter",
      "type": "class",
      "name": "AssertionRewriter",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 588
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewriter.run",
      "type": "function",
      "name": "AssertionRewriter.run",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 660
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewriter.is_rewrite_disabled",
      "type": "function",
      "name": "AssertionRewriter.is_rewrite_disabled",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 745
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewriter.variable",
      "type": "function",
      "name": "AssertionRewriter.variable",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 748
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewriter.assign",
      "type": "function",
      "name": "AssertionRewriter.assign",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 755
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewriter.display",
      "type": "function",
      "name": "AssertionRewriter.display",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 761
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewriter.helper",
      "type": "function",
      "name": "AssertionRewriter.helper",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 765
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewriter.builtin",
      "type": "function",
      "name": "AssertionRewriter.builtin",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 771
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewriter.explanation_param",
      "type": "function",
      "name": "AssertionRewriter.explanation_param",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 776
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewriter.push_format_context",
      "type": "function",
      "name": "AssertionRewriter.push_format_context",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 788
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewriter.pop_format_context",
      "type": "function",
      "name": "AssertionRewriter.pop_format_context",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 801
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewriter.generic_visit",
      "type": "function",
      "name": "AssertionRewriter.generic_visit",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 821
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Assert",
      "type": "function",
      "name": "AssertionRewriter.visit_Assert",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 827
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_NamedExpr",
      "type": "function",
      "name": "AssertionRewriter.visit_NamedExpr",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 944
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Name",
      "type": "function",
      "name": "AssertionRewriter.visit_Name",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 956
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_BoolOp",
      "type": "function",
      "name": "AssertionRewriter.visit_BoolOp",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 966
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_UnaryOp",
      "type": "function",
      "name": "AssertionRewriter.visit_UnaryOp",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 1017
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_BinOp",
      "type": "function",
      "name": "AssertionRewriter.visit_BinOp",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 1023
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Call",
      "type": "function",
      "name": "AssertionRewriter.visit_Call",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 1031
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Starred",
      "type": "function",
      "name": "AssertionRewriter.visit_Starred",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 1064
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Attribute",
      "type": "function",
      "name": "AssertionRewriter.visit_Attribute",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 1070
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Compare",
      "type": "function",
      "name": "AssertionRewriter.visit_Compare",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 1080
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:try_makedirs",
      "type": "function",
      "name": "try_makedirs",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 1138
    },
    {
      "id": "src/_pytest/assertion/rewrite.py:get_cache_dir",
      "type": "function",
      "name": "get_cache_dir",
      "file": "src/_pytest/assertion/rewrite.py",
      "line": 1160
    },
    {
      "id": "src/_pytest/_io",
      "type": "directory",
      "name": "_io",
      "file": "",
      "line": 0
    },
    {
      "id": "src/_pytest/_io/wcwidth.py",
      "type": "file",
      "name": "wcwidth.py",
      "file": "src/_pytest/_io/wcwidth.py",
      "line": 0
    },
    {
      "id": "src/_pytest/_io/wcwidth.py:wcwidth",
      "type": "function",
      "name": "wcwidth",
      "file": "src/_pytest/_io/wcwidth.py",
      "line": 6
    },
    {
      "id": "src/_pytest/_io/wcwidth.py:wcswidth",
      "type": "function",
      "name": "wcswidth",
      "file": "src/_pytest/_io/wcwidth.py",
      "line": 44
    },
    {
      "id": "src/_pytest/_io/saferepr.py",
      "type": "file",
      "name": "saferepr.py",
      "file": "src/_pytest/_io/saferepr.py",
      "line": 0
    },
    {
      "id": "src/_pytest/_io/saferepr.py:_try_repr_or_str",
      "type": "function",
      "name": "_try_repr_or_str",
      "file": "src/_pytest/_io/saferepr.py",
      "line": 9
    },
    {
      "id": "src/_pytest/_io/saferepr.py:_format_repr_exception",
      "type": "function",
      "name": "_format_repr_exception",
      "file": "src/_pytest/_io/saferepr.py",
      "line": 18
    },
    {
      "id": "src/_pytest/_io/saferepr.py:_ellipsize",
      "type": "function",
      "name": "_ellipsize",
      "file": "src/_pytest/_io/saferepr.py",
      "line": 30
    },
    {
      "id": "src/_pytest/_io/saferepr.py:SafeRepr",
      "type": "class",
      "name": "SafeRepr",
      "file": "src/_pytest/_io/saferepr.py",
      "line": 38
    },
    {
      "id": "src/_pytest/_io/saferepr.py:SafeRepr.repr",
      "type": "function",
      "name": "SafeRepr.repr",
      "file": "src/_pytest/_io/saferepr.py",
      "line": 59
    },
    {
      "id": "src/_pytest/_io/saferepr.py:SafeRepr.repr_instance",
      "type": "function",
      "name": "SafeRepr.repr_instance",
      "file": "src/_pytest/_io/saferepr.py",
      "line": 74
    },
    {
      "id": "src/_pytest/_io/saferepr.py:safeformat",
      "type": "function",
      "name": "safeformat",
      "file": "src/_pytest/_io/saferepr.py",
      "line": 86
    },
    {
      "id": "src/_pytest/_io/saferepr.py:saferepr",
      "type": "function",
      "name": "saferepr",
      "file": "src/_pytest/_io/saferepr.py",
      "line": 102
    },
    {
      "id": "src/_pytest/_io/saferepr.py:saferepr_unlimited",
      "type": "function",
      "name": "saferepr_unlimited",
      "file": "src/_pytest/_io/saferepr.py",
      "line": 118
    },
    {
      "id": "src/_pytest/_io/saferepr.py:AlwaysDispatchingPrettyPrinter",
      "type": "class",
      "name": "AlwaysDispatchingPrettyPrinter",
      "file": "src/_pytest/_io/saferepr.py",
      "line": 137
    },
    {
      "id": "src/_pytest/_io/saferepr.py:AlwaysDispatchingPrettyPrinter._format",
      "type": "function",
      "name": "AlwaysDispatchingPrettyPrinter._format",
      "file": "src/_pytest/_io/saferepr.py",
      "line": 140
    },
    {
      "id": "src/_pytest/_io/saferepr.py:_pformat_dispatch",
      "type": "function",
      "name": "_pformat_dispatch",
      "file": "src/_pytest/_io/saferepr.py",
      "line": 170
    },
    {
      "id": "src/_pytest/_io/terminalwriter.py",
      "type": "file",
      "name": "terminalwriter.py",
      "file": "src/_pytest/_io/terminalwriter.py",
      "line": 0
    },
    {
      "id": "src/_pytest/_io/terminalwriter.py:get_terminal_width",
      "type": "function",
      "name": "get_terminal_width",
      "file": "src/_pytest/_io/terminalwriter.py",
      "line": 16
    },
    {
      "id": "src/_pytest/_io/terminalwriter.py:should_do_markup",
      "type": "function",
      "name": "should_do_markup",
      "file": "src/_pytest/_io/terminalwriter.py",
      "line": 26
    },
    {
      "id": "src/_pytest/_io/terminalwriter.py:TerminalWriter",
      "type": "class",
      "name": "TerminalWriter",
      "file": "src/_pytest/_io/terminalwriter.py",
      "line": 41
    },
    {
      "id": "src/_pytest/_io/terminalwriter.py:TerminalWriter.fullwidth",
      "type": "function",
      "name": "TerminalWriter.fullwidth",
      "file": "src/_pytest/_io/terminalwriter.py",
      "line": 89
    },
    {
      "id": "src/_pytest/_io/terminalwriter.py:TerminalWriter.width_of_current_line",
      "type": "function",
      "name": "TerminalWriter.width_of_current_line",
      "file": "src/_pytest/_io/terminalwriter.py",
      "line": 93
    },
    {
      "id": "src/_pytest/_io/terminalwriter.py:TerminalWriter.markup",
      "type": "function",
      "name": "TerminalWriter.markup",
      "file": "src/_pytest/_io/terminalwriter.py",
      "line": 97
    },
    {
      "id": "src/_pytest/_io/terminalwriter.py:TerminalWriter.sep",
      "type": "function",
      "name": "TerminalWriter.sep",
      "file": "src/_pytest/_io/terminalwriter.py",
      "line": 107
    },
    {
      "id": "src/_pytest/_io/terminalwriter.py:TerminalWriter.write",
      "type": "function",
      "name": "TerminalWriter.write",
      "file": "src/_pytest/_io/terminalwriter.py",
      "line": 144
    },
    {
      "id": "src/_pytest/_io/terminalwriter.py:TerminalWriter.line",
      "type": "function",
      "name": "TerminalWriter.line",
      "file": "src/_pytest/_io/terminalwriter.py",
      "line": 169
    },
    {
      "id": "src/_pytest/_io/terminalwriter.py:TerminalWriter.flush",
      "type": "function",
      "name": "TerminalWriter.flush",
      "file": "src/_pytest/_io/terminalwriter.py",
      "line": 173
    },
    {
      "id": "src/_pytest/_io/terminalwriter.py:TerminalWriter._write_source",
      "type": "function",
      "name": "TerminalWriter._write_source",
      "file": "src/_pytest/_io/terminalwriter.py",
      "line": 176
    },
    {
      "id": "src/_pytest/_io/terminalwriter.py:TerminalWriter._highlight",
      "type": "function",
      "name": "TerminalWriter._highlight",
      "file": "src/_pytest/_io/terminalwriter.py",
      "line": 196
    },
    {
      "id": "src/_pytest/_io/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "src/_pytest/_io/__init__.py",
      "line": 0
    },
    {
      "id": "src/_pytest/_py",
      "type": "directory",
      "name": "_py",
      "file": "",
      "line": 0
    },
    {
      "id": "src/_pytest/_py/error.py",
      "type": "file",
      "name": "error.py",
      "file": "src/_pytest/_py/error.py",
      "line": 0
    },
    {
      "id": "src/_pytest/_py/error.py:Error",
      "type": "class",
      "name": "Error",
      "file": "src/_pytest/_py/error.py",
      "line": 19
    },
    {
      "id": "src/_pytest/_py/error.py:Error.__repr__",
      "type": "function",
      "name": "Error.__repr__",
      "file": "src/_pytest/_py/error.py",
      "line": 20
    },
    {
      "id": "src/_pytest/_py/error.py:Error.__str__",
      "type": "function",
      "name": "Error.__str__",
      "file": "src/_pytest/_py/error.py",
      "line": 29
    },
    {
      "id": "src/_pytest/_py/error.py:ErrorMaker",
      "type": "class",
      "name": "ErrorMaker",
      "file": "src/_pytest/_py/error.py",
      "line": 50
    },
    {
      "id": "src/_pytest/_py/error.py:ErrorMaker.__getattr__",
      "type": "function",
      "name": "ErrorMaker.__getattr__",
      "file": "src/_pytest/_py/error.py",
      "line": 58
    },
    {
      "id": "src/_pytest/_py/error.py:ErrorMaker._geterrnoclass",
      "type": "function",
      "name": "ErrorMaker._geterrnoclass",
      "file": "src/_pytest/_py/error.py",
      "line": 66
    },
    {
      "id": "src/_pytest/_py/error.py:ErrorMaker.checked_call",
      "type": "function",
      "name": "ErrorMaker.checked_call",
      "file": "src/_pytest/_py/error.py",
      "line": 79
    },
    {
      "id": "src/_pytest/_py/error.py:__getattr__",
      "type": "function",
      "name": "__getattr__",
      "file": "src/_pytest/_py/error.py",
      "line": 108
    },
    {
      "id": "src/_pytest/_py/__init__.py",
      "type": "file",
      "name": "__init__.py",
      "file": "src/_pytest/_py/__init__.py",
      "line": 0
    },
    {
      "id": "src/_pytest/_py/path.py",
      "type": "file",
      "name": "path.py",
      "file": "src/_pytest/_py/path.py",
      "line": 0
    },
    {
      "id": "src/_pytest/_py/path.py:Checkers",
      "type": "class",
      "name": "Checkers",
      "file": "src/_pytest/_py/path.py",
      "line": 40
    },
    {
      "id": "src/_pytest/_py/path.py:Checkers.dotfile",
      "type": "function",
      "name": "Checkers.dotfile",
      "file": "src/_pytest/_py/path.py",
      "line": 46
    },
    {
      "id": "src/_pytest/_py/path.py:Checkers.ext",
      "type": "function",
      "name": "Checkers.ext",
      "file": "src/_pytest/_py/path.py",
      "line": 49
    },
    {
      "id": "src/_pytest/_py/path.py:Checkers.basename",
      "type": "function",
      "name": "Checkers.basename",
      "file": "src/_pytest/_py/path.py",
      "line": 54
    },
    {
      "id": "src/_pytest/_py/path.py:Checkers.basestarts",
      "type": "function",
      "name": "Checkers.basestarts",
      "file": "src/_pytest/_py/path.py",
      "line": 57
    },
    {
      "id": "src/_pytest/_py/path.py:Checkers.relto",
      "type": "function",
      "name": "Checkers.relto",
      "file": "src/_pytest/_py/path.py",
      "line": 60
    },
    {
      "id": "src/_pytest/_py/path.py:Checkers.fnmatch",
      "type": "function",
      "name": "Checkers.fnmatch",
      "file": "src/_pytest/_py/path.py",
      "line": 63
    },
    {
      "id": "src/_pytest/_py/path.py:Checkers.endswith",
      "type": "function",
      "name": "Checkers.endswith",
      "file": "src/_pytest/_py/path.py",
      "line": 66
    },
    {
      "id": "src/_pytest/_py/path.py:Checkers._evaluate",
      "type": "function",
      "name": "Checkers._evaluate",
      "file": "src/_pytest/_py/path.py",
      "line": 69
    },
    {
      "id": "src/_pytest/_py/path.py:Checkers._stat",
      "type": "function",
      "name": "Checkers._stat",
      "file": "src/_pytest/_py/path.py",
      "line": 109
    },
    {
      "id": "src/_pytest/_py/path.py:Checkers.dir",
      "type": "function",
      "name": "Checkers.dir",
      "file": "src/_pytest/_py/path.py",
      "line": 119
    },
    {
      "id": "src/_pytest/_py/path.py:Checkers.file",
      "type": "function",
      "name": "Checkers.file",
      "file": "src/_pytest/_py/path.py",
      "line": 122
    },
    {
      "id": "src/_pytest/_py/path.py:Checkers.exists",
      "type": "function",
      "name": "Checkers.exists",
      "file": "src/_pytest/_py/path.py",
      "line": 125
    },
    {
      "id": "src/_pytest/_py/path.py:Checkers.link",
      "type": "function",
      "name": "Checkers.link",
      "file": "src/_pytest/_py/path.py",
      "line": 128
    },
    {
      "id": "src/_pytest/_py/path.py:NeverRaised",
      "type": "class",
      "name": "NeverRaised",
      "file": "src/_pytest/_py/path.py",
      "line": 133
    },
    {
      "id": "src/_pytest/_py/path.py:Visitor",
      "type": "class",
      "name": "Visitor",
      "file": "src/_pytest/_py/path.py",
      "line": 137
    },
    {
      "id": "src/_pytest/_py/path.py:Visitor.gen",
      "type": "function",
      "name": "Visitor.gen",
      "file": "src/_pytest/_py/path.py",
      "line": 152
    },
    {
      "id": "src/_pytest/_py/path.py:FNMatcher",
      "type": "class",
      "name": "FNMatcher",
      "file": "src/_pytest/_py/path.py",
      "line": 174
    },
    {
      "id": "src/_pytest/_py/path.py:FNMatcher.__call__",
      "type": "function",
      "name": "FNMatcher.__call__",
      "file": "src/_pytest/_py/path.py",
      "line": 178
    },
    {
      "id": "src/_pytest/_py/path.py:map_as_list",
      "type": "function",
      "name": "map_as_list",
      "file": "src/_pytest/_py/path.py",
      "line": 200
    },
    {
      "id": "src/_pytest/_py/path.py:Stat",
      "type": "class",
      "name": "Stat",
      "file": "src/_pytest/_py/path.py",
      "line": 204
    },
    {
      "id": "src/_pytest/_py/path.py:Stat.size",
      "type": "function",
      "name": "Stat.size",
      "file": "src/_pytest/_py/path.py",
      "line": 208
    },
    {
      "id": "src/_pytest/_py/path.py:Stat.mtime",
      "type": "function",
      "name": "Stat.mtime",
      "file": "src/_pytest/_py/path.py",
      "line": 212
    },
    {
      "id": "src/_pytest/_py/path.py:Stat.__getattr__",
      "type": "function",
      "name": "Stat.__getattr__",
      "file": "src/_pytest/_py/path.py",
      "line": 215
    },
    {
      "id": "src/_pytest/_py/path.py:Stat.owner",
      "type": "function",
      "name": "Stat.owner",
      "file": "src/_pytest/_py/path.py",
      "line": 223
    },
    {
      "id": "src/_pytest/_py/path.py:Stat.group",
      "type": "function",
      "name": "Stat.group",
      "file": "src/_pytest/_py/path.py",
      "line": 232
    },
    {
      "id": "src/_pytest/_py/path.py:Stat.isdir",
      "type": "function",
      "name": "Stat.isdir",
      "file": "src/_pytest/_py/path.py",
      "line": 241
    },
    {
      "id": "src/_pytest/_py/path.py:Stat.isfile",
      "type": "function",
      "name": "Stat.isfile",
      "file": "src/_pytest/_py/path.py",
      "line": 244
    },
    {
      "id": "src/_pytest/_py/path.py:Stat.islink",
      "type": "function",
      "name": "Stat.islink",
      "file": "src/_pytest/_py/path.py",
      "line": 247
    },
    {
      "id": "src/_pytest/_py/path.py:getuserid",
      "type": "function",
      "name": "getuserid",
      "file": "src/_pytest/_py/path.py",
      "line": 252
    },
    {
      "id": "src/_pytest/_py/path.py:getgroupid",
      "type": "function",
      "name": "getgroupid",
      "file": "src/_pytest/_py/path.py",
      "line": 260
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath",
      "type": "class",
      "name": "LocalPath",
      "file": "src/_pytest/_py/path.py",
      "line": 268
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.ImportMismatchError",
      "type": "class",
      "name": "LocalPath.ImportMismatchError",
      "file": "src/_pytest/_py/path.py",
      "line": 273
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.chown",
      "type": "function",
      "name": "LocalPath.chown",
      "file": "src/_pytest/_py/path.py",
      "line": 304
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.readlink",
      "type": "function",
      "name": "LocalPath.readlink",
      "file": "src/_pytest/_py/path.py",
      "line": 318
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.mklinkto",
      "type": "function",
      "name": "LocalPath.mklinkto",
      "file": "src/_pytest/_py/path.py",
      "line": 323
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.mksymlinkto",
      "type": "function",
      "name": "LocalPath.mksymlinkto",
      "file": "src/_pytest/_py/path.py",
      "line": 327
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.__div__",
      "type": "function",
      "name": "LocalPath.__div__",
      "file": "src/_pytest/_py/path.py",
      "line": 340
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.basename",
      "type": "function",
      "name": "LocalPath.basename",
      "file": "src/_pytest/_py/path.py",
      "line": 346
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.dirname",
      "type": "function",
      "name": "LocalPath.dirname",
      "file": "src/_pytest/_py/path.py",
      "line": 351
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.purebasename",
      "type": "function",
      "name": "LocalPath.purebasename",
      "file": "src/_pytest/_py/path.py",
      "line": 356
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.ext",
      "type": "function",
      "name": "LocalPath.ext",
      "file": "src/_pytest/_py/path.py",
      "line": 361
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.read_binary",
      "type": "function",
      "name": "LocalPath.read_binary",
      "file": "src/_pytest/_py/path.py",
      "line": 365
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.read_text",
      "type": "function",
      "name": "LocalPath.read_text",
      "file": "src/_pytest/_py/path.py",
      "line": 370
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.read",
      "type": "function",
      "name": "LocalPath.read",
      "file": "src/_pytest/_py/path.py",
      "line": 375
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.readlines",
      "type": "function",
      "name": "LocalPath.readlines",
      "file": "src/_pytest/_py/path.py",
      "line": 380
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.load",
      "type": "function",
      "name": "LocalPath.load",
      "file": "src/_pytest/_py/path.py",
      "line": 395
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.move",
      "type": "function",
      "name": "LocalPath.move",
      "file": "src/_pytest/_py/path.py",
      "line": 405
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.fnmatch",
      "type": "function",
      "name": "LocalPath.fnmatch",
      "file": "src/_pytest/_py/path.py",
      "line": 415
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.relto",
      "type": "function",
      "name": "LocalPath.relto",
      "file": "src/_pytest/_py/path.py",
      "line": 434
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.ensure_dir",
      "type": "function",
      "name": "LocalPath.ensure_dir",
      "file": "src/_pytest/_py/path.py",
      "line": 453
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.bestrelpath",
      "type": "function",
      "name": "LocalPath.bestrelpath",
      "file": "src/_pytest/_py/path.py",
      "line": 457
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.exists",
      "type": "function",
      "name": "LocalPath.exists",
      "file": "src/_pytest/_py/path.py",
      "line": 483
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.isdir",
      "type": "function",
      "name": "LocalPath.isdir",
      "file": "src/_pytest/_py/path.py",
      "line": 486
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.isfile",
      "type": "function",
      "name": "LocalPath.isfile",
      "file": "src/_pytest/_py/path.py",
      "line": 489
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.parts",
      "type": "function",
      "name": "LocalPath.parts",
      "file": "src/_pytest/_py/path.py",
      "line": 492
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.common",
      "type": "function",
      "name": "LocalPath.common",
      "file": "src/_pytest/_py/path.py",
      "line": 508
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.__add__",
      "type": "function",
      "name": "LocalPath.__add__",
      "file": "src/_pytest/_py/path.py",
      "line": 519
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.visit",
      "type": "function",
      "name": "LocalPath.visit",
      "file": "src/_pytest/_py/path.py",
      "line": 523
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath._sortlist",
      "type": "function",
      "name": "LocalPath._sortlist",
      "file": "src/_pytest/_py/path.py",
      "line": 543
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.__fspath__",
      "type": "function",
      "name": "LocalPath.__fspath__",
      "file": "src/_pytest/_py/path.py",
      "line": 556
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.__hash__",
      "type": "function",
      "name": "LocalPath.__hash__",
      "file": "src/_pytest/_py/path.py",
      "line": 559
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.__eq__",
      "type": "function",
      "name": "LocalPath.__eq__",
      "file": "src/_pytest/_py/path.py",
      "line": 565
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.__ne__",
      "type": "function",
      "name": "LocalPath.__ne__",
      "file": "src/_pytest/_py/path.py",
      "line": 579
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.__lt__",
      "type": "function",
      "name": "LocalPath.__lt__",
      "file": "src/_pytest/_py/path.py",
      "line": 582
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.__gt__",
      "type": "function",
      "name": "LocalPath.__gt__",
      "file": "src/_pytest/_py/path.py",
      "line": 585
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.samefile",
      "type": "function",
      "name": "LocalPath.samefile",
      "file": "src/_pytest/_py/path.py",
      "line": 588
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.remove",
      "type": "function",
      "name": "LocalPath.remove",
      "file": "src/_pytest/_py/path.py",
      "line": 599
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.computehash",
      "type": "function",
      "name": "LocalPath.computehash",
      "file": "src/_pytest/_py/path.py",
      "line": 621
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.new",
      "type": "function",
      "name": "LocalPath.new",
      "file": "src/_pytest/_py/path.py",
      "line": 643
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath._getbyspec",
      "type": "function",
      "name": "LocalPath._getbyspec",
      "file": "src/_pytest/_py/path.py",
      "line": 683
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.dirpath",
      "type": "function",
      "name": "LocalPath.dirpath",
      "file": "src/_pytest/_py/path.py",
      "line": 712
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.join",
      "type": "function",
      "name": "LocalPath.join",
      "file": "src/_pytest/_py/path.py",
      "line": 722
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.open",
      "type": "function",
      "name": "LocalPath.open",
      "file": "src/_pytest/_py/path.py",
      "line": 752
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath._fastjoin",
      "type": "function",
      "name": "LocalPath._fastjoin",
      "file": "src/_pytest/_py/path.py",
      "line": 763
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.islink",
      "type": "function",
      "name": "LocalPath.islink",
      "file": "src/_pytest/_py/path.py",
      "line": 768
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.check",
      "type": "function",
      "name": "LocalPath.check",
      "file": "src/_pytest/_py/path.py",
      "line": 771
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.listdir",
      "type": "function",
      "name": "LocalPath.listdir",
      "file": "src/_pytest/_py/path.py",
      "line": 801
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.size",
      "type": "function",
      "name": "LocalPath.size",
      "file": "src/_pytest/_py/path.py",
      "line": 824
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.mtime",
      "type": "function",
      "name": "LocalPath.mtime",
      "file": "src/_pytest/_py/path.py",
      "line": 828
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.copy",
      "type": "function",
      "name": "LocalPath.copy",
      "file": "src/_pytest/_py/path.py",
      "line": 832
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.copy.rec",
      "type": "function",
      "name": "LocalPath.copy.rec",
      "file": "src/_pytest/_py/path.py",
      "line": 850
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.rename",
      "type": "function",
      "name": "LocalPath.rename",
      "file": "src/_pytest/_py/path.py",
      "line": 869
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.dump",
      "type": "function",
      "name": "LocalPath.dump",
      "file": "src/_pytest/_py/path.py",
      "line": 874
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.mkdir",
      "type": "function",
      "name": "LocalPath.mkdir",
      "file": "src/_pytest/_py/path.py",
      "line": 884
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.write_binary",
      "type": "function",
      "name": "LocalPath.write_binary",
      "file": "src/_pytest/_py/path.py",
      "line": 890
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.write_text",
      "type": "function",
      "name": "LocalPath.write_text",
      "file": "src/_pytest/_py/path.py",
      "line": 899
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.write",
      "type": "function",
      "name": "LocalPath.write",
      "file": "src/_pytest/_py/path.py",
      "line": 908
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath._ensuredirs",
      "type": "function",
      "name": "LocalPath._ensuredirs",
      "file": "src/_pytest/_py/path.py",
      "line": 929
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.ensure",
      "type": "function",
      "name": "LocalPath.ensure",
      "file": "src/_pytest/_py/path.py",
      "line": 945
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.stat",
      "type": "function",
      "name": "LocalPath.stat",
      "file": "src/_pytest/_py/path.py",
      "line": 967
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.lstat",
      "type": "function",
      "name": "LocalPath.lstat",
      "file": "src/_pytest/_py/path.py",
      "line": 978
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.setmtime",
      "type": "function",
      "name": "LocalPath.setmtime",
      "file": "src/_pytest/_py/path.py",
      "line": 982
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.chdir",
      "type": "function",
      "name": "LocalPath.chdir",
      "file": "src/_pytest/_py/path.py",
      "line": 995
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.as_cwd",
      "type": "function",
      "name": "LocalPath.as_cwd",
      "file": "src/_pytest/_py/path.py",
      "line": 1005
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.realpath",
      "type": "function",
      "name": "LocalPath.realpath",
      "file": "src/_pytest/_py/path.py",
      "line": 1018
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.atime",
      "type": "function",
      "name": "LocalPath.atime",
      "file": "src/_pytest/_py/path.py",
      "line": 1022
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.__repr__",
      "type": "function",
      "name": "LocalPath.__repr__",
      "file": "src/_pytest/_py/path.py",
      "line": 1026
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.__str__",
      "type": "function",
      "name": "LocalPath.__str__",
      "file": "src/_pytest/_py/path.py",
      "line": 1029
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.chmod",
      "type": "function",
      "name": "LocalPath.chmod",
      "file": "src/_pytest/_py/path.py",
      "line": 1033
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.pypkgpath",
      "type": "function",
      "name": "LocalPath.pypkgpath",
      "file": "src/_pytest/_py/path.py",
      "line": 1045
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath._ensuresyspath",
      "type": "function",
      "name": "LocalPath._ensuresyspath",
      "file": "src/_pytest/_py/path.py",
      "line": 1060
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.pyimport",
      "type": "function",
      "name": "LocalPath.pyimport",
      "file": "src/_pytest/_py/path.py",
      "line": 1070
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.sysexec",
      "type": "function",
      "name": "LocalPath.sysexec",
      "file": "src/_pytest/_py/path.py",
      "line": 1161
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.sysfind",
      "type": "function",
      "name": "LocalPath.sysfind",
      "file": "src/_pytest/_py/path.py",
      "line": 1194
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath._gethomedir",
      "type": "function",
      "name": "LocalPath._gethomedir",
      "file": "src/_pytest/_py/path.py",
      "line": 1241
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.get_temproot",
      "type": "function",
      "name": "LocalPath.get_temproot",
      "file": "src/_pytest/_py/path.py",
      "line": 1255
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.mkdtemp",
      "type": "function",
      "name": "LocalPath.mkdtemp",
      "file": "src/_pytest/_py/path.py",
      "line": 1264
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir",
      "type": "function",
      "name": "LocalPath.make_numbered_dir",
      "file": "src/_pytest/_py/path.py",
      "line": 1275
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir.parse_num",
      "type": "function",
      "name": "LocalPath.make_numbered_dir.parse_num",
      "file": "src/_pytest/_py/path.py",
      "line": 1289
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir.create_lockfile",
      "type": "function",
      "name": "LocalPath.make_numbered_dir.create_lockfile",
      "file": "src/_pytest/_py/path.py",
      "line": 1298
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir.atexit_remove_lockfile",
      "type": "function",
      "name": "LocalPath.make_numbered_dir.atexit_remove_lockfile",
      "file": "src/_pytest/_py/path.py",
      "line": 1312
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir.atexit_remove_lockfile.try_remove_lockfile",
      "type": "function",
      "name": "LocalPath.make_numbered_dir.atexit_remove_lockfile.try_remove_lockfile",
      "file": "src/_pytest/_py/path.py",
      "line": 1316
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir.get_mtime",
      "type": "function",
      "name": "LocalPath.make_numbered_dir.get_mtime",
      "file": "src/_pytest/_py/path.py",
      "line": 1361
    },
    {
      "id": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir.is_garbage",
      "type": "function",
      "name": "LocalPath.make_numbered_dir.is_garbage",
      "file": "src/_pytest/_py/path.py",
      "line": 1370
    },
    {
      "id": "src/_pytest/_py/path.py:copymode",
      "type": "function",
      "name": "copymode",
      "file": "src/_pytest/_py/path.py",
      "line": 1437
    },
    {
      "id": "src/_pytest/_py/path.py:copystat",
      "type": "function",
      "name": "copystat",
      "file": "src/_pytest/_py/path.py",
      "line": 1444
    },
    {
      "id": "src/_pytest/_py/path.py:copychunked",
      "type": "function",
      "name": "copychunked",
      "file": "src/_pytest/_py/path.py",
      "line": 1452
    },
    {
      "id": "src/_pytest/_py/path.py:isimportable",
      "type": "function",
      "name": "isimportable",
      "file": "src/_pytest/_py/path.py",
      "line": 1469
    }
  ],
  "edges": [
    {
      "source": "/",
      "target": "setup.py",
      "type": "contains"
    },
    {
      "source": "/",
      "target": "bench",
      "type": "contains"
    },
    {
      "source": "/",
      "target": "testing",
      "type": "contains"
    },
    {
      "source": "/",
      "target": "extra",
      "type": "contains"
    },
    {
      "source": "/",
      "target": "scripts",
      "type": "contains"
    },
    {
      "source": "/",
      "target": "doc",
      "type": "contains"
    },
    {
      "source": "/",
      "target": "src",
      "type": "contains"
    },
    {
      "source": "bench",
      "target": "bench/bench_argcomplete.py",
      "type": "contains"
    },
    {
      "source": "bench",
      "target": "bench/unit_test.py",
      "type": "contains"
    },
    {
      "source": "bench",
      "target": "bench/skip.py",
      "type": "contains"
    },
    {
      "source": "bench",
      "target": "bench/manyparam.py",
      "type": "contains"
    },
    {
      "source": "bench",
      "target": "bench/empty.py",
      "type": "contains"
    },
    {
      "source": "bench",
      "target": "bench/bench.py",
      "type": "contains"
    },
    {
      "source": "bench",
      "target": "bench/xunit.py",
      "type": "contains"
    },
    {
      "source": "bench/skip.py",
      "target": "bench/skip.py:test_foo",
      "type": "contains"
    },
    {
      "source": "bench/manyparam.py",
      "target": "bench/manyparam.py:foo",
      "type": "contains"
    },
    {
      "source": "bench/manyparam.py",
      "target": "bench/manyparam.py:test_it",
      "type": "contains"
    },
    {
      "source": "bench/manyparam.py",
      "target": "bench/manyparam.py:test_it2",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_legacypath.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_setuponly.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_assertrewrite.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/conftest.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_warnings.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_mark.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_faulthandler.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_recwarn.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_session.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_skipping.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_python_path.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_pastebin.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_conftest.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_nodes.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_unittest.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_scope.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_setupplan.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/typing_checks.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_collection.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_terminal.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_threadexception.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_error_diffs.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_reports.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_pluginmanager.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_runner.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_monkeypatch.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_doctest.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_compat.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_config.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_capture.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_parseopt.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_link_resolve.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_entry_points.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_helpconfig.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_debugging.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_cacheprovider.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_meta.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_unraisableexception.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_findpaths.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_assertion.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_warning_types.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_pytester.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_argcomplete.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_mark_expression.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_main.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_tmpdir.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/deprecated_test.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_stash.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/acceptance_test.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_junitxml.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_runner_xunit.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_stepwise.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_pathlib.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/test_nose.py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/freeze",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/python",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/plugins_integration",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/io",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/code",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/examples",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/_py",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/logging",
      "type": "contains"
    },
    {
      "source": "testing",
      "target": "testing/example_scripts",
      "type": "contains"
    },
    {
      "source": "testing/test_legacypath.py",
      "target": "testing/test_legacypath.py:test_item_fspath",
      "type": "contains"
    },
    {
      "source": "testing/test_legacypath.py",
      "target": "testing/test_legacypath.py:test_testdir_testtmproot",
      "type": "contains"
    },
    {
      "source": "testing/test_legacypath.py",
      "target": "testing/test_legacypath.py:test_testdir_makefile_dot_prefixes_extension_silently",
      "type": "contains"
    },
    {
      "source": "testing/test_legacypath.py",
      "target": "testing/test_legacypath.py:test_testdir_makefile_ext_none_raises_type_error",
      "type": "contains"
    },
    {
      "source": "testing/test_legacypath.py",
      "target": "testing/test_legacypath.py:test_testdir_makefile_ext_empty_string_makes_file",
      "type": "contains"
    },
    {
      "source": "testing/test_legacypath.py",
      "target": "testing/test_legacypath.py:attempt_symlink_to",
      "type": "contains"
    },
    {
      "source": "testing/test_legacypath.py",
      "target": "testing/test_legacypath.py:test_tmpdir_factory",
      "type": "contains"
    },
    {
      "source": "testing/test_legacypath.py",
      "target": "testing/test_legacypath.py:test_tmpdir_equals_tmp_path",
      "type": "contains"
    },
    {
      "source": "testing/test_legacypath.py",
      "target": "testing/test_legacypath.py:test_tmpdir_always_is_realpath",
      "type": "contains"
    },
    {
      "source": "testing/test_legacypath.py",
      "target": "testing/test_legacypath.py:test_cache_makedir",
      "type": "contains"
    },
    {
      "source": "testing/test_legacypath.py",
      "target": "testing/test_legacypath.py:test_fixturerequest_getmodulepath",
      "type": "contains"
    },
    {
      "source": "testing/test_legacypath.py",
      "target": "testing/test_legacypath.py:TestFixtureRequestSessionScoped",
      "type": "contains"
    },
    {
      "source": "testing/test_legacypath.py",
      "target": "testing/test_legacypath.py:test_addini_paths",
      "type": "contains"
    },
    {
      "source": "testing/test_legacypath.py",
      "target": "testing/test_legacypath.py:test_override_ini_paths",
      "type": "contains"
    },
    {
      "source": "testing/test_legacypath.py",
      "target": "testing/test_legacypath.py:test_inifile_from_cmdline_main_hook",
      "type": "contains"
    },
    {
      "source": "testing/test_legacypath.py:test_tmpdir_always_is_realpath",
      "target": "testing/test_legacypath.py:attempt_symlink_to",
      "type": "invokes"
    },
    {
      "source": "testing/test_legacypath.py:TestFixtureRequestSessionScoped",
      "target": "testing/test_legacypath.py:TestFixtureRequestSessionScoped.session_request",
      "type": "contains"
    },
    {
      "source": "testing/test_legacypath.py:TestFixtureRequestSessionScoped",
      "target": "testing/test_legacypath.py:TestFixtureRequestSessionScoped.test_session_scoped_unavailable_attributes",
      "type": "contains"
    },
    {
      "source": "testing/test_setuponly.py",
      "target": "testing/test_setuponly.py:mode",
      "type": "contains"
    },
    {
      "source": "testing/test_setuponly.py",
      "target": "testing/test_setuponly.py:test_show_only_active_fixtures",
      "type": "contains"
    },
    {
      "source": "testing/test_setuponly.py",
      "target": "testing/test_setuponly.py:test_show_different_scopes",
      "type": "contains"
    },
    {
      "source": "testing/test_setuponly.py",
      "target": "testing/test_setuponly.py:test_show_nested_fixtures",
      "type": "contains"
    },
    {
      "source": "testing/test_setuponly.py",
      "target": "testing/test_setuponly.py:test_show_fixtures_with_autouse",
      "type": "contains"
    },
    {
      "source": "testing/test_setuponly.py",
      "target": "testing/test_setuponly.py:test_show_fixtures_with_parameters",
      "type": "contains"
    },
    {
      "source": "testing/test_setuponly.py",
      "target": "testing/test_setuponly.py:test_show_fixtures_with_parameter_ids",
      "type": "contains"
    },
    {
      "source": "testing/test_setuponly.py",
      "target": "testing/test_setuponly.py:test_show_fixtures_with_parameter_ids_function",
      "type": "contains"
    },
    {
      "source": "testing/test_setuponly.py",
      "target": "testing/test_setuponly.py:test_dynamic_fixture_request",
      "type": "contains"
    },
    {
      "source": "testing/test_setuponly.py",
      "target": "testing/test_setuponly.py:test_capturing",
      "type": "contains"
    },
    {
      "source": "testing/test_setuponly.py",
      "target": "testing/test_setuponly.py:test_show_fixtures_and_execute_test",
      "type": "contains"
    },
    {
      "source": "testing/test_setuponly.py",
      "target": "testing/test_setuponly.py:test_setup_show_with_KeyboardInterrupt_in_test",
      "type": "contains"
    },
    {
      "source": "testing/test_setuponly.py",
      "target": "testing/test_setuponly.py:test_show_fixture_action_with_bytes",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py",
      "target": "testing/test_assertrewrite.py:rewrite",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py",
      "target": "testing/test_assertrewrite.py:getmsg",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py",
      "target": "testing/test_assertrewrite.py:TestRewriteOnImport",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py",
      "target": "testing/test_assertrewrite.py:TestAssertionRewriteHookDetails",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py",
      "target": "testing/test_assertrewrite.py:test_issue731",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py",
      "target": "testing/test_assertrewrite.py:TestIssue925",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py",
      "target": "testing/test_assertrewrite.py:TestIssue2121",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py",
      "target": "testing/test_assertrewrite.py:TestIssue10743",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py",
      "target": "testing/test_assertrewrite.py:TestIssue11028",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py",
      "target": "testing/test_assertrewrite.py:test_source_mtime_long_long",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py",
      "target": "testing/test_assertrewrite.py:test_rewrite_infinite_recursion",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py",
      "target": "testing/test_assertrewrite.py:TestEarlyRewriteBailout",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py",
      "target": "testing/test_assertrewrite.py:TestAssertionPass",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py",
      "target": "testing/test_assertrewrite.py:test_get_assertion_exprs",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py",
      "target": "testing/test_assertrewrite.py:test_try_makedirs",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py",
      "target": "testing/test_assertrewrite.py:TestPyCacheDir",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py",
      "target": "testing/test_assertrewrite.py:TestReprSizeVerbosity",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:getmsg",
      "target": "testing/test_assertrewrite.py:rewrite",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_place_initial_imports",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_location_is_set",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_dont_rewrite",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_dont_rewrite_plugin",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_rewrites_plugin_as_a_package",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_honors_pep_235",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_name",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assertrepr_compare_same_width",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_dont_rewrite_if_hasattr_fails",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_already_has_message",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assertion_message",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assertion_message_multiline",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assertion_message_tuple",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assertion_message_expr",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assertion_message_escape",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assertion_messages_bytes",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_short_circuit_evaluation",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_unary_op",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_binary_op",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop_percent",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_at_operator_issue1290",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_starred_with_side_effect",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_attribute",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_comparisons",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_len",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_reprcompare",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_raising__bool__in_comparison",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_formatchar",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_repr",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_repr_non_ascii",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_place_initial_imports",
      "target": "testing/test_assertrewrite.py:rewrite",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_location_is_set",
      "target": "testing/test_assertrewrite.py:rewrite",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_dont_rewrite",
      "target": "testing/test_assertrewrite.py:rewrite",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_name",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_name.f1",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_name",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_name.f2",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_name",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_name.f3",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_name",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_name.f4",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_name",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_name.f5",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_name",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_name.X",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_name",
      "target": "testing/test_assertrewrite.py:getmsg",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assertrepr_compare_same_width",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assertrepr_compare_same_width.f",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assertrepr_compare_same_width",
      "target": "testing/test_assertrewrite.py:getmsg",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_dont_rewrite_if_hasattr_fails",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_dont_rewrite_if_hasattr_fails.Y",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_dont_rewrite_if_hasattr_fails",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_dont_rewrite_if_hasattr_fails.f",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_dont_rewrite_if_hasattr_fails",
      "target": "testing/test_assertrewrite.py:getmsg",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_dont_rewrite_if_hasattr_fails.Y",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_dont_rewrite_if_hasattr_fails.Y.__getattr__",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_dont_rewrite_if_hasattr_fails.Y",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_dont_rewrite_if_hasattr_fails.Y.__repr__",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_already_has_message",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_already_has_message.f",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_already_has_message",
      "target": "testing/test_assertrewrite.py:getmsg",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop.f1",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop.f2",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop.f3",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop.f4",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop.f5",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop.x",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop.f6",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop.f7",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop.f8",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop.f9",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop.f10",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop.f11",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop",
      "target": "testing/test_assertrewrite.py:getmsg",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop.f6",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop.x",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop.f7",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop.x",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_short_circuit_evaluation",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_short_circuit_evaluation.f1",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_short_circuit_evaluation",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_short_circuit_evaluation.f2",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_short_circuit_evaluation",
      "target": "testing/test_assertrewrite.py:getmsg",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_unary_op",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_unary_op.f1",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_unary_op",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_unary_op.f2",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_unary_op",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_unary_op.f3",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_unary_op",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_unary_op.f4",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_unary_op",
      "target": "testing/test_assertrewrite.py:getmsg",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_binary_op",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_binary_op.f1",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_binary_op",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_binary_op.f2",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_binary_op",
      "target": "testing/test_assertrewrite.py:getmsg",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop_percent",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop_percent.f1",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop_percent",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop_percent.f2",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_boolop_percent",
      "target": "testing/test_assertrewrite.py:getmsg",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.g",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.f1",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.f2",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.f3",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.f4",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.f5",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.f6",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.f7",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call",
      "target": "testing/test_assertrewrite.py:getmsg",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.f1",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.g",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.f2",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.g",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.f3",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.g",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.f4",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.g",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.f5",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.g",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.f6",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.g",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.f7",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_call.g",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_attribute",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_attribute.X",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_attribute",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_attribute.f1",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_attribute",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_attribute.f2",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_attribute",
      "target": "testing/test_assertrewrite.py:getmsg",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_comparisons",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_comparisons.f1",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_comparisons",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_comparisons.f2",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_comparisons",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_comparisons.f3",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_comparisons",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_comparisons.f4",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_comparisons",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_comparisons.f5",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_comparisons",
      "target": "testing/test_assertrewrite.py:getmsg",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_len",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_len.f",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_len",
      "target": "testing/test_assertrewrite.py:getmsg",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_reprcompare",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_reprcompare.my_reprcompare1",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_reprcompare",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_reprcompare.f1",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_reprcompare",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_reprcompare.my_reprcompare2",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_reprcompare",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_reprcompare.f2",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_reprcompare",
      "target": "testing/test_assertrewrite.py:getmsg",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_raising__bool__in_comparison",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_raising__bool__in_comparison.f",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_raising__bool__in_comparison",
      "target": "testing/test_assertrewrite.py:getmsg",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_raising__bool__in_comparison.f",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_raising__bool__in_comparison.f.A",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_raising__bool__in_comparison.f",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_raising__bool__in_comparison.f.A",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_raising__bool__in_comparison.f",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_raising__bool__in_comparison.f.myany",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_raising__bool__in_comparison.f",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_raising__bool__in_comparison.f.myany",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_raising__bool__in_comparison.f.A",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_raising__bool__in_comparison.f.A.__bool__",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_raising__bool__in_comparison.f.A",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_raising__bool__in_comparison.f.A.__lt__",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_raising__bool__in_comparison.f.A",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_assert_raising__bool__in_comparison.f.A.__repr__",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_formatchar",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_formatchar.f",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_formatchar",
      "target": "testing/test_assertrewrite.py:getmsg",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_repr",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_repr.f",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_repr",
      "target": "testing/test_assertrewrite.py:getmsg",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_repr.f",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_repr.f.Foo",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_repr.f",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_repr.f.Foo",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_repr.f.Foo",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_repr.f.Foo.__repr__",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_repr_non_ascii",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_repr_non_ascii.f",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_repr_non_ascii",
      "target": "testing/test_assertrewrite.py:getmsg",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_repr_non_ascii.f",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_repr_non_ascii.f.A",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_repr_non_ascii.f",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_repr_non_ascii.f.A",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_repr_non_ascii.f.A",
      "target": "testing/test_assertrewrite.py:TestAssertionRewrite.test_custom_repr_non_ascii.f.A.__repr__",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestRewriteOnImport",
      "target": "testing/test_assertrewrite.py:TestRewriteOnImport.test_pycache_is_a_file",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestRewriteOnImport",
      "target": "testing/test_assertrewrite.py:TestRewriteOnImport.test_pycache_is_readonly",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestRewriteOnImport",
      "target": "testing/test_assertrewrite.py:TestRewriteOnImport.test_zipfile",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestRewriteOnImport",
      "target": "testing/test_assertrewrite.py:TestRewriteOnImport.test_load_resource_via_files_with_rewrite",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestRewriteOnImport",
      "target": "testing/test_assertrewrite.py:TestRewriteOnImport.test_readonly",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestRewriteOnImport",
      "target": "testing/test_assertrewrite.py:TestRewriteOnImport.test_dont_write_bytecode",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestRewriteOnImport",
      "target": "testing/test_assertrewrite.py:TestRewriteOnImport.test_orphaned_pyc_file",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestRewriteOnImport",
      "target": "testing/test_assertrewrite.py:TestRewriteOnImport.test_cached_pyc_includes_pytest_version",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestRewriteOnImport",
      "target": "testing/test_assertrewrite.py:TestRewriteOnImport.test_pyc_vs_pyo",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestRewriteOnImport",
      "target": "testing/test_assertrewrite.py:TestRewriteOnImport.test_package",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestRewriteOnImport",
      "target": "testing/test_assertrewrite.py:TestRewriteOnImport.test_translate_newlines",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestRewriteOnImport",
      "target": "testing/test_assertrewrite.py:TestRewriteOnImport.test_package_without__init__py",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestRewriteOnImport",
      "target": "testing/test_assertrewrite.py:TestRewriteOnImport.test_rewrite_warning",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestRewriteOnImport",
      "target": "testing/test_assertrewrite.py:TestRewriteOnImport.test_rewrite_module_imported_from_conftest",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestRewriteOnImport",
      "target": "testing/test_assertrewrite.py:TestRewriteOnImport.test_remember_rewritten_modules",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestRewriteOnImport",
      "target": "testing/test_assertrewrite.py:TestRewriteOnImport.test_rewrite_warning_using_pytest_plugins",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestRewriteOnImport",
      "target": "testing/test_assertrewrite.py:TestRewriteOnImport.test_rewrite_warning_using_pytest_plugins_env_var",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewriteHookDetails",
      "target": "testing/test_assertrewrite.py:TestAssertionRewriteHookDetails.test_sys_meta_path_munged",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewriteHookDetails",
      "target": "testing/test_assertrewrite.py:TestAssertionRewriteHookDetails.test_write_pyc",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewriteHookDetails",
      "target": "testing/test_assertrewrite.py:TestAssertionRewriteHookDetails.test_resources_provider_for_loader",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewriteHookDetails",
      "target": "testing/test_assertrewrite.py:TestAssertionRewriteHookDetails.test_read_pyc",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewriteHookDetails",
      "target": "testing/test_assertrewrite.py:TestAssertionRewriteHookDetails.test_read_pyc_success",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewriteHookDetails",
      "target": "testing/test_assertrewrite.py:TestAssertionRewriteHookDetails.test_read_pyc_more_invalid",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewriteHookDetails",
      "target": "testing/test_assertrewrite.py:TestAssertionRewriteHookDetails.test_reload_is_same_and_reloads",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionRewriteHookDetails",
      "target": "testing/test_assertrewrite.py:TestAssertionRewriteHookDetails.test_get_data_support",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestIssue925",
      "target": "testing/test_assertrewrite.py:TestIssue925.test_simple_case",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestIssue925",
      "target": "testing/test_assertrewrite.py:TestIssue925.test_long_case",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestIssue925",
      "target": "testing/test_assertrewrite.py:TestIssue925.test_many_brackets",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestIssue2121",
      "target": "testing/test_assertrewrite.py:TestIssue2121.test_rewrite_python_files_contain_subdirs",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestIssue10743",
      "target": "testing/test_assertrewrite.py:TestIssue10743.test_assertion_walrus_operator",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestIssue10743",
      "target": "testing/test_assertrewrite.py:TestIssue10743.test_assertion_walrus_operator_dont_rewrite",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestIssue10743",
      "target": "testing/test_assertrewrite.py:TestIssue10743.test_assertion_inline_walrus_operator",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestIssue10743",
      "target": "testing/test_assertrewrite.py:TestIssue10743.test_assertion_inline_walrus_operator_reverse",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestIssue10743",
      "target": "testing/test_assertrewrite.py:TestIssue10743.test_assertion_walrus_no_variable_name_conflict",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestIssue10743",
      "target": "testing/test_assertrewrite.py:TestIssue10743.test_assertion_walrus_operator_true_assertion_and_changes_variable_value",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestIssue10743",
      "target": "testing/test_assertrewrite.py:TestIssue10743.test_assertion_walrus_operator_fail_assertion",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestIssue10743",
      "target": "testing/test_assertrewrite.py:TestIssue10743.test_assertion_walrus_operator_boolean_composite",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestIssue10743",
      "target": "testing/test_assertrewrite.py:TestIssue10743.test_assertion_walrus_operator_compare_boolean_fails",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestIssue10743",
      "target": "testing/test_assertrewrite.py:TestIssue10743.test_assertion_walrus_operator_boolean_none_fails",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestIssue10743",
      "target": "testing/test_assertrewrite.py:TestIssue10743.test_assertion_walrus_operator_value_changes_cleared_after_each_test",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestIssue11028",
      "target": "testing/test_assertrewrite.py:TestIssue11028.test_assertion_walrus_operator_in_operand",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestIssue11028",
      "target": "testing/test_assertrewrite.py:TestIssue11028.test_assertion_walrus_operator_in_operand_json_dumps",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestIssue11028",
      "target": "testing/test_assertrewrite.py:TestIssue11028.test_assertion_walrus_operator_equals_operand_function",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestIssue11028",
      "target": "testing/test_assertrewrite.py:TestIssue11028.test_assertion_walrus_operator_equals_operand_function_keyword_arg",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestIssue11028",
      "target": "testing/test_assertrewrite.py:TestIssue11028.test_assertion_walrus_operator_equals_operand_function_arg_as_function",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestIssue11028",
      "target": "testing/test_assertrewrite.py:TestIssue11028.test_assertion_walrus_operator_gt_operand_function",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:test_rewrite_infinite_recursion",
      "target": "testing/test_assertrewrite.py:test_rewrite_infinite_recursion.spy_write_pyc",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestEarlyRewriteBailout",
      "target": "testing/test_assertrewrite.py:TestEarlyRewriteBailout.hook",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestEarlyRewriteBailout",
      "target": "testing/test_assertrewrite.py:TestEarlyRewriteBailout.test_basic",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestEarlyRewriteBailout",
      "target": "testing/test_assertrewrite.py:TestEarlyRewriteBailout.test_pattern_contains_subdirectories",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestEarlyRewriteBailout",
      "target": "testing/test_assertrewrite.py:TestEarlyRewriteBailout.test_cwd_changed",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestEarlyRewriteBailout.hook",
      "target": "testing/test_assertrewrite.py:TestEarlyRewriteBailout.hook.StubSession",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestEarlyRewriteBailout.hook",
      "target": "testing/test_assertrewrite.py:TestEarlyRewriteBailout.hook.StubSession",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestEarlyRewriteBailout.hook",
      "target": "testing/test_assertrewrite.py:TestEarlyRewriteBailout.hook.spy_find_spec",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestEarlyRewriteBailout.hook.StubSession",
      "target": "testing/test_assertrewrite.py:TestEarlyRewriteBailout.hook.StubSession.isinitpath",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionPass",
      "target": "testing/test_assertrewrite.py:TestAssertionPass.test_option_default",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionPass",
      "target": "testing/test_assertrewrite.py:TestAssertionPass.flag_on",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionPass",
      "target": "testing/test_assertrewrite.py:TestAssertionPass.hook_on",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionPass",
      "target": "testing/test_assertrewrite.py:TestAssertionPass.test_hook_call",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionPass",
      "target": "testing/test_assertrewrite.py:TestAssertionPass.test_hook_call_with_parens",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionPass",
      "target": "testing/test_assertrewrite.py:TestAssertionPass.test_hook_not_called_without_hookimpl",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionPass",
      "target": "testing/test_assertrewrite.py:TestAssertionPass.test_hook_not_called_without_cmd_option",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionPass.test_hook_not_called_without_hookimpl",
      "target": "testing/test_assertrewrite.py:TestAssertionPass.test_hook_not_called_without_hookimpl.raise_on_assertionpass",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestAssertionPass.test_hook_not_called_without_cmd_option",
      "target": "testing/test_assertrewrite.py:TestAssertionPass.test_hook_not_called_without_cmd_option.raise_on_assertionpass",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:test_try_makedirs",
      "target": "testing/test_assertrewrite.py:test_try_makedirs.fake_mkdir",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestPyCacheDir",
      "target": "testing/test_assertrewrite.py:TestPyCacheDir.test_get_cache_dir",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestPyCacheDir",
      "target": "testing/test_assertrewrite.py:TestPyCacheDir.test_sys_pycache_prefix_integration",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestReprSizeVerbosity",
      "target": "testing/test_assertrewrite.py:TestReprSizeVerbosity.test_get_maxsize_for_saferepr",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestReprSizeVerbosity",
      "target": "testing/test_assertrewrite.py:TestReprSizeVerbosity.create_test_file",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestReprSizeVerbosity",
      "target": "testing/test_assertrewrite.py:TestReprSizeVerbosity.test_default_verbosity",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestReprSizeVerbosity",
      "target": "testing/test_assertrewrite.py:TestReprSizeVerbosity.test_increased_verbosity",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestReprSizeVerbosity",
      "target": "testing/test_assertrewrite.py:TestReprSizeVerbosity.test_max_increased_verbosity",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestReprSizeVerbosity.test_get_maxsize_for_saferepr",
      "target": "testing/test_assertrewrite.py:TestReprSizeVerbosity.test_get_maxsize_for_saferepr.FakeConfig",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestReprSizeVerbosity.test_get_maxsize_for_saferepr",
      "target": "testing/test_assertrewrite.py:TestReprSizeVerbosity.test_get_maxsize_for_saferepr.FakeConfig",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestReprSizeVerbosity.test_get_maxsize_for_saferepr.FakeConfig",
      "target": "testing/test_assertrewrite.py:TestReprSizeVerbosity.test_get_maxsize_for_saferepr.FakeConfig.getoption",
      "type": "contains"
    },
    {
      "source": "testing/test_assertrewrite.py:TestReprSizeVerbosity.test_default_verbosity",
      "target": "testing/test_assertrewrite.py:TestReprSizeVerbosity.create_test_file",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestReprSizeVerbosity.test_increased_verbosity",
      "target": "testing/test_assertrewrite.py:TestReprSizeVerbosity.create_test_file",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertrewrite.py:TestReprSizeVerbosity.test_max_increased_verbosity",
      "target": "testing/test_assertrewrite.py:TestReprSizeVerbosity.create_test_file",
      "type": "invokes"
    },
    {
      "source": "testing/conftest.py",
      "target": "testing/conftest.py:restore_tracing",
      "type": "contains"
    },
    {
      "source": "testing/conftest.py",
      "target": "testing/conftest.py:pytest_collection_modifyitems",
      "type": "contains"
    },
    {
      "source": "testing/conftest.py",
      "target": "testing/conftest.py:tw_mock",
      "type": "contains"
    },
    {
      "source": "testing/conftest.py",
      "target": "testing/conftest.py:dummy_yaml_custom_test",
      "type": "contains"
    },
    {
      "source": "testing/conftest.py",
      "target": "testing/conftest.py:pytester",
      "type": "contains"
    },
    {
      "source": "testing/conftest.py",
      "target": "testing/conftest.py:color_mapping",
      "type": "contains"
    },
    {
      "source": "testing/conftest.py",
      "target": "testing/conftest.py:mock_timing",
      "type": "contains"
    },
    {
      "source": "testing/conftest.py:tw_mock",
      "target": "testing/conftest.py:tw_mock.TWMock",
      "type": "contains"
    },
    {
      "source": "testing/conftest.py:tw_mock",
      "target": "testing/conftest.py:tw_mock.TWMock",
      "type": "invokes"
    },
    {
      "source": "testing/conftest.py:tw_mock.TWMock",
      "target": "testing/conftest.py:tw_mock.TWMock.sep",
      "type": "contains"
    },
    {
      "source": "testing/conftest.py:tw_mock.TWMock",
      "target": "testing/conftest.py:tw_mock.TWMock.write",
      "type": "contains"
    },
    {
      "source": "testing/conftest.py:tw_mock.TWMock",
      "target": "testing/conftest.py:tw_mock.TWMock._write_source",
      "type": "contains"
    },
    {
      "source": "testing/conftest.py:tw_mock.TWMock",
      "target": "testing/conftest.py:tw_mock.TWMock.line",
      "type": "contains"
    },
    {
      "source": "testing/conftest.py:tw_mock.TWMock",
      "target": "testing/conftest.py:tw_mock.TWMock.markup",
      "type": "contains"
    },
    {
      "source": "testing/conftest.py:tw_mock.TWMock",
      "target": "testing/conftest.py:tw_mock.TWMock.get_write_msg",
      "type": "contains"
    },
    {
      "source": "testing/conftest.py:tw_mock.TWMock._write_source",
      "target": "testing/conftest.py:tw_mock.TWMock.line",
      "type": "invokes"
    },
    {
      "source": "testing/conftest.py:color_mapping",
      "target": "testing/conftest.py:color_mapping.ColorMapping",
      "type": "contains"
    },
    {
      "source": "testing/conftest.py:color_mapping.ColorMapping",
      "target": "testing/conftest.py:color_mapping.ColorMapping.format",
      "type": "contains"
    },
    {
      "source": "testing/conftest.py:color_mapping.ColorMapping",
      "target": "testing/conftest.py:color_mapping.ColorMapping.format_for_fnmatch",
      "type": "contains"
    },
    {
      "source": "testing/conftest.py:color_mapping.ColorMapping",
      "target": "testing/conftest.py:color_mapping.ColorMapping.format_for_rematch",
      "type": "contains"
    },
    {
      "source": "testing/conftest.py:color_mapping.ColorMapping.format_for_fnmatch",
      "target": "testing/conftest.py:color_mapping.ColorMapping.format",
      "type": "invokes"
    },
    {
      "source": "testing/conftest.py:color_mapping.ColorMapping.format_for_rematch",
      "target": "testing/conftest.py:color_mapping.ColorMapping.format",
      "type": "invokes"
    },
    {
      "source": "testing/conftest.py:mock_timing",
      "target": "testing/conftest.py:mock_timing.MockTiming",
      "type": "contains"
    },
    {
      "source": "testing/conftest.py:mock_timing",
      "target": "testing/conftest.py:mock_timing.MockTiming",
      "type": "invokes"
    },
    {
      "source": "testing/conftest.py:mock_timing",
      "target": "testing/conftest.py:mock_timing.MockTiming.patch",
      "type": "invokes"
    },
    {
      "source": "testing/conftest.py:mock_timing.MockTiming",
      "target": "testing/conftest.py:mock_timing.MockTiming.sleep",
      "type": "contains"
    },
    {
      "source": "testing/conftest.py:mock_timing.MockTiming",
      "target": "testing/conftest.py:mock_timing.MockTiming.time",
      "type": "contains"
    },
    {
      "source": "testing/conftest.py:mock_timing.MockTiming",
      "target": "testing/conftest.py:mock_timing.MockTiming.patch",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py",
      "target": "testing/test_warnings.py:pyfile_with_warnings",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py",
      "target": "testing/test_warnings.py:test_normal_flow",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py",
      "target": "testing/test_warnings.py:test_setup_teardown_warnings",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py",
      "target": "testing/test_warnings.py:test_as_errors",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py",
      "target": "testing/test_warnings.py:test_ignore",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py",
      "target": "testing/test_warnings.py:test_unicode",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py",
      "target": "testing/test_warnings.py:test_works_with_filterwarnings",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py",
      "target": "testing/test_warnings.py:test_filterwarnings_mark",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py",
      "target": "testing/test_warnings.py:test_non_string_warning_argument",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py",
      "target": "testing/test_warnings.py:test_filterwarnings_mark_registration",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py",
      "target": "testing/test_warnings.py:test_warning_recorded_hook",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py",
      "target": "testing/test_warnings.py:test_collection_warnings",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py",
      "target": "testing/test_warnings.py:test_mark_regex_escape",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py",
      "target": "testing/test_warnings.py:test_hide_pytest_internal_warnings",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py",
      "target": "testing/test_warnings.py:test_option_precedence_cmdline_over_ini",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py",
      "target": "testing/test_warnings.py:test_option_precedence_mark",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py",
      "target": "testing/test_warnings.py:TestDeprecationWarningsByDefault",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py",
      "target": "testing/test_warnings.py:test_removed_in_x_warning_as_error",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py",
      "target": "testing/test_warnings.py:TestAssertionWarnings",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py",
      "target": "testing/test_warnings.py:test_warnings_checker_twice",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py",
      "target": "testing/test_warnings.py:test_group_warnings_by_message",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py",
      "target": "testing/test_warnings.py:test_group_warnings_by_message_summary",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py",
      "target": "testing/test_warnings.py:test_pytest_configure_warning",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py",
      "target": "testing/test_warnings.py:TestStackLevel",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py",
      "target": "testing/test_warnings.py:test_warning_on_testpaths_not_found",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py",
      "target": "testing/test_warnings.py:test_resource_warning",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py:test_warning_recorded_hook",
      "target": "testing/test_warnings.py:test_warning_recorded_hook.WarningCollector",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py:test_warning_recorded_hook",
      "target": "testing/test_warnings.py:test_warning_recorded_hook.WarningCollector",
      "type": "invokes"
    },
    {
      "source": "testing/test_warnings.py:test_warning_recorded_hook.WarningCollector",
      "target": "testing/test_warnings.py:test_warning_recorded_hook.WarningCollector.pytest_warning_recorded",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py:TestDeprecationWarningsByDefault",
      "target": "testing/test_warnings.py:TestDeprecationWarningsByDefault.create_file",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py:TestDeprecationWarningsByDefault",
      "target": "testing/test_warnings.py:TestDeprecationWarningsByDefault.test_shown_by_default",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py:TestDeprecationWarningsByDefault",
      "target": "testing/test_warnings.py:TestDeprecationWarningsByDefault.test_hidden_by_ini",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py:TestDeprecationWarningsByDefault",
      "target": "testing/test_warnings.py:TestDeprecationWarningsByDefault.test_hidden_by_mark",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py:TestDeprecationWarningsByDefault",
      "target": "testing/test_warnings.py:TestDeprecationWarningsByDefault.test_hidden_by_cmdline",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py:TestDeprecationWarningsByDefault",
      "target": "testing/test_warnings.py:TestDeprecationWarningsByDefault.test_hidden_by_system",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py:TestDeprecationWarningsByDefault.test_shown_by_default",
      "target": "testing/test_warnings.py:TestDeprecationWarningsByDefault.create_file",
      "type": "invokes"
    },
    {
      "source": "testing/test_warnings.py:TestDeprecationWarningsByDefault.test_hidden_by_ini",
      "target": "testing/test_warnings.py:TestDeprecationWarningsByDefault.create_file",
      "type": "invokes"
    },
    {
      "source": "testing/test_warnings.py:TestDeprecationWarningsByDefault.test_hidden_by_mark",
      "target": "testing/test_warnings.py:TestDeprecationWarningsByDefault.create_file",
      "type": "invokes"
    },
    {
      "source": "testing/test_warnings.py:TestDeprecationWarningsByDefault.test_hidden_by_cmdline",
      "target": "testing/test_warnings.py:TestDeprecationWarningsByDefault.create_file",
      "type": "invokes"
    },
    {
      "source": "testing/test_warnings.py:TestDeprecationWarningsByDefault.test_hidden_by_system",
      "target": "testing/test_warnings.py:TestDeprecationWarningsByDefault.create_file",
      "type": "invokes"
    },
    {
      "source": "testing/test_warnings.py:TestAssertionWarnings",
      "target": "testing/test_warnings.py:TestAssertionWarnings.assert_result_warns",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py:TestAssertionWarnings",
      "target": "testing/test_warnings.py:TestAssertionWarnings.test_tuple_warning",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py:TestAssertionWarnings.test_tuple_warning",
      "target": "testing/test_warnings.py:TestAssertionWarnings.assert_result_warns",
      "type": "invokes"
    },
    {
      "source": "testing/test_warnings.py:TestStackLevel",
      "target": "testing/test_warnings.py:TestStackLevel.capwarn",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py:TestStackLevel",
      "target": "testing/test_warnings.py:TestStackLevel.test_issue4445_rewrite",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py:TestStackLevel",
      "target": "testing/test_warnings.py:TestStackLevel.test_issue4445_preparse",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py:TestStackLevel",
      "target": "testing/test_warnings.py:TestStackLevel.test_conftest_warning_captured",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py:TestStackLevel",
      "target": "testing/test_warnings.py:TestStackLevel.test_issue4445_import_plugin",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py:TestStackLevel",
      "target": "testing/test_warnings.py:TestStackLevel.test_issue4445_issue5928_mark_generator",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py:TestStackLevel.capwarn",
      "target": "testing/test_warnings.py:TestStackLevel.capwarn.CapturedWarnings",
      "type": "contains"
    },
    {
      "source": "testing/test_warnings.py:TestStackLevel.capwarn",
      "target": "testing/test_warnings.py:TestStackLevel.capwarn.CapturedWarnings",
      "type": "invokes"
    },
    {
      "source": "testing/test_warnings.py:TestStackLevel.capwarn.CapturedWarnings",
      "target": "testing/test_warnings.py:TestStackLevel.capwarn.CapturedWarnings.pytest_warning_recorded",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:TestMark",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_marked_class_run_twice",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_ini_markers",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_markers_option",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_ini_markers_whitespace",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_marker_without_description",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_markers_option_with_plugin_in_current_dir",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_mark_on_pseudo_function",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_strict_prohibits_unregistered_markers",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_mark_option",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_mark_option_custom",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_keyword_option_custom",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_keyword_option_considers_mark",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_keyword_option_parametrize",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_parametrize_with_module",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_keyword_option_wrong_arguments",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_parametrized_collected_from_command_line",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_parametrized_collect_with_wrong_args",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_parametrized_with_kwargs",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_parametrize_iterator",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:TestFunctional",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:TestKeywordSelection",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:TestMarkDecorator",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_parameterset_for_parametrize_marks",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_parameterset_for_fail_at_collect",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_parameterset_for_parametrize_bad_markname",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_mark_expressions_no_smear",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_addmarker_order",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_markers_from_parametrize",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_pytest_param_id_requires_string",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_pytest_param_id_allows_none_or_string",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_marker_expr_eval_failure_handling",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_mark_mro",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py",
      "target": "testing/test_mark.py:test_mark_fixture_order_mro",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestMark",
      "target": "testing/test_mark.py:TestMark.test_pytest_exists_in_namespace_all",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestMark",
      "target": "testing/test_mark.py:TestMark.test_pytest_mark_notcallable",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestMark",
      "target": "testing/test_mark.py:TestMark.test_mark_with_param",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestMark",
      "target": "testing/test_mark.py:TestMark.test_pytest_mark_name_starts_with_underscore",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestMark.test_mark_with_param",
      "target": "testing/test_mark.py:TestMark.test_mark_with_param.some_function",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestMark.test_mark_with_param",
      "target": "testing/test_mark.py:TestMark.test_mark_with_param.SomeClass",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestFunctional",
      "target": "testing/test_mark.py:TestFunctional.test_merging_markers_deep",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestFunctional",
      "target": "testing/test_mark.py:TestFunctional.test_mark_decorator_subclass_does_not_propagate_to_base",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestFunctional",
      "target": "testing/test_mark.py:TestFunctional.test_mark_should_not_pass_to_siebling_class",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestFunctional",
      "target": "testing/test_mark.py:TestFunctional.test_mark_decorator_baseclasses_merged",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestFunctional",
      "target": "testing/test_mark.py:TestFunctional.test_mark_closest",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestFunctional",
      "target": "testing/test_mark.py:TestFunctional.test_mark_with_wrong_marker",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestFunctional",
      "target": "testing/test_mark.py:TestFunctional.test_mark_dynamically_in_funcarg",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestFunctional",
      "target": "testing/test_mark.py:TestFunctional.test_no_marker_match_on_unmarked_names",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestFunctional",
      "target": "testing/test_mark.py:TestFunctional.test_keywords_at_node_level",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestFunctional",
      "target": "testing/test_mark.py:TestFunctional.test_keyword_added_for_session",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestFunctional",
      "target": "testing/test_mark.py:TestFunctional.assert_markers",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestFunctional",
      "target": "testing/test_mark.py:TestFunctional.test_mark_from_parameters",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestFunctional",
      "target": "testing/test_mark.py:TestFunctional.test_reevaluate_dynamic_expr",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestFunctional.test_mark_decorator_subclass_does_not_propagate_to_base",
      "target": "testing/test_mark.py:TestFunctional.assert_markers",
      "type": "invokes"
    },
    {
      "source": "testing/test_mark.py:TestFunctional.test_mark_decorator_baseclasses_merged",
      "target": "testing/test_mark.py:TestFunctional.assert_markers",
      "type": "invokes"
    },
    {
      "source": "testing/test_mark.py:TestKeywordSelection",
      "target": "testing/test_mark.py:TestKeywordSelection.test_select_simple",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestKeywordSelection",
      "target": "testing/test_mark.py:TestKeywordSelection.test_select_extra_keywords",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestKeywordSelection",
      "target": "testing/test_mark.py:TestKeywordSelection.test_keyword_extra",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestKeywordSelection",
      "target": "testing/test_mark.py:TestKeywordSelection.test_keyword_extra_dash",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestKeywordSelection",
      "target": "testing/test_mark.py:TestKeywordSelection.test_no_magic_values",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestKeywordSelection",
      "target": "testing/test_mark.py:TestKeywordSelection.test_no_match_directories_outside_the_suite",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestKeywordSelection.test_select_simple",
      "target": "testing/test_mark.py:TestKeywordSelection.test_select_simple.check",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestKeywordSelection.test_select_simple",
      "target": "testing/test_mark.py:TestKeywordSelection.test_select_simple.check",
      "type": "invokes"
    },
    {
      "source": "testing/test_mark.py:TestKeywordSelection.test_no_match_directories_outside_the_suite",
      "target": "testing/test_mark.py:TestKeywordSelection.test_no_match_directories_outside_the_suite.get_collected_names",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestKeywordSelection.test_no_match_directories_outside_the_suite",
      "target": "testing/test_mark.py:TestKeywordSelection.test_no_match_directories_outside_the_suite.get_collected_names",
      "type": "invokes"
    },
    {
      "source": "testing/test_mark.py:TestMarkDecorator",
      "target": "testing/test_mark.py:TestMarkDecorator.test__eq__",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:TestMarkDecorator",
      "target": "testing/test_mark.py:TestMarkDecorator.test_aliases",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:test_parameterset_for_parametrize_bad_markname",
      "target": "testing/test_mark.py:test_parameterset_for_parametrize_marks",
      "type": "invokes"
    },
    {
      "source": "testing/test_mark.py:test_mark_mro",
      "target": "testing/test_mark.py:test_mark_mro.A",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:test_mark_mro",
      "target": "testing/test_mark.py:test_mark_mro.B",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:test_mark_mro",
      "target": "testing/test_mark.py:test_mark_mro.C",
      "type": "contains"
    },
    {
      "source": "testing/test_mark.py:test_mark_mro.C",
      "target": "testing/test_mark.py:test_mark_mro.A",
      "type": "inherits"
    },
    {
      "source": "testing/test_mark.py:test_mark_mro.C",
      "target": "testing/test_mark.py:test_mark_mro.B",
      "type": "inherits"
    },
    {
      "source": "testing/test_faulthandler.py",
      "target": "testing/test_faulthandler.py:test_enabled",
      "type": "contains"
    },
    {
      "source": "testing/test_faulthandler.py",
      "target": "testing/test_faulthandler.py:setup_crashing_test",
      "type": "contains"
    },
    {
      "source": "testing/test_faulthandler.py",
      "target": "testing/test_faulthandler.py:test_crash_during_shutdown_captured",
      "type": "contains"
    },
    {
      "source": "testing/test_faulthandler.py",
      "target": "testing/test_faulthandler.py:test_crash_during_shutdown_not_captured",
      "type": "contains"
    },
    {
      "source": "testing/test_faulthandler.py",
      "target": "testing/test_faulthandler.py:test_disabled",
      "type": "contains"
    },
    {
      "source": "testing/test_faulthandler.py",
      "target": "testing/test_faulthandler.py:test_timeout",
      "type": "contains"
    },
    {
      "source": "testing/test_faulthandler.py",
      "target": "testing/test_faulthandler.py:test_cancel_timeout_on_hook",
      "type": "contains"
    },
    {
      "source": "testing/test_faulthandler.py",
      "target": "testing/test_faulthandler.py:test_already_initialized_crash",
      "type": "contains"
    },
    {
      "source": "testing/test_faulthandler.py",
      "target": "testing/test_faulthandler.py:test_get_stderr_fileno_invalid_fd",
      "type": "contains"
    },
    {
      "source": "testing/test_faulthandler.py:test_crash_during_shutdown_captured",
      "target": "testing/test_faulthandler.py:setup_crashing_test",
      "type": "invokes"
    },
    {
      "source": "testing/test_faulthandler.py:test_crash_during_shutdown_not_captured",
      "target": "testing/test_faulthandler.py:setup_crashing_test",
      "type": "invokes"
    },
    {
      "source": "testing/test_faulthandler.py:test_get_stderr_fileno_invalid_fd",
      "target": "testing/test_faulthandler.py:test_get_stderr_fileno_invalid_fd.StdErrWrapper",
      "type": "contains"
    },
    {
      "source": "testing/test_faulthandler.py:test_get_stderr_fileno_invalid_fd",
      "target": "testing/test_faulthandler.py:test_get_stderr_fileno_invalid_fd.StdErrWrapper",
      "type": "invokes"
    },
    {
      "source": "testing/test_faulthandler.py:test_get_stderr_fileno_invalid_fd.StdErrWrapper",
      "target": "testing/test_faulthandler.py:test_get_stderr_fileno_invalid_fd.StdErrWrapper.fileno",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py",
      "target": "testing/test_recwarn.py:test_recwarn_stacklevel",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py",
      "target": "testing/test_recwarn.py:test_recwarn_functional",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py",
      "target": "testing/test_recwarn.py:test_recwarn_captures_deprecation_warning",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py",
      "target": "testing/test_recwarn.py:TestWarningsRecorderChecker",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py",
      "target": "testing/test_recwarn.py:TestDeprecatedCall",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py",
      "target": "testing/test_recwarn.py:TestWarns",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestWarningsRecorderChecker",
      "target": "testing/test_recwarn.py:TestWarningsRecorderChecker.test_recording",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestWarningsRecorderChecker",
      "target": "testing/test_recwarn.py:TestWarningsRecorderChecker.test_warn_stacklevel",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestWarningsRecorderChecker",
      "target": "testing/test_recwarn.py:TestWarningsRecorderChecker.test_typechecking",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestWarningsRecorderChecker",
      "target": "testing/test_recwarn.py:TestWarningsRecorderChecker.test_invalid_enter_exit",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestDeprecatedCall",
      "target": "testing/test_recwarn.py:TestDeprecatedCall.dep",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestDeprecatedCall",
      "target": "testing/test_recwarn.py:TestDeprecatedCall.dep_explicit",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestDeprecatedCall",
      "target": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_raises",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestDeprecatedCall",
      "target": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestDeprecatedCall",
      "target": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_ret",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestDeprecatedCall",
      "target": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_preserves",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestDeprecatedCall",
      "target": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_explicit_call_raises",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestDeprecatedCall",
      "target": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_explicit_call",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestDeprecatedCall",
      "target": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_no_warning",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestDeprecatedCall",
      "target": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_modes",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestDeprecatedCall",
      "target": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_specificity",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestDeprecatedCall",
      "target": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_supports_match",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_preserves",
      "target": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call",
      "type": "invokes"
    },
    {
      "source": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_preserves",
      "target": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_raises",
      "type": "invokes"
    },
    {
      "source": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_no_warning",
      "target": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_no_warning.f",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_no_warning",
      "target": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_no_warning.f",
      "type": "invokes"
    },
    {
      "source": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_modes",
      "target": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_modes.f",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_modes",
      "target": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_modes.f",
      "type": "invokes"
    },
    {
      "source": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_specificity",
      "target": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_specificity.f",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_specificity",
      "target": "testing/test_recwarn.py:TestDeprecatedCall.test_deprecated_call_specificity.f",
      "type": "invokes"
    },
    {
      "source": "testing/test_recwarn.py:TestWarns",
      "target": "testing/test_recwarn.py:TestWarns.test_check_callable",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestWarns",
      "target": "testing/test_recwarn.py:TestWarns.test_several_messages",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestWarns",
      "target": "testing/test_recwarn.py:TestWarns.test_function",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestWarns",
      "target": "testing/test_recwarn.py:TestWarns.test_warning_tuple",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestWarns",
      "target": "testing/test_recwarn.py:TestWarns.test_as_contextmanager",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestWarns",
      "target": "testing/test_recwarn.py:TestWarns.test_record",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestWarns",
      "target": "testing/test_recwarn.py:TestWarns.test_record_only",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestWarns",
      "target": "testing/test_recwarn.py:TestWarns.test_record_only_none_deprecated_warn",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestWarns",
      "target": "testing/test_recwarn.py:TestWarns.test_record_by_subclass",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestWarns",
      "target": "testing/test_recwarn.py:TestWarns.test_double_test",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestWarns",
      "target": "testing/test_recwarn.py:TestWarns.test_match_regex",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestWarns",
      "target": "testing/test_recwarn.py:TestWarns.test_one_from_multiple_warns",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestWarns",
      "target": "testing/test_recwarn.py:TestWarns.test_none_of_multiple_warns",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestWarns",
      "target": "testing/test_recwarn.py:TestWarns.test_can_capture_previously_warned",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestWarns",
      "target": "testing/test_recwarn.py:TestWarns.test_warns_context_manager_with_kwargs",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestWarns",
      "target": "testing/test_recwarn.py:TestWarns.test_re_emit_single",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestWarns",
      "target": "testing/test_recwarn.py:TestWarns.test_re_emit_multiple",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestWarns",
      "target": "testing/test_recwarn.py:TestWarns.test_re_emit_match_single",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestWarns",
      "target": "testing/test_recwarn.py:TestWarns.test_re_emit_match_multiple",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestWarns",
      "target": "testing/test_recwarn.py:TestWarns.test_re_emit_non_match_single",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestWarns",
      "target": "testing/test_recwarn.py:TestWarns.test_catch_warning_within_raise",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestWarns.test_record_by_subclass",
      "target": "testing/test_recwarn.py:TestWarns.test_record_by_subclass.MyUserWarning",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestWarns.test_record_by_subclass",
      "target": "testing/test_recwarn.py:TestWarns.test_record_by_subclass.MyRuntimeWarning",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestWarns.test_can_capture_previously_warned",
      "target": "testing/test_recwarn.py:TestWarns.test_can_capture_previously_warned.f",
      "type": "contains"
    },
    {
      "source": "testing/test_recwarn.py:TestWarns.test_can_capture_previously_warned",
      "target": "testing/test_recwarn.py:TestWarns.test_can_capture_previously_warned.f",
      "type": "invokes"
    },
    {
      "source": "testing/test_session.py",
      "target": "testing/test_session.py:SessionTests",
      "type": "contains"
    },
    {
      "source": "testing/test_session.py",
      "target": "testing/test_session.py:TestNewSession",
      "type": "contains"
    },
    {
      "source": "testing/test_session.py",
      "target": "testing/test_session.py:test_plugin_specify",
      "type": "contains"
    },
    {
      "source": "testing/test_session.py",
      "target": "testing/test_session.py:test_plugin_already_exists",
      "type": "contains"
    },
    {
      "source": "testing/test_session.py",
      "target": "testing/test_session.py:test_exclude",
      "type": "contains"
    },
    {
      "source": "testing/test_session.py",
      "target": "testing/test_session.py:test_exclude_glob",
      "type": "contains"
    },
    {
      "source": "testing/test_session.py",
      "target": "testing/test_session.py:test_deselect",
      "type": "contains"
    },
    {
      "source": "testing/test_session.py",
      "target": "testing/test_session.py:test_sessionfinish_with_start",
      "type": "contains"
    },
    {
      "source": "testing/test_session.py",
      "target": "testing/test_session.py:test_collection_args_do_not_duplicate_modules",
      "type": "contains"
    },
    {
      "source": "testing/test_session.py",
      "target": "testing/test_session.py:test_rootdir_option_arg",
      "type": "contains"
    },
    {
      "source": "testing/test_session.py",
      "target": "testing/test_session.py:test_rootdir_wrong_option_arg",
      "type": "contains"
    },
    {
      "source": "testing/test_session.py:SessionTests",
      "target": "testing/test_session.py:SessionTests.test_basic_testitem_events",
      "type": "contains"
    },
    {
      "source": "testing/test_session.py:SessionTests",
      "target": "testing/test_session.py:SessionTests.test_nested_import_error",
      "type": "contains"
    },
    {
      "source": "testing/test_session.py:SessionTests",
      "target": "testing/test_session.py:SessionTests.test_raises_output",
      "type": "contains"
    },
    {
      "source": "testing/test_session.py:SessionTests",
      "target": "testing/test_session.py:SessionTests.test_syntax_error_module",
      "type": "contains"
    },
    {
      "source": "testing/test_session.py:SessionTests",
      "target": "testing/test_session.py:SessionTests.test_exit_first_problem",
      "type": "contains"
    },
    {
      "source": "testing/test_session.py:SessionTests",
      "target": "testing/test_session.py:SessionTests.test_maxfail",
      "type": "contains"
    },
    {
      "source": "testing/test_session.py:SessionTests",
      "target": "testing/test_session.py:SessionTests.test_broken_repr",
      "type": "contains"
    },
    {
      "source": "testing/test_session.py:SessionTests",
      "target": "testing/test_session.py:SessionTests.test_broken_repr_with_showlocals_verbose",
      "type": "contains"
    },
    {
      "source": "testing/test_session.py:SessionTests",
      "target": "testing/test_session.py:SessionTests.test_skip_file_by_conftest",
      "type": "contains"
    },
    {
      "source": "testing/test_session.py:SessionTests.test_basic_testitem_events",
      "target": "testing/test_session.py:SessionTests.test_basic_testitem_events.end",
      "type": "contains"
    },
    {
      "source": "testing/test_session.py:SessionTests.test_basic_testitem_events",
      "target": "testing/test_session.py:SessionTests.test_basic_testitem_events.end",
      "type": "invokes"
    },
    {
      "source": "testing/test_session.py:TestNewSession",
      "target": "testing/test_session.py:TestNewSession.test_order_of_execution",
      "type": "contains"
    },
    {
      "source": "testing/test_session.py:TestNewSession",
      "target": "testing/test_session.py:TestNewSession.test_collect_only_with_various_situations",
      "type": "contains"
    },
    {
      "source": "testing/test_session.py:TestNewSession",
      "target": "testing/test_session.py:TestNewSession.test_minus_x_import_error",
      "type": "contains"
    },
    {
      "source": "testing/test_session.py:TestNewSession",
      "target": "testing/test_session.py:TestNewSession.test_minus_x_overridden_by_maxfail",
      "type": "contains"
    },
    {
      "source": "testing/test_session.py:TestNewSession",
      "target": "testing/test_session.py:SessionTests",
      "type": "inherits"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:TestEvaluation",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:TestXFail",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:TestXFailwithSetupTeardown",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:TestSkip",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:TestSkipif",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:test_skip_not_report_default",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:test_skipif_class",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:test_skipped_reasons_functional",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:test_skipped_folding",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:test_reportchars",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:test_reportchars_error",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:test_reportchars_all",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:test_reportchars_all_error",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:test_errors_in_xfail_skip_expressions",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:test_xfail_skipif_with_globals",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:test_default_markers",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:test_xfail_test_setup_exception",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:test_imperativeskip_on_xfail_test",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:TestBooleanCondition",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:test_xfail_item",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:test_module_level_skip_error",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:test_module_level_skip_with_allow_module_level",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:test_invalid_skip_keyword_parameter",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:test_mark_xfail_item",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:test_summary_list_after_errors",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:test_importorskip",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:test_relpath_rootdir",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:test_skip_from_fixture",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:test_skip_using_reason_works_ok",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:test_fail_using_reason_works_ok",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:test_fail_fails_with_msg_and_reason",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:test_skip_fails_with_msg_and_reason",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:test_exit_with_msg_and_reason_fails",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py",
      "target": "testing/test_skipping.py:test_exit_with_reason_works_ok",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestEvaluation",
      "target": "testing/test_skipping.py:TestEvaluation.test_no_marker",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestEvaluation",
      "target": "testing/test_skipping.py:TestEvaluation.test_marked_xfail_no_args",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestEvaluation",
      "target": "testing/test_skipping.py:TestEvaluation.test_marked_skipif_no_args",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestEvaluation",
      "target": "testing/test_skipping.py:TestEvaluation.test_marked_one_arg",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestEvaluation",
      "target": "testing/test_skipping.py:TestEvaluation.test_marked_one_arg_with_reason",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestEvaluation",
      "target": "testing/test_skipping.py:TestEvaluation.test_marked_one_arg_twice",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestEvaluation",
      "target": "testing/test_skipping.py:TestEvaluation.test_marked_one_arg_twice2",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestEvaluation",
      "target": "testing/test_skipping.py:TestEvaluation.test_marked_skipif_with_boolean_without_reason",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestEvaluation",
      "target": "testing/test_skipping.py:TestEvaluation.test_marked_skipif_with_invalid_boolean",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestEvaluation",
      "target": "testing/test_skipping.py:TestEvaluation.test_skipif_class",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestEvaluation",
      "target": "testing/test_skipping.py:TestEvaluation.test_skipif_markeval_namespace",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestEvaluation",
      "target": "testing/test_skipping.py:TestEvaluation.test_skipif_markeval_namespace_multiple",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestEvaluation",
      "target": "testing/test_skipping.py:TestEvaluation.test_skipif_markeval_namespace_ValueError",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestXFail",
      "target": "testing/test_skipping.py:TestXFail.test_xfail_simple",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestXFail",
      "target": "testing/test_skipping.py:TestXFail.test_xfail_xpassed",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestXFail",
      "target": "testing/test_skipping.py:TestXFail.test_xfail_using_platform",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestXFail",
      "target": "testing/test_skipping.py:TestXFail.test_xfail_xpassed_strict",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestXFail",
      "target": "testing/test_skipping.py:TestXFail.test_xfail_run_anyway",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestXFail",
      "target": "testing/test_skipping.py:TestXFail.test_xfail_run_with_skip_mark",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestXFail",
      "target": "testing/test_skipping.py:TestXFail.test_xfail_evalfalse_but_fails",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestXFail",
      "target": "testing/test_skipping.py:TestXFail.test_xfail_not_report_default",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestXFail",
      "target": "testing/test_skipping.py:TestXFail.test_xfail_not_run_xfail_reporting",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestXFail",
      "target": "testing/test_skipping.py:TestXFail.test_xfail_not_run_no_setup_run",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestXFail",
      "target": "testing/test_skipping.py:TestXFail.test_xfail_xpass",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestXFail",
      "target": "testing/test_skipping.py:TestXFail.test_xfail_imperative",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestXFail",
      "target": "testing/test_skipping.py:TestXFail.test_xfail_imperative_in_setup_function",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestXFail",
      "target": "testing/test_skipping.py:TestXFail.xtest_dynamic_xfail_set_during_setup",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestXFail",
      "target": "testing/test_skipping.py:TestXFail.test_dynamic_xfail_no_run",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestXFail",
      "target": "testing/test_skipping.py:TestXFail.test_dynamic_xfail_set_during_funcarg_setup",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestXFail",
      "target": "testing/test_skipping.py:TestXFail.test_dynamic_xfail_set_during_runtest_failed",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestXFail",
      "target": "testing/test_skipping.py:TestXFail.test_dynamic_xfail_set_during_runtest_passed_strict",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestXFail",
      "target": "testing/test_skipping.py:TestXFail.test_xfail_raises",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestXFail",
      "target": "testing/test_skipping.py:TestXFail.test_strict_sanity",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestXFail",
      "target": "testing/test_skipping.py:TestXFail.test_strict_xfail",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestXFail",
      "target": "testing/test_skipping.py:TestXFail.test_strict_xfail_condition",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestXFail",
      "target": "testing/test_skipping.py:TestXFail.test_xfail_condition_keyword",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestXFail",
      "target": "testing/test_skipping.py:TestXFail.test_strict_xfail_default_from_file",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestXFail",
      "target": "testing/test_skipping.py:TestXFail.test_xfail_markeval_namespace",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestXFailwithSetupTeardown",
      "target": "testing/test_skipping.py:TestXFailwithSetupTeardown.test_failing_setup_issue9",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestXFailwithSetupTeardown",
      "target": "testing/test_skipping.py:TestXFailwithSetupTeardown.test_failing_teardown_issue9",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestSkip",
      "target": "testing/test_skipping.py:TestSkip.test_skip_class",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestSkip",
      "target": "testing/test_skipping.py:TestSkip.test_skips_on_false_string",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestSkip",
      "target": "testing/test_skipping.py:TestSkip.test_arg_as_reason",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestSkip",
      "target": "testing/test_skipping.py:TestSkip.test_skip_no_reason",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestSkip",
      "target": "testing/test_skipping.py:TestSkip.test_skip_with_reason",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestSkip",
      "target": "testing/test_skipping.py:TestSkip.test_only_skips_marked_test",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestSkip",
      "target": "testing/test_skipping.py:TestSkip.test_strict_and_skip",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestSkip",
      "target": "testing/test_skipping.py:TestSkip.test_wrong_skip_usage",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestSkipif",
      "target": "testing/test_skipping.py:TestSkipif.test_skipif_conditional",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestSkipif",
      "target": "testing/test_skipping.py:TestSkipif.test_skipif_reporting",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestSkipif",
      "target": "testing/test_skipping.py:TestSkipif.test_skipif_using_platform",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestSkipif",
      "target": "testing/test_skipping.py:TestSkipif.test_skipif_reporting_multiple",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestBooleanCondition",
      "target": "testing/test_skipping.py:TestBooleanCondition.test_skipif",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestBooleanCondition",
      "target": "testing/test_skipping.py:TestBooleanCondition.test_skipif_noreason",
      "type": "contains"
    },
    {
      "source": "testing/test_skipping.py:TestBooleanCondition",
      "target": "testing/test_skipping.py:TestBooleanCondition.test_xfail",
      "type": "contains"
    },
    {
      "source": "testing/test_python_path.py",
      "target": "testing/test_python_path.py:file_structure",
      "type": "contains"
    },
    {
      "source": "testing/test_python_path.py",
      "target": "testing/test_python_path.py:test_one_dir",
      "type": "contains"
    },
    {
      "source": "testing/test_python_path.py",
      "target": "testing/test_python_path.py:test_two_dirs",
      "type": "contains"
    },
    {
      "source": "testing/test_python_path.py",
      "target": "testing/test_python_path.py:test_module_not_found",
      "type": "contains"
    },
    {
      "source": "testing/test_python_path.py",
      "target": "testing/test_python_path.py:test_no_ini",
      "type": "contains"
    },
    {
      "source": "testing/test_python_path.py",
      "target": "testing/test_python_path.py:test_clean_up",
      "type": "contains"
    },
    {
      "source": "testing/test_python_path.py:test_clean_up",
      "target": "testing/test_python_path.py:test_clean_up.Plugin",
      "type": "contains"
    },
    {
      "source": "testing/test_python_path.py:test_clean_up",
      "target": "testing/test_python_path.py:test_clean_up.Plugin",
      "type": "invokes"
    },
    {
      "source": "testing/test_python_path.py:test_clean_up.Plugin",
      "target": "testing/test_python_path.py:test_clean_up.Plugin.pytest_unconfigure",
      "type": "contains"
    },
    {
      "source": "testing/test_pastebin.py",
      "target": "testing/test_pastebin.py:TestPasteCapture",
      "type": "contains"
    },
    {
      "source": "testing/test_pastebin.py",
      "target": "testing/test_pastebin.py:TestPaste",
      "type": "contains"
    },
    {
      "source": "testing/test_pastebin.py:TestPasteCapture",
      "target": "testing/test_pastebin.py:TestPasteCapture.pastebinlist",
      "type": "contains"
    },
    {
      "source": "testing/test_pastebin.py:TestPasteCapture",
      "target": "testing/test_pastebin.py:TestPasteCapture.test_failed",
      "type": "contains"
    },
    {
      "source": "testing/test_pastebin.py:TestPasteCapture",
      "target": "testing/test_pastebin.py:TestPasteCapture.test_all",
      "type": "contains"
    },
    {
      "source": "testing/test_pastebin.py:TestPasteCapture",
      "target": "testing/test_pastebin.py:TestPasteCapture.test_non_ascii_paste_text",
      "type": "contains"
    },
    {
      "source": "testing/test_pastebin.py:TestPaste",
      "target": "testing/test_pastebin.py:TestPaste.pastebin",
      "type": "contains"
    },
    {
      "source": "testing/test_pastebin.py:TestPaste",
      "target": "testing/test_pastebin.py:TestPaste.mocked_urlopen_fail",
      "type": "contains"
    },
    {
      "source": "testing/test_pastebin.py:TestPaste",
      "target": "testing/test_pastebin.py:TestPaste.mocked_urlopen_invalid",
      "type": "contains"
    },
    {
      "source": "testing/test_pastebin.py:TestPaste",
      "target": "testing/test_pastebin.py:TestPaste.mocked_urlopen",
      "type": "contains"
    },
    {
      "source": "testing/test_pastebin.py:TestPaste",
      "target": "testing/test_pastebin.py:TestPaste.test_pastebin_invalid_url",
      "type": "contains"
    },
    {
      "source": "testing/test_pastebin.py:TestPaste",
      "target": "testing/test_pastebin.py:TestPaste.test_pastebin_http_error",
      "type": "contains"
    },
    {
      "source": "testing/test_pastebin.py:TestPaste",
      "target": "testing/test_pastebin.py:TestPaste.test_create_new_paste",
      "type": "contains"
    },
    {
      "source": "testing/test_pastebin.py:TestPaste",
      "target": "testing/test_pastebin.py:TestPaste.test_create_new_paste_failure",
      "type": "contains"
    },
    {
      "source": "testing/test_pastebin.py:TestPaste.mocked_urlopen_fail",
      "target": "testing/test_pastebin.py:TestPaste.mocked_urlopen_fail.mocked",
      "type": "contains"
    },
    {
      "source": "testing/test_pastebin.py:TestPaste.mocked_urlopen_invalid",
      "target": "testing/test_pastebin.py:TestPaste.mocked_urlopen_invalid.mocked",
      "type": "contains"
    },
    {
      "source": "testing/test_pastebin.py:TestPaste.mocked_urlopen_invalid.mocked",
      "target": "testing/test_pastebin.py:TestPaste.mocked_urlopen_invalid.mocked.DummyFile",
      "type": "contains"
    },
    {
      "source": "testing/test_pastebin.py:TestPaste.mocked_urlopen_invalid.mocked",
      "target": "testing/test_pastebin.py:TestPaste.mocked_urlopen_invalid.mocked.DummyFile",
      "type": "invokes"
    },
    {
      "source": "testing/test_pastebin.py:TestPaste.mocked_urlopen_invalid.mocked.DummyFile",
      "target": "testing/test_pastebin.py:TestPaste.mocked_urlopen_invalid.mocked.DummyFile.read",
      "type": "contains"
    },
    {
      "source": "testing/test_pastebin.py:TestPaste.mocked_urlopen",
      "target": "testing/test_pastebin.py:TestPaste.mocked_urlopen.mocked",
      "type": "contains"
    },
    {
      "source": "testing/test_pastebin.py:TestPaste.mocked_urlopen.mocked",
      "target": "testing/test_pastebin.py:TestPaste.mocked_urlopen.mocked.DummyFile",
      "type": "contains"
    },
    {
      "source": "testing/test_pastebin.py:TestPaste.mocked_urlopen.mocked",
      "target": "testing/test_pastebin.py:TestPaste.mocked_urlopen.mocked.DummyFile",
      "type": "invokes"
    },
    {
      "source": "testing/test_pastebin.py:TestPaste.mocked_urlopen.mocked.DummyFile",
      "target": "testing/test_pastebin.py:TestPaste.mocked_urlopen.mocked.DummyFile.read",
      "type": "contains"
    },
    {
      "source": "testing/test_pastebin.py:TestPaste.test_create_new_paste_failure",
      "target": "testing/test_pastebin.py:TestPaste.test_create_new_paste_failure.response",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py",
      "target": "testing/test_conftest.py:ConftestWithSetinitial",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py",
      "target": "testing/test_conftest.py:conftest_setinitial",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py",
      "target": "testing/test_conftest.py:TestConftestValueAccessGlobal",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py",
      "target": "testing/test_conftest.py:test_conftest_in_nonpkg_with_init",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py",
      "target": "testing/test_conftest.py:test_doubledash_considered",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py",
      "target": "testing/test_conftest.py:test_issue151_load_all_conftests",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py",
      "target": "testing/test_conftest.py:test_conftest_global_import",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py",
      "target": "testing/test_conftest.py:test_conftestcutdir",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py",
      "target": "testing/test_conftest.py:test_conftestcutdir_inplace_considered",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py",
      "target": "testing/test_conftest.py:test_setinitial_conftest_subdirs",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py",
      "target": "testing/test_conftest.py:test_conftest_confcutdir",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py",
      "target": "testing/test_conftest.py:test_installed_conftest_is_picked_up",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py",
      "target": "testing/test_conftest.py:test_conftest_symlink",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py",
      "target": "testing/test_conftest.py:test_conftest_symlink_files",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py",
      "target": "testing/test_conftest.py:test_conftest_badcase",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py",
      "target": "testing/test_conftest.py:test_conftest_uppercase",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py",
      "target": "testing/test_conftest.py:test_no_conftest",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py",
      "target": "testing/test_conftest.py:test_conftest_existing_junitxml",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py",
      "target": "testing/test_conftest.py:test_conftest_import_order",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py",
      "target": "testing/test_conftest.py:test_fixture_dependency",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py",
      "target": "testing/test_conftest.py:test_conftest_found_with_double_dash",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py",
      "target": "testing/test_conftest.py:TestConftestVisibility",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py",
      "target": "testing/test_conftest.py:test_search_conftest_up_to_inifile",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py",
      "target": "testing/test_conftest.py:test_issue1073_conftest_special_objects",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py",
      "target": "testing/test_conftest.py:test_conftest_exception_handling",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py",
      "target": "testing/test_conftest.py:test_hook_proxy",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py",
      "target": "testing/test_conftest.py:test_required_option_help",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py:ConftestWithSetinitial",
      "target": "testing/test_conftest.py:conftest_setinitial",
      "type": "invokes"
    },
    {
      "source": "testing/test_conftest.py:TestConftestValueAccessGlobal",
      "target": "testing/test_conftest.py:TestConftestValueAccessGlobal.basedir",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py:TestConftestValueAccessGlobal",
      "target": "testing/test_conftest.py:TestConftestValueAccessGlobal.test_basic_init",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py:TestConftestValueAccessGlobal",
      "target": "testing/test_conftest.py:TestConftestValueAccessGlobal.test_immediate_initialiation_and_incremental_are_the_same",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py:TestConftestValueAccessGlobal",
      "target": "testing/test_conftest.py:TestConftestValueAccessGlobal.test_value_access_not_existing",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py:TestConftestValueAccessGlobal",
      "target": "testing/test_conftest.py:TestConftestValueAccessGlobal.test_value_access_by_path",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py:TestConftestValueAccessGlobal",
      "target": "testing/test_conftest.py:TestConftestValueAccessGlobal.test_value_access_with_confmod",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py:TestConftestValueAccessGlobal.test_value_access_not_existing",
      "target": "testing/test_conftest.py:ConftestWithSetinitial",
      "type": "invokes"
    },
    {
      "source": "testing/test_conftest.py:TestConftestValueAccessGlobal.test_value_access_by_path",
      "target": "testing/test_conftest.py:ConftestWithSetinitial",
      "type": "invokes"
    },
    {
      "source": "testing/test_conftest.py:TestConftestValueAccessGlobal.test_value_access_with_confmod",
      "target": "testing/test_conftest.py:ConftestWithSetinitial",
      "type": "invokes"
    },
    {
      "source": "testing/test_conftest.py:test_conftest_in_nonpkg_with_init",
      "target": "testing/test_conftest.py:ConftestWithSetinitial",
      "type": "invokes"
    },
    {
      "source": "testing/test_conftest.py:test_doubledash_considered",
      "target": "testing/test_conftest.py:conftest_setinitial",
      "type": "invokes"
    },
    {
      "source": "testing/test_conftest.py:test_issue151_load_all_conftests",
      "target": "testing/test_conftest.py:conftest_setinitial",
      "type": "invokes"
    },
    {
      "source": "testing/test_conftest.py:test_conftestcutdir",
      "target": "testing/test_conftest.py:conftest_setinitial",
      "type": "invokes"
    },
    {
      "source": "testing/test_conftest.py:test_conftestcutdir_inplace_considered",
      "target": "testing/test_conftest.py:conftest_setinitial",
      "type": "invokes"
    },
    {
      "source": "testing/test_conftest.py:test_setinitial_conftest_subdirs",
      "target": "testing/test_conftest.py:conftest_setinitial",
      "type": "invokes"
    },
    {
      "source": "testing/test_conftest.py:test_conftest_import_order",
      "target": "testing/test_conftest.py:test_conftest_import_order.impct",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py:TestConftestVisibility",
      "target": "testing/test_conftest.py:TestConftestVisibility._setup_tree",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py:TestConftestVisibility",
      "target": "testing/test_conftest.py:TestConftestVisibility.test_parsefactories_relative_node_ids",
      "type": "contains"
    },
    {
      "source": "testing/test_conftest.py:TestConftestVisibility.test_parsefactories_relative_node_ids",
      "target": "testing/test_conftest.py:TestConftestVisibility._setup_tree",
      "type": "invokes"
    },
    {
      "source": "testing/test_nodes.py",
      "target": "testing/test_nodes.py:test_iterparentnodeids",
      "type": "contains"
    },
    {
      "source": "testing/test_nodes.py",
      "target": "testing/test_nodes.py:test_node_from_parent_disallowed_arguments",
      "type": "contains"
    },
    {
      "source": "testing/test_nodes.py",
      "target": "testing/test_nodes.py:test_node_direct_construction_deprecated",
      "type": "contains"
    },
    {
      "source": "testing/test_nodes.py",
      "target": "testing/test_nodes.py:test_subclassing_both_item_and_collector_deprecated",
      "type": "contains"
    },
    {
      "source": "testing/test_nodes.py",
      "target": "testing/test_nodes.py:test_node_warn_is_no_longer_only_pytest_warnings",
      "type": "contains"
    },
    {
      "source": "testing/test_nodes.py",
      "target": "testing/test_nodes.py:test_node_warning_enforces_warning_types",
      "type": "contains"
    },
    {
      "source": "testing/test_nodes.py",
      "target": "testing/test_nodes.py:test__check_initialpaths_for_relpath",
      "type": "contains"
    },
    {
      "source": "testing/test_nodes.py",
      "target": "testing/test_nodes.py:test_failure_with_changed_cwd",
      "type": "contains"
    },
    {
      "source": "testing/test_nodes.py:test_subclassing_both_item_and_collector_deprecated",
      "target": "testing/test_nodes.py:test_subclassing_both_item_and_collector_deprecated.SoWrong",
      "type": "contains"
    },
    {
      "source": "testing/test_nodes.py:test__check_initialpaths_for_relpath",
      "target": "testing/test_nodes.py:test__check_initialpaths_for_relpath.FakeSession1",
      "type": "contains"
    },
    {
      "source": "testing/test_nodes.py:test__check_initialpaths_for_relpath",
      "target": "testing/test_nodes.py:test__check_initialpaths_for_relpath.FakeSession2",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_simple_unittest",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_runTest_method",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_isclasscheck_issue53",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_setup",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_setUpModule",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_setUpModule_failing_no_teardown",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_new_instances",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_function_item_obj_is_instance",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_teardown",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_teardown_issue1649",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_unittest_skip_issue148",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_method_and_teardown_failing_reporting",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_setup_failure_is_shown",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_setup_setUpClass",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_fixtures_setup_setUpClass_issue8394",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_setup_class",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_testcase_adderrorandfailure_defers",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_testcase_custom_exception_info",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_testcase_totally_incompatible_exception_info",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_module_level_pytestmark",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:TestTrialUnittest",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_djangolike_testcase",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_unittest_not_shown_in_traceback",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_unorderable_types",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_unittest_typerror_traceback",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_unittest_expected_failure_for_failing_test_is_xfail",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_unittest_expected_failure_for_passing_test_is_fail",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_unittest_setup_interaction",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_non_unittest_no_setupclass_support",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_no_teardown_if_setupclass_failed",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_cleanup_functions",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_issue333_result_clearing",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_unittest_raise_skip_issue748",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_unittest_skip_issue1169",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_class_method_containing_test_issue1558",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_usefixtures_marker_on_unittest",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_testcase_handles_init_exceptions",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_error_message_with_parametrized_fixtures",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_setup_inheritance_skipping",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_BdbQuit",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_exit_outcome",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_trace",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_pdb_teardown_called",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_pdb_teardown_skipped_for_functions",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_pdb_teardown_skipped_for_classes",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_async_support",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_asynctest_support",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_plain_unittest_does_not_support_async",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_do_class_cleanups_on_success",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_do_class_cleanups_on_setupclass_failure",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_do_class_cleanups_on_teardownclass_failure",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_do_cleanups_on_success",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_do_cleanups_on_setup_failure",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_do_cleanups_on_teardown_failure",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_traceback_pruning",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py",
      "target": "testing/test_unittest.py:test_raising_unittest_skiptest_during_collection",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py:TestTrialUnittest",
      "target": "testing/test_unittest.py:TestTrialUnittest.setup_class",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py:TestTrialUnittest",
      "target": "testing/test_unittest.py:TestTrialUnittest.test_trial_testcase_runtest_not_collected",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py:TestTrialUnittest",
      "target": "testing/test_unittest.py:TestTrialUnittest.test_trial_exceptions_with_skips",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py:TestTrialUnittest",
      "target": "testing/test_unittest.py:TestTrialUnittest.test_trial_error",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py:TestTrialUnittest",
      "target": "testing/test_unittest.py:TestTrialUnittest.test_trial_pdb",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py:TestTrialUnittest",
      "target": "testing/test_unittest.py:TestTrialUnittest.test_trial_testcase_skip_property",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py:TestTrialUnittest",
      "target": "testing/test_unittest.py:TestTrialUnittest.test_trial_testfunction_skip_property",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py:TestTrialUnittest",
      "target": "testing/test_unittest.py:TestTrialUnittest.test_trial_testcase_todo_property",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py:TestTrialUnittest",
      "target": "testing/test_unittest.py:TestTrialUnittest.test_trial_testfunction_todo_property",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py:test_trace",
      "target": "testing/test_unittest.py:test_trace.check_call",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py:test_trace.check_call",
      "target": "testing/test_unittest.py:test_trace.check_call._pdb",
      "type": "contains"
    },
    {
      "source": "testing/test_unittest.py:test_trace.check_call._pdb",
      "target": "testing/test_unittest.py:test_trace.check_call._pdb.runcall",
      "type": "contains"
    },
    {
      "source": "testing/test_scope.py",
      "target": "testing/test_scope.py:test_ordering",
      "type": "contains"
    },
    {
      "source": "testing/test_scope.py",
      "target": "testing/test_scope.py:test_next_lower",
      "type": "contains"
    },
    {
      "source": "testing/test_scope.py",
      "target": "testing/test_scope.py:test_next_higher",
      "type": "contains"
    },
    {
      "source": "testing/test_scope.py",
      "target": "testing/test_scope.py:test_from_user",
      "type": "contains"
    },
    {
      "source": "testing/test_setupplan.py",
      "target": "testing/test_setupplan.py:test_show_fixtures_and_test",
      "type": "contains"
    },
    {
      "source": "testing/test_setupplan.py",
      "target": "testing/test_setupplan.py:test_show_multi_test_fixture_setup_and_teardown_correctly_simple",
      "type": "contains"
    },
    {
      "source": "testing/test_setupplan.py",
      "target": "testing/test_setupplan.py:test_show_multi_test_fixture_setup_and_teardown_same_as_setup_show",
      "type": "contains"
    },
    {
      "source": "testing/typing_checks.py",
      "target": "testing/typing_checks.py:check_mark_xfail_raises",
      "type": "contains"
    },
    {
      "source": "testing/typing_checks.py",
      "target": "testing/typing_checks.py:check_fixture_ids_callable",
      "type": "contains"
    },
    {
      "source": "testing/typing_checks.py",
      "target": "testing/typing_checks.py:check_parametrize_ids_callable",
      "type": "contains"
    },
    {
      "source": "testing/typing_checks.py",
      "target": "testing/typing_checks.py:check_monkeypatch_typeddict",
      "type": "contains"
    },
    {
      "source": "testing/typing_checks.py",
      "target": "testing/typing_checks.py:check_raises_is_a_context_manager",
      "type": "contains"
    },
    {
      "source": "testing/typing_checks.py:check_monkeypatch_typeddict",
      "target": "testing/typing_checks.py:check_monkeypatch_typeddict.Foo",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:ensure_file",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:TestCollector",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:TestCollectFS",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:TestCollectPluginHookRelay",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:TestPrunetraceback",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:TestCustomConftests",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:TestSession",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:Test_getinitialnodes",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:Test_genitems",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:test_matchnodes_two_collections_same_file",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:TestNodeKeywords",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:test_exit_on_collection_error",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:test_exit_on_collection_with_maxfail_smaller_than_n_errors",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:test_exit_on_collection_with_maxfail_bigger_than_n_errors",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:test_continue_on_collection_errors",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:test_continue_on_collection_errors_maxfail",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:test_fixture_scope_sibling_conftests",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:test_collect_init_tests",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:test_collect_invalid_signature_message",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:test_collect_handles_raising_on_dunder_class",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:test_collect_with_chdir_during_import",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:test_collect_pyargs_with_testpaths",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:test_initial_conftests_with_testpaths",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:test_large_option_breaks_initial_conftests",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:test_collect_symlink_file_arg",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:test_collect_symlink_out_of_tree",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:test_collect_symlink_dir",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:test_collectignore_via_conftest",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:test_collect_pkg_init_and_file_in_args",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:test_collect_pkg_init_only",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:test_collect_sub_with_symlinks",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:test_collector_respects_tbstyle",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:test_does_not_eagerly_collect_packages",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:test_does_not_put_src_on_path",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:test_fscollector_from_parent",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:test_class_from_parent",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:TestImportModeImportlib",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:test_does_not_crash_on_error_from_decorated_function",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py",
      "target": "testing/test_collection.py:test_does_not_crash_on_recursive_symlink",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestCollector",
      "target": "testing/test_collection.py:TestCollector.test_collect_versus_item",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestCollector",
      "target": "testing/test_collection.py:TestCollector.test_check_equality",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestCollector",
      "target": "testing/test_collection.py:TestCollector.test_getparent_and_accessors",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestCollector",
      "target": "testing/test_collection.py:TestCollector.test_getcustomfile_roundtrip",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestCollector",
      "target": "testing/test_collection.py:TestCollector.test_can_skip_class_with_test_attr",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestCollectFS",
      "target": "testing/test_collection.py:TestCollectFS.test_ignored_certain_directories",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestCollectFS",
      "target": "testing/test_collection.py:TestCollectFS.test_ignored_virtualenvs",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestCollectFS",
      "target": "testing/test_collection.py:TestCollectFS.test_ignored_virtualenvs_norecursedirs_precedence",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestCollectFS",
      "target": "testing/test_collection.py:TestCollectFS.test__in_venv",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestCollectFS",
      "target": "testing/test_collection.py:TestCollectFS.test_custom_norecursedirs",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestCollectFS",
      "target": "testing/test_collection.py:TestCollectFS.test_testpaths_ini",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestCollectFS.test_ignored_certain_directories",
      "target": "testing/test_collection.py:ensure_file",
      "type": "invokes"
    },
    {
      "source": "testing/test_collection.py:TestCollectFS.test_ignored_virtualenvs",
      "target": "testing/test_collection.py:ensure_file",
      "type": "invokes"
    },
    {
      "source": "testing/test_collection.py:TestCollectFS.test_ignored_virtualenvs_norecursedirs_precedence",
      "target": "testing/test_collection.py:ensure_file",
      "type": "invokes"
    },
    {
      "source": "testing/test_collection.py:TestCollectFS.test_custom_norecursedirs",
      "target": "testing/test_collection.py:ensure_file",
      "type": "invokes"
    },
    {
      "source": "testing/test_collection.py:TestCollectFS.test_testpaths_ini",
      "target": "testing/test_collection.py:ensure_file",
      "type": "invokes"
    },
    {
      "source": "testing/test_collection.py:TestCollectPluginHookRelay",
      "target": "testing/test_collection.py:TestCollectPluginHookRelay.test_pytest_collect_file",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestCollectPluginHookRelay.test_pytest_collect_file",
      "target": "testing/test_collection.py:TestCollectPluginHookRelay.test_pytest_collect_file.Plugin",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestCollectPluginHookRelay.test_pytest_collect_file",
      "target": "testing/test_collection.py:TestCollectPluginHookRelay.test_pytest_collect_file.Plugin",
      "type": "invokes"
    },
    {
      "source": "testing/test_collection.py:TestCollectPluginHookRelay.test_pytest_collect_file.Plugin",
      "target": "testing/test_collection.py:TestCollectPluginHookRelay.test_pytest_collect_file.Plugin.pytest_collect_file",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestPrunetraceback",
      "target": "testing/test_collection.py:TestPrunetraceback.test_custom_repr_failure",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestPrunetraceback",
      "target": "testing/test_collection.py:TestPrunetraceback.test_collect_report_postprocessing",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestCustomConftests",
      "target": "testing/test_collection.py:TestCustomConftests.test_ignore_collect_path",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestCustomConftests",
      "target": "testing/test_collection.py:TestCustomConftests.test_ignore_collect_not_called_on_argument",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestCustomConftests",
      "target": "testing/test_collection.py:TestCustomConftests.test_collectignore_exclude_on_option",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestCustomConftests",
      "target": "testing/test_collection.py:TestCustomConftests.test_collectignoreglob_exclude_on_option",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestCustomConftests",
      "target": "testing/test_collection.py:TestCustomConftests.test_pytest_fs_collect_hooks_are_seen",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestCustomConftests",
      "target": "testing/test_collection.py:TestCustomConftests.test_pytest_collect_file_from_sister_dir",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestCustomConftests.test_ignore_collect_path",
      "target": "testing/test_collection.py:ensure_file",
      "type": "invokes"
    },
    {
      "source": "testing/test_collection.py:TestSession",
      "target": "testing/test_collection.py:TestSession.test_collect_topdir",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestSession",
      "target": "testing/test_collection.py:TestSession.get_reported_items",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestSession",
      "target": "testing/test_collection.py:TestSession.test_collect_protocol_single_function",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestSession",
      "target": "testing/test_collection.py:TestSession.test_collect_protocol_method",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestSession",
      "target": "testing/test_collection.py:TestSession.test_collect_custom_nodes_multi_id",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestSession",
      "target": "testing/test_collection.py:TestSession.test_collect_subdir_event_ordering",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestSession",
      "target": "testing/test_collection.py:TestSession.test_collect_two_commandline_args",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestSession",
      "target": "testing/test_collection.py:TestSession.test_serialization_byid",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestSession",
      "target": "testing/test_collection.py:TestSession.test_find_byid_without_instance_parents",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestSession.test_collect_protocol_single_function",
      "target": "testing/test_collection.py:TestSession.get_reported_items",
      "type": "invokes"
    },
    {
      "source": "testing/test_collection.py:TestSession.test_collect_protocol_method",
      "target": "testing/test_collection.py:TestSession.get_reported_items",
      "type": "invokes"
    },
    {
      "source": "testing/test_collection.py:TestSession.test_collect_custom_nodes_multi_id",
      "target": "testing/test_collection.py:TestSession.get_reported_items",
      "type": "invokes"
    },
    {
      "source": "testing/test_collection.py:TestSession.test_find_byid_without_instance_parents",
      "target": "testing/test_collection.py:TestSession.get_reported_items",
      "type": "invokes"
    },
    {
      "source": "testing/test_collection.py:Test_getinitialnodes",
      "target": "testing/test_collection.py:Test_getinitialnodes.test_global_file",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:Test_getinitialnodes",
      "target": "testing/test_collection.py:Test_getinitialnodes.test_pkgfile",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:Test_getinitialnodes.test_global_file",
      "target": "testing/test_collection.py:ensure_file",
      "type": "invokes"
    },
    {
      "source": "testing/test_collection.py:Test_getinitialnodes.test_pkgfile",
      "target": "testing/test_collection.py:ensure_file",
      "type": "invokes"
    },
    {
      "source": "testing/test_collection.py:Test_genitems",
      "target": "testing/test_collection.py:Test_genitems.test_check_collect_hashes",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:Test_genitems",
      "target": "testing/test_collection.py:Test_genitems.test_example_items1",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:Test_genitems",
      "target": "testing/test_collection.py:Test_genitems.test_classmethod_is_discovered",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:Test_genitems",
      "target": "testing/test_collection.py:Test_genitems.test_class_and_functions_discovery_using_glob",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestNodeKeywords",
      "target": "testing/test_collection.py:TestNodeKeywords.test_no_under",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestNodeKeywords",
      "target": "testing/test_collection.py:TestNodeKeywords.test_issue345",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestNodeKeywords",
      "target": "testing/test_collection.py:TestNodeKeywords.test_keyword_matching_is_case_insensitive_by_default",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestNodeKeywords",
      "target": "testing/test_collection.py:TestNodeKeywords.test_duplicates_handled_correctly",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestNodeKeywords",
      "target": "testing/test_collection.py:TestNodeKeywords.test_unpacked_marks_added_to_keywords",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:test_does_not_put_src_on_path",
      "target": "testing/test_collection.py:ensure_file",
      "type": "invokes"
    },
    {
      "source": "testing/test_collection.py:test_fscollector_from_parent",
      "target": "testing/test_collection.py:test_fscollector_from_parent.MyCollector",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:test_class_from_parent",
      "target": "testing/test_collection.py:test_class_from_parent.MyCollector",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:test_class_from_parent",
      "target": "testing/test_collection.py:test_class_from_parent.MyCollector.from_parent",
      "type": "invokes"
    },
    {
      "source": "testing/test_collection.py:test_class_from_parent.MyCollector",
      "target": "testing/test_collection.py:test_class_from_parent.MyCollector.from_parent",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestImportModeImportlib",
      "target": "testing/test_collection.py:TestImportModeImportlib.test_collect_duplicate_names",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestImportModeImportlib",
      "target": "testing/test_collection.py:TestImportModeImportlib.test_conftest",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestImportModeImportlib",
      "target": "testing/test_collection.py:TestImportModeImportlib.setup_conftest_and_foo",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestImportModeImportlib",
      "target": "testing/test_collection.py:TestImportModeImportlib.test_modules_importable_as_side_effect",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestImportModeImportlib",
      "target": "testing/test_collection.py:TestImportModeImportlib.test_modules_not_importable_as_side_effect",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestImportModeImportlib",
      "target": "testing/test_collection.py:TestImportModeImportlib.test_using_python_path",
      "type": "contains"
    },
    {
      "source": "testing/test_collection.py:TestImportModeImportlib.test_modules_importable_as_side_effect",
      "target": "testing/test_collection.py:TestImportModeImportlib.setup_conftest_and_foo",
      "type": "invokes"
    },
    {
      "source": "testing/test_collection.py:TestImportModeImportlib.test_modules_not_importable_as_side_effect",
      "target": "testing/test_collection.py:TestImportModeImportlib.setup_conftest_and_foo",
      "type": "invokes"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:Option",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:option",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_plugin_nameversion",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:TestTerminal",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:TestCollectonly",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:TestFixtureReporting",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:TestTerminalFunctional",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_fail_extra_reporting",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_fail_reporting_on_pass",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_pass_extra_reporting",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_pass_reporting_on_fail",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_pass_output_reporting",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_color_yes",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_color_no",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_color_yes_collection_on_non_atty",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_getreportopt",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_terminalreporter_reportopt_addopts",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_tbstyle_short",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_traceconfig",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:TestGenericReporting",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_fdopen_kept_alive_issue124",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_tbstyle_native_setup_error",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_terminal_summary",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_terminal_summary_warnings_are_displayed",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_terminal_summary_warnings_header_once",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_terminal_no_summary_warnings_header_once",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:tr",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_summary_stats",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_skip_counting_towards_summary",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:TestClassicOutputStyle",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:TestProgressOutputStyle",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:TestProgressWithTeardown",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_skip_reasons_folding",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_line_with_reprcrash",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_format_session_duration",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_collecterror",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_no_summary_collecterror",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_via_exec",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:TestCodeHighlight",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_raw_skip_reason_skipped",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_raw_skip_reason_xfail",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py",
      "target": "testing/test_terminal.py:test_format_trimmed",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:Option",
      "target": "testing/test_terminal.py:Option.args",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminal",
      "target": "testing/test_terminal.py:TestTerminal.test_pass_skip_fail",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminal",
      "target": "testing/test_terminal.py:TestTerminal.test_internalerror",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminal",
      "target": "testing/test_terminal.py:TestTerminal.test_writeline",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminal",
      "target": "testing/test_terminal.py:TestTerminal.test_show_runtest_logstart",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminal",
      "target": "testing/test_terminal.py:TestTerminal.test_runtest_location_shown_before_test_starts",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminal",
      "target": "testing/test_terminal.py:TestTerminal.test_report_collect_after_half_a_second",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminal",
      "target": "testing/test_terminal.py:TestTerminal.test_itemreport_subclasses_show_subclassed_file",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminal",
      "target": "testing/test_terminal.py:TestTerminal.test_itemreport_directclasses_not_shown_as_subclasses",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminal",
      "target": "testing/test_terminal.py:TestTerminal.test_keyboard_interrupt",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminal",
      "target": "testing/test_terminal.py:TestTerminal.test_keyboard_in_sessionstart",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminal",
      "target": "testing/test_terminal.py:TestTerminal.test_collect_single_item",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminal",
      "target": "testing/test_terminal.py:TestTerminal.test_rewrite",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminal",
      "target": "testing/test_terminal.py:TestTerminal.test_report_teststatus_explicit_markup",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminal",
      "target": "testing/test_terminal.py:TestTerminal.test_verbose_skip_reason",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestCollectonly",
      "target": "testing/test_terminal.py:TestCollectonly.test_collectonly_basic",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestCollectonly",
      "target": "testing/test_terminal.py:TestCollectonly.test_collectonly_skipped_module",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestCollectonly",
      "target": "testing/test_terminal.py:TestCollectonly.test_collectonly_displays_test_description",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestCollectonly",
      "target": "testing/test_terminal.py:TestCollectonly.test_collectonly_failed_module",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestCollectonly",
      "target": "testing/test_terminal.py:TestCollectonly.test_collectonly_fatal",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestCollectonly",
      "target": "testing/test_terminal.py:TestCollectonly.test_collectonly_simple",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestCollectonly",
      "target": "testing/test_terminal.py:TestCollectonly.test_collectonly_error",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestCollectonly",
      "target": "testing/test_terminal.py:TestCollectonly.test_collectonly_missing_path",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestCollectonly",
      "target": "testing/test_terminal.py:TestCollectonly.test_collectonly_quiet",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestCollectonly",
      "target": "testing/test_terminal.py:TestCollectonly.test_collectonly_more_quiet",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestCollectonly",
      "target": "testing/test_terminal.py:TestCollectonly.test_collect_only_summary_status",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestFixtureReporting",
      "target": "testing/test_terminal.py:TestFixtureReporting.test_setup_fixture_error",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestFixtureReporting",
      "target": "testing/test_terminal.py:TestFixtureReporting.test_teardown_fixture_error",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestFixtureReporting",
      "target": "testing/test_terminal.py:TestFixtureReporting.test_teardown_fixture_error_and_test_failure",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestFixtureReporting",
      "target": "testing/test_terminal.py:TestFixtureReporting.test_setup_teardown_output_and_test_failure",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminalFunctional",
      "target": "testing/test_terminal.py:TestTerminalFunctional.test_deselected",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminalFunctional",
      "target": "testing/test_terminal.py:TestTerminalFunctional.test_deselected_with_hookwrapper",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminalFunctional",
      "target": "testing/test_terminal.py:TestTerminalFunctional.test_show_deselected_items_using_markexpr_before_test_execution",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminalFunctional",
      "target": "testing/test_terminal.py:TestTerminalFunctional.test_selected_count_with_error",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminalFunctional",
      "target": "testing/test_terminal.py:TestTerminalFunctional.test_no_skip_summary_if_failure",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminalFunctional",
      "target": "testing/test_terminal.py:TestTerminalFunctional.test_passes",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminalFunctional",
      "target": "testing/test_terminal.py:TestTerminalFunctional.test_header_trailer_info",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminalFunctional",
      "target": "testing/test_terminal.py:TestTerminalFunctional.test_no_header_trailer_info",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminalFunctional",
      "target": "testing/test_terminal.py:TestTerminalFunctional.test_header",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminalFunctional",
      "target": "testing/test_terminal.py:TestTerminalFunctional.test_header_absolute_testpath",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminalFunctional",
      "target": "testing/test_terminal.py:TestTerminalFunctional.test_no_header",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminalFunctional",
      "target": "testing/test_terminal.py:TestTerminalFunctional.test_no_summary",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminalFunctional",
      "target": "testing/test_terminal.py:TestTerminalFunctional.test_showlocals",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminalFunctional",
      "target": "testing/test_terminal.py:TestTerminalFunctional.test_noshowlocals_addopts_override",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminalFunctional",
      "target": "testing/test_terminal.py:TestTerminalFunctional.test_showlocals_short",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminalFunctional",
      "target": "testing/test_terminal.py:TestTerminalFunctional.verbose_testfile",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminalFunctional",
      "target": "testing/test_terminal.py:TestTerminalFunctional.test_verbose_reporting",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminalFunctional",
      "target": "testing/test_terminal.py:TestTerminalFunctional.test_verbose_reporting_xdist",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminalFunctional",
      "target": "testing/test_terminal.py:TestTerminalFunctional.test_quiet_reporting",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminalFunctional",
      "target": "testing/test_terminal.py:TestTerminalFunctional.test_more_quiet_reporting",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminalFunctional",
      "target": "testing/test_terminal.py:TestTerminalFunctional.test_report_collectionfinish_hook",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminalFunctional",
      "target": "testing/test_terminal.py:TestTerminalFunctional.test_summary_f_alias",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestTerminalFunctional",
      "target": "testing/test_terminal.py:TestTerminalFunctional.test_summary_s_alias",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:test_getreportopt",
      "target": "testing/test_terminal.py:test_getreportopt.FakeConfig",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:test_getreportopt",
      "target": "testing/test_terminal.py:test_getreportopt.FakeConfig",
      "type": "invokes"
    },
    {
      "source": "testing/test_terminal.py:test_getreportopt.FakeConfig",
      "target": "testing/test_terminal.py:test_getreportopt.FakeConfig.Option",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestGenericReporting",
      "target": "testing/test_terminal.py:TestGenericReporting.test_collect_fail",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestGenericReporting",
      "target": "testing/test_terminal.py:TestGenericReporting.test_maxfailures",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestGenericReporting",
      "target": "testing/test_terminal.py:TestGenericReporting.test_maxfailures_with_interrupted",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestGenericReporting",
      "target": "testing/test_terminal.py:TestGenericReporting.test_tb_option",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestGenericReporting",
      "target": "testing/test_terminal.py:TestGenericReporting.test_tb_crashline",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestGenericReporting",
      "target": "testing/test_terminal.py:TestGenericReporting.test_tb_crashline_pytrace_false",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestGenericReporting",
      "target": "testing/test_terminal.py:TestGenericReporting.test_pytest_report_header",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestGenericReporting",
      "target": "testing/test_terminal.py:TestGenericReporting.test_show_capture",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestGenericReporting",
      "target": "testing/test_terminal.py:TestGenericReporting.test_show_capture_with_teardown_logs",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:test_summary_stats",
      "target": "testing/test_terminal.py:test_summary_stats.fake_session",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:test_skip_counting_towards_summary",
      "target": "testing/test_terminal.py:test_skip_counting_towards_summary.DummyReport",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:test_skip_counting_towards_summary",
      "target": "testing/test_terminal.py:test_skip_counting_towards_summary.DummyReport",
      "type": "invokes"
    },
    {
      "source": "testing/test_terminal.py:TestClassicOutputStyle",
      "target": "testing/test_terminal.py:TestClassicOutputStyle.test_files",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestClassicOutputStyle",
      "target": "testing/test_terminal.py:TestClassicOutputStyle.test_normal_verbosity",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestClassicOutputStyle",
      "target": "testing/test_terminal.py:TestClassicOutputStyle.test_verbose",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestClassicOutputStyle",
      "target": "testing/test_terminal.py:TestClassicOutputStyle.test_quiet",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestProgressOutputStyle",
      "target": "testing/test_terminal.py:TestProgressOutputStyle.many_tests_files",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestProgressOutputStyle",
      "target": "testing/test_terminal.py:TestProgressOutputStyle.test_zero_tests_collected",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestProgressOutputStyle",
      "target": "testing/test_terminal.py:TestProgressOutputStyle.test_normal",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestProgressOutputStyle",
      "target": "testing/test_terminal.py:TestProgressOutputStyle.test_colored_progress",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestProgressOutputStyle",
      "target": "testing/test_terminal.py:TestProgressOutputStyle.test_count",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestProgressOutputStyle",
      "target": "testing/test_terminal.py:TestProgressOutputStyle.test_verbose",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestProgressOutputStyle",
      "target": "testing/test_terminal.py:TestProgressOutputStyle.test_verbose_count",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestProgressOutputStyle",
      "target": "testing/test_terminal.py:TestProgressOutputStyle.test_xdist_normal",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestProgressOutputStyle",
      "target": "testing/test_terminal.py:TestProgressOutputStyle.test_xdist_normal_count",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestProgressOutputStyle",
      "target": "testing/test_terminal.py:TestProgressOutputStyle.test_xdist_verbose",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestProgressOutputStyle",
      "target": "testing/test_terminal.py:TestProgressOutputStyle.test_capture_no",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestProgressOutputStyle",
      "target": "testing/test_terminal.py:TestProgressOutputStyle.test_capture_no_progress_enabled",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestProgressWithTeardown",
      "target": "testing/test_terminal.py:TestProgressWithTeardown.contest_with_teardown_fixture",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestProgressWithTeardown",
      "target": "testing/test_terminal.py:TestProgressWithTeardown.many_files",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestProgressWithTeardown",
      "target": "testing/test_terminal.py:TestProgressWithTeardown.test_teardown_simple",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestProgressWithTeardown",
      "target": "testing/test_terminal.py:TestProgressWithTeardown.test_teardown_with_test_also_failing",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestProgressWithTeardown",
      "target": "testing/test_terminal.py:TestProgressWithTeardown.test_teardown_many",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestProgressWithTeardown",
      "target": "testing/test_terminal.py:TestProgressWithTeardown.test_teardown_many_verbose",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestProgressWithTeardown",
      "target": "testing/test_terminal.py:TestProgressWithTeardown.test_xdist_normal",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:test_skip_reasons_folding",
      "target": "testing/test_terminal.py:test_skip_reasons_folding.X",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:test_skip_reasons_folding",
      "target": "testing/test_terminal.py:test_skip_reasons_folding.X",
      "type": "invokes"
    },
    {
      "source": "testing/test_terminal.py:test_line_with_reprcrash",
      "target": "testing/test_terminal.py:test_line_with_reprcrash.mock_get_pos",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:test_line_with_reprcrash",
      "target": "testing/test_terminal.py:test_line_with_reprcrash.config",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:test_line_with_reprcrash",
      "target": "testing/test_terminal.py:test_line_with_reprcrash.rep",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:test_line_with_reprcrash",
      "target": "testing/test_terminal.py:test_line_with_reprcrash.check",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:test_line_with_reprcrash",
      "target": "testing/test_terminal.py:test_line_with_reprcrash.check",
      "type": "invokes"
    },
    {
      "source": "testing/test_terminal.py:test_line_with_reprcrash.rep",
      "target": "testing/test_terminal.py:test_line_with_reprcrash.rep._get_verbose_word",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:test_line_with_reprcrash.rep",
      "target": "testing/test_terminal.py:test_line_with_reprcrash.rep.longrepr",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:test_line_with_reprcrash.rep.longrepr",
      "target": "testing/test_terminal.py:test_line_with_reprcrash.rep.longrepr.reprcrash",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:test_line_with_reprcrash.check",
      "target": "testing/test_terminal.py:test_line_with_reprcrash.check.DummyTerminalWriter",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:test_line_with_reprcrash.check",
      "target": "testing/test_terminal.py:test_line_with_reprcrash.check.DummyTerminalWriter",
      "type": "invokes"
    },
    {
      "source": "testing/test_terminal.py:test_line_with_reprcrash.check",
      "target": "testing/test_terminal.py:test_line_with_reprcrash.rep",
      "type": "invokes"
    },
    {
      "source": "testing/test_terminal.py:test_line_with_reprcrash.check.DummyTerminalWriter",
      "target": "testing/test_terminal.py:test_line_with_reprcrash.check.DummyTerminalWriter.markup",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestCodeHighlight",
      "target": "testing/test_terminal.py:TestCodeHighlight.test_code_highlight_simple",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestCodeHighlight",
      "target": "testing/test_terminal.py:TestCodeHighlight.test_code_highlight_continuation",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestCodeHighlight",
      "target": "testing/test_terminal.py:TestCodeHighlight.test_code_highlight_custom_theme",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestCodeHighlight",
      "target": "testing/test_terminal.py:TestCodeHighlight.test_code_highlight_invalid_theme",
      "type": "contains"
    },
    {
      "source": "testing/test_terminal.py:TestCodeHighlight",
      "target": "testing/test_terminal.py:TestCodeHighlight.test_code_highlight_invalid_theme_mode",
      "type": "contains"
    },
    {
      "source": "testing/test_threadexception.py",
      "target": "testing/test_threadexception.py:test_unhandled_thread_exception",
      "type": "contains"
    },
    {
      "source": "testing/test_threadexception.py",
      "target": "testing/test_threadexception.py:test_unhandled_thread_exception_in_setup",
      "type": "contains"
    },
    {
      "source": "testing/test_threadexception.py",
      "target": "testing/test_threadexception.py:test_unhandled_thread_exception_in_teardown",
      "type": "contains"
    },
    {
      "source": "testing/test_threadexception.py",
      "target": "testing/test_threadexception.py:test_unhandled_thread_exception_warning_error",
      "type": "contains"
    },
    {
      "source": "testing/test_error_diffs.py",
      "target": "testing/test_error_diffs.py:test_error_diff",
      "type": "contains"
    },
    {
      "source": "testing/test_reports.py",
      "target": "testing/test_reports.py:TestReportSerialization",
      "type": "contains"
    },
    {
      "source": "testing/test_reports.py",
      "target": "testing/test_reports.py:TestHooks",
      "type": "contains"
    },
    {
      "source": "testing/test_reports.py:TestReportSerialization",
      "target": "testing/test_reports.py:TestReportSerialization.test_xdist_longrepr_to_str_issue_241",
      "type": "contains"
    },
    {
      "source": "testing/test_reports.py:TestReportSerialization",
      "target": "testing/test_reports.py:TestReportSerialization.test_xdist_report_longrepr_reprcrash_130",
      "type": "contains"
    },
    {
      "source": "testing/test_reports.py:TestReportSerialization",
      "target": "testing/test_reports.py:TestReportSerialization.test_reprentries_serialization_170",
      "type": "contains"
    },
    {
      "source": "testing/test_reports.py:TestReportSerialization",
      "target": "testing/test_reports.py:TestReportSerialization.test_reprentries_serialization_196",
      "type": "contains"
    },
    {
      "source": "testing/test_reports.py:TestReportSerialization",
      "target": "testing/test_reports.py:TestReportSerialization.test_itemreport_outcomes",
      "type": "contains"
    },
    {
      "source": "testing/test_reports.py:TestReportSerialization",
      "target": "testing/test_reports.py:TestReportSerialization.test_collectreport_passed",
      "type": "contains"
    },
    {
      "source": "testing/test_reports.py:TestReportSerialization",
      "target": "testing/test_reports.py:TestReportSerialization.test_collectreport_fail",
      "type": "contains"
    },
    {
      "source": "testing/test_reports.py:TestReportSerialization",
      "target": "testing/test_reports.py:TestReportSerialization.test_extended_report_deserialization",
      "type": "contains"
    },
    {
      "source": "testing/test_reports.py:TestReportSerialization",
      "target": "testing/test_reports.py:TestReportSerialization.test_paths_support",
      "type": "contains"
    },
    {
      "source": "testing/test_reports.py:TestReportSerialization",
      "target": "testing/test_reports.py:TestReportSerialization.test_deserialization_failure",
      "type": "contains"
    },
    {
      "source": "testing/test_reports.py:TestReportSerialization",
      "target": "testing/test_reports.py:TestReportSerialization.test_chained_exceptions",
      "type": "contains"
    },
    {
      "source": "testing/test_reports.py:TestReportSerialization",
      "target": "testing/test_reports.py:TestReportSerialization.test_chained_exceptions_no_reprcrash",
      "type": "contains"
    },
    {
      "source": "testing/test_reports.py:TestReportSerialization",
      "target": "testing/test_reports.py:TestReportSerialization.test_report_prevent_ConftestImportFailure_hiding_exception",
      "type": "contains"
    },
    {
      "source": "testing/test_reports.py:TestReportSerialization",
      "target": "testing/test_reports.py:TestReportSerialization.test_report_timestamps_match_duration",
      "type": "contains"
    },
    {
      "source": "testing/test_reports.py:TestReportSerialization.test_paths_support",
      "target": "testing/test_reports.py:TestReportSerialization.test_paths_support.MyPathLike",
      "type": "contains"
    },
    {
      "source": "testing/test_reports.py:TestReportSerialization.test_paths_support",
      "target": "testing/test_reports.py:TestReportSerialization.test_paths_support.MyPathLike",
      "type": "invokes"
    },
    {
      "source": "testing/test_reports.py:TestReportSerialization.test_paths_support.MyPathLike",
      "target": "testing/test_reports.py:TestReportSerialization.test_paths_support.MyPathLike.__fspath__",
      "type": "contains"
    },
    {
      "source": "testing/test_reports.py:TestReportSerialization.test_chained_exceptions",
      "target": "testing/test_reports.py:TestReportSerialization.test_chained_exceptions.check_longrepr",
      "type": "contains"
    },
    {
      "source": "testing/test_reports.py:TestReportSerialization.test_chained_exceptions",
      "target": "testing/test_reports.py:TestReportSerialization.test_chained_exceptions.check_longrepr",
      "type": "invokes"
    },
    {
      "source": "testing/test_reports.py:TestReportSerialization.test_chained_exceptions_no_reprcrash",
      "target": "testing/test_reports.py:TestReportSerialization.test_chained_exceptions_no_reprcrash.check_longrepr",
      "type": "contains"
    },
    {
      "source": "testing/test_reports.py:TestReportSerialization.test_chained_exceptions_no_reprcrash",
      "target": "testing/test_reports.py:TestReportSerialization.test_chained_exceptions_no_reprcrash.check_longrepr",
      "type": "invokes"
    },
    {
      "source": "testing/test_reports.py:TestHooks",
      "target": "testing/test_reports.py:TestHooks.test_test_report",
      "type": "contains"
    },
    {
      "source": "testing/test_reports.py:TestHooks",
      "target": "testing/test_reports.py:TestHooks.test_collect_report",
      "type": "contains"
    },
    {
      "source": "testing/test_reports.py:TestHooks",
      "target": "testing/test_reports.py:TestHooks.test_invalid_report_types",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py",
      "target": "testing/test_pluginmanager.py:pytestpm",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py",
      "target": "testing/test_pluginmanager.py:TestPytestPluginInteractions",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py",
      "target": "testing/test_pluginmanager.py:test_default_markers",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py",
      "target": "testing/test_pluginmanager.py:test_importplugin_error_message",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py",
      "target": "testing/test_pluginmanager.py:TestPytestPluginManager",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py",
      "target": "testing/test_pluginmanager.py:TestPytestPluginManagerBootstrapming",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginInteractions",
      "target": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_addhooks_conftestplugin",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginInteractions",
      "target": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_addhooks_nohooks",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginInteractions",
      "target": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_do_option_postinitialize",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginInteractions",
      "target": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_configure",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginInteractions",
      "target": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_hook_tracing",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginInteractions",
      "target": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_hook_proxy",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginInteractions",
      "target": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_hook_with_addoption",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_configure",
      "target": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_configure.A",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_configure",
      "target": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_configure.A",
      "type": "invokes"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_configure.A",
      "target": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_configure.A.pytest_configure",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_hook_tracing",
      "target": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_hook_tracing.api1",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_hook_tracing",
      "target": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_hook_tracing.api1",
      "type": "invokes"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_hook_tracing",
      "target": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_hook_tracing.api2",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_hook_tracing",
      "target": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_hook_tracing.api2",
      "type": "invokes"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_hook_tracing.api1",
      "target": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_hook_tracing.api1.pytest_plugin_registered",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_hook_tracing.api2",
      "target": "testing/test_pluginmanager.py:TestPytestPluginInteractions.test_hook_tracing.api2.pytest_plugin_registered",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginManager",
      "target": "testing/test_pluginmanager.py:TestPytestPluginManager.test_register_imported_modules",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginManager",
      "target": "testing/test_pluginmanager.py:TestPytestPluginManager.test_canonical_import",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginManager",
      "target": "testing/test_pluginmanager.py:TestPytestPluginManager.test_consider_module",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginManager",
      "target": "testing/test_pluginmanager.py:TestPytestPluginManager.test_consider_module_import_module",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginManager",
      "target": "testing/test_pluginmanager.py:TestPytestPluginManager.test_consider_env_fails_to_import",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginManager",
      "target": "testing/test_pluginmanager.py:TestPytestPluginManager.test_plugin_skip",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginManager",
      "target": "testing/test_pluginmanager.py:TestPytestPluginManager.test_consider_env_plugin_instantiation",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginManager",
      "target": "testing/test_pluginmanager.py:TestPytestPluginManager.test_pluginmanager_ENV_startup",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginManager",
      "target": "testing/test_pluginmanager.py:TestPytestPluginManager.test_import_plugin_importname",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginManager",
      "target": "testing/test_pluginmanager.py:TestPytestPluginManager.test_import_plugin_dotted_name",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginManager",
      "target": "testing/test_pluginmanager.py:TestPytestPluginManager.test_consider_conftest_deps",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginManagerBootstrapming",
      "target": "testing/test_pluginmanager.py:TestPytestPluginManagerBootstrapming.test_preparse_args",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginManagerBootstrapming",
      "target": "testing/test_pluginmanager.py:TestPytestPluginManagerBootstrapming.test_plugin_prevent_register",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginManagerBootstrapming",
      "target": "testing/test_pluginmanager.py:TestPytestPluginManagerBootstrapming.test_plugin_prevent_register_unregistered_alredy_registered",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginManagerBootstrapming",
      "target": "testing/test_pluginmanager.py:TestPytestPluginManagerBootstrapming.test_plugin_prevent_register_stepwise_on_cacheprovider_unregister",
      "type": "contains"
    },
    {
      "source": "testing/test_pluginmanager.py:TestPytestPluginManagerBootstrapming",
      "target": "testing/test_pluginmanager.py:TestPytestPluginManagerBootstrapming.test_blocked_plugin_can_be_used",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:TestSetupState",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:BaseFunctionalTests",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:TestExecutionNonForked",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:TestSessionReports",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:test_report_extra_parameters",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:test_callinfo",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:test_runtest_in_module_ordering",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:test_outcomeexception_exceptionattributes",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:test_outcomeexception_passes_except_Exception",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:test_pytest_exit",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:test_pytest_fail",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:test_pytest_exit_msg",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:_strip_resource_warnings",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:test_pytest_exit_returncode",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:test_pytest_fail_notrace_runtest",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:test_pytest_fail_notrace_collection",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:test_pytest_fail_notrace_non_ascii",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:test_pytest_no_tests_collected_exit_status",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:test_exception_printing_skip",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:test_importorskip",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:test_importorskip_imports_last_module_part",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:test_importorskip_dev_module",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:test_importorskip_module_level",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:test_importorskip_custom_reason",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:test_pytest_cmdline_main",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:test_unicode_in_longrepr",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:test_failure_in_setup",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:test_makereport_getsource",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:test_makereport_getsource_dynamic_code",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:test_store_except_info_on_error",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:test_current_test_env_var",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:TestReportContents",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py",
      "target": "testing/test_runner.py:test_outcome_exception_bad_msg",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:TestSetupState",
      "target": "testing/test_runner.py:TestSetupState.test_setup",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:TestSetupState",
      "target": "testing/test_runner.py:TestSetupState.test_teardown_exact_stack_empty",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:TestSetupState",
      "target": "testing/test_runner.py:TestSetupState.test_setup_fails_and_failure_is_cached",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:TestSetupState",
      "target": "testing/test_runner.py:TestSetupState.test_teardown_multiple_one_fails",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:TestSetupState",
      "target": "testing/test_runner.py:TestSetupState.test_teardown_multiple_fail",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:TestSetupState",
      "target": "testing/test_runner.py:TestSetupState.test_teardown_multiple_scopes_one_fails",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:TestSetupState",
      "target": "testing/test_runner.py:TestSetupState.test_teardown_multiple_scopes_several_fail",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:TestSetupState.test_teardown_multiple_one_fails",
      "target": "testing/test_runner.py:TestSetupState.test_teardown_multiple_one_fails.fin1",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:TestSetupState.test_teardown_multiple_one_fails",
      "target": "testing/test_runner.py:TestSetupState.test_teardown_multiple_one_fails.fin2",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:TestSetupState.test_teardown_multiple_one_fails",
      "target": "testing/test_runner.py:TestSetupState.test_teardown_multiple_one_fails.fin3",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:TestSetupState.test_teardown_multiple_fail",
      "target": "testing/test_runner.py:TestSetupState.test_teardown_multiple_fail.fin1",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:TestSetupState.test_teardown_multiple_fail",
      "target": "testing/test_runner.py:TestSetupState.test_teardown_multiple_fail.fin2",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:TestSetupState.test_teardown_multiple_scopes_one_fails",
      "target": "testing/test_runner.py:TestSetupState.test_teardown_multiple_scopes_one_fails.fin_func",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:TestSetupState.test_teardown_multiple_scopes_one_fails",
      "target": "testing/test_runner.py:TestSetupState.test_teardown_multiple_scopes_one_fails.fin_module",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:TestSetupState.test_teardown_multiple_scopes_several_fail",
      "target": "testing/test_runner.py:TestSetupState.test_teardown_multiple_scopes_several_fail.raiser",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:BaseFunctionalTests",
      "target": "testing/test_runner.py:BaseFunctionalTests.test_passfunction",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:BaseFunctionalTests",
      "target": "testing/test_runner.py:BaseFunctionalTests.test_failfunction",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:BaseFunctionalTests",
      "target": "testing/test_runner.py:BaseFunctionalTests.test_skipfunction",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:BaseFunctionalTests",
      "target": "testing/test_runner.py:BaseFunctionalTests.test_skip_in_setup_function",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:BaseFunctionalTests",
      "target": "testing/test_runner.py:BaseFunctionalTests.test_failure_in_setup_function",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:BaseFunctionalTests",
      "target": "testing/test_runner.py:BaseFunctionalTests.test_failure_in_teardown_function",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:BaseFunctionalTests",
      "target": "testing/test_runner.py:BaseFunctionalTests.test_custom_failure_repr",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:BaseFunctionalTests",
      "target": "testing/test_runner.py:BaseFunctionalTests.test_teardown_final_returncode",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:BaseFunctionalTests",
      "target": "testing/test_runner.py:BaseFunctionalTests.test_logstart_logfinish_hooks",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:BaseFunctionalTests",
      "target": "testing/test_runner.py:BaseFunctionalTests.test_exact_teardown_issue90",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:BaseFunctionalTests",
      "target": "testing/test_runner.py:BaseFunctionalTests.test_exact_teardown_issue1206",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:BaseFunctionalTests",
      "target": "testing/test_runner.py:BaseFunctionalTests.test_failure_in_setup_function_ignores_custom_repr",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:BaseFunctionalTests",
      "target": "testing/test_runner.py:BaseFunctionalTests.test_systemexit_does_not_bail_out",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:BaseFunctionalTests",
      "target": "testing/test_runner.py:BaseFunctionalTests.test_exit_propagates",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:TestExecutionNonForked",
      "target": "testing/test_runner.py:TestExecutionNonForked.getrunner",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:TestExecutionNonForked",
      "target": "testing/test_runner.py:TestExecutionNonForked.test_keyboardinterrupt_propagates",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:TestExecutionNonForked",
      "target": "testing/test_runner.py:BaseFunctionalTests",
      "type": "inherits"
    },
    {
      "source": "testing/test_runner.py:TestExecutionNonForked.getrunner",
      "target": "testing/test_runner.py:TestExecutionNonForked.getrunner.f",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:TestSessionReports",
      "target": "testing/test_runner.py:TestSessionReports.test_collect_result",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:test_callinfo",
      "target": "testing/test_runner.py:test_callinfo.raise_assertion",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:test_pytest_exit_returncode",
      "target": "testing/test_runner.py:_strip_resource_warnings",
      "type": "invokes"
    },
    {
      "source": "testing/test_runner.py:test_importorskip",
      "target": "testing/test_runner.py:test_importorskip.f",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:test_makereport_getsource_dynamic_code",
      "target": "testing/test_runner.py:test_makereport_getsource_dynamic_code.findsource",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:test_store_except_info_on_error",
      "target": "testing/test_runner.py:test_store_except_info_on_error.ItemMightRaise",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:test_store_except_info_on_error",
      "target": "testing/test_runner.py:test_store_except_info_on_error.ItemMightRaise",
      "type": "invokes"
    },
    {
      "source": "testing/test_runner.py:test_store_except_info_on_error.ItemMightRaise",
      "target": "testing/test_runner.py:test_store_except_info_on_error.ItemMightRaise.runtest",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:TestReportContents",
      "target": "testing/test_runner.py:TestReportContents.getrunner",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:TestReportContents",
      "target": "testing/test_runner.py:TestReportContents.test_longreprtext_pass",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:TestReportContents",
      "target": "testing/test_runner.py:TestReportContents.test_longreprtext_skip",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:TestReportContents",
      "target": "testing/test_runner.py:TestReportContents.test_longreprtext_collect_skip",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:TestReportContents",
      "target": "testing/test_runner.py:TestReportContents.test_longreprtext_failure",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:TestReportContents",
      "target": "testing/test_runner.py:TestReportContents.test_captured_text",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:TestReportContents",
      "target": "testing/test_runner.py:TestReportContents.test_no_captured_text",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:TestReportContents",
      "target": "testing/test_runner.py:TestReportContents.test_longrepr_type",
      "type": "contains"
    },
    {
      "source": "testing/test_runner.py:test_outcome_exception_bad_msg",
      "target": "testing/test_runner.py:test_outcome_exception_bad_msg.func",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:mp",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:test_setattr",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:TestSetattrWithImportPath",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:test_delattr",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:test_setitem",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:test_setitem_deleted_meanwhile",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:test_setenv_deleted_meanwhile",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:test_delitem",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:test_setenv",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:test_delenv",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:TestEnvironWarnings",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:test_setenv_prepend",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:test_monkeypatch_plugin",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:test_syspath_prepend",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:test_syspath_prepend_double_undo",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:test_chdir_with_path_local",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:test_chdir_with_str",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:test_chdir_undo",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:test_chdir_double_undo",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:test_issue185_time_breaks",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:test_importerror",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:Sample",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:SampleInherit",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:test_issue156_undo_staticmethod",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:test_undo_class_descriptors_delattr",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:test_issue1338_name_resolving",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:test_context",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:test_context_classmethod",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py",
      "target": "testing/test_monkeypatch.py:test_syspath_prepend_with_namespace_packages",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py:test_setattr",
      "target": "testing/test_monkeypatch.py:test_setattr.A",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py:TestSetattrWithImportPath",
      "target": "testing/test_monkeypatch.py:TestSetattrWithImportPath.test_string_expression",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py:TestSetattrWithImportPath",
      "target": "testing/test_monkeypatch.py:TestSetattrWithImportPath.test_string_expression_class",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py:TestSetattrWithImportPath",
      "target": "testing/test_monkeypatch.py:TestSetattrWithImportPath.test_unicode_string",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py:TestSetattrWithImportPath",
      "target": "testing/test_monkeypatch.py:TestSetattrWithImportPath.test_wrong_target",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py:TestSetattrWithImportPath",
      "target": "testing/test_monkeypatch.py:TestSetattrWithImportPath.test_unknown_import",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py:TestSetattrWithImportPath",
      "target": "testing/test_monkeypatch.py:TestSetattrWithImportPath.test_unknown_attr",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py:TestSetattrWithImportPath",
      "target": "testing/test_monkeypatch.py:TestSetattrWithImportPath.test_unknown_attr_non_raising",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py:TestSetattrWithImportPath",
      "target": "testing/test_monkeypatch.py:TestSetattrWithImportPath.test_delattr",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py:test_delattr",
      "target": "testing/test_monkeypatch.py:test_delattr.A",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py:TestEnvironWarnings",
      "target": "testing/test_monkeypatch.py:TestEnvironWarnings.test_setenv_non_str_warning",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py:Sample",
      "target": "testing/test_monkeypatch.py:Sample.hello",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py:SampleInherit",
      "target": "testing/test_monkeypatch.py:Sample",
      "type": "inherits"
    },
    {
      "source": "testing/test_monkeypatch.py:test_issue156_undo_staticmethod",
      "target": "testing/test_monkeypatch.py:Sample.hello",
      "type": "invokes"
    },
    {
      "source": "testing/test_monkeypatch.py:test_undo_class_descriptors_delattr",
      "target": "testing/test_monkeypatch.py:test_undo_class_descriptors_delattr.SampleParent",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py:test_undo_class_descriptors_delattr",
      "target": "testing/test_monkeypatch.py:test_undo_class_descriptors_delattr.SampleChild",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py:test_undo_class_descriptors_delattr.SampleParent",
      "target": "testing/test_monkeypatch.py:test_undo_class_descriptors_delattr.SampleParent.hello",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py:test_undo_class_descriptors_delattr.SampleParent",
      "target": "testing/test_monkeypatch.py:test_undo_class_descriptors_delattr.SampleParent.world",
      "type": "contains"
    },
    {
      "source": "testing/test_monkeypatch.py:test_undo_class_descriptors_delattr.SampleChild",
      "target": "testing/test_monkeypatch.py:test_undo_class_descriptors_delattr.SampleParent",
      "type": "inherits"
    },
    {
      "source": "testing/test_monkeypatch.py:test_context_classmethod",
      "target": "testing/test_monkeypatch.py:test_context_classmethod.A",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py",
      "target": "testing/test_doctest.py:TestDoctests",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py",
      "target": "testing/test_doctest.py:TestLiterals",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py",
      "target": "testing/test_doctest.py:TestDoctestSkips",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py",
      "target": "testing/test_doctest.py:TestDoctestAutoUseFixtures",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py",
      "target": "testing/test_doctest.py:TestDoctestNamespaceFixture",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py",
      "target": "testing/test_doctest.py:TestDoctestReportingOption",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py",
      "target": "testing/test_doctest.py:test_doctest_mock_objects_dont_recurse_missbehaved",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py",
      "target": "testing/test_doctest.py:Broken",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py",
      "target": "testing/test_doctest.py:test_warning_on_unwrap_of_broken_object",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py",
      "target": "testing/test_doctest.py:test_is_setup_py_not_named_setup_py",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py",
      "target": "testing/test_doctest.py:test_is_setup_py_is_a_setup_py",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py",
      "target": "testing/test_doctest.py:test_is_setup_py_different_encoding",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py",
      "target": "testing/test_doctest.py:test_is_main_py",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_collect_testtextfile",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_collect_module_empty",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_collect_module_single_modulelevel_doctest",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_collect_module_two_doctest_one_modulelevel",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_collect_module_two_doctest_no_modulelevel",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_simple_doctestfile",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_importmode",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_new_pattern",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_multiple_patterns",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_encoding",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_doctest_unexpected_exception",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_doctest_outcomes",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_docstring_partial_context_around_error",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_docstring_full_context_around_error",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_doctest_linedata_missing",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_doctest_linedata_on_property",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_doctest_no_linedata_on_overriden_property",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_doctest_unex_importerror_only_txt",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_doctest_unex_importerror_with_module",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_doctestmodule",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_doctestmodule_external_and_issue116",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_txtfile_failing",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_txtfile_with_fixtures",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_txtfile_with_usefixtures_in_ini",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_doctestmodule_with_fixtures",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_doctestmodule_three_tests",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_doctestmodule_two_tests_one_fail",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_ignored_whitespace",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_non_ignored_whitespace",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_ignored_whitespace_glob",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_non_ignored_whitespace_glob",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_contains_unicode",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_ignore_import_errors_on_doctest",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_junit_report_for_doctest",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_unicode_doctest",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_unicode_doctest_module",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_print_unicode_value",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_reportinfo",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_valid_setup_py",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_main_py_does_not_cause_import_errors",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctests",
      "target": "testing/test_doctest.py:TestDoctests.test_invalid_setup_py",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestLiterals",
      "target": "testing/test_doctest.py:TestLiterals.test_allow_unicode",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestLiterals",
      "target": "testing/test_doctest.py:TestLiterals.test_allow_bytes",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestLiterals",
      "target": "testing/test_doctest.py:TestLiterals.test_unicode_string",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestLiterals",
      "target": "testing/test_doctest.py:TestLiterals.test_bytes_literal",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestLiterals",
      "target": "testing/test_doctest.py:TestLiterals.test_number_re",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestLiterals",
      "target": "testing/test_doctest.py:TestLiterals.test_number_precision",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestLiterals",
      "target": "testing/test_doctest.py:TestLiterals.test_number_non_matches",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestLiterals",
      "target": "testing/test_doctest.py:TestLiterals.test_number_and_allow_unicode",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestSkips",
      "target": "testing/test_doctest.py:TestDoctestSkips.makedoctest",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestSkips",
      "target": "testing/test_doctest.py:TestDoctestSkips.test_one_skipped",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestSkips",
      "target": "testing/test_doctest.py:TestDoctestSkips.test_one_skipped_failed",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestSkips",
      "target": "testing/test_doctest.py:TestDoctestSkips.test_all_skipped",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestSkips",
      "target": "testing/test_doctest.py:TestDoctestSkips.test_vacuous_all_skipped",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestSkips",
      "target": "testing/test_doctest.py:TestDoctestSkips.test_continue_on_failure",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestSkips",
      "target": "testing/test_doctest.py:TestDoctestSkips.test_skipping_wrapped_test",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestSkips.makedoctest",
      "target": "testing/test_doctest.py:TestDoctestSkips.makedoctest.makeit",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestSkips.test_one_skipped",
      "target": "testing/test_doctest.py:TestDoctestSkips.makedoctest",
      "type": "invokes"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestSkips.test_one_skipped_failed",
      "target": "testing/test_doctest.py:TestDoctestSkips.makedoctest",
      "type": "invokes"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestSkips.test_all_skipped",
      "target": "testing/test_doctest.py:TestDoctestSkips.makedoctest",
      "type": "invokes"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestSkips.test_vacuous_all_skipped",
      "target": "testing/test_doctest.py:TestDoctestSkips.makedoctest",
      "type": "invokes"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestAutoUseFixtures",
      "target": "testing/test_doctest.py:TestDoctestAutoUseFixtures.test_doctest_module_session_fixture",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestAutoUseFixtures",
      "target": "testing/test_doctest.py:TestDoctestAutoUseFixtures.test_fixture_scopes",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestAutoUseFixtures",
      "target": "testing/test_doctest.py:TestDoctestAutoUseFixtures.test_fixture_module_doctest_scopes",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestAutoUseFixtures",
      "target": "testing/test_doctest.py:TestDoctestAutoUseFixtures.test_auto_use_request_attributes",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestNamespaceFixture",
      "target": "testing/test_doctest.py:TestDoctestNamespaceFixture.test_namespace_doctestfile",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestNamespaceFixture",
      "target": "testing/test_doctest.py:TestDoctestNamespaceFixture.test_namespace_pyfile",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestReportingOption",
      "target": "testing/test_doctest.py:TestDoctestReportingOption._run_doctest_report",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestReportingOption",
      "target": "testing/test_doctest.py:TestDoctestReportingOption.test_doctest_report_udiff",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestReportingOption",
      "target": "testing/test_doctest.py:TestDoctestReportingOption.test_doctest_report_cdiff",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestReportingOption",
      "target": "testing/test_doctest.py:TestDoctestReportingOption.test_doctest_report_ndiff",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestReportingOption",
      "target": "testing/test_doctest.py:TestDoctestReportingOption.test_doctest_report_none_or_only_first_failure",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestReportingOption",
      "target": "testing/test_doctest.py:TestDoctestReportingOption.test_doctest_report_invalid",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestReportingOption.test_doctest_report_udiff",
      "target": "testing/test_doctest.py:TestDoctestReportingOption._run_doctest_report",
      "type": "invokes"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestReportingOption.test_doctest_report_cdiff",
      "target": "testing/test_doctest.py:TestDoctestReportingOption._run_doctest_report",
      "type": "invokes"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestReportingOption.test_doctest_report_ndiff",
      "target": "testing/test_doctest.py:TestDoctestReportingOption._run_doctest_report",
      "type": "invokes"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestReportingOption.test_doctest_report_none_or_only_first_failure",
      "target": "testing/test_doctest.py:TestDoctestReportingOption._run_doctest_report",
      "type": "invokes"
    },
    {
      "source": "testing/test_doctest.py:TestDoctestReportingOption.test_doctest_report_invalid",
      "target": "testing/test_doctest.py:TestDoctestReportingOption._run_doctest_report",
      "type": "invokes"
    },
    {
      "source": "testing/test_doctest.py:Broken",
      "target": "testing/test_doctest.py:Broken.__getattr__",
      "type": "contains"
    },
    {
      "source": "testing/test_doctest.py:test_warning_on_unwrap_of_broken_object",
      "target": "testing/test_doctest.py:Broken",
      "type": "invokes"
    },
    {
      "source": "testing/test_compat.py",
      "target": "testing/test_compat.py:test_is_generator",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py",
      "target": "testing/test_compat.py:test_real_func_loop_limit",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py",
      "target": "testing/test_compat.py:test_get_real_func",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py",
      "target": "testing/test_compat.py:test_get_real_func_partial",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py",
      "target": "testing/test_compat.py:test_is_generator_asyncio",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py",
      "target": "testing/test_compat.py:test_is_generator_async_syntax",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py",
      "target": "testing/test_compat.py:test_is_generator_async_gen_syntax",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py",
      "target": "testing/test_compat.py:ErrorsHelper",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py",
      "target": "testing/test_compat.py:test_helper_failures",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py",
      "target": "testing/test_compat.py:test_safe_getattr",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py",
      "target": "testing/test_compat.py:test_safe_isclass",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py",
      "target": "testing/test_compat.py:test_cached_property",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py",
      "target": "testing/test_compat.py:test_assert_never_union",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py",
      "target": "testing/test_compat.py:test_assert_never_enum",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py",
      "target": "testing/test_compat.py:test_assert_never_literal",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py:test_is_generator",
      "target": "testing/test_compat.py:test_is_generator.zap",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py:test_is_generator",
      "target": "testing/test_compat.py:test_is_generator.foo",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py:test_real_func_loop_limit",
      "target": "testing/test_compat.py:test_real_func_loop_limit.Evil",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py:test_real_func_loop_limit",
      "target": "testing/test_compat.py:test_real_func_loop_limit.Evil",
      "type": "invokes"
    },
    {
      "source": "testing/test_compat.py:test_real_func_loop_limit.Evil",
      "target": "testing/test_compat.py:test_real_func_loop_limit.Evil.__repr__",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py:test_real_func_loop_limit.Evil",
      "target": "testing/test_compat.py:test_real_func_loop_limit.Evil.__getattr__",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py:test_get_real_func",
      "target": "testing/test_compat.py:test_get_real_func.decorator",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py:test_get_real_func",
      "target": "testing/test_compat.py:test_get_real_func.decorator",
      "type": "invokes"
    },
    {
      "source": "testing/test_compat.py:test_get_real_func",
      "target": "testing/test_compat.py:test_get_real_func.func",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py:test_get_real_func.decorator",
      "target": "testing/test_compat.py:test_get_real_func.decorator.inner",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py:test_get_real_func_partial",
      "target": "testing/test_compat.py:test_get_real_func_partial.foo",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py:ErrorsHelper",
      "target": "testing/test_compat.py:ErrorsHelper.raise_baseexception",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py:ErrorsHelper",
      "target": "testing/test_compat.py:ErrorsHelper.raise_exception",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py:ErrorsHelper",
      "target": "testing/test_compat.py:ErrorsHelper.raise_fail_outcome",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py:test_helper_failures",
      "target": "testing/test_compat.py:ErrorsHelper",
      "type": "invokes"
    },
    {
      "source": "testing/test_compat.py:test_safe_getattr",
      "target": "testing/test_compat.py:ErrorsHelper",
      "type": "invokes"
    },
    {
      "source": "testing/test_compat.py:test_safe_isclass",
      "target": "testing/test_compat.py:test_safe_isclass.CrappyClass",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py:test_safe_isclass",
      "target": "testing/test_compat.py:test_safe_isclass.CrappyClass",
      "type": "invokes"
    },
    {
      "source": "testing/test_compat.py:test_safe_isclass.CrappyClass",
      "target": "testing/test_compat.py:test_safe_isclass.CrappyClass.__class__",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py:test_cached_property",
      "target": "testing/test_compat.py:test_cached_property.Class",
      "type": "contains"
    },
    {
      "source": "testing/test_compat.py:test_cached_property",
      "target": "testing/test_compat.py:test_cached_property.Class",
      "type": "invokes"
    },
    {
      "source": "testing/test_compat.py:test_cached_property.Class",
      "target": "testing/test_compat.py:test_cached_property.Class.prop",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:TestParseIni",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:TestConfigCmdlineParsing",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:TestConfigAPI",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:TestConfigFromdictargs",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:test_options_on_small_file_do_not_blow_up",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:test_preparse_ordering_with_setuptools",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:test_setuptools_importerror_issue1479",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:test_importlib_metadata_broken_distribution",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:test_plugin_preparse_prevents_setuptools_loading",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:test_disable_plugin_autoload",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:test_plugin_loading_order",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:test_cmdline_processargs_simple",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:test_invalid_options_show_extra_information",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:test_consider_args_after_options_for_rootdir",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:test_toolongargs_issue224",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:test_config_in_subdirectory_colon_command_line_issue2148",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:test_notify_exception",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:test_no_terminal_discovery_error",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:test_load_initial_conftest_last_ordering",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:test_get_plugin_specs_as_list",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:test_collect_pytest_prefix_bug_integration",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:test_collect_pytest_prefix_bug",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:TestRootdir",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:TestOverrideIniArgs",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:test_help_via_addopts",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:test_help_and_version_after_argument_error",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:test_help_formatter_uses_py_get_terminal_width",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:test_config_does_not_load_blocked_plugin_from_args",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:test_invocation_args",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:test_config_blocked_default_plugins",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:TestSetupCfg",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:TestPytestPluginsVariable",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:test_conftest_import_error_repr",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:test_strtobool",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:test_parse_warning_filter",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:test_parse_warning_filter_failure",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py",
      "target": "testing/test_config.py:TestDebugOptions",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestParseIni",
      "target": "testing/test_config.py:TestParseIni.test_getcfg_and_config",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestParseIni",
      "target": "testing/test_config.py:TestParseIni.test_setupcfg_uses_toolpytest_with_pytest",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestParseIni",
      "target": "testing/test_config.py:TestParseIni.test_append_parse_args",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestParseIni",
      "target": "testing/test_config.py:TestParseIni.test_tox_ini_wrong_version",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestParseIni",
      "target": "testing/test_config.py:TestParseIni.test_ini_names",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestParseIni",
      "target": "testing/test_config.py:TestParseIni.test_pyproject_toml",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestParseIni",
      "target": "testing/test_config.py:TestParseIni.test_toxini_before_lower_pytestini",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestParseIni",
      "target": "testing/test_config.py:TestParseIni.test_ini_parse_error",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestParseIni",
      "target": "testing/test_config.py:TestParseIni.test_toml_parse_error",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestParseIni",
      "target": "testing/test_config.py:TestParseIni.test_confcutdir_default_without_configfile",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestParseIni",
      "target": "testing/test_config.py:TestParseIni.test_confcutdir_default_with_configfile",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestParseIni",
      "target": "testing/test_config.py:TestParseIni.test_confcutdir",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestParseIni",
      "target": "testing/test_config.py:TestParseIni.test_invalid_config_options",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestParseIni",
      "target": "testing/test_config.py:TestParseIni.test_silence_unknown_key_warning",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestParseIni",
      "target": "testing/test_config.py:TestParseIni.test_disable_warnings_plugin_disables_config_warnings",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestParseIni",
      "target": "testing/test_config.py:TestParseIni.test_missing_required_plugins",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestParseIni",
      "target": "testing/test_config.py:TestParseIni.test_early_config_cmdline",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestParseIni.test_missing_required_plugins",
      "target": "testing/test_config.py:TestParseIni.test_missing_required_plugins.DummyEntryPoint",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestParseIni.test_missing_required_plugins",
      "target": "testing/test_config.py:TestParseIni.test_missing_required_plugins.DummyEntryPoint",
      "type": "invokes"
    },
    {
      "source": "testing/test_config.py:TestParseIni.test_missing_required_plugins",
      "target": "testing/test_config.py:TestParseIni.test_missing_required_plugins.DummyDist",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestParseIni.test_missing_required_plugins",
      "target": "testing/test_config.py:TestParseIni.test_missing_required_plugins.my_dists",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestParseIni.test_missing_required_plugins.DummyEntryPoint",
      "target": "testing/test_config.py:TestParseIni.test_missing_required_plugins.DummyEntryPoint.load",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestParseIni.test_missing_required_plugins.DummyDist",
      "target": "testing/test_config.py:TestParseIni.test_missing_required_plugins.DummyDist.metadata",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestParseIni.test_missing_required_plugins.my_dists",
      "target": "testing/test_config.py:TestParseIni.test_missing_required_plugins.DummyDist",
      "type": "invokes"
    },
    {
      "source": "testing/test_config.py:TestConfigCmdlineParsing",
      "target": "testing/test_config.py:TestConfigCmdlineParsing.test_parsing_again_fails",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestConfigCmdlineParsing",
      "target": "testing/test_config.py:TestConfigCmdlineParsing.test_explicitly_specified_config_file_is_loaded",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestConfigCmdlineParsing",
      "target": "testing/test_config.py:TestConfigCmdlineParsing.test_absolute_win32_path",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI",
      "target": "testing/test_config.py:TestConfigAPI.test_config_trace",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI",
      "target": "testing/test_config.py:TestConfigAPI.test_config_getoption",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI",
      "target": "testing/test_config.py:TestConfigAPI.test_config_getoption_unicode",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI",
      "target": "testing/test_config.py:TestConfigAPI.test_config_getvalueorskip",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI",
      "target": "testing/test_config.py:TestConfigAPI.test_config_getvalueorskip_None",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI",
      "target": "testing/test_config.py:TestConfigAPI.test_getoption",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI",
      "target": "testing/test_config.py:TestConfigAPI.test_getconftest_pathlist",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI",
      "target": "testing/test_config.py:TestConfigAPI.test_addini",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI",
      "target": "testing/test_config.py:TestConfigAPI.test_addini_paths",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI",
      "target": "testing/test_config.py:TestConfigAPI.make_conftest_for_args",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI",
      "target": "testing/test_config.py:TestConfigAPI.test_addini_args_ini_files",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI",
      "target": "testing/test_config.py:TestConfigAPI.test_addini_args_pyproject_toml",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI",
      "target": "testing/test_config.py:TestConfigAPI.check_config_args",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI",
      "target": "testing/test_config.py:TestConfigAPI.make_conftest_for_linelist",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI",
      "target": "testing/test_config.py:TestConfigAPI.test_addini_linelist_ini_files",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI",
      "target": "testing/test_config.py:TestConfigAPI.test_addini_linelist_pprojecttoml",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI",
      "target": "testing/test_config.py:TestConfigAPI.check_config_linelist",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI",
      "target": "testing/test_config.py:TestConfigAPI.test_addini_bool",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI",
      "target": "testing/test_config.py:TestConfigAPI.test_addinivalue_line_existing",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI",
      "target": "testing/test_config.py:TestConfigAPI.test_addinivalue_line_new",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI",
      "target": "testing/test_config.py:TestConfigAPI.test_confcutdir_check_isdir",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI",
      "target": "testing/test_config.py:TestConfigAPI.test_iter_rewritable_modules",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI.test_addini_args_ini_files",
      "target": "testing/test_config.py:TestConfigAPI.check_config_args",
      "type": "invokes"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI.test_addini_args_ini_files",
      "target": "testing/test_config.py:TestConfigAPI.make_conftest_for_args",
      "type": "invokes"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI.test_addini_args_pyproject_toml",
      "target": "testing/test_config.py:TestConfigAPI.check_config_args",
      "type": "invokes"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI.test_addini_args_pyproject_toml",
      "target": "testing/test_config.py:TestConfigAPI.make_conftest_for_args",
      "type": "invokes"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI.test_addini_linelist_ini_files",
      "target": "testing/test_config.py:TestConfigAPI.make_conftest_for_linelist",
      "type": "invokes"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI.test_addini_linelist_ini_files",
      "target": "testing/test_config.py:TestConfigAPI.check_config_linelist",
      "type": "invokes"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI.test_addini_linelist_pprojecttoml",
      "target": "testing/test_config.py:TestConfigAPI.make_conftest_for_linelist",
      "type": "invokes"
    },
    {
      "source": "testing/test_config.py:TestConfigAPI.test_addini_linelist_pprojecttoml",
      "target": "testing/test_config.py:TestConfigAPI.check_config_linelist",
      "type": "invokes"
    },
    {
      "source": "testing/test_config.py:TestConfigFromdictargs",
      "target": "testing/test_config.py:TestConfigFromdictargs.test_basic_behavior",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestConfigFromdictargs",
      "target": "testing/test_config.py:TestConfigFromdictargs.test_invocation_params_args",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestConfigFromdictargs",
      "target": "testing/test_config.py:TestConfigFromdictargs.test_inifilename",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_options_on_small_file_do_not_blow_up",
      "target": "testing/test_config.py:test_options_on_small_file_do_not_blow_up.runfiletest",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_options_on_small_file_do_not_blow_up",
      "target": "testing/test_config.py:test_options_on_small_file_do_not_blow_up.runfiletest",
      "type": "invokes"
    },
    {
      "source": "testing/test_config.py:test_preparse_ordering_with_setuptools",
      "target": "testing/test_config.py:test_preparse_ordering_with_setuptools.EntryPoint",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_preparse_ordering_with_setuptools",
      "target": "testing/test_config.py:test_preparse_ordering_with_setuptools.Dist",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_preparse_ordering_with_setuptools",
      "target": "testing/test_config.py:test_preparse_ordering_with_setuptools.my_dists",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_preparse_ordering_with_setuptools.EntryPoint",
      "target": "testing/test_config.py:test_preparse_ordering_with_setuptools.EntryPoint.load",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_preparse_ordering_with_setuptools.EntryPoint.load",
      "target": "testing/test_config.py:test_preparse_ordering_with_setuptools.EntryPoint.load.PseudoPlugin",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_preparse_ordering_with_setuptools.EntryPoint.load",
      "target": "testing/test_config.py:test_preparse_ordering_with_setuptools.EntryPoint.load.PseudoPlugin",
      "type": "invokes"
    },
    {
      "source": "testing/test_config.py:test_setuptools_importerror_issue1479",
      "target": "testing/test_config.py:test_setuptools_importerror_issue1479.DummyEntryPoint",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_setuptools_importerror_issue1479",
      "target": "testing/test_config.py:test_setuptools_importerror_issue1479.Distribution",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_setuptools_importerror_issue1479",
      "target": "testing/test_config.py:test_setuptools_importerror_issue1479.distributions",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_setuptools_importerror_issue1479.DummyEntryPoint",
      "target": "testing/test_config.py:test_setuptools_importerror_issue1479.DummyEntryPoint.load",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_setuptools_importerror_issue1479.distributions",
      "target": "testing/test_config.py:test_setuptools_importerror_issue1479.Distribution",
      "type": "invokes"
    },
    {
      "source": "testing/test_config.py:test_importlib_metadata_broken_distribution",
      "target": "testing/test_config.py:test_importlib_metadata_broken_distribution.DummyEntryPoint",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_importlib_metadata_broken_distribution",
      "target": "testing/test_config.py:test_importlib_metadata_broken_distribution.Distribution",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_importlib_metadata_broken_distribution",
      "target": "testing/test_config.py:test_importlib_metadata_broken_distribution.distributions",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_importlib_metadata_broken_distribution.DummyEntryPoint",
      "target": "testing/test_config.py:test_importlib_metadata_broken_distribution.DummyEntryPoint.load",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_importlib_metadata_broken_distribution.distributions",
      "target": "testing/test_config.py:test_importlib_metadata_broken_distribution.Distribution",
      "type": "invokes"
    },
    {
      "source": "testing/test_config.py:test_plugin_preparse_prevents_setuptools_loading",
      "target": "testing/test_config.py:test_plugin_preparse_prevents_setuptools_loading.DummyEntryPoint",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_plugin_preparse_prevents_setuptools_loading",
      "target": "testing/test_config.py:test_plugin_preparse_prevents_setuptools_loading.Distribution",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_plugin_preparse_prevents_setuptools_loading",
      "target": "testing/test_config.py:test_plugin_preparse_prevents_setuptools_loading.distributions",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_plugin_preparse_prevents_setuptools_loading.DummyEntryPoint",
      "target": "testing/test_config.py:test_plugin_preparse_prevents_setuptools_loading.DummyEntryPoint.load",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_plugin_preparse_prevents_setuptools_loading.distributions",
      "target": "testing/test_config.py:test_plugin_preparse_prevents_setuptools_loading.Distribution",
      "type": "invokes"
    },
    {
      "source": "testing/test_config.py:test_disable_plugin_autoload",
      "target": "testing/test_config.py:test_disable_plugin_autoload.DummyEntryPoint",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_disable_plugin_autoload",
      "target": "testing/test_config.py:test_disable_plugin_autoload.Distribution",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_disable_plugin_autoload",
      "target": "testing/test_config.py:test_disable_plugin_autoload.PseudoPlugin",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_disable_plugin_autoload",
      "target": "testing/test_config.py:test_disable_plugin_autoload.PseudoPlugin",
      "type": "invokes"
    },
    {
      "source": "testing/test_config.py:test_disable_plugin_autoload",
      "target": "testing/test_config.py:test_disable_plugin_autoload.distributions",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_disable_plugin_autoload.DummyEntryPoint",
      "target": "testing/test_config.py:test_disable_plugin_autoload.DummyEntryPoint.load",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_disable_plugin_autoload.PseudoPlugin",
      "target": "testing/test_config.py:test_disable_plugin_autoload.PseudoPlugin.__getattr__",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_disable_plugin_autoload.distributions",
      "target": "testing/test_config.py:test_disable_plugin_autoload.Distribution",
      "type": "invokes"
    },
    {
      "source": "testing/test_config.py:test_notify_exception",
      "target": "testing/test_config.py:test_notify_exception.A",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_notify_exception",
      "target": "testing/test_config.py:test_notify_exception.A",
      "type": "invokes"
    },
    {
      "source": "testing/test_config.py:test_notify_exception.A",
      "target": "testing/test_config.py:test_notify_exception.A.pytest_internalerror",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_load_initial_conftest_last_ordering",
      "target": "testing/test_config.py:test_load_initial_conftest_last_ordering.My",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_load_initial_conftest_last_ordering",
      "target": "testing/test_config.py:test_load_initial_conftest_last_ordering.My",
      "type": "invokes"
    },
    {
      "source": "testing/test_config.py:test_load_initial_conftest_last_ordering.My",
      "target": "testing/test_config.py:test_load_initial_conftest_last_ordering.My.pytest_load_initial_conftests",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_get_plugin_specs_as_list",
      "target": "testing/test_config.py:test_get_plugin_specs_as_list.exp_match",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_get_plugin_specs_as_list",
      "target": "testing/test_config.py:test_get_plugin_specs_as_list.exp_match",
      "type": "invokes"
    },
    {
      "source": "testing/test_config.py:test_collect_pytest_prefix_bug",
      "target": "testing/test_config.py:test_collect_pytest_prefix_bug.Dummy",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_collect_pytest_prefix_bug",
      "target": "testing/test_config.py:test_collect_pytest_prefix_bug.Dummy",
      "type": "invokes"
    },
    {
      "source": "testing/test_config.py:test_collect_pytest_prefix_bug.Dummy",
      "target": "testing/test_config.py:test_collect_pytest_prefix_bug.Dummy.pytest_something",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestRootdir",
      "target": "testing/test_config.py:TestRootdir.test_simple_noini",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestRootdir",
      "target": "testing/test_config.py:TestRootdir.test_with_ini",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestRootdir",
      "target": "testing/test_config.py:TestRootdir.test_pytestini_overrides_empty_other",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestRootdir",
      "target": "testing/test_config.py:TestRootdir.test_setuppy_fallback",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestRootdir",
      "target": "testing/test_config.py:TestRootdir.test_nothing",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestRootdir",
      "target": "testing/test_config.py:TestRootdir.test_with_specific_inifile",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestRootdir",
      "target": "testing/test_config.py:TestRootdir.test_explicit_config_file_sets_rootdir",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestRootdir",
      "target": "testing/test_config.py:TestRootdir.test_with_arg_outside_cwd_without_inifile",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestRootdir",
      "target": "testing/test_config.py:TestRootdir.test_with_arg_outside_cwd_with_inifile",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestRootdir",
      "target": "testing/test_config.py:TestRootdir.test_with_non_dir_arg",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestRootdir",
      "target": "testing/test_config.py:TestRootdir.test_with_existing_file_in_subdir",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestRootdir",
      "target": "testing/test_config.py:TestRootdir.test_with_config_also_in_parent_directory",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestOverrideIniArgs",
      "target": "testing/test_config.py:TestOverrideIniArgs.test_override_ini_names",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestOverrideIniArgs",
      "target": "testing/test_config.py:TestOverrideIniArgs.test_override_ini_paths",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestOverrideIniArgs",
      "target": "testing/test_config.py:TestOverrideIniArgs.test_override_multiple_and_default",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestOverrideIniArgs",
      "target": "testing/test_config.py:TestOverrideIniArgs.test_override_ini_usage_error_bad_style",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestOverrideIniArgs",
      "target": "testing/test_config.py:TestOverrideIniArgs.test_override_ini_handled_asap",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestOverrideIniArgs",
      "target": "testing/test_config.py:TestOverrideIniArgs.test_addopts_before_initini",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestOverrideIniArgs",
      "target": "testing/test_config.py:TestOverrideIniArgs.test_addopts_from_env_not_concatenated",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestOverrideIniArgs",
      "target": "testing/test_config.py:TestOverrideIniArgs.test_addopts_from_ini_not_concatenated",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestOverrideIniArgs",
      "target": "testing/test_config.py:TestOverrideIniArgs.test_override_ini_does_not_contain_paths",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestOverrideIniArgs",
      "target": "testing/test_config.py:TestOverrideIniArgs.test_multiple_override_ini_options",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_invocation_args",
      "target": "testing/test_config.py:test_invocation_args.DummyPlugin",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:test_invocation_args",
      "target": "testing/test_config.py:test_invocation_args.DummyPlugin",
      "type": "invokes"
    },
    {
      "source": "testing/test_config.py:TestSetupCfg",
      "target": "testing/test_config.py:TestSetupCfg.test_pytest_setup_cfg_unsupported",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestSetupCfg",
      "target": "testing/test_config.py:TestSetupCfg.test_pytest_custom_cfg_unsupported",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestPytestPluginsVariable",
      "target": "testing/test_config.py:TestPytestPluginsVariable.test_pytest_plugins_in_non_top_level_conftest_unsupported",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestPytestPluginsVariable",
      "target": "testing/test_config.py:TestPytestPluginsVariable.test_pytest_plugins_in_non_top_level_conftest_unsupported_pyargs",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestPytestPluginsVariable",
      "target": "testing/test_config.py:TestPytestPluginsVariable.test_pytest_plugins_in_non_top_level_conftest_unsupported_no_top_level_conftest",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestPytestPluginsVariable",
      "target": "testing/test_config.py:TestPytestPluginsVariable.test_pytest_plugins_in_non_top_level_conftest_unsupported_no_false_positives",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestDebugOptions",
      "target": "testing/test_config.py:TestDebugOptions.test_without_debug_does_not_write_log",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestDebugOptions",
      "target": "testing/test_config.py:TestDebugOptions.test_with_only_debug_writes_pytestdebug_log",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestDebugOptions",
      "target": "testing/test_config.py:TestDebugOptions.test_multiple_custom_debug_logs",
      "type": "contains"
    },
    {
      "source": "testing/test_config.py:TestDebugOptions",
      "target": "testing/test_config.py:TestDebugOptions.test_debug_help",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:StdCaptureFD",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:StdCapture",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:TeeStdCapture",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:TestCaptureManager",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:test_capturing_unicode",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:test_capturing_bytes_in_utf8_encoding",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:test_collect_capturing",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:TestPerTestCapturing",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:TestLoggingInteraction",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:TestCaptureFixture",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:test_setup_failure_does_not_kill_capturing",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:test_capture_conftest_runtest_setup",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:test_capture_badoutput_issue412",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:test_capture_early_option_parsing",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:test_capture_binary_output",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:test_error_during_readouterr",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:TestCaptureIO",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:TestTeeCaptureIO",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:test_dontreadfrominput",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:test_captureresult",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:tmpfile",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:lsof_check",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:TestFDCapture",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:saved_fd",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:TestStdCapture",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:TestTeeStdCapture",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:TestStdCaptureFD",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:TestStdCaptureFDinvalidFD",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:test_capture_not_started_but_reset",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:test_using_capsys_fixture_works_with_sys_stdout_encoding",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:test_capsys_results_accessible_by_attribute",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:test_fdcapture_tmpfile_remains_the_same",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:test_close_and_capture_again",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:test_capturing_and_logging_fundamentals",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:test_error_attribute_issue555",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:test_windowsconsoleio_workaround_non_standard_streams",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:test_dontreadfrominput_has_encoding",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:test_crash_on_closing_tmpfile_py27",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:test_global_capture_with_live_logging",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:test_capture_with_live_logging",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:test_typeerror_encodedfile_write",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:test_stderr_write_returns_len",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:test_encodedfile_writelines",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:test__get_multicapture",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py",
      "target": "testing/test_capture.py:test_logging_while_collecting",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestCaptureManager",
      "target": "testing/test_capture.py:TestCaptureManager.test_capturing_basic_api",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestCaptureManager",
      "target": "testing/test_capture.py:TestCaptureManager.test_init_capturing",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestCaptureManager.test_capturing_basic_api",
      "target": "testing/test_capture.py:StdCaptureFD",
      "type": "invokes"
    },
    {
      "source": "testing/test_capture.py:TestCaptureManager.test_init_capturing",
      "target": "testing/test_capture.py:StdCaptureFD",
      "type": "invokes"
    },
    {
      "source": "testing/test_capture.py:TestPerTestCapturing",
      "target": "testing/test_capture.py:TestPerTestCapturing.test_capture_and_fixtures",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestPerTestCapturing",
      "target": "testing/test_capture.py:TestPerTestCapturing.test_capture_scope_cache",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestPerTestCapturing",
      "target": "testing/test_capture.py:TestPerTestCapturing.test_no_carry_over",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestPerTestCapturing",
      "target": "testing/test_capture.py:TestPerTestCapturing.test_teardown_capturing",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestPerTestCapturing",
      "target": "testing/test_capture.py:TestPerTestCapturing.test_teardown_capturing_final",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestPerTestCapturing",
      "target": "testing/test_capture.py:TestPerTestCapturing.test_capturing_outerr",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestLoggingInteraction",
      "target": "testing/test_capture.py:TestLoggingInteraction.test_logging_stream_ownership",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestLoggingInteraction",
      "target": "testing/test_capture.py:TestLoggingInteraction.test_logging_and_immediate_setupteardown",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestLoggingInteraction",
      "target": "testing/test_capture.py:TestLoggingInteraction.test_logging_and_crossscope_fixtures",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestLoggingInteraction",
      "target": "testing/test_capture.py:TestLoggingInteraction.test_conftestlogging_is_shown",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestLoggingInteraction",
      "target": "testing/test_capture.py:TestLoggingInteraction.test_conftestlogging_and_test_logging",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestLoggingInteraction",
      "target": "testing/test_capture.py:TestLoggingInteraction.test_logging_after_cap_stopped",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestCaptureFixture",
      "target": "testing/test_capture.py:TestCaptureFixture.test_std_functional",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestCaptureFixture",
      "target": "testing/test_capture.py:TestCaptureFixture.test_capsyscapfd",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestCaptureFixture",
      "target": "testing/test_capture.py:TestCaptureFixture.test_capturing_getfixturevalue",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestCaptureFixture",
      "target": "testing/test_capture.py:TestCaptureFixture.test_capsyscapfdbinary",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestCaptureFixture",
      "target": "testing/test_capture.py:TestCaptureFixture.test_capture_is_represented_on_failure_issue128",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestCaptureFixture",
      "target": "testing/test_capture.py:TestCaptureFixture.test_stdfd_functional",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestCaptureFixture",
      "target": "testing/test_capture.py:TestCaptureFixture.test_cafd_preserves_newlines",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestCaptureFixture",
      "target": "testing/test_capture.py:TestCaptureFixture.test_capfdbinary",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestCaptureFixture",
      "target": "testing/test_capture.py:TestCaptureFixture.test_capsysbinary",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestCaptureFixture",
      "target": "testing/test_capture.py:TestCaptureFixture.test_partial_setup_failure",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestCaptureFixture",
      "target": "testing/test_capture.py:TestCaptureFixture.test_keyboardinterrupt_disables_capturing",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestCaptureFixture",
      "target": "testing/test_capture.py:TestCaptureFixture.test_capture_and_logging",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestCaptureFixture",
      "target": "testing/test_capture.py:TestCaptureFixture.test_disabled_capture_fixture",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestCaptureFixture",
      "target": "testing/test_capture.py:TestCaptureFixture.test_disabled_capture_fixture_twice",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestCaptureFixture",
      "target": "testing/test_capture.py:TestCaptureFixture.test_fixture_use_by_other_fixtures",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestCaptureFixture",
      "target": "testing/test_capture.py:TestCaptureFixture.test_fixture_use_by_other_fixtures_teardown",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestCaptureIO",
      "target": "testing/test_capture.py:TestCaptureIO.test_text",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestCaptureIO",
      "target": "testing/test_capture.py:TestCaptureIO.test_unicode_and_str_mixture",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestCaptureIO",
      "target": "testing/test_capture.py:TestCaptureIO.test_write_bytes_to_buffer",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestTeeCaptureIO",
      "target": "testing/test_capture.py:TestTeeCaptureIO.test_text",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestTeeCaptureIO",
      "target": "testing/test_capture.py:TestTeeCaptureIO.test_unicode_and_str_mixture",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestTeeCaptureIO",
      "target": "testing/test_capture.py:TestCaptureIO",
      "type": "inherits"
    },
    {
      "source": "testing/test_capture.py:TestFDCapture",
      "target": "testing/test_capture.py:TestFDCapture.test_simple",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestFDCapture",
      "target": "testing/test_capture.py:TestFDCapture.test_simple_many",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestFDCapture",
      "target": "testing/test_capture.py:TestFDCapture.test_simple_many_check_open_files",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestFDCapture",
      "target": "testing/test_capture.py:TestFDCapture.test_simple_fail_second_start",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestFDCapture",
      "target": "testing/test_capture.py:TestFDCapture.test_stderr",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestFDCapture",
      "target": "testing/test_capture.py:TestFDCapture.test_stdin",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestFDCapture",
      "target": "testing/test_capture.py:TestFDCapture.test_writeorg",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestFDCapture",
      "target": "testing/test_capture.py:TestFDCapture.test_simple_resume_suspend",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestFDCapture",
      "target": "testing/test_capture.py:TestFDCapture.test_capfd_sys_stdout_mode",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestFDCapture.test_simple_many",
      "target": "testing/test_capture.py:TestFDCapture.test_simple",
      "type": "invokes"
    },
    {
      "source": "testing/test_capture.py:TestFDCapture.test_simple_many_check_open_files",
      "target": "testing/test_capture.py:lsof_check",
      "type": "invokes"
    },
    {
      "source": "testing/test_capture.py:TestFDCapture.test_simple_many_check_open_files",
      "target": "testing/test_capture.py:TestFDCapture.test_simple_many",
      "type": "invokes"
    },
    {
      "source": "testing/test_capture.py:TestFDCapture.test_simple_resume_suspend",
      "target": "testing/test_capture.py:saved_fd",
      "type": "invokes"
    },
    {
      "source": "testing/test_capture.py:TestStdCapture",
      "target": "testing/test_capture.py:TestStdCapture.getcapture",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestStdCapture",
      "target": "testing/test_capture.py:TestStdCapture.test_capturing_done_simple",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestStdCapture",
      "target": "testing/test_capture.py:TestStdCapture.test_capturing_reset_simple",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestStdCapture",
      "target": "testing/test_capture.py:TestStdCapture.test_capturing_readouterr",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestStdCapture",
      "target": "testing/test_capture.py:TestStdCapture.test_capture_results_accessible_by_attribute",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestStdCapture",
      "target": "testing/test_capture.py:TestStdCapture.test_capturing_readouterr_unicode",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestStdCapture",
      "target": "testing/test_capture.py:TestStdCapture.test_reset_twice_error",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestStdCapture",
      "target": "testing/test_capture.py:TestStdCapture.test_capturing_modify_sysouterr_in_between",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestStdCapture",
      "target": "testing/test_capture.py:TestStdCapture.test_capturing_error_recursive",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestStdCapture",
      "target": "testing/test_capture.py:TestStdCapture.test_just_out_capture",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestStdCapture",
      "target": "testing/test_capture.py:TestStdCapture.test_just_err_capture",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestStdCapture",
      "target": "testing/test_capture.py:TestStdCapture.test_stdin_restored",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestStdCapture",
      "target": "testing/test_capture.py:TestStdCapture.test_stdin_nulled_by_default",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestStdCapture.test_capturing_done_simple",
      "target": "testing/test_capture.py:TestStdCapture.getcapture",
      "type": "invokes"
    },
    {
      "source": "testing/test_capture.py:TestStdCapture.test_capturing_reset_simple",
      "target": "testing/test_capture.py:TestStdCapture.getcapture",
      "type": "invokes"
    },
    {
      "source": "testing/test_capture.py:TestStdCapture.test_capturing_readouterr",
      "target": "testing/test_capture.py:TestStdCapture.getcapture",
      "type": "invokes"
    },
    {
      "source": "testing/test_capture.py:TestStdCapture.test_capture_results_accessible_by_attribute",
      "target": "testing/test_capture.py:TestStdCapture.getcapture",
      "type": "invokes"
    },
    {
      "source": "testing/test_capture.py:TestStdCapture.test_capturing_readouterr_unicode",
      "target": "testing/test_capture.py:TestStdCapture.getcapture",
      "type": "invokes"
    },
    {
      "source": "testing/test_capture.py:TestStdCapture.test_reset_twice_error",
      "target": "testing/test_capture.py:TestStdCapture.getcapture",
      "type": "invokes"
    },
    {
      "source": "testing/test_capture.py:TestStdCapture.test_capturing_modify_sysouterr_in_between",
      "target": "testing/test_capture.py:TestStdCapture.getcapture",
      "type": "invokes"
    },
    {
      "source": "testing/test_capture.py:TestStdCapture.test_capturing_error_recursive",
      "target": "testing/test_capture.py:TestStdCapture.getcapture",
      "type": "invokes"
    },
    {
      "source": "testing/test_capture.py:TestStdCapture.test_just_out_capture",
      "target": "testing/test_capture.py:TestStdCapture.getcapture",
      "type": "invokes"
    },
    {
      "source": "testing/test_capture.py:TestStdCapture.test_just_err_capture",
      "target": "testing/test_capture.py:TestStdCapture.getcapture",
      "type": "invokes"
    },
    {
      "source": "testing/test_capture.py:TestStdCapture.test_stdin_restored",
      "target": "testing/test_capture.py:TestStdCapture.getcapture",
      "type": "invokes"
    },
    {
      "source": "testing/test_capture.py:TestStdCapture.test_stdin_nulled_by_default",
      "target": "testing/test_capture.py:TestStdCapture.getcapture",
      "type": "invokes"
    },
    {
      "source": "testing/test_capture.py:TestTeeStdCapture",
      "target": "testing/test_capture.py:TestTeeStdCapture.test_capturing_error_recursive",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestTeeStdCapture",
      "target": "testing/test_capture.py:TestStdCapture",
      "type": "inherits"
    },
    {
      "source": "testing/test_capture.py:TestTeeStdCapture.test_capturing_error_recursive",
      "target": "testing/test_capture.py:TestStdCapture.getcapture",
      "type": "invokes"
    },
    {
      "source": "testing/test_capture.py:TestStdCaptureFD",
      "target": "testing/test_capture.py:TestStdCaptureFD.test_simple_only_fd",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestStdCaptureFD",
      "target": "testing/test_capture.py:TestStdCaptureFD.test_intermingling",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestStdCaptureFD",
      "target": "testing/test_capture.py:TestStdCaptureFD.test_many",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestStdCaptureFD",
      "target": "testing/test_capture.py:TestStdCapture",
      "type": "inherits"
    },
    {
      "source": "testing/test_capture.py:TestStdCaptureFD.test_intermingling",
      "target": "testing/test_capture.py:TestStdCapture.getcapture",
      "type": "invokes"
    },
    {
      "source": "testing/test_capture.py:TestStdCaptureFD.test_many",
      "target": "testing/test_capture.py:StdCaptureFD",
      "type": "invokes"
    },
    {
      "source": "testing/test_capture.py:TestStdCaptureFD.test_many",
      "target": "testing/test_capture.py:lsof_check",
      "type": "invokes"
    },
    {
      "source": "testing/test_capture.py:TestStdCaptureFDinvalidFD",
      "target": "testing/test_capture.py:TestStdCaptureFDinvalidFD.test_stdcapture_fd_invalid_fd",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestStdCaptureFDinvalidFD",
      "target": "testing/test_capture.py:TestStdCaptureFDinvalidFD.test_fdcapture_invalid_fd_with_fd_reuse",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestStdCaptureFDinvalidFD",
      "target": "testing/test_capture.py:TestStdCaptureFDinvalidFD.test_fdcapture_invalid_fd_without_fd_reuse",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:TestStdCaptureFDinvalidFD.test_fdcapture_invalid_fd_with_fd_reuse",
      "target": "testing/test_capture.py:saved_fd",
      "type": "invokes"
    },
    {
      "source": "testing/test_capture.py:TestStdCaptureFDinvalidFD.test_fdcapture_invalid_fd_without_fd_reuse",
      "target": "testing/test_capture.py:saved_fd",
      "type": "invokes"
    },
    {
      "source": "testing/test_capture.py:test_capture_not_started_but_reset",
      "target": "testing/test_capture.py:StdCapture",
      "type": "invokes"
    },
    {
      "source": "testing/test_capture.py:test_fdcapture_tmpfile_remains_the_same",
      "target": "testing/test_capture.py:StdCaptureFD",
      "type": "invokes"
    },
    {
      "source": "testing/test_capture.py:test_windowsconsoleio_workaround_non_standard_streams",
      "target": "testing/test_capture.py:test_windowsconsoleio_workaround_non_standard_streams.DummyStream",
      "type": "contains"
    },
    {
      "source": "testing/test_capture.py:test_windowsconsoleio_workaround_non_standard_streams",
      "target": "testing/test_capture.py:test_windowsconsoleio_workaround_non_standard_streams.DummyStream",
      "type": "invokes"
    },
    {
      "source": "testing/test_capture.py:test_windowsconsoleio_workaround_non_standard_streams.DummyStream",
      "target": "testing/test_capture.py:test_windowsconsoleio_workaround_non_standard_streams.DummyStream.write",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py",
      "target": "testing/test_parseopt.py:parser",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py",
      "target": "testing/test_parseopt.py:TestParser",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py",
      "target": "testing/test_parseopt.py:test_argcomplete",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser",
      "target": "testing/test_parseopt.py:TestParser.test_no_help_by_default",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser",
      "target": "testing/test_parseopt.py:TestParser.test_custom_prog",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser",
      "target": "testing/test_parseopt.py:TestParser.test_argument",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser",
      "target": "testing/test_parseopt.py:TestParser.test_argument_type",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser",
      "target": "testing/test_parseopt.py:TestParser.test_argument_processopt",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser",
      "target": "testing/test_parseopt.py:TestParser.test_group_add_and_get",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser",
      "target": "testing/test_parseopt.py:TestParser.test_getgroup_simple",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser",
      "target": "testing/test_parseopt.py:TestParser.test_group_ordering",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser",
      "target": "testing/test_parseopt.py:TestParser.test_group_addoption",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser",
      "target": "testing/test_parseopt.py:TestParser.test_group_addoption_conflict",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser",
      "target": "testing/test_parseopt.py:TestParser.test_group_shortopt_lowercase",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser",
      "target": "testing/test_parseopt.py:TestParser.test_parser_addoption",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser",
      "target": "testing/test_parseopt.py:TestParser.test_parse",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser",
      "target": "testing/test_parseopt.py:TestParser.test_parse2",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser",
      "target": "testing/test_parseopt.py:TestParser.test_parse_known_args",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser",
      "target": "testing/test_parseopt.py:TestParser.test_parse_known_and_unknown_args",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser",
      "target": "testing/test_parseopt.py:TestParser.test_parse_will_set_default",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser",
      "target": "testing/test_parseopt.py:TestParser.test_parse_setoption",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser",
      "target": "testing/test_parseopt.py:TestParser.test_parse_special_destination",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser",
      "target": "testing/test_parseopt.py:TestParser.test_parse_split_positional_arguments",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser",
      "target": "testing/test_parseopt.py:TestParser.test_parse_defaultgetter",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser",
      "target": "testing/test_parseopt.py:TestParser.test_drop_short_helper",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser",
      "target": "testing/test_parseopt.py:TestParser.test_drop_short_0",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser",
      "target": "testing/test_parseopt.py:TestParser.test_drop_short_2",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser",
      "target": "testing/test_parseopt.py:TestParser.test_drop_short_3",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser",
      "target": "testing/test_parseopt.py:TestParser.test_drop_short_help0",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser",
      "target": "testing/test_parseopt.py:TestParser.test_drop_short_help1",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser",
      "target": "testing/test_parseopt.py:TestParser.test_multiple_metavar_help",
      "type": "contains"
    },
    {
      "source": "testing/test_parseopt.py:TestParser.test_parse_defaultgetter",
      "target": "testing/test_parseopt.py:TestParser.test_parse_defaultgetter.defaultget",
      "type": "contains"
    },
    {
      "source": "testing/test_link_resolve.py",
      "target": "testing/test_link_resolve.py:subst_path_windows",
      "type": "contains"
    },
    {
      "source": "testing/test_link_resolve.py",
      "target": "testing/test_link_resolve.py:subst_path_linux",
      "type": "contains"
    },
    {
      "source": "testing/test_link_resolve.py",
      "target": "testing/test_link_resolve.py:test_link_resolve",
      "type": "contains"
    },
    {
      "source": "testing/test_entry_points.py",
      "target": "testing/test_entry_points.py:test_pytest_entry_points_are_identical",
      "type": "contains"
    },
    {
      "source": "testing/test_helpconfig.py",
      "target": "testing/test_helpconfig.py:test_version_verbose",
      "type": "contains"
    },
    {
      "source": "testing/test_helpconfig.py",
      "target": "testing/test_helpconfig.py:test_version_less_verbose",
      "type": "contains"
    },
    {
      "source": "testing/test_helpconfig.py",
      "target": "testing/test_helpconfig.py:test_versions",
      "type": "contains"
    },
    {
      "source": "testing/test_helpconfig.py",
      "target": "testing/test_helpconfig.py:test_help",
      "type": "contains"
    },
    {
      "source": "testing/test_helpconfig.py",
      "target": "testing/test_helpconfig.py:test_none_help_param_raises_exception",
      "type": "contains"
    },
    {
      "source": "testing/test_helpconfig.py",
      "target": "testing/test_helpconfig.py:test_empty_help_param",
      "type": "contains"
    },
    {
      "source": "testing/test_helpconfig.py",
      "target": "testing/test_helpconfig.py:test_hookvalidation_unknown",
      "type": "contains"
    },
    {
      "source": "testing/test_helpconfig.py",
      "target": "testing/test_helpconfig.py:test_hookvalidation_optional",
      "type": "contains"
    },
    {
      "source": "testing/test_helpconfig.py",
      "target": "testing/test_helpconfig.py:test_traceconfig",
      "type": "contains"
    },
    {
      "source": "testing/test_helpconfig.py",
      "target": "testing/test_helpconfig.py:test_debug",
      "type": "contains"
    },
    {
      "source": "testing/test_helpconfig.py",
      "target": "testing/test_helpconfig.py:test_PYTEST_DEBUG",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py",
      "target": "testing/test_debugging.py:pdb_env",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py",
      "target": "testing/test_debugging.py:runpdb",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py",
      "target": "testing/test_debugging.py:runpdb_and_get_stdout",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py",
      "target": "testing/test_debugging.py:runpdb_and_get_report",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py",
      "target": "testing/test_debugging.py:custom_pdb_calls",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py",
      "target": "testing/test_debugging.py:custom_debugger_hook",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py",
      "target": "testing/test_debugging.py:TestPDB",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py",
      "target": "testing/test_debugging.py:TestDebuggingBreakpoints",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py",
      "target": "testing/test_debugging.py:TestTraceOption",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py",
      "target": "testing/test_debugging.py:test_trace_after_runpytest",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py",
      "target": "testing/test_debugging.py:test_quit_with_swallowed_SystemExit",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py",
      "target": "testing/test_debugging.py:test_pdb_suspends_fixture_capturing",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py",
      "target": "testing/test_debugging.py:test_pdbcls_via_local_module",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py",
      "target": "testing/test_debugging.py:test_raises_bdbquit_with_eoferror",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py",
      "target": "testing/test_debugging.py:test_pdb_wrapper_class_is_reused",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:runpdb_and_get_stdout",
      "target": "testing/test_debugging.py:runpdb",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:runpdb_and_get_report",
      "target": "testing/test_debugging.py:runpdb",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:custom_pdb_calls",
      "target": "testing/test_debugging.py:custom_pdb_calls._CustomPdb",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:custom_pdb_calls._CustomPdb",
      "target": "testing/test_debugging.py:custom_pdb_calls._CustomPdb.reset",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:custom_pdb_calls._CustomPdb",
      "target": "testing/test_debugging.py:custom_pdb_calls._CustomPdb.interaction",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:custom_debugger_hook",
      "target": "testing/test_debugging.py:custom_debugger_hook._CustomDebugger",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:custom_debugger_hook._CustomDebugger",
      "target": "testing/test_debugging.py:custom_debugger_hook._CustomDebugger.reset",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:custom_debugger_hook._CustomDebugger",
      "target": "testing/test_debugging.py:custom_debugger_hook._CustomDebugger.interaction",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:custom_debugger_hook._CustomDebugger",
      "target": "testing/test_debugging.py:custom_debugger_hook._CustomDebugger.set_trace",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.pdblist",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_on_fail",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_on_xfail",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_on_skip",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_on_top_level_raise_skiptest",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_on_BdbQuit",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_on_KeyboardInterrupt",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_unittest_postmortem",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_unittest_skip",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_print_captured_stdout_and_stderr",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_dont_print_empty_captured_stdout_and_stderr",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_print_captured_logs",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_print_captured_logs_nologging",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_interaction_exception",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_interaction_on_collection_issue181",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_interaction_on_internal_error",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_prevent_ConftestImportFailure_hiding_exception",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_interaction_capturing_simple",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_set_trace_kwargs",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_set_trace_interception",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_and_capsys",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_with_caplog_on_pdb_invocation",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_set_trace_capturing_afterwards",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_interaction_doctest",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_doctest_set_trace_quit",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_interaction_capturing_twice",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_with_injected_do_debug",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_without_capture",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_continue_with_recursive_debug",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_used_outside_test",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_used_in_generate_tests",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_collection_failure_is_shown",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_enter_leave_pdb_hooks_are_called",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_custom_cls",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_custom_cls_invalid",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_validate_usepdb_cls",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_custom_cls_without_pdb",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB",
      "target": "testing/test_debugging.py:TestPDB.test_pdb_custom_cls_with_set_trace",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.pdblist",
      "target": "testing/test_debugging.py:TestPDB.pdblist.mypdb",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_pdb_on_fail",
      "target": "testing/test_debugging.py:runpdb_and_get_report",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_pdb_on_xfail",
      "target": "testing/test_debugging.py:runpdb_and_get_report",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_pdb_on_skip",
      "target": "testing/test_debugging.py:runpdb_and_get_report",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_pdb_on_top_level_raise_skiptest",
      "target": "testing/test_debugging.py:runpdb_and_get_stdout",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_pdb_on_BdbQuit",
      "target": "testing/test_debugging.py:runpdb_and_get_report",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_pdb_on_KeyboardInterrupt",
      "target": "testing/test_debugging.py:runpdb_and_get_report",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_pdb_unittest_postmortem",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_pdb_unittest_skip",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_pdb_print_captured_stdout_and_stderr",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_pdb_dont_print_empty_captured_stdout_and_stderr",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_pdb_print_captured_logs",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_pdb_print_captured_logs_nologging",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_pdb_interaction_exception",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_pdb_interaction_on_collection_issue181",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_pdb_interaction_on_internal_error",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_pdb_interaction_capturing_simple",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_pdb_set_trace_kwargs",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_pdb_set_trace_interception",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_pdb_and_capsys",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_pdb_with_caplog_on_pdb_invocation",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_set_trace_capturing_afterwards",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_pdb_interaction_doctest",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_pdb_interaction_capturing_twice",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_pdb_with_injected_do_debug",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_pdb_without_capture",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_pdb_used_outside_test",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_pdb_used_in_generate_tests",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_enter_leave_pdb_hooks_are_called",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestPDB.test_pdb_custom_cls_with_set_trace",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestDebuggingBreakpoints",
      "target": "testing/test_debugging.py:TestDebuggingBreakpoints.test_sys_breakpointhook_configure_and_unconfigure",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestDebuggingBreakpoints",
      "target": "testing/test_debugging.py:TestDebuggingBreakpoints.test_pdb_custom_cls",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestDebuggingBreakpoints",
      "target": "testing/test_debugging.py:TestDebuggingBreakpoints.test_environ_custom_class",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestDebuggingBreakpoints",
      "target": "testing/test_debugging.py:TestDebuggingBreakpoints.test_sys_breakpoint_interception",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestDebuggingBreakpoints",
      "target": "testing/test_debugging.py:TestDebuggingBreakpoints.test_pdb_not_altered",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestDebuggingBreakpoints.test_sys_breakpoint_interception",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestDebuggingBreakpoints.test_pdb_not_altered",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestTraceOption",
      "target": "testing/test_debugging.py:TestTraceOption.test_trace_sets_breakpoint",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestTraceOption",
      "target": "testing/test_debugging.py:TestTraceOption.test_trace_with_parametrize_handles_shared_fixtureinfo",
      "type": "contains"
    },
    {
      "source": "testing/test_debugging.py:TestTraceOption.test_trace_sets_breakpoint",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:TestTraceOption.test_trace_with_parametrize_handles_shared_fixtureinfo",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:test_quit_with_swallowed_SystemExit",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_debugging.py:test_pdb_suspends_fixture_capturing",
      "target": "testing/test_debugging.py:TestPDB.flush",
      "type": "invokes"
    },
    {
      "source": "testing/test_cacheprovider.py",
      "target": "testing/test_cacheprovider.py:TestNewAPI",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py",
      "target": "testing/test_cacheprovider.py:test_cache_reportheader",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py",
      "target": "testing/test_cacheprovider.py:test_cache_reportheader_external_abspath",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py",
      "target": "testing/test_cacheprovider.py:test_cache_show",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py",
      "target": "testing/test_cacheprovider.py:TestLastFailed",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py",
      "target": "testing/test_cacheprovider.py:TestNewFirst",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py",
      "target": "testing/test_cacheprovider.py:TestReadme",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py",
      "target": "testing/test_cacheprovider.py:test_gitignore",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py",
      "target": "testing/test_cacheprovider.py:test_preserve_keys_order",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py",
      "target": "testing/test_cacheprovider.py:test_does_not_create_boilerplate_in_existing_dirs",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py",
      "target": "testing/test_cacheprovider.py:test_cachedir_tag",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py",
      "target": "testing/test_cacheprovider.py:test_clioption_with_cacheshow_and_help",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestNewAPI",
      "target": "testing/test_cacheprovider.py:TestNewAPI.test_config_cache_mkdir",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestNewAPI",
      "target": "testing/test_cacheprovider.py:TestNewAPI.test_config_cache_dataerror",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestNewAPI",
      "target": "testing/test_cacheprovider.py:TestNewAPI.test_cache_writefail_cachfile_silent",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestNewAPI",
      "target": "testing/test_cacheprovider.py:TestNewAPI.unwritable_cache_dir",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestNewAPI",
      "target": "testing/test_cacheprovider.py:TestNewAPI.test_cache_writefail_permissions",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestNewAPI",
      "target": "testing/test_cacheprovider.py:TestNewAPI.test_cache_failure_warns",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestNewAPI",
      "target": "testing/test_cacheprovider.py:TestNewAPI.test_config_cache",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestNewAPI",
      "target": "testing/test_cacheprovider.py:TestNewAPI.test_cachefuncarg",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestNewAPI",
      "target": "testing/test_cacheprovider.py:TestNewAPI.test_custom_rel_cache_dir",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestNewAPI",
      "target": "testing/test_cacheprovider.py:TestNewAPI.test_custom_abs_cache_dir",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestNewAPI",
      "target": "testing/test_cacheprovider.py:TestNewAPI.test_custom_cache_dir_with_env_var",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_usecase",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_failedfirst_order",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_failedfirst_order",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_difference_invocations",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_usecase_splice",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_xpass",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_non_serializable_parametrize",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_terminal_report_lastfailed",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_terminal_report_failedfirst",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_collectfailure",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_failure_subset",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_creates_cache_when_needed",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_xfail_not_considered_failure",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_xfail_strict_considered_failure",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_failed_changed_to_xfail_or_skip",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_lf_and_ff_prints_no_needless_message",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed",
      "target": "testing/test_cacheprovider.py:TestLastFailed.get_cached_last_failed",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_cache_cumulative",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_no_failures_behavior_all_passed",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_no_failures_behavior_empty_cache",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_skip_collection",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_skip_collection_with_nesting",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_with_known_failures_not_being_selected",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_args_with_deselected",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_with_class_items",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_with_all_filtered",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_packages",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_non_python_file_skipped",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_collectfailure",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_collectfailure.rlf",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_collectfailure",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_collectfailure.rlf",
      "type": "invokes"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_failure_subset",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_failure_subset.rlf",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_failure_subset",
      "target": "testing/test_cacheprovider.py:TestLastFailed.test_lastfailed_failure_subset.rlf",
      "type": "invokes"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed.test_xfail_not_considered_failure",
      "target": "testing/test_cacheprovider.py:TestLastFailed.get_cached_last_failed",
      "type": "invokes"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed.test_xfail_strict_considered_failure",
      "target": "testing/test_cacheprovider.py:TestLastFailed.get_cached_last_failed",
      "type": "invokes"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed.test_failed_changed_to_xfail_or_skip",
      "target": "testing/test_cacheprovider.py:TestLastFailed.get_cached_last_failed",
      "type": "invokes"
    },
    {
      "source": "testing/test_cacheprovider.py:TestLastFailed.test_cache_cumulative",
      "target": "testing/test_cacheprovider.py:TestLastFailed.get_cached_last_failed",
      "type": "invokes"
    },
    {
      "source": "testing/test_cacheprovider.py:TestNewFirst",
      "target": "testing/test_cacheprovider.py:TestNewFirst.test_newfirst_usecase",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestNewFirst",
      "target": "testing/test_cacheprovider.py:TestNewFirst.test_newfirst_parametrize",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestReadme",
      "target": "testing/test_cacheprovider.py:TestReadme.check_readme",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestReadme",
      "target": "testing/test_cacheprovider.py:TestReadme.test_readme_passed",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestReadme",
      "target": "testing/test_cacheprovider.py:TestReadme.test_readme_failed",
      "type": "contains"
    },
    {
      "source": "testing/test_cacheprovider.py:TestReadme.test_readme_passed",
      "target": "testing/test_cacheprovider.py:TestReadme.check_readme",
      "type": "invokes"
    },
    {
      "source": "testing/test_cacheprovider.py:TestReadme.test_readme_failed",
      "target": "testing/test_cacheprovider.py:TestReadme.check_readme",
      "type": "invokes"
    },
    {
      "source": "testing/test_meta.py",
      "target": "testing/test_meta.py:_modules",
      "type": "contains"
    },
    {
      "source": "testing/test_meta.py",
      "target": "testing/test_meta.py:test_no_warnings",
      "type": "contains"
    },
    {
      "source": "testing/test_unraisableexception.py",
      "target": "testing/test_unraisableexception.py:test_unraisable",
      "type": "contains"
    },
    {
      "source": "testing/test_unraisableexception.py",
      "target": "testing/test_unraisableexception.py:test_unraisable_in_setup",
      "type": "contains"
    },
    {
      "source": "testing/test_unraisableexception.py",
      "target": "testing/test_unraisableexception.py:test_unraisable_in_teardown",
      "type": "contains"
    },
    {
      "source": "testing/test_unraisableexception.py",
      "target": "testing/test_unraisableexception.py:test_unraisable_warning_error",
      "type": "contains"
    },
    {
      "source": "testing/test_findpaths.py",
      "target": "testing/test_findpaths.py:TestLoadConfigDictFromFile",
      "type": "contains"
    },
    {
      "source": "testing/test_findpaths.py",
      "target": "testing/test_findpaths.py:TestCommonAncestor",
      "type": "contains"
    },
    {
      "source": "testing/test_findpaths.py",
      "target": "testing/test_findpaths.py:test_get_dirs_from_args",
      "type": "contains"
    },
    {
      "source": "testing/test_findpaths.py",
      "target": "testing/test_findpaths.py:test_is_fs_root",
      "type": "contains"
    },
    {
      "source": "testing/test_findpaths.py:TestLoadConfigDictFromFile",
      "target": "testing/test_findpaths.py:TestLoadConfigDictFromFile.test_empty_pytest_ini",
      "type": "contains"
    },
    {
      "source": "testing/test_findpaths.py:TestLoadConfigDictFromFile",
      "target": "testing/test_findpaths.py:TestLoadConfigDictFromFile.test_pytest_ini",
      "type": "contains"
    },
    {
      "source": "testing/test_findpaths.py:TestLoadConfigDictFromFile",
      "target": "testing/test_findpaths.py:TestLoadConfigDictFromFile.test_custom_ini",
      "type": "contains"
    },
    {
      "source": "testing/test_findpaths.py:TestLoadConfigDictFromFile",
      "target": "testing/test_findpaths.py:TestLoadConfigDictFromFile.test_custom_ini_without_section",
      "type": "contains"
    },
    {
      "source": "testing/test_findpaths.py:TestLoadConfigDictFromFile",
      "target": "testing/test_findpaths.py:TestLoadConfigDictFromFile.test_custom_cfg_file",
      "type": "contains"
    },
    {
      "source": "testing/test_findpaths.py:TestLoadConfigDictFromFile",
      "target": "testing/test_findpaths.py:TestLoadConfigDictFromFile.test_valid_cfg_file",
      "type": "contains"
    },
    {
      "source": "testing/test_findpaths.py:TestLoadConfigDictFromFile",
      "target": "testing/test_findpaths.py:TestLoadConfigDictFromFile.test_unsupported_pytest_section_in_cfg_file",
      "type": "contains"
    },
    {
      "source": "testing/test_findpaths.py:TestLoadConfigDictFromFile",
      "target": "testing/test_findpaths.py:TestLoadConfigDictFromFile.test_invalid_toml_file",
      "type": "contains"
    },
    {
      "source": "testing/test_findpaths.py:TestLoadConfigDictFromFile",
      "target": "testing/test_findpaths.py:TestLoadConfigDictFromFile.test_custom_toml_file",
      "type": "contains"
    },
    {
      "source": "testing/test_findpaths.py:TestLoadConfigDictFromFile",
      "target": "testing/test_findpaths.py:TestLoadConfigDictFromFile.test_valid_toml_file",
      "type": "contains"
    },
    {
      "source": "testing/test_findpaths.py:TestCommonAncestor",
      "target": "testing/test_findpaths.py:TestCommonAncestor.test_has_ancestor",
      "type": "contains"
    },
    {
      "source": "testing/test_findpaths.py:TestCommonAncestor",
      "target": "testing/test_findpaths.py:TestCommonAncestor.test_single_dir",
      "type": "contains"
    },
    {
      "source": "testing/test_findpaths.py:TestCommonAncestor",
      "target": "testing/test_findpaths.py:TestCommonAncestor.test_single_file",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:mock_config",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:TestImportHookInstallation",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:TestBinReprIntegration",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:callop",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:callequal",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:TestAssert_reprcompare",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_dataclass",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_namedtuple",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:TestFormatExplanation",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:TestTruncateExplanation",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:test_python25_compile_issue257",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:test_rewritten",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:test_reprcompare_notin",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:test_reprcompare_whitespaces",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:test_pytest_assertrepr_compare_integration",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:test_sequence_comparison_uses_repr",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:test_assertrepr_loaded_per_dir",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:test_assertion_options",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:test_triple_quoted_string_issue113",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:test_traceback_failure",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:test_exception_handling_no_traceback",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:test_warn_missing",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:test_recursion_source_decode",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:test_AssertionError_message",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:test_diff_newline_at_end",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:test_assert_tuple_warning",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:test_assert_indirect_tuple_no_warning",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:test_assert_with_unicode",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:test_raise_unprintable_assertion_error",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:test_raise_assertion_error_raising_repr",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:test_issue_1944",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:test_exit_from_assertrepr_compare",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:test_assertion_location_with_coverage",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py",
      "target": "testing/test_assertion.py:test_reprcompare_verbose_long",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:mock_config",
      "target": "testing/test_assertion.py:mock_config.Config",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:mock_config",
      "target": "testing/test_assertion.py:mock_config.Config",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:mock_config.Config",
      "target": "testing/test_assertion.py:mock_config.Config.getoption",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestImportHookInstallation",
      "target": "testing/test_assertion.py:TestImportHookInstallation.test_conftest_assertion_rewrite",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestImportHookInstallation",
      "target": "testing/test_assertion.py:TestImportHookInstallation.test_rewrite_assertions_pytester_plugin",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestImportHookInstallation",
      "target": "testing/test_assertion.py:TestImportHookInstallation.test_pytest_plugins_rewrite",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestImportHookInstallation",
      "target": "testing/test_assertion.py:TestImportHookInstallation.test_pytest_plugins_rewrite_module_names",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestImportHookInstallation",
      "target": "testing/test_assertion.py:TestImportHookInstallation.test_pytest_plugins_rewrite_module_names_correctly",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestImportHookInstallation",
      "target": "testing/test_assertion.py:TestImportHookInstallation.test_installed_plugin_rewrite",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestImportHookInstallation",
      "target": "testing/test_assertion.py:TestImportHookInstallation.test_rewrite_ast",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestImportHookInstallation",
      "target": "testing/test_assertion.py:TestImportHookInstallation.test_register_assert_rewrite_checks_types",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestBinReprIntegration",
      "target": "testing/test_assertion.py:TestBinReprIntegration.test_pytest_assertrepr_compare_called",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:callop",
      "target": "testing/test_assertion.py:mock_config",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:callequal",
      "target": "testing/test_assertion.py:callop",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_different_types",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_summary",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_text_diff",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_text_skipping",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_text_skipping_verbose",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_multiline_text_diff",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_bytes_diff_normal",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_bytes_diff_verbose",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_list",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_iterable_full_diff",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_iterable_quiet",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_iterable_full_diff_ci",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_list_different_lengths",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_list_wrap_for_multiple_lines",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_list_wrap_for_width_rewrap_same_length",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_list_dont_wrap_strings",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_dict_wrap",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_dict",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_dict_omitting",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_dict_omitting_with_verbosity_1",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_dict_omitting_with_verbosity_2",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_dict_different_items",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_sequence_different_items",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_set",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_frozenzet",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_Sequence",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_list_tuples",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_list_bad_repr",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_one_repr_empty",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_repr_no_exc",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_unicode",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_nonascii_text",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_format_nonascii_explanation",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_mojibake",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_nfc_nfd_same_string",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_different_types",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_summary",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_text_diff",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_text_skipping",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_text_skipping_verbose",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_multiline_text_diff",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_bytes_diff_normal",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_bytes_diff_verbose",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_list",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_iterable_full_diff",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_iterable_quiet",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_list_different_lengths",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_list_wrap_for_multiple_lines",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_list_wrap_for_width_rewrap_same_length",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_list_dont_wrap_strings",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_dict_wrap",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_dict",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_dict_omitting",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_dict_omitting_with_verbosity_1",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_dict_omitting_with_verbosity_2",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_dict_different_items",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_sequence_different_items",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_set",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_frozenzet",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_Sequence",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_Sequence.TestSequence",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_Sequence",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_Sequence.TestSequence",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_Sequence",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_Sequence.TestSequence",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_Sequence.TestSequence.__getitem__",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_Sequence.TestSequence",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_Sequence.TestSequence.__len__",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_Sequence.TestSequence",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_Sequence.TestSequence.__setitem__",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_Sequence.TestSequence",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_Sequence.TestSequence.__delitem__",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_Sequence.TestSequence",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_Sequence.TestSequence.insert",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_list_tuples",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_list_bad_repr",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_list_bad_repr.A",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_list_bad_repr",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_list_bad_repr.A",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_list_bad_repr",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_list_bad_repr.A",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_list_bad_repr.A.__repr__",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_one_repr_empty",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_one_repr_empty.A",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_one_repr_empty",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_one_repr_empty.A",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_one_repr_empty",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_one_repr_empty.A",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_one_repr_empty.A.__repr__",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_repr_no_exc",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_unicode",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_nonascii_text",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_nonascii_text.A",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_nonascii_text",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_nonascii_text.A",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_nonascii_text",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_nonascii_text.A",
      "target": "testing/test_assertion.py:TestAssert_reprcompare.test_nonascii_text.A.__repr__",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_mojibake",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare.test_nfc_nfd_same_string",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_dataclass",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_dataclass.test_dataclasses",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_dataclass",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_dataclass.test_recursive_dataclasses",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_dataclass",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_dataclass.test_recursive_dataclasses_verbose",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_dataclass",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_dataclass.test_dataclasses_verbose",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_dataclass",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_dataclass.test_dataclasses_with_attribute_comparison_off",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_dataclass",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_dataclass.test_comparing_two_different_data_classes",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_dataclass",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_dataclass.test_data_classes_with_custom_eq",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_dataclass",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_dataclass.test_data_classes_with_initvar",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_recursive",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_recursive_verbose",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_verbose",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_attribute_comparison_off",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_comparing_two_different_attrs_classes",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_auto_detect_and_custom_eq",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_custom_eq",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs.SimpleDataObject",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs.SimpleDataObject",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_recursive",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_recursive.OtherDataObject",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_recursive",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_recursive.OtherDataObject",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_recursive",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_recursive.SimpleDataObject",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_recursive",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_recursive.SimpleDataObject",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_recursive",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_recursive_verbose",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_recursive_verbose.OtherDataObject",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_recursive_verbose",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_recursive_verbose.OtherDataObject",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_recursive_verbose",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_recursive_verbose.SimpleDataObject",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_recursive_verbose",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_recursive_verbose.SimpleDataObject",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_recursive_verbose",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_verbose",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_verbose.SimpleDataObject",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_verbose",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_verbose.SimpleDataObject",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_verbose",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_attribute_comparison_off",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_attribute_comparison_off.SimpleDataObject",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_attribute_comparison_off",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_attribute_comparison_off.SimpleDataObject",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_attribute_comparison_off",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_comparing_two_different_attrs_classes",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_comparing_two_different_attrs_classes.SimpleDataObjectOne",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_comparing_two_different_attrs_classes",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_comparing_two_different_attrs_classes.SimpleDataObjectOne",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_comparing_two_different_attrs_classes",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_comparing_two_different_attrs_classes.SimpleDataObjectTwo",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_comparing_two_different_attrs_classes",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_comparing_two_different_attrs_classes.SimpleDataObjectTwo",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_comparing_two_different_attrs_classes",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_auto_detect_and_custom_eq",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_auto_detect_and_custom_eq.SimpleDataObject",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_auto_detect_and_custom_eq",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_auto_detect_and_custom_eq.SimpleDataObject",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_auto_detect_and_custom_eq",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_auto_detect_and_custom_eq.SimpleDataObject",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_auto_detect_and_custom_eq.SimpleDataObject.__eq__",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_custom_eq",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_custom_eq.SimpleDataObject",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_custom_eq",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_custom_eq.SimpleDataObject",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_custom_eq",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_custom_eq.SimpleDataObject",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_attrsclass.test_attrs_with_custom_eq.SimpleDataObject.__eq__",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_namedtuple",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_namedtuple.test_namedtuple",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_namedtuple",
      "target": "testing/test_assertion.py:TestAssert_reprcompare_namedtuple.test_comparing_two_different_namedtuple",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_namedtuple.test_namedtuple",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestAssert_reprcompare_namedtuple.test_comparing_two_different_namedtuple",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:TestFormatExplanation",
      "target": "testing/test_assertion.py:TestFormatExplanation.test_special_chars_full",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestFormatExplanation",
      "target": "testing/test_assertion.py:TestFormatExplanation.test_fmt_simple",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestFormatExplanation",
      "target": "testing/test_assertion.py:TestFormatExplanation.test_fmt_where",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestFormatExplanation",
      "target": "testing/test_assertion.py:TestFormatExplanation.test_fmt_and",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestFormatExplanation",
      "target": "testing/test_assertion.py:TestFormatExplanation.test_fmt_where_nested",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestFormatExplanation",
      "target": "testing/test_assertion.py:TestFormatExplanation.test_fmt_newline",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestFormatExplanation",
      "target": "testing/test_assertion.py:TestFormatExplanation.test_fmt_newline_escaped",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestFormatExplanation",
      "target": "testing/test_assertion.py:TestFormatExplanation.test_fmt_newline_before_where",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestFormatExplanation",
      "target": "testing/test_assertion.py:TestFormatExplanation.test_fmt_multi_newline_before_where",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestTruncateExplanation",
      "target": "testing/test_assertion.py:TestTruncateExplanation.test_doesnt_truncate_when_input_is_empty_list",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestTruncateExplanation",
      "target": "testing/test_assertion.py:TestTruncateExplanation.test_doesnt_truncate_at_when_input_is_5_lines_and_LT_max_chars",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestTruncateExplanation",
      "target": "testing/test_assertion.py:TestTruncateExplanation.test_truncates_at_8_lines_when_given_list_of_empty_strings",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestTruncateExplanation",
      "target": "testing/test_assertion.py:TestTruncateExplanation.test_truncates_at_8_lines_when_first_8_lines_are_LT_max_chars",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestTruncateExplanation",
      "target": "testing/test_assertion.py:TestTruncateExplanation.test_truncates_at_8_lines_when_there_is_one_line_to_remove",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestTruncateExplanation",
      "target": "testing/test_assertion.py:TestTruncateExplanation.test_truncates_edgecase_when_truncation_message_makes_the_result_longer_for_chars",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestTruncateExplanation",
      "target": "testing/test_assertion.py:TestTruncateExplanation.test_truncates_edgecase_when_truncation_message_makes_the_result_longer_for_lines",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestTruncateExplanation",
      "target": "testing/test_assertion.py:TestTruncateExplanation.test_truncates_at_8_lines_when_first_8_lines_are_EQ_max_chars",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestTruncateExplanation",
      "target": "testing/test_assertion.py:TestTruncateExplanation.test_truncates_at_4_lines_when_first_4_lines_are_GT_max_chars",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestTruncateExplanation",
      "target": "testing/test_assertion.py:TestTruncateExplanation.test_truncates_at_1_line_when_first_line_is_GT_max_chars",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:TestTruncateExplanation",
      "target": "testing/test_assertion.py:TestTruncateExplanation.test_full_output_truncated",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:test_reprcompare_notin",
      "target": "testing/test_assertion.py:callop",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:test_reprcompare_whitespaces",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:test_exit_from_assertrepr_compare",
      "target": "testing/test_assertion.py:test_exit_from_assertrepr_compare.raise_exit",
      "type": "contains"
    },
    {
      "source": "testing/test_assertion.py:test_exit_from_assertrepr_compare",
      "target": "testing/test_assertion.py:callequal",
      "type": "invokes"
    },
    {
      "source": "testing/test_assertion.py:test_reprcompare_verbose_long",
      "target": "testing/test_assertion.py:callop",
      "type": "invokes"
    },
    {
      "source": "testing/test_warning_types.py",
      "target": "testing/test_warning_types.py:test_warning_types",
      "type": "contains"
    },
    {
      "source": "testing/test_warning_types.py",
      "target": "testing/test_warning_types.py:test_pytest_warnings_repr_integration_test",
      "type": "contains"
    },
    {
      "source": "testing/test_warning_types.py",
      "target": "testing/test_warning_types.py:test_warn_explicit_for_annotates_errors_with_location",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_make_hook_recorder",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_parseconfig",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_pytester_runs_with_plugin",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_pytester_with_doctest",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_runresult_assertion_on_xfail",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_runresult_assertion_on_xpassed",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_xpassed_with_strict_is_considered_a_failure",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:make_holder",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_hookrecorder_basic",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_makepyfile_unicode",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_makepyfile_utf8",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:TestInlineRunModulesCleanup",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_assert_outcomes_after_pytest_error",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_cwd_snapshot",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:TestSysModulesSnapshot",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:TestSysPathsSnapshot",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_pytester_subprocess",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_pytester_subprocess_via_runpytest_arg",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_unicode_args",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_pytester_run_no_timeout",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_pytester_run_with_timeout",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_pytester_run_timeout_expires",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_linematcher_with_nonlist",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_linematcher_match_failure",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_linematcher_consecutive",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_linematcher_no_matching",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_linematcher_no_matching_after_match",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_linematcher_string_api",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_pytest_addopts_before_pytester",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_run_stdin",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_popen_stdin_pipe",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_popen_stdin_bytes",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_popen_default_stdin_stderr_and_stdin_None",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_spawn_uses_tmphome",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_run_result_repr",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_pytester_outcomes_with_multiple_errors",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_parse_summary_line_always_plural",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_makefile_joins_absolute_path",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_pytester_makefile_dot_prefixes_extension_with_warning",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_pytester_assert_outcomes_warnings",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py",
      "target": "testing/test_pytester.py:test_pytester_outcomes_deselected",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py:test_make_hook_recorder",
      "target": "testing/test_pytester.py:test_make_hook_recorder.rep",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py:test_make_hook_recorder",
      "target": "testing/test_pytester.py:test_make_hook_recorder.rep2",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py:make_holder",
      "target": "testing/test_pytester.py:make_holder.apiclass",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py:make_holder",
      "target": "testing/test_pytester.py:make_holder.pytest_xyz",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py:make_holder",
      "target": "testing/test_pytester.py:make_holder.pytest_xyz_noarg",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py:make_holder.apiclass",
      "target": "testing/test_pytester.py:make_holder.apiclass.pytest_xyz",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py:make_holder.apiclass",
      "target": "testing/test_pytester.py:make_holder.apiclass.pytest_xyz_noarg",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py:TestInlineRunModulesCleanup",
      "target": "testing/test_pytester.py:TestInlineRunModulesCleanup.test_inline_run_test_module_not_cleaned_up",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py:TestInlineRunModulesCleanup",
      "target": "testing/test_pytester.py:TestInlineRunModulesCleanup.spy_factory",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py:TestInlineRunModulesCleanup",
      "target": "testing/test_pytester.py:TestInlineRunModulesCleanup.test_inline_run_taking_and_restoring_a_sys_modules_snapshot",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py:TestInlineRunModulesCleanup",
      "target": "testing/test_pytester.py:TestInlineRunModulesCleanup.test_inline_run_sys_modules_snapshot_restore_preserving_modules",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py:TestInlineRunModulesCleanup",
      "target": "testing/test_pytester.py:TestInlineRunModulesCleanup.test_external_test_module_imports_not_cleaned_up",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py:TestInlineRunModulesCleanup.spy_factory",
      "target": "testing/test_pytester.py:TestInlineRunModulesCleanup.spy_factory.SysModulesSnapshotSpy",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py:TestInlineRunModulesCleanup.spy_factory.SysModulesSnapshotSpy",
      "target": "testing/test_pytester.py:TestInlineRunModulesCleanup.spy_factory.SysModulesSnapshotSpy.restore",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py:TestInlineRunModulesCleanup.test_inline_run_taking_and_restoring_a_sys_modules_snapshot",
      "target": "testing/test_pytester.py:TestInlineRunModulesCleanup.spy_factory",
      "type": "invokes"
    },
    {
      "source": "testing/test_pytester.py:TestInlineRunModulesCleanup.test_inline_run_sys_modules_snapshot_restore_preserving_modules",
      "target": "testing/test_pytester.py:TestInlineRunModulesCleanup.spy_factory",
      "type": "invokes"
    },
    {
      "source": "testing/test_pytester.py:TestSysModulesSnapshot",
      "target": "testing/test_pytester.py:TestSysModulesSnapshot.test_remove_added",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py:TestSysModulesSnapshot",
      "target": "testing/test_pytester.py:TestSysModulesSnapshot.test_add_removed",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py:TestSysModulesSnapshot",
      "target": "testing/test_pytester.py:TestSysModulesSnapshot.test_restore_reloaded",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py:TestSysModulesSnapshot",
      "target": "testing/test_pytester.py:TestSysModulesSnapshot.test_preserve_modules",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py:TestSysModulesSnapshot",
      "target": "testing/test_pytester.py:TestSysModulesSnapshot.test_preserve_container",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py:TestSysModulesSnapshot.test_preserve_modules",
      "target": "testing/test_pytester.py:TestSysModulesSnapshot.test_preserve_modules.preserve",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py:TestSysPathsSnapshot",
      "target": "testing/test_pytester.py:TestSysPathsSnapshot.path",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py:TestSysPathsSnapshot",
      "target": "testing/test_pytester.py:TestSysPathsSnapshot.test_restore",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py:TestSysPathsSnapshot",
      "target": "testing/test_pytester.py:TestSysPathsSnapshot.test_preserve_container",
      "type": "contains"
    },
    {
      "source": "testing/test_pytester.py:TestSysPathsSnapshot.test_restore",
      "target": "testing/test_pytester.py:TestSysPathsSnapshot.path",
      "type": "invokes"
    },
    {
      "source": "testing/test_argcomplete.py",
      "target": "testing/test_argcomplete.py:equal_with_bash",
      "type": "contains"
    },
    {
      "source": "testing/test_argcomplete.py",
      "target": "testing/test_argcomplete.py:_wrapcall",
      "type": "contains"
    },
    {
      "source": "testing/test_argcomplete.py",
      "target": "testing/test_argcomplete.py:FilesCompleter",
      "type": "contains"
    },
    {
      "source": "testing/test_argcomplete.py",
      "target": "testing/test_argcomplete.py:TestArgComplete",
      "type": "contains"
    },
    {
      "source": "testing/test_argcomplete.py:FilesCompleter",
      "target": "testing/test_argcomplete.py:FilesCompleter.__call__",
      "type": "contains"
    },
    {
      "source": "testing/test_argcomplete.py:FilesCompleter.__call__",
      "target": "testing/test_argcomplete.py:_wrapcall",
      "type": "invokes"
    },
    {
      "source": "testing/test_argcomplete.py:TestArgComplete",
      "target": "testing/test_argcomplete.py:TestArgComplete.test_compare_with_compgen",
      "type": "contains"
    },
    {
      "source": "testing/test_argcomplete.py:TestArgComplete",
      "target": "testing/test_argcomplete.py:TestArgComplete.test_remove_dir_prefix",
      "type": "contains"
    },
    {
      "source": "testing/test_argcomplete.py:TestArgComplete.test_compare_with_compgen",
      "target": "testing/test_argcomplete.py:FilesCompleter",
      "type": "invokes"
    },
    {
      "source": "testing/test_argcomplete.py:TestArgComplete.test_compare_with_compgen",
      "target": "testing/test_argcomplete.py:equal_with_bash",
      "type": "invokes"
    },
    {
      "source": "testing/test_argcomplete.py:TestArgComplete.test_remove_dir_prefix",
      "target": "testing/test_argcomplete.py:equal_with_bash",
      "type": "invokes"
    },
    {
      "source": "testing/test_argcomplete.py:TestArgComplete.test_remove_dir_prefix",
      "target": "testing/test_argcomplete.py:FilesCompleter",
      "type": "invokes"
    },
    {
      "source": "testing/test_mark_expression.py",
      "target": "testing/test_mark_expression.py:evaluate",
      "type": "contains"
    },
    {
      "source": "testing/test_mark_expression.py",
      "target": "testing/test_mark_expression.py:test_empty_is_false",
      "type": "contains"
    },
    {
      "source": "testing/test_mark_expression.py",
      "target": "testing/test_mark_expression.py:test_basic",
      "type": "contains"
    },
    {
      "source": "testing/test_mark_expression.py",
      "target": "testing/test_mark_expression.py:test_syntax_oddeties",
      "type": "contains"
    },
    {
      "source": "testing/test_mark_expression.py",
      "target": "testing/test_mark_expression.py:test_backslash_not_treated_specially",
      "type": "contains"
    },
    {
      "source": "testing/test_mark_expression.py",
      "target": "testing/test_mark_expression.py:test_syntax_errors",
      "type": "contains"
    },
    {
      "source": "testing/test_mark_expression.py",
      "target": "testing/test_mark_expression.py:test_valid_idents",
      "type": "contains"
    },
    {
      "source": "testing/test_mark_expression.py",
      "target": "testing/test_mark_expression.py:test_invalid_idents",
      "type": "contains"
    },
    {
      "source": "testing/test_mark_expression.py:test_empty_is_false",
      "target": "testing/test_mark_expression.py:evaluate",
      "type": "invokes"
    },
    {
      "source": "testing/test_mark_expression.py:test_basic",
      "target": "testing/test_mark_expression.py:evaluate",
      "type": "invokes"
    },
    {
      "source": "testing/test_mark_expression.py:test_syntax_oddeties",
      "target": "testing/test_mark_expression.py:evaluate",
      "type": "invokes"
    },
    {
      "source": "testing/test_mark_expression.py:test_backslash_not_treated_specially",
      "target": "testing/test_mark_expression.py:evaluate",
      "type": "invokes"
    },
    {
      "source": "testing/test_mark_expression.py:test_syntax_errors",
      "target": "testing/test_mark_expression.py:evaluate",
      "type": "invokes"
    },
    {
      "source": "testing/test_mark_expression.py:test_valid_idents",
      "target": "testing/test_mark_expression.py:evaluate",
      "type": "invokes"
    },
    {
      "source": "testing/test_mark_expression.py:test_invalid_idents",
      "target": "testing/test_mark_expression.py:evaluate",
      "type": "invokes"
    },
    {
      "source": "testing/test_main.py",
      "target": "testing/test_main.py:test_wrap_session_notify_exception",
      "type": "contains"
    },
    {
      "source": "testing/test_main.py",
      "target": "testing/test_main.py:test_wrap_session_exit_sessionfinish",
      "type": "contains"
    },
    {
      "source": "testing/test_main.py",
      "target": "testing/test_main.py:test_validate_basetemp_ok",
      "type": "contains"
    },
    {
      "source": "testing/test_main.py",
      "target": "testing/test_main.py:test_validate_basetemp_fails",
      "type": "contains"
    },
    {
      "source": "testing/test_main.py",
      "target": "testing/test_main.py:test_validate_basetemp_integration",
      "type": "contains"
    },
    {
      "source": "testing/test_main.py",
      "target": "testing/test_main.py:TestResolveCollectionArgument",
      "type": "contains"
    },
    {
      "source": "testing/test_main.py",
      "target": "testing/test_main.py:test_module_full_path_without_drive",
      "type": "contains"
    },
    {
      "source": "testing/test_main.py:TestResolveCollectionArgument",
      "target": "testing/test_main.py:TestResolveCollectionArgument.invocation_path",
      "type": "contains"
    },
    {
      "source": "testing/test_main.py:TestResolveCollectionArgument",
      "target": "testing/test_main.py:TestResolveCollectionArgument.test_file",
      "type": "contains"
    },
    {
      "source": "testing/test_main.py:TestResolveCollectionArgument",
      "target": "testing/test_main.py:TestResolveCollectionArgument.test_dir",
      "type": "contains"
    },
    {
      "source": "testing/test_main.py:TestResolveCollectionArgument",
      "target": "testing/test_main.py:TestResolveCollectionArgument.test_pypath",
      "type": "contains"
    },
    {
      "source": "testing/test_main.py:TestResolveCollectionArgument",
      "target": "testing/test_main.py:TestResolveCollectionArgument.test_parametrized_name_with_colons",
      "type": "contains"
    },
    {
      "source": "testing/test_main.py:TestResolveCollectionArgument",
      "target": "testing/test_main.py:TestResolveCollectionArgument.test_does_not_exist",
      "type": "contains"
    },
    {
      "source": "testing/test_main.py:TestResolveCollectionArgument",
      "target": "testing/test_main.py:TestResolveCollectionArgument.test_absolute_paths_are_resolved_correctly",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py",
      "target": "testing/test_tmpdir.py:test_tmp_path_fixture",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py",
      "target": "testing/test_tmpdir.py:FakeConfig",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py",
      "target": "testing/test_tmpdir.py:TestTmpPathHandler",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py",
      "target": "testing/test_tmpdir.py:TestConfigTmpPath",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py",
      "target": "testing/test_tmpdir.py:test_mktemp",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py",
      "target": "testing/test_tmpdir.py:test_tmp_path_always_is_realpath",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py",
      "target": "testing/test_tmpdir.py:test_tmp_path_too_long_on_parametrization",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py",
      "target": "testing/test_tmpdir.py:test_tmp_path_factory",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py",
      "target": "testing/test_tmpdir.py:test_tmp_path_fallback_tox_env",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py",
      "target": "testing/test_tmpdir.py:break_getuser",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py",
      "target": "testing/test_tmpdir.py:test_tmp_path_fallback_uid_not_found",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py",
      "target": "testing/test_tmpdir.py:test_get_user_uid_not_found",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py",
      "target": "testing/test_tmpdir.py:test_get_user",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py",
      "target": "testing/test_tmpdir.py:TestNumberedDir",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py",
      "target": "testing/test_tmpdir.py:TestRmRf",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py",
      "target": "testing/test_tmpdir.py:attempt_symlink_to",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py",
      "target": "testing/test_tmpdir.py:test_basetemp_with_read_only_files",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py",
      "target": "testing/test_tmpdir.py:test_tmp_path_factory_handles_invalid_dir_characters",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py",
      "target": "testing/test_tmpdir.py:test_tmp_path_factory_create_directory_with_safe_permissions",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py",
      "target": "testing/test_tmpdir.py:test_tmp_path_factory_fixes_up_world_readable_permissions",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py:FakeConfig",
      "target": "testing/test_tmpdir.py:FakeConfig.trace",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py:FakeConfig",
      "target": "testing/test_tmpdir.py:FakeConfig.get",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py:FakeConfig",
      "target": "testing/test_tmpdir.py:FakeConfig.getini",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py:FakeConfig",
      "target": "testing/test_tmpdir.py:FakeConfig.option",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py:TestTmpPathHandler",
      "target": "testing/test_tmpdir.py:TestTmpPathHandler.test_mktemp",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py:TestTmpPathHandler",
      "target": "testing/test_tmpdir.py:TestTmpPathHandler.test_tmppath_relative_basetemp_absolute",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py:TestTmpPathHandler.test_mktemp",
      "target": "testing/test_tmpdir.py:FakeConfig",
      "type": "invokes"
    },
    {
      "source": "testing/test_tmpdir.py:TestTmpPathHandler.test_tmppath_relative_basetemp_absolute",
      "target": "testing/test_tmpdir.py:FakeConfig",
      "type": "invokes"
    },
    {
      "source": "testing/test_tmpdir.py:TestConfigTmpPath",
      "target": "testing/test_tmpdir.py:TestConfigTmpPath.test_getbasetemp_custom_removes_old",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py:TestConfigTmpPath",
      "target": "testing/test_tmpdir.py:TestConfigTmpPath.test_policy_failed_removes_only_passed_dir",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py:TestConfigTmpPath",
      "target": "testing/test_tmpdir.py:TestConfigTmpPath.test_policy_failed_removes_basedir_when_all_passed",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py:TestConfigTmpPath",
      "target": "testing/test_tmpdir.py:TestConfigTmpPath.test_policy_failed_removes_dir_when_skipped_from_fixture",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py:TestConfigTmpPath",
      "target": "testing/test_tmpdir.py:TestConfigTmpPath.test_policy_all_keeps_dir_when_skipped_from_fixture",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py:test_tmp_path_always_is_realpath",
      "target": "testing/test_tmpdir.py:attempt_symlink_to",
      "type": "invokes"
    },
    {
      "source": "testing/test_tmpdir.py:TestNumberedDir",
      "target": "testing/test_tmpdir.py:TestNumberedDir.test_make",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py:TestNumberedDir",
      "target": "testing/test_tmpdir.py:TestNumberedDir.test_cleanup_lock_create",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py:TestNumberedDir",
      "target": "testing/test_tmpdir.py:TestNumberedDir.test_lock_register_cleanup_removal",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py:TestNumberedDir",
      "target": "testing/test_tmpdir.py:TestNumberedDir._do_cleanup",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py:TestNumberedDir",
      "target": "testing/test_tmpdir.py:TestNumberedDir.test_cleanup_keep",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py:TestNumberedDir",
      "target": "testing/test_tmpdir.py:TestNumberedDir.test_cleanup_keep_0",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py:TestNumberedDir",
      "target": "testing/test_tmpdir.py:TestNumberedDir.test_cleanup_locked",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py:TestNumberedDir",
      "target": "testing/test_tmpdir.py:TestNumberedDir.test_cleanup_ignores_symlink",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py:TestNumberedDir",
      "target": "testing/test_tmpdir.py:TestNumberedDir.test_removal_accepts_lock",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py:TestNumberedDir._do_cleanup",
      "target": "testing/test_tmpdir.py:TestNumberedDir.test_make",
      "type": "invokes"
    },
    {
      "source": "testing/test_tmpdir.py:TestNumberedDir.test_cleanup_keep",
      "target": "testing/test_tmpdir.py:TestNumberedDir._do_cleanup",
      "type": "invokes"
    },
    {
      "source": "testing/test_tmpdir.py:TestNumberedDir.test_cleanup_keep_0",
      "target": "testing/test_tmpdir.py:TestNumberedDir._do_cleanup",
      "type": "invokes"
    },
    {
      "source": "testing/test_tmpdir.py:TestNumberedDir.test_cleanup_ignores_symlink",
      "target": "testing/test_tmpdir.py:TestNumberedDir._do_cleanup",
      "type": "invokes"
    },
    {
      "source": "testing/test_tmpdir.py:TestNumberedDir.test_cleanup_ignores_symlink",
      "target": "testing/test_tmpdir.py:attempt_symlink_to",
      "type": "invokes"
    },
    {
      "source": "testing/test_tmpdir.py:TestRmRf",
      "target": "testing/test_tmpdir.py:TestRmRf.test_rm_rf",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py:TestRmRf",
      "target": "testing/test_tmpdir.py:TestRmRf.test_rm_rf_with_read_only_file",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py:TestRmRf",
      "target": "testing/test_tmpdir.py:TestRmRf.chmod_r",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py:TestRmRf",
      "target": "testing/test_tmpdir.py:TestRmRf.test_rm_rf_with_read_only_directory",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py:TestRmRf",
      "target": "testing/test_tmpdir.py:TestRmRf.test_on_rm_rf_error",
      "type": "contains"
    },
    {
      "source": "testing/test_tmpdir.py:TestRmRf.test_rm_rf_with_read_only_file",
      "target": "testing/test_tmpdir.py:TestRmRf.chmod_r",
      "type": "invokes"
    },
    {
      "source": "testing/test_tmpdir.py:TestRmRf.test_rm_rf_with_read_only_directory",
      "target": "testing/test_tmpdir.py:TestRmRf.chmod_r",
      "type": "invokes"
    },
    {
      "source": "testing/test_tmpdir.py:TestRmRf.test_on_rm_rf_error",
      "target": "testing/test_tmpdir.py:TestRmRf.chmod_r",
      "type": "invokes"
    },
    {
      "source": "testing/deprecated_test.py",
      "target": "testing/deprecated_test.py:test_external_plugins_integrated",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py",
      "target": "testing/deprecated_test.py:test_hookspec_via_function_attributes_are_deprecated",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py",
      "target": "testing/deprecated_test.py:test_hookimpl_via_function_attributes_are_deprecated",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py",
      "target": "testing/deprecated_test.py:test_fscollector_gethookproxy_isinitpath",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py",
      "target": "testing/deprecated_test.py:test_strict_option_is_deprecated",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py",
      "target": "testing/deprecated_test.py:test_yield_fixture_is_deprecated",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py",
      "target": "testing/deprecated_test.py:test_private_is_deprecated",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py",
      "target": "testing/deprecated_test.py:test_hookproxy_warnings_for_pathlib",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py",
      "target": "testing/deprecated_test.py:test_warns_none_is_deprecated",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py",
      "target": "testing/deprecated_test.py:TestSkipMsgArgumentDeprecated",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py",
      "target": "testing/deprecated_test.py:test_deprecation_of_cmdline_preparse",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py",
      "target": "testing/deprecated_test.py:test_node_ctor_fspath_argument_is_deprecated",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py",
      "target": "testing/deprecated_test.py:test_importing_instance_is_deprecated",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py",
      "target": "testing/deprecated_test.py:test_fixture_disallow_on_marked_functions",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py",
      "target": "testing/deprecated_test.py:test_fixture_disallow_marks_on_fixtures",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py",
      "target": "testing/deprecated_test.py:test_fixture_disallowed_between_marks",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py",
      "target": "testing/deprecated_test.py:test_nose_deprecated_with_setup",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py",
      "target": "testing/deprecated_test.py:test_nose_deprecated_setup_teardown",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py:test_hookspec_via_function_attributes_are_deprecated",
      "target": "testing/deprecated_test.py:test_hookspec_via_function_attributes_are_deprecated.DeprecatedHookMarkerSpec",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py:test_hookspec_via_function_attributes_are_deprecated.DeprecatedHookMarkerSpec",
      "target": "testing/deprecated_test.py:test_hookspec_via_function_attributes_are_deprecated.DeprecatedHookMarkerSpec.pytest_bad_hook",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py:test_hookimpl_via_function_attributes_are_deprecated",
      "target": "testing/deprecated_test.py:test_hookimpl_via_function_attributes_are_deprecated.DeprecatedMarkImplPlugin",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py:test_hookimpl_via_function_attributes_are_deprecated",
      "target": "testing/deprecated_test.py:test_hookimpl_via_function_attributes_are_deprecated.DeprecatedMarkImplPlugin",
      "type": "invokes"
    },
    {
      "source": "testing/deprecated_test.py:test_hookimpl_via_function_attributes_are_deprecated.DeprecatedMarkImplPlugin",
      "target": "testing/deprecated_test.py:test_hookimpl_via_function_attributes_are_deprecated.DeprecatedMarkImplPlugin.pytest_runtest_call",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py:test_yield_fixture_is_deprecated",
      "target": "testing/deprecated_test.py:test_yield_fixture_is_deprecated.fix",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py:test_private_is_deprecated",
      "target": "testing/deprecated_test.py:test_private_is_deprecated.PrivateInit",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py:test_private_is_deprecated",
      "target": "testing/deprecated_test.py:test_private_is_deprecated.PrivateInit",
      "type": "invokes"
    },
    {
      "source": "testing/deprecated_test.py:TestSkipMsgArgumentDeprecated",
      "target": "testing/deprecated_test.py:TestSkipMsgArgumentDeprecated.test_skip_with_msg_is_deprecated",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py:TestSkipMsgArgumentDeprecated",
      "target": "testing/deprecated_test.py:TestSkipMsgArgumentDeprecated.test_fail_with_msg_is_deprecated",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py:TestSkipMsgArgumentDeprecated",
      "target": "testing/deprecated_test.py:TestSkipMsgArgumentDeprecated.test_exit_with_msg_is_deprecated",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py:test_fixture_disallow_on_marked_functions",
      "target": "testing/deprecated_test.py:test_fixture_disallow_on_marked_functions.foo",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py:test_fixture_disallow_marks_on_fixtures",
      "target": "testing/deprecated_test.py:test_fixture_disallow_marks_on_fixtures.foo",
      "type": "contains"
    },
    {
      "source": "testing/deprecated_test.py:test_fixture_disallowed_between_marks",
      "target": "testing/deprecated_test.py:test_fixture_disallowed_between_marks.foo",
      "type": "contains"
    },
    {
      "source": "testing/test_stash.py",
      "target": "testing/test_stash.py:test_stash",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py",
      "target": "testing/acceptance_test.py:prepend_pythonpath",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py",
      "target": "testing/acceptance_test.py:TestGeneralUsage",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py",
      "target": "testing/acceptance_test.py:TestInvocationVariants",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py",
      "target": "testing/acceptance_test.py:TestDurations",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py",
      "target": "testing/acceptance_test.py:TestDurationsWithFixture",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py",
      "target": "testing/acceptance_test.py:test_zipimport_hook",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py",
      "target": "testing/acceptance_test.py:test_import_plugin_unicode_name",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py",
      "target": "testing/acceptance_test.py:test_pytest_plugins_as_module",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py",
      "target": "testing/acceptance_test.py:test_deferred_hook_checking",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py",
      "target": "testing/acceptance_test.py:test_fixture_values_leak",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py",
      "target": "testing/acceptance_test.py:test_fixture_order_respects_scope",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py",
      "target": "testing/acceptance_test.py:test_frame_leak_on_failing_test",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py",
      "target": "testing/acceptance_test.py:test_fixture_mock_integration",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py",
      "target": "testing/acceptance_test.py:test_usage_error_code",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py",
      "target": "testing/acceptance_test.py:test_warn_on_async_function",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py",
      "target": "testing/acceptance_test.py:test_warn_on_async_gen_function",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py",
      "target": "testing/acceptance_test.py:test_pdb_can_be_rewritten",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py",
      "target": "testing/acceptance_test.py:test_tee_stdio_captures_and_live_prints",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py",
      "target": "testing/acceptance_test.py:test_no_brokenpipeerror_message",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py",
      "target": "testing/acceptance_test.py:test_function_return_non_none_warning",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py",
      "target": "testing/acceptance_test.py:test_doctest_and_normal_imports_with_importlib",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_config_error",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_root_conftest_syntax_error",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_early_hook_error_issue38_1",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_early_hook_configure_error_issue38",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_file_not_found",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_file_not_found_unconfigure_issue143",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_config_preparse_plugin_option",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_early_load_setuptools_name",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_assertion_rewrite",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_nested_import_error",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_not_collectable_arguments",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_better_reporting_on_conftest_load_failure",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_early_skip",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_issue88_initial_file_multinodes",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_issue93_initialnode_importing_capturing",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_conftest_printing_shows_if_error",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_issue109_sibling_conftests_not_loaded",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_directory_skipped",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_multiple_items_per_collector_byid",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_skip_on_generated_funcarg_id",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_direct_addressing_selects",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_direct_addressing_notfound",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_docstring_on_hookspec",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_initialization_error_issue49",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_issue134_report_error_when_collecting_member",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_report_all_failed_collections_initargs",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_namespace_import_doesnt_confuse_import_hook",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_unknown_option",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_getsourcelines_error_issue553",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_plugins_given_as_strings",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_parametrized_with_bytes_regex",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_parametrized_with_null_bytes",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage.test_early_load_setuptools_name",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_early_load_setuptools_name.DummyEntryPoint",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage.test_early_load_setuptools_name",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_early_load_setuptools_name.DummyEntryPoint",
      "type": "invokes"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage.test_early_load_setuptools_name",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_early_load_setuptools_name.DummyDist",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage.test_early_load_setuptools_name",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_early_load_setuptools_name.my_dists",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage.test_early_load_setuptools_name.DummyEntryPoint",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_early_load_setuptools_name.DummyEntryPoint.load",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestGeneralUsage.test_early_load_setuptools_name.my_dists",
      "target": "testing/acceptance_test.py:TestGeneralUsage.test_early_load_setuptools_name.DummyDist",
      "type": "invokes"
    },
    {
      "source": "testing/acceptance_test.py:TestInvocationVariants",
      "target": "testing/acceptance_test.py:TestInvocationVariants.test_earlyinit",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestInvocationVariants",
      "target": "testing/acceptance_test.py:TestInvocationVariants.test_pydoc",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestInvocationVariants",
      "target": "testing/acceptance_test.py:TestInvocationVariants.test_import_star_pytest",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestInvocationVariants",
      "target": "testing/acceptance_test.py:TestInvocationVariants.test_double_pytestcmdline",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestInvocationVariants",
      "target": "testing/acceptance_test.py:TestInvocationVariants.test_python_minus_m_invocation_ok",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestInvocationVariants",
      "target": "testing/acceptance_test.py:TestInvocationVariants.test_python_minus_m_invocation_fail",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestInvocationVariants",
      "target": "testing/acceptance_test.py:TestInvocationVariants.test_python_pytest_package",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestInvocationVariants",
      "target": "testing/acceptance_test.py:TestInvocationVariants.test_invoke_with_invalid_type",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestInvocationVariants",
      "target": "testing/acceptance_test.py:TestInvocationVariants.test_invoke_with_path",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestInvocationVariants",
      "target": "testing/acceptance_test.py:TestInvocationVariants.test_invoke_plugin_api",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestInvocationVariants",
      "target": "testing/acceptance_test.py:TestInvocationVariants.test_pyargs_importerror",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestInvocationVariants",
      "target": "testing/acceptance_test.py:TestInvocationVariants.test_pyargs_only_imported_once",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestInvocationVariants",
      "target": "testing/acceptance_test.py:TestInvocationVariants.test_pyargs_filename_looks_like_module",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestInvocationVariants",
      "target": "testing/acceptance_test.py:TestInvocationVariants.test_cmdline_python_package",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestInvocationVariants",
      "target": "testing/acceptance_test.py:TestInvocationVariants.test_cmdline_python_namespace_package",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestInvocationVariants",
      "target": "testing/acceptance_test.py:TestInvocationVariants.test_invoke_test_and_doctestmodules",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestInvocationVariants",
      "target": "testing/acceptance_test.py:TestInvocationVariants.test_cmdline_python_package_symlink",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestInvocationVariants",
      "target": "testing/acceptance_test.py:TestInvocationVariants.test_cmdline_python_package_not_exists",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestInvocationVariants",
      "target": "testing/acceptance_test.py:TestInvocationVariants.test_noclass_discovery_if_not_testcase",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestInvocationVariants",
      "target": "testing/acceptance_test.py:TestInvocationVariants.test_doctest_id",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestInvocationVariants",
      "target": "testing/acceptance_test.py:TestInvocationVariants.test_core_backward_compatibility",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestInvocationVariants",
      "target": "testing/acceptance_test.py:TestInvocationVariants.test_has_plugin",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestInvocationVariants.test_invoke_plugin_api",
      "target": "testing/acceptance_test.py:TestInvocationVariants.test_invoke_plugin_api.MyPlugin",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestInvocationVariants.test_invoke_plugin_api",
      "target": "testing/acceptance_test.py:TestInvocationVariants.test_invoke_plugin_api.MyPlugin",
      "type": "invokes"
    },
    {
      "source": "testing/acceptance_test.py:TestInvocationVariants.test_invoke_plugin_api.MyPlugin",
      "target": "testing/acceptance_test.py:TestInvocationVariants.test_invoke_plugin_api.MyPlugin.pytest_addoption",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestInvocationVariants.test_cmdline_python_namespace_package",
      "target": "testing/acceptance_test.py:prepend_pythonpath",
      "type": "invokes"
    },
    {
      "source": "testing/acceptance_test.py:TestInvocationVariants.test_cmdline_python_package_symlink",
      "target": "testing/acceptance_test.py:prepend_pythonpath",
      "type": "invokes"
    },
    {
      "source": "testing/acceptance_test.py:TestDurations",
      "target": "testing/acceptance_test.py:TestDurations.test_calls",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestDurations",
      "target": "testing/acceptance_test.py:TestDurations.test_calls_show_2",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestDurations",
      "target": "testing/acceptance_test.py:TestDurations.test_calls_showall",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestDurations",
      "target": "testing/acceptance_test.py:TestDurations.test_calls_showall_verbose",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestDurations",
      "target": "testing/acceptance_test.py:TestDurations.test_with_deselected",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestDurations",
      "target": "testing/acceptance_test.py:TestDurations.test_with_failing_collection",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestDurations",
      "target": "testing/acceptance_test.py:TestDurations.test_with_not",
      "type": "contains"
    },
    {
      "source": "testing/acceptance_test.py:TestDurationsWithFixture",
      "target": "testing/acceptance_test.py:TestDurationsWithFixture.test_setup_function",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:schema",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:RunAndParse",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:DomNode",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:TestPython",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_mangle_test_address",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_dont_configure_on_workers",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:TestNonPython",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_nullbyte",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_nullbyte_replace",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_invalid_xml_escape",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_logxml_path_expansion",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_logxml_changingdir",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_logxml_makedir",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_logxml_check_isdir",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_escaped_parametrized_names_xml",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_double_colon_split_function_issue469",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_double_colon_split_method_issue469",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_unicode_issue368",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_record_property",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_record_property_same_name",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_record_fixtures_without_junitxml",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_record_attribute",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_record_fixtures_xunit2",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_random_report_log_xdist",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_root_testsuites_tag",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_runs_twice",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_runs_twice_xdist",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_fancy_items_regression",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_global_properties",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_url_property",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_record_testsuite_property",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_record_testsuite_property_junit_disabled",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_record_testsuite_property_type_checking",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_set_suite_name",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_escaped_skipreason_issue3533",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_escaped_setup_teardown_error",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_logging_passing_tests_disabled_does_not_log_test_output",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py",
      "target": "testing/test_junitxml.py:test_logging_passing_tests_disabled_logs_output_for_failing_test_issue5430",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:RunAndParse",
      "target": "testing/test_junitxml.py:RunAndParse.__call__",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:RunAndParse.__call__",
      "target": "testing/test_junitxml.py:DomNode",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:run_and_parse",
      "target": "testing/test_junitxml.py:RunAndParse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:assert_attr",
      "target": "testing/test_junitxml.py:assert_attr.nodeval",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:assert_attr",
      "target": "testing/test_junitxml.py:assert_attr.nodeval",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:DomNode",
      "target": "testing/test_junitxml.py:DomNode.__repr__",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:DomNode",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:DomNode",
      "target": "testing/test_junitxml.py:DomNode._by_tag",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:DomNode",
      "target": "testing/test_junitxml.py:DomNode.children",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:DomNode",
      "target": "testing/test_junitxml.py:DomNode.get_unique_child",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:DomNode",
      "target": "testing/test_junitxml.py:DomNode.find_nth_by_tag",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:DomNode",
      "target": "testing/test_junitxml.py:DomNode.find_by_tag",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:DomNode",
      "target": "testing/test_junitxml.py:DomNode.__getitem__",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:DomNode",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:DomNode",
      "target": "testing/test_junitxml.py:DomNode.toxml",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:DomNode",
      "target": "testing/test_junitxml.py:DomNode.text",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:DomNode",
      "target": "testing/test_junitxml.py:DomNode.tag",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:DomNode",
      "target": "testing/test_junitxml.py:DomNode.next_sibling",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:DomNode.__repr__",
      "target": "testing/test_junitxml.py:DomNode.toxml",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "target": "testing/test_junitxml.py:DomNode.find_nth_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:DomNode.find_nth_by_tag",
      "target": "testing/test_junitxml.py:DomNode._by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:DomNode.assert_attr",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_summing_simple",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_summing_simple_with_errors",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_hostname_in_xml",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_timestamp_in_xml",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_timing_function",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_junit_duration_report",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_setup_error",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_teardown_error",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_call_failure_teardown_error",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_skip_contains_name_reason",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_mark_skip_contains_name_reason",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_mark_skipif_contains_name_reason",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_mark_skip_doesnt_capture_output",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_classname_instance",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_classname_nested_dir",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_internal_error",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_failure_function",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_failure_verbose_message",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_failure_escape",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_junit_prefixing",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_xfailure_function",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_xfailure_marker",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_xfail_captures_output_once",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_xfailure_xpass",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_xfailure_xpass_strict",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_collect_error",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_unicode",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_assertion_binchars",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_pass_captures_stdout",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_pass_captures_stderr",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_setup_error_captures_stdout",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_setup_error_captures_stderr",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython",
      "target": "testing/test_junitxml.py:TestPython.test_avoid_double_stdout",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_summing_simple",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_summing_simple",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_summing_simple",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_summing_simple",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_summing_simple_with_errors",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_summing_simple_with_errors",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_summing_simple_with_errors",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_summing_simple_with_errors",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_hostname_in_xml",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_hostname_in_xml",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_hostname_in_xml",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_hostname_in_xml",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_timestamp_in_xml",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_timestamp_in_xml",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_timing_function",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_timing_function",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_junit_duration_report",
      "target": "testing/test_junitxml.py:TestPython.test_junit_duration_report.node_reporter_wrapper",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_junit_duration_report",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_junit_duration_report",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_setup_error",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_setup_error",
      "target": "testing/test_junitxml.py:DomNode.toxml",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_setup_error",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_setup_error",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_setup_error",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_teardown_error",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_teardown_error",
      "target": "testing/test_junitxml.py:DomNode.toxml",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_teardown_error",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_teardown_error",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_teardown_error",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_call_failure_teardown_error",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_call_failure_teardown_error",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_call_failure_teardown_error",
      "target": "testing/test_junitxml.py:DomNode.find_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_call_failure_teardown_error",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_call_failure_teardown_error",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_skip_contains_name_reason",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_skip_contains_name_reason",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_skip_contains_name_reason",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_skip_contains_name_reason",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_mark_skip_contains_name_reason",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_mark_skip_contains_name_reason",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_mark_skip_contains_name_reason",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_mark_skip_contains_name_reason",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_mark_skipif_contains_name_reason",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_mark_skipif_contains_name_reason",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_mark_skipif_contains_name_reason",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_mark_skipif_contains_name_reason",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_mark_skip_doesnt_capture_output",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_mark_skip_doesnt_capture_output",
      "target": "testing/test_junitxml.py:DomNode.toxml",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_mark_skip_doesnt_capture_output",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_classname_instance",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_classname_instance",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_classname_instance",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_classname_instance",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_classname_nested_dir",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_classname_nested_dir",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_classname_nested_dir",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_classname_nested_dir",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_internal_error",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_internal_error",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_internal_error",
      "target": "testing/test_junitxml.py:DomNode.toxml",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_internal_error",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_internal_error",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_failure_function",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_failure_function",
      "target": "testing/test_junitxml.py:DomNode.toxml",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_failure_function",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_failure_function",
      "target": "testing/test_junitxml.py:DomNode.find_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_failure_function",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_failure_function",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_failure_verbose_message",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_failure_verbose_message",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_failure_verbose_message",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_failure_verbose_message",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_failure_escape",
      "target": "testing/test_junitxml.py:DomNode.find_nth_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_failure_escape",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_failure_escape",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_failure_escape",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_failure_escape",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_junit_prefixing",
      "target": "testing/test_junitxml.py:DomNode.find_nth_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_junit_prefixing",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_junit_prefixing",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_junit_prefixing",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_junit_prefixing",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_xfailure_function",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_xfailure_function",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_xfailure_function",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_xfailure_function",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_xfailure_marker",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_xfailure_marker",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_xfailure_marker",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_xfailure_marker",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_xfail_captures_output_once",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_xfail_captures_output_once",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_xfail_captures_output_once",
      "target": "testing/test_junitxml.py:DomNode.find_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_xfailure_xpass",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_xfailure_xpass",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_xfailure_xpass",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_xfailure_xpass",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_xfailure_xpass_strict",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_xfailure_xpass_strict",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_xfailure_xpass_strict",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_xfailure_xpass_strict",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_collect_error",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_collect_error",
      "target": "testing/test_junitxml.py:DomNode.toxml",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_collect_error",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_collect_error",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_collect_error",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_unicode",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_unicode",
      "target": "testing/test_junitxml.py:DomNode.toxml",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_unicode",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_assertion_binchars",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_assertion_binchars",
      "target": "testing/test_junitxml.py:DomNode.toxml",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_pass_captures_stdout",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_pass_captures_stdout",
      "target": "testing/test_junitxml.py:DomNode.toxml",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_pass_captures_stdout",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_pass_captures_stdout",
      "target": "testing/test_junitxml.py:DomNode.find_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_pass_captures_stderr",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_pass_captures_stderr",
      "target": "testing/test_junitxml.py:DomNode.toxml",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_pass_captures_stderr",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_pass_captures_stderr",
      "target": "testing/test_junitxml.py:DomNode.find_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_setup_error_captures_stdout",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_setup_error_captures_stdout",
      "target": "testing/test_junitxml.py:DomNode.toxml",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_setup_error_captures_stdout",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_setup_error_captures_stdout",
      "target": "testing/test_junitxml.py:DomNode.find_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_setup_error_captures_stderr",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_setup_error_captures_stderr",
      "target": "testing/test_junitxml.py:DomNode.toxml",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_setup_error_captures_stderr",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_setup_error_captures_stderr",
      "target": "testing/test_junitxml.py:DomNode.find_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_avoid_double_stdout",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_avoid_double_stdout",
      "target": "testing/test_junitxml.py:DomNode.toxml",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_avoid_double_stdout",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestPython.test_avoid_double_stdout",
      "target": "testing/test_junitxml.py:DomNode.find_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_dont_configure_on_workers",
      "target": "testing/test_junitxml.py:test_dont_configure_on_workers.FakeConfig",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:test_dont_configure_on_workers",
      "target": "testing/test_junitxml.py:test_dont_configure_on_workers.FakeConfig",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_dont_configure_on_workers.FakeConfig",
      "target": "testing/test_junitxml.py:test_dont_configure_on_workers.FakeConfig.getini",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestNonPython",
      "target": "testing/test_junitxml.py:TestNonPython.test_summing_simple",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:TestNonPython.test_summing_simple",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestNonPython.test_summing_simple",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestNonPython.test_summing_simple",
      "target": "testing/test_junitxml.py:DomNode.toxml",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestNonPython.test_summing_simple",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:TestNonPython.test_summing_simple",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_escaped_parametrized_names_xml",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_escaped_parametrized_names_xml",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_escaped_parametrized_names_xml",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_escaped_parametrized_names_xml",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_double_colon_split_function_issue469",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_double_colon_split_function_issue469",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_double_colon_split_function_issue469",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_double_colon_split_function_issue469",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_double_colon_split_method_issue469",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_double_colon_split_method_issue469",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_double_colon_split_method_issue469",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_double_colon_split_method_issue469",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_unicode_issue368",
      "target": "testing/test_junitxml.py:test_unicode_issue368.Report",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:test_unicode_issue368",
      "target": "testing/test_junitxml.py:test_unicode_issue368.Report",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_record_property",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_record_property",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_record_property",
      "target": "testing/test_junitxml.py:DomNode.find_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_record_property",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_record_property",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_record_property_same_name",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_record_property_same_name",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_record_property_same_name",
      "target": "testing/test_junitxml.py:DomNode.find_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_record_property_same_name",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_record_property_same_name",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_record_attribute",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_record_attribute",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_record_attribute",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_record_attribute",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_record_fixtures_xunit2",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_random_report_log_xdist",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_random_report_log_xdist",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_random_report_log_xdist",
      "target": "testing/test_junitxml.py:DomNode.find_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_root_testsuites_tag",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_runs_twice",
      "target": "testing/test_junitxml.py:DomNode.find_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_runs_twice",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_runs_twice_xdist",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_runs_twice_xdist",
      "target": "testing/test_junitxml.py:DomNode.find_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_fancy_items_regression",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_fancy_items_regression",
      "target": "testing/test_junitxml.py:DomNode.find_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_global_properties",
      "target": "testing/test_junitxml.py:test_global_properties.Report",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:test_url_property",
      "target": "testing/test_junitxml.py:test_url_property.Report",
      "type": "contains"
    },
    {
      "source": "testing/test_junitxml.py:test_url_property",
      "target": "testing/test_junitxml.py:test_url_property.Report",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_record_testsuite_property",
      "target": "testing/test_junitxml.py:DomNode.find_nth_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_record_testsuite_property",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_record_testsuite_property",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_record_testsuite_property",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_record_testsuite_property",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_set_suite_name",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_set_suite_name",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_set_suite_name",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_set_suite_name",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_escaped_skipreason_issue3533",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_escaped_skipreason_issue3533",
      "target": "testing/test_junitxml.py:assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_escaped_skipreason_issue3533",
      "target": "testing/test_junitxml.py:DomNode.assert_attr",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_escaped_skipreason_issue3533",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_escaped_setup_teardown_error",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_escaped_setup_teardown_error",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_logging_passing_tests_disabled_does_not_log_test_output",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_logging_passing_tests_disabled_does_not_log_test_output",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_logging_passing_tests_disabled_does_not_log_test_output",
      "target": "testing/test_junitxml.py:DomNode.find_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_logging_passing_tests_disabled_logs_output_for_failing_test_issue5430",
      "target": "testing/test_junitxml.py:run_and_parse",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_logging_passing_tests_disabled_logs_output_for_failing_test_issue5430",
      "target": "testing/test_junitxml.py:DomNode.find_first_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_junitxml.py:test_logging_passing_tests_disabled_logs_output_for_failing_test_issue5430",
      "target": "testing/test_junitxml.py:DomNode.find_by_tag",
      "type": "invokes"
    },
    {
      "source": "testing/test_runner_xunit.py",
      "target": "testing/test_runner_xunit.py:test_module_and_function_setup",
      "type": "contains"
    },
    {
      "source": "testing/test_runner_xunit.py",
      "target": "testing/test_runner_xunit.py:test_module_setup_failure_no_teardown",
      "type": "contains"
    },
    {
      "source": "testing/test_runner_xunit.py",
      "target": "testing/test_runner_xunit.py:test_setup_function_failure_no_teardown",
      "type": "contains"
    },
    {
      "source": "testing/test_runner_xunit.py",
      "target": "testing/test_runner_xunit.py:test_class_setup",
      "type": "contains"
    },
    {
      "source": "testing/test_runner_xunit.py",
      "target": "testing/test_runner_xunit.py:test_class_setup_failure_no_teardown",
      "type": "contains"
    },
    {
      "source": "testing/test_runner_xunit.py",
      "target": "testing/test_runner_xunit.py:test_method_setup",
      "type": "contains"
    },
    {
      "source": "testing/test_runner_xunit.py",
      "target": "testing/test_runner_xunit.py:test_method_setup_failure_no_teardown",
      "type": "contains"
    },
    {
      "source": "testing/test_runner_xunit.py",
      "target": "testing/test_runner_xunit.py:test_method_setup_uses_fresh_instances",
      "type": "contains"
    },
    {
      "source": "testing/test_runner_xunit.py",
      "target": "testing/test_runner_xunit.py:test_setup_that_skips_calledagain",
      "type": "contains"
    },
    {
      "source": "testing/test_runner_xunit.py",
      "target": "testing/test_runner_xunit.py:test_setup_fails_again_on_all_tests",
      "type": "contains"
    },
    {
      "source": "testing/test_runner_xunit.py",
      "target": "testing/test_runner_xunit.py:test_setup_funcarg_setup_when_outer_scope_fails",
      "type": "contains"
    },
    {
      "source": "testing/test_runner_xunit.py",
      "target": "testing/test_runner_xunit.py:test_setup_teardown_function_level_with_optional_argument",
      "type": "contains"
    },
    {
      "source": "testing/test_stepwise.py",
      "target": "testing/test_stepwise.py:stepwise_pytester",
      "type": "contains"
    },
    {
      "source": "testing/test_stepwise.py",
      "target": "testing/test_stepwise.py:error_pytester",
      "type": "contains"
    },
    {
      "source": "testing/test_stepwise.py",
      "target": "testing/test_stepwise.py:broken_pytester",
      "type": "contains"
    },
    {
      "source": "testing/test_stepwise.py",
      "target": "testing/test_stepwise.py:_strip_resource_warnings",
      "type": "contains"
    },
    {
      "source": "testing/test_stepwise.py",
      "target": "testing/test_stepwise.py:test_run_without_stepwise",
      "type": "contains"
    },
    {
      "source": "testing/test_stepwise.py",
      "target": "testing/test_stepwise.py:test_stepwise_output_summary",
      "type": "contains"
    },
    {
      "source": "testing/test_stepwise.py",
      "target": "testing/test_stepwise.py:test_fail_and_continue_with_stepwise",
      "type": "contains"
    },
    {
      "source": "testing/test_stepwise.py",
      "target": "testing/test_stepwise.py:test_run_with_skip_option",
      "type": "contains"
    },
    {
      "source": "testing/test_stepwise.py",
      "target": "testing/test_stepwise.py:test_fail_on_errors",
      "type": "contains"
    },
    {
      "source": "testing/test_stepwise.py",
      "target": "testing/test_stepwise.py:test_change_testfile",
      "type": "contains"
    },
    {
      "source": "testing/test_stepwise.py",
      "target": "testing/test_stepwise.py:test_stop_on_collection_errors",
      "type": "contains"
    },
    {
      "source": "testing/test_stepwise.py",
      "target": "testing/test_stepwise.py:test_xfail_handling",
      "type": "contains"
    },
    {
      "source": "testing/test_stepwise.py",
      "target": "testing/test_stepwise.py:test_stepwise_skip_is_independent",
      "type": "contains"
    },
    {
      "source": "testing/test_stepwise.py",
      "target": "testing/test_stepwise.py:test_sw_skip_help",
      "type": "contains"
    },
    {
      "source": "testing/test_stepwise.py",
      "target": "testing/test_stepwise.py:test_stepwise_xdist_dont_store_lastfailed",
      "type": "contains"
    },
    {
      "source": "testing/test_stepwise.py",
      "target": "testing/test_stepwise.py:test_disabled_stepwise_xdist_dont_clear_cache",
      "type": "contains"
    },
    {
      "source": "testing/test_stepwise.py:test_fail_and_continue_with_stepwise",
      "target": "testing/test_stepwise.py:_strip_resource_warnings",
      "type": "invokes"
    },
    {
      "source": "testing/test_stepwise.py:test_run_with_skip_option",
      "target": "testing/test_stepwise.py:_strip_resource_warnings",
      "type": "invokes"
    },
    {
      "source": "testing/test_stepwise.py:test_fail_on_errors",
      "target": "testing/test_stepwise.py:_strip_resource_warnings",
      "type": "invokes"
    },
    {
      "source": "testing/test_stepwise.py:test_change_testfile",
      "target": "testing/test_stepwise.py:_strip_resource_warnings",
      "type": "invokes"
    },
    {
      "source": "testing/test_pathlib.py",
      "target": "testing/test_pathlib.py:TestFNMatcherPort",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py",
      "target": "testing/test_pathlib.py:TestImportPath",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py",
      "target": "testing/test_pathlib.py:test_resolve_package_path",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py",
      "target": "testing/test_pathlib.py:test_package_unimportable",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py",
      "target": "testing/test_pathlib.py:test_access_denied_during_cleanup",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py",
      "target": "testing/test_pathlib.py:test_long_path_during_cleanup",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py",
      "target": "testing/test_pathlib.py:test_get_extended_length_path_str",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py",
      "target": "testing/test_pathlib.py:test_suppress_error_removing_lock",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py",
      "target": "testing/test_pathlib.py:test_bestrelpath",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py",
      "target": "testing/test_pathlib.py:test_commonpath",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py",
      "target": "testing/test_pathlib.py:test_visit_ignores_errors",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py",
      "target": "testing/test_pathlib.py:test_samefile_false_negatives",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py",
      "target": "testing/test_pathlib.py:TestImportLibMode",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestFNMatcherPort",
      "target": "testing/test_pathlib.py:TestFNMatcherPort.test_matching",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestFNMatcherPort",
      "target": "testing/test_pathlib.py:TestFNMatcherPort.test_matching_abspath",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestFNMatcherPort",
      "target": "testing/test_pathlib.py:TestFNMatcherPort.test_not_matching",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportPath",
      "target": "testing/test_pathlib.py:TestImportPath.path1",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportPath",
      "target": "testing/test_pathlib.py:TestImportPath.preserve_sys",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportPath",
      "target": "testing/test_pathlib.py:TestImportPath.setuptestfs",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportPath",
      "target": "testing/test_pathlib.py:TestImportPath.test_smoke_test",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportPath",
      "target": "testing/test_pathlib.py:TestImportPath.test_import_path_missing_file",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportPath",
      "target": "testing/test_pathlib.py:TestImportPath.test_renamed_dir_creates_mismatch",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportPath",
      "target": "testing/test_pathlib.py:TestImportPath.test_messy_name",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportPath",
      "target": "testing/test_pathlib.py:TestImportPath.test_dir",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportPath",
      "target": "testing/test_pathlib.py:TestImportPath.test_a",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportPath",
      "target": "testing/test_pathlib.py:TestImportPath.test_b",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportPath",
      "target": "testing/test_pathlib.py:TestImportPath.test_c",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportPath",
      "target": "testing/test_pathlib.py:TestImportPath.test_d",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportPath",
      "target": "testing/test_pathlib.py:TestImportPath.test_import_after",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportPath",
      "target": "testing/test_pathlib.py:TestImportPath.test_check_filepath_consistency",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportPath",
      "target": "testing/test_pathlib.py:TestImportPath.test_issue131_on__init__",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportPath",
      "target": "testing/test_pathlib.py:TestImportPath.test_ensuresyspath_append",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportPath",
      "target": "testing/test_pathlib.py:TestImportPath.test_invalid_path",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportPath",
      "target": "testing/test_pathlib.py:TestImportPath.simple_module",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportPath",
      "target": "testing/test_pathlib.py:TestImportPath.test_importmode_importlib",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportPath",
      "target": "testing/test_pathlib.py:TestImportPath.test_remembers_previous_imports",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportPath",
      "target": "testing/test_pathlib.py:TestImportPath.test_no_meta_path_found",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportPath.path1",
      "target": "testing/test_pathlib.py:TestImportPath.setuptestfs",
      "type": "invokes"
    },
    {
      "source": "testing/test_pathlib.py:test_access_denied_during_cleanup",
      "target": "testing/test_pathlib.py:test_access_denied_during_cleanup.renamed_failed",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportLibMode",
      "target": "testing/test_pathlib.py:TestImportLibMode.test_importmode_importlib_with_dataclass",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportLibMode",
      "target": "testing/test_pathlib.py:TestImportLibMode.test_importmode_importlib_with_pickle",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportLibMode",
      "target": "testing/test_pathlib.py:TestImportLibMode.test_importmode_importlib_with_pickle_separate_modules",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportLibMode",
      "target": "testing/test_pathlib.py:TestImportLibMode.test_module_name_from_path",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportLibMode",
      "target": "testing/test_pathlib.py:TestImportLibMode.test_insert_missing_modules",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportLibMode",
      "target": "testing/test_pathlib.py:TestImportLibMode.test_parent_contains_child_module_attribute",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportLibMode.test_importmode_importlib_with_pickle_separate_modules",
      "target": "testing/test_pathlib.py:TestImportLibMode.test_importmode_importlib_with_pickle_separate_modules.round_trip",
      "type": "contains"
    },
    {
      "source": "testing/test_pathlib.py:TestImportLibMode.test_importmode_importlib_with_pickle_separate_modules",
      "target": "testing/test_pathlib.py:TestImportLibMode.test_importmode_importlib_with_pickle_separate_modules.round_trip",
      "type": "invokes"
    },
    {
      "source": "testing/test_nose.py",
      "target": "testing/test_nose.py:setup_module",
      "type": "contains"
    },
    {
      "source": "testing/test_nose.py",
      "target": "testing/test_nose.py:test_nose_setup",
      "type": "contains"
    },
    {
      "source": "testing/test_nose.py",
      "target": "testing/test_nose.py:test_setup_func_with_setup_decorator",
      "type": "contains"
    },
    {
      "source": "testing/test_nose.py",
      "target": "testing/test_nose.py:test_setup_func_not_callable",
      "type": "contains"
    },
    {
      "source": "testing/test_nose.py",
      "target": "testing/test_nose.py:test_nose_setup_func",
      "type": "contains"
    },
    {
      "source": "testing/test_nose.py",
      "target": "testing/test_nose.py:test_nose_setup_func_failure",
      "type": "contains"
    },
    {
      "source": "testing/test_nose.py",
      "target": "testing/test_nose.py:test_nose_setup_func_failure_2",
      "type": "contains"
    },
    {
      "source": "testing/test_nose.py",
      "target": "testing/test_nose.py:test_nose_setup_partial",
      "type": "contains"
    },
    {
      "source": "testing/test_nose.py",
      "target": "testing/test_nose.py:test_module_level_setup",
      "type": "contains"
    },
    {
      "source": "testing/test_nose.py",
      "target": "testing/test_nose.py:test_nose_style_setup_teardown",
      "type": "contains"
    },
    {
      "source": "testing/test_nose.py",
      "target": "testing/test_nose.py:test_fixtures_nose_setup_issue8394",
      "type": "contains"
    },
    {
      "source": "testing/test_nose.py",
      "target": "testing/test_nose.py:test_nose_setup_ordering",
      "type": "contains"
    },
    {
      "source": "testing/test_nose.py",
      "target": "testing/test_nose.py:test_apiwrapper_problem_issue260",
      "type": "contains"
    },
    {
      "source": "testing/test_nose.py",
      "target": "testing/test_nose.py:test_setup_teardown_linking_issue265",
      "type": "contains"
    },
    {
      "source": "testing/test_nose.py",
      "target": "testing/test_nose.py:test_SkipTest_during_collection",
      "type": "contains"
    },
    {
      "source": "testing/test_nose.py",
      "target": "testing/test_nose.py:test_SkipTest_in_test",
      "type": "contains"
    },
    {
      "source": "testing/test_nose.py",
      "target": "testing/test_nose.py:test_istest_function_decorator",
      "type": "contains"
    },
    {
      "source": "testing/test_nose.py",
      "target": "testing/test_nose.py:test_nottest_function_decorator",
      "type": "contains"
    },
    {
      "source": "testing/test_nose.py",
      "target": "testing/test_nose.py:test_istest_class_decorator",
      "type": "contains"
    },
    {
      "source": "testing/test_nose.py",
      "target": "testing/test_nose.py:test_nottest_class_decorator",
      "type": "contains"
    },
    {
      "source": "testing/test_nose.py",
      "target": "testing/test_nose.py:test_skip_test_with_unicode",
      "type": "contains"
    },
    {
      "source": "testing/test_nose.py",
      "target": "testing/test_nose.py:test_raises",
      "type": "contains"
    },
    {
      "source": "testing/test_nose.py",
      "target": "testing/test_nose.py:test_nose_setup_skipped_if_non_callable",
      "type": "contains"
    },
    {
      "source": "testing/test_nose.py",
      "target": "testing/test_nose.py:test_teardown_fixture_not_called_directly",
      "type": "contains"
    },
    {
      "source": "testing/test_nose.py:test_setup_func_with_setup_decorator",
      "target": "testing/test_nose.py:test_setup_func_with_setup_decorator.A",
      "type": "contains"
    },
    {
      "source": "testing/test_nose.py:test_setup_func_with_setup_decorator",
      "target": "testing/test_nose.py:test_setup_func_with_setup_decorator.A",
      "type": "invokes"
    },
    {
      "source": "testing/test_nose.py:test_setup_func_with_setup_decorator.A",
      "target": "testing/test_nose.py:test_setup_func_with_setup_decorator.A.f",
      "type": "contains"
    },
    {
      "source": "testing/test_nose.py:test_setup_func_not_callable",
      "target": "testing/test_nose.py:test_setup_func_not_callable.A",
      "type": "contains"
    },
    {
      "source": "testing/test_nose.py:test_setup_func_not_callable",
      "target": "testing/test_nose.py:test_setup_func_not_callable.A",
      "type": "invokes"
    },
    {
      "source": "testing/freeze",
      "target": "testing/freeze/create_executable.py",
      "type": "contains"
    },
    {
      "source": "testing/freeze",
      "target": "testing/freeze/tox_run.py",
      "type": "contains"
    },
    {
      "source": "testing/freeze",
      "target": "testing/freeze/runtests_script.py",
      "type": "contains"
    },
    {
      "source": "testing/freeze",
      "target": "testing/freeze/tests",
      "type": "contains"
    },
    {
      "source": "testing/freeze/tests",
      "target": "testing/freeze/tests/test_trivial.py",
      "type": "contains"
    },
    {
      "source": "testing/freeze/tests/test_trivial.py",
      "target": "testing/freeze/tests/test_trivial.py:test_upper",
      "type": "contains"
    },
    {
      "source": "testing/freeze/tests/test_trivial.py",
      "target": "testing/freeze/tests/test_trivial.py:test_lower",
      "type": "contains"
    },
    {
      "source": "testing/python",
      "target": "testing/python/approx.py",
      "type": "contains"
    },
    {
      "source": "testing/python",
      "target": "testing/python/show_fixtures_per_test.py",
      "type": "contains"
    },
    {
      "source": "testing/python",
      "target": "testing/python/collect.py",
      "type": "contains"
    },
    {
      "source": "testing/python",
      "target": "testing/python/metafunc.py",
      "type": "contains"
    },
    {
      "source": "testing/python",
      "target": "testing/python/integration.py",
      "type": "contains"
    },
    {
      "source": "testing/python",
      "target": "testing/python/raises.py",
      "type": "contains"
    },
    {
      "source": "testing/python",
      "target": "testing/python/fixtures.py",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py",
      "target": "testing/python/approx.py:mocked_doctest_runner",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py",
      "target": "testing/python/approx.py:temporary_verbosity",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py",
      "target": "testing/python/approx.py:assert_approx_raises_regex",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py",
      "target": "testing/python/approx.py:TestApprox",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py",
      "target": "testing/python/approx.py:TestRecursiveSequenceMap",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:mocked_doctest_runner",
      "target": "testing/python/approx.py:mocked_doctest_runner.MockedPdb",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:mocked_doctest_runner",
      "target": "testing/python/approx.py:mocked_doctest_runner.MyDocTestRunner",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:mocked_doctest_runner",
      "target": "testing/python/approx.py:mocked_doctest_runner.MyDocTestRunner",
      "type": "invokes"
    },
    {
      "source": "testing/python/approx.py:mocked_doctest_runner.MockedPdb",
      "target": "testing/python/approx.py:mocked_doctest_runner.MockedPdb.set_trace",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:mocked_doctest_runner.MockedPdb",
      "target": "testing/python/approx.py:mocked_doctest_runner.MockedPdb.reset",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:mocked_doctest_runner.MockedPdb",
      "target": "testing/python/approx.py:mocked_doctest_runner.MockedPdb.set_continue",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:mocked_doctest_runner.MyDocTestRunner",
      "target": "testing/python/approx.py:mocked_doctest_runner.MyDocTestRunner.report_failure",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:assert_approx_raises_regex",
      "target": "testing/python/approx.py:assert_approx_raises_regex.do_assert",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:assert_approx_raises_regex.do_assert",
      "target": "testing/python/approx.py:temporary_verbosity",
      "type": "invokes"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_error_messages_native_dtypes",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_error_messages_numpy_dtypes",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_error_messages_invalid_args",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_error_messages_with_different_verbosity",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_repr_string",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_repr_complex_numbers",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_repr_nd_array",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_bool",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_operator_overloading",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_exactly_equal",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_opposite_sign",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_zero_tolerance",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_negative_tolerance",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_negative_tolerance_message",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_inf_tolerance",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_inf_tolerance_expecting_zero",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_nan_tolerance",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_reasonable_defaults",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_default_tolerances",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_custom_tolerances",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_relative_tolerance",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_absolute_tolerance",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_expecting_zero",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_expecting_inf",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_expecting_nan",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_int",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_decimal",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_fraction",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_complex",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_list",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_list_decimal",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_list_wrong_len",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_tuple",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_tuple_wrong_len",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_tuple_vs_other",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_dict",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_dict_decimal",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_dict_wrong_len",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_dict_nonnumeric",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_dict_vs_other",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_dict_for_div_by_zero",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_numpy_array",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_numpy_tolerance_args",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_numpy_expecting_nan",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_numpy_expecting_inf",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_numpy_array_wrong_shape",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_numpy_array_protocol",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_doctests",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_unicode_plus_minus",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_expected_value_type_error",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_nonnumeric_okay_if_equal",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_nonnumeric_false_if_unequal",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_nonnumeric_dict_repr",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_nonnumeric_list_repr",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_comparison_operator_type_error",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_numpy_array_with_scalar",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_numpy_scalar_with_array",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_generic_ordered_sequence",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox",
      "target": "testing/python/approx.py:TestApprox.test_allow_ordered_sequences_only",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox.test_error_messages_native_dtypes",
      "target": "testing/python/approx.py:assert_approx_raises_regex",
      "type": "invokes"
    },
    {
      "source": "testing/python/approx.py:TestApprox.test_error_messages_numpy_dtypes",
      "target": "testing/python/approx.py:assert_approx_raises_regex",
      "type": "invokes"
    },
    {
      "source": "testing/python/approx.py:TestApprox.test_error_messages_with_different_verbosity",
      "target": "testing/python/approx.py:assert_approx_raises_regex",
      "type": "invokes"
    },
    {
      "source": "testing/python/approx.py:TestApprox.test_dict_for_div_by_zero",
      "target": "testing/python/approx.py:assert_approx_raises_regex",
      "type": "invokes"
    },
    {
      "source": "testing/python/approx.py:TestApprox.test_numpy_array_protocol",
      "target": "testing/python/approx.py:TestApprox.test_numpy_array_protocol.DeviceArray",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox.test_numpy_array_protocol",
      "target": "testing/python/approx.py:TestApprox.test_numpy_array_protocol.DeviceArray",
      "type": "invokes"
    },
    {
      "source": "testing/python/approx.py:TestApprox.test_numpy_array_protocol",
      "target": "testing/python/approx.py:TestApprox.test_numpy_array_protocol.DeviceScalar",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox.test_numpy_array_protocol",
      "target": "testing/python/approx.py:TestApprox.test_numpy_array_protocol.DeviceScalar",
      "type": "invokes"
    },
    {
      "source": "testing/python/approx.py:TestApprox.test_numpy_array_protocol.DeviceArray",
      "target": "testing/python/approx.py:TestApprox.test_numpy_array_protocol.DeviceArray.__array__",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox.test_numpy_array_protocol.DeviceScalar",
      "target": "testing/python/approx.py:TestApprox.test_numpy_array_protocol.DeviceScalar.__array__",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox.test_generic_ordered_sequence",
      "target": "testing/python/approx.py:TestApprox.test_generic_ordered_sequence.MySequence",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox.test_generic_ordered_sequence",
      "target": "testing/python/approx.py:TestApprox.test_generic_ordered_sequence.MySequence",
      "type": "invokes"
    },
    {
      "source": "testing/python/approx.py:TestApprox.test_generic_ordered_sequence.MySequence",
      "target": "testing/python/approx.py:TestApprox.test_generic_ordered_sequence.MySequence.__getitem__",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestApprox.test_generic_ordered_sequence.MySequence",
      "target": "testing/python/approx.py:TestApprox.test_generic_ordered_sequence.MySequence.__len__",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestRecursiveSequenceMap",
      "target": "testing/python/approx.py:TestRecursiveSequenceMap.test_map_over_scalar",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestRecursiveSequenceMap",
      "target": "testing/python/approx.py:TestRecursiveSequenceMap.test_map_over_empty_list",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestRecursiveSequenceMap",
      "target": "testing/python/approx.py:TestRecursiveSequenceMap.test_map_over_list",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestRecursiveSequenceMap",
      "target": "testing/python/approx.py:TestRecursiveSequenceMap.test_map_over_tuple",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestRecursiveSequenceMap",
      "target": "testing/python/approx.py:TestRecursiveSequenceMap.test_map_over_nested_lists",
      "type": "contains"
    },
    {
      "source": "testing/python/approx.py:TestRecursiveSequenceMap",
      "target": "testing/python/approx.py:TestRecursiveSequenceMap.test_map_over_mixed_sequence",
      "type": "contains"
    },
    {
      "source": "testing/python/show_fixtures_per_test.py",
      "target": "testing/python/show_fixtures_per_test.py:test_no_items_should_not_show_output",
      "type": "contains"
    },
    {
      "source": "testing/python/show_fixtures_per_test.py",
      "target": "testing/python/show_fixtures_per_test.py:test_fixtures_in_module",
      "type": "contains"
    },
    {
      "source": "testing/python/show_fixtures_per_test.py",
      "target": "testing/python/show_fixtures_per_test.py:test_fixtures_in_conftest",
      "type": "contains"
    },
    {
      "source": "testing/python/show_fixtures_per_test.py",
      "target": "testing/python/show_fixtures_per_test.py:test_should_show_fixtures_used_by_test",
      "type": "contains"
    },
    {
      "source": "testing/python/show_fixtures_per_test.py",
      "target": "testing/python/show_fixtures_per_test.py:test_verbose_include_private_fixtures_and_loc",
      "type": "contains"
    },
    {
      "source": "testing/python/show_fixtures_per_test.py",
      "target": "testing/python/show_fixtures_per_test.py:test_doctest_items",
      "type": "contains"
    },
    {
      "source": "testing/python/show_fixtures_per_test.py",
      "target": "testing/python/show_fixtures_per_test.py:test_multiline_docstring_in_module",
      "type": "contains"
    },
    {
      "source": "testing/python/show_fixtures_per_test.py",
      "target": "testing/python/show_fixtures_per_test.py:test_verbose_include_multiline_docstring",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py",
      "target": "testing/python/collect.py:TestModule",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py",
      "target": "testing/python/collect.py:TestClass",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py",
      "target": "testing/python/collect.py:TestFunction",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py",
      "target": "testing/python/collect.py:TestSorting",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py",
      "target": "testing/python/collect.py:TestConftestCustomization",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py",
      "target": "testing/python/collect.py:test_setup_only_available_in_subdir",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py",
      "target": "testing/python/collect.py:test_modulecol_roundtrip",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py",
      "target": "testing/python/collect.py:TestTracebackCutting",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py",
      "target": "testing/python/collect.py:TestReportInfo",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py",
      "target": "testing/python/collect.py:test_customized_python_discovery",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py",
      "target": "testing/python/collect.py:test_customized_python_discovery_functions",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py",
      "target": "testing/python/collect.py:test_unorderable_types",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py",
      "target": "testing/python/collect.py:test_dont_collect_non_function_callable",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py",
      "target": "testing/python/collect.py:test_class_injection_does_not_break_collection",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py",
      "target": "testing/python/collect.py:test_syntax_error_with_non_ascii_chars",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py",
      "target": "testing/python/collect.py:test_collect_error_with_fulltrace",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py",
      "target": "testing/python/collect.py:test_skip_duplicates_by_default",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py",
      "target": "testing/python/collect.py:test_keep_duplicates",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py",
      "target": "testing/python/collect.py:test_package_collection_infinite_recursion",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py",
      "target": "testing/python/collect.py:test_package_collection_init_given_as_argument",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py",
      "target": "testing/python/collect.py:test_package_with_modules",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py",
      "target": "testing/python/collect.py:test_package_ordering",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestModule",
      "target": "testing/python/collect.py:TestModule.test_failing_import",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestModule",
      "target": "testing/python/collect.py:TestModule.test_import_duplicate",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestModule",
      "target": "testing/python/collect.py:TestModule.test_import_prepend_append",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestModule",
      "target": "testing/python/collect.py:TestModule.test_syntax_error_in_module",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestModule",
      "target": "testing/python/collect.py:TestModule.test_module_considers_pluginmanager_at_import",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestModule",
      "target": "testing/python/collect.py:TestModule.test_invalid_test_module_name",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestModule",
      "target": "testing/python/collect.py:TestModule.test_show_traceback_import_error",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestModule",
      "target": "testing/python/collect.py:TestModule.test_show_traceback_import_error_unicode",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestClass",
      "target": "testing/python/collect.py:TestClass.test_class_with_init_warning",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestClass",
      "target": "testing/python/collect.py:TestClass.test_class_with_new_warning",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestClass",
      "target": "testing/python/collect.py:TestClass.test_class_subclassobject",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestClass",
      "target": "testing/python/collect.py:TestClass.test_static_method",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestClass",
      "target": "testing/python/collect.py:TestClass.test_setup_teardown_class_as_classmethod",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestClass",
      "target": "testing/python/collect.py:TestClass.test_issue1035_obj_has_getattr",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestClass",
      "target": "testing/python/collect.py:TestClass.test_issue1579_namedtuple",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestClass",
      "target": "testing/python/collect.py:TestClass.test_issue2234_property",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction",
      "target": "testing/python/collect.py:TestFunction.test_getmodulecollector",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction",
      "target": "testing/python/collect.py:TestFunction.test_function_as_object_instance_ignored",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction",
      "target": "testing/python/collect.py:TestFunction.make_function",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction",
      "target": "testing/python/collect.py:TestFunction.test_function_equality",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction",
      "target": "testing/python/collect.py:TestFunction.test_repr_produces_actual_test_id",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction",
      "target": "testing/python/collect.py:TestFunction.test_issue197_parametrize_emptyset",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction",
      "target": "testing/python/collect.py:TestFunction.test_single_tuple_unwraps_values",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction",
      "target": "testing/python/collect.py:TestFunction.test_issue213_parametrize_value_no_equal",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction",
      "target": "testing/python/collect.py:TestFunction.test_parametrize_with_non_hashable_values",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction",
      "target": "testing/python/collect.py:TestFunction.test_parametrize_with_non_hashable_values_indirect",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction",
      "target": "testing/python/collect.py:TestFunction.test_parametrize_overrides_fixture",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction",
      "target": "testing/python/collect.py:TestFunction.test_parametrize_overrides_parametrized_fixture",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction",
      "target": "testing/python/collect.py:TestFunction.test_parametrize_overrides_indirect_dependency_fixture",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction",
      "target": "testing/python/collect.py:TestFunction.test_parametrize_with_mark",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction",
      "target": "testing/python/collect.py:TestFunction.test_parametrize_with_empty_string_arguments",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction",
      "target": "testing/python/collect.py:TestFunction.test_function_equality_with_callspec",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction",
      "target": "testing/python/collect.py:TestFunction.test_pyfunc_call",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction",
      "target": "testing/python/collect.py:TestFunction.test_multiple_parametrize",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction",
      "target": "testing/python/collect.py:TestFunction.test_issue751_multiple_parametrize_with_ids",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction",
      "target": "testing/python/collect.py:TestFunction.test_parametrize_skipif",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction",
      "target": "testing/python/collect.py:TestFunction.test_parametrize_skip",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction",
      "target": "testing/python/collect.py:TestFunction.test_parametrize_skipif_no_skip",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction",
      "target": "testing/python/collect.py:TestFunction.test_parametrize_xfail",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction",
      "target": "testing/python/collect.py:TestFunction.test_parametrize_passed",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction",
      "target": "testing/python/collect.py:TestFunction.test_parametrize_xfail_passed",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction",
      "target": "testing/python/collect.py:TestFunction.test_function_originalname",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction",
      "target": "testing/python/collect.py:TestFunction.test_function_with_square_brackets",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction.test_function_equality",
      "target": "testing/python/collect.py:TestFunction.test_function_equality.func1",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction.test_function_equality",
      "target": "testing/python/collect.py:TestFunction.test_function_equality.func2",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction.test_function_equality",
      "target": "testing/python/collect.py:TestFunction.make_function",
      "type": "invokes"
    },
    {
      "source": "testing/python/collect.py:TestFunction.test_repr_produces_actual_test_id",
      "target": "testing/python/collect.py:TestFunction.make_function",
      "type": "invokes"
    },
    {
      "source": "testing/python/collect.py:TestFunction.test_pyfunc_call",
      "target": "testing/python/collect.py:TestFunction.test_pyfunc_call.MyPlugin1",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction.test_pyfunc_call",
      "target": "testing/python/collect.py:TestFunction.test_pyfunc_call.MyPlugin1",
      "type": "invokes"
    },
    {
      "source": "testing/python/collect.py:TestFunction.test_pyfunc_call",
      "target": "testing/python/collect.py:TestFunction.test_pyfunc_call.MyPlugin2",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction.test_pyfunc_call",
      "target": "testing/python/collect.py:TestFunction.test_pyfunc_call.MyPlugin2",
      "type": "invokes"
    },
    {
      "source": "testing/python/collect.py:TestFunction.test_pyfunc_call",
      "target": "testing/python/collect.py:TestFunction.test_pyfunc_call.MyPlugin2.pytest_pyfunc_call",
      "type": "invokes"
    },
    {
      "source": "testing/python/collect.py:TestFunction.test_pyfunc_call",
      "target": "testing/python/collect.py:TestFunction.test_pyfunc_call.MyPlugin1.pytest_pyfunc_call",
      "type": "invokes"
    },
    {
      "source": "testing/python/collect.py:TestFunction.test_pyfunc_call.MyPlugin1",
      "target": "testing/python/collect.py:TestFunction.test_pyfunc_call.MyPlugin1.pytest_pyfunc_call",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestFunction.test_pyfunc_call.MyPlugin2",
      "target": "testing/python/collect.py:TestFunction.test_pyfunc_call.MyPlugin2.pytest_pyfunc_call",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestSorting",
      "target": "testing/python/collect.py:TestSorting.test_check_equality",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestSorting",
      "target": "testing/python/collect.py:TestSorting.test_allow_sane_sorting_for_decorators",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestSorting",
      "target": "testing/python/collect.py:TestSorting.test_ordered_by_definition_order",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestConftestCustomization",
      "target": "testing/python/collect.py:TestConftestCustomization.test_pytest_pycollect_module",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestConftestCustomization",
      "target": "testing/python/collect.py:TestConftestCustomization.test_customized_pymakemodule_issue205_subdir",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestConftestCustomization",
      "target": "testing/python/collect.py:TestConftestCustomization.test_customized_pymakeitem",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestConftestCustomization",
      "target": "testing/python/collect.py:TestConftestCustomization.test_pytest_pycollect_makeitem",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestConftestCustomization",
      "target": "testing/python/collect.py:TestConftestCustomization.test_issue2369_collect_module_fileext",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestConftestCustomization",
      "target": "testing/python/collect.py:TestConftestCustomization.test_early_ignored_attributes",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestTracebackCutting",
      "target": "testing/python/collect.py:TestTracebackCutting.test_skip_simple",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestTracebackCutting",
      "target": "testing/python/collect.py:TestTracebackCutting.test_traceback_argsetup",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestTracebackCutting",
      "target": "testing/python/collect.py:TestTracebackCutting.test_traceback_error_during_import",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestTracebackCutting",
      "target": "testing/python/collect.py:TestTracebackCutting.test_traceback_filter_error_during_fixture_collection",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestTracebackCutting",
      "target": "testing/python/collect.py:TestTracebackCutting.test_filter_traceback_generated_code",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestTracebackCutting",
      "target": "testing/python/collect.py:TestTracebackCutting.test_filter_traceback_path_no_longer_valid",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestReportInfo",
      "target": "testing/python/collect.py:TestReportInfo.test_itemreport_reportinfo",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestReportInfo",
      "target": "testing/python/collect.py:TestReportInfo.test_func_reportinfo",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestReportInfo",
      "target": "testing/python/collect.py:TestReportInfo.test_class_reportinfo",
      "type": "contains"
    },
    {
      "source": "testing/python/collect.py:TestReportInfo",
      "target": "testing/python/collect.py:TestReportInfo.test_reportinfo_with_nasty_getattr",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py",
      "target": "testing/python/metafunc.py:TestMetafunc",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py",
      "target": "testing/python/metafunc.py:TestMetafuncFunctional",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py",
      "target": "testing/python/metafunc.py:TestMetafuncFunctionalAuto",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py",
      "target": "testing/python/metafunc.py:TestMarkersWithParametrization",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.Metafunc",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_no_funcargs",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_function_basic",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_error",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_error_iterator",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_bad_scope",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_request_name",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_find_parametrized_scope",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_and_id",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_and_id_unicode",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_with_wrong_number_of_ids",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_ids_iterator_without_mark",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_empty_list",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_with_userobjects",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_idval_hypothesis",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_unicode_idval",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_unicode_idval_with_config",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_bytes_idval",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_class_or_function_idval",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_notset_idval",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_idmaker_autoname",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_bytes_regex",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_idmaker_native_strings",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_idmaker_non_printable_characters",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_idmaker_manual_ids_must_be_printable",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_idmaker_enum",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_idmaker_idfn",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_idmaker_idfn_unique_names",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_idfn_and_config",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_ids_and_config",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_ids_exception",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_ids_returns_non_string",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_ids",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_paramset_id",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_ids_unique_names",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_list",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_list_all",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_list_empty",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_wrong_type",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_list_functional",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_list_error",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_uses_no_fixture_error_indirect_false",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_uses_no_fixture_error_indirect_true",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_uses_no_fixture_error_indirect_string",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_uses_no_fixture_error_indirect_list",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_argument_not_in_indirect_list",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_gives_indicative_error_on_function_with_default_argument",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_functional",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_onearg",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_onearg_indirect",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_twoargs",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_multiple_times",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_CSV",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_class_scenarios",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.Metafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.Metafunc.FuncFixtureInfoMock",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.Metafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.Metafunc.FuncFixtureInfoMock",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.Metafunc",
      "target": "testing/python/metafunc.py:TestMetafunc.Metafunc.DefinitionMock",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_no_funcargs",
      "target": "testing/python/metafunc.py:TestMetafunc.test_no_funcargs.function",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_no_funcargs",
      "target": "testing/python/metafunc.py:TestMetafunc.Metafunc",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_function_basic",
      "target": "testing/python/metafunc.py:TestMetafunc.test_function_basic.func",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_function_basic",
      "target": "testing/python/metafunc.py:TestMetafunc.Metafunc",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_error",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_error.func",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_error",
      "target": "testing/python/metafunc.py:TestMetafunc.Metafunc",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_error_iterator",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_error_iterator.func",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_error_iterator",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_error_iterator.Exc",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_error_iterator",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_error_iterator.gen",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_error_iterator",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_error_iterator.gen",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_error_iterator",
      "target": "testing/python/metafunc.py:TestMetafunc.Metafunc",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_error_iterator.Exc",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_error_iterator.Exc.__repr__",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_error_iterator.gen",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_error_iterator.Exc",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_bad_scope",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_bad_scope.func",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_bad_scope",
      "target": "testing/python/metafunc.py:TestMetafunc.Metafunc",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_request_name",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_request_name.func",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_request_name",
      "target": "testing/python/metafunc.py:TestMetafunc.Metafunc",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_find_parametrized_scope",
      "target": "testing/python/metafunc.py:TestMetafunc.test_find_parametrized_scope.DummyFixtureDef",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_find_parametrized_scope",
      "target": "testing/python/metafunc.py:TestMetafunc.test_find_parametrized_scope.DummyFixtureDef",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_find_parametrized_scope",
      "target": "testing/python/metafunc.py:TestMetafunc.test_find_parametrized_scope.find_scope",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_find_parametrized_scope",
      "target": "testing/python/metafunc.py:TestMetafunc.test_find_parametrized_scope.find_scope",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_and_id",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_and_id.func",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_and_id",
      "target": "testing/python/metafunc.py:TestMetafunc.Metafunc",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_and_id_unicode",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_and_id_unicode.func",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_and_id_unicode",
      "target": "testing/python/metafunc.py:TestMetafunc.Metafunc",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_with_wrong_number_of_ids",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_with_wrong_number_of_ids.func",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_with_wrong_number_of_ids",
      "target": "testing/python/metafunc.py:TestMetafunc.Metafunc",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_ids_iterator_without_mark",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_ids_iterator_without_mark.func",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_ids_iterator_without_mark",
      "target": "testing/python/metafunc.py:TestMetafunc.Metafunc",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_empty_list",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_empty_list.func",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_empty_list",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_empty_list.MockConfig",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_empty_list",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_empty_list.MockConfig",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_empty_list",
      "target": "testing/python/metafunc.py:TestMetafunc.Metafunc",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_empty_list.MockConfig",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_empty_list.MockConfig.getini",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_empty_list.MockConfig",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_empty_list.MockConfig.hook",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_empty_list.MockConfig",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_empty_list.MockConfig.pytest_make_parametrize_id",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_with_userobjects",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_with_userobjects.func",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_with_userobjects",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_with_userobjects.A",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_with_userobjects",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_with_userobjects.A",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_with_userobjects",
      "target": "testing/python/metafunc.py:TestMetafunc.Metafunc",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_unicode_idval_with_config",
      "target": "testing/python/metafunc.py:TestMetafunc.test_unicode_idval_with_config.MockConfig",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_unicode_idval_with_config",
      "target": "testing/python/metafunc.py:TestMetafunc.test_unicode_idval_with_config.MockConfig",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_unicode_idval_with_config.MockConfig",
      "target": "testing/python/metafunc.py:TestMetafunc.test_unicode_idval_with_config.MockConfig.hook",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_unicode_idval_with_config.MockConfig",
      "target": "testing/python/metafunc.py:TestMetafunc.test_unicode_idval_with_config.MockConfig.pytest_make_parametrize_id",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_unicode_idval_with_config.MockConfig",
      "target": "testing/python/metafunc.py:TestMetafunc.test_unicode_idval_with_config.MockConfig.getini",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_class_or_function_idval",
      "target": "testing/python/metafunc.py:TestMetafunc.test_class_or_function_idval.TestClass",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_class_or_function_idval",
      "target": "testing/python/metafunc.py:TestMetafunc.test_class_or_function_idval.test_function",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_idmaker_idfn",
      "target": "testing/python/metafunc.py:TestMetafunc.test_idmaker_idfn.ids",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_idmaker_idfn_unique_names",
      "target": "testing/python/metafunc.py:TestMetafunc.test_idmaker_idfn_unique_names.ids",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_idfn_and_config",
      "target": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_idfn_and_config.MockConfig",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_idfn_and_config",
      "target": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_idfn_and_config.MockConfig",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_idfn_and_config.MockConfig",
      "target": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_idfn_and_config.MockConfig.hook",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_idfn_and_config.MockConfig",
      "target": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_idfn_and_config.MockConfig.pytest_make_parametrize_id",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_idfn_and_config.MockConfig",
      "target": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_idfn_and_config.MockConfig.getini",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_ids_and_config",
      "target": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_ids_and_config.MockConfig",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_ids_and_config",
      "target": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_ids_and_config.MockConfig",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_ids_and_config.MockConfig",
      "target": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_ids_and_config.MockConfig.hook",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_ids_and_config.MockConfig",
      "target": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_ids_and_config.MockConfig.pytest_make_parametrize_id",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_ids_and_config.MockConfig",
      "target": "testing/python/metafunc.py:TestMetafunc.test_idmaker_with_ids_and_config.MockConfig.getini",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect.func",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect",
      "target": "testing/python/metafunc.py:TestMetafunc.Metafunc",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_list",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_list.func",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_list",
      "target": "testing/python/metafunc.py:TestMetafunc.Metafunc",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_list_all",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_list_all.func",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_list_all",
      "target": "testing/python/metafunc.py:TestMetafunc.Metafunc",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_list_empty",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_list_empty.func",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_list_empty",
      "target": "testing/python/metafunc.py:TestMetafunc.Metafunc",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_wrong_type",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_wrong_type.func",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_wrong_type",
      "target": "testing/python/metafunc.py:TestMetafunc.Metafunc",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_list_error",
      "target": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_list_error.func",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_indirect_list_error",
      "target": "testing/python/metafunc.py:TestMetafunc.Metafunc",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_onearg",
      "target": "testing/python/metafunc.py:TestMetafunc.Metafunc",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_onearg_indirect",
      "target": "testing/python/metafunc.py:TestMetafunc.Metafunc",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafunc.test_parametrize_twoargs",
      "target": "testing/python/metafunc.py:TestMetafunc.Metafunc",
      "type": "invokes"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafuncFunctional",
      "target": "testing/python/metafunc.py:TestMetafuncFunctional.test_attributes",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafuncFunctional",
      "target": "testing/python/metafunc.py:TestMetafuncFunctional.test_two_functions",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafuncFunctional",
      "target": "testing/python/metafunc.py:TestMetafuncFunctional.test_noself_in_method",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafuncFunctional",
      "target": "testing/python/metafunc.py:TestMetafuncFunctional.test_generate_tests_in_class",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafuncFunctional",
      "target": "testing/python/metafunc.py:TestMetafuncFunctional.test_two_functions_not_same_instance",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafuncFunctional",
      "target": "testing/python/metafunc.py:TestMetafuncFunctional.test_issue28_setup_method_in_generate_tests",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafuncFunctional",
      "target": "testing/python/metafunc.py:TestMetafuncFunctional.test_parametrize_functional2",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafuncFunctional",
      "target": "testing/python/metafunc.py:TestMetafuncFunctional.test_parametrize_and_inner_getfixturevalue",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafuncFunctional",
      "target": "testing/python/metafunc.py:TestMetafuncFunctional.test_parametrize_on_setup_arg",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafuncFunctional",
      "target": "testing/python/metafunc.py:TestMetafuncFunctional.test_parametrize_with_ids",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafuncFunctional",
      "target": "testing/python/metafunc.py:TestMetafuncFunctional.test_parametrize_without_ids",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafuncFunctional",
      "target": "testing/python/metafunc.py:TestMetafuncFunctional.test_parametrize_with_None_in_ids",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafuncFunctional",
      "target": "testing/python/metafunc.py:TestMetafuncFunctional.test_fixture_parametrized_empty_ids",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafuncFunctional",
      "target": "testing/python/metafunc.py:TestMetafuncFunctional.test_parametrized_empty_ids",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafuncFunctional",
      "target": "testing/python/metafunc.py:TestMetafuncFunctional.test_parametrized_ids_invalid_type",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafuncFunctional",
      "target": "testing/python/metafunc.py:TestMetafuncFunctional.test_parametrize_with_identical_ids_get_unique_names",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafuncFunctional",
      "target": "testing/python/metafunc.py:TestMetafuncFunctional.test_parametrize_scope_overrides",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafuncFunctional",
      "target": "testing/python/metafunc.py:TestMetafuncFunctional.test_parametrize_issue323",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafuncFunctional",
      "target": "testing/python/metafunc.py:TestMetafuncFunctional.test_usefixtures_seen_in_generate_tests",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafuncFunctional",
      "target": "testing/python/metafunc.py:TestMetafuncFunctional.test_generate_tests_only_done_in_subdir",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafuncFunctional",
      "target": "testing/python/metafunc.py:TestMetafuncFunctional.test_generate_same_function_names_issue403",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafuncFunctional",
      "target": "testing/python/metafunc.py:TestMetafuncFunctional.test_parametrize_misspelling",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafuncFunctionalAuto",
      "target": "testing/python/metafunc.py:TestMetafuncFunctionalAuto.test_parametrize_auto_scope",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafuncFunctionalAuto",
      "target": "testing/python/metafunc.py:TestMetafuncFunctionalAuto.test_parametrize_auto_scope_indirect",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafuncFunctionalAuto",
      "target": "testing/python/metafunc.py:TestMetafuncFunctionalAuto.test_parametrize_auto_scope_override_fixture",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafuncFunctionalAuto",
      "target": "testing/python/metafunc.py:TestMetafuncFunctionalAuto.test_parametrize_all_indirects",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafuncFunctionalAuto",
      "target": "testing/python/metafunc.py:TestMetafuncFunctionalAuto.test_parametrize_some_arguments_auto_scope",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMetafuncFunctionalAuto",
      "target": "testing/python/metafunc.py:TestMetafuncFunctionalAuto.test_parametrize_issue634",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMarkersWithParametrization",
      "target": "testing/python/metafunc.py:TestMarkersWithParametrization.test_simple_mark",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMarkersWithParametrization",
      "target": "testing/python/metafunc.py:TestMarkersWithParametrization.test_select_based_on_mark",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMarkersWithParametrization",
      "target": "testing/python/metafunc.py:TestMarkersWithParametrization.test_simple_xfail",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMarkersWithParametrization",
      "target": "testing/python/metafunc.py:TestMarkersWithParametrization.test_simple_xfail_single_argname",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMarkersWithParametrization",
      "target": "testing/python/metafunc.py:TestMarkersWithParametrization.test_xfail_with_arg",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMarkersWithParametrization",
      "target": "testing/python/metafunc.py:TestMarkersWithParametrization.test_xfail_with_kwarg",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMarkersWithParametrization",
      "target": "testing/python/metafunc.py:TestMarkersWithParametrization.test_xfail_with_arg_and_kwarg",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMarkersWithParametrization",
      "target": "testing/python/metafunc.py:TestMarkersWithParametrization.test_xfail_passing_is_xpass",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMarkersWithParametrization",
      "target": "testing/python/metafunc.py:TestMarkersWithParametrization.test_parametrize_called_in_generate_tests",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMarkersWithParametrization",
      "target": "testing/python/metafunc.py:TestMarkersWithParametrization.test_parametrize_ID_generation_string_int_works",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMarkersWithParametrization",
      "target": "testing/python/metafunc.py:TestMarkersWithParametrization.test_parametrize_marked_value",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMarkersWithParametrization",
      "target": "testing/python/metafunc.py:TestMarkersWithParametrization.test_pytest_make_parametrize_id",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMarkersWithParametrization",
      "target": "testing/python/metafunc.py:TestMarkersWithParametrization.test_pytest_make_parametrize_id_with_argname",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMarkersWithParametrization",
      "target": "testing/python/metafunc.py:TestMarkersWithParametrization.test_parametrize_positional_args",
      "type": "contains"
    },
    {
      "source": "testing/python/metafunc.py:TestMarkersWithParametrization",
      "target": "testing/python/metafunc.py:TestMarkersWithParametrization.test_parametrize_iterator",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py",
      "target": "testing/python/integration.py:test_wrapped_getfslineno",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py",
      "target": "testing/python/integration.py:TestMockDecoration",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py",
      "target": "testing/python/integration.py:TestReRunTests",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py",
      "target": "testing/python/integration.py:test_pytestconfig_is_session_scoped",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py",
      "target": "testing/python/integration.py:TestNoselikeTestAttribute",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py",
      "target": "testing/python/integration.py:TestParameterize",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py",
      "target": "testing/python/integration.py:test_function_instance",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py:test_wrapped_getfslineno",
      "target": "testing/python/integration.py:test_wrapped_getfslineno.func",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py:test_wrapped_getfslineno",
      "target": "testing/python/integration.py:test_wrapped_getfslineno.wrap",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py:test_wrapped_getfslineno",
      "target": "testing/python/integration.py:test_wrapped_getfslineno.wrapped_func",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py:TestMockDecoration",
      "target": "testing/python/integration.py:TestMockDecoration.test_wrapped_getfuncargnames",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py:TestMockDecoration",
      "target": "testing/python/integration.py:TestMockDecoration.test_getfuncargnames_patching",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py:TestMockDecoration",
      "target": "testing/python/integration.py:TestMockDecoration.test_unittest_mock",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py:TestMockDecoration",
      "target": "testing/python/integration.py:TestMockDecoration.test_unittest_mock_and_fixture",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py:TestMockDecoration",
      "target": "testing/python/integration.py:TestMockDecoration.test_unittest_mock_and_pypi_mock",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py:TestMockDecoration",
      "target": "testing/python/integration.py:TestMockDecoration.test_mock_sentinel_check_against_numpy_like",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py:TestMockDecoration",
      "target": "testing/python/integration.py:TestMockDecoration.test_mock",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py:TestMockDecoration",
      "target": "testing/python/integration.py:TestMockDecoration.test_mock_sorting",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py:TestMockDecoration",
      "target": "testing/python/integration.py:TestMockDecoration.test_mock_double_patch_issue473",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py:TestMockDecoration.test_wrapped_getfuncargnames",
      "target": "testing/python/integration.py:TestMockDecoration.test_wrapped_getfuncargnames.wrap",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py:TestMockDecoration.test_wrapped_getfuncargnames",
      "target": "testing/python/integration.py:TestMockDecoration.test_wrapped_getfuncargnames.f",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py:TestMockDecoration.test_wrapped_getfuncargnames.wrap",
      "target": "testing/python/integration.py:TestMockDecoration.test_wrapped_getfuncargnames.wrap.func",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py:TestMockDecoration.test_getfuncargnames_patching",
      "target": "testing/python/integration.py:TestMockDecoration.test_getfuncargnames_patching.T",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py:TestMockDecoration.test_getfuncargnames_patching",
      "target": "testing/python/integration.py:TestMockDecoration.test_getfuncargnames_patching.f",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py:TestMockDecoration.test_getfuncargnames_patching.T",
      "target": "testing/python/integration.py:TestMockDecoration.test_getfuncargnames_patching.T.original",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py:TestReRunTests",
      "target": "testing/python/integration.py:TestReRunTests.test_rerun",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py:TestNoselikeTestAttribute",
      "target": "testing/python/integration.py:TestNoselikeTestAttribute.test_module_with_global_test",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py:TestNoselikeTestAttribute",
      "target": "testing/python/integration.py:TestNoselikeTestAttribute.test_class_and_method",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py:TestNoselikeTestAttribute",
      "target": "testing/python/integration.py:TestNoselikeTestAttribute.test_unittest_class",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py:TestNoselikeTestAttribute",
      "target": "testing/python/integration.py:TestNoselikeTestAttribute.test_class_with_nasty_getattr",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py:TestParameterize",
      "target": "testing/python/integration.py:TestParameterize.test_idfn_marker",
      "type": "contains"
    },
    {
      "source": "testing/python/integration.py:TestParameterize",
      "target": "testing/python/integration.py:TestParameterize.test_idfn_fixture",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py",
      "target": "testing/python/raises.py:TestRaises",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises",
      "target": "testing/python/raises.py:TestRaises.test_check_callable",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises",
      "target": "testing/python/raises.py:TestRaises.test_raises",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises",
      "target": "testing/python/raises.py:TestRaises.test_raises_function",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises",
      "target": "testing/python/raises.py:TestRaises.test_raises_does_not_allow_none",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises",
      "target": "testing/python/raises.py:TestRaises.test_raises_does_not_allow_empty_tuple",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises",
      "target": "testing/python/raises.py:TestRaises.test_raises_callable_no_exception",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises",
      "target": "testing/python/raises.py:TestRaises.test_raises_falsey_type_error",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises",
      "target": "testing/python/raises.py:TestRaises.test_raises_repr_inflight",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises",
      "target": "testing/python/raises.py:TestRaises.test_raises_as_contextmanager",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises",
      "target": "testing/python/raises.py:TestRaises.test_does_not_raise",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises",
      "target": "testing/python/raises.py:TestRaises.test_does_not_raise_does_raise",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises",
      "target": "testing/python/raises.py:TestRaises.test_noclass",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises",
      "target": "testing/python/raises.py:TestRaises.test_invalid_arguments_to_raises",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises",
      "target": "testing/python/raises.py:TestRaises.test_tuple",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises",
      "target": "testing/python/raises.py:TestRaises.test_no_raise_message",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises",
      "target": "testing/python/raises.py:TestRaises.test_raises_cyclic_reference",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises",
      "target": "testing/python/raises.py:TestRaises.test_raises_match",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises",
      "target": "testing/python/raises.py:TestRaises.test_match_failure_string_quoting",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises",
      "target": "testing/python/raises.py:TestRaises.test_match_failure_exact_string_message",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises",
      "target": "testing/python/raises.py:TestRaises.test_raises_match_wrong_type",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises",
      "target": "testing/python/raises.py:TestRaises.test_raises_exception_looks_iterable",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises",
      "target": "testing/python/raises.py:TestRaises.test_raises_with_raising_dunder_class",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises",
      "target": "testing/python/raises.py:TestRaises.test_raises_context_manager_with_kwargs",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises",
      "target": "testing/python/raises.py:TestRaises.test_expected_exception_is_not_a_baseexception",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises.test_raises_callable_no_exception",
      "target": "testing/python/raises.py:TestRaises.test_raises_callable_no_exception.A",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises.test_raises_callable_no_exception",
      "target": "testing/python/raises.py:TestRaises.test_raises_callable_no_exception.A",
      "type": "invokes"
    },
    {
      "source": "testing/python/raises.py:TestRaises.test_raises_callable_no_exception.A",
      "target": "testing/python/raises.py:TestRaises.test_raises_callable_no_exception.A.__call__",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises.test_raises_repr_inflight",
      "target": "testing/python/raises.py:TestRaises.test_raises_repr_inflight.E",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises.test_raises_repr_inflight",
      "target": "testing/python/raises.py:TestRaises.test_raises_repr_inflight.E",
      "type": "invokes"
    },
    {
      "source": "testing/python/raises.py:TestRaises.test_raises_cyclic_reference",
      "target": "testing/python/raises.py:TestRaises.test_raises_cyclic_reference.T",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises.test_raises_cyclic_reference",
      "target": "testing/python/raises.py:TestRaises.test_raises_cyclic_reference.T",
      "type": "invokes"
    },
    {
      "source": "testing/python/raises.py:TestRaises.test_raises_cyclic_reference.T",
      "target": "testing/python/raises.py:TestRaises.test_raises_cyclic_reference.T.__call__",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises.test_raises_match",
      "target": "testing/python/raises.py:TestRaises.test_raises_match.tfunc",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises.test_raises_exception_looks_iterable",
      "target": "testing/python/raises.py:TestRaises.test_raises_exception_looks_iterable.Meta",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises.test_raises_exception_looks_iterable",
      "target": "testing/python/raises.py:TestRaises.test_raises_exception_looks_iterable.ClassLooksIterableException",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises.test_raises_exception_looks_iterable.Meta",
      "target": "testing/python/raises.py:TestRaises.test_raises_exception_looks_iterable.Meta.__getitem__",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises.test_raises_exception_looks_iterable.Meta",
      "target": "testing/python/raises.py:TestRaises.test_raises_exception_looks_iterable.Meta.__len__",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises.test_raises_with_raising_dunder_class",
      "target": "testing/python/raises.py:TestRaises.test_raises_with_raising_dunder_class.CrappyClass",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises.test_raises_with_raising_dunder_class",
      "target": "testing/python/raises.py:TestRaises.test_raises_with_raising_dunder_class.CrappyClass",
      "type": "invokes"
    },
    {
      "source": "testing/python/raises.py:TestRaises.test_raises_with_raising_dunder_class.CrappyClass",
      "target": "testing/python/raises.py:TestRaises.test_raises_with_raising_dunder_class.CrappyClass.__class__",
      "type": "contains"
    },
    {
      "source": "testing/python/raises.py:TestRaises.test_expected_exception_is_not_a_baseexception",
      "target": "testing/python/raises.py:TestRaises.test_expected_exception_is_not_a_baseexception.NotAnException",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:test_getfuncargnames_functions",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:test_getfuncargnames_methods",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:test_getfuncargnames_staticmethod",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:test_getfuncargnames_staticmethod_inherited",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:test_getfuncargnames_partial",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:test_getfuncargnames_staticmethod_partial",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:TestFillFixtures",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:TestRequestBasic",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:TestRequestSessionScoped",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:TestRequestMarking",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:TestFixtureUsages",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:TestFixtureManagerParseFactories",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:TestAutouseDiscovery",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:TestAutouseManagement",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:TestFixtureMarker",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:TestRequestScopeAccess",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:TestErrors",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:TestShowFixtures",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:TestContextManagerFixtureFuncs",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:TestParameterizedSubRequest",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:test_pytest_fixture_setup_and_post_finalizer_hook",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:TestScopeOrdering",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:test_call_fixture_function_error",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:test_fixture_param_shadowing",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:test_fixture_named_request",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:test_indirect_fixture_does_not_break_scope",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:test_fixture_parametrization_nparray",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:test_fixture_arg_ordering",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py",
      "target": "testing/python/fixtures.py:test_yield_fixture_with_no_value",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:test_getfuncargnames_functions",
      "target": "testing/python/fixtures.py:test_getfuncargnames_functions.f",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:test_getfuncargnames_functions",
      "target": "testing/python/fixtures.py:test_getfuncargnames_functions.g",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:test_getfuncargnames_functions",
      "target": "testing/python/fixtures.py:test_getfuncargnames_functions.h",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:test_getfuncargnames_functions",
      "target": "testing/python/fixtures.py:test_getfuncargnames_functions.j",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:test_getfuncargnames_methods",
      "target": "testing/python/fixtures.py:test_getfuncargnames_methods.A",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:test_getfuncargnames_methods",
      "target": "testing/python/fixtures.py:test_getfuncargnames_methods.A",
      "type": "invokes"
    },
    {
      "source": "testing/python/fixtures.py:test_getfuncargnames_methods.A",
      "target": "testing/python/fixtures.py:test_getfuncargnames_methods.A.f",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:test_getfuncargnames_staticmethod",
      "target": "testing/python/fixtures.py:test_getfuncargnames_staticmethod.A",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:test_getfuncargnames_staticmethod.A",
      "target": "testing/python/fixtures.py:test_getfuncargnames_staticmethod.A.static",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:test_getfuncargnames_staticmethod_inherited",
      "target": "testing/python/fixtures.py:test_getfuncargnames_staticmethod_inherited.A",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:test_getfuncargnames_staticmethod_inherited",
      "target": "testing/python/fixtures.py:test_getfuncargnames_staticmethod_inherited.B",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:test_getfuncargnames_staticmethod_inherited.A",
      "target": "testing/python/fixtures.py:test_getfuncargnames_staticmethod_inherited.A.static",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:test_getfuncargnames_staticmethod_inherited.B",
      "target": "testing/python/fixtures.py:test_getfuncargnames_staticmethod_inherited.A",
      "type": "inherits"
    },
    {
      "source": "testing/python/fixtures.py:test_getfuncargnames_partial",
      "target": "testing/python/fixtures.py:test_getfuncargnames_partial.check",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:test_getfuncargnames_partial",
      "target": "testing/python/fixtures.py:test_getfuncargnames_partial.T",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:test_getfuncargnames_partial",
      "target": "testing/python/fixtures.py:test_getfuncargnames_partial.T",
      "type": "invokes"
    },
    {
      "source": "testing/python/fixtures.py:test_getfuncargnames_staticmethod_partial",
      "target": "testing/python/fixtures.py:test_getfuncargnames_staticmethod_partial.check",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:test_getfuncargnames_staticmethod_partial",
      "target": "testing/python/fixtures.py:test_getfuncargnames_staticmethod_partial.T",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:test_getfuncargnames_staticmethod_partial",
      "target": "testing/python/fixtures.py:test_getfuncargnames_staticmethod_partial.T",
      "type": "invokes"
    },
    {
      "source": "testing/python/fixtures.py:TestFillFixtures",
      "target": "testing/python/fixtures.py:TestFillFixtures.test_funcarg_lookupfails",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFillFixtures",
      "target": "testing/python/fixtures.py:TestFillFixtures.test_detect_recursive_dependency_error",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFillFixtures",
      "target": "testing/python/fixtures.py:TestFillFixtures.test_funcarg_basic",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFillFixtures",
      "target": "testing/python/fixtures.py:TestFillFixtures.test_funcarg_lookup_modulelevel",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFillFixtures",
      "target": "testing/python/fixtures.py:TestFillFixtures.test_funcarg_lookup_classlevel",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFillFixtures",
      "target": "testing/python/fixtures.py:TestFillFixtures.test_conftest_funcargs_only_available_in_subdir",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFillFixtures",
      "target": "testing/python/fixtures.py:TestFillFixtures.test_extend_fixture_module_class",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFillFixtures",
      "target": "testing/python/fixtures.py:TestFillFixtures.test_extend_fixture_conftest_module",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFillFixtures",
      "target": "testing/python/fixtures.py:TestFillFixtures.test_extend_fixture_conftest_conftest",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFillFixtures",
      "target": "testing/python/fixtures.py:TestFillFixtures.test_extend_fixture_conftest_plugin",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFillFixtures",
      "target": "testing/python/fixtures.py:TestFillFixtures.test_extend_fixture_plugin_plugin",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFillFixtures",
      "target": "testing/python/fixtures.py:TestFillFixtures.test_override_parametrized_fixture_conftest_module",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFillFixtures",
      "target": "testing/python/fixtures.py:TestFillFixtures.test_override_parametrized_fixture_conftest_conftest",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFillFixtures",
      "target": "testing/python/fixtures.py:TestFillFixtures.test_override_non_parametrized_fixture_conftest_module",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFillFixtures",
      "target": "testing/python/fixtures.py:TestFillFixtures.test_override_non_parametrized_fixture_conftest_conftest",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFillFixtures",
      "target": "testing/python/fixtures.py:TestFillFixtures.test_override_autouse_fixture_with_parametrized_fixture_conftest_conftest",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFillFixtures",
      "target": "testing/python/fixtures.py:TestFillFixtures.test_override_fixture_reusing_super_fixture_parametrization",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFillFixtures",
      "target": "testing/python/fixtures.py:TestFillFixtures.test_override_parametrize_fixture_and_indirect",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFillFixtures",
      "target": "testing/python/fixtures.py:TestFillFixtures.test_override_top_level_fixture_reusing_super_fixture_parametrization",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFillFixtures",
      "target": "testing/python/fixtures.py:TestFillFixtures.test_override_parametrized_fixture_with_new_parametrized_fixture",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFillFixtures",
      "target": "testing/python/fixtures.py:TestFillFixtures.test_autouse_fixture_plugin",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFillFixtures",
      "target": "testing/python/fixtures.py:TestFillFixtures.test_funcarg_lookup_error",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFillFixtures",
      "target": "testing/python/fixtures.py:TestFillFixtures.test_fixture_excinfo_leak",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestRequestBasic",
      "target": "testing/python/fixtures.py:TestRequestBasic.test_request_attributes",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestRequestBasic",
      "target": "testing/python/fixtures.py:TestRequestBasic.test_request_attributes_method",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestRequestBasic",
      "target": "testing/python/fixtures.py:TestRequestBasic.test_request_contains_funcarg_arg2fixturedefs",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestRequestBasic",
      "target": "testing/python/fixtures.py:TestRequestBasic.test_request_garbage",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestRequestBasic",
      "target": "testing/python/fixtures.py:TestRequestBasic.test_getfixturevalue_recursive",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestRequestBasic",
      "target": "testing/python/fixtures.py:TestRequestBasic.test_getfixturevalue_teardown",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestRequestBasic",
      "target": "testing/python/fixtures.py:TestRequestBasic.test_getfixturevalue",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestRequestBasic",
      "target": "testing/python/fixtures.py:TestRequestBasic.test_request_addfinalizer",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestRequestBasic",
      "target": "testing/python/fixtures.py:TestRequestBasic.test_request_addfinalizer_failing_setup",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestRequestBasic",
      "target": "testing/python/fixtures.py:TestRequestBasic.test_request_addfinalizer_failing_setup_module",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestRequestBasic",
      "target": "testing/python/fixtures.py:TestRequestBasic.test_request_addfinalizer_partial_setup_failure",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestRequestBasic",
      "target": "testing/python/fixtures.py:TestRequestBasic.test_request_subrequest_addfinalizer_exceptions",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestRequestBasic",
      "target": "testing/python/fixtures.py:TestRequestBasic.test_request_getmodulepath",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestRequestBasic",
      "target": "testing/python/fixtures.py:TestRequestBasic.test_request_fixturenames",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestRequestBasic",
      "target": "testing/python/fixtures.py:TestRequestBasic.test_request_fixturenames_dynamic_fixture",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestRequestBasic",
      "target": "testing/python/fixtures.py:TestRequestBasic.test_setupdecorator_and_xunit",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestRequestBasic",
      "target": "testing/python/fixtures.py:TestRequestBasic.test_fixtures_sub_subdir_normalize_sep",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestRequestBasic",
      "target": "testing/python/fixtures.py:TestRequestBasic.test_show_fixtures_color_yes",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestRequestBasic",
      "target": "testing/python/fixtures.py:TestRequestBasic.test_newstyle_with_request",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestRequestBasic",
      "target": "testing/python/fixtures.py:TestRequestBasic.test_setupcontext_no_param",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestRequestSessionScoped",
      "target": "testing/python/fixtures.py:TestRequestSessionScoped.session_request",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestRequestSessionScoped",
      "target": "testing/python/fixtures.py:TestRequestSessionScoped.test_session_scoped_unavailable_attributes",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestRequestMarking",
      "target": "testing/python/fixtures.py:TestRequestMarking.test_applymarker",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestRequestMarking",
      "target": "testing/python/fixtures.py:TestRequestMarking.test_accesskeywords",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestRequestMarking",
      "target": "testing/python/fixtures.py:TestRequestMarking.test_accessmarker_dynamic",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureUsages",
      "target": "testing/python/fixtures.py:TestFixtureUsages.test_noargfixturedec",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureUsages",
      "target": "testing/python/fixtures.py:TestFixtureUsages.test_receives_funcargs",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureUsages",
      "target": "testing/python/fixtures.py:TestFixtureUsages.test_receives_funcargs_scope_mismatch",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureUsages",
      "target": "testing/python/fixtures.py:TestFixtureUsages.test_receives_funcargs_scope_mismatch_issue660",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureUsages",
      "target": "testing/python/fixtures.py:TestFixtureUsages.test_invalid_scope",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureUsages",
      "target": "testing/python/fixtures.py:TestFixtureUsages.test_parameters_without_eq_semantics",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureUsages",
      "target": "testing/python/fixtures.py:TestFixtureUsages.test_funcarg_parametrized_and_used_twice",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureUsages",
      "target": "testing/python/fixtures.py:TestFixtureUsages.test_factory_uses_unknown_funcarg_as_dependency_error",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureUsages",
      "target": "testing/python/fixtures.py:TestFixtureUsages.test_factory_setup_as_classes_fails",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureUsages",
      "target": "testing/python/fixtures.py:TestFixtureUsages.test_usefixtures_marker",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureUsages",
      "target": "testing/python/fixtures.py:TestFixtureUsages.test_usefixtures_ini",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureUsages",
      "target": "testing/python/fixtures.py:TestFixtureUsages.test_usefixtures_seen_in_showmarkers",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureUsages",
      "target": "testing/python/fixtures.py:TestFixtureUsages.test_request_instance_issue203",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureUsages",
      "target": "testing/python/fixtures.py:TestFixtureUsages.test_fixture_parametrized_with_iterator",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureUsages",
      "target": "testing/python/fixtures.py:TestFixtureUsages.test_setup_functions_as_fixtures",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureManagerParseFactories",
      "target": "testing/python/fixtures.py:TestFixtureManagerParseFactories.pytester",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureManagerParseFactories",
      "target": "testing/python/fixtures.py:TestFixtureManagerParseFactories.test_parsefactories_evil_objects_issue214",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureManagerParseFactories",
      "target": "testing/python/fixtures.py:TestFixtureManagerParseFactories.test_parsefactories_conftest",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureManagerParseFactories",
      "target": "testing/python/fixtures.py:TestFixtureManagerParseFactories.test_parsefactories_conftest_and_module_and_class",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureManagerParseFactories",
      "target": "testing/python/fixtures.py:TestFixtureManagerParseFactories.test_parsefactories_relative_node_ids",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureManagerParseFactories",
      "target": "testing/python/fixtures.py:TestFixtureManagerParseFactories.test_package_xunit_fixture",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureManagerParseFactories",
      "target": "testing/python/fixtures.py:TestFixtureManagerParseFactories.test_package_fixture_complex",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureManagerParseFactories",
      "target": "testing/python/fixtures.py:TestFixtureManagerParseFactories.test_collect_custom_items",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestAutouseDiscovery",
      "target": "testing/python/fixtures.py:TestAutouseDiscovery.pytester",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestAutouseDiscovery",
      "target": "testing/python/fixtures.py:TestAutouseDiscovery.test_parsefactories_conftest",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestAutouseDiscovery",
      "target": "testing/python/fixtures.py:TestAutouseDiscovery.test_two_classes_separated_autouse",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestAutouseDiscovery",
      "target": "testing/python/fixtures.py:TestAutouseDiscovery.test_setup_at_classlevel",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestAutouseDiscovery",
      "target": "testing/python/fixtures.py:TestAutouseDiscovery.test_setup_enabled_functionnode",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestAutouseDiscovery",
      "target": "testing/python/fixtures.py:TestAutouseDiscovery.test_callables_nocode",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestAutouseDiscovery",
      "target": "testing/python/fixtures.py:TestAutouseDiscovery.test_autouse_in_conftests",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestAutouseDiscovery",
      "target": "testing/python/fixtures.py:TestAutouseDiscovery.test_autouse_in_module_and_two_classes",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestAutouseManagement",
      "target": "testing/python/fixtures.py:TestAutouseManagement.test_autouse_conftest_mid_directory",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestAutouseManagement",
      "target": "testing/python/fixtures.py:TestAutouseManagement.test_funcarg_and_setup",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestAutouseManagement",
      "target": "testing/python/fixtures.py:TestAutouseManagement.test_uses_parametrized_resource",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestAutouseManagement",
      "target": "testing/python/fixtures.py:TestAutouseManagement.test_session_parametrized_function",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestAutouseManagement",
      "target": "testing/python/fixtures.py:TestAutouseManagement.test_class_function_parametrization_finalization",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestAutouseManagement",
      "target": "testing/python/fixtures.py:TestAutouseManagement.test_scope_ordering",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestAutouseManagement",
      "target": "testing/python/fixtures.py:TestAutouseManagement.test_parametrization_setup_teardown_ordering",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestAutouseManagement",
      "target": "testing/python/fixtures.py:TestAutouseManagement.test_ordering_autouse_before_explicit",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestAutouseManagement",
      "target": "testing/python/fixtures.py:TestAutouseManagement.test_ordering_dependencies_torndown_first",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_parametrize",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_multiple_parametrization_issue_736",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_override_parametrized_fixture_issue_979",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_scope_session",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_scope_session_exc",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_scope_session_exc_two_fix",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_scope_exc",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_scope_module_uses_session",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_scope_module_and_finalizer",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_scope_mismatch_various",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_dynamic_scope",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_dynamic_scope_bad_return",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_register_only_with_mark",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_parametrize_and_scope",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_scope_mismatch",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_parametrize_separated_order",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_module_parametrized_ordering",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_dynamic_parametrized_ordering",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_class_ordering",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_parametrize_separated_order_higher_scope_first",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_parametrized_fixture_teardown_order",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_fixture_finalizer",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_class_scope_with_normal_tests",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_request_is_clean",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_parametrize_separated_lifecycle",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_parametrize_function_scoped_finalizers_called",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_finalizer_order_on_parametrization",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_class_scope_parametrization_ordering",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_parametrize_setup_function",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_fixture_marked_function_not_collected_as_test",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_params_and_ids",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_params_and_ids_yieldfixture",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestFixtureMarker",
      "target": "testing/python/fixtures.py:TestFixtureMarker.test_deterministic_fixture_collection",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestRequestScopeAccess",
      "target": "testing/python/fixtures.py:TestRequestScopeAccess.test_setup",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestRequestScopeAccess",
      "target": "testing/python/fixtures.py:TestRequestScopeAccess.test_funcarg",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestErrors",
      "target": "testing/python/fixtures.py:TestErrors.test_subfactory_missing_funcarg",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestErrors",
      "target": "testing/python/fixtures.py:TestErrors.test_issue498_fixture_finalizer_failing",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestErrors",
      "target": "testing/python/fixtures.py:TestErrors.test_setupfunc_missing_funcarg",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestShowFixtures",
      "target": "testing/python/fixtures.py:TestShowFixtures.test_funcarg_compat",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestShowFixtures",
      "target": "testing/python/fixtures.py:TestShowFixtures.test_show_help",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestShowFixtures",
      "target": "testing/python/fixtures.py:TestShowFixtures.test_show_fixtures",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestShowFixtures",
      "target": "testing/python/fixtures.py:TestShowFixtures.test_show_fixtures_verbose",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestShowFixtures",
      "target": "testing/python/fixtures.py:TestShowFixtures.test_show_fixtures_testmodule",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestShowFixtures",
      "target": "testing/python/fixtures.py:TestShowFixtures.test_show_fixtures_conftest",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestShowFixtures",
      "target": "testing/python/fixtures.py:TestShowFixtures.test_show_fixtures_trimmed_doc",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestShowFixtures",
      "target": "testing/python/fixtures.py:TestShowFixtures.test_show_fixtures_indented_doc",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestShowFixtures",
      "target": "testing/python/fixtures.py:TestShowFixtures.test_show_fixtures_indented_doc_first_line_unindented",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestShowFixtures",
      "target": "testing/python/fixtures.py:TestShowFixtures.test_show_fixtures_indented_in_class",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestShowFixtures",
      "target": "testing/python/fixtures.py:TestShowFixtures.test_show_fixtures_different_files",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestShowFixtures",
      "target": "testing/python/fixtures.py:TestShowFixtures.test_show_fixtures_with_same_name",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestShowFixtures",
      "target": "testing/python/fixtures.py:TestShowFixtures.test_fixture_disallow_twice",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestShowFixtures.test_fixture_disallow_twice",
      "target": "testing/python/fixtures.py:TestShowFixtures.test_fixture_disallow_twice.foo",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestContextManagerFixtureFuncs",
      "target": "testing/python/fixtures.py:TestContextManagerFixtureFuncs.test_simple",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestContextManagerFixtureFuncs",
      "target": "testing/python/fixtures.py:TestContextManagerFixtureFuncs.test_scoped",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestContextManagerFixtureFuncs",
      "target": "testing/python/fixtures.py:TestContextManagerFixtureFuncs.test_setup_exception",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestContextManagerFixtureFuncs",
      "target": "testing/python/fixtures.py:TestContextManagerFixtureFuncs.test_teardown_exception",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestContextManagerFixtureFuncs",
      "target": "testing/python/fixtures.py:TestContextManagerFixtureFuncs.test_yields_more_than_one",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestContextManagerFixtureFuncs",
      "target": "testing/python/fixtures.py:TestContextManagerFixtureFuncs.test_custom_name",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestParameterizedSubRequest",
      "target": "testing/python/fixtures.py:TestParameterizedSubRequest.test_call_from_fixture",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestParameterizedSubRequest",
      "target": "testing/python/fixtures.py:TestParameterizedSubRequest.test_call_from_test",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestParameterizedSubRequest",
      "target": "testing/python/fixtures.py:TestParameterizedSubRequest.test_external_fixture",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestParameterizedSubRequest",
      "target": "testing/python/fixtures.py:TestParameterizedSubRequest.test_non_relative_path",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestScopeOrdering",
      "target": "testing/python/fixtures.py:TestScopeOrdering.test_func_closure_module_auto",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestScopeOrdering",
      "target": "testing/python/fixtures.py:TestScopeOrdering.test_func_closure_with_native_fixtures",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestScopeOrdering",
      "target": "testing/python/fixtures.py:TestScopeOrdering.test_func_closure_module",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestScopeOrdering",
      "target": "testing/python/fixtures.py:TestScopeOrdering.test_func_closure_scopes_reordered",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestScopeOrdering",
      "target": "testing/python/fixtures.py:TestScopeOrdering.test_func_closure_same_scope_closer_root_first",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestScopeOrdering",
      "target": "testing/python/fixtures.py:TestScopeOrdering.test_func_closure_all_scopes_complex",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestScopeOrdering",
      "target": "testing/python/fixtures.py:TestScopeOrdering.test_multiple_packages",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:TestScopeOrdering",
      "target": "testing/python/fixtures.py:TestScopeOrdering.test_class_fixture_self_instance",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:test_call_fixture_function_error",
      "target": "testing/python/fixtures.py:test_call_fixture_function_error.fix",
      "type": "contains"
    },
    {
      "source": "testing/python/fixtures.py:test_call_fixture_function_error",
      "target": "testing/python/fixtures.py:test_call_fixture_function_error.fix",
      "type": "invokes"
    },
    {
      "source": "testing/plugins_integration",
      "target": "testing/plugins_integration/pytest_mock_integration.py",
      "type": "contains"
    },
    {
      "source": "testing/plugins_integration",
      "target": "testing/plugins_integration/pytest_twisted_integration.py",
      "type": "contains"
    },
    {
      "source": "testing/plugins_integration",
      "target": "testing/plugins_integration/django_settings.py",
      "type": "contains"
    },
    {
      "source": "testing/plugins_integration",
      "target": "testing/plugins_integration/simple_integration.py",
      "type": "contains"
    },
    {
      "source": "testing/plugins_integration",
      "target": "testing/plugins_integration/pytest_trio_integration.py",
      "type": "contains"
    },
    {
      "source": "testing/plugins_integration",
      "target": "testing/plugins_integration/bdd_wallet.py",
      "type": "contains"
    },
    {
      "source": "testing/plugins_integration",
      "target": "testing/plugins_integration/pytest_asyncio_integration.py",
      "type": "contains"
    },
    {
      "source": "testing/plugins_integration",
      "target": "testing/plugins_integration/pytest_anyio_integration.py",
      "type": "contains"
    },
    {
      "source": "testing/plugins_integration/pytest_mock_integration.py",
      "target": "testing/plugins_integration/pytest_mock_integration.py:test_mocker",
      "type": "contains"
    },
    {
      "source": "testing/plugins_integration/pytest_twisted_integration.py",
      "target": "testing/plugins_integration/pytest_twisted_integration.py:sleep",
      "type": "contains"
    },
    {
      "source": "testing/plugins_integration/pytest_twisted_integration.py",
      "target": "testing/plugins_integration/pytest_twisted_integration.py:test_inlineCallbacks",
      "type": "contains"
    },
    {
      "source": "testing/plugins_integration/pytest_twisted_integration.py",
      "target": "testing/plugins_integration/pytest_twisted_integration.py:test_inlineCallbacks_async",
      "type": "contains"
    },
    {
      "source": "testing/plugins_integration/pytest_twisted_integration.py:test_inlineCallbacks",
      "target": "testing/plugins_integration/pytest_twisted_integration.py:sleep",
      "type": "invokes"
    },
    {
      "source": "testing/plugins_integration/pytest_twisted_integration.py:test_inlineCallbacks_async",
      "target": "testing/plugins_integration/pytest_twisted_integration.py:sleep",
      "type": "invokes"
    },
    {
      "source": "testing/plugins_integration/simple_integration.py",
      "target": "testing/plugins_integration/simple_integration.py:test_foo",
      "type": "contains"
    },
    {
      "source": "testing/plugins_integration/simple_integration.py",
      "target": "testing/plugins_integration/simple_integration.py:test_bar",
      "type": "contains"
    },
    {
      "source": "testing/plugins_integration/pytest_trio_integration.py",
      "target": "testing/plugins_integration/pytest_trio_integration.py:test_sleep",
      "type": "contains"
    },
    {
      "source": "testing/plugins_integration/bdd_wallet.py",
      "target": "testing/plugins_integration/bdd_wallet.py:test_publish",
      "type": "contains"
    },
    {
      "source": "testing/plugins_integration/bdd_wallet.py",
      "target": "testing/plugins_integration/bdd_wallet.py:wallet",
      "type": "contains"
    },
    {
      "source": "testing/plugins_integration/bdd_wallet.py",
      "target": "testing/plugins_integration/bdd_wallet.py:fill_wallet",
      "type": "contains"
    },
    {
      "source": "testing/plugins_integration/bdd_wallet.py",
      "target": "testing/plugins_integration/bdd_wallet.py:buy_apples",
      "type": "contains"
    },
    {
      "source": "testing/plugins_integration/bdd_wallet.py",
      "target": "testing/plugins_integration/bdd_wallet.py:buy_bananas",
      "type": "contains"
    },
    {
      "source": "testing/plugins_integration/bdd_wallet.py",
      "target": "testing/plugins_integration/bdd_wallet.py:check",
      "type": "contains"
    },
    {
      "source": "testing/plugins_integration/bdd_wallet.py:wallet",
      "target": "testing/plugins_integration/bdd_wallet.py:wallet.Wallet",
      "type": "contains"
    },
    {
      "source": "testing/plugins_integration/bdd_wallet.py:wallet",
      "target": "testing/plugins_integration/bdd_wallet.py:wallet.Wallet",
      "type": "invokes"
    },
    {
      "source": "testing/plugins_integration/pytest_asyncio_integration.py",
      "target": "testing/plugins_integration/pytest_asyncio_integration.py:test_sleep",
      "type": "contains"
    },
    {
      "source": "testing/plugins_integration/pytest_anyio_integration.py",
      "target": "testing/plugins_integration/pytest_anyio_integration.py:test_sleep",
      "type": "contains"
    },
    {
      "source": "testing/io",
      "target": "testing/io/test_saferepr.py",
      "type": "contains"
    },
    {
      "source": "testing/io",
      "target": "testing/io/test_wcwidth.py",
      "type": "contains"
    },
    {
      "source": "testing/io",
      "target": "testing/io/test_terminalwriter.py",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py",
      "target": "testing/io/test_saferepr.py:test_simple_repr",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py",
      "target": "testing/io/test_saferepr.py:test_maxsize",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py",
      "target": "testing/io/test_saferepr.py:test_no_maxsize",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py",
      "target": "testing/io/test_saferepr.py:test_maxsize_error_on_instance",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py",
      "target": "testing/io/test_saferepr.py:test_exceptions",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py",
      "target": "testing/io/test_saferepr.py:test_baseexception",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py",
      "target": "testing/io/test_saferepr.py:test_buggy_builtin_repr",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py",
      "target": "testing/io/test_saferepr.py:test_big_repr",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py",
      "target": "testing/io/test_saferepr.py:test_repr_on_newstyle",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py",
      "target": "testing/io/test_saferepr.py:test_unicode",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py",
      "target": "testing/io/test_saferepr.py:test_pformat_dispatch",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py",
      "target": "testing/io/test_saferepr.py:test_broken_getattribute",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py",
      "target": "testing/io/test_saferepr.py:test_saferepr_unlimited",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py",
      "target": "testing/io/test_saferepr.py:test_saferepr_unlimited_exc",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py:test_maxsize_error_on_instance",
      "target": "testing/io/test_saferepr.py:test_maxsize_error_on_instance.A",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py:test_maxsize_error_on_instance",
      "target": "testing/io/test_saferepr.py:test_maxsize_error_on_instance.A",
      "type": "invokes"
    },
    {
      "source": "testing/io/test_saferepr.py:test_maxsize_error_on_instance.A",
      "target": "testing/io/test_saferepr.py:test_maxsize_error_on_instance.A.__repr__",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py:test_exceptions",
      "target": "testing/io/test_saferepr.py:test_exceptions.BrokenRepr",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py:test_exceptions",
      "target": "testing/io/test_saferepr.py:test_exceptions.BrokenRepr",
      "type": "invokes"
    },
    {
      "source": "testing/io/test_saferepr.py:test_exceptions",
      "target": "testing/io/test_saferepr.py:test_exceptions.BrokenReprException",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py:test_exceptions",
      "target": "testing/io/test_saferepr.py:test_exceptions.BrokenReprException",
      "type": "invokes"
    },
    {
      "source": "testing/io/test_saferepr.py:test_exceptions.BrokenRepr",
      "target": "testing/io/test_saferepr.py:test_exceptions.BrokenRepr.__repr__",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py:test_baseexception",
      "target": "testing/io/test_saferepr.py:test_baseexception.RaisingOnStrRepr",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py:test_baseexception",
      "target": "testing/io/test_saferepr.py:test_baseexception.RaisingOnStrRepr",
      "type": "invokes"
    },
    {
      "source": "testing/io/test_saferepr.py:test_baseexception",
      "target": "testing/io/test_saferepr.py:test_baseexception.BrokenObj",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py:test_baseexception",
      "target": "testing/io/test_saferepr.py:test_baseexception.BrokenObj",
      "type": "invokes"
    },
    {
      "source": "testing/io/test_saferepr.py:test_baseexception.RaisingOnStrRepr",
      "target": "testing/io/test_saferepr.py:test_baseexception.RaisingOnStrRepr.raise_exc",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py:test_baseexception.RaisingOnStrRepr",
      "target": "testing/io/test_saferepr.py:test_baseexception.RaisingOnStrRepr.__str__",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py:test_baseexception.RaisingOnStrRepr",
      "target": "testing/io/test_saferepr.py:test_baseexception.RaisingOnStrRepr.__repr__",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py:test_baseexception.RaisingOnStrRepr.__str__",
      "target": "testing/io/test_saferepr.py:test_baseexception.RaisingOnStrRepr.raise_exc",
      "type": "invokes"
    },
    {
      "source": "testing/io/test_saferepr.py:test_baseexception.RaisingOnStrRepr.__repr__",
      "target": "testing/io/test_saferepr.py:test_baseexception.RaisingOnStrRepr.raise_exc",
      "type": "invokes"
    },
    {
      "source": "testing/io/test_saferepr.py:test_baseexception.BrokenObj",
      "target": "testing/io/test_saferepr.py:test_baseexception.BrokenObj.__repr__",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py:test_buggy_builtin_repr",
      "target": "testing/io/test_saferepr.py:test_buggy_builtin_repr.int",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py:test_buggy_builtin_repr",
      "target": "testing/io/test_saferepr.py:test_buggy_builtin_repr.int",
      "type": "invokes"
    },
    {
      "source": "testing/io/test_saferepr.py:test_buggy_builtin_repr.int",
      "target": "testing/io/test_saferepr.py:test_buggy_builtin_repr.int.__repr__",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py:test_repr_on_newstyle",
      "target": "testing/io/test_saferepr.py:test_repr_on_newstyle.Function",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py:test_repr_on_newstyle",
      "target": "testing/io/test_saferepr.py:test_repr_on_newstyle.Function",
      "type": "invokes"
    },
    {
      "source": "testing/io/test_saferepr.py:test_repr_on_newstyle.Function",
      "target": "testing/io/test_saferepr.py:test_repr_on_newstyle.Function.__repr__",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py:test_broken_getattribute",
      "target": "testing/io/test_saferepr.py:test_broken_getattribute.SomeClass",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py:test_broken_getattribute",
      "target": "testing/io/test_saferepr.py:test_broken_getattribute.SomeClass",
      "type": "invokes"
    },
    {
      "source": "testing/io/test_saferepr.py:test_broken_getattribute.SomeClass",
      "target": "testing/io/test_saferepr.py:test_broken_getattribute.SomeClass.__getattribute__",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py:test_broken_getattribute.SomeClass",
      "target": "testing/io/test_saferepr.py:test_broken_getattribute.SomeClass.__repr__",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py:test_saferepr_unlimited_exc",
      "target": "testing/io/test_saferepr.py:test_saferepr_unlimited_exc.A",
      "type": "contains"
    },
    {
      "source": "testing/io/test_saferepr.py:test_saferepr_unlimited_exc",
      "target": "testing/io/test_saferepr.py:test_saferepr_unlimited_exc.A",
      "type": "invokes"
    },
    {
      "source": "testing/io/test_saferepr.py:test_saferepr_unlimited_exc.A",
      "target": "testing/io/test_saferepr.py:test_saferepr_unlimited_exc.A.__repr__",
      "type": "contains"
    },
    {
      "source": "testing/io/test_wcwidth.py",
      "target": "testing/io/test_wcwidth.py:test_wcwidth",
      "type": "contains"
    },
    {
      "source": "testing/io/test_wcwidth.py",
      "target": "testing/io/test_wcwidth.py:test_wcswidth",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py",
      "target": "testing/io/test_terminalwriter.py:test_terminal_width_COLUMNS",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py",
      "target": "testing/io/test_terminalwriter.py:test_terminalwriter_width_bogus",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py",
      "target": "testing/io/test_terminalwriter.py:test_terminalwriter_computes_width",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py",
      "target": "testing/io/test_terminalwriter.py:test_terminalwriter_dumb_term_no_markup",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py",
      "target": "testing/io/test_terminalwriter.py:test_terminalwriter_not_unicode",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py",
      "target": "testing/io/test_terminalwriter.py:TestTerminalWriter",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py",
      "target": "testing/io/test_terminalwriter.py:test_attr_hasmarkup",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py",
      "target": "testing/io/test_terminalwriter.py:assert_color_set",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py",
      "target": "testing/io/test_terminalwriter.py:assert_color_not_set",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py",
      "target": "testing/io/test_terminalwriter.py:test_should_do_markup_PY_COLORS_eq_1",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py",
      "target": "testing/io/test_terminalwriter.py:test_should_not_do_markup_PY_COLORS_eq_0",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py",
      "target": "testing/io/test_terminalwriter.py:test_should_not_do_markup_NO_COLOR",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py",
      "target": "testing/io/test_terminalwriter.py:test_should_do_markup_FORCE_COLOR",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py",
      "target": "testing/io/test_terminalwriter.py:test_should_not_do_markup_NO_COLOR_and_FORCE_COLOR",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py",
      "target": "testing/io/test_terminalwriter.py:TestTerminalWriterLineWidth",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py",
      "target": "testing/io/test_terminalwriter.py:test_code_highlight",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py:test_terminalwriter_dumb_term_no_markup",
      "target": "testing/io/test_terminalwriter.py:test_terminalwriter_dumb_term_no_markup.MyFile",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py:test_terminalwriter_dumb_term_no_markup",
      "target": "testing/io/test_terminalwriter.py:test_terminalwriter_dumb_term_no_markup.MyFile",
      "type": "invokes"
    },
    {
      "source": "testing/io/test_terminalwriter.py:test_terminalwriter_dumb_term_no_markup",
      "target": "testing/io/test_terminalwriter.py:test_terminalwriter_dumb_term_no_markup.MyFile.isatty",
      "type": "invokes"
    },
    {
      "source": "testing/io/test_terminalwriter.py:test_terminalwriter_dumb_term_no_markup.MyFile",
      "target": "testing/io/test_terminalwriter.py:test_terminalwriter_dumb_term_no_markup.MyFile.isatty",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py:TestTerminalWriter",
      "target": "testing/io/test_terminalwriter.py:TestTerminalWriter.tw",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py:TestTerminalWriter",
      "target": "testing/io/test_terminalwriter.py:TestTerminalWriter.test_line",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py:TestTerminalWriter",
      "target": "testing/io/test_terminalwriter.py:TestTerminalWriter.test_line_unicode",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py:TestTerminalWriter",
      "target": "testing/io/test_terminalwriter.py:TestTerminalWriter.test_sep_no_title",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py:TestTerminalWriter",
      "target": "testing/io/test_terminalwriter.py:TestTerminalWriter.test_sep_with_title",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py:TestTerminalWriter",
      "target": "testing/io/test_terminalwriter.py:TestTerminalWriter.test_sep_longer_than_width",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py:TestTerminalWriter",
      "target": "testing/io/test_terminalwriter.py:TestTerminalWriter.test_markup",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py:TestTerminalWriter",
      "target": "testing/io/test_terminalwriter.py:TestTerminalWriter.test_markup_bad",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py:TestTerminalWriter",
      "target": "testing/io/test_terminalwriter.py:TestTerminalWriter.test_line_write_markup",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py:TestTerminalWriter",
      "target": "testing/io/test_terminalwriter.py:TestTerminalWriter.test_attr_fullwidth",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py:TestTerminalWriter.tw",
      "target": "testing/io/test_terminalwriter.py:TestTerminalWriter.tw.getlines",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py:TestTerminalWriter.tw",
      "target": "testing/io/test_terminalwriter.py:TestTerminalWriter.tw.getlines",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py:TestTerminalWriter.tw",
      "target": "testing/io/test_terminalwriter.py:TestTerminalWriter.tw.getlines",
      "type": "invokes"
    },
    {
      "source": "testing/io/test_terminalwriter.py:test_should_do_markup_PY_COLORS_eq_1",
      "target": "testing/io/test_terminalwriter.py:assert_color_set",
      "type": "invokes"
    },
    {
      "source": "testing/io/test_terminalwriter.py:test_should_not_do_markup_PY_COLORS_eq_0",
      "target": "testing/io/test_terminalwriter.py:assert_color_not_set",
      "type": "invokes"
    },
    {
      "source": "testing/io/test_terminalwriter.py:test_should_not_do_markup_NO_COLOR",
      "target": "testing/io/test_terminalwriter.py:assert_color_not_set",
      "type": "invokes"
    },
    {
      "source": "testing/io/test_terminalwriter.py:test_should_do_markup_FORCE_COLOR",
      "target": "testing/io/test_terminalwriter.py:assert_color_set",
      "type": "invokes"
    },
    {
      "source": "testing/io/test_terminalwriter.py:test_should_not_do_markup_NO_COLOR_and_FORCE_COLOR",
      "target": "testing/io/test_terminalwriter.py:assert_color_not_set",
      "type": "invokes"
    },
    {
      "source": "testing/io/test_terminalwriter.py:TestTerminalWriterLineWidth",
      "target": "testing/io/test_terminalwriter.py:TestTerminalWriterLineWidth.test_init",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py:TestTerminalWriterLineWidth",
      "target": "testing/io/test_terminalwriter.py:TestTerminalWriterLineWidth.test_update",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py:TestTerminalWriterLineWidth",
      "target": "testing/io/test_terminalwriter.py:TestTerminalWriterLineWidth.test_update_with_newline",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py:TestTerminalWriterLineWidth",
      "target": "testing/io/test_terminalwriter.py:TestTerminalWriterLineWidth.test_update_with_wide_text",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py:TestTerminalWriterLineWidth",
      "target": "testing/io/test_terminalwriter.py:TestTerminalWriterLineWidth.test_composed",
      "type": "contains"
    },
    {
      "source": "testing/io/test_terminalwriter.py:TestTerminalWriterLineWidth",
      "target": "testing/io/test_terminalwriter.py:TestTerminalWriterLineWidth.test_combining",
      "type": "contains"
    },
    {
      "source": "testing/code",
      "target": "testing/code/test_excinfo.py",
      "type": "contains"
    },
    {
      "source": "testing/code",
      "target": "testing/code/test_code.py",
      "type": "contains"
    },
    {
      "source": "testing/code",
      "target": "testing/code/test_source.py",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:limited_recursion_depth",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:test_excinfo_simple",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:test_excinfo_from_exc_info_simple",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:test_excinfo_from_exception_simple",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:test_excinfo_from_exception_missing_traceback_assertion",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:test_excinfo_getstatement",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:f",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:g",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:h",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:test_excinfo_exconly",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:test_excinfo_repr_str",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:test_excinfo_for_later",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:test_excinfo_errisinstance",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:test_excinfo_no_sourcecode",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:test_excinfo_no_python_sourcecode",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:test_entrysource_Queue_example",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:test_codepath_Queue_example",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:test_match_succeeds",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:test_match_raises_error",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:test_repr_traceback_with_unicode",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:test_cwd_deleted",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:test_regression_nagative_line_index",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:test_exception_repr_extraction_error_on_recursion",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:test_no_recursion_index_on_recursion_error",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:_exceptiongroup_common",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:test_native_exceptiongroup",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:test_exceptiongroup",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:test_all_entries_hidden",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py",
      "target": "testing/code/test_excinfo.py:test_hidden_entries_of_chained_exceptions_are_not_shown",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:test_excinfo_getstatement",
      "target": "testing/code/test_excinfo.py:test_excinfo_getstatement.g",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:test_excinfo_getstatement",
      "target": "testing/code/test_excinfo.py:test_excinfo_getstatement.f",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:test_excinfo_getstatement",
      "target": "testing/code/test_excinfo.py:test_excinfo_getstatement.f",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:test_excinfo_getstatement",
      "target": "testing/code/test_excinfo.py:f",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:test_excinfo_getstatement.f",
      "target": "testing/code/test_excinfo.py:test_excinfo_getstatement.g",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:test_excinfo_getstatement.f",
      "target": "testing/code/test_excinfo.py:g",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:g",
      "target": "testing/code/test_excinfo.py:f",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:h",
      "target": "testing/code/test_excinfo.py:g",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.setup_method",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_entries",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_entry_getsource",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_entry_getsource_in_construct",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_cut",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_cut_excludepath",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_filter",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_filter_selective",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_recursion_index",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_only_specific_recursion_errors",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_no_recursion_index",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_messy_recursion",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash_empty",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.setup_method",
      "target": "testing/code/test_excinfo.py:h",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_entry_getsource_in_construct",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_entry_getsource_in_construct.xyz",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_entry_getsource_in_construct",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_entry_getsource_in_construct.xyz",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_cut_excludepath",
      "target": "testing/code/test_excinfo.py:f",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_filter_selective",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_filter_selective.f",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_filter_selective",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_filter_selective.g",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_filter_selective",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_filter_selective.h",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_filter_selective.g",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_filter_selective.f",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_filter_selective.g",
      "target": "testing/code/test_excinfo.py:f",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_filter_selective.h",
      "target": "testing/code/test_excinfo.py:g",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_filter_selective.h",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_filter_selective.g",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_recursion_index",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_recursion_index.f",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_recursion_index.f",
      "target": "testing/code/test_excinfo.py:f",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_only_specific_recursion_errors",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_only_specific_recursion_errors.f",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_only_specific_recursion_errors.f",
      "target": "testing/code/test_excinfo.py:f",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_no_recursion_index",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_no_recursion_index.do_stuff",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_no_recursion_index",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_no_recursion_index.reraise_me",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_no_recursion_index",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_no_recursion_index.f",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_no_recursion_index.f",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_no_recursion_index.reraise_me",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_no_recursion_index.f",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_no_recursion_index.do_stuff",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_messy_recursion",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_messy_recursion.log",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_messy_recursion",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_messy_recursion.log",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_messy_recursion",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_messy_recursion.fail",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_traceback_messy_recursion.log",
      "target": "testing/code/test_excinfo.py:f",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash.i",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash.h",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash.g",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash.f",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash.h",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash.i",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash.g",
      "target": "testing/code/test_excinfo.py:h",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash.g",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash.h",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash.f",
      "target": "testing/code/test_excinfo.py:g",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash.f",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash.g",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash_empty",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash_empty.g",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash_empty",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash_empty.f",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash_empty.f",
      "target": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash_empty.g",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestTraceback_f_g_h.test_getreprcrash_empty.f",
      "target": "testing/code/test_excinfo.py:g",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:test_excinfo_repr_str",
      "target": "testing/code/test_excinfo.py:test_excinfo_repr_str.CustomException",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:test_excinfo_repr_str",
      "target": "testing/code/test_excinfo.py:test_excinfo_repr_str.raises",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:test_excinfo_repr_str",
      "target": "testing/code/test_excinfo.py:test_excinfo_repr_str.raises",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:test_excinfo_repr_str.CustomException",
      "target": "testing/code/test_excinfo.py:test_excinfo_repr_str.CustomException.__repr__",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:test_excinfo_repr_str.raises",
      "target": "testing/code/test_excinfo.py:test_excinfo_repr_str.CustomException",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.importasmod",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_source",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_source_out_of_bounds",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_source_excinfo",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_source_not_existing",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_many_line_source_not_existing",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_source_failing_fullsource",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_with_error",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_with_exception_in_class_property",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_truncated",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_tracebackentry_lines",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_tracebackentry_lines2",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_tracebackentry_lines_var_kw_args",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_tracebackentry_short",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_tracebackentry_no",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_traceback_tbfilter",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_traceback_short_no_source",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_traceback_and_excinfo",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_traceback_with_invalid_cwd",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_excinfo_addouterr",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_excinfo_reprcrash",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_traceback_recursion",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_reprexcinfo_getrepr",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_reprexcinfo_unicode",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_toterminal_long",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_toterminal_long_missing_source",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_toterminal_long_incomplete_source",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_toterminal_long_filenames",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_format_excinfo",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_traceback_repr_style",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_exc_chain_repr",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_exc_repr_chain_suppression",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_exc_chain_repr_without_traceback",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_exc_chain_repr_cycle",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_exec_type_error_filter",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.importasmod",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.importasmod.importasmod",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_source_excinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_source_excinfo.f",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_source_excinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_source_excinfo.f",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_source_excinfo",
      "target": "testing/code/test_excinfo.py:f",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_with_error",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_with_error.ObjWithErrorInRepr",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_with_error",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_with_error.ObjWithErrorInRepr",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_with_error.ObjWithErrorInRepr",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_with_error.ObjWithErrorInRepr.__repr__",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_with_exception_in_class_property",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_with_exception_in_class_property.ExceptionWithBrokenClass",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_with_exception_in_class_property",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_with_exception_in_class_property.ObjWithErrorInRepr",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_with_exception_in_class_property",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_with_exception_in_class_property.ObjWithErrorInRepr",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_with_exception_in_class_property.ExceptionWithBrokenClass",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_with_exception_in_class_property.ExceptionWithBrokenClass.__class__",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_with_exception_in_class_property.ObjWithErrorInRepr",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_with_exception_in_class_property.ObjWithErrorInRepr.__repr__",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_with_exception_in_class_property.ObjWithErrorInRepr.__repr__",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_local_with_exception_in_class_property.ExceptionWithBrokenClass",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_tracebackentry_lines",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.importasmod",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_tracebackentry_lines2",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.importasmod",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_tracebackentry_lines_var_kw_args",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.importasmod",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_tracebackentry_short",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.importasmod",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_tracebackentry_no",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.importasmod",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_traceback_tbfilter",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.importasmod",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_traceback_short_no_source",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.importasmod",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_traceback_and_excinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.importasmod",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_traceback_with_invalid_cwd",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_traceback_with_invalid_cwd.raiseos",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_traceback_with_invalid_cwd",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.importasmod",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_excinfo_addouterr",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.importasmod",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_excinfo_reprcrash",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.importasmod",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_repr_traceback_recursion",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.importasmod",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_reprexcinfo_getrepr",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.importasmod",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_reprexcinfo_unicode",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_reprexcinfo_unicode.MyRepr",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_reprexcinfo_unicode",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_reprexcinfo_unicode.MyRepr",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_reprexcinfo_unicode.MyRepr",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_reprexcinfo_unicode.MyRepr.toterminal",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_toterminal_long",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.importasmod",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_toterminal_long_missing_source",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.importasmod",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_toterminal_long_incomplete_source",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.importasmod",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_toterminal_long_filenames",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.importasmod",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_format_excinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_format_excinfo.bar",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_format_excinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_format_excinfo.foo",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_format_excinfo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_format_excinfo.foo",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_format_excinfo.foo",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_format_excinfo.bar",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_traceback_repr_style",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.importasmod",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_exc_chain_repr",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.importasmod",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_exc_repr_chain_suppression",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.importasmod",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_exc_chain_repr_without_traceback",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.importasmod",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_exc_chain_repr_without_traceback",
      "target": "testing/code/test_excinfo.py:f",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_exc_chain_repr_cycle",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.importasmod",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_exec_type_error_filter",
      "target": "testing/code/test_excinfo.py:TestFormattedExcinfo.importasmod",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:TestFormattedExcinfo.test_exec_type_error_filter",
      "target": "testing/code/test_excinfo.py:f",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:test_exception_repr_extraction_error_on_recursion",
      "target": "testing/code/test_excinfo.py:test_exception_repr_extraction_error_on_recursion.numpy_like",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:test_exception_repr_extraction_error_on_recursion",
      "target": "testing/code/test_excinfo.py:test_exception_repr_extraction_error_on_recursion.numpy_like",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:test_exception_repr_extraction_error_on_recursion",
      "target": "testing/code/test_excinfo.py:test_exception_repr_extraction_error_on_recursion.a",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:test_exception_repr_extraction_error_on_recursion",
      "target": "testing/code/test_excinfo.py:test_exception_repr_extraction_error_on_recursion.a",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:test_exception_repr_extraction_error_on_recursion",
      "target": "testing/code/test_excinfo.py:test_exception_repr_extraction_error_on_recursion.b",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:test_exception_repr_extraction_error_on_recursion.numpy_like",
      "target": "testing/code/test_excinfo.py:test_exception_repr_extraction_error_on_recursion.numpy_like.__eq__",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:test_exception_repr_extraction_error_on_recursion.a",
      "target": "testing/code/test_excinfo.py:test_exception_repr_extraction_error_on_recursion.b",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:test_exception_repr_extraction_error_on_recursion.a",
      "target": "testing/code/test_excinfo.py:test_exception_repr_extraction_error_on_recursion.numpy_like",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:test_exception_repr_extraction_error_on_recursion.b",
      "target": "testing/code/test_excinfo.py:test_exception_repr_extraction_error_on_recursion.numpy_like",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:test_exception_repr_extraction_error_on_recursion.b",
      "target": "testing/code/test_excinfo.py:test_exception_repr_extraction_error_on_recursion.a",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:test_no_recursion_index_on_recursion_error",
      "target": "testing/code/test_excinfo.py:test_no_recursion_index_on_recursion_error.RecursionDepthError",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:test_no_recursion_index_on_recursion_error",
      "target": "testing/code/test_excinfo.py:test_no_recursion_index_on_recursion_error.RecursionDepthError",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:test_no_recursion_index_on_recursion_error.RecursionDepthError",
      "target": "testing/code/test_excinfo.py:test_no_recursion_index_on_recursion_error.RecursionDepthError.__getattr__",
      "type": "contains"
    },
    {
      "source": "testing/code/test_excinfo.py:test_native_exceptiongroup",
      "target": "testing/code/test_excinfo.py:_exceptiongroup_common",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_excinfo.py:test_exceptiongroup",
      "target": "testing/code/test_excinfo.py:_exceptiongroup_common",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_code.py",
      "target": "testing/code/test_code.py:test_ne",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py",
      "target": "testing/code/test_code.py:test_code_gives_back_name_for_not_existing_file",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py",
      "target": "testing/code/test_code.py:test_code_from_function_with_class",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py",
      "target": "testing/code/test_code.py:x",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py",
      "target": "testing/code/test_code.py:test_code_fullsource",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py",
      "target": "testing/code/test_code.py:test_code_source",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py",
      "target": "testing/code/test_code.py:test_frame_getsourcelineno_myself",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py",
      "target": "testing/code/test_code.py:test_getstatement_empty_fullsource",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py",
      "target": "testing/code/test_code.py:test_code_from_func",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py",
      "target": "testing/code/test_code.py:test_unicode_handling",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py",
      "target": "testing/code/test_code.py:test_code_getargs",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py",
      "target": "testing/code/test_code.py:test_frame_getargs",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py",
      "target": "testing/code/test_code.py:TestExceptionInfo",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py",
      "target": "testing/code/test_code.py:TestTracebackEntry",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py",
      "target": "testing/code/test_code.py:TestReprFuncArgs",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py",
      "target": "testing/code/test_code.py:test_ExceptionChainRepr",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py:test_code_from_function_with_class",
      "target": "testing/code/test_code.py:test_code_from_function_with_class.A",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py:test_frame_getsourcelineno_myself",
      "target": "testing/code/test_code.py:test_frame_getsourcelineno_myself.func",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py:test_frame_getsourcelineno_myself",
      "target": "testing/code/test_code.py:test_frame_getsourcelineno_myself.func",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_code.py:test_getstatement_empty_fullsource",
      "target": "testing/code/test_code.py:test_getstatement_empty_fullsource.func",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py:test_getstatement_empty_fullsource",
      "target": "testing/code/test_code.py:test_getstatement_empty_fullsource.func",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_code.py:test_unicode_handling",
      "target": "testing/code/test_code.py:test_unicode_handling.f",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py:test_code_getargs",
      "target": "testing/code/test_code.py:test_code_getargs.f1",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py:test_code_getargs",
      "target": "testing/code/test_code.py:test_code_getargs.f2",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py:test_code_getargs",
      "target": "testing/code/test_code.py:test_code_getargs.f3",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py:test_code_getargs",
      "target": "testing/code/test_code.py:test_code_getargs.f4",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py:test_frame_getargs",
      "target": "testing/code/test_code.py:test_frame_getargs.f1",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py:test_frame_getargs",
      "target": "testing/code/test_code.py:test_frame_getargs.f1",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_code.py:test_frame_getargs",
      "target": "testing/code/test_code.py:test_frame_getargs.f2",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py:test_frame_getargs",
      "target": "testing/code/test_code.py:test_frame_getargs.f2",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_code.py:test_frame_getargs",
      "target": "testing/code/test_code.py:test_frame_getargs.f3",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py:test_frame_getargs",
      "target": "testing/code/test_code.py:test_frame_getargs.f3",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_code.py:test_frame_getargs",
      "target": "testing/code/test_code.py:test_frame_getargs.f4",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py:test_frame_getargs",
      "target": "testing/code/test_code.py:test_frame_getargs.f4",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_code.py:TestExceptionInfo",
      "target": "testing/code/test_code.py:TestExceptionInfo.test_bad_getsource",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py:TestExceptionInfo",
      "target": "testing/code/test_code.py:TestExceptionInfo.test_from_current_with_missing",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py:TestTracebackEntry",
      "target": "testing/code/test_code.py:TestTracebackEntry.test_getsource",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py:TestTracebackEntry",
      "target": "testing/code/test_code.py:TestTracebackEntry.test_tb_entry_str",
      "type": "contains"
    },
    {
      "source": "testing/code/test_code.py:TestReprFuncArgs",
      "target": "testing/code/test_code.py:TestReprFuncArgs.test_not_raise_exception_with_mixed_encoding",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_source_str_function",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_source_from_function",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_source_from_method",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_source_from_lines",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_source_from_inner_function",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_source_strips",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_source_strip_multiline",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:TestAccesses",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:TestSourceParsing",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_getstartingblock_singleline",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_getline_finally",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_getfuncsource_dynamic",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_getfuncsource_with_multine_string",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_deindent",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_source_of_class_at_eof_without_newline",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:x",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_source_fallback",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_findsource_fallback",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_findsource",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_getfslineno",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_code_of_object_instance_with_call",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:getstatement",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_oneline",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_comment_and_no_newline_at_end",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_oneline_and_comment",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_comments",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_comment_in_statement",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_source_with_decorator",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_single_line_else",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_single_line_finally",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_issue55",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_multiline",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:TestTry",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:TestTryFinally",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:TestIf",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_semicolon",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_def_online",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_decorator",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:XXX_test_expression_multiline",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py",
      "target": "testing/code/test_source.py:test_getstartingblock_multiline",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:test_source_from_method",
      "target": "testing/code/test_source.py:test_source_from_method.TestClass",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:test_source_from_method",
      "target": "testing/code/test_source.py:test_source_from_method.TestClass",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:test_source_from_method.TestClass",
      "target": "testing/code/test_source.py:test_source_from_method.TestClass.test_method",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:test_source_from_inner_function",
      "target": "testing/code/test_source.py:test_source_from_inner_function.f",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestAccesses",
      "target": "testing/code/test_source.py:TestAccesses.setup_class",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestAccesses",
      "target": "testing/code/test_source.py:TestAccesses.test_getrange",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestAccesses",
      "target": "testing/code/test_source.py:TestAccesses.test_getrange_step_not_supported",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestAccesses",
      "target": "testing/code/test_source.py:TestAccesses.test_getline",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestAccesses",
      "target": "testing/code/test_source.py:TestAccesses.test_len",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestAccesses",
      "target": "testing/code/test_source.py:TestAccesses.test_iter",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestSourceParsing",
      "target": "testing/code/test_source.py:TestSourceParsing.setup_class",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestSourceParsing",
      "target": "testing/code/test_source.py:TestSourceParsing.test_getstatement",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestSourceParsing",
      "target": "testing/code/test_source.py:TestSourceParsing.test_getstatementrange_triple_quoted",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestSourceParsing",
      "target": "testing/code/test_source.py:TestSourceParsing.test_getstatementrange_within_constructs",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestSourceParsing",
      "target": "testing/code/test_source.py:TestSourceParsing.test_getstatementrange_bug",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestSourceParsing",
      "target": "testing/code/test_source.py:TestSourceParsing.test_getstatementrange_bug2",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestSourceParsing",
      "target": "testing/code/test_source.py:TestSourceParsing.test_getstatementrange_ast_issue58",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestSourceParsing",
      "target": "testing/code/test_source.py:TestSourceParsing.test_getstatementrange_out_of_bounds_py3",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestSourceParsing",
      "target": "testing/code/test_source.py:TestSourceParsing.test_getstatementrange_with_syntaxerror_issue7",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestSourceParsing.test_getstatement",
      "target": "testing/code/test_source.py:getstatement",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:TestSourceParsing.test_getstatementrange_triple_quoted",
      "target": "testing/code/test_source.py:getstatement",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:TestSourceParsing.test_getstatementrange_ast_issue58",
      "target": "testing/code/test_source.py:getstatement",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:test_getstartingblock_singleline",
      "target": "testing/code/test_source.py:test_getstartingblock_singleline.A",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:test_getstartingblock_singleline",
      "target": "testing/code/test_source.py:test_getstartingblock_singleline.A",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:test_getline_finally",
      "target": "testing/code/test_source.py:test_getline_finally.c",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:test_getline_finally",
      "target": "testing/code/test_source.py:test_getline_finally.c",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:test_getfuncsource_dynamic",
      "target": "testing/code/test_source.py:test_getfuncsource_dynamic.f",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:test_getfuncsource_dynamic",
      "target": "testing/code/test_source.py:test_getfuncsource_dynamic.g",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:test_getfuncsource_with_multine_string",
      "target": "testing/code/test_source.py:test_getfuncsource_with_multine_string.f",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:test_getfslineno",
      "target": "testing/code/test_source.py:test_getfslineno.f",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:test_getfslineno",
      "target": "testing/code/test_source.py:test_getfslineno.A",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:test_getfslineno",
      "target": "testing/code/test_source.py:test_getfslineno.B",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:test_code_of_object_instance_with_call",
      "target": "testing/code/test_source.py:test_code_of_object_instance_with_call.A",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:test_code_of_object_instance_with_call",
      "target": "testing/code/test_source.py:test_code_of_object_instance_with_call.A",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:test_code_of_object_instance_with_call",
      "target": "testing/code/test_source.py:test_code_of_object_instance_with_call.WithCall",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:test_code_of_object_instance_with_call",
      "target": "testing/code/test_source.py:test_code_of_object_instance_with_call.WithCall",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:test_code_of_object_instance_with_call",
      "target": "testing/code/test_source.py:test_code_of_object_instance_with_call.Hello",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:test_code_of_object_instance_with_call.WithCall",
      "target": "testing/code/test_source.py:test_code_of_object_instance_with_call.WithCall.__call__",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:test_code_of_object_instance_with_call.Hello",
      "target": "testing/code/test_source.py:test_code_of_object_instance_with_call.Hello.__call__",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:test_oneline",
      "target": "testing/code/test_source.py:getstatement",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:test_oneline_and_comment",
      "target": "testing/code/test_source.py:getstatement",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:test_comments",
      "target": "testing/code/test_source.py:getstatement",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:test_comment_in_statement",
      "target": "testing/code/test_source.py:getstatement",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:test_source_with_decorator",
      "target": "testing/code/test_source.py:test_source_with_decorator.deco_mark",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:test_source_with_decorator",
      "target": "testing/code/test_source.py:test_source_with_decorator.deco_fixture",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:test_single_line_else",
      "target": "testing/code/test_source.py:getstatement",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:test_single_line_finally",
      "target": "testing/code/test_source.py:getstatement",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:test_issue55",
      "target": "testing/code/test_source.py:getstatement",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:test_multiline",
      "target": "testing/code/test_source.py:getstatement",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:TestTry",
      "target": "testing/code/test_source.py:TestTry.setup_class",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestTry",
      "target": "testing/code/test_source.py:TestTry.test_body",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestTry",
      "target": "testing/code/test_source.py:TestTry.test_except_line",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestTry",
      "target": "testing/code/test_source.py:TestTry.test_except_body",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestTry",
      "target": "testing/code/test_source.py:TestTry.test_else",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestTry.test_body",
      "target": "testing/code/test_source.py:getstatement",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:TestTry.test_except_line",
      "target": "testing/code/test_source.py:getstatement",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:TestTry.test_except_body",
      "target": "testing/code/test_source.py:getstatement",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:TestTry.test_else",
      "target": "testing/code/test_source.py:getstatement",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:TestTryFinally",
      "target": "testing/code/test_source.py:TestTryFinally.setup_class",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestTryFinally",
      "target": "testing/code/test_source.py:TestTryFinally.test_body",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestTryFinally",
      "target": "testing/code/test_source.py:TestTryFinally.test_finally",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestTryFinally.test_body",
      "target": "testing/code/test_source.py:getstatement",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:TestTryFinally.test_finally",
      "target": "testing/code/test_source.py:getstatement",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:TestIf",
      "target": "testing/code/test_source.py:TestIf.setup_class",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestIf",
      "target": "testing/code/test_source.py:TestIf.test_body",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestIf",
      "target": "testing/code/test_source.py:TestIf.test_elif_clause",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestIf",
      "target": "testing/code/test_source.py:TestIf.test_elif",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestIf",
      "target": "testing/code/test_source.py:TestIf.test_else",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:TestIf.test_body",
      "target": "testing/code/test_source.py:getstatement",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:TestIf.test_elif_clause",
      "target": "testing/code/test_source.py:getstatement",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:TestIf.test_elif",
      "target": "testing/code/test_source.py:getstatement",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:TestIf.test_else",
      "target": "testing/code/test_source.py:getstatement",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:test_semicolon",
      "target": "testing/code/test_source.py:getstatement",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:test_def_online",
      "target": "testing/code/test_source.py:getstatement",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:test_decorator",
      "target": "testing/code/test_source.py:getstatement",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:XXX_test_expression_multiline",
      "target": "testing/code/test_source.py:getstatement",
      "type": "invokes"
    },
    {
      "source": "testing/code/test_source.py:test_getstartingblock_multiline",
      "target": "testing/code/test_source.py:test_getstartingblock_multiline.A",
      "type": "contains"
    },
    {
      "source": "testing/code/test_source.py:test_getstartingblock_multiline",
      "target": "testing/code/test_source.py:test_getstartingblock_multiline.A",
      "type": "invokes"
    },
    {
      "source": "testing/examples",
      "target": "testing/examples/test_issue519.py",
      "type": "contains"
    },
    {
      "source": "testing/examples/test_issue519.py",
      "target": "testing/examples/test_issue519.py:test_519",
      "type": "contains"
    },
    {
      "source": "testing/_py",
      "target": "testing/_py/test_local.py",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py",
      "target": "testing/_py/test_local.py:ignore_encoding_warning",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py",
      "target": "testing/_py/test_local.py:CommonFSTests",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py",
      "target": "testing/_py/test_local.py:setuptestfs",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py",
      "target": "testing/_py/test_local.py:path1",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py",
      "target": "testing/_py/test_local.py:fake_fspath_obj",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py",
      "target": "testing/_py/test_local.py:batch_make_numbered_dirs",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py",
      "target": "testing/_py/test_local.py:TestLocalPath",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py",
      "target": "testing/_py/test_local.py:TestExecutionOnWindows",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py",
      "target": "testing/_py/test_local.py:TestExecution",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py",
      "target": "testing/_py/test_local.py:TestImport",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py",
      "target": "testing/_py/test_local.py:TestImportlibImport",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py",
      "target": "testing/_py/test_local.py:test_pypkgdir",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py",
      "target": "testing/_py/test_local.py:test_pypkgdir_unimportable",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py",
      "target": "testing/_py/test_local.py:test_isimportable",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py",
      "target": "testing/_py/test_local.py:test_homedir_from_HOME",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py",
      "target": "testing/_py/test_local.py:test_homedir_not_exists",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py",
      "target": "testing/_py/test_local.py:test_samefile",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py",
      "target": "testing/_py/test_local.py:test_samefile_symlink",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py",
      "target": "testing/_py/test_local.py:test_listdir_single_arg",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py",
      "target": "testing/_py/test_local.py:test_mkdtemp_rootdir",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py",
      "target": "testing/_py/test_local.py:TestWINLocalPath",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py",
      "target": "testing/_py/test_local.py:TestPOSIXLocalPath",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py",
      "target": "testing/_py/test_local.py:TestUnicodePy2Py3",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py",
      "target": "testing/_py/test_local.py:TestBinaryAndTextMethods",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_constructor_equality",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_eq_nonstring",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_new_identical",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_join",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_join_normalized",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_join_noargs",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_add_something",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_parts",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_common",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_basename_checks",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_basename",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_dirname",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_dirpath",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_dirpath_with_args",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_newbasename",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_not_exists",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_exists",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_dir",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_fnmatch_file",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_relto",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_bestrelpath",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_relto_not_relative",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_listdir",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_listdir_fnmatchstring",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_listdir_filter",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_listdir_sorted",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_visit_nofilter",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_visit_norecurse",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_visit_filterfunc_is_string",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_visit_ignore",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_visit_endswith",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_cmp",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_simple_read",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_join_div_operator",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_ext",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_purebasename",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_multiple_parts",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_dotted_name_ext",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_newext",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_readlines",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_readlines_nocr",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_file",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_not_file",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_non_existent",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_size",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_mtime",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_relto_wrong_type",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_load",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_visit_filesonly",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_visit_nodotfiles",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_visit_breadthfirst",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_visit_sort",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_endswith",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_copy_file",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_copy_dir",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_remove_file",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_remove_dir_recursive_by_default",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_ensure_dir",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_mkdir_and_remove",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_move_file",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_move_dir",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_fspath_protocol_match_strpath",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_fspath_func_match_strpath",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_fspath_open",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests",
      "target": "testing/_py/test_local.py:CommonFSTests.test_fspath_fsencode",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests.test_simple_read",
      "target": "testing/_py/test_local.py:ignore_encoding_warning",
      "type": "invokes"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests.test_readlines",
      "target": "testing/_py/test_local.py:ignore_encoding_warning",
      "type": "invokes"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests.test_readlines_nocr",
      "target": "testing/_py/test_local.py:ignore_encoding_warning",
      "type": "invokes"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests.test_endswith",
      "target": "testing/_py/test_local.py:CommonFSTests.test_endswith.chk",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:CommonFSTests.test_endswith",
      "target": "testing/_py/test_local.py:CommonFSTests.test_endswith.chk",
      "type": "invokes"
    },
    {
      "source": "testing/_py/test_local.py:path1",
      "target": "testing/_py/test_local.py:setuptestfs",
      "type": "invokes"
    },
    {
      "source": "testing/_py/test_local.py:fake_fspath_obj",
      "target": "testing/_py/test_local.py:fake_fspath_obj.FakeFSPathClass",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:fake_fspath_obj",
      "target": "testing/_py/test_local.py:fake_fspath_obj.FakeFSPathClass",
      "type": "invokes"
    },
    {
      "source": "testing/_py/test_local.py:fake_fspath_obj.FakeFSPathClass",
      "target": "testing/_py/test_local.py:fake_fspath_obj.FakeFSPathClass.__fspath__",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_join_normpath",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_dirpath_abs_no_abs",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_gethash",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_remove_removes_readonly_file",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_remove_removes_readonly_dir",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_remove_removes_dir_and_readonly_file",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_remove_routes_ignore_errors",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_initialize_curdir",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_chdir_gone",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_chdir_gone_in_as_cwd",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_as_cwd",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_as_cwd_exception",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_initialize_reldir",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_tilde_expansion",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_eq_hash_are_case_insensitive_on_windows",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_eq_with_strings",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_eq_with_none",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_eq_non_ascii_unicode",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_gt_with_strings",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_open_and_ensure",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_write_and_ensure",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_dump",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_setmtime",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_normpath",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_mkdtemp_creation",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_tmproot",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_chdir",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_ensure_filepath_withdir",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_ensure_filepath_withoutdir",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_ensure_dirpath",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_ensure_non_ascii_unicode",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_long_filenames",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_visit_depth_first",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_visit_rec_fnmatch",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_fnmatch_file_abspath",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_sysfind",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_fspath_protocol_other_class",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:TestLocalPath.test_make_numbered_dir_multiprocess_safe",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestLocalPath",
      "target": "testing/_py/test_local.py:CommonFSTests",
      "type": "inherits"
    },
    {
      "source": "testing/_py/test_local.py:TestExecutionOnWindows",
      "target": "testing/_py/test_local.py:TestExecutionOnWindows.test_sysfind_bat_exe_before",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestExecution",
      "target": "testing/_py/test_local.py:TestExecution.test_sysfind_no_permisson_ignored",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestExecution",
      "target": "testing/_py/test_local.py:TestExecution.test_sysfind_absolute",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestExecution",
      "target": "testing/_py/test_local.py:TestExecution.test_sysfind_multiple",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestExecution",
      "target": "testing/_py/test_local.py:TestExecution.test_sysexec",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestExecution",
      "target": "testing/_py/test_local.py:TestExecution.test_sysexec_failing",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestExecution",
      "target": "testing/_py/test_local.py:TestExecution.test_make_numbered_dir",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestExecution",
      "target": "testing/_py/test_local.py:TestExecution.test_make_numbered_dir_case",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestExecution",
      "target": "testing/_py/test_local.py:TestExecution.test_make_numbered_dir_NotImplemented_Error",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestExecution",
      "target": "testing/_py/test_local.py:TestExecution.test_locked_make_numbered_dir",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestExecution",
      "target": "testing/_py/test_local.py:TestExecution.test_error_preservation",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestExecution.test_make_numbered_dir_NotImplemented_Error",
      "target": "testing/_py/test_local.py:TestExecution.test_make_numbered_dir_NotImplemented_Error.notimpl",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestImport",
      "target": "testing/_py/test_local.py:TestImport.preserve_sys",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestImport",
      "target": "testing/_py/test_local.py:TestImport.test_pyimport",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestImport",
      "target": "testing/_py/test_local.py:TestImport.test_pyimport_renamed_dir_creates_mismatch",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestImport",
      "target": "testing/_py/test_local.py:TestImport.test_pyimport_messy_name",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestImport",
      "target": "testing/_py/test_local.py:TestImport.test_pyimport_dir",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestImport",
      "target": "testing/_py/test_local.py:TestImport.test_pyimport_execfile_different_name",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestImport",
      "target": "testing/_py/test_local.py:TestImport.test_pyimport_a",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestImport",
      "target": "testing/_py/test_local.py:TestImport.test_pyimport_b",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestImport",
      "target": "testing/_py/test_local.py:TestImport.test_pyimport_c",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestImport",
      "target": "testing/_py/test_local.py:TestImport.test_pyimport_d",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestImport",
      "target": "testing/_py/test_local.py:TestImport.test_pyimport_and_import",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestImport",
      "target": "testing/_py/test_local.py:TestImport.test_pyimport_check_filepath_consistency",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestImport",
      "target": "testing/_py/test_local.py:TestImport.test_issue131_pyimport_on__init__",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestImport",
      "target": "testing/_py/test_local.py:TestImport.test_ensuresyspath_append",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestImportlibImport",
      "target": "testing/_py/test_local.py:TestImportlibImport.test_pyimport",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestImportlibImport",
      "target": "testing/_py/test_local.py:TestImportlibImport.test_pyimport_dir_fails",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestImportlibImport",
      "target": "testing/_py/test_local.py:TestImportlibImport.test_pyimport_execfile_different_name",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestImportlibImport",
      "target": "testing/_py/test_local.py:TestImportlibImport.test_pyimport_relative_import_fails",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestImportlibImport",
      "target": "testing/_py/test_local.py:TestImportlibImport.test_pyimport_doesnt_use_sys_modules",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestWINLocalPath",
      "target": "testing/_py/test_local.py:TestWINLocalPath.test_owner_group_not_implemented",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestWINLocalPath",
      "target": "testing/_py/test_local.py:TestWINLocalPath.test_chmod_simple_int",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestWINLocalPath",
      "target": "testing/_py/test_local.py:TestWINLocalPath.test_path_comparison_lowercase_mixed",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestWINLocalPath",
      "target": "testing/_py/test_local.py:TestWINLocalPath.test_relto_with_mixed_case",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestWINLocalPath",
      "target": "testing/_py/test_local.py:TestWINLocalPath.test_allow_unix_style_paths",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestWINLocalPath",
      "target": "testing/_py/test_local.py:TestWINLocalPath.test_sysfind_in_currentdir",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestWINLocalPath",
      "target": "testing/_py/test_local.py:TestWINLocalPath.test_fnmatch_file_abspath_posix_pattern_on_win32",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestPOSIXLocalPath",
      "target": "testing/_py/test_local.py:TestPOSIXLocalPath.test_hardlink",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestPOSIXLocalPath",
      "target": "testing/_py/test_local.py:TestPOSIXLocalPath.test_symlink_are_identical",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestPOSIXLocalPath",
      "target": "testing/_py/test_local.py:TestPOSIXLocalPath.test_symlink_isfile",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestPOSIXLocalPath",
      "target": "testing/_py/test_local.py:TestPOSIXLocalPath.test_symlink_relative",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestPOSIXLocalPath",
      "target": "testing/_py/test_local.py:TestPOSIXLocalPath.test_symlink_not_existing",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestPOSIXLocalPath",
      "target": "testing/_py/test_local.py:TestPOSIXLocalPath.test_relto_with_root",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestPOSIXLocalPath",
      "target": "testing/_py/test_local.py:TestPOSIXLocalPath.test_visit_recursive_symlink",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestPOSIXLocalPath",
      "target": "testing/_py/test_local.py:TestPOSIXLocalPath.test_symlink_isdir",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestPOSIXLocalPath",
      "target": "testing/_py/test_local.py:TestPOSIXLocalPath.test_symlink_remove",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestPOSIXLocalPath",
      "target": "testing/_py/test_local.py:TestPOSIXLocalPath.test_realpath_file",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestPOSIXLocalPath",
      "target": "testing/_py/test_local.py:TestPOSIXLocalPath.test_owner",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestPOSIXLocalPath",
      "target": "testing/_py/test_local.py:TestPOSIXLocalPath.test_stat_helpers",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestPOSIXLocalPath",
      "target": "testing/_py/test_local.py:TestPOSIXLocalPath.test_stat_non_raising",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestPOSIXLocalPath",
      "target": "testing/_py/test_local.py:TestPOSIXLocalPath.test_atime",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestPOSIXLocalPath",
      "target": "testing/_py/test_local.py:TestPOSIXLocalPath.test_commondir",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestPOSIXLocalPath",
      "target": "testing/_py/test_local.py:TestPOSIXLocalPath.test_commondir_nocommon",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestPOSIXLocalPath",
      "target": "testing/_py/test_local.py:TestPOSIXLocalPath.test_join_to_root",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestPOSIXLocalPath",
      "target": "testing/_py/test_local.py:TestPOSIXLocalPath.test_join_root_to_root_with_no_abs",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestPOSIXLocalPath",
      "target": "testing/_py/test_local.py:TestPOSIXLocalPath.test_chmod_simple_int",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestPOSIXLocalPath",
      "target": "testing/_py/test_local.py:TestPOSIXLocalPath.test_chmod_rec_int",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestPOSIXLocalPath",
      "target": "testing/_py/test_local.py:TestPOSIXLocalPath.test_copy_archiving",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestPOSIXLocalPath",
      "target": "testing/_py/test_local.py:TestPOSIXLocalPath.test_copy_stat_file",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestPOSIXLocalPath",
      "target": "testing/_py/test_local.py:TestPOSIXLocalPath.test_copy_stat_dir",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestPOSIXLocalPath",
      "target": "testing/_py/test_local.py:TestPOSIXLocalPath.test_chown_identity",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestPOSIXLocalPath",
      "target": "testing/_py/test_local.py:TestPOSIXLocalPath.test_chown_dangling_link",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestPOSIXLocalPath",
      "target": "testing/_py/test_local.py:TestPOSIXLocalPath.test_chown_identity_rec_mayfail",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestPOSIXLocalPath.test_chmod_rec_int",
      "target": "testing/_py/test_local.py:TestPOSIXLocalPath.test_chmod_rec_int.recfilter",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestUnicodePy2Py3",
      "target": "testing/_py/test_local.py:TestUnicodePy2Py3.test_join_ensure",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestUnicodePy2Py3",
      "target": "testing/_py/test_local.py:TestUnicodePy2Py3.test_listdir",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestUnicodePy2Py3",
      "target": "testing/_py/test_local.py:TestUnicodePy2Py3.test_read_write",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestUnicodePy2Py3.test_read_write",
      "target": "testing/_py/test_local.py:ignore_encoding_warning",
      "type": "invokes"
    },
    {
      "source": "testing/_py/test_local.py:TestBinaryAndTextMethods",
      "target": "testing/_py/test_local.py:TestBinaryAndTextMethods.test_read_binwrite",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestBinaryAndTextMethods",
      "target": "testing/_py/test_local.py:TestBinaryAndTextMethods.test_read_textwrite",
      "type": "contains"
    },
    {
      "source": "testing/_py/test_local.py:TestBinaryAndTextMethods",
      "target": "testing/_py/test_local.py:TestBinaryAndTextMethods.test_default_encoding",
      "type": "contains"
    },
    {
      "source": "testing/logging",
      "target": "testing/logging/test_fixture.py",
      "type": "contains"
    },
    {
      "source": "testing/logging",
      "target": "testing/logging/test_reporting.py",
      "type": "contains"
    },
    {
      "source": "testing/logging",
      "target": "testing/logging/test_formatter.py",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_fixture.py",
      "target": "testing/logging/test_fixture.py:cleanup_disabled_logging",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_fixture.py",
      "target": "testing/logging/test_fixture.py:test_fixture_help",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_fixture.py",
      "target": "testing/logging/test_fixture.py:test_change_level",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_fixture.py",
      "target": "testing/logging/test_fixture.py:test_change_level_logging_disabled",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_fixture.py",
      "target": "testing/logging/test_fixture.py:test_change_level_undo",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_fixture.py",
      "target": "testing/logging/test_fixture.py:test_change_disabled_level_undo",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_fixture.py",
      "target": "testing/logging/test_fixture.py:test_change_level_undos_handler_level",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_fixture.py",
      "target": "testing/logging/test_fixture.py:test_with_statement",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_fixture.py",
      "target": "testing/logging/test_fixture.py:test_with_statement_logging_disabled",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_fixture.py",
      "target": "testing/logging/test_fixture.py:test_force_enable_logging_level_string",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_fixture.py",
      "target": "testing/logging/test_fixture.py:test_log_access",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_fixture.py",
      "target": "testing/logging/test_fixture.py:test_messages",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_fixture.py",
      "target": "testing/logging/test_fixture.py:test_record_tuples",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_fixture.py",
      "target": "testing/logging/test_fixture.py:test_unicode",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_fixture.py",
      "target": "testing/logging/test_fixture.py:test_clear",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_fixture.py",
      "target": "testing/logging/test_fixture.py:logging_during_setup_and_teardown",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_fixture.py",
      "target": "testing/logging/test_fixture.py:test_caplog_captures_for_all_stages",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_fixture.py",
      "target": "testing/logging/test_fixture.py:test_clear_for_call_stage",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_fixture.py",
      "target": "testing/logging/test_fixture.py:test_ini_controls_global_log_level",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_fixture.py",
      "target": "testing/logging/test_fixture.py:test_caplog_can_override_global_log_level",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_fixture.py",
      "target": "testing/logging/test_fixture.py:test_caplog_captures_despite_exception",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_fixture.py",
      "target": "testing/logging/test_fixture.py:test_log_report_captures_according_to_config_option_upon_failure",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_nothing_logged",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_messages_logged",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_root_logger_affected",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_log_cli_level_log_level_interaction",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_setup_logging",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_teardown_logging",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_log_cli_enabled_disabled",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_log_cli_default_level",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_log_cli_default_level_multiple_tests",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_log_cli_default_level_sections",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_live_logs_unknown_sections",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_sections_single_new_line_after_test_outcome",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_log_cli_level",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_log_cli_ini_level",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_log_cli_auto_enable",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_log_file_cli",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_log_file_cli_level",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_log_level_not_changed_by_default",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_log_file_ini",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_log_file_ini_level",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_log_file_unicode",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_live_logging_suspends_capture",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_collection_live_logging",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_collection_collect_only_live_logging",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_collection_logging_to_file",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_log_in_hooks",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_log_in_runtest_logreport",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_log_set_path",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_colored_captured_log",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_colored_ansi_esc_caplogtext",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_logging_emit_error",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_logging_emit_error_supressed",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_log_file_cli_subdirectories_are_successfully_created",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_disable_loggers",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_disable_loggers_does_not_propagate",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_log_disabling_works_with_log_cli",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_without_date_format_log",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_date_format_log",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_date_format_percentf_log",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py",
      "target": "testing/logging/test_reporting.py:test_date_format_percentf_tz_log",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py:test_live_logging_suspends_capture",
      "target": "testing/logging/test_reporting.py:test_live_logging_suspends_capture.MockCaptureManager",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py:test_live_logging_suspends_capture",
      "target": "testing/logging/test_reporting.py:test_live_logging_suspends_capture.MockCaptureManager",
      "type": "invokes"
    },
    {
      "source": "testing/logging/test_reporting.py:test_live_logging_suspends_capture",
      "target": "testing/logging/test_reporting.py:test_live_logging_suspends_capture.DummyTerminal",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py:test_live_logging_suspends_capture",
      "target": "testing/logging/test_reporting.py:test_live_logging_suspends_capture.DummyTerminal",
      "type": "invokes"
    },
    {
      "source": "testing/logging/test_reporting.py:test_live_logging_suspends_capture.MockCaptureManager",
      "target": "testing/logging/test_reporting.py:test_live_logging_suspends_capture.MockCaptureManager.global_and_fixture_disabled",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_reporting.py:test_live_logging_suspends_capture.DummyTerminal",
      "target": "testing/logging/test_reporting.py:test_live_logging_suspends_capture.DummyTerminal.section",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_formatter.py",
      "target": "testing/logging/test_formatter.py:test_coloredlogformatter",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_formatter.py",
      "target": "testing/logging/test_formatter.py:test_coloredlogformatter_with_width_precision",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_formatter.py",
      "target": "testing/logging/test_formatter.py:test_multiline_message",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_formatter.py",
      "target": "testing/logging/test_formatter.py:test_colored_short_level",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_formatter.py:test_colored_short_level",
      "target": "testing/logging/test_formatter.py:test_colored_short_level.ColorConfig",
      "type": "contains"
    },
    {
      "source": "testing/logging/test_formatter.py:test_colored_short_level.ColorConfig",
      "target": "testing/logging/test_formatter.py:test_colored_short_level.ColorConfig.option",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts",
      "target": "testing/example_scripts/issue_519.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts",
      "target": "testing/example_scripts/__init__.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts",
      "target": "testing/example_scripts/collect",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts",
      "target": "testing/example_scripts/unittest",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts",
      "target": "testing/example_scripts/conftest_usageerror",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts",
      "target": "testing/example_scripts/marks",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts",
      "target": "testing/example_scripts/config",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts",
      "target": "testing/example_scripts/doctest",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts",
      "target": "testing/example_scripts/issue88_initial_file_multinodes",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts",
      "target": "testing/example_scripts/acceptance",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts",
      "target": "testing/example_scripts/perf_examples",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts",
      "target": "testing/example_scripts/tmpdir",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts",
      "target": "testing/example_scripts/fixtures",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts",
      "target": "testing/example_scripts/warnings",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts",
      "target": "testing/example_scripts/dataclasses",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/issue_519.py",
      "target": "testing/example_scripts/issue_519.py:pytest_generate_tests",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/issue_519.py",
      "target": "testing/example_scripts/issue_519.py:checked_order",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/issue_519.py",
      "target": "testing/example_scripts/issue_519.py:fix1",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/issue_519.py",
      "target": "testing/example_scripts/issue_519.py:fix2",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/issue_519.py",
      "target": "testing/example_scripts/issue_519.py:test_one",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/issue_519.py",
      "target": "testing/example_scripts/issue_519.py:test_two",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/collect",
      "target": "testing/example_scripts/collect/package_infinite_recursion",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/collect",
      "target": "testing/example_scripts/collect/collect_init_tests",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/collect",
      "target": "testing/example_scripts/collect/package_init_given_as_arg",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/collect/package_infinite_recursion",
      "target": "testing/example_scripts/collect/package_infinite_recursion/conftest.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/collect/package_infinite_recursion",
      "target": "testing/example_scripts/collect/package_infinite_recursion/tests",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/collect/package_infinite_recursion/conftest.py",
      "target": "testing/example_scripts/collect/package_infinite_recursion/conftest.py:pytest_ignore_collect",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/collect/package_infinite_recursion/tests",
      "target": "testing/example_scripts/collect/package_infinite_recursion/tests/test_basic.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/collect/package_infinite_recursion/tests",
      "target": "testing/example_scripts/collect/package_infinite_recursion/tests/__init__.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/collect/package_infinite_recursion/tests/test_basic.py",
      "target": "testing/example_scripts/collect/package_infinite_recursion/tests/test_basic.py:test",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/collect/collect_init_tests",
      "target": "testing/example_scripts/collect/collect_init_tests/tests",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/collect/collect_init_tests/tests",
      "target": "testing/example_scripts/collect/collect_init_tests/tests/__init__.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/collect/collect_init_tests/tests",
      "target": "testing/example_scripts/collect/collect_init_tests/tests/test_foo.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/collect/collect_init_tests/tests/__init__.py",
      "target": "testing/example_scripts/collect/collect_init_tests/tests/__init__.py:test_init",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/collect/collect_init_tests/tests/test_foo.py",
      "target": "testing/example_scripts/collect/collect_init_tests/tests/test_foo.py:test_foo",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/collect/package_init_given_as_arg",
      "target": "testing/example_scripts/collect/package_init_given_as_arg/pkg",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/collect/package_init_given_as_arg/pkg",
      "target": "testing/example_scripts/collect/package_init_given_as_arg/pkg/__init__.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/collect/package_init_given_as_arg/pkg",
      "target": "testing/example_scripts/collect/package_init_given_as_arg/pkg/test_foo.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/collect/package_init_given_as_arg/pkg/__init__.py",
      "target": "testing/example_scripts/collect/package_init_given_as_arg/pkg/__init__.py:test_init",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/collect/package_init_given_as_arg/pkg/test_foo.py",
      "target": "testing/example_scripts/collect/package_init_given_as_arg/pkg/test_foo.py:test_foo",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest",
      "target": "testing/example_scripts/unittest/test_unittest_asynctest.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest",
      "target": "testing/example_scripts/unittest/test_setup_skip.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest",
      "target": "testing/example_scripts/unittest/test_setup_skip_module.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest",
      "target": "testing/example_scripts/unittest/test_setup_skip_class.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest",
      "target": "testing/example_scripts/unittest/test_unittest_asyncio.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest",
      "target": "testing/example_scripts/unittest/test_unittest_plain_async.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest",
      "target": "testing/example_scripts/unittest/test_parametrized_fixture_error_message.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest/test_unittest_asynctest.py",
      "target": "testing/example_scripts/unittest/test_unittest_asynctest.py:Test",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest/test_unittest_asynctest.py:Test",
      "target": "testing/example_scripts/unittest/test_unittest_asynctest.py:Test.tearDown",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest/test_unittest_asynctest.py:Test",
      "target": "testing/example_scripts/unittest/test_unittest_asynctest.py:Test.test_error",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest/test_unittest_asynctest.py:Test",
      "target": "testing/example_scripts/unittest/test_unittest_asynctest.py:Test.test_ok",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest/test_unittest_asynctest.py:Test",
      "target": "testing/example_scripts/unittest/test_unittest_asynctest.py:Test.test_teardowns",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest/test_setup_skip.py",
      "target": "testing/example_scripts/unittest/test_setup_skip.py:Base",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest/test_setup_skip.py",
      "target": "testing/example_scripts/unittest/test_setup_skip.py:Test",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest/test_setup_skip.py:Base",
      "target": "testing/example_scripts/unittest/test_setup_skip.py:Base.setUp",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest/test_setup_skip.py:Test",
      "target": "testing/example_scripts/unittest/test_setup_skip.py:Test.test_foo",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest/test_setup_skip.py:Test",
      "target": "testing/example_scripts/unittest/test_setup_skip.py:Base",
      "type": "inherits"
    },
    {
      "source": "testing/example_scripts/unittest/test_setup_skip_module.py",
      "target": "testing/example_scripts/unittest/test_setup_skip_module.py:setUpModule",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest/test_setup_skip_module.py",
      "target": "testing/example_scripts/unittest/test_setup_skip_module.py:Base",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest/test_setup_skip_module.py:Base",
      "target": "testing/example_scripts/unittest/test_setup_skip_module.py:Base.test",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest/test_setup_skip_class.py",
      "target": "testing/example_scripts/unittest/test_setup_skip_class.py:Base",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest/test_setup_skip_class.py",
      "target": "testing/example_scripts/unittest/test_setup_skip_class.py:Test",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest/test_setup_skip_class.py:Base",
      "target": "testing/example_scripts/unittest/test_setup_skip_class.py:Base.setUpClass",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest/test_setup_skip_class.py:Test",
      "target": "testing/example_scripts/unittest/test_setup_skip_class.py:Test.test_foo",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest/test_setup_skip_class.py:Test",
      "target": "testing/example_scripts/unittest/test_setup_skip_class.py:Base",
      "type": "inherits"
    },
    {
      "source": "testing/example_scripts/unittest/test_unittest_asyncio.py",
      "target": "testing/example_scripts/unittest/test_unittest_asyncio.py:AsyncArguments",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest/test_unittest_asyncio.py:AsyncArguments",
      "target": "testing/example_scripts/unittest/test_unittest_asyncio.py:AsyncArguments.asyncTearDown",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest/test_unittest_asyncio.py:AsyncArguments",
      "target": "testing/example_scripts/unittest/test_unittest_asyncio.py:AsyncArguments.test_something_async",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest/test_unittest_asyncio.py:AsyncArguments",
      "target": "testing/example_scripts/unittest/test_unittest_asyncio.py:AsyncArguments.test_something_async_fails",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest/test_unittest_asyncio.py:AsyncArguments",
      "target": "testing/example_scripts/unittest/test_unittest_asyncio.py:AsyncArguments.test_teardowns",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest/test_unittest_asyncio.py:AsyncArguments.test_something_async",
      "target": "testing/example_scripts/unittest/test_unittest_asyncio.py:AsyncArguments.test_something_async.addition",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest/test_unittest_asyncio.py:AsyncArguments.test_something_async",
      "target": "testing/example_scripts/unittest/test_unittest_asyncio.py:AsyncArguments.test_something_async.addition",
      "type": "invokes"
    },
    {
      "source": "testing/example_scripts/unittest/test_unittest_asyncio.py:AsyncArguments.test_something_async_fails",
      "target": "testing/example_scripts/unittest/test_unittest_asyncio.py:AsyncArguments.test_something_async_fails.addition",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest/test_unittest_asyncio.py:AsyncArguments.test_something_async_fails",
      "target": "testing/example_scripts/unittest/test_unittest_asyncio.py:AsyncArguments.test_something_async_fails.addition",
      "type": "invokes"
    },
    {
      "source": "testing/example_scripts/unittest/test_unittest_plain_async.py",
      "target": "testing/example_scripts/unittest/test_unittest_plain_async.py:Test",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest/test_unittest_plain_async.py:Test",
      "target": "testing/example_scripts/unittest/test_unittest_plain_async.py:Test.test_foo",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest/test_parametrized_fixture_error_message.py",
      "target": "testing/example_scripts/unittest/test_parametrized_fixture_error_message.py:two",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest/test_parametrized_fixture_error_message.py",
      "target": "testing/example_scripts/unittest/test_parametrized_fixture_error_message.py:TestSomethingElse",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/unittest/test_parametrized_fixture_error_message.py:TestSomethingElse",
      "target": "testing/example_scripts/unittest/test_parametrized_fixture_error_message.py:TestSomethingElse.test_two",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/conftest_usageerror",
      "target": "testing/example_scripts/conftest_usageerror/conftest.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/conftest_usageerror/conftest.py",
      "target": "testing/example_scripts/conftest_usageerror/conftest.py:pytest_configure",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/conftest_usageerror/conftest.py",
      "target": "testing/example_scripts/conftest_usageerror/conftest.py:pytest_unconfigure",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/marks",
      "target": "testing/example_scripts/marks/marks_considered_keywords",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/marks/marks_considered_keywords",
      "target": "testing/example_scripts/marks/marks_considered_keywords/conftest.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/marks/marks_considered_keywords",
      "target": "testing/example_scripts/marks/marks_considered_keywords/test_marks_as_keywords.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/marks/marks_considered_keywords/test_marks_as_keywords.py",
      "target": "testing/example_scripts/marks/marks_considered_keywords/test_marks_as_keywords.py:test_mark",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/config",
      "target": "testing/example_scripts/config/collect_pytest_prefix",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/config/collect_pytest_prefix",
      "target": "testing/example_scripts/config/collect_pytest_prefix/conftest.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/config/collect_pytest_prefix",
      "target": "testing/example_scripts/config/collect_pytest_prefix/test_foo.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/config/collect_pytest_prefix/conftest.py",
      "target": "testing/example_scripts/config/collect_pytest_prefix/conftest.py:pytest_something",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/config/collect_pytest_prefix/test_foo.py",
      "target": "testing/example_scripts/config/collect_pytest_prefix/test_foo.py:test_foo",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/doctest",
      "target": "testing/example_scripts/doctest/main_py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/doctest/main_py",
      "target": "testing/example_scripts/doctest/main_py/test_normal_module.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/doctest/main_py",
      "target": "testing/example_scripts/doctest/main_py/__main__.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/doctest/main_py/test_normal_module.py",
      "target": "testing/example_scripts/doctest/main_py/test_normal_module.py:test_doc",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/doctest/main_py/__main__.py",
      "target": "testing/example_scripts/doctest/main_py/__main__.py:test_this_is_ignored",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/issue88_initial_file_multinodes",
      "target": "testing/example_scripts/issue88_initial_file_multinodes/conftest.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/issue88_initial_file_multinodes",
      "target": "testing/example_scripts/issue88_initial_file_multinodes/test_hello.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/issue88_initial_file_multinodes/conftest.py",
      "target": "testing/example_scripts/issue88_initial_file_multinodes/conftest.py:MyFile",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/issue88_initial_file_multinodes/conftest.py",
      "target": "testing/example_scripts/issue88_initial_file_multinodes/conftest.py:pytest_collect_file",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/issue88_initial_file_multinodes/conftest.py",
      "target": "testing/example_scripts/issue88_initial_file_multinodes/conftest.py:MyItem",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/issue88_initial_file_multinodes/conftest.py:MyFile",
      "target": "testing/example_scripts/issue88_initial_file_multinodes/conftest.py:MyFile.collect",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/issue88_initial_file_multinodes/test_hello.py",
      "target": "testing/example_scripts/issue88_initial_file_multinodes/test_hello.py:test_hello",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/acceptance",
      "target": "testing/example_scripts/acceptance/fixture_mock_integration.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/acceptance/fixture_mock_integration.py",
      "target": "testing/example_scripts/acceptance/fixture_mock_integration.py:my_fixture",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/acceptance/fixture_mock_integration.py",
      "target": "testing/example_scripts/acceptance/fixture_mock_integration.py:test_foobar",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/perf_examples",
      "target": "testing/example_scripts/perf_examples/collect_stats",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/perf_examples/collect_stats",
      "target": "testing/example_scripts/perf_examples/collect_stats/template_test.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/perf_examples/collect_stats",
      "target": "testing/example_scripts/perf_examples/collect_stats/generate_folders.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/perf_examples/collect_stats/template_test.py",
      "target": "testing/example_scripts/perf_examples/collect_stats/template_test.py:test_x",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/perf_examples/collect_stats/generate_folders.py",
      "target": "testing/example_scripts/perf_examples/collect_stats/generate_folders.py:generate_folders",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/tmpdir",
      "target": "testing/example_scripts/tmpdir/tmp_path_fixture.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/tmpdir/tmp_path_fixture.py",
      "target": "testing/example_scripts/tmpdir/tmp_path_fixture.py:test_fixture",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures",
      "target": "testing/example_scripts/fixtures/test_getfixturevalue_dynamic.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures",
      "target": "testing/example_scripts/fixtures/test_fixture_named_request.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures",
      "target": "testing/example_scripts/fixtures/fill_fixtures",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures",
      "target": "testing/example_scripts/fixtures/custom_item",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/test_getfixturevalue_dynamic.py",
      "target": "testing/example_scripts/fixtures/test_getfixturevalue_dynamic.py:dynamic",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/test_getfixturevalue_dynamic.py",
      "target": "testing/example_scripts/fixtures/test_getfixturevalue_dynamic.py:a",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/test_getfixturevalue_dynamic.py",
      "target": "testing/example_scripts/fixtures/test_getfixturevalue_dynamic.py:b",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/test_getfixturevalue_dynamic.py",
      "target": "testing/example_scripts/fixtures/test_getfixturevalue_dynamic.py:test",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/test_fixture_named_request.py",
      "target": "testing/example_scripts/fixtures/test_fixture_named_request.py:request",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/test_fixture_named_request.py",
      "target": "testing/example_scripts/fixtures/test_fixture_named_request.py:test",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_module_class.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_detect_recursive_dependency_error.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_basic.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookupfails.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_modulelevel.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_classlevel.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_module",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_module_class.py",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_module_class.py:spam",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_module_class.py",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_module_class.py:TestSpam",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_module_class.py:TestSpam",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_module_class.py:TestSpam.spam",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_module_class.py:TestSpam",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_module_class.py:TestSpam.test_spam",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_detect_recursive_dependency_error.py",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_detect_recursive_dependency_error.py:fix1",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_detect_recursive_dependency_error.py",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_detect_recursive_dependency_error.py:fix2",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_detect_recursive_dependency_error.py",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_detect_recursive_dependency_error.py:test",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_basic.py",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_basic.py:some",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_basic.py",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_basic.py:other",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_basic.py",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_basic.py:test_func",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookupfails.py",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookupfails.py:xyzsomething",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookupfails.py",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookupfails.py:test_func",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_modulelevel.py",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_modulelevel.py:something",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_modulelevel.py",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_modulelevel.py:TestClass",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_modulelevel.py",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_modulelevel.py:test_func",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_modulelevel.py:TestClass",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_modulelevel.py:TestClass.test_method",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_classlevel.py",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_classlevel.py:TestClass",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_classlevel.py:TestClass",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_classlevel.py:TestClass.something",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_classlevel.py:TestClass",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_classlevel.py:TestClass.test_method",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/conftest.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/pkg",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/conftest.py",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/conftest.py:spam",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/pkg",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/pkg/conftest.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/pkg",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/pkg/test_spam.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/pkg",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/pkg/__init__.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/pkg/conftest.py",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/pkg/conftest.py:spam",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/pkg/test_spam.py",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/pkg/test_spam.py:test_spam",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_module",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_module/conftest.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_module",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_module/test_extend_fixture_conftest_module.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_module/conftest.py",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_module/conftest.py:spam",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_module/test_extend_fixture_conftest_module.py",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_module/test_extend_fixture_conftest_module.py:spam",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_module/test_extend_fixture_conftest_module.py",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_module/test_extend_fixture_conftest_module.py:test_spam",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub1",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub2",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub1",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub1/conftest.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub1",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub1/__init__.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub1",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub1/test_in_sub1.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub1/conftest.py",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub1/conftest.py:arg1",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub1/test_in_sub1.py",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub1/test_in_sub1.py:test_1",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub2",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub2/conftest.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub2",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub2/__init__.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub2",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub2/test_in_sub2.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub2/conftest.py",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub2/conftest.py:arg2",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub2/test_in_sub2.py",
      "target": "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub2/test_in_sub2.py:test_2",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/custom_item",
      "target": "testing/example_scripts/fixtures/custom_item/conftest.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/custom_item",
      "target": "testing/example_scripts/fixtures/custom_item/foo",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/custom_item/conftest.py",
      "target": "testing/example_scripts/fixtures/custom_item/conftest.py:CustomItem",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/custom_item/conftest.py",
      "target": "testing/example_scripts/fixtures/custom_item/conftest.py:CustomFile",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/custom_item/conftest.py",
      "target": "testing/example_scripts/fixtures/custom_item/conftest.py:pytest_collect_file",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/custom_item/conftest.py:CustomItem",
      "target": "testing/example_scripts/fixtures/custom_item/conftest.py:CustomItem.runtest",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/custom_item/conftest.py:CustomFile",
      "target": "testing/example_scripts/fixtures/custom_item/conftest.py:CustomFile.collect",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/custom_item/foo",
      "target": "testing/example_scripts/fixtures/custom_item/foo/__init__.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/custom_item/foo",
      "target": "testing/example_scripts/fixtures/custom_item/foo/test_foo.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/fixtures/custom_item/foo/test_foo.py",
      "target": "testing/example_scripts/fixtures/custom_item/foo/test_foo.py:test",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/warnings",
      "target": "testing/example_scripts/warnings/test_group_warnings_by_message.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/warnings",
      "target": "testing/example_scripts/warnings/test_group_warnings_by_message_summary",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/warnings/test_group_warnings_by_message.py",
      "target": "testing/example_scripts/warnings/test_group_warnings_by_message.py:func",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/warnings/test_group_warnings_by_message.py",
      "target": "testing/example_scripts/warnings/test_group_warnings_by_message.py:test_foo",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/warnings/test_group_warnings_by_message.py",
      "target": "testing/example_scripts/warnings/test_group_warnings_by_message.py:test_foo_1",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/warnings/test_group_warnings_by_message.py",
      "target": "testing/example_scripts/warnings/test_group_warnings_by_message.py:test_bar",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/warnings/test_group_warnings_by_message.py:test_foo",
      "target": "testing/example_scripts/warnings/test_group_warnings_by_message.py:func",
      "type": "invokes"
    },
    {
      "source": "testing/example_scripts/warnings/test_group_warnings_by_message.py:test_foo_1",
      "target": "testing/example_scripts/warnings/test_group_warnings_by_message.py:func",
      "type": "invokes"
    },
    {
      "source": "testing/example_scripts/warnings/test_group_warnings_by_message.py:test_bar",
      "target": "testing/example_scripts/warnings/test_group_warnings_by_message.py:func",
      "type": "invokes"
    },
    {
      "source": "testing/example_scripts/warnings/test_group_warnings_by_message_summary",
      "target": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_1.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/warnings/test_group_warnings_by_message_summary",
      "target": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_2.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_1.py",
      "target": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_1.py:func",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_1.py",
      "target": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_1.py:test_foo",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_1.py",
      "target": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_1.py:test_foo_1",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_1.py",
      "target": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_1.py:test_bar",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_1.py:test_foo",
      "target": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_1.py:func",
      "type": "invokes"
    },
    {
      "source": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_1.py:test_foo_1",
      "target": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_1.py:func",
      "type": "invokes"
    },
    {
      "source": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_1.py:test_bar",
      "target": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_1.py:func",
      "type": "invokes"
    },
    {
      "source": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_2.py",
      "target": "testing/example_scripts/warnings/test_group_warnings_by_message_summary/test_2.py:test_2",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/dataclasses",
      "target": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/dataclasses",
      "target": "testing/example_scripts/dataclasses/test_compare_two_different_dataclasses.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/dataclasses",
      "target": "testing/example_scripts/dataclasses/test_compare_dataclasses_with_custom_eq.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/dataclasses",
      "target": "testing/example_scripts/dataclasses/test_compare_dataclasses.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/dataclasses",
      "target": "testing/example_scripts/dataclasses/test_compare_dataclasses_field_comparison_off.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/dataclasses",
      "target": "testing/example_scripts/dataclasses/test_compare_initvar.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/dataclasses",
      "target": "testing/example_scripts/dataclasses/test_compare_dataclasses_verbose.py",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py",
      "target": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py:S",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py",
      "target": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py:C",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py",
      "target": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py:C2",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py",
      "target": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py:C3",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py",
      "target": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py:test_recursive_dataclasses",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py:test_recursive_dataclasses",
      "target": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py:C",
      "type": "invokes"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py:test_recursive_dataclasses",
      "target": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py:S",
      "type": "invokes"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py:test_recursive_dataclasses",
      "target": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py:C2",
      "type": "invokes"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py:test_recursive_dataclasses",
      "target": "testing/example_scripts/dataclasses/test_compare_recursive_dataclasses.py:C3",
      "type": "invokes"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_two_different_dataclasses.py",
      "target": "testing/example_scripts/dataclasses/test_compare_two_different_dataclasses.py:test_comparing_two_different_data_classes",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_two_different_dataclasses.py:test_comparing_two_different_data_classes",
      "target": "testing/example_scripts/dataclasses/test_compare_two_different_dataclasses.py:test_comparing_two_different_data_classes.SimpleDataObjectOne",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_two_different_dataclasses.py:test_comparing_two_different_data_classes",
      "target": "testing/example_scripts/dataclasses/test_compare_two_different_dataclasses.py:test_comparing_two_different_data_classes.SimpleDataObjectOne",
      "type": "invokes"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_two_different_dataclasses.py:test_comparing_two_different_data_classes",
      "target": "testing/example_scripts/dataclasses/test_compare_two_different_dataclasses.py:test_comparing_two_different_data_classes.SimpleDataObjectTwo",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_two_different_dataclasses.py:test_comparing_two_different_data_classes",
      "target": "testing/example_scripts/dataclasses/test_compare_two_different_dataclasses.py:test_comparing_two_different_data_classes.SimpleDataObjectTwo",
      "type": "invokes"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_dataclasses_with_custom_eq.py",
      "target": "testing/example_scripts/dataclasses/test_compare_dataclasses_with_custom_eq.py:test_dataclasses",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_dataclasses_with_custom_eq.py:test_dataclasses",
      "target": "testing/example_scripts/dataclasses/test_compare_dataclasses_with_custom_eq.py:test_dataclasses.SimpleDataObject",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_dataclasses_with_custom_eq.py:test_dataclasses",
      "target": "testing/example_scripts/dataclasses/test_compare_dataclasses_with_custom_eq.py:test_dataclasses.SimpleDataObject",
      "type": "invokes"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_dataclasses_with_custom_eq.py:test_dataclasses.SimpleDataObject",
      "target": "testing/example_scripts/dataclasses/test_compare_dataclasses_with_custom_eq.py:test_dataclasses.SimpleDataObject.__eq__",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_dataclasses.py",
      "target": "testing/example_scripts/dataclasses/test_compare_dataclasses.py:test_dataclasses",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_dataclasses.py:test_dataclasses",
      "target": "testing/example_scripts/dataclasses/test_compare_dataclasses.py:test_dataclasses.SimpleDataObject",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_dataclasses.py:test_dataclasses",
      "target": "testing/example_scripts/dataclasses/test_compare_dataclasses.py:test_dataclasses.SimpleDataObject",
      "type": "invokes"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_dataclasses_field_comparison_off.py",
      "target": "testing/example_scripts/dataclasses/test_compare_dataclasses_field_comparison_off.py:test_dataclasses_with_attribute_comparison_off",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_dataclasses_field_comparison_off.py:test_dataclasses_with_attribute_comparison_off",
      "target": "testing/example_scripts/dataclasses/test_compare_dataclasses_field_comparison_off.py:test_dataclasses_with_attribute_comparison_off.SimpleDataObject",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_dataclasses_field_comparison_off.py:test_dataclasses_with_attribute_comparison_off",
      "target": "testing/example_scripts/dataclasses/test_compare_dataclasses_field_comparison_off.py:test_dataclasses_with_attribute_comparison_off.SimpleDataObject",
      "type": "invokes"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_initvar.py",
      "target": "testing/example_scripts/dataclasses/test_compare_initvar.py:Foo",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_initvar.py",
      "target": "testing/example_scripts/dataclasses/test_compare_initvar.py:test_demonstrate",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_initvar.py:test_demonstrate",
      "target": "testing/example_scripts/dataclasses/test_compare_initvar.py:Foo",
      "type": "invokes"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_dataclasses_verbose.py",
      "target": "testing/example_scripts/dataclasses/test_compare_dataclasses_verbose.py:test_dataclasses_verbose",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_dataclasses_verbose.py:test_dataclasses_verbose",
      "target": "testing/example_scripts/dataclasses/test_compare_dataclasses_verbose.py:test_dataclasses_verbose.SimpleDataObject",
      "type": "contains"
    },
    {
      "source": "testing/example_scripts/dataclasses/test_compare_dataclasses_verbose.py:test_dataclasses_verbose",
      "target": "testing/example_scripts/dataclasses/test_compare_dataclasses_verbose.py:test_dataclasses_verbose.SimpleDataObject",
      "type": "invokes"
    },
    {
      "source": "extra",
      "target": "extra/get_issues.py",
      "type": "contains"
    },
    {
      "source": "extra/get_issues.py",
      "target": "extra/get_issues.py:get_issues",
      "type": "contains"
    },
    {
      "source": "extra/get_issues.py",
      "target": "extra/get_issues.py:main",
      "type": "contains"
    },
    {
      "source": "extra/get_issues.py",
      "target": "extra/get_issues.py:_get_kind",
      "type": "contains"
    },
    {
      "source": "extra/get_issues.py",
      "target": "extra/get_issues.py:report",
      "type": "contains"
    },
    {
      "source": "extra/get_issues.py:main",
      "target": "extra/get_issues.py:get_issues",
      "type": "invokes"
    },
    {
      "source": "extra/get_issues.py:main",
      "target": "extra/get_issues.py:report",
      "type": "invokes"
    },
    {
      "source": "extra/get_issues.py:report",
      "target": "extra/get_issues.py:_get_kind",
      "type": "invokes"
    },
    {
      "source": "scripts",
      "target": "scripts/release.py",
      "type": "contains"
    },
    {
      "source": "scripts",
      "target": "scripts/publish-gh-release-notes.py",
      "type": "contains"
    },
    {
      "source": "scripts",
      "target": "scripts/update-plugin-list.py",
      "type": "contains"
    },
    {
      "source": "scripts",
      "target": "scripts/towncrier-draft-to-file.py",
      "type": "contains"
    },
    {
      "source": "scripts",
      "target": "scripts/prepare-release-pr.py",
      "type": "contains"
    },
    {
      "source": "scripts/release.py",
      "target": "scripts/release.py:announce",
      "type": "contains"
    },
    {
      "source": "scripts/release.py",
      "target": "scripts/release.py:regen",
      "type": "contains"
    },
    {
      "source": "scripts/release.py",
      "target": "scripts/release.py:fix_formatting",
      "type": "contains"
    },
    {
      "source": "scripts/release.py",
      "target": "scripts/release.py:check_links",
      "type": "contains"
    },
    {
      "source": "scripts/release.py",
      "target": "scripts/release.py:pre_release",
      "type": "contains"
    },
    {
      "source": "scripts/release.py",
      "target": "scripts/release.py:changelog",
      "type": "contains"
    },
    {
      "source": "scripts/release.py",
      "target": "scripts/release.py:main",
      "type": "contains"
    },
    {
      "source": "scripts/release.py:pre_release",
      "target": "scripts/release.py:announce",
      "type": "invokes"
    },
    {
      "source": "scripts/release.py:pre_release",
      "target": "scripts/release.py:fix_formatting",
      "type": "invokes"
    },
    {
      "source": "scripts/release.py:pre_release",
      "target": "scripts/release.py:changelog",
      "type": "invokes"
    },
    {
      "source": "scripts/release.py:pre_release",
      "target": "scripts/release.py:regen",
      "type": "invokes"
    },
    {
      "source": "scripts/release.py:pre_release",
      "target": "scripts/release.py:check_links",
      "type": "invokes"
    },
    {
      "source": "scripts/release.py:main",
      "target": "scripts/release.py:pre_release",
      "type": "invokes"
    },
    {
      "source": "scripts/publish-gh-release-notes.py",
      "target": "scripts/publish-gh-release-notes.py:publish_github_release",
      "type": "contains"
    },
    {
      "source": "scripts/publish-gh-release-notes.py",
      "target": "scripts/publish-gh-release-notes.py:parse_changelog",
      "type": "contains"
    },
    {
      "source": "scripts/publish-gh-release-notes.py",
      "target": "scripts/publish-gh-release-notes.py:convert_rst_to_md",
      "type": "contains"
    },
    {
      "source": "scripts/publish-gh-release-notes.py",
      "target": "scripts/publish-gh-release-notes.py:main",
      "type": "contains"
    },
    {
      "source": "scripts/publish-gh-release-notes.py:main",
      "target": "scripts/publish-gh-release-notes.py:parse_changelog",
      "type": "invokes"
    },
    {
      "source": "scripts/publish-gh-release-notes.py:main",
      "target": "scripts/publish-gh-release-notes.py:convert_rst_to_md",
      "type": "invokes"
    },
    {
      "source": "scripts/publish-gh-release-notes.py:main",
      "target": "scripts/publish-gh-release-notes.py:publish_github_release",
      "type": "invokes"
    },
    {
      "source": "scripts/update-plugin-list.py",
      "target": "scripts/update-plugin-list.py:escape_rst",
      "type": "contains"
    },
    {
      "source": "scripts/update-plugin-list.py",
      "target": "scripts/update-plugin-list.py:iter_plugins",
      "type": "contains"
    },
    {
      "source": "scripts/update-plugin-list.py",
      "target": "scripts/update-plugin-list.py:plugin_definitions",
      "type": "contains"
    },
    {
      "source": "scripts/update-plugin-list.py",
      "target": "scripts/update-plugin-list.py:main",
      "type": "contains"
    },
    {
      "source": "scripts/update-plugin-list.py:iter_plugins",
      "target": "scripts/update-plugin-list.py:iter_plugins.version_sort_key",
      "type": "contains"
    },
    {
      "source": "scripts/update-plugin-list.py:iter_plugins",
      "target": "scripts/update-plugin-list.py:escape_rst",
      "type": "invokes"
    },
    {
      "source": "scripts/update-plugin-list.py:main",
      "target": "scripts/update-plugin-list.py:iter_plugins",
      "type": "invokes"
    },
    {
      "source": "scripts/update-plugin-list.py:main",
      "target": "scripts/update-plugin-list.py:plugin_definitions",
      "type": "invokes"
    },
    {
      "source": "scripts/towncrier-draft-to-file.py",
      "target": "scripts/towncrier-draft-to-file.py:main",
      "type": "contains"
    },
    {
      "source": "scripts/prepare-release-pr.py",
      "target": "scripts/prepare-release-pr.py:InvalidFeatureRelease",
      "type": "contains"
    },
    {
      "source": "scripts/prepare-release-pr.py",
      "target": "scripts/prepare-release-pr.py:login",
      "type": "contains"
    },
    {
      "source": "scripts/prepare-release-pr.py",
      "target": "scripts/prepare-release-pr.py:prepare_release_pr",
      "type": "contains"
    },
    {
      "source": "scripts/prepare-release-pr.py",
      "target": "scripts/prepare-release-pr.py:find_next_version",
      "type": "contains"
    },
    {
      "source": "scripts/prepare-release-pr.py",
      "target": "scripts/prepare-release-pr.py:main",
      "type": "contains"
    },
    {
      "source": "scripts/prepare-release-pr.py:prepare_release_pr",
      "target": "scripts/prepare-release-pr.py:login",
      "type": "invokes"
    },
    {
      "source": "scripts/prepare-release-pr.py:prepare_release_pr",
      "target": "scripts/prepare-release-pr.py:find_next_version",
      "type": "invokes"
    },
    {
      "source": "scripts/prepare-release-pr.py:main",
      "target": "scripts/prepare-release-pr.py:prepare_release_pr",
      "type": "invokes"
    },
    {
      "source": "doc",
      "target": "doc/en",
      "type": "contains"
    },
    {
      "source": "doc/en",
      "target": "doc/en/conftest.py",
      "type": "contains"
    },
    {
      "source": "doc/en",
      "target": "doc/en/conf.py",
      "type": "contains"
    },
    {
      "source": "doc/en",
      "target": "doc/en/example",
      "type": "contains"
    },
    {
      "source": "doc/en/conf.py",
      "target": "doc/en/conf.py:configure_logging",
      "type": "contains"
    },
    {
      "source": "doc/en/conf.py",
      "target": "doc/en/conf.py:setup",
      "type": "contains"
    },
    {
      "source": "doc/en/conf.py:configure_logging",
      "target": "doc/en/conf.py:configure_logging.WarnLogFilter",
      "type": "contains"
    },
    {
      "source": "doc/en/conf.py:configure_logging",
      "target": "doc/en/conf.py:configure_logging.WarnLogFilter",
      "type": "invokes"
    },
    {
      "source": "doc/en/conf.py:configure_logging.WarnLogFilter",
      "target": "doc/en/conf.py:configure_logging.WarnLogFilter.filter",
      "type": "contains"
    },
    {
      "source": "doc/en/conf.py:setup",
      "target": "doc/en/conf.py:configure_logging",
      "type": "invokes"
    },
    {
      "source": "doc/en/example",
      "target": "doc/en/example/conftest.py",
      "type": "contains"
    },
    {
      "source": "doc/en/example",
      "target": "doc/en/example/multipython.py",
      "type": "contains"
    },
    {
      "source": "doc/en/example",
      "target": "doc/en/example/pythoncollection.py",
      "type": "contains"
    },
    {
      "source": "doc/en/example",
      "target": "doc/en/example/xfail_demo.py",
      "type": "contains"
    },
    {
      "source": "doc/en/example",
      "target": "doc/en/example/assertion",
      "type": "contains"
    },
    {
      "source": "doc/en/example",
      "target": "doc/en/example/nonpython",
      "type": "contains"
    },
    {
      "source": "doc/en/example",
      "target": "doc/en/example/fixtures",
      "type": "contains"
    },
    {
      "source": "doc/en/example/multipython.py",
      "target": "doc/en/example/multipython.py:python1",
      "type": "contains"
    },
    {
      "source": "doc/en/example/multipython.py",
      "target": "doc/en/example/multipython.py:python2",
      "type": "contains"
    },
    {
      "source": "doc/en/example/multipython.py",
      "target": "doc/en/example/multipython.py:Python",
      "type": "contains"
    },
    {
      "source": "doc/en/example/multipython.py",
      "target": "doc/en/example/multipython.py:test_basic_objects",
      "type": "contains"
    },
    {
      "source": "doc/en/example/multipython.py:python1",
      "target": "doc/en/example/multipython.py:Python",
      "type": "invokes"
    },
    {
      "source": "doc/en/example/multipython.py:python2",
      "target": "doc/en/example/multipython.py:Python",
      "type": "invokes"
    },
    {
      "source": "doc/en/example/multipython.py:Python",
      "target": "doc/en/example/multipython.py:Python.dumps",
      "type": "contains"
    },
    {
      "source": "doc/en/example/multipython.py:Python",
      "target": "doc/en/example/multipython.py:Python.load_and_is_true",
      "type": "contains"
    },
    {
      "source": "doc/en/example/multipython.py:test_basic_objects",
      "target": "doc/en/example/multipython.py:Python.load_and_is_true",
      "type": "invokes"
    },
    {
      "source": "doc/en/example/multipython.py:test_basic_objects",
      "target": "doc/en/example/multipython.py:Python.dumps",
      "type": "invokes"
    },
    {
      "source": "doc/en/example/pythoncollection.py",
      "target": "doc/en/example/pythoncollection.py:test_function",
      "type": "contains"
    },
    {
      "source": "doc/en/example/pythoncollection.py",
      "target": "doc/en/example/pythoncollection.py:TestClass",
      "type": "contains"
    },
    {
      "source": "doc/en/example/pythoncollection.py:TestClass",
      "target": "doc/en/example/pythoncollection.py:TestClass.test_method",
      "type": "contains"
    },
    {
      "source": "doc/en/example/pythoncollection.py:TestClass",
      "target": "doc/en/example/pythoncollection.py:TestClass.test_anothermethod",
      "type": "contains"
    },
    {
      "source": "doc/en/example/xfail_demo.py",
      "target": "doc/en/example/xfail_demo.py:test_hello",
      "type": "contains"
    },
    {
      "source": "doc/en/example/xfail_demo.py",
      "target": "doc/en/example/xfail_demo.py:test_hello2",
      "type": "contains"
    },
    {
      "source": "doc/en/example/xfail_demo.py",
      "target": "doc/en/example/xfail_demo.py:test_hello3",
      "type": "contains"
    },
    {
      "source": "doc/en/example/xfail_demo.py",
      "target": "doc/en/example/xfail_demo.py:test_hello4",
      "type": "contains"
    },
    {
      "source": "doc/en/example/xfail_demo.py",
      "target": "doc/en/example/xfail_demo.py:test_hello5",
      "type": "contains"
    },
    {
      "source": "doc/en/example/xfail_demo.py",
      "target": "doc/en/example/xfail_demo.py:test_hello6",
      "type": "contains"
    },
    {
      "source": "doc/en/example/xfail_demo.py",
      "target": "doc/en/example/xfail_demo.py:test_hello7",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion",
      "target": "doc/en/example/assertion/failure_demo.py",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion",
      "target": "doc/en/example/assertion/test_setup_flow_example.py",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion",
      "target": "doc/en/example/assertion/test_failures.py",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion",
      "target": "doc/en/example/assertion/global_testmodule_config",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py",
      "target": "doc/en/example/assertion/failure_demo.py:otherfunc",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py",
      "target": "doc/en/example/assertion/failure_demo.py:somefunc",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py",
      "target": "doc/en/example/assertion/failure_demo.py:otherfunc_multi",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py",
      "target": "doc/en/example/assertion/failure_demo.py:test_generative",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py",
      "target": "doc/en/example/assertion/failure_demo.py:TestFailing",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py",
      "target": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py",
      "target": "doc/en/example/assertion/failure_demo.py:test_attribute",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py",
      "target": "doc/en/example/assertion/failure_demo.py:test_attribute_instance",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py",
      "target": "doc/en/example/assertion/failure_demo.py:test_attribute_failure",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py",
      "target": "doc/en/example/assertion/failure_demo.py:test_attribute_multiple",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py",
      "target": "doc/en/example/assertion/failure_demo.py:globf",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py",
      "target": "doc/en/example/assertion/failure_demo.py:TestRaises",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py",
      "target": "doc/en/example/assertion/failure_demo.py:test_dynamic_compile_shows_nicely",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py",
      "target": "doc/en/example/assertion/failure_demo.py:TestMoreErrors",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py",
      "target": "doc/en/example/assertion/failure_demo.py:TestCustomAssertMsg",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:somefunc",
      "target": "doc/en/example/assertion/failure_demo.py:otherfunc",
      "type": "invokes"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestFailing",
      "target": "doc/en/example/assertion/failure_demo.py:TestFailing.test_simple",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestFailing",
      "target": "doc/en/example/assertion/failure_demo.py:TestFailing.test_simple_multiline",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestFailing",
      "target": "doc/en/example/assertion/failure_demo.py:TestFailing.test_not",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestFailing.test_simple",
      "target": "doc/en/example/assertion/failure_demo.py:TestFailing.test_simple.f",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestFailing.test_simple",
      "target": "doc/en/example/assertion/failure_demo.py:TestFailing.test_simple.f",
      "type": "invokes"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestFailing.test_simple",
      "target": "doc/en/example/assertion/failure_demo.py:TestFailing.test_simple.g",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestFailing.test_simple",
      "target": "doc/en/example/assertion/failure_demo.py:TestFailing.test_simple.g",
      "type": "invokes"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestFailing.test_simple_multiline",
      "target": "doc/en/example/assertion/failure_demo.py:otherfunc_multi",
      "type": "invokes"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestFailing.test_not",
      "target": "doc/en/example/assertion/failure_demo.py:TestFailing.test_not.f",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestFailing.test_not",
      "target": "doc/en/example/assertion/failure_demo.py:TestFailing.test_not.f",
      "type": "invokes"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations",
      "target": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_text",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations",
      "target": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_similar_text",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations",
      "target": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_multiline_text",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations",
      "target": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_long_text",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations",
      "target": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_long_text_multiline",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations",
      "target": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_list",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations",
      "target": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_list_long",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations",
      "target": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_dict",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations",
      "target": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_set",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations",
      "target": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_longer_list",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations",
      "target": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_in_list",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations",
      "target": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_not_in_text_multiline",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations",
      "target": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_not_in_text_single",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations",
      "target": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_not_in_text_single_long",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations",
      "target": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_not_in_text_single_long_term",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations",
      "target": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_dataclass",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations",
      "target": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_attrs",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_dataclass",
      "target": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_dataclass.Foo",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_dataclass",
      "target": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_dataclass.Foo",
      "type": "invokes"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_attrs",
      "target": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_attrs.Foo",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_attrs",
      "target": "doc/en/example/assertion/failure_demo.py:TestSpecialisedExplanations.test_eq_attrs.Foo",
      "type": "invokes"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:test_attribute",
      "target": "doc/en/example/assertion/failure_demo.py:test_attribute.Foo",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:test_attribute",
      "target": "doc/en/example/assertion/failure_demo.py:test_attribute.Foo",
      "type": "invokes"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:test_attribute_instance",
      "target": "doc/en/example/assertion/failure_demo.py:test_attribute_instance.Foo",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:test_attribute_instance",
      "target": "doc/en/example/assertion/failure_demo.py:test_attribute_instance.Foo",
      "type": "invokes"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:test_attribute_failure",
      "target": "doc/en/example/assertion/failure_demo.py:test_attribute_failure.Foo",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:test_attribute_failure",
      "target": "doc/en/example/assertion/failure_demo.py:test_attribute_failure.Foo",
      "type": "invokes"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:test_attribute_failure.Foo",
      "target": "doc/en/example/assertion/failure_demo.py:test_attribute_failure.Foo._get_b",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:test_attribute_multiple",
      "target": "doc/en/example/assertion/failure_demo.py:test_attribute_multiple.Foo",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:test_attribute_multiple",
      "target": "doc/en/example/assertion/failure_demo.py:test_attribute_multiple.Foo",
      "type": "invokes"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:test_attribute_multiple",
      "target": "doc/en/example/assertion/failure_demo.py:test_attribute_multiple.Bar",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:test_attribute_multiple",
      "target": "doc/en/example/assertion/failure_demo.py:test_attribute_multiple.Bar",
      "type": "invokes"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestRaises",
      "target": "doc/en/example/assertion/failure_demo.py:TestRaises.test_raises",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestRaises",
      "target": "doc/en/example/assertion/failure_demo.py:TestRaises.test_raises_doesnt",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestRaises",
      "target": "doc/en/example/assertion/failure_demo.py:TestRaises.test_raise",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestRaises",
      "target": "doc/en/example/assertion/failure_demo.py:TestRaises.test_tupleerror",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestRaises",
      "target": "doc/en/example/assertion/failure_demo.py:TestRaises.test_reinterpret_fails_with_print_for_the_fun_of_it",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestRaises",
      "target": "doc/en/example/assertion/failure_demo.py:TestRaises.test_some_error",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestRaises",
      "target": "doc/en/example/assertion/failure_demo.py:TestRaises.func1",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestMoreErrors",
      "target": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_complex_error",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestMoreErrors",
      "target": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_z1_unpack_error",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestMoreErrors",
      "target": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_z2_type_error",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestMoreErrors",
      "target": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_startswith",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestMoreErrors",
      "target": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_startswith_nested",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestMoreErrors",
      "target": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_global_func",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestMoreErrors",
      "target": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_instance",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestMoreErrors",
      "target": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_compare",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestMoreErrors",
      "target": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_try_finally",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_complex_error",
      "target": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_complex_error.f",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_complex_error",
      "target": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_complex_error.f",
      "type": "invokes"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_complex_error",
      "target": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_complex_error.g",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_complex_error",
      "target": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_complex_error.g",
      "type": "invokes"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_complex_error",
      "target": "doc/en/example/assertion/failure_demo.py:somefunc",
      "type": "invokes"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_startswith_nested",
      "target": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_startswith_nested.f",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_startswith_nested",
      "target": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_startswith_nested.f",
      "type": "invokes"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_startswith_nested",
      "target": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_startswith_nested.g",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_startswith_nested",
      "target": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_startswith_nested.g",
      "type": "invokes"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_global_func",
      "target": "doc/en/example/assertion/failure_demo.py:globf",
      "type": "invokes"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestMoreErrors.test_compare",
      "target": "doc/en/example/assertion/failure_demo.py:globf",
      "type": "invokes"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestCustomAssertMsg",
      "target": "doc/en/example/assertion/failure_demo.py:TestCustomAssertMsg.test_single_line",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestCustomAssertMsg",
      "target": "doc/en/example/assertion/failure_demo.py:TestCustomAssertMsg.test_multiline",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestCustomAssertMsg",
      "target": "doc/en/example/assertion/failure_demo.py:TestCustomAssertMsg.test_custom_repr",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestCustomAssertMsg.test_single_line",
      "target": "doc/en/example/assertion/failure_demo.py:TestCustomAssertMsg.test_single_line.A",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestCustomAssertMsg.test_multiline",
      "target": "doc/en/example/assertion/failure_demo.py:TestCustomAssertMsg.test_multiline.A",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestCustomAssertMsg.test_custom_repr",
      "target": "doc/en/example/assertion/failure_demo.py:TestCustomAssertMsg.test_custom_repr.JSON",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestCustomAssertMsg.test_custom_repr",
      "target": "doc/en/example/assertion/failure_demo.py:TestCustomAssertMsg.test_custom_repr.JSON",
      "type": "invokes"
    },
    {
      "source": "doc/en/example/assertion/failure_demo.py:TestCustomAssertMsg.test_custom_repr.JSON",
      "target": "doc/en/example/assertion/failure_demo.py:TestCustomAssertMsg.test_custom_repr.JSON.__repr__",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/test_setup_flow_example.py",
      "target": "doc/en/example/assertion/test_setup_flow_example.py:setup_module",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/test_setup_flow_example.py",
      "target": "doc/en/example/assertion/test_setup_flow_example.py:TestStateFullThing",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/test_setup_flow_example.py",
      "target": "doc/en/example/assertion/test_setup_flow_example.py:teardown_module",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/test_setup_flow_example.py:TestStateFullThing",
      "target": "doc/en/example/assertion/test_setup_flow_example.py:TestStateFullThing.setup_class",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/test_setup_flow_example.py:TestStateFullThing",
      "target": "doc/en/example/assertion/test_setup_flow_example.py:TestStateFullThing.teardown_class",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/test_setup_flow_example.py:TestStateFullThing",
      "target": "doc/en/example/assertion/test_setup_flow_example.py:TestStateFullThing.setup_method",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/test_setup_flow_example.py:TestStateFullThing",
      "target": "doc/en/example/assertion/test_setup_flow_example.py:TestStateFullThing.test_42",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/test_setup_flow_example.py:TestStateFullThing",
      "target": "doc/en/example/assertion/test_setup_flow_example.py:TestStateFullThing.test_23",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/test_failures.py",
      "target": "doc/en/example/assertion/test_failures.py:test_failure_demo_fails_properly",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/global_testmodule_config",
      "target": "doc/en/example/assertion/global_testmodule_config/conftest.py",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/global_testmodule_config",
      "target": "doc/en/example/assertion/global_testmodule_config/test_hello_world.py",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/global_testmodule_config/conftest.py",
      "target": "doc/en/example/assertion/global_testmodule_config/conftest.py:pytest_runtest_setup",
      "type": "contains"
    },
    {
      "source": "doc/en/example/assertion/global_testmodule_config/test_hello_world.py",
      "target": "doc/en/example/assertion/global_testmodule_config/test_hello_world.py:test_func",
      "type": "contains"
    },
    {
      "source": "doc/en/example/nonpython",
      "target": "doc/en/example/nonpython/conftest.py",
      "type": "contains"
    },
    {
      "source": "doc/en/example/nonpython",
      "target": "doc/en/example/nonpython/__init__.py",
      "type": "contains"
    },
    {
      "source": "doc/en/example/nonpython/conftest.py",
      "target": "doc/en/example/nonpython/conftest.py:pytest_collect_file",
      "type": "contains"
    },
    {
      "source": "doc/en/example/nonpython/conftest.py",
      "target": "doc/en/example/nonpython/conftest.py:YamlFile",
      "type": "contains"
    },
    {
      "source": "doc/en/example/nonpython/conftest.py",
      "target": "doc/en/example/nonpython/conftest.py:YamlItem",
      "type": "contains"
    },
    {
      "source": "doc/en/example/nonpython/conftest.py",
      "target": "doc/en/example/nonpython/conftest.py:YamlException",
      "type": "contains"
    },
    {
      "source": "doc/en/example/nonpython/conftest.py:YamlFile",
      "target": "doc/en/example/nonpython/conftest.py:YamlFile.collect",
      "type": "contains"
    },
    {
      "source": "doc/en/example/nonpython/conftest.py:YamlItem",
      "target": "doc/en/example/nonpython/conftest.py:YamlItem.runtest",
      "type": "contains"
    },
    {
      "source": "doc/en/example/nonpython/conftest.py:YamlItem",
      "target": "doc/en/example/nonpython/conftest.py:YamlItem.repr_failure",
      "type": "contains"
    },
    {
      "source": "doc/en/example/nonpython/conftest.py:YamlItem",
      "target": "doc/en/example/nonpython/conftest.py:YamlItem.reportinfo",
      "type": "contains"
    },
    {
      "source": "doc/en/example/nonpython/conftest.py:YamlItem.runtest",
      "target": "doc/en/example/nonpython/conftest.py:YamlException",
      "type": "invokes"
    },
    {
      "source": "doc/en/example/fixtures",
      "target": "doc/en/example/fixtures/test_fixtures_request_different_scope.py",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures",
      "target": "doc/en/example/fixtures/test_fixtures_order_dependencies.py",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures",
      "target": "doc/en/example/fixtures/test_fixtures_order_scope.py",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse.py",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_request_different_scope.py",
      "target": "doc/en/example/fixtures/test_fixtures_request_different_scope.py:order",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_request_different_scope.py",
      "target": "doc/en/example/fixtures/test_fixtures_request_different_scope.py:outer",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_request_different_scope.py",
      "target": "doc/en/example/fixtures/test_fixtures_request_different_scope.py:TestOne",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_request_different_scope.py",
      "target": "doc/en/example/fixtures/test_fixtures_request_different_scope.py:TestTwo",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_request_different_scope.py:TestOne",
      "target": "doc/en/example/fixtures/test_fixtures_request_different_scope.py:TestOne.inner",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_request_different_scope.py:TestOne",
      "target": "doc/en/example/fixtures/test_fixtures_request_different_scope.py:TestOne.test_order",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_request_different_scope.py:TestTwo",
      "target": "doc/en/example/fixtures/test_fixtures_request_different_scope.py:TestTwo.inner",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_request_different_scope.py:TestTwo",
      "target": "doc/en/example/fixtures/test_fixtures_request_different_scope.py:TestTwo.test_order",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_dependencies.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_dependencies.py:order",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_dependencies.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_dependencies.py:a",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_dependencies.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_dependencies.py:b",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_dependencies.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_dependencies.py:c",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_dependencies.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_dependencies.py:d",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_dependencies.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_dependencies.py:e",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_dependencies.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_dependencies.py:f",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_dependencies.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_dependencies.py:g",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_dependencies.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_dependencies.py:test_order",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_scope.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_scope.py:order",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_scope.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_scope.py:func",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_scope.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_scope.py:cls",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_scope.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_scope.py:mod",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_scope.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_scope.py:pack",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_scope.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_scope.py:sess",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_scope.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_scope.py:TestClass",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_scope.py:TestClass",
      "target": "doc/en/example/fixtures/test_fixtures_order_scope.py:TestClass.test_order",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_autouse.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse.py:order",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_autouse.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse.py:a",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_autouse.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse.py:b",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_autouse.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse.py:c",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_autouse.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse.py:d",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_autouse.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse.py:e",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_autouse.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse.py:f",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_autouse.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse.py:g",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_autouse.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse.py:test_order_and_g",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py:order",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py:c1",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py:c2",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py:TestClassWithAutouse",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py:TestClassWithoutAutouse",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py:TestClassWithAutouse",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py:TestClassWithAutouse.c3",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py:TestClassWithAutouse",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py:TestClassWithAutouse.test_req",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py:TestClassWithAutouse",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py:TestClassWithAutouse.test_no_req",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py:TestClassWithoutAutouse",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py:TestClassWithoutAutouse.test_req",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py:TestClassWithoutAutouse",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse_temp_effects.py:TestClassWithoutAutouse.test_no_req",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py:order",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py:c1",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py:c2",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py:c3",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py:TestClassWithC1Request",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py:TestClassWithoutC1Request",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py:TestClassWithC1Request",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py:TestClassWithC1Request.test_order",
      "type": "contains"
    },
    {
      "source": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py:TestClassWithoutC1Request",
      "target": "doc/en/example/fixtures/test_fixtures_order_autouse_multiple_scopes.py:TestClassWithoutC1Request.test_order",
      "type": "contains"
    },
    {
      "source": "src",
      "target": "src/py.py",
      "type": "contains"
    },
    {
      "source": "src",
      "target": "src/pytest",
      "type": "contains"
    },
    {
      "source": "src",
      "target": "src/_pytest",
      "type": "contains"
    },
    {
      "source": "src/pytest",
      "target": "src/pytest/__init__.py",
      "type": "contains"
    },
    {
      "source": "src/pytest",
      "target": "src/pytest/__main__.py",
      "type": "contains"
    },
    {
      "source": "src/pytest/__init__.py",
      "target": "src/pytest/__init__.py:__getattr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/skipping.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/logging.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/unittest.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/python_path.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/runner.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/helpconfig.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/pastebin.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/compat.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/terminal.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/warnings.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/pytester_assertions.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/deprecated.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/recwarn.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/tmpdir.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/__init__.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/stash.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/debugging.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/python_api.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/_argcomplete.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/unraisableexception.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/capture.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/hookspec.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/timing.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/pytester.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/faulthandler.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/outcomes.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/stepwise.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/junitxml.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/python.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/reports.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/doctest.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/setuponly.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/nose.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/nodes.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/threadexception.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/main.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/monkeypatch.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/legacypath.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/setupplan.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/pathlib.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/scope.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/freeze_support.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/fixtures.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/cacheprovider.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/warning_types.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/config",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/mark",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/_code",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/assertion",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/_io",
      "type": "contains"
    },
    {
      "source": "src/_pytest",
      "target": "src/_pytest/_py",
      "type": "contains"
    },
    {
      "source": "src/_pytest/skipping.py",
      "target": "src/_pytest/skipping.py:pytest_addoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/skipping.py",
      "target": "src/_pytest/skipping.py:pytest_configure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/skipping.py",
      "target": "src/_pytest/skipping.py:evaluate_condition",
      "type": "contains"
    },
    {
      "source": "src/_pytest/skipping.py",
      "target": "src/_pytest/skipping.py:Skip",
      "type": "contains"
    },
    {
      "source": "src/_pytest/skipping.py",
      "target": "src/_pytest/skipping.py:evaluate_skip_marks",
      "type": "contains"
    },
    {
      "source": "src/_pytest/skipping.py",
      "target": "src/_pytest/skipping.py:Xfail",
      "type": "contains"
    },
    {
      "source": "src/_pytest/skipping.py",
      "target": "src/_pytest/skipping.py:evaluate_xfail_marks",
      "type": "contains"
    },
    {
      "source": "src/_pytest/skipping.py",
      "target": "src/_pytest/skipping.py:pytest_runtest_setup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/skipping.py",
      "target": "src/_pytest/skipping.py:pytest_runtest_call",
      "type": "contains"
    },
    {
      "source": "src/_pytest/skipping.py",
      "target": "src/_pytest/skipping.py:pytest_runtest_makereport",
      "type": "contains"
    },
    {
      "source": "src/_pytest/skipping.py",
      "target": "src/_pytest/skipping.py:pytest_report_teststatus",
      "type": "contains"
    },
    {
      "source": "src/_pytest/skipping.py:pytest_configure",
      "target": "src/_pytest/skipping.py:pytest_configure.nop",
      "type": "contains"
    },
    {
      "source": "src/_pytest/skipping.py:evaluate_skip_marks",
      "target": "src/_pytest/skipping.py:Skip",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/skipping.py:evaluate_skip_marks",
      "target": "src/_pytest/skipping.py:evaluate_condition",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/skipping.py:evaluate_xfail_marks",
      "target": "src/_pytest/skipping.py:evaluate_condition",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/skipping.py:evaluate_xfail_marks",
      "target": "src/_pytest/skipping.py:Xfail",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/skipping.py:pytest_runtest_setup",
      "target": "src/_pytest/skipping.py:evaluate_xfail_marks",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/skipping.py:pytest_runtest_setup",
      "target": "src/_pytest/skipping.py:evaluate_skip_marks",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/skipping.py:pytest_runtest_call",
      "target": "src/_pytest/skipping.py:evaluate_xfail_marks",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py",
      "target": "src/_pytest/logging.py:_remove_ansi_escape_sequences",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py",
      "target": "src/_pytest/logging.py:DatetimeFormatter",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py",
      "target": "src/_pytest/logging.py:ColoredLevelFormatter",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py",
      "target": "src/_pytest/logging.py:PercentStyleMultiline",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py",
      "target": "src/_pytest/logging.py:get_option_ini",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py",
      "target": "src/_pytest/logging.py:pytest_addoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py",
      "target": "src/_pytest/logging.py:catching_logs",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py",
      "target": "src/_pytest/logging.py:LogCaptureHandler",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py",
      "target": "src/_pytest/logging.py:LogCaptureFixture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py",
      "target": "src/_pytest/logging.py:caplog",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py",
      "target": "src/_pytest/logging.py:get_log_level_for_setting",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py",
      "target": "src/_pytest/logging.py:pytest_configure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py",
      "target": "src/_pytest/logging.py:LoggingPlugin",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py",
      "target": "src/_pytest/logging.py:_FileHandler",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py",
      "target": "src/_pytest/logging.py:_LiveLoggingStreamHandler",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py",
      "target": "src/_pytest/logging.py:_LiveLoggingNullHandler",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:DatetimeFormatter",
      "target": "src/_pytest/logging.py:DatetimeFormatter.formatTime",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:ColoredLevelFormatter",
      "target": "src/_pytest/logging.py:ColoredLevelFormatter.add_color_level",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:ColoredLevelFormatter",
      "target": "src/_pytest/logging.py:ColoredLevelFormatter.add_color_level",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:ColoredLevelFormatter",
      "target": "src/_pytest/logging.py:ColoredLevelFormatter.format",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:ColoredLevelFormatter",
      "target": "src/_pytest/logging.py:DatetimeFormatter",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/logging.py:ColoredLevelFormatter.format",
      "target": "src/_pytest/logging.py:PercentStyleMultiline.format",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:PercentStyleMultiline",
      "target": "src/_pytest/logging.py:PercentStyleMultiline._get_auto_indent",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:PercentStyleMultiline",
      "target": "src/_pytest/logging.py:PercentStyleMultiline._get_auto_indent",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:PercentStyleMultiline",
      "target": "src/_pytest/logging.py:PercentStyleMultiline.format",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:PercentStyleMultiline.format",
      "target": "src/_pytest/logging.py:_remove_ansi_escape_sequences",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:PercentStyleMultiline.format",
      "target": "src/_pytest/logging.py:PercentStyleMultiline._get_auto_indent",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:pytest_addoption",
      "target": "src/_pytest/logging.py:pytest_addoption.add_option_ini",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:pytest_addoption",
      "target": "src/_pytest/logging.py:pytest_addoption.add_option_ini",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:catching_logs",
      "target": "src/_pytest/logging.py:catching_logs.__enter__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:catching_logs",
      "target": "src/_pytest/logging.py:catching_logs.__exit__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LogCaptureHandler",
      "target": "src/_pytest/logging.py:LogCaptureHandler.emit",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LogCaptureHandler",
      "target": "src/_pytest/logging.py:LogCaptureHandler.reset",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LogCaptureHandler",
      "target": "src/_pytest/logging.py:LogCaptureHandler.clear",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LogCaptureHandler",
      "target": "src/_pytest/logging.py:LogCaptureHandler.handleError",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LogCaptureHandler.emit",
      "target": "src/_pytest/logging.py:_LiveLoggingStreamHandler.emit",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LogCaptureHandler.clear",
      "target": "src/_pytest/logging.py:LogCaptureFixture.clear",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LogCaptureFixture",
      "target": "src/_pytest/logging.py:LogCaptureFixture._finalize",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LogCaptureFixture",
      "target": "src/_pytest/logging.py:LogCaptureFixture.handler",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LogCaptureFixture",
      "target": "src/_pytest/logging.py:LogCaptureFixture.get_records",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LogCaptureFixture",
      "target": "src/_pytest/logging.py:LogCaptureFixture.text",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LogCaptureFixture",
      "target": "src/_pytest/logging.py:LogCaptureFixture.records",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LogCaptureFixture",
      "target": "src/_pytest/logging.py:LogCaptureFixture.record_tuples",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LogCaptureFixture",
      "target": "src/_pytest/logging.py:LogCaptureFixture.messages",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LogCaptureFixture",
      "target": "src/_pytest/logging.py:LogCaptureFixture.clear",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LogCaptureFixture",
      "target": "src/_pytest/logging.py:LogCaptureFixture._force_enable_logging",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LogCaptureFixture",
      "target": "src/_pytest/logging.py:LogCaptureFixture.set_level",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LogCaptureFixture",
      "target": "src/_pytest/logging.py:LogCaptureFixture.at_level",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LogCaptureFixture.text",
      "target": "src/_pytest/logging.py:_remove_ansi_escape_sequences",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LogCaptureFixture.clear",
      "target": "src/_pytest/logging.py:LogCaptureHandler.clear",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LogCaptureFixture.set_level",
      "target": "src/_pytest/logging.py:LogCaptureFixture._force_enable_logging",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LogCaptureFixture.at_level",
      "target": "src/_pytest/logging.py:LogCaptureFixture._force_enable_logging",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:caplog",
      "target": "src/_pytest/logging.py:LogCaptureFixture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:caplog",
      "target": "src/_pytest/logging.py:LogCaptureFixture._finalize",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:get_log_level_for_setting",
      "target": "src/_pytest/logging.py:ColoredLevelFormatter.format",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:get_log_level_for_setting",
      "target": "src/_pytest/logging.py:PercentStyleMultiline.format",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:pytest_configure",
      "target": "src/_pytest/logging.py:LoggingPlugin",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin",
      "target": "src/_pytest/logging.py:LoggingPlugin._disable_loggers",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin",
      "target": "src/_pytest/logging.py:LoggingPlugin._disable_loggers",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin",
      "target": "src/_pytest/logging.py:LoggingPlugin._create_formatter",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin",
      "target": "src/_pytest/logging.py:LoggingPlugin._create_formatter",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin",
      "target": "src/_pytest/logging.py:LoggingPlugin.set_log_path",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin",
      "target": "src/_pytest/logging.py:LoggingPlugin._log_cli_enabled",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin",
      "target": "src/_pytest/logging.py:LoggingPlugin._log_cli_enabled",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin",
      "target": "src/_pytest/logging.py:LoggingPlugin.pytest_sessionstart",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin",
      "target": "src/_pytest/logging.py:LoggingPlugin.pytest_collection",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin",
      "target": "src/_pytest/logging.py:LoggingPlugin.pytest_runtestloop",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin",
      "target": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_logstart",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin",
      "target": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_logreport",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin",
      "target": "src/_pytest/logging.py:LoggingPlugin._runtest_for",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin",
      "target": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_setup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin",
      "target": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_call",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin",
      "target": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_teardown",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin",
      "target": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_logfinish",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin",
      "target": "src/_pytest/logging.py:LoggingPlugin.pytest_sessionfinish",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin",
      "target": "src/_pytest/logging.py:LoggingPlugin.pytest_unconfigure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin",
      "target": "src/_pytest/logging.py:_FileHandler",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin",
      "target": "src/_pytest/logging.py:_LiveLoggingStreamHandler",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin",
      "target": "src/_pytest/logging.py:_LiveLoggingNullHandler",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin",
      "target": "src/_pytest/logging.py:get_log_level_for_setting",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin",
      "target": "src/_pytest/logging.py:DatetimeFormatter",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin",
      "target": "src/_pytest/logging.py:LogCaptureHandler",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin",
      "target": "src/_pytest/logging.py:get_option_ini",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin._create_formatter",
      "target": "src/_pytest/logging.py:ColoredLevelFormatter",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin._create_formatter",
      "target": "src/_pytest/logging.py:PercentStyleMultiline",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin._create_formatter",
      "target": "src/_pytest/logging.py:DatetimeFormatter",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_sessionstart",
      "target": "src/_pytest/logging.py:_LiveLoggingNullHandler.set_when",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_sessionstart",
      "target": "src/_pytest/logging.py:_LiveLoggingStreamHandler.set_when",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_sessionstart",
      "target": "src/_pytest/logging.py:catching_logs",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_collection",
      "target": "src/_pytest/logging.py:_LiveLoggingNullHandler.set_when",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_collection",
      "target": "src/_pytest/logging.py:_LiveLoggingStreamHandler.set_when",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_collection",
      "target": "src/_pytest/logging.py:catching_logs",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_runtestloop",
      "target": "src/_pytest/logging.py:catching_logs",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_runtestloop",
      "target": "src/_pytest/logging.py:LoggingPlugin._log_cli_enabled",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_logstart",
      "target": "src/_pytest/logging.py:_LiveLoggingNullHandler.set_when",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_logstart",
      "target": "src/_pytest/logging.py:_LiveLoggingStreamHandler.set_when",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_logstart",
      "target": "src/_pytest/logging.py:_LiveLoggingNullHandler.reset",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_logstart",
      "target": "src/_pytest/logging.py:LogCaptureHandler.reset",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_logstart",
      "target": "src/_pytest/logging.py:_LiveLoggingStreamHandler.reset",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_logreport",
      "target": "src/_pytest/logging.py:_LiveLoggingNullHandler.set_when",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_logreport",
      "target": "src/_pytest/logging.py:_LiveLoggingStreamHandler.set_when",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin._runtest_for",
      "target": "src/_pytest/logging.py:_LiveLoggingNullHandler.reset",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin._runtest_for",
      "target": "src/_pytest/logging.py:LogCaptureHandler.reset",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin._runtest_for",
      "target": "src/_pytest/logging.py:_LiveLoggingStreamHandler.reset",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin._runtest_for",
      "target": "src/_pytest/logging.py:catching_logs",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_setup",
      "target": "src/_pytest/logging.py:_LiveLoggingNullHandler.set_when",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_setup",
      "target": "src/_pytest/logging.py:_LiveLoggingStreamHandler.set_when",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_setup",
      "target": "src/_pytest/logging.py:LoggingPlugin._runtest_for",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_call",
      "target": "src/_pytest/logging.py:_LiveLoggingNullHandler.set_when",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_call",
      "target": "src/_pytest/logging.py:_LiveLoggingStreamHandler.set_when",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_call",
      "target": "src/_pytest/logging.py:LoggingPlugin._runtest_for",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_teardown",
      "target": "src/_pytest/logging.py:_LiveLoggingNullHandler.set_when",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_teardown",
      "target": "src/_pytest/logging.py:_LiveLoggingStreamHandler.set_when",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_teardown",
      "target": "src/_pytest/logging.py:LoggingPlugin._runtest_for",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_logfinish",
      "target": "src/_pytest/logging.py:_LiveLoggingNullHandler.set_when",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_runtest_logfinish",
      "target": "src/_pytest/logging.py:_LiveLoggingStreamHandler.set_when",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_sessionfinish",
      "target": "src/_pytest/logging.py:_LiveLoggingNullHandler.set_when",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_sessionfinish",
      "target": "src/_pytest/logging.py:_LiveLoggingStreamHandler.set_when",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:LoggingPlugin.pytest_sessionfinish",
      "target": "src/_pytest/logging.py:catching_logs",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:_FileHandler",
      "target": "src/_pytest/logging.py:_FileHandler.handleError",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:_LiveLoggingStreamHandler",
      "target": "src/_pytest/logging.py:_LiveLoggingStreamHandler.reset",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:_LiveLoggingStreamHandler",
      "target": "src/_pytest/logging.py:_LiveLoggingStreamHandler.reset",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:_LiveLoggingStreamHandler",
      "target": "src/_pytest/logging.py:_LiveLoggingStreamHandler.set_when",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:_LiveLoggingStreamHandler",
      "target": "src/_pytest/logging.py:_LiveLoggingStreamHandler.set_when",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:_LiveLoggingStreamHandler",
      "target": "src/_pytest/logging.py:_LiveLoggingStreamHandler.emit",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:_LiveLoggingStreamHandler",
      "target": "src/_pytest/logging.py:_LiveLoggingStreamHandler.handleError",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:_LiveLoggingStreamHandler",
      "target": "src/_pytest/logging.py:_LiveLoggingNullHandler.set_when",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:_LiveLoggingStreamHandler",
      "target": "src/_pytest/logging.py:_LiveLoggingNullHandler.reset",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:_LiveLoggingStreamHandler",
      "target": "src/_pytest/logging.py:LogCaptureHandler.reset",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:_LiveLoggingStreamHandler.emit",
      "target": "src/_pytest/logging.py:LogCaptureHandler.emit",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/logging.py:_LiveLoggingNullHandler",
      "target": "src/_pytest/logging.py:_LiveLoggingNullHandler.reset",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:_LiveLoggingNullHandler",
      "target": "src/_pytest/logging.py:_LiveLoggingNullHandler.set_when",
      "type": "contains"
    },
    {
      "source": "src/_pytest/logging.py:_LiveLoggingNullHandler",
      "target": "src/_pytest/logging.py:_LiveLoggingNullHandler.handleError",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py",
      "target": "src/_pytest/unittest.py:pytest_pycollect_makeitem",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py",
      "target": "src/_pytest/unittest.py:UnitTestCase",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py",
      "target": "src/_pytest/unittest.py:_make_xunit_fixture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py",
      "target": "src/_pytest/unittest.py:TestCaseFunction",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py",
      "target": "src/_pytest/unittest.py:pytest_runtest_makereport",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py",
      "target": "src/_pytest/unittest.py:pytest_runtest_protocol",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py",
      "target": "src/_pytest/unittest.py:check_testcase_implements_trial_reporter",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py",
      "target": "src/_pytest/unittest.py:_is_skipped",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py:UnitTestCase",
      "target": "src/_pytest/unittest.py:UnitTestCase.collect",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py:UnitTestCase",
      "target": "src/_pytest/unittest.py:UnitTestCase._inject_setup_teardown_fixtures",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py:UnitTestCase.collect",
      "target": "src/_pytest/unittest.py:_is_skipped",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/unittest.py:UnitTestCase.collect",
      "target": "src/_pytest/unittest.py:UnitTestCase._inject_setup_teardown_fixtures",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/unittest.py:UnitTestCase._inject_setup_teardown_fixtures",
      "target": "src/_pytest/unittest.py:_make_xunit_fixture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/unittest.py:_make_xunit_fixture",
      "target": "src/_pytest/unittest.py:_make_xunit_fixture.cleanup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py:_make_xunit_fixture",
      "target": "src/_pytest/unittest.py:_make_xunit_fixture.fixture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py:_make_xunit_fixture.fixture",
      "target": "src/_pytest/unittest.py:TestCaseFunction.setup",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/unittest.py:_make_xunit_fixture.fixture",
      "target": "src/_pytest/unittest.py:TestCaseFunction.teardown",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/unittest.py:_make_xunit_fixture.fixture",
      "target": "src/_pytest/unittest.py:_is_skipped",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/unittest.py:_make_xunit_fixture.fixture",
      "target": "src/_pytest/unittest.py:_make_xunit_fixture.cleanup",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/unittest.py:TestCaseFunction",
      "target": "src/_pytest/unittest.py:TestCaseFunction._getobj",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py:TestCaseFunction",
      "target": "src/_pytest/unittest.py:TestCaseFunction.setup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py:TestCaseFunction",
      "target": "src/_pytest/unittest.py:TestCaseFunction.teardown",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py:TestCaseFunction",
      "target": "src/_pytest/unittest.py:TestCaseFunction.startTest",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py:TestCaseFunction",
      "target": "src/_pytest/unittest.py:TestCaseFunction._addexcinfo",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py:TestCaseFunction",
      "target": "src/_pytest/unittest.py:TestCaseFunction.addError",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py:TestCaseFunction",
      "target": "src/_pytest/unittest.py:TestCaseFunction.addFailure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py:TestCaseFunction",
      "target": "src/_pytest/unittest.py:TestCaseFunction.addSkip",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py:TestCaseFunction",
      "target": "src/_pytest/unittest.py:TestCaseFunction.addExpectedFailure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py:TestCaseFunction",
      "target": "src/_pytest/unittest.py:TestCaseFunction.addUnexpectedSuccess",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py:TestCaseFunction",
      "target": "src/_pytest/unittest.py:TestCaseFunction.addSuccess",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py:TestCaseFunction",
      "target": "src/_pytest/unittest.py:TestCaseFunction.stopTest",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py:TestCaseFunction",
      "target": "src/_pytest/unittest.py:TestCaseFunction.addDuration",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py:TestCaseFunction",
      "target": "src/_pytest/unittest.py:TestCaseFunction.runtest",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py:TestCaseFunction",
      "target": "src/_pytest/unittest.py:TestCaseFunction._traceback_filter",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py:TestCaseFunction.addError",
      "target": "src/_pytest/unittest.py:TestCaseFunction._addexcinfo",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/unittest.py:TestCaseFunction.addFailure",
      "target": "src/_pytest/unittest.py:TestCaseFunction._addexcinfo",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/unittest.py:TestCaseFunction.addSkip",
      "target": "src/_pytest/unittest.py:TestCaseFunction._addexcinfo",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/unittest.py:TestCaseFunction.addExpectedFailure",
      "target": "src/_pytest/unittest.py:TestCaseFunction._addexcinfo",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/unittest.py:TestCaseFunction.addUnexpectedSuccess",
      "target": "src/_pytest/unittest.py:TestCaseFunction._addexcinfo",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/unittest.py:TestCaseFunction.runtest",
      "target": "src/_pytest/unittest.py:_is_skipped",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/unittest.py:pytest_runtest_protocol",
      "target": "src/_pytest/unittest.py:pytest_runtest_protocol.excstore",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unittest.py:pytest_runtest_protocol",
      "target": "src/_pytest/unittest.py:check_testcase_implements_trial_reporter",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_path.py",
      "target": "src/_pytest/python_path.py:pytest_addoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_path.py",
      "target": "src/_pytest/python_path.py:pytest_load_initial_conftests",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_path.py",
      "target": "src/_pytest/python_path.py:pytest_unconfigure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/runner.py",
      "target": "src/_pytest/runner.py:pytest_addoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/runner.py",
      "target": "src/_pytest/runner.py:pytest_terminal_summary",
      "type": "contains"
    },
    {
      "source": "src/_pytest/runner.py",
      "target": "src/_pytest/runner.py:pytest_sessionstart",
      "type": "contains"
    },
    {
      "source": "src/_pytest/runner.py",
      "target": "src/_pytest/runner.py:pytest_sessionfinish",
      "type": "contains"
    },
    {
      "source": "src/_pytest/runner.py",
      "target": "src/_pytest/runner.py:pytest_runtest_protocol",
      "type": "contains"
    },
    {
      "source": "src/_pytest/runner.py",
      "target": "src/_pytest/runner.py:runtestprotocol",
      "type": "contains"
    },
    {
      "source": "src/_pytest/runner.py",
      "target": "src/_pytest/runner.py:show_test_item",
      "type": "contains"
    },
    {
      "source": "src/_pytest/runner.py",
      "target": "src/_pytest/runner.py:pytest_runtest_setup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/runner.py",
      "target": "src/_pytest/runner.py:pytest_runtest_call",
      "type": "contains"
    },
    {
      "source": "src/_pytest/runner.py",
      "target": "src/_pytest/runner.py:pytest_runtest_teardown",
      "type": "contains"
    },
    {
      "source": "src/_pytest/runner.py",
      "target": "src/_pytest/runner.py:_update_current_test_var",
      "type": "contains"
    },
    {
      "source": "src/_pytest/runner.py",
      "target": "src/_pytest/runner.py:pytest_report_teststatus",
      "type": "contains"
    },
    {
      "source": "src/_pytest/runner.py",
      "target": "src/_pytest/runner.py:call_and_report",
      "type": "contains"
    },
    {
      "source": "src/_pytest/runner.py",
      "target": "src/_pytest/runner.py:check_interactive_exception",
      "type": "contains"
    },
    {
      "source": "src/_pytest/runner.py",
      "target": "src/_pytest/runner.py:call_runtest_hook",
      "type": "contains"
    },
    {
      "source": "src/_pytest/runner.py",
      "target": "src/_pytest/runner.py:CallInfo",
      "type": "contains"
    },
    {
      "source": "src/_pytest/runner.py",
      "target": "src/_pytest/runner.py:pytest_runtest_makereport",
      "type": "contains"
    },
    {
      "source": "src/_pytest/runner.py",
      "target": "src/_pytest/runner.py:pytest_make_collect_report",
      "type": "contains"
    },
    {
      "source": "src/_pytest/runner.py",
      "target": "src/_pytest/runner.py:SetupState",
      "type": "contains"
    },
    {
      "source": "src/_pytest/runner.py",
      "target": "src/_pytest/runner.py:collect_one_node",
      "type": "contains"
    },
    {
      "source": "src/_pytest/runner.py",
      "target": "src/_pytest/reports.py:BaseReport",
      "type": "imports"
    },
    {
      "source": "src/_pytest/runner.py",
      "target": "src/_pytest/reports.py:CollectErrorRepr",
      "type": "imports"
    },
    {
      "source": "src/_pytest/runner.py",
      "target": "src/_pytest/reports.py:CollectReport",
      "type": "imports"
    },
    {
      "source": "src/_pytest/runner.py",
      "target": "src/_pytest/reports.py:TestReport",
      "type": "imports"
    },
    {
      "source": "src/_pytest/runner.py:pytest_sessionstart",
      "target": "src/_pytest/runner.py:SetupState",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/runner.py:pytest_sessionfinish",
      "target": "src/_pytest/runner.py:SetupState.teardown_exact",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/runner.py:pytest_runtest_protocol",
      "target": "src/_pytest/runner.py:runtestprotocol",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/runner.py:runtestprotocol",
      "target": "src/_pytest/runner.py:call_and_report",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/runner.py:runtestprotocol",
      "target": "src/_pytest/runner.py:show_test_item",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/runner.py:pytest_runtest_setup",
      "target": "src/_pytest/runner.py:SetupState.setup",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/runner.py:pytest_runtest_setup",
      "target": "src/_pytest/runner.py:_update_current_test_var",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/runner.py:pytest_runtest_call",
      "target": "src/_pytest/runner.py:_update_current_test_var",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/runner.py:pytest_runtest_teardown",
      "target": "src/_pytest/runner.py:SetupState.teardown_exact",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/runner.py:pytest_runtest_teardown",
      "target": "src/_pytest/runner.py:_update_current_test_var",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/runner.py:call_and_report",
      "target": "src/_pytest/runner.py:check_interactive_exception",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/runner.py:call_and_report",
      "target": "src/_pytest/runner.py:call_runtest_hook",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/runner.py:call_and_report",
      "target": "src/_pytest/runner.py:pytest_runtest_makereport",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/runner.py:call_runtest_hook",
      "target": "src/_pytest/runner.py:CallInfo.from_call",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/runner.py:CallInfo",
      "target": "src/_pytest/runner.py:CallInfo.result",
      "type": "contains"
    },
    {
      "source": "src/_pytest/runner.py:CallInfo",
      "target": "src/_pytest/runner.py:CallInfo.from_call",
      "type": "contains"
    },
    {
      "source": "src/_pytest/runner.py:CallInfo",
      "target": "src/_pytest/runner.py:CallInfo.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/runner.py:pytest_runtest_makereport",
      "target": "src/_pytest/reports.py:TestReport.from_item_and_call",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/runner.py:pytest_make_collect_report",
      "target": "src/_pytest/runner.py:CallInfo.from_call",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/runner.py:pytest_make_collect_report",
      "target": "src/_pytest/reports.py:CollectErrorRepr",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/runner.py:pytest_make_collect_report",
      "target": "src/_pytest/reports.py:CollectReport",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/runner.py:SetupState",
      "target": "src/_pytest/runner.py:SetupState.setup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/runner.py:SetupState",
      "target": "src/_pytest/runner.py:SetupState.addfinalizer",
      "type": "contains"
    },
    {
      "source": "src/_pytest/runner.py:SetupState",
      "target": "src/_pytest/runner.py:SetupState.teardown_exact",
      "type": "contains"
    },
    {
      "source": "src/_pytest/runner.py:collect_one_node",
      "target": "src/_pytest/runner.py:check_interactive_exception",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/runner.py:collect_one_node",
      "target": "src/_pytest/runner.py:pytest_make_collect_report",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/helpconfig.py",
      "target": "src/_pytest/helpconfig.py:HelpAction",
      "type": "contains"
    },
    {
      "source": "src/_pytest/helpconfig.py",
      "target": "src/_pytest/helpconfig.py:pytest_addoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/helpconfig.py",
      "target": "src/_pytest/helpconfig.py:pytest_cmdline_parse",
      "type": "contains"
    },
    {
      "source": "src/_pytest/helpconfig.py",
      "target": "src/_pytest/helpconfig.py:showversion",
      "type": "contains"
    },
    {
      "source": "src/_pytest/helpconfig.py",
      "target": "src/_pytest/helpconfig.py:pytest_cmdline_main",
      "type": "contains"
    },
    {
      "source": "src/_pytest/helpconfig.py",
      "target": "src/_pytest/helpconfig.py:showhelp",
      "type": "contains"
    },
    {
      "source": "src/_pytest/helpconfig.py",
      "target": "src/_pytest/helpconfig.py:getpluginversioninfo",
      "type": "contains"
    },
    {
      "source": "src/_pytest/helpconfig.py",
      "target": "src/_pytest/helpconfig.py:pytest_report_header",
      "type": "contains"
    },
    {
      "source": "src/_pytest/helpconfig.py:HelpAction",
      "target": "src/_pytest/helpconfig.py:HelpAction.__call__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/helpconfig.py:pytest_cmdline_parse",
      "target": "src/_pytest/helpconfig.py:pytest_cmdline_parse.unset_tracing",
      "type": "contains"
    },
    {
      "source": "src/_pytest/helpconfig.py:showversion",
      "target": "src/_pytest/helpconfig.py:getpluginversioninfo",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/helpconfig.py:pytest_cmdline_main",
      "target": "src/_pytest/helpconfig.py:showhelp",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/helpconfig.py:pytest_cmdline_main",
      "target": "src/_pytest/helpconfig.py:showversion",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/helpconfig.py:pytest_report_header",
      "target": "src/_pytest/helpconfig.py:getpluginversioninfo",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pastebin.py",
      "target": "src/_pytest/pastebin.py:pytest_addoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pastebin.py",
      "target": "src/_pytest/pastebin.py:pytest_configure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pastebin.py",
      "target": "src/_pytest/pastebin.py:pytest_unconfigure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pastebin.py",
      "target": "src/_pytest/pastebin.py:create_new_paste",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pastebin.py",
      "target": "src/_pytest/pastebin.py:pytest_terminal_summary",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pastebin.py:pytest_configure",
      "target": "src/_pytest/pastebin.py:pytest_configure.tee_write",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pastebin.py:pytest_unconfigure",
      "target": "src/_pytest/pastebin.py:create_new_paste",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pastebin.py:pytest_terminal_summary",
      "target": "src/_pytest/pastebin.py:create_new_paste",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/compat.py",
      "target": "src/_pytest/compat.py:legacy_path",
      "type": "contains"
    },
    {
      "source": "src/_pytest/compat.py",
      "target": "src/_pytest/compat.py:NotSetType",
      "type": "contains"
    },
    {
      "source": "src/_pytest/compat.py",
      "target": "src/_pytest/compat.py:is_generator",
      "type": "contains"
    },
    {
      "source": "src/_pytest/compat.py",
      "target": "src/_pytest/compat.py:iscoroutinefunction",
      "type": "contains"
    },
    {
      "source": "src/_pytest/compat.py",
      "target": "src/_pytest/compat.py:is_async_function",
      "type": "contains"
    },
    {
      "source": "src/_pytest/compat.py",
      "target": "src/_pytest/compat.py:getlocation",
      "type": "contains"
    },
    {
      "source": "src/_pytest/compat.py",
      "target": "src/_pytest/compat.py:num_mock_patch_args",
      "type": "contains"
    },
    {
      "source": "src/_pytest/compat.py",
      "target": "src/_pytest/compat.py:getfuncargnames",
      "type": "contains"
    },
    {
      "source": "src/_pytest/compat.py",
      "target": "src/_pytest/compat.py:get_default_arg_names",
      "type": "contains"
    },
    {
      "source": "src/_pytest/compat.py",
      "target": "src/_pytest/compat.py:_translate_non_printable",
      "type": "contains"
    },
    {
      "source": "src/_pytest/compat.py",
      "target": "src/_pytest/compat.py:_bytes_to_ascii",
      "type": "contains"
    },
    {
      "source": "src/_pytest/compat.py",
      "target": "src/_pytest/compat.py:ascii_escaped",
      "type": "contains"
    },
    {
      "source": "src/_pytest/compat.py",
      "target": "src/_pytest/compat.py:_PytestWrapper",
      "type": "contains"
    },
    {
      "source": "src/_pytest/compat.py",
      "target": "src/_pytest/compat.py:get_real_func",
      "type": "contains"
    },
    {
      "source": "src/_pytest/compat.py",
      "target": "src/_pytest/compat.py:get_real_method",
      "type": "contains"
    },
    {
      "source": "src/_pytest/compat.py",
      "target": "src/_pytest/compat.py:getimfunc",
      "type": "contains"
    },
    {
      "source": "src/_pytest/compat.py",
      "target": "src/_pytest/compat.py:safe_getattr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/compat.py",
      "target": "src/_pytest/compat.py:safe_isclass",
      "type": "contains"
    },
    {
      "source": "src/_pytest/compat.py",
      "target": "src/_pytest/compat.py:get_user_id",
      "type": "contains"
    },
    {
      "source": "src/_pytest/compat.py",
      "target": "src/_pytest/compat.py:assert_never",
      "type": "contains"
    },
    {
      "source": "src/_pytest/compat.py:is_generator",
      "target": "src/_pytest/compat.py:iscoroutinefunction",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/compat.py:is_async_function",
      "target": "src/_pytest/compat.py:iscoroutinefunction",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/compat.py:getlocation",
      "target": "src/_pytest/compat.py:get_real_func",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/compat.py:getfuncargnames",
      "target": "src/_pytest/compat.py:num_mock_patch_args",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/compat.py:ascii_escaped",
      "target": "src/_pytest/compat.py:_translate_non_printable",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/compat.py:ascii_escaped",
      "target": "src/_pytest/compat.py:_bytes_to_ascii",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/compat.py:get_real_method",
      "target": "src/_pytest/compat.py:get_real_func",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py",
      "target": "src/_pytest/terminal.py:MoreQuietAction",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py",
      "target": "src/_pytest/terminal.py:TestShortLogReport",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py",
      "target": "src/_pytest/terminal.py:pytest_addoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py",
      "target": "src/_pytest/terminal.py:pytest_configure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py",
      "target": "src/_pytest/terminal.py:getreportopt",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py",
      "target": "src/_pytest/terminal.py:pytest_report_teststatus",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py",
      "target": "src/_pytest/terminal.py:WarningReport",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py",
      "target": "src/_pytest/terminal.py:TerminalReporter",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py",
      "target": "src/_pytest/terminal.py:_get_node_id_with_markup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py",
      "target": "src/_pytest/terminal.py:_format_trimmed",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py",
      "target": "src/_pytest/terminal.py:_get_line_with_reprcrash_message",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py",
      "target": "src/_pytest/terminal.py:_folded_skips",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py",
      "target": "src/_pytest/terminal.py:pluralize",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py",
      "target": "src/_pytest/terminal.py:_plugin_nameversions",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py",
      "target": "src/_pytest/terminal.py:format_session_duration",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py",
      "target": "src/_pytest/terminal.py:_get_raw_skip_reason",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:MoreQuietAction",
      "target": "src/_pytest/terminal.py:MoreQuietAction.__call__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:pytest_configure",
      "target": "src/_pytest/terminal.py:pytest_configure.mywriter",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:pytest_configure",
      "target": "src/_pytest/terminal.py:TerminalReporter",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:pytest_configure.mywriter",
      "target": "src/_pytest/terminal.py:TerminalReporter.write_line",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:WarningReport",
      "target": "src/_pytest/terminal.py:WarningReport.get_location",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter._determine_show_progress_info",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter._determine_show_progress_info",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.verbosity",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.showheader",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.no_header",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.no_summary",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.showfspath",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.showfspath",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.showlongtestinfo",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.hasopt",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.write_fspath_result",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.write_ensure_prefix",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.ensure_newline",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.wrap_write",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.write",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.flush",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.write_line",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.rewrite",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.write_sep",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.section",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.line",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter._add_stats",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.pytest_internalerror",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.pytest_warning_recorded",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.pytest_plugin_registered",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.pytest_deselected",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.pytest_runtest_logstart",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.pytest_runtest_logreport",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter._is_last_item",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.pytest_runtest_logfinish",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter._get_progress_information_message",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter._write_progress_information_filling_space",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter._width_of_current_line",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.pytest_collection",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.pytest_collectreport",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.report_collect",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.pytest_sessionstart",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter._write_report_lines_from_hooks",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.pytest_report_header",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.pytest_collection_finish",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter._printcollecteditems",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.pytest_sessionfinish",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.pytest_terminal_summary",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.pytest_keyboard_interrupt",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.pytest_unconfigure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter._report_keyboardinterrupt",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter._locationline",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter._getfailureheadline",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter._getcrashline",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.getreports",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.summary_warnings",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.summary_passes",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter._get_teardown_reports",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter._handle_teardown_sections",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.print_teardown_sections",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.summary_failures",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.summary_errors",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter._outrep_summary",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.summary_stats",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.short_test_summary",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter._get_main_color",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter._determine_main_color",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter._set_main_color",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter.build_summary_stats_line",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter._get_reports_to_display",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter._build_normal_summary_stats_line",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:TerminalReporter._build_collect_only_summary_stats_line",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter",
      "target": "src/_pytest/terminal.py:getreportopt",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.write_fspath_result",
      "target": "src/_pytest/terminal.py:TerminalReporter._write_progress_information_filling_space",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.write_fspath_result",
      "target": "src/_pytest/terminal.py:TerminalReporter.line",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.write_fspath_result",
      "target": "src/_pytest/terminal.py:TerminalReporter.write",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.write_ensure_prefix",
      "target": "src/_pytest/terminal.py:TerminalReporter.line",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.write_ensure_prefix",
      "target": "src/_pytest/terminal.py:TerminalReporter.write",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.ensure_newline",
      "target": "src/_pytest/terminal.py:TerminalReporter.line",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.wrap_write",
      "target": "src/_pytest/terminal.py:TerminalReporter.write",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.write_line",
      "target": "src/_pytest/terminal.py:TerminalReporter.line",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.write_line",
      "target": "src/_pytest/terminal.py:TerminalReporter.ensure_newline",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.rewrite",
      "target": "src/_pytest/terminal.py:TerminalReporter.write",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.write_sep",
      "target": "src/_pytest/terminal.py:TerminalReporter.ensure_newline",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter._add_stats",
      "target": "src/_pytest/terminal.py:TerminalReporter._set_main_color",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_internalerror",
      "target": "src/_pytest/terminal.py:TerminalReporter.write_line",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_warning_recorded",
      "target": "src/_pytest/terminal.py:TerminalReporter._add_stats",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_warning_recorded",
      "target": "src/_pytest/terminal.py:WarningReport",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_plugin_registered",
      "target": "src/_pytest/terminal.py:TerminalReporter.write_line",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_deselected",
      "target": "src/_pytest/terminal.py:TerminalReporter._add_stats",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_runtest_logstart",
      "target": "src/_pytest/terminal.py:TerminalReporter.write_ensure_prefix",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_runtest_logstart",
      "target": "src/_pytest/terminal.py:TerminalReporter._locationline",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_runtest_logstart",
      "target": "src/_pytest/terminal.py:TerminalReporter.flush",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_runtest_logstart",
      "target": "src/_pytest/terminal.py:TerminalReporter.write_fspath_result",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_runtest_logreport",
      "target": "src/_pytest/terminal.py:TerminalReporter._add_stats",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_runtest_logreport",
      "target": "src/_pytest/terminal.py:TerminalReporter.flush",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_runtest_logreport",
      "target": "src/_pytest/terminal.py:pytest_report_teststatus",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_runtest_logreport",
      "target": "src/_pytest/terminal.py:TestShortLogReport",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_runtest_logreport",
      "target": "src/_pytest/terminal.py:TerminalReporter.write_ensure_prefix",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_runtest_logreport",
      "target": "src/_pytest/terminal.py:TerminalReporter._locationline",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_runtest_logreport",
      "target": "src/_pytest/terminal.py:_get_raw_skip_reason",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_runtest_logreport",
      "target": "src/_pytest/terminal.py:_format_trimmed",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_runtest_logreport",
      "target": "src/_pytest/terminal.py:TerminalReporter._write_progress_information_filling_space",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_runtest_logreport",
      "target": "src/_pytest/terminal.py:TerminalReporter.ensure_newline",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_runtest_logreport",
      "target": "src/_pytest/terminal.py:TerminalReporter._get_progress_information_message",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_runtest_logreport",
      "target": "src/_pytest/terminal.py:TerminalReporter.write",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_runtest_logreport",
      "target": "src/_pytest/terminal.py:TerminalReporter.wrap_write",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_runtest_logfinish",
      "target": "src/_pytest/terminal.py:TerminalReporter._get_main_color",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_runtest_logfinish",
      "target": "src/_pytest/terminal.py:TerminalReporter._write_progress_information_filling_space",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_runtest_logfinish",
      "target": "src/_pytest/terminal.py:TerminalReporter._get_progress_information_message",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_runtest_logfinish",
      "target": "src/_pytest/terminal.py:TerminalReporter.write",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter._write_progress_information_filling_space",
      "target": "src/_pytest/terminal.py:TerminalReporter.write",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter._write_progress_information_filling_space",
      "target": "src/_pytest/terminal.py:TerminalReporter._get_main_color",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter._write_progress_information_filling_space",
      "target": "src/_pytest/terminal.py:TerminalReporter._get_progress_information_message",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_collection",
      "target": "src/_pytest/terminal.py:TerminalReporter.write",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_collectreport",
      "target": "src/_pytest/terminal.py:TerminalReporter._add_stats",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_collectreport",
      "target": "src/_pytest/terminal.py:TerminalReporter.report_collect",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.report_collect",
      "target": "src/_pytest/terminal.py:TerminalReporter.rewrite",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.report_collect",
      "target": "src/_pytest/terminal.py:TerminalReporter.write_line",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.report_collect",
      "target": "src/_pytest/terminal.py:TerminalReporter.write",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_sessionstart",
      "target": "src/_pytest/terminal.py:TerminalReporter.write_sep",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_sessionstart",
      "target": "src/_pytest/terminal.py:TerminalReporter.write_line",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_sessionstart",
      "target": "src/_pytest/terminal.py:TerminalReporter.pytest_report_header",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_sessionstart",
      "target": "src/_pytest/terminal.py:TerminalReporter._write_report_lines_from_hooks",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter._write_report_lines_from_hooks",
      "target": "src/_pytest/terminal.py:TerminalReporter.write_line",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_report_header",
      "target": "src/_pytest/terminal.py:_plugin_nameversions",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_collection_finish",
      "target": "src/_pytest/terminal.py:TerminalReporter.report_collect",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_collection_finish",
      "target": "src/_pytest/terminal.py:TerminalReporter._printcollecteditems",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_collection_finish",
      "target": "src/_pytest/terminal.py:TerminalReporter._write_report_lines_from_hooks",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_collection_finish",
      "target": "src/_pytest/terminal.py:TerminalReporter.line",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter._printcollecteditems",
      "target": "src/_pytest/terminal.py:TerminalReporter.line",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_sessionfinish",
      "target": "src/_pytest/terminal.py:TerminalReporter.write_sep",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_sessionfinish",
      "target": "src/_pytest/terminal.py:TerminalReporter.summary_stats",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_sessionfinish",
      "target": "src/_pytest/terminal.py:TerminalReporter.pytest_terminal_summary",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_sessionfinish",
      "target": "src/_pytest/terminal.py:TerminalReporter._report_keyboardinterrupt",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_sessionfinish",
      "target": "src/_pytest/terminal.py:TerminalReporter.line",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_terminal_summary",
      "target": "src/_pytest/terminal.py:TerminalReporter.summary_passes",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_terminal_summary",
      "target": "src/_pytest/terminal.py:TerminalReporter.short_test_summary",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_terminal_summary",
      "target": "src/_pytest/terminal.py:TerminalReporter.summary_errors",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_terminal_summary",
      "target": "src/_pytest/terminal.py:TerminalReporter.summary_failures",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_terminal_summary",
      "target": "src/_pytest/terminal.py:TerminalReporter.summary_warnings",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.pytest_unconfigure",
      "target": "src/_pytest/terminal.py:TerminalReporter._report_keyboardinterrupt",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter._report_keyboardinterrupt",
      "target": "src/_pytest/terminal.py:TerminalReporter.line",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter._report_keyboardinterrupt",
      "target": "src/_pytest/terminal.py:TerminalReporter.write_sep",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter._locationline",
      "target": "src/_pytest/terminal.py:TerminalReporter._locationline.mkrel",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter._locationline",
      "target": "src/_pytest/terminal.py:TerminalReporter._locationline.mkrel",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.summary_warnings",
      "target": "src/_pytest/terminal.py:TerminalReporter.summary_warnings.collapsed_location_report",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.summary_warnings",
      "target": "src/_pytest/terminal.py:TerminalReporter.summary_warnings.collapsed_location_report",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.summary_warnings",
      "target": "src/_pytest/terminal.py:TerminalReporter.write_sep",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.summary_warnings",
      "target": "src/_pytest/terminal.py:TerminalReporter.hasopt",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.summary_warnings",
      "target": "src/_pytest/terminal.py:TerminalReporter.line",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.summary_warnings.collapsed_location_report",
      "target": "src/_pytest/terminal.py:WarningReport.get_location",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.summary_passes",
      "target": "src/_pytest/terminal.py:TerminalReporter._outrep_summary",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.summary_passes",
      "target": "src/_pytest/terminal.py:TerminalReporter.write_sep",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.summary_passes",
      "target": "src/_pytest/terminal.py:TerminalReporter._handle_teardown_sections",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.summary_passes",
      "target": "src/_pytest/terminal.py:TerminalReporter.getreports",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.summary_passes",
      "target": "src/_pytest/terminal.py:TerminalReporter.hasopt",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.summary_passes",
      "target": "src/_pytest/terminal.py:TerminalReporter._getfailureheadline",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter._get_teardown_reports",
      "target": "src/_pytest/terminal.py:TerminalReporter.getreports",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter._handle_teardown_sections",
      "target": "src/_pytest/terminal.py:TerminalReporter.print_teardown_sections",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter._handle_teardown_sections",
      "target": "src/_pytest/terminal.py:TerminalReporter._get_teardown_reports",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.print_teardown_sections",
      "target": "src/_pytest/terminal.py:TerminalReporter.line",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.summary_failures",
      "target": "src/_pytest/terminal.py:TerminalReporter.write_sep",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.summary_failures",
      "target": "src/_pytest/terminal.py:TerminalReporter._outrep_summary",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.summary_failures",
      "target": "src/_pytest/terminal.py:TerminalReporter.write_line",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.summary_failures",
      "target": "src/_pytest/terminal.py:TerminalReporter._getcrashline",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.summary_failures",
      "target": "src/_pytest/terminal.py:TerminalReporter._handle_teardown_sections",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.summary_failures",
      "target": "src/_pytest/terminal.py:TerminalReporter.getreports",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.summary_failures",
      "target": "src/_pytest/terminal.py:TerminalReporter._getfailureheadline",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.summary_errors",
      "target": "src/_pytest/terminal.py:TerminalReporter.getreports",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.summary_errors",
      "target": "src/_pytest/terminal.py:TerminalReporter._outrep_summary",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.summary_errors",
      "target": "src/_pytest/terminal.py:TerminalReporter.write_sep",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.summary_errors",
      "target": "src/_pytest/terminal.py:TerminalReporter._getfailureheadline",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter._outrep_summary",
      "target": "src/_pytest/terminal.py:TerminalReporter.line",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.summary_stats",
      "target": "src/_pytest/terminal.py:TerminalReporter.build_summary_stats_line",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.summary_stats",
      "target": "src/_pytest/terminal.py:TerminalReporter.write_sep",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.summary_stats",
      "target": "src/_pytest/terminal.py:TerminalReporter.write_line",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.summary_stats",
      "target": "src/_pytest/terminal.py:format_session_duration",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.short_test_summary",
      "target": "src/_pytest/terminal.py:TerminalReporter.short_test_summary.show_simple",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.short_test_summary",
      "target": "src/_pytest/terminal.py:TerminalReporter.short_test_summary.show_xfailed",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.short_test_summary",
      "target": "src/_pytest/terminal.py:TerminalReporter.short_test_summary.show_xpassed",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.short_test_summary",
      "target": "src/_pytest/terminal.py:TerminalReporter.short_test_summary.show_skipped",
      "type": "contains"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.short_test_summary",
      "target": "src/_pytest/terminal.py:TerminalReporter.write_sep",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.short_test_summary",
      "target": "src/_pytest/terminal.py:TerminalReporter.write_line",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.short_test_summary.show_simple",
      "target": "src/_pytest/terminal.py:_get_line_with_reprcrash_message",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.short_test_summary.show_xfailed",
      "target": "src/_pytest/terminal.py:_get_node_id_with_markup",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.short_test_summary.show_xpassed",
      "target": "src/_pytest/terminal.py:_get_node_id_with_markup",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.short_test_summary.show_skipped",
      "target": "src/_pytest/terminal.py:_folded_skips",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter._get_main_color",
      "target": "src/_pytest/terminal.py:TerminalReporter._set_main_color",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter._set_main_color",
      "target": "src/_pytest/terminal.py:TerminalReporter._determine_main_color",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.build_summary_stats_line",
      "target": "src/_pytest/terminal.py:TerminalReporter._build_normal_summary_stats_line",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter.build_summary_stats_line",
      "target": "src/_pytest/terminal.py:TerminalReporter._build_collect_only_summary_stats_line",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter._build_normal_summary_stats_line",
      "target": "src/_pytest/terminal.py:TerminalReporter._get_main_color",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter._build_normal_summary_stats_line",
      "target": "src/_pytest/terminal.py:pluralize",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter._build_normal_summary_stats_line",
      "target": "src/_pytest/terminal.py:TerminalReporter._get_reports_to_display",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter._build_collect_only_summary_stats_line",
      "target": "src/_pytest/terminal.py:pluralize",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:TerminalReporter._build_collect_only_summary_stats_line",
      "target": "src/_pytest/terminal.py:TerminalReporter._get_reports_to_display",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:_get_line_with_reprcrash_message",
      "target": "src/_pytest/terminal.py:_get_node_id_with_markup",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/terminal.py:_get_line_with_reprcrash_message",
      "target": "src/_pytest/terminal.py:_format_trimmed",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/warnings.py",
      "target": "src/_pytest/warnings.py:pytest_configure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/warnings.py",
      "target": "src/_pytest/warnings.py:catch_warnings_for_item",
      "type": "contains"
    },
    {
      "source": "src/_pytest/warnings.py",
      "target": "src/_pytest/warnings.py:warning_record_to_str",
      "type": "contains"
    },
    {
      "source": "src/_pytest/warnings.py",
      "target": "src/_pytest/warnings.py:pytest_runtest_protocol",
      "type": "contains"
    },
    {
      "source": "src/_pytest/warnings.py",
      "target": "src/_pytest/warnings.py:pytest_collection",
      "type": "contains"
    },
    {
      "source": "src/_pytest/warnings.py",
      "target": "src/_pytest/warnings.py:pytest_terminal_summary",
      "type": "contains"
    },
    {
      "source": "src/_pytest/warnings.py",
      "target": "src/_pytest/warnings.py:pytest_sessionfinish",
      "type": "contains"
    },
    {
      "source": "src/_pytest/warnings.py",
      "target": "src/_pytest/warnings.py:pytest_load_initial_conftests",
      "type": "contains"
    },
    {
      "source": "src/_pytest/warnings.py:pytest_runtest_protocol",
      "target": "src/_pytest/warnings.py:catch_warnings_for_item",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/warnings.py:pytest_collection",
      "target": "src/_pytest/warnings.py:catch_warnings_for_item",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/warnings.py:pytest_terminal_summary",
      "target": "src/_pytest/warnings.py:catch_warnings_for_item",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/warnings.py:pytest_sessionfinish",
      "target": "src/_pytest/warnings.py:catch_warnings_for_item",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/warnings.py:pytest_load_initial_conftests",
      "target": "src/_pytest/warnings.py:catch_warnings_for_item",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester_assertions.py",
      "target": "src/_pytest/pytester_assertions.py:assertoutcome",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester_assertions.py",
      "target": "src/_pytest/pytester_assertions.py:assert_outcomes",
      "type": "contains"
    },
    {
      "source": "src/_pytest/deprecated.py",
      "target": "src/_pytest/deprecated.py:check_ispytest",
      "type": "contains"
    },
    {
      "source": "src/_pytest/recwarn.py",
      "target": "src/_pytest/recwarn.py:recwarn",
      "type": "contains"
    },
    {
      "source": "src/_pytest/recwarn.py",
      "target": "src/_pytest/recwarn.py:deprecated_call",
      "type": "contains"
    },
    {
      "source": "src/_pytest/recwarn.py",
      "target": "src/_pytest/recwarn.py:deprecated_call",
      "type": "contains"
    },
    {
      "source": "src/_pytest/recwarn.py",
      "target": "src/_pytest/recwarn.py:deprecated_call",
      "type": "contains"
    },
    {
      "source": "src/_pytest/recwarn.py",
      "target": "src/_pytest/recwarn.py:warns",
      "type": "contains"
    },
    {
      "source": "src/_pytest/recwarn.py",
      "target": "src/_pytest/recwarn.py:warns",
      "type": "contains"
    },
    {
      "source": "src/_pytest/recwarn.py",
      "target": "src/_pytest/recwarn.py:warns",
      "type": "contains"
    },
    {
      "source": "src/_pytest/recwarn.py",
      "target": "src/_pytest/recwarn.py:WarningsRecorder",
      "type": "contains"
    },
    {
      "source": "src/_pytest/recwarn.py",
      "target": "src/_pytest/recwarn.py:WarningsChecker",
      "type": "contains"
    },
    {
      "source": "src/_pytest/recwarn.py:recwarn",
      "target": "src/_pytest/recwarn.py:WarningsRecorder",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/recwarn.py:deprecated_call",
      "target": "src/_pytest/recwarn.py:warns",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/recwarn.py:warns",
      "target": "src/_pytest/recwarn.py:WarningsChecker",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/recwarn.py:WarningsRecorder",
      "target": "src/_pytest/recwarn.py:WarningsRecorder.list",
      "type": "contains"
    },
    {
      "source": "src/_pytest/recwarn.py:WarningsRecorder",
      "target": "src/_pytest/recwarn.py:WarningsRecorder.__getitem__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/recwarn.py:WarningsRecorder",
      "target": "src/_pytest/recwarn.py:WarningsRecorder.__iter__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/recwarn.py:WarningsRecorder",
      "target": "src/_pytest/recwarn.py:WarningsRecorder.__len__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/recwarn.py:WarningsRecorder",
      "target": "src/_pytest/recwarn.py:WarningsRecorder.pop",
      "type": "contains"
    },
    {
      "source": "src/_pytest/recwarn.py:WarningsRecorder",
      "target": "src/_pytest/recwarn.py:WarningsRecorder.clear",
      "type": "contains"
    },
    {
      "source": "src/_pytest/recwarn.py:WarningsRecorder",
      "target": "src/_pytest/recwarn.py:WarningsRecorder.__enter__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/recwarn.py:WarningsRecorder",
      "target": "src/_pytest/recwarn.py:WarningsRecorder.__exit__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/recwarn.py:WarningsRecorder.__exit__",
      "target": "src/_pytest/recwarn.py:WarningsChecker.__exit__",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/recwarn.py:WarningsChecker",
      "target": "src/_pytest/recwarn.py:WarningsChecker.matches",
      "type": "contains"
    },
    {
      "source": "src/_pytest/recwarn.py:WarningsChecker",
      "target": "src/_pytest/recwarn.py:WarningsChecker.__exit__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/recwarn.py:WarningsChecker",
      "target": "src/_pytest/recwarn.py:WarningsRecorder",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/recwarn.py:WarningsChecker.__exit__",
      "target": "src/_pytest/recwarn.py:WarningsChecker.__exit__.found_str",
      "type": "contains"
    },
    {
      "source": "src/_pytest/recwarn.py:WarningsChecker.__exit__",
      "target": "src/_pytest/recwarn.py:WarningsChecker.__exit__.found_str",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/recwarn.py:WarningsChecker.__exit__",
      "target": "src/_pytest/recwarn.py:WarningsChecker.matches",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/recwarn.py:WarningsChecker.__exit__",
      "target": "src/_pytest/recwarn.py:WarningsRecorder.__exit__",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/tmpdir.py",
      "target": "src/_pytest/tmpdir.py:TempPathFactory",
      "type": "contains"
    },
    {
      "source": "src/_pytest/tmpdir.py",
      "target": "src/_pytest/tmpdir.py:get_user",
      "type": "contains"
    },
    {
      "source": "src/_pytest/tmpdir.py",
      "target": "src/_pytest/tmpdir.py:pytest_configure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/tmpdir.py",
      "target": "src/_pytest/tmpdir.py:pytest_addoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/tmpdir.py",
      "target": "src/_pytest/tmpdir.py:tmp_path_factory",
      "type": "contains"
    },
    {
      "source": "src/_pytest/tmpdir.py",
      "target": "src/_pytest/tmpdir.py:_mk_tmp",
      "type": "contains"
    },
    {
      "source": "src/_pytest/tmpdir.py",
      "target": "src/_pytest/tmpdir.py:tmp_path",
      "type": "contains"
    },
    {
      "source": "src/_pytest/tmpdir.py",
      "target": "src/_pytest/tmpdir.py:pytest_sessionfinish",
      "type": "contains"
    },
    {
      "source": "src/_pytest/tmpdir.py",
      "target": "src/_pytest/tmpdir.py:pytest_runtest_makereport",
      "type": "contains"
    },
    {
      "source": "src/_pytest/tmpdir.py",
      "target": "src/_pytest/pathlib.py:cleanup_dead_symlinks",
      "type": "imports"
    },
    {
      "source": "src/_pytest/tmpdir.py",
      "target": "src/_pytest/pathlib.py",
      "type": "imports"
    },
    {
      "source": "src/_pytest/tmpdir.py",
      "target": "src/_pytest/pathlib.py:make_numbered_dir",
      "type": "imports"
    },
    {
      "source": "src/_pytest/tmpdir.py",
      "target": "src/_pytest/pathlib.py:make_numbered_dir_with_cleanup",
      "type": "imports"
    },
    {
      "source": "src/_pytest/tmpdir.py",
      "target": "src/_pytest/pathlib.py:rm_rf",
      "type": "imports"
    },
    {
      "source": "src/_pytest/tmpdir.py:TempPathFactory",
      "target": "src/_pytest/tmpdir.py:TempPathFactory.from_config",
      "type": "contains"
    },
    {
      "source": "src/_pytest/tmpdir.py:TempPathFactory",
      "target": "src/_pytest/tmpdir.py:TempPathFactory._ensure_relative_to_basetemp",
      "type": "contains"
    },
    {
      "source": "src/_pytest/tmpdir.py:TempPathFactory",
      "target": "src/_pytest/tmpdir.py:TempPathFactory.mktemp",
      "type": "contains"
    },
    {
      "source": "src/_pytest/tmpdir.py:TempPathFactory",
      "target": "src/_pytest/tmpdir.py:TempPathFactory.getbasetemp",
      "type": "contains"
    },
    {
      "source": "src/_pytest/tmpdir.py:TempPathFactory._ensure_relative_to_basetemp",
      "target": "src/_pytest/tmpdir.py:TempPathFactory.getbasetemp",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/tmpdir.py:TempPathFactory.mktemp",
      "target": "src/_pytest/tmpdir.py:TempPathFactory._ensure_relative_to_basetemp",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/tmpdir.py:TempPathFactory.mktemp",
      "target": "src/_pytest/tmpdir.py:TempPathFactory.getbasetemp",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/tmpdir.py:TempPathFactory.mktemp",
      "target": "src/_pytest/pathlib.py:make_numbered_dir",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/tmpdir.py:TempPathFactory.getbasetemp",
      "target": "src/_pytest/pathlib.py:rm_rf",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/tmpdir.py:TempPathFactory.getbasetemp",
      "target": "src/_pytest/pathlib.py:make_numbered_dir_with_cleanup",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/tmpdir.py:TempPathFactory.getbasetemp",
      "target": "src/_pytest/tmpdir.py:get_user",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/tmpdir.py:pytest_configure",
      "target": "src/_pytest/tmpdir.py:TempPathFactory.from_config",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/tmpdir.py:_mk_tmp",
      "target": "src/_pytest/tmpdir.py:TempPathFactory.mktemp",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/tmpdir.py:tmp_path",
      "target": "src/_pytest/tmpdir.py:_mk_tmp",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/tmpdir.py:pytest_sessionfinish",
      "target": "src/_pytest/pathlib.py:cleanup_dead_symlinks",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/stash.py",
      "target": "src/_pytest/stash.py:StashKey",
      "type": "contains"
    },
    {
      "source": "src/_pytest/stash.py",
      "target": "src/_pytest/stash.py:Stash",
      "type": "contains"
    },
    {
      "source": "src/_pytest/stash.py:Stash",
      "target": "src/_pytest/stash.py:Stash.__setitem__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/stash.py:Stash",
      "target": "src/_pytest/stash.py:Stash.__getitem__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/stash.py:Stash",
      "target": "src/_pytest/stash.py:Stash.get",
      "type": "contains"
    },
    {
      "source": "src/_pytest/stash.py:Stash",
      "target": "src/_pytest/stash.py:Stash.setdefault",
      "type": "contains"
    },
    {
      "source": "src/_pytest/stash.py:Stash",
      "target": "src/_pytest/stash.py:Stash.__delitem__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/stash.py:Stash",
      "target": "src/_pytest/stash.py:Stash.__contains__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/stash.py:Stash",
      "target": "src/_pytest/stash.py:Stash.__len__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/debugging.py",
      "target": "src/_pytest/debugging.py:_validate_usepdb_cls",
      "type": "contains"
    },
    {
      "source": "src/_pytest/debugging.py",
      "target": "src/_pytest/debugging.py:pytest_addoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/debugging.py",
      "target": "src/_pytest/debugging.py:pytest_configure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/debugging.py",
      "target": "src/_pytest/debugging.py:pytestPDB",
      "type": "contains"
    },
    {
      "source": "src/_pytest/debugging.py",
      "target": "src/_pytest/debugging.py:PdbInvoke",
      "type": "contains"
    },
    {
      "source": "src/_pytest/debugging.py",
      "target": "src/_pytest/debugging.py:PdbTrace",
      "type": "contains"
    },
    {
      "source": "src/_pytest/debugging.py",
      "target": "src/_pytest/debugging.py:wrap_pytest_function_for_tracing",
      "type": "contains"
    },
    {
      "source": "src/_pytest/debugging.py",
      "target": "src/_pytest/debugging.py:maybe_wrap_pytest_function_for_tracing",
      "type": "contains"
    },
    {
      "source": "src/_pytest/debugging.py",
      "target": "src/_pytest/debugging.py:_enter_pdb",
      "type": "contains"
    },
    {
      "source": "src/_pytest/debugging.py",
      "target": "src/_pytest/debugging.py:_postmortem_traceback",
      "type": "contains"
    },
    {
      "source": "src/_pytest/debugging.py",
      "target": "src/_pytest/debugging.py:post_mortem",
      "type": "contains"
    },
    {
      "source": "src/_pytest/debugging.py:pytest_configure",
      "target": "src/_pytest/debugging.py:pytest_configure.fin",
      "type": "contains"
    },
    {
      "source": "src/_pytest/debugging.py:pytest_configure",
      "target": "src/_pytest/debugging.py:PdbTrace",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/debugging.py:pytest_configure",
      "target": "src/_pytest/debugging.py:PdbInvoke",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/debugging.py:pytestPDB",
      "target": "src/_pytest/debugging.py:pytestPDB._is_capturing",
      "type": "contains"
    },
    {
      "source": "src/_pytest/debugging.py:pytestPDB",
      "target": "src/_pytest/debugging.py:pytestPDB._import_pdb_cls",
      "type": "contains"
    },
    {
      "source": "src/_pytest/debugging.py:pytestPDB",
      "target": "src/_pytest/debugging.py:pytestPDB._get_pdb_wrapper_class",
      "type": "contains"
    },
    {
      "source": "src/_pytest/debugging.py:pytestPDB",
      "target": "src/_pytest/debugging.py:pytestPDB._init_pdb",
      "type": "contains"
    },
    {
      "source": "src/_pytest/debugging.py:pytestPDB",
      "target": "src/_pytest/debugging.py:pytestPDB.set_trace",
      "type": "contains"
    },
    {
      "source": "src/_pytest/debugging.py:pytestPDB._import_pdb_cls",
      "target": "src/_pytest/debugging.py:pytestPDB._get_pdb_wrapper_class",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/debugging.py:pytestPDB._get_pdb_wrapper_class",
      "target": "src/_pytest/debugging.py:pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper",
      "type": "contains"
    },
    {
      "source": "src/_pytest/debugging.py:pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper",
      "target": "src/_pytest/debugging.py:pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper.do_debug",
      "type": "contains"
    },
    {
      "source": "src/_pytest/debugging.py:pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper",
      "target": "src/_pytest/debugging.py:pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper.do_continue",
      "type": "contains"
    },
    {
      "source": "src/_pytest/debugging.py:pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper",
      "target": "src/_pytest/debugging.py:pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper.do_quit",
      "type": "contains"
    },
    {
      "source": "src/_pytest/debugging.py:pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper",
      "target": "src/_pytest/debugging.py:pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper.setup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/debugging.py:pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper",
      "target": "src/_pytest/debugging.py:pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper.get_stack",
      "type": "contains"
    },
    {
      "source": "src/_pytest/debugging.py:pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper.do_continue",
      "target": "src/_pytest/debugging.py:pytestPDB._is_capturing",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/debugging.py:pytestPDB._init_pdb",
      "target": "src/_pytest/debugging.py:pytestPDB._import_pdb_cls",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/debugging.py:pytestPDB._init_pdb",
      "target": "src/_pytest/debugging.py:pytestPDB._is_capturing",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/debugging.py:pytestPDB.set_trace",
      "target": "src/_pytest/debugging.py:pytestPDB._init_pdb",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/debugging.py:PdbInvoke",
      "target": "src/_pytest/debugging.py:PdbInvoke.pytest_exception_interact",
      "type": "contains"
    },
    {
      "source": "src/_pytest/debugging.py:PdbInvoke",
      "target": "src/_pytest/debugging.py:PdbInvoke.pytest_internalerror",
      "type": "contains"
    },
    {
      "source": "src/_pytest/debugging.py:PdbInvoke.pytest_exception_interact",
      "target": "src/_pytest/debugging.py:_enter_pdb",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/debugging.py:PdbInvoke.pytest_internalerror",
      "target": "src/_pytest/debugging.py:_postmortem_traceback",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/debugging.py:PdbInvoke.pytest_internalerror",
      "target": "src/_pytest/debugging.py:post_mortem",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/debugging.py:PdbTrace",
      "target": "src/_pytest/debugging.py:PdbTrace.pytest_pyfunc_call",
      "type": "contains"
    },
    {
      "source": "src/_pytest/debugging.py:PdbTrace.pytest_pyfunc_call",
      "target": "src/_pytest/debugging.py:wrap_pytest_function_for_tracing",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/debugging.py:wrap_pytest_function_for_tracing",
      "target": "src/_pytest/debugging.py:wrap_pytest_function_for_tracing.wrapper",
      "type": "contains"
    },
    {
      "source": "src/_pytest/debugging.py:wrap_pytest_function_for_tracing",
      "target": "src/_pytest/debugging.py:pytestPDB._init_pdb",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/debugging.py:maybe_wrap_pytest_function_for_tracing",
      "target": "src/_pytest/debugging.py:wrap_pytest_function_for_tracing",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/debugging.py:_enter_pdb",
      "target": "src/_pytest/debugging.py:post_mortem",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/debugging.py:_enter_pdb",
      "target": "src/_pytest/debugging.py:_postmortem_traceback",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/debugging.py:post_mortem",
      "target": "src/_pytest/debugging.py:pytestPDB._init_pdb",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py",
      "target": "src/_pytest/python_api.py:_non_numeric_type_error",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py",
      "target": "src/_pytest/python_api.py:_compare_approx",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py",
      "target": "src/_pytest/python_api.py:ApproxBase",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py",
      "target": "src/_pytest/python_api.py:_recursive_sequence_map",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py",
      "target": "src/_pytest/python_api.py:ApproxNumpy",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py",
      "target": "src/_pytest/python_api.py:ApproxMapping",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py",
      "target": "src/_pytest/python_api.py:ApproxSequenceLike",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py",
      "target": "src/_pytest/python_api.py:ApproxScalar",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py",
      "target": "src/_pytest/python_api.py:ApproxDecimal",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py",
      "target": "src/_pytest/python_api.py:approx",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py",
      "target": "src/_pytest/python_api.py:_is_numpy_array",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py",
      "target": "src/_pytest/python_api.py:_as_numpy_array",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py",
      "target": "src/_pytest/python_api.py:raises",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py",
      "target": "src/_pytest/python_api.py:raises",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py",
      "target": "src/_pytest/python_api.py:raises",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py",
      "target": "src/_pytest/python_api.py:RaisesContext",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxBase",
      "target": "src/_pytest/python_api.py:ApproxBase.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxBase",
      "target": "src/_pytest/python_api.py:ApproxBase._repr_compare",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxBase",
      "target": "src/_pytest/python_api.py:ApproxBase.__eq__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxBase",
      "target": "src/_pytest/python_api.py:ApproxBase.__bool__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxBase",
      "target": "src/_pytest/python_api.py:ApproxBase.__ne__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxBase",
      "target": "src/_pytest/python_api.py:ApproxBase._approx_scalar",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxBase",
      "target": "src/_pytest/python_api.py:ApproxBase._yield_comparisons",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxBase",
      "target": "src/_pytest/python_api.py:ApproxBase._check_type",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxBase",
      "target": "src/_pytest/python_api.py:ApproxBase._check_type",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxBase",
      "target": "src/_pytest/python_api.py:ApproxMapping._check_type",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxBase",
      "target": "src/_pytest/python_api.py:ApproxSequenceLike._check_type",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxBase.__eq__",
      "target": "src/_pytest/python_api.py:ApproxSequenceLike._yield_comparisons",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxBase.__eq__",
      "target": "src/_pytest/python_api.py:ApproxNumpy._yield_comparisons",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxBase.__eq__",
      "target": "src/_pytest/python_api.py:ApproxBase._yield_comparisons",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxBase.__eq__",
      "target": "src/_pytest/python_api.py:ApproxMapping._yield_comparisons",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxBase.__eq__",
      "target": "src/_pytest/python_api.py:ApproxBase._approx_scalar",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxBase._approx_scalar",
      "target": "src/_pytest/python_api.py:ApproxScalar",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxBase._approx_scalar",
      "target": "src/_pytest/python_api.py:ApproxDecimal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxNumpy",
      "target": "src/_pytest/python_api.py:ApproxNumpy.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxNumpy",
      "target": "src/_pytest/python_api.py:ApproxNumpy._repr_compare",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxNumpy",
      "target": "src/_pytest/python_api.py:ApproxNumpy.__eq__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxNumpy",
      "target": "src/_pytest/python_api.py:ApproxNumpy._yield_comparisons",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxNumpy",
      "target": "src/_pytest/python_api.py:ApproxBase",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxNumpy.__repr__",
      "target": "src/_pytest/python_api.py:_recursive_sequence_map",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxNumpy._repr_compare",
      "target": "src/_pytest/python_api.py:ApproxNumpy._repr_compare.get_value_from_nested_list",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxNumpy._repr_compare",
      "target": "src/_pytest/python_api.py:ApproxNumpy._repr_compare.get_value_from_nested_list",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxNumpy._repr_compare",
      "target": "src/_pytest/python_api.py:_recursive_sequence_map",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxNumpy._repr_compare",
      "target": "src/_pytest/python_api.py:_compare_approx",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxNumpy.__eq__",
      "target": "src/_pytest/python_api.py:ApproxMapping.__eq__",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxNumpy.__eq__",
      "target": "src/_pytest/python_api.py:ApproxScalar.__eq__",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxNumpy.__eq__",
      "target": "src/_pytest/python_api.py:ApproxBase.__eq__",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxNumpy.__eq__",
      "target": "src/_pytest/python_api.py:ApproxSequenceLike.__eq__",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxMapping",
      "target": "src/_pytest/python_api.py:ApproxMapping.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxMapping",
      "target": "src/_pytest/python_api.py:ApproxMapping._repr_compare",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxMapping",
      "target": "src/_pytest/python_api.py:ApproxMapping.__eq__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxMapping",
      "target": "src/_pytest/python_api.py:ApproxMapping._yield_comparisons",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxMapping",
      "target": "src/_pytest/python_api.py:ApproxMapping._check_type",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxMapping",
      "target": "src/_pytest/python_api.py:ApproxBase",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxMapping.__repr__",
      "target": "src/_pytest/python_api.py:ApproxBase._approx_scalar",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxMapping._repr_compare",
      "target": "src/_pytest/python_api.py:_compare_approx",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxMapping._repr_compare",
      "target": "src/_pytest/python_api.py:ApproxBase._approx_scalar",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxMapping.__eq__",
      "target": "src/_pytest/python_api.py:ApproxScalar.__eq__",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxMapping.__eq__",
      "target": "src/_pytest/python_api.py:ApproxBase.__eq__",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxMapping.__eq__",
      "target": "src/_pytest/python_api.py:ApproxSequenceLike.__eq__",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxMapping.__eq__",
      "target": "src/_pytest/python_api.py:ApproxNumpy.__eq__",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxSequenceLike",
      "target": "src/_pytest/python_api.py:ApproxSequenceLike.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxSequenceLike",
      "target": "src/_pytest/python_api.py:ApproxSequenceLike._repr_compare",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxSequenceLike",
      "target": "src/_pytest/python_api.py:ApproxSequenceLike.__eq__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxSequenceLike",
      "target": "src/_pytest/python_api.py:ApproxSequenceLike._yield_comparisons",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxSequenceLike",
      "target": "src/_pytest/python_api.py:ApproxSequenceLike._check_type",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxSequenceLike",
      "target": "src/_pytest/python_api.py:ApproxBase",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxSequenceLike.__repr__",
      "target": "src/_pytest/python_api.py:ApproxBase._approx_scalar",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxSequenceLike._repr_compare",
      "target": "src/_pytest/python_api.py:_recursive_sequence_map",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxSequenceLike._repr_compare",
      "target": "src/_pytest/python_api.py:_compare_approx",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxSequenceLike.__eq__",
      "target": "src/_pytest/python_api.py:ApproxMapping.__eq__",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxSequenceLike.__eq__",
      "target": "src/_pytest/python_api.py:ApproxScalar.__eq__",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxSequenceLike.__eq__",
      "target": "src/_pytest/python_api.py:ApproxBase.__eq__",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxSequenceLike.__eq__",
      "target": "src/_pytest/python_api.py:ApproxNumpy.__eq__",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxScalar",
      "target": "src/_pytest/python_api.py:ApproxScalar.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxScalar",
      "target": "src/_pytest/python_api.py:ApproxScalar.__eq__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxScalar",
      "target": "src/_pytest/python_api.py:ApproxScalar.tolerance",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxScalar",
      "target": "src/_pytest/python_api.py:ApproxBase",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxScalar.__eq__",
      "target": "src/_pytest/python_api.py:ApproxMapping.__eq__",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxScalar.__eq__",
      "target": "src/_pytest/python_api.py:ApproxBase.__eq__",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxScalar.__eq__",
      "target": "src/_pytest/python_api.py:ApproxSequenceLike.__eq__",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxScalar.__eq__",
      "target": "src/_pytest/python_api.py:ApproxNumpy.__eq__",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxScalar.__eq__",
      "target": "src/_pytest/python_api.py:_as_numpy_array",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxScalar.tolerance",
      "target": "src/_pytest/python_api.py:ApproxScalar.tolerance.set_default",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxScalar.tolerance",
      "target": "src/_pytest/python_api.py:ApproxScalar.tolerance.set_default",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:ApproxDecimal",
      "target": "src/_pytest/python_api.py:ApproxScalar",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/python_api.py:approx",
      "target": "src/_pytest/python_api.py:_as_numpy_array",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:approx",
      "target": "src/_pytest/python_api.py:_is_numpy_array",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:_is_numpy_array",
      "target": "src/_pytest/python_api.py:_as_numpy_array",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:raises",
      "target": "src/_pytest/python_api.py:RaisesContext",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python_api.py:RaisesContext",
      "target": "src/_pytest/python_api.py:RaisesContext.__enter__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python_api.py:RaisesContext",
      "target": "src/_pytest/python_api.py:RaisesContext.__exit__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_argcomplete.py",
      "target": "src/_pytest/_argcomplete.py:FastFilesCompleter",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_argcomplete.py",
      "target": "src/_pytest/_argcomplete.py:try_argcomplete",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_argcomplete.py",
      "target": "src/_pytest/_argcomplete.py:try_argcomplete",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_argcomplete.py:FastFilesCompleter",
      "target": "src/_pytest/_argcomplete.py:FastFilesCompleter.__call__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unraisableexception.py",
      "target": "src/_pytest/unraisableexception.py:catch_unraisable_exception",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unraisableexception.py",
      "target": "src/_pytest/unraisableexception.py:unraisable_exception_runtest_hook",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unraisableexception.py",
      "target": "src/_pytest/unraisableexception.py:pytest_runtest_setup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unraisableexception.py",
      "target": "src/_pytest/unraisableexception.py:pytest_runtest_call",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unraisableexception.py",
      "target": "src/_pytest/unraisableexception.py:pytest_runtest_teardown",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unraisableexception.py:catch_unraisable_exception",
      "target": "src/_pytest/unraisableexception.py:catch_unraisable_exception._hook",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unraisableexception.py:catch_unraisable_exception",
      "target": "src/_pytest/unraisableexception.py:catch_unraisable_exception.__enter__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unraisableexception.py:catch_unraisable_exception",
      "target": "src/_pytest/unraisableexception.py:catch_unraisable_exception.__exit__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/unraisableexception.py:unraisable_exception_runtest_hook",
      "target": "src/_pytest/unraisableexception.py:catch_unraisable_exception",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/unraisableexception.py:pytest_runtest_setup",
      "target": "src/_pytest/unraisableexception.py:unraisable_exception_runtest_hook",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/unraisableexception.py:pytest_runtest_call",
      "target": "src/_pytest/unraisableexception.py:unraisable_exception_runtest_hook",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/unraisableexception.py:pytest_runtest_teardown",
      "target": "src/_pytest/unraisableexception.py:unraisable_exception_runtest_hook",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py",
      "target": "src/_pytest/capture.py:pytest_addoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py",
      "target": "src/_pytest/capture.py:_colorama_workaround",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py",
      "target": "src/_pytest/capture.py:_windowsconsoleio_workaround",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py",
      "target": "src/_pytest/capture.py:pytest_load_initial_conftests",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py",
      "target": "src/_pytest/capture.py:EncodedFile",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py",
      "target": "src/_pytest/capture.py:CaptureIO",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py",
      "target": "src/_pytest/capture.py:TeeCaptureIO",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py",
      "target": "src/_pytest/capture.py:DontReadFromInput",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py",
      "target": "src/_pytest/capture.py:CaptureBase",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py",
      "target": "src/_pytest/capture.py:NoCapture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py",
      "target": "src/_pytest/capture.py:SysCaptureBase",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py",
      "target": "src/_pytest/capture.py:SysCaptureBinary",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py",
      "target": "src/_pytest/capture.py:SysCapture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py",
      "target": "src/_pytest/capture.py:FDCaptureBase",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py",
      "target": "src/_pytest/capture.py:FDCaptureBinary",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py",
      "target": "src/_pytest/capture.py:FDCapture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py",
      "target": "src/_pytest/capture.py:CaptureResult",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py",
      "target": "src/_pytest/capture.py:CaptureResult",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py",
      "target": "src/_pytest/capture.py:MultiCapture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py",
      "target": "src/_pytest/capture.py:_get_multicapture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py",
      "target": "src/_pytest/capture.py:CaptureManager",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py",
      "target": "src/_pytest/capture.py:CaptureFixture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py",
      "target": "src/_pytest/capture.py:capsys",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py",
      "target": "src/_pytest/capture.py:capsysbinary",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py",
      "target": "src/_pytest/capture.py:capfd",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py",
      "target": "src/_pytest/capture.py:capfdbinary",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:_windowsconsoleio_workaround",
      "target": "src/_pytest/capture.py:_windowsconsoleio_workaround._reopen_stdio",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:_windowsconsoleio_workaround",
      "target": "src/_pytest/capture.py:_windowsconsoleio_workaround._reopen_stdio",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:_windowsconsoleio_workaround._reopen_stdio",
      "target": "src/_pytest/capture.py:DontReadFromInput.fileno",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:pytest_load_initial_conftests",
      "target": "src/_pytest/capture.py:CaptureManager",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:pytest_load_initial_conftests",
      "target": "src/_pytest/capture.py:_windowsconsoleio_workaround",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:pytest_load_initial_conftests",
      "target": "src/_pytest/capture.py:_colorama_workaround",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:pytest_load_initial_conftests",
      "target": "src/_pytest/capture.py:CaptureManager.read_global_capture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:pytest_load_initial_conftests",
      "target": "src/_pytest/capture.py:CaptureManager.start_global_capturing",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:pytest_load_initial_conftests",
      "target": "src/_pytest/capture.py:CaptureManager.suspend_global_capture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:pytest_load_initial_conftests",
      "target": "src/_pytest/capture.py:TeeCaptureIO.write",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:pytest_load_initial_conftests",
      "target": "src/_pytest/capture.py:DontReadFromInput.write",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:EncodedFile",
      "target": "src/_pytest/capture.py:EncodedFile.name",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:EncodedFile",
      "target": "src/_pytest/capture.py:EncodedFile.mode",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:EncodedFile.name",
      "target": "src/_pytest/capture.py:SysCaptureBase.repr",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureIO",
      "target": "src/_pytest/capture.py:CaptureIO.getvalue",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:TeeCaptureIO",
      "target": "src/_pytest/capture.py:TeeCaptureIO.write",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:TeeCaptureIO",
      "target": "src/_pytest/capture.py:CaptureIO",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/capture.py:TeeCaptureIO.write",
      "target": "src/_pytest/capture.py:DontReadFromInput.write",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:DontReadFromInput",
      "target": "src/_pytest/capture.py:DontReadFromInput.encoding",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:DontReadFromInput",
      "target": "src/_pytest/capture.py:DontReadFromInput.read",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:DontReadFromInput",
      "target": "src/_pytest/capture.py:DontReadFromInput.__next__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:DontReadFromInput",
      "target": "src/_pytest/capture.py:DontReadFromInput.readlines",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:DontReadFromInput",
      "target": "src/_pytest/capture.py:DontReadFromInput.__iter__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:DontReadFromInput",
      "target": "src/_pytest/capture.py:DontReadFromInput.fileno",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:DontReadFromInput",
      "target": "src/_pytest/capture.py:DontReadFromInput.flush",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:DontReadFromInput",
      "target": "src/_pytest/capture.py:DontReadFromInput.isatty",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:DontReadFromInput",
      "target": "src/_pytest/capture.py:DontReadFromInput.close",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:DontReadFromInput",
      "target": "src/_pytest/capture.py:DontReadFromInput.readable",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:DontReadFromInput",
      "target": "src/_pytest/capture.py:DontReadFromInput.seek",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:DontReadFromInput",
      "target": "src/_pytest/capture.py:DontReadFromInput.seekable",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:DontReadFromInput",
      "target": "src/_pytest/capture.py:DontReadFromInput.tell",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:DontReadFromInput",
      "target": "src/_pytest/capture.py:DontReadFromInput.truncate",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:DontReadFromInput",
      "target": "src/_pytest/capture.py:DontReadFromInput.write",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:DontReadFromInput",
      "target": "src/_pytest/capture.py:DontReadFromInput.writelines",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:DontReadFromInput",
      "target": "src/_pytest/capture.py:DontReadFromInput.writable",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:DontReadFromInput",
      "target": "src/_pytest/capture.py:DontReadFromInput.__enter__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:DontReadFromInput",
      "target": "src/_pytest/capture.py:DontReadFromInput.__exit__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:DontReadFromInput",
      "target": "src/_pytest/capture.py:DontReadFromInput.buffer",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureBase",
      "target": "src/_pytest/capture.py:CaptureBase.start",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureBase",
      "target": "src/_pytest/capture.py:CaptureBase.done",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureBase",
      "target": "src/_pytest/capture.py:CaptureBase.suspend",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureBase",
      "target": "src/_pytest/capture.py:CaptureBase.resume",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureBase",
      "target": "src/_pytest/capture.py:CaptureBase.writeorg",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureBase",
      "target": "src/_pytest/capture.py:CaptureBase.snap",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:NoCapture",
      "target": "src/_pytest/capture.py:NoCapture.start",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:NoCapture",
      "target": "src/_pytest/capture.py:NoCapture.done",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:NoCapture",
      "target": "src/_pytest/capture.py:NoCapture.suspend",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:NoCapture",
      "target": "src/_pytest/capture.py:NoCapture.resume",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:NoCapture",
      "target": "src/_pytest/capture.py:NoCapture.snap",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:NoCapture",
      "target": "src/_pytest/capture.py:NoCapture.writeorg",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBase",
      "target": "src/_pytest/capture.py:SysCaptureBase.repr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBase",
      "target": "src/_pytest/capture.py:SysCaptureBase.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBase",
      "target": "src/_pytest/capture.py:SysCaptureBase._assert_state",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBase",
      "target": "src/_pytest/capture.py:SysCaptureBase.start",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBase",
      "target": "src/_pytest/capture.py:SysCaptureBase.done",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBase",
      "target": "src/_pytest/capture.py:SysCaptureBase.suspend",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBase",
      "target": "src/_pytest/capture.py:SysCaptureBase.resume",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBase",
      "target": "src/_pytest/capture.py:CaptureIO",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBase",
      "target": "src/_pytest/capture.py:TeeCaptureIO",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBase",
      "target": "src/_pytest/capture.py:DontReadFromInput",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBase.__repr__",
      "target": "src/_pytest/capture.py:SysCaptureBase.repr",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBase.start",
      "target": "src/_pytest/capture.py:FDCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBase.start",
      "target": "src/_pytest/capture.py:SysCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBase.done",
      "target": "src/_pytest/capture.py:CaptureFixture.close",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBase.done",
      "target": "src/_pytest/capture.py:DontReadFromInput.close",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBase.done",
      "target": "src/_pytest/capture.py:FDCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBase.done",
      "target": "src/_pytest/capture.py:SysCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBase.suspend",
      "target": "src/_pytest/capture.py:FDCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBase.suspend",
      "target": "src/_pytest/capture.py:SysCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBase.resume",
      "target": "src/_pytest/capture.py:FDCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBase.resume",
      "target": "src/_pytest/capture.py:SysCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBinary",
      "target": "src/_pytest/capture.py:SysCaptureBinary.snap",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBinary",
      "target": "src/_pytest/capture.py:SysCaptureBinary.writeorg",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBinary.snap",
      "target": "src/_pytest/capture.py:DontReadFromInput.read",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBinary.snap",
      "target": "src/_pytest/capture.py:DontReadFromInput.seek",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBinary.snap",
      "target": "src/_pytest/capture.py:FDCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBinary.snap",
      "target": "src/_pytest/capture.py:SysCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBinary.snap",
      "target": "src/_pytest/capture.py:DontReadFromInput.truncate",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBinary.writeorg",
      "target": "src/_pytest/capture.py:DontReadFromInput.flush",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBinary.writeorg",
      "target": "src/_pytest/capture.py:FDCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBinary.writeorg",
      "target": "src/_pytest/capture.py:SysCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBinary.writeorg",
      "target": "src/_pytest/capture.py:TeeCaptureIO.write",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCaptureBinary.writeorg",
      "target": "src/_pytest/capture.py:DontReadFromInput.write",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCapture",
      "target": "src/_pytest/capture.py:SysCapture.snap",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:SysCapture",
      "target": "src/_pytest/capture.py:SysCapture.writeorg",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:SysCapture.snap",
      "target": "src/_pytest/capture.py:DontReadFromInput.seek",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCapture.snap",
      "target": "src/_pytest/capture.py:DontReadFromInput.truncate",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCapture.snap",
      "target": "src/_pytest/capture.py:CaptureIO.getvalue",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCapture.snap",
      "target": "src/_pytest/capture.py:FDCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCapture.snap",
      "target": "src/_pytest/capture.py:SysCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCapture.writeorg",
      "target": "src/_pytest/capture.py:DontReadFromInput.flush",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCapture.writeorg",
      "target": "src/_pytest/capture.py:FDCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCapture.writeorg",
      "target": "src/_pytest/capture.py:SysCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCapture.writeorg",
      "target": "src/_pytest/capture.py:TeeCaptureIO.write",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:SysCapture.writeorg",
      "target": "src/_pytest/capture.py:DontReadFromInput.write",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase",
      "target": "src/_pytest/capture.py:FDCaptureBase.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase",
      "target": "src/_pytest/capture.py:FDCaptureBase._assert_state",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase",
      "target": "src/_pytest/capture.py:FDCaptureBase.start",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase",
      "target": "src/_pytest/capture.py:FDCaptureBase.done",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase",
      "target": "src/_pytest/capture.py:FDCaptureBase.suspend",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase",
      "target": "src/_pytest/capture.py:FDCaptureBase.resume",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase",
      "target": "src/_pytest/capture.py:EncodedFile",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase",
      "target": "src/_pytest/capture.py:NoCapture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase",
      "target": "src/_pytest/capture.py:SysCapture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase.start",
      "target": "src/_pytest/capture.py:DontReadFromInput.fileno",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase.start",
      "target": "src/_pytest/capture.py:NoCapture.start",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase.start",
      "target": "src/_pytest/capture.py:CaptureBase.start",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase.start",
      "target": "src/_pytest/capture.py:SysCaptureBase.start",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase.start",
      "target": "src/_pytest/capture.py:FDCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase.start",
      "target": "src/_pytest/capture.py:SysCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase.done",
      "target": "src/_pytest/capture.py:CaptureFixture.close",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase.done",
      "target": "src/_pytest/capture.py:DontReadFromInput.close",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase.done",
      "target": "src/_pytest/capture.py:CaptureBase.done",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase.done",
      "target": "src/_pytest/capture.py:SysCaptureBase.done",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase.done",
      "target": "src/_pytest/capture.py:NoCapture.done",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase.done",
      "target": "src/_pytest/capture.py:FDCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase.done",
      "target": "src/_pytest/capture.py:SysCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase.suspend",
      "target": "src/_pytest/capture.py:CaptureBase.suspend",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase.suspend",
      "target": "src/_pytest/capture.py:CaptureManager.suspend",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase.suspend",
      "target": "src/_pytest/capture.py:SysCaptureBase.suspend",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase.suspend",
      "target": "src/_pytest/capture.py:NoCapture.suspend",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase.suspend",
      "target": "src/_pytest/capture.py:FDCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase.suspend",
      "target": "src/_pytest/capture.py:SysCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase.resume",
      "target": "src/_pytest/capture.py:DontReadFromInput.fileno",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase.resume",
      "target": "src/_pytest/capture.py:SysCaptureBase.resume",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase.resume",
      "target": "src/_pytest/capture.py:NoCapture.resume",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase.resume",
      "target": "src/_pytest/capture.py:CaptureManager.resume",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase.resume",
      "target": "src/_pytest/capture.py:CaptureBase.resume",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase.resume",
      "target": "src/_pytest/capture.py:FDCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBase.resume",
      "target": "src/_pytest/capture.py:SysCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBinary",
      "target": "src/_pytest/capture.py:FDCaptureBinary.snap",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBinary",
      "target": "src/_pytest/capture.py:FDCaptureBinary.writeorg",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBinary.snap",
      "target": "src/_pytest/capture.py:DontReadFromInput.read",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBinary.snap",
      "target": "src/_pytest/capture.py:DontReadFromInput.seek",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBinary.snap",
      "target": "src/_pytest/capture.py:FDCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBinary.snap",
      "target": "src/_pytest/capture.py:SysCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBinary.snap",
      "target": "src/_pytest/capture.py:DontReadFromInput.truncate",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBinary.writeorg",
      "target": "src/_pytest/capture.py:FDCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBinary.writeorg",
      "target": "src/_pytest/capture.py:SysCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBinary.writeorg",
      "target": "src/_pytest/capture.py:TeeCaptureIO.write",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCaptureBinary.writeorg",
      "target": "src/_pytest/capture.py:DontReadFromInput.write",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCapture",
      "target": "src/_pytest/capture.py:FDCapture.snap",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:FDCapture",
      "target": "src/_pytest/capture.py:FDCapture.writeorg",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:FDCapture.snap",
      "target": "src/_pytest/capture.py:DontReadFromInput.read",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCapture.snap",
      "target": "src/_pytest/capture.py:DontReadFromInput.seek",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCapture.snap",
      "target": "src/_pytest/capture.py:FDCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCapture.snap",
      "target": "src/_pytest/capture.py:SysCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCapture.snap",
      "target": "src/_pytest/capture.py:DontReadFromInput.truncate",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCapture.writeorg",
      "target": "src/_pytest/capture.py:FDCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCapture.writeorg",
      "target": "src/_pytest/capture.py:SysCaptureBase._assert_state",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCapture.writeorg",
      "target": "src/_pytest/capture.py:TeeCaptureIO.write",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:FDCapture.writeorg",
      "target": "src/_pytest/capture.py:DontReadFromInput.write",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture",
      "target": "src/_pytest/capture.py:MultiCapture.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture",
      "target": "src/_pytest/capture.py:MultiCapture.start_capturing",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture",
      "target": "src/_pytest/capture.py:MultiCapture.pop_outerr_to_orig",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture",
      "target": "src/_pytest/capture.py:MultiCapture.suspend_capturing",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture",
      "target": "src/_pytest/capture.py:MultiCapture.resume_capturing",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture",
      "target": "src/_pytest/capture.py:MultiCapture.stop_capturing",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture",
      "target": "src/_pytest/capture.py:MultiCapture.is_started",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture",
      "target": "src/_pytest/capture.py:MultiCapture.readouterr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.start_capturing",
      "target": "src/_pytest/capture.py:FDCaptureBase.start",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.start_capturing",
      "target": "src/_pytest/capture.py:NoCapture.start",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.start_capturing",
      "target": "src/_pytest/capture.py:CaptureBase.start",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.start_capturing",
      "target": "src/_pytest/capture.py:SysCaptureBase.start",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.pop_outerr_to_orig",
      "target": "src/_pytest/capture.py:SysCapture.writeorg",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.pop_outerr_to_orig",
      "target": "src/_pytest/capture.py:SysCaptureBinary.writeorg",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.pop_outerr_to_orig",
      "target": "src/_pytest/capture.py:FDCaptureBinary.writeorg",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.pop_outerr_to_orig",
      "target": "src/_pytest/capture.py:CaptureBase.writeorg",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.pop_outerr_to_orig",
      "target": "src/_pytest/capture.py:FDCapture.writeorg",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.pop_outerr_to_orig",
      "target": "src/_pytest/capture.py:NoCapture.writeorg",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.pop_outerr_to_orig",
      "target": "src/_pytest/capture.py:MultiCapture.readouterr",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.pop_outerr_to_orig",
      "target": "src/_pytest/capture.py:CaptureFixture.readouterr",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.suspend_capturing",
      "target": "src/_pytest/capture.py:CaptureBase.suspend",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.suspend_capturing",
      "target": "src/_pytest/capture.py:CaptureManager.suspend",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.suspend_capturing",
      "target": "src/_pytest/capture.py:FDCaptureBase.suspend",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.suspend_capturing",
      "target": "src/_pytest/capture.py:SysCaptureBase.suspend",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.suspend_capturing",
      "target": "src/_pytest/capture.py:NoCapture.suspend",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.resume_capturing",
      "target": "src/_pytest/capture.py:SysCaptureBase.resume",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.resume_capturing",
      "target": "src/_pytest/capture.py:NoCapture.resume",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.resume_capturing",
      "target": "src/_pytest/capture.py:CaptureManager.resume",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.resume_capturing",
      "target": "src/_pytest/capture.py:FDCaptureBase.resume",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.resume_capturing",
      "target": "src/_pytest/capture.py:CaptureBase.resume",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.stop_capturing",
      "target": "src/_pytest/capture.py:CaptureBase.done",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.stop_capturing",
      "target": "src/_pytest/capture.py:SysCaptureBase.done",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.stop_capturing",
      "target": "src/_pytest/capture.py:NoCapture.done",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.stop_capturing",
      "target": "src/_pytest/capture.py:FDCaptureBase.done",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.readouterr",
      "target": "src/_pytest/capture.py:CaptureBase.snap",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.readouterr",
      "target": "src/_pytest/capture.py:SysCaptureBinary.snap",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.readouterr",
      "target": "src/_pytest/capture.py:FDCapture.snap",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.readouterr",
      "target": "src/_pytest/capture.py:FDCaptureBinary.snap",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.readouterr",
      "target": "src/_pytest/capture.py:NoCapture.snap",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.readouterr",
      "target": "src/_pytest/capture.py:SysCapture.snap",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:MultiCapture.readouterr",
      "target": "src/_pytest/capture.py:CaptureResult",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:_get_multicapture",
      "target": "src/_pytest/capture.py:FDCapture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:_get_multicapture",
      "target": "src/_pytest/capture.py:SysCapture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:_get_multicapture",
      "target": "src/_pytest/capture.py:MultiCapture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager",
      "target": "src/_pytest/capture.py:CaptureManager.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager",
      "target": "src/_pytest/capture.py:CaptureManager.is_capturing",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager",
      "target": "src/_pytest/capture.py:CaptureManager.is_globally_capturing",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager",
      "target": "src/_pytest/capture.py:CaptureManager.start_global_capturing",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager",
      "target": "src/_pytest/capture.py:CaptureManager.stop_global_capturing",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager",
      "target": "src/_pytest/capture.py:CaptureManager.resume_global_capture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager",
      "target": "src/_pytest/capture.py:CaptureManager.suspend_global_capture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager",
      "target": "src/_pytest/capture.py:CaptureManager.suspend",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager",
      "target": "src/_pytest/capture.py:CaptureManager.resume",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager",
      "target": "src/_pytest/capture.py:CaptureManager.read_global_capture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager",
      "target": "src/_pytest/capture.py:CaptureManager.set_fixture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager",
      "target": "src/_pytest/capture.py:CaptureManager.unset_fixture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager",
      "target": "src/_pytest/capture.py:CaptureManager.activate_fixture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager",
      "target": "src/_pytest/capture.py:CaptureManager.deactivate_fixture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager",
      "target": "src/_pytest/capture.py:CaptureManager.suspend_fixture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager",
      "target": "src/_pytest/capture.py:CaptureManager.resume_fixture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager",
      "target": "src/_pytest/capture.py:CaptureManager.global_and_fixture_disabled",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager",
      "target": "src/_pytest/capture.py:CaptureManager.item_capture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager",
      "target": "src/_pytest/capture.py:CaptureManager.pytest_make_collect_report",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager",
      "target": "src/_pytest/capture.py:CaptureManager.pytest_runtest_setup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager",
      "target": "src/_pytest/capture.py:CaptureManager.pytest_runtest_call",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager",
      "target": "src/_pytest/capture.py:CaptureManager.pytest_runtest_teardown",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager",
      "target": "src/_pytest/capture.py:CaptureManager.pytest_keyboard_interrupt",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager",
      "target": "src/_pytest/capture.py:CaptureManager.pytest_internalerror",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.is_capturing",
      "target": "src/_pytest/capture.py:CaptureManager.is_globally_capturing",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.start_global_capturing",
      "target": "src/_pytest/capture.py:MultiCapture.start_capturing",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.start_global_capturing",
      "target": "src/_pytest/capture.py:_get_multicapture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.stop_global_capturing",
      "target": "src/_pytest/capture.py:MultiCapture.pop_outerr_to_orig",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.stop_global_capturing",
      "target": "src/_pytest/capture.py:MultiCapture.stop_capturing",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.resume_global_capture",
      "target": "src/_pytest/capture.py:MultiCapture.resume_capturing",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.suspend_global_capture",
      "target": "src/_pytest/capture.py:MultiCapture.suspend_capturing",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.suspend",
      "target": "src/_pytest/capture.py:CaptureManager.suspend_fixture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.suspend",
      "target": "src/_pytest/capture.py:CaptureManager.suspend_global_capture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.resume",
      "target": "src/_pytest/capture.py:CaptureManager.resume_fixture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.resume",
      "target": "src/_pytest/capture.py:CaptureManager.resume_global_capture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.read_global_capture",
      "target": "src/_pytest/capture.py:MultiCapture.readouterr",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.read_global_capture",
      "target": "src/_pytest/capture.py:CaptureFixture.readouterr",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.activate_fixture",
      "target": "src/_pytest/capture.py:CaptureFixture._start",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.deactivate_fixture",
      "target": "src/_pytest/capture.py:CaptureFixture.close",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.deactivate_fixture",
      "target": "src/_pytest/capture.py:DontReadFromInput.close",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.suspend_fixture",
      "target": "src/_pytest/capture.py:CaptureFixture._suspend",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.resume_fixture",
      "target": "src/_pytest/capture.py:CaptureFixture._resume",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.global_and_fixture_disabled",
      "target": "src/_pytest/capture.py:CaptureFixture._is_started",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.global_and_fixture_disabled",
      "target": "src/_pytest/capture.py:CaptureManager.resume_global_capture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.global_and_fixture_disabled",
      "target": "src/_pytest/capture.py:CaptureManager.suspend_fixture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.global_and_fixture_disabled",
      "target": "src/_pytest/capture.py:MultiCapture.is_started",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.global_and_fixture_disabled",
      "target": "src/_pytest/capture.py:CaptureManager.resume_fixture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.global_and_fixture_disabled",
      "target": "src/_pytest/capture.py:CaptureManager.suspend_global_capture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.item_capture",
      "target": "src/_pytest/capture.py:CaptureManager.deactivate_fixture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.item_capture",
      "target": "src/_pytest/capture.py:CaptureManager.resume_global_capture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.item_capture",
      "target": "src/_pytest/capture.py:CaptureManager.read_global_capture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.item_capture",
      "target": "src/_pytest/capture.py:CaptureManager.activate_fixture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.item_capture",
      "target": "src/_pytest/capture.py:CaptureManager.suspend_global_capture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.pytest_make_collect_report",
      "target": "src/_pytest/capture.py:CaptureManager.resume_global_capture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.pytest_make_collect_report",
      "target": "src/_pytest/capture.py:CaptureManager.read_global_capture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.pytest_make_collect_report",
      "target": "src/_pytest/capture.py:CaptureManager.suspend_global_capture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.pytest_runtest_setup",
      "target": "src/_pytest/capture.py:CaptureManager.item_capture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.pytest_runtest_call",
      "target": "src/_pytest/capture.py:CaptureManager.item_capture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.pytest_runtest_teardown",
      "target": "src/_pytest/capture.py:CaptureManager.item_capture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.pytest_keyboard_interrupt",
      "target": "src/_pytest/capture.py:CaptureManager.stop_global_capturing",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureManager.pytest_internalerror",
      "target": "src/_pytest/capture.py:CaptureManager.stop_global_capturing",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureFixture",
      "target": "src/_pytest/capture.py:CaptureFixture._start",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureFixture",
      "target": "src/_pytest/capture.py:CaptureFixture.close",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureFixture",
      "target": "src/_pytest/capture.py:CaptureFixture.readouterr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureFixture",
      "target": "src/_pytest/capture.py:CaptureFixture._suspend",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureFixture",
      "target": "src/_pytest/capture.py:CaptureFixture._resume",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureFixture",
      "target": "src/_pytest/capture.py:CaptureFixture._is_started",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureFixture",
      "target": "src/_pytest/capture.py:CaptureFixture.disabled",
      "type": "contains"
    },
    {
      "source": "src/_pytest/capture.py:CaptureFixture._start",
      "target": "src/_pytest/capture.py:MultiCapture.start_capturing",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureFixture._start",
      "target": "src/_pytest/capture.py:MultiCapture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureFixture.close",
      "target": "src/_pytest/capture.py:MultiCapture.pop_outerr_to_orig",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureFixture.close",
      "target": "src/_pytest/capture.py:MultiCapture.stop_capturing",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureFixture.readouterr",
      "target": "src/_pytest/capture.py:MultiCapture.readouterr",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureFixture.readouterr",
      "target": "src/_pytest/capture.py:CaptureResult",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureFixture._suspend",
      "target": "src/_pytest/capture.py:MultiCapture.suspend_capturing",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureFixture._resume",
      "target": "src/_pytest/capture.py:MultiCapture.resume_capturing",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureFixture._is_started",
      "target": "src/_pytest/capture.py:MultiCapture.is_started",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:CaptureFixture.disabled",
      "target": "src/_pytest/capture.py:CaptureManager.global_and_fixture_disabled",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:capsys",
      "target": "src/_pytest/capture.py:CaptureManager.set_fixture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:capsys",
      "target": "src/_pytest/capture.py:CaptureFixture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:capsys",
      "target": "src/_pytest/capture.py:CaptureManager.unset_fixture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:capsys",
      "target": "src/_pytest/capture.py:CaptureFixture.close",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:capsys",
      "target": "src/_pytest/capture.py:DontReadFromInput.close",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:capsys",
      "target": "src/_pytest/capture.py:CaptureFixture._start",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:capsysbinary",
      "target": "src/_pytest/capture.py:CaptureManager.set_fixture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:capsysbinary",
      "target": "src/_pytest/capture.py:CaptureFixture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:capsysbinary",
      "target": "src/_pytest/capture.py:CaptureManager.unset_fixture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:capsysbinary",
      "target": "src/_pytest/capture.py:CaptureFixture.close",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:capsysbinary",
      "target": "src/_pytest/capture.py:DontReadFromInput.close",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:capsysbinary",
      "target": "src/_pytest/capture.py:CaptureFixture._start",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:capfd",
      "target": "src/_pytest/capture.py:CaptureManager.set_fixture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:capfd",
      "target": "src/_pytest/capture.py:CaptureFixture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:capfd",
      "target": "src/_pytest/capture.py:CaptureManager.unset_fixture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:capfd",
      "target": "src/_pytest/capture.py:CaptureFixture.close",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:capfd",
      "target": "src/_pytest/capture.py:DontReadFromInput.close",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:capfd",
      "target": "src/_pytest/capture.py:CaptureFixture._start",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:capfdbinary",
      "target": "src/_pytest/capture.py:CaptureManager.set_fixture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:capfdbinary",
      "target": "src/_pytest/capture.py:CaptureFixture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:capfdbinary",
      "target": "src/_pytest/capture.py:CaptureManager.unset_fixture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:capfdbinary",
      "target": "src/_pytest/capture.py:CaptureFixture.close",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:capfdbinary",
      "target": "src/_pytest/capture.py:DontReadFromInput.close",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/capture.py:capfdbinary",
      "target": "src/_pytest/capture.py:CaptureFixture._start",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_addhooks",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_plugin_registered",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_addoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_configure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_cmdline_parse",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_cmdline_preparse",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_cmdline_main",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_load_initial_conftests",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_collection",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_collection_modifyitems",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_collection_finish",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_ignore_collect",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_collect_file",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_collectstart",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_itemcollected",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_collectreport",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_deselected",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_make_collect_report",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_pycollect_makemodule",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_pycollect_makeitem",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_pyfunc_call",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_generate_tests",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_make_parametrize_id",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_runtestloop",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_runtest_protocol",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_runtest_logstart",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_runtest_logfinish",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_runtest_setup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_runtest_call",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_runtest_teardown",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_runtest_makereport",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_runtest_logreport",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_report_to_serializable",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_report_from_serializable",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_fixture_setup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_fixture_post_finalizer",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_sessionstart",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_sessionfinish",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_unconfigure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_assertrepr_compare",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_assertion_pass",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_report_header",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_report_collectionfinish",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_report_teststatus",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_terminal_summary",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_warning_recorded",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_markeval_namespace",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_internalerror",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_keyboard_interrupt",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_exception_interact",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_enter_pdb",
      "type": "contains"
    },
    {
      "source": "src/_pytest/hookspec.py",
      "target": "src/_pytest/hookspec.py:pytest_leave_pdb",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py",
      "target": "src/_pytest/pytester.py:pytest_addoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py",
      "target": "src/_pytest/pytester.py:pytest_configure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py",
      "target": "src/_pytest/pytester.py:LsofFdLeakChecker",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py",
      "target": "src/_pytest/pytester.py:_pytest",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py",
      "target": "src/_pytest/pytester.py:PytestArg",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py",
      "target": "src/_pytest/pytester.py:get_public_names",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py",
      "target": "src/_pytest/pytester.py:RecordedHookCall",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py",
      "target": "src/_pytest/pytester.py:HookRecorder",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py",
      "target": "src/_pytest/pytester.py:linecomp",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py",
      "target": "src/_pytest/pytester.py:LineMatcher_fixture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py",
      "target": "src/_pytest/pytester.py:pytester",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py",
      "target": "src/_pytest/pytester.py:_sys_snapshot",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py",
      "target": "src/_pytest/pytester.py:_config_for_test",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py",
      "target": "src/_pytest/pytester.py:RunResult",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py",
      "target": "src/_pytest/pytester.py:CwdSnapshot",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py",
      "target": "src/_pytest/pytester.py:SysModulesSnapshot",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py",
      "target": "src/_pytest/pytester.py:SysPathsSnapshot",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py",
      "target": "src/_pytest/pytester.py:Pytester",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py",
      "target": "src/_pytest/pytester.py:LineComp",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py",
      "target": "src/_pytest/pytester.py:LineMatcher",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:pytest_configure",
      "target": "src/_pytest/pytester.py:LsofFdLeakChecker",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:pytest_configure",
      "target": "src/_pytest/pytester.py:LsofFdLeakChecker.matching_platform",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:LsofFdLeakChecker",
      "target": "src/_pytest/pytester.py:LsofFdLeakChecker.get_open_files",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:LsofFdLeakChecker",
      "target": "src/_pytest/pytester.py:LsofFdLeakChecker.matching_platform",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:LsofFdLeakChecker",
      "target": "src/_pytest/pytester.py:LsofFdLeakChecker.pytest_runtest_protocol",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:LsofFdLeakChecker.get_open_files",
      "target": "src/_pytest/pytester.py:LsofFdLeakChecker.get_open_files.isopen",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:LsofFdLeakChecker.get_open_files",
      "target": "src/_pytest/pytester.py:LsofFdLeakChecker.get_open_files.isopen",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:LsofFdLeakChecker.get_open_files",
      "target": "src/_pytest/pytester.py:Pytester.run",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:LsofFdLeakChecker.get_open_files",
      "target": "src/_pytest/pytester.py:LineMatcher.str",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:LsofFdLeakChecker.matching_platform",
      "target": "src/_pytest/pytester.py:Pytester.run",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:LsofFdLeakChecker.pytest_runtest_protocol",
      "target": "src/_pytest/pytester.py:LsofFdLeakChecker.get_open_files",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:LsofFdLeakChecker.pytest_runtest_protocol",
      "target": "src/_pytest/pytester.py:LineMatcher.str",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:_pytest",
      "target": "src/_pytest/pytester.py:PytestArg",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:PytestArg",
      "target": "src/_pytest/pytester.py:PytestArg.gethookrecorder",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:PytestArg.gethookrecorder",
      "target": "src/_pytest/pytester.py:HookRecorder",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:RecordedHookCall",
      "target": "src/_pytest/pytester.py:RecordedHookCall.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:RecordedHookCall",
      "target": "src/_pytest/pytester.py:RecordedHookCall.__getattr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:HookRecorder",
      "target": "src/_pytest/pytester.py:HookRecorder.finish_recording",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:HookRecorder",
      "target": "src/_pytest/pytester.py:HookRecorder.getcalls",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:HookRecorder",
      "target": "src/_pytest/pytester.py:HookRecorder.assert_contains",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:HookRecorder",
      "target": "src/_pytest/pytester.py:HookRecorder.popcall",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:HookRecorder",
      "target": "src/_pytest/pytester.py:HookRecorder.getcall",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:HookRecorder",
      "target": "src/_pytest/pytester.py:HookRecorder.getreports",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:HookRecorder",
      "target": "src/_pytest/pytester.py:HookRecorder.getreports",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:HookRecorder",
      "target": "src/_pytest/pytester.py:HookRecorder.getreports",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:HookRecorder",
      "target": "src/_pytest/pytester.py:HookRecorder.getreports",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:HookRecorder",
      "target": "src/_pytest/pytester.py:HookRecorder.matchreport",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:HookRecorder",
      "target": "src/_pytest/pytester.py:HookRecorder.getfailures",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:HookRecorder",
      "target": "src/_pytest/pytester.py:HookRecorder.getfailures",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:HookRecorder",
      "target": "src/_pytest/pytester.py:HookRecorder.getfailures",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:HookRecorder",
      "target": "src/_pytest/pytester.py:HookRecorder.getfailures",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:HookRecorder",
      "target": "src/_pytest/pytester.py:HookRecorder.getfailedcollections",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:HookRecorder",
      "target": "src/_pytest/pytester.py:HookRecorder.listoutcomes",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:HookRecorder",
      "target": "src/_pytest/pytester.py:HookRecorder.countoutcomes",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:HookRecorder",
      "target": "src/_pytest/pytester.py:HookRecorder.assertoutcome",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:HookRecorder",
      "target": "src/_pytest/pytester.py:HookRecorder.clear",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:HookRecorder",
      "target": "src/_pytest/pytester.py:RecordedHookCall",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:HookRecorder.getcall",
      "target": "src/_pytest/pytester.py:HookRecorder.getcalls",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:HookRecorder.getreports",
      "target": "src/_pytest/pytester.py:HookRecorder.getcalls",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:HookRecorder.matchreport",
      "target": "src/_pytest/pytester.py:HookRecorder.getreports",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:HookRecorder.getfailures",
      "target": "src/_pytest/pytester.py:HookRecorder.getreports",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:HookRecorder.getfailedcollections",
      "target": "src/_pytest/pytester.py:HookRecorder.getfailures",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:HookRecorder.listoutcomes",
      "target": "src/_pytest/pytester.py:HookRecorder.getreports",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:HookRecorder.countoutcomes",
      "target": "src/_pytest/pytester.py:HookRecorder.listoutcomes",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:HookRecorder.assertoutcome",
      "target": "src/_pytest/pytester.py:HookRecorder.listoutcomes",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:linecomp",
      "target": "src/_pytest/pytester.py:LineComp",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:pytester",
      "target": "src/_pytest/pytester.py:Pytester",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:_sys_snapshot",
      "target": "src/_pytest/pytester.py:SysPathsSnapshot",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:_sys_snapshot",
      "target": "src/_pytest/pytester.py:SysModulesSnapshot",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:_sys_snapshot",
      "target": "src/_pytest/pytester.py:SysModulesSnapshot.restore",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:_sys_snapshot",
      "target": "src/_pytest/pytester.py:CwdSnapshot.restore",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:_sys_snapshot",
      "target": "src/_pytest/pytester.py:SysPathsSnapshot.restore",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:RunResult",
      "target": "src/_pytest/pytester.py:RunResult.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:RunResult",
      "target": "src/_pytest/pytester.py:RunResult.parseoutcomes",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:RunResult",
      "target": "src/_pytest/pytester.py:RunResult.parse_summary_nouns",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:RunResult",
      "target": "src/_pytest/pytester.py:RunResult.assert_outcomes",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:RunResult",
      "target": "src/_pytest/pytester.py:LineMatcher",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:RunResult.parseoutcomes",
      "target": "src/_pytest/pytester.py:RunResult.parse_summary_nouns",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:RunResult.assert_outcomes",
      "target": "src/_pytest/pytester.py:RunResult.parseoutcomes",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:CwdSnapshot",
      "target": "src/_pytest/pytester.py:CwdSnapshot.restore",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:CwdSnapshot.restore",
      "target": "src/_pytest/pytester.py:Pytester.chdir",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:SysModulesSnapshot",
      "target": "src/_pytest/pytester.py:SysModulesSnapshot.restore",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:SysModulesSnapshot.restore",
      "target": "src/_pytest/pytester.py:HookRecorder.clear",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:SysPathsSnapshot",
      "target": "src/_pytest/pytester.py:SysPathsSnapshot.restore",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.TimeoutExpired",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.path",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester._finalize",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.__take_sys_modules_snapshot",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.__take_sys_modules_snapshot",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.make_hook_recorder",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.chdir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.chdir",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester._makefile",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.makefile",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.makeconftest",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.makeini",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.getinicfg",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.makepyprojecttoml",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.makepyfile",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.maketxtfile",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.syspathinsert",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.mkdir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.mkpydir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.copy_example",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.getnode",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.getpathnode",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.genitems",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.runitem",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.inline_runsource",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.inline_genitems",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.inline_run",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.runpytest_inprocess",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.runpytest",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester._ensure_basetemp",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.parseconfig",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.parseconfigure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.getitem",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.getitems",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.getmodulecol",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.collect_by_name",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.popen",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.run",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester._dump_lines",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester._getpytestargs",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.runpython",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.runpython_c",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.runpytest_subprocess",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.spawn_pytest",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:Pytester.spawn",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:SysPathsSnapshot",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:CwdSnapshot",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester",
      "target": "src/_pytest/pytester.py:LineMatcher.str",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester._finalize",
      "target": "src/_pytest/pytester.py:SysModulesSnapshot.restore",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester._finalize",
      "target": "src/_pytest/pytester.py:CwdSnapshot.restore",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester._finalize",
      "target": "src/_pytest/pytester.py:SysPathsSnapshot.restore",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.__take_sys_modules_snapshot",
      "target": "src/_pytest/pytester.py:Pytester.__take_sys_modules_snapshot.preserve_module",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.__take_sys_modules_snapshot",
      "target": "src/_pytest/pytester.py:SysModulesSnapshot",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.make_hook_recorder",
      "target": "src/_pytest/pytester.py:HookRecorder",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester._makefile",
      "target": "src/_pytest/pytester.py:Pytester._makefile.to_text",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester._makefile",
      "target": "src/_pytest/pytester.py:Pytester._makefile.to_text",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester._makefile",
      "target": "src/_pytest/pytester.py:Pytester.mkdir",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester._makefile.to_text",
      "target": "src/_pytest/pytester.py:LineMatcher.str",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.makefile",
      "target": "src/_pytest/pytester.py:Pytester._makefile",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.makeconftest",
      "target": "src/_pytest/pytester.py:Pytester.makepyfile",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.makeini",
      "target": "src/_pytest/pytester.py:Pytester.makefile",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.getinicfg",
      "target": "src/_pytest/pytester.py:LineMatcher.str",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.getinicfg",
      "target": "src/_pytest/pytester.py:Pytester.makeini",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.makepyprojecttoml",
      "target": "src/_pytest/pytester.py:Pytester.makefile",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.makepyfile",
      "target": "src/_pytest/pytester.py:Pytester._makefile",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.maketxtfile",
      "target": "src/_pytest/pytester.py:Pytester._makefile",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.syspathinsert",
      "target": "src/_pytest/pytester.py:LineMatcher.str",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.mkpydir",
      "target": "src/_pytest/pytester.py:Pytester.mkdir",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.getnode",
      "target": "src/_pytest/pytester.py:LineMatcher.str",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.getpathnode",
      "target": "src/_pytest/pytester.py:Pytester.parseconfigure",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.runitem",
      "target": "src/_pytest/pytester.py:Pytester.getitem",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.inline_runsource",
      "target": "src/_pytest/pytester.py:Pytester.makepyfile",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.inline_runsource",
      "target": "src/_pytest/pytester.py:Pytester.inline_run",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.inline_genitems",
      "target": "src/_pytest/pytester.py:HookRecorder.getcalls",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.inline_genitems",
      "target": "src/_pytest/pytester.py:Pytester.inline_run",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.inline_run",
      "target": "src/_pytest/pytester.py:Pytester.inline_run.Collect",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.inline_run",
      "target": "src/_pytest/pytester.py:Pytester.inline_run.Collect",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.inline_run",
      "target": "src/_pytest/pytester.py:Pytester.inline_run.reprec",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.inline_run",
      "target": "src/_pytest/pytester.py:HookRecorder.getcalls",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.inline_run",
      "target": "src/_pytest/pytester.py:SysPathsSnapshot",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.inline_run",
      "target": "src/_pytest/pytester.py:Pytester.__take_sys_modules_snapshot",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.inline_run",
      "target": "src/_pytest/pytester.py:LineMatcher.str",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.inline_run.Collect",
      "target": "src/_pytest/pytester.py:Pytester.inline_run.Collect.pytest_configure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.inline_run.Collect.pytest_configure",
      "target": "src/_pytest/pytester.py:Pytester.make_hook_recorder",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.runpytest_inprocess",
      "target": "src/_pytest/pytester.py:Pytester.runpytest_inprocess.reprec",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.runpytest_inprocess",
      "target": "src/_pytest/pytester.py:Pytester.runpytest_inprocess.reprec",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.runpytest_inprocess",
      "target": "src/_pytest/pytester.py:Pytester.syspathinsert",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.runpytest_inprocess",
      "target": "src/_pytest/pytester.py:Pytester.inline_run",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.runpytest_inprocess",
      "target": "src/_pytest/pytester.py:RunResult",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.runpytest",
      "target": "src/_pytest/pytester.py:Pytester._ensure_basetemp",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.runpytest",
      "target": "src/_pytest/pytester.py:Pytester.runpytest_inprocess",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.runpytest",
      "target": "src/_pytest/pytester.py:Pytester.runpytest_subprocess",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester._ensure_basetemp",
      "target": "src/_pytest/pytester.py:LineMatcher.str",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.parseconfig",
      "target": "src/_pytest/pytester.py:LineMatcher.str",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.parseconfig",
      "target": "src/_pytest/pytester.py:Pytester._ensure_basetemp",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.parseconfigure",
      "target": "src/_pytest/pytester.py:Pytester.parseconfig",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.getitem",
      "target": "src/_pytest/pytester.py:Pytester.getitems",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.getitems",
      "target": "src/_pytest/pytester.py:Pytester.getmodulecol",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.getitems",
      "target": "src/_pytest/pytester.py:Pytester.genitems",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.getmodulecol",
      "target": "src/_pytest/pytester.py:Pytester.parseconfigure",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.getmodulecol",
      "target": "src/_pytest/pytester.py:Pytester.getnode",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.getmodulecol",
      "target": "src/_pytest/pytester.py:Pytester.makepyfile",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.getmodulecol",
      "target": "src/_pytest/pytester.py:LineMatcher.str",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.run",
      "target": "src/_pytest/pytester.py:Pytester.run.handle_timeout",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.run",
      "target": "src/_pytest/pytester.py:Pytester.run.handle_timeout",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.run",
      "target": "src/_pytest/pytester.py:Pytester.popen",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.run",
      "target": "src/_pytest/pytester.py:RunResult",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.run",
      "target": "src/_pytest/pytester.py:Pytester._dump_lines",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.run.handle_timeout",
      "target": "src/_pytest/pytester.py:Pytester.TimeoutExpired",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.runpython",
      "target": "src/_pytest/pytester.py:Pytester.run",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.runpython_c",
      "target": "src/_pytest/pytester.py:Pytester.run",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.runpytest_subprocess",
      "target": "src/_pytest/pytester.py:Pytester.run",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.runpytest_subprocess",
      "target": "src/_pytest/pytester.py:Pytester._getpytestargs",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.spawn_pytest",
      "target": "src/_pytest/pytester.py:Pytester.spawn",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.spawn_pytest",
      "target": "src/_pytest/pytester.py:Pytester._getpytestargs",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:Pytester.spawn_pytest",
      "target": "src/_pytest/pytester.py:Pytester.mkdir",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:LineComp",
      "target": "src/_pytest/pytester.py:LineComp.assert_contains_lines",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:LineComp.assert_contains_lines",
      "target": "src/_pytest/pytester.py:LineMatcher.fnmatch_lines",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:LineComp.assert_contains_lines",
      "target": "src/_pytest/pytester.py:LineMatcher",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher",
      "target": "src/_pytest/pytester.py:LineMatcher.__str__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher",
      "target": "src/_pytest/pytester.py:LineMatcher._getlines",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher",
      "target": "src/_pytest/pytester.py:LineMatcher.fnmatch_lines_random",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher",
      "target": "src/_pytest/pytester.py:LineMatcher.re_match_lines_random",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher",
      "target": "src/_pytest/pytester.py:LineMatcher._match_lines_random",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher",
      "target": "src/_pytest/pytester.py:LineMatcher.get_lines_after",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher",
      "target": "src/_pytest/pytester.py:LineMatcher._log",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher",
      "target": "src/_pytest/pytester.py:LineMatcher._log_text",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher",
      "target": "src/_pytest/pytester.py:LineMatcher.fnmatch_lines",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher",
      "target": "src/_pytest/pytester.py:LineMatcher.re_match_lines",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher",
      "target": "src/_pytest/pytester.py:LineMatcher._match_lines",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher",
      "target": "src/_pytest/pytester.py:LineMatcher.no_fnmatch_line",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher",
      "target": "src/_pytest/pytester.py:LineMatcher.no_re_match_line",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher",
      "target": "src/_pytest/pytester.py:LineMatcher._no_match_line",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher",
      "target": "src/_pytest/pytester.py:LineMatcher._fail",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher",
      "target": "src/_pytest/pytester.py:LineMatcher.str",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher.fnmatch_lines_random",
      "target": "src/_pytest/pytester.py:LineMatcher._match_lines_random",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher.re_match_lines_random",
      "target": "src/_pytest/pytester.py:LineMatcher._match_lines_random",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher._match_lines_random",
      "target": "src/_pytest/pytester.py:LineMatcher._fail",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher._match_lines_random",
      "target": "src/_pytest/pytester.py:LineMatcher._log",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher._match_lines_random",
      "target": "src/_pytest/pytester.py:LineMatcher._getlines",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher._log",
      "target": "src/_pytest/pytester.py:LineMatcher.str",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher.fnmatch_lines",
      "target": "src/_pytest/pytester.py:LineMatcher._match_lines",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher.re_match_lines",
      "target": "src/_pytest/pytester.py:LineMatcher._match_lines",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher._match_lines",
      "target": "src/_pytest/pytester.py:LineMatcher._fail",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher._match_lines",
      "target": "src/_pytest/pytester.py:LineMatcher._log",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher._match_lines",
      "target": "src/_pytest/pytester.py:LineMatcher._getlines",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher.no_fnmatch_line",
      "target": "src/_pytest/pytester.py:LineMatcher._no_match_line",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher.no_re_match_line",
      "target": "src/_pytest/pytester.py:LineMatcher._no_match_line",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher._no_match_line",
      "target": "src/_pytest/pytester.py:LineMatcher._fail",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pytester.py:LineMatcher._no_match_line",
      "target": "src/_pytest/pytester.py:LineMatcher._log",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/faulthandler.py",
      "target": "src/_pytest/faulthandler.py:pytest_addoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/faulthandler.py",
      "target": "src/_pytest/faulthandler.py:pytest_configure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/faulthandler.py",
      "target": "src/_pytest/faulthandler.py:pytest_unconfigure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/faulthandler.py",
      "target": "src/_pytest/faulthandler.py:get_stderr_fileno",
      "type": "contains"
    },
    {
      "source": "src/_pytest/faulthandler.py",
      "target": "src/_pytest/faulthandler.py:get_timeout_config_value",
      "type": "contains"
    },
    {
      "source": "src/_pytest/faulthandler.py",
      "target": "src/_pytest/faulthandler.py:pytest_runtest_protocol",
      "type": "contains"
    },
    {
      "source": "src/_pytest/faulthandler.py",
      "target": "src/_pytest/faulthandler.py:pytest_enter_pdb",
      "type": "contains"
    },
    {
      "source": "src/_pytest/faulthandler.py",
      "target": "src/_pytest/faulthandler.py:pytest_exception_interact",
      "type": "contains"
    },
    {
      "source": "src/_pytest/faulthandler.py:pytest_configure",
      "target": "src/_pytest/faulthandler.py:get_stderr_fileno",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/faulthandler.py:pytest_unconfigure",
      "target": "src/_pytest/faulthandler.py:get_stderr_fileno",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/faulthandler.py:pytest_runtest_protocol",
      "target": "src/_pytest/faulthandler.py:get_timeout_config_value",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/outcomes.py",
      "target": "src/_pytest/outcomes.py:OutcomeException",
      "type": "contains"
    },
    {
      "source": "src/_pytest/outcomes.py",
      "target": "src/_pytest/outcomes.py:Skipped",
      "type": "contains"
    },
    {
      "source": "src/_pytest/outcomes.py",
      "target": "src/_pytest/outcomes.py:Failed",
      "type": "contains"
    },
    {
      "source": "src/_pytest/outcomes.py",
      "target": "src/_pytest/outcomes.py:Exit",
      "type": "contains"
    },
    {
      "source": "src/_pytest/outcomes.py",
      "target": "src/_pytest/outcomes.py:_WithException",
      "type": "contains"
    },
    {
      "source": "src/_pytest/outcomes.py",
      "target": "src/_pytest/outcomes.py:_with_exception",
      "type": "contains"
    },
    {
      "source": "src/_pytest/outcomes.py",
      "target": "src/_pytest/outcomes.py:exit",
      "type": "contains"
    },
    {
      "source": "src/_pytest/outcomes.py",
      "target": "src/_pytest/outcomes.py:skip",
      "type": "contains"
    },
    {
      "source": "src/_pytest/outcomes.py",
      "target": "src/_pytest/outcomes.py:fail",
      "type": "contains"
    },
    {
      "source": "src/_pytest/outcomes.py",
      "target": "src/_pytest/outcomes.py:_resolve_msg_to_reason",
      "type": "contains"
    },
    {
      "source": "src/_pytest/outcomes.py",
      "target": "src/_pytest/outcomes.py:XFailed",
      "type": "contains"
    },
    {
      "source": "src/_pytest/outcomes.py",
      "target": "src/_pytest/outcomes.py:xfail",
      "type": "contains"
    },
    {
      "source": "src/_pytest/outcomes.py",
      "target": "src/_pytest/outcomes.py:importorskip",
      "type": "contains"
    },
    {
      "source": "src/_pytest/outcomes.py:OutcomeException",
      "target": "src/_pytest/outcomes.py:OutcomeException.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/outcomes.py:Skipped",
      "target": "src/_pytest/outcomes.py:OutcomeException",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/outcomes.py:Failed",
      "target": "src/_pytest/outcomes.py:OutcomeException",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/outcomes.py:_with_exception",
      "target": "src/_pytest/outcomes.py:_with_exception.decorate",
      "type": "contains"
    },
    {
      "source": "src/_pytest/outcomes.py:exit",
      "target": "src/_pytest/outcomes.py:Exit",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/outcomes.py:skip",
      "target": "src/_pytest/outcomes.py:_resolve_msg_to_reason",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/outcomes.py:skip",
      "target": "src/_pytest/outcomes.py:Skipped",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/outcomes.py:fail",
      "target": "src/_pytest/outcomes.py:_resolve_msg_to_reason",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/outcomes.py:fail",
      "target": "src/_pytest/outcomes.py:Failed",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/outcomes.py:XFailed",
      "target": "src/_pytest/outcomes.py:Failed",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/outcomes.py:xfail",
      "target": "src/_pytest/outcomes.py:XFailed",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/outcomes.py:importorskip",
      "target": "src/_pytest/outcomes.py:Skipped",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/stepwise.py",
      "target": "src/_pytest/stepwise.py:pytest_addoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/stepwise.py",
      "target": "src/_pytest/stepwise.py:pytest_configure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/stepwise.py",
      "target": "src/_pytest/stepwise.py:pytest_sessionfinish",
      "type": "contains"
    },
    {
      "source": "src/_pytest/stepwise.py",
      "target": "src/_pytest/stepwise.py:StepwisePlugin",
      "type": "contains"
    },
    {
      "source": "src/_pytest/stepwise.py:pytest_configure",
      "target": "src/_pytest/stepwise.py:StepwisePlugin",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/stepwise.py:StepwisePlugin",
      "target": "src/_pytest/stepwise.py:StepwisePlugin.pytest_sessionstart",
      "type": "contains"
    },
    {
      "source": "src/_pytest/stepwise.py:StepwisePlugin",
      "target": "src/_pytest/stepwise.py:StepwisePlugin.pytest_collection_modifyitems",
      "type": "contains"
    },
    {
      "source": "src/_pytest/stepwise.py:StepwisePlugin",
      "target": "src/_pytest/stepwise.py:StepwisePlugin.pytest_runtest_logreport",
      "type": "contains"
    },
    {
      "source": "src/_pytest/stepwise.py:StepwisePlugin",
      "target": "src/_pytest/stepwise.py:StepwisePlugin.pytest_report_collectionfinish",
      "type": "contains"
    },
    {
      "source": "src/_pytest/stepwise.py:StepwisePlugin",
      "target": "src/_pytest/stepwise.py:StepwisePlugin.pytest_sessionfinish",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py",
      "target": "src/_pytest/junitxml.py:bin_xml_escape",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py",
      "target": "src/_pytest/junitxml.py:merge_family",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py",
      "target": "src/_pytest/junitxml.py:_NodeReporter",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py",
      "target": "src/_pytest/junitxml.py:_warn_incompatibility_with_xunit2",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py",
      "target": "src/_pytest/junitxml.py:record_property",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py",
      "target": "src/_pytest/junitxml.py:record_xml_attribute",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py",
      "target": "src/_pytest/junitxml.py:_check_record_param_type",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py",
      "target": "src/_pytest/junitxml.py:record_testsuite_property",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py",
      "target": "src/_pytest/junitxml.py:pytest_addoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py",
      "target": "src/_pytest/junitxml.py:pytest_configure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py",
      "target": "src/_pytest/junitxml.py:pytest_unconfigure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py",
      "target": "src/_pytest/junitxml.py:mangle_test_address",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py",
      "target": "src/_pytest/junitxml.py:LogXML",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:bin_xml_escape",
      "target": "src/_pytest/junitxml.py:bin_xml_escape.repl",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter",
      "target": "src/_pytest/junitxml.py:_NodeReporter.append",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter",
      "target": "src/_pytest/junitxml.py:_NodeReporter.add_property",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter",
      "target": "src/_pytest/junitxml.py:_NodeReporter.add_attribute",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter",
      "target": "src/_pytest/junitxml.py:_NodeReporter.make_properties_node",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter",
      "target": "src/_pytest/junitxml.py:_NodeReporter.record_testreport",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter",
      "target": "src/_pytest/junitxml.py:_NodeReporter.to_xml",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter",
      "target": "src/_pytest/junitxml.py:_NodeReporter._add_simple",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter",
      "target": "src/_pytest/junitxml.py:_NodeReporter.write_captured_output",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter",
      "target": "src/_pytest/junitxml.py:_NodeReporter._prepare_content",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter",
      "target": "src/_pytest/junitxml.py:_NodeReporter._write_content",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter",
      "target": "src/_pytest/junitxml.py:_NodeReporter.append_pass",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter",
      "target": "src/_pytest/junitxml.py:_NodeReporter.append_failure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter",
      "target": "src/_pytest/junitxml.py:_NodeReporter.append_collect_error",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter",
      "target": "src/_pytest/junitxml.py:_NodeReporter.append_collect_skipped",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter",
      "target": "src/_pytest/junitxml.py:_NodeReporter.append_error",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter",
      "target": "src/_pytest/junitxml.py:_NodeReporter.append_skipped",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter",
      "target": "src/_pytest/junitxml.py:_NodeReporter.finalize",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter.append",
      "target": "src/_pytest/junitxml.py:LogXML.add_stats",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter.add_property",
      "target": "src/_pytest/junitxml.py:_NodeReporter.append",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter.add_property",
      "target": "src/_pytest/junitxml.py:bin_xml_escape",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter.add_attribute",
      "target": "src/_pytest/junitxml.py:bin_xml_escape",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter.make_properties_node",
      "target": "src/_pytest/junitxml.py:_NodeReporter.append",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter.record_testreport",
      "target": "src/_pytest/junitxml.py:mangle_test_address",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter.record_testreport",
      "target": "src/_pytest/junitxml.py:bin_xml_escape",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter.to_xml",
      "target": "src/_pytest/junitxml.py:_NodeReporter.make_properties_node",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter.to_xml",
      "target": "src/_pytest/junitxml.py:_NodeReporter.append",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter._add_simple",
      "target": "src/_pytest/junitxml.py:_NodeReporter.append",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter._add_simple",
      "target": "src/_pytest/junitxml.py:bin_xml_escape",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter.write_captured_output",
      "target": "src/_pytest/junitxml.py:_NodeReporter._write_content",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter.write_captured_output",
      "target": "src/_pytest/junitxml.py:_NodeReporter._prepare_content",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter._write_content",
      "target": "src/_pytest/junitxml.py:_NodeReporter.append",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter._write_content",
      "target": "src/_pytest/junitxml.py:bin_xml_escape",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter.append_pass",
      "target": "src/_pytest/junitxml.py:LogXML.add_stats",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter.append_failure",
      "target": "src/_pytest/junitxml.py:_NodeReporter._add_simple",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter.append_failure",
      "target": "src/_pytest/junitxml.py:bin_xml_escape",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter.append_collect_error",
      "target": "src/_pytest/junitxml.py:_NodeReporter._add_simple",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter.append_collect_skipped",
      "target": "src/_pytest/junitxml.py:_NodeReporter._add_simple",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter.append_error",
      "target": "src/_pytest/junitxml.py:_NodeReporter._add_simple",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter.append_error",
      "target": "src/_pytest/junitxml.py:bin_xml_escape",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter.append_skipped",
      "target": "src/_pytest/junitxml.py:_NodeReporter.append",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter.append_skipped",
      "target": "src/_pytest/junitxml.py:_NodeReporter.write_captured_output",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter.append_skipped",
      "target": "src/_pytest/junitxml.py:bin_xml_escape",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:_NodeReporter.finalize",
      "target": "src/_pytest/junitxml.py:_NodeReporter.to_xml",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:record_property",
      "target": "src/_pytest/junitxml.py:record_property.append_property",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:record_property",
      "target": "src/_pytest/junitxml.py:_warn_incompatibility_with_xunit2",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:record_property.append_property",
      "target": "src/_pytest/junitxml.py:_NodeReporter.append",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:record_xml_attribute",
      "target": "src/_pytest/junitxml.py:record_xml_attribute.add_attr_noop",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:record_xml_attribute",
      "target": "src/_pytest/junitxml.py:LogXML.node_reporter",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:record_xml_attribute",
      "target": "src/_pytest/junitxml.py:_warn_incompatibility_with_xunit2",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:record_testsuite_property",
      "target": "src/_pytest/junitxml.py:record_testsuite_property.record_func",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:record_testsuite_property.record_func",
      "target": "src/_pytest/junitxml.py:_check_record_param_type",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:pytest_configure",
      "target": "src/_pytest/junitxml.py:LogXML",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML",
      "target": "src/_pytest/junitxml.py:LogXML.finalize",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML",
      "target": "src/_pytest/junitxml.py:LogXML.node_reporter",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML",
      "target": "src/_pytest/junitxml.py:LogXML.add_stats",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML",
      "target": "src/_pytest/junitxml.py:LogXML._opentestcase",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML",
      "target": "src/_pytest/junitxml.py:LogXML.pytest_runtest_logreport",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML",
      "target": "src/_pytest/junitxml.py:LogXML.update_testcase_duration",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML",
      "target": "src/_pytest/junitxml.py:LogXML.pytest_collectreport",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML",
      "target": "src/_pytest/junitxml.py:LogXML.pytest_internalerror",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML",
      "target": "src/_pytest/junitxml.py:LogXML.pytest_sessionstart",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML",
      "target": "src/_pytest/junitxml.py:LogXML.pytest_sessionfinish",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML",
      "target": "src/_pytest/junitxml.py:LogXML.pytest_terminal_summary",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML",
      "target": "src/_pytest/junitxml.py:LogXML.add_global_property",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML",
      "target": "src/_pytest/junitxml.py:LogXML._get_global_properties_node",
      "type": "contains"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML.finalize",
      "target": "src/_pytest/junitxml.py:_NodeReporter.finalize",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML.node_reporter",
      "target": "src/_pytest/junitxml.py:_NodeReporter",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML.node_reporter",
      "target": "src/_pytest/junitxml.py:_NodeReporter.append",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML._opentestcase",
      "target": "src/_pytest/junitxml.py:_NodeReporter.record_testreport",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML._opentestcase",
      "target": "src/_pytest/junitxml.py:LogXML.node_reporter",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML.pytest_runtest_logreport",
      "target": "src/_pytest/junitxml.py:LogXML._opentestcase",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML.pytest_runtest_logreport",
      "target": "src/_pytest/junitxml.py:LogXML.update_testcase_duration",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML.pytest_runtest_logreport",
      "target": "src/_pytest/junitxml.py:_NodeReporter.append",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML.pytest_runtest_logreport",
      "target": "src/_pytest/junitxml.py:_NodeReporter.append_skipped",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML.pytest_runtest_logreport",
      "target": "src/_pytest/junitxml.py:_NodeReporter.append_error",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML.pytest_runtest_logreport",
      "target": "src/_pytest/junitxml.py:_NodeReporter.write_captured_output",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML.pytest_runtest_logreport",
      "target": "src/_pytest/junitxml.py:LogXML.finalize",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML.pytest_runtest_logreport",
      "target": "src/_pytest/junitxml.py:_NodeReporter.finalize",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML.pytest_runtest_logreport",
      "target": "src/_pytest/junitxml.py:_NodeReporter.append_pass",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML.pytest_runtest_logreport",
      "target": "src/_pytest/junitxml.py:_NodeReporter.add_property",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML.pytest_runtest_logreport",
      "target": "src/_pytest/junitxml.py:_NodeReporter.append_failure",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML.update_testcase_duration",
      "target": "src/_pytest/junitxml.py:LogXML.node_reporter",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML.pytest_collectreport",
      "target": "src/_pytest/junitxml.py:_NodeReporter.append_collect_skipped",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML.pytest_collectreport",
      "target": "src/_pytest/junitxml.py:LogXML._opentestcase",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML.pytest_collectreport",
      "target": "src/_pytest/junitxml.py:_NodeReporter.append_collect_error",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML.pytest_internalerror",
      "target": "src/_pytest/junitxml.py:_NodeReporter._add_simple",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML.pytest_internalerror",
      "target": "src/_pytest/junitxml.py:LogXML.node_reporter",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML.pytest_sessionfinish",
      "target": "src/_pytest/junitxml.py:LogXML._get_global_properties_node",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML.pytest_sessionfinish",
      "target": "src/_pytest/junitxml.py:_NodeReporter.append",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML.pytest_sessionfinish",
      "target": "src/_pytest/junitxml.py:_NodeReporter.to_xml",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML.add_global_property",
      "target": "src/_pytest/junitxml.py:_check_record_param_type",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML.add_global_property",
      "target": "src/_pytest/junitxml.py:_NodeReporter.append",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML.add_global_property",
      "target": "src/_pytest/junitxml.py:bin_xml_escape",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/junitxml.py:LogXML._get_global_properties_node",
      "target": "src/_pytest/junitxml.py:_NodeReporter.append",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:pytest_addoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:pytest_cmdline_main",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:pytest_generate_tests",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:pytest_configure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:async_warn_and_skip",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:pytest_pyfunc_call",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:pytest_collect_file",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:path_matches_patterns",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:pytest_pycollect_makemodule",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:pytest_pycollect_makeitem",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:PyobjMixin",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:_EmptyClass",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:PyCollector",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:Module",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:Package",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:_call_with_optional_argument",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:_get_first_non_fixture_func",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:Class",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:InstanceDummy",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:__getattr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:hasinit",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:hasnew",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:IdMaker",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:CallSpec2",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:Metafunc",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:_find_parametrized_scope",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:_ascii_escaped_by_config",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:_pretty_fixture_path",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:show_fixtures_per_test",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:_show_fixtures_per_test",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:showfixtures",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:_showfixtures_main",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:write_docstring",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:Function",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py",
      "target": "src/_pytest/python.py:FunctionDefinition",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:pytest_cmdline_main",
      "target": "src/_pytest/python.py:show_fixtures_per_test",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:pytest_cmdline_main",
      "target": "src/_pytest/python.py:showfixtures",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:pytest_generate_tests",
      "target": "src/_pytest/python.py:Metafunc.parametrize",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:pytest_pyfunc_call",
      "target": "src/_pytest/python.py:async_warn_and_skip",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:pytest_collect_file",
      "target": "src/_pytest/python.py:path_matches_patterns",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:pytest_collect_file",
      "target": "src/_pytest/python.py:pytest_pycollect_makemodule",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:pytest_pycollect_makemodule",
      "target": "src/_pytest/python.py:Function.from_parent",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:pytest_pycollect_makemodule",
      "target": "src/_pytest/python.py:Class.from_parent",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:pytest_pycollect_makeitem",
      "target": "src/_pytest/python.py:Function.from_parent",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:pytest_pycollect_makeitem",
      "target": "src/_pytest/python.py:Class.from_parent",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:pytest_pycollect_makeitem",
      "target": "src/_pytest/python.py:PyCollector.istestfunction",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:pytest_pycollect_makeitem",
      "target": "src/_pytest/python.py:PyCollector.istestclass",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:pytest_pycollect_makeitem",
      "target": "src/_pytest/python.py:PyCollector._genfunctions",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:PyobjMixin",
      "target": "src/_pytest/python.py:PyobjMixin.module",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:PyobjMixin",
      "target": "src/_pytest/python.py:PyobjMixin.cls",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:PyobjMixin",
      "target": "src/_pytest/python.py:PyobjMixin.instance",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:PyobjMixin",
      "target": "src/_pytest/python.py:PyobjMixin.obj",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:PyobjMixin",
      "target": "src/_pytest/python.py:PyobjMixin.obj",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:PyobjMixin",
      "target": "src/_pytest/python.py:PyobjMixin._getobj",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:PyobjMixin",
      "target": "src/_pytest/python.py:PyobjMixin.getmodpath",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:PyobjMixin",
      "target": "src/_pytest/python.py:PyobjMixin.reportinfo",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:PyobjMixin.reportinfo",
      "target": "src/_pytest/python.py:PyobjMixin.getmodpath",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:PyCollector",
      "target": "src/_pytest/python.py:PyCollector.funcnamefilter",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:PyCollector",
      "target": "src/_pytest/python.py:PyCollector.isnosetest",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:PyCollector",
      "target": "src/_pytest/python.py:PyCollector.classnamefilter",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:PyCollector",
      "target": "src/_pytest/python.py:PyCollector.istestfunction",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:PyCollector",
      "target": "src/_pytest/python.py:PyCollector.istestclass",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:PyCollector",
      "target": "src/_pytest/python.py:PyCollector._matches_prefix_or_glob_option",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:PyCollector",
      "target": "src/_pytest/python.py:PyCollector.collect",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:PyCollector",
      "target": "src/_pytest/python.py:PyCollector._genfunctions",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:PyCollector",
      "target": "src/_pytest/python.py:PyobjMixin",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/python.py:PyCollector.funcnamefilter",
      "target": "src/_pytest/python.py:PyCollector._matches_prefix_or_glob_option",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:PyCollector.classnamefilter",
      "target": "src/_pytest/python.py:PyCollector._matches_prefix_or_glob_option",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:PyCollector.istestfunction",
      "target": "src/_pytest/python.py:PyCollector.funcnamefilter",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:PyCollector.istestfunction",
      "target": "src/_pytest/python.py:PyCollector.isnosetest",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:PyCollector.istestclass",
      "target": "src/_pytest/python.py:PyCollector.isnosetest",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:PyCollector.istestclass",
      "target": "src/_pytest/python.py:PyCollector.classnamefilter",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:PyCollector.collect",
      "target": "src/_pytest/python.py:pytest_pycollect_makeitem",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:PyCollector._genfunctions",
      "target": "src/_pytest/python.py:Function.from_parent",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:PyCollector._genfunctions",
      "target": "src/_pytest/python.py:Class.from_parent",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:PyCollector._genfunctions",
      "target": "src/_pytest/python.py:Metafunc",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:PyCollector._genfunctions",
      "target": "src/_pytest/python.py:PyobjMixin.cls",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Module",
      "target": "src/_pytest/python.py:Module._getobj",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Module",
      "target": "src/_pytest/python.py:Module.collect",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Module",
      "target": "src/_pytest/python.py:Module._inject_setup_module_fixture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Module",
      "target": "src/_pytest/python.py:Module._inject_setup_function_fixture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Module",
      "target": "src/_pytest/python.py:Module._importtestmodule",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Module",
      "target": "src/_pytest/python.py:PyCollector",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/python.py:Module._getobj",
      "target": "src/_pytest/python.py:Module._importtestmodule",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Module.collect",
      "target": "src/_pytest/python.py:Module._inject_setup_function_fixture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Module.collect",
      "target": "src/_pytest/python.py:Package.collect",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Module.collect",
      "target": "src/_pytest/python.py:PyCollector.collect",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Module.collect",
      "target": "src/_pytest/python.py:Class.collect",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Module.collect",
      "target": "src/_pytest/python.py:Module._inject_setup_module_fixture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Module._inject_setup_module_fixture",
      "target": "src/_pytest/python.py:Module._inject_setup_module_fixture.xunit_setup_module_fixture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Module._inject_setup_module_fixture",
      "target": "src/_pytest/python.py:_get_first_non_fixture_func",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Module._inject_setup_module_fixture.xunit_setup_module_fixture",
      "target": "src/_pytest/python.py:_call_with_optional_argument",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Module._inject_setup_function_fixture",
      "target": "src/_pytest/python.py:Module._inject_setup_function_fixture.xunit_setup_function_fixture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Module._inject_setup_function_fixture",
      "target": "src/_pytest/python.py:_get_first_non_fixture_func",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Module._inject_setup_function_fixture.xunit_setup_function_fixture",
      "target": "src/_pytest/python.py:_call_with_optional_argument",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Package",
      "target": "src/_pytest/python.py:Package.setup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Package",
      "target": "src/_pytest/python.py:Package._recurse",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Package",
      "target": "src/_pytest/python.py:Package._collectfile",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Package",
      "target": "src/_pytest/python.py:Package.collect",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Package",
      "target": "src/_pytest/python.py:Module",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/python.py:Package.setup",
      "target": "src/_pytest/python.py:_call_with_optional_argument",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Package.setup",
      "target": "src/_pytest/python.py:_get_first_non_fixture_func",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Package._collectfile",
      "target": "src/_pytest/python.py:pytest_collect_file",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Package.collect",
      "target": "src/_pytest/python.py:Function.from_parent",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Package.collect",
      "target": "src/_pytest/python.py:Class.from_parent",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Package.collect",
      "target": "src/_pytest/python.py:path_matches_patterns",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Package.collect",
      "target": "src/_pytest/python.py:Package._collectfile",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Class",
      "target": "src/_pytest/python.py:Class.from_parent",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Class",
      "target": "src/_pytest/python.py:Class.newinstance",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Class",
      "target": "src/_pytest/python.py:Class.collect",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Class",
      "target": "src/_pytest/python.py:Class._inject_setup_class_fixture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Class",
      "target": "src/_pytest/python.py:Class._inject_setup_method_fixture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Class",
      "target": "src/_pytest/python.py:PyCollector",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/python.py:Class.from_parent",
      "target": "src/_pytest/python.py:Function.from_parent",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Class.newinstance",
      "target": "src/_pytest/python.py:PyobjMixin.obj",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Class.collect",
      "target": "src/_pytest/python.py:Class._inject_setup_method_fixture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Class.collect",
      "target": "src/_pytest/python.py:Class.newinstance",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Class.collect",
      "target": "src/_pytest/python.py:Class._inject_setup_class_fixture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Class.collect",
      "target": "src/_pytest/python.py:Module.collect",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Class.collect",
      "target": "src/_pytest/python.py:Package.collect",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Class.collect",
      "target": "src/_pytest/python.py:PyCollector.collect",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Class.collect",
      "target": "src/_pytest/python.py:hasnew",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Class.collect",
      "target": "src/_pytest/python.py:hasinit",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Class._inject_setup_class_fixture",
      "target": "src/_pytest/python.py:Class._inject_setup_class_fixture.xunit_setup_class_fixture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Class._inject_setup_class_fixture",
      "target": "src/_pytest/python.py:_get_first_non_fixture_func",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Class._inject_setup_class_fixture.xunit_setup_class_fixture",
      "target": "src/_pytest/python.py:_call_with_optional_argument",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Class._inject_setup_method_fixture",
      "target": "src/_pytest/python.py:Class._inject_setup_method_fixture.xunit_setup_method_fixture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Class._inject_setup_method_fixture",
      "target": "src/_pytest/python.py:_get_first_non_fixture_func",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Class._inject_setup_method_fixture.xunit_setup_method_fixture",
      "target": "src/_pytest/python.py:_call_with_optional_argument",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:IdMaker",
      "target": "src/_pytest/python.py:IdMaker.make_unique_parameterset_ids",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:IdMaker",
      "target": "src/_pytest/python.py:IdMaker._resolve_ids",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:IdMaker",
      "target": "src/_pytest/python.py:IdMaker._idval",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:IdMaker",
      "target": "src/_pytest/python.py:IdMaker._idval_from_function",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:IdMaker",
      "target": "src/_pytest/python.py:IdMaker._idval_from_hook",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:IdMaker",
      "target": "src/_pytest/python.py:IdMaker._idval_from_value",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:IdMaker",
      "target": "src/_pytest/python.py:IdMaker._idval_from_value_required",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:IdMaker",
      "target": "src/_pytest/python.py:IdMaker._idval_from_argname",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:IdMaker.make_unique_parameterset_ids",
      "target": "src/_pytest/python.py:IdMaker._resolve_ids",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:IdMaker._resolve_ids",
      "target": "src/_pytest/python.py:IdMaker._idval",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:IdMaker._resolve_ids",
      "target": "src/_pytest/python.py:IdMaker._idval_from_value_required",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:IdMaker._idval",
      "target": "src/_pytest/python.py:IdMaker._idval_from_function",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:IdMaker._idval",
      "target": "src/_pytest/python.py:IdMaker._idval_from_value",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:IdMaker._idval",
      "target": "src/_pytest/python.py:IdMaker._idval_from_argname",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:IdMaker._idval",
      "target": "src/_pytest/python.py:IdMaker._idval_from_hook",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:IdMaker._idval_from_function",
      "target": "src/_pytest/python.py:IdMaker._idval_from_value",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:IdMaker._idval_from_value",
      "target": "src/_pytest/python.py:_ascii_escaped_by_config",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:IdMaker._idval_from_value_required",
      "target": "src/_pytest/python.py:IdMaker._idval_from_value",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:CallSpec2",
      "target": "src/_pytest/python.py:CallSpec2.setmulti",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:CallSpec2",
      "target": "src/_pytest/python.py:CallSpec2.getparam",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:CallSpec2",
      "target": "src/_pytest/python.py:CallSpec2.id",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Metafunc",
      "target": "src/_pytest/python.py:Metafunc.parametrize",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Metafunc",
      "target": "src/_pytest/python.py:Metafunc._resolve_parameter_set_ids",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Metafunc",
      "target": "src/_pytest/python.py:Metafunc._validate_ids",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Metafunc",
      "target": "src/_pytest/python.py:Metafunc._resolve_arg_value_types",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Metafunc",
      "target": "src/_pytest/python.py:Metafunc._validate_if_using_arg_names",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Metafunc.parametrize",
      "target": "src/_pytest/python.py:CallSpec2",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Metafunc.parametrize",
      "target": "src/_pytest/python.py:Metafunc._resolve_arg_value_types",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Metafunc.parametrize",
      "target": "src/_pytest/python.py:Metafunc._validate_if_using_arg_names",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Metafunc.parametrize",
      "target": "src/_pytest/python.py:_find_parametrized_scope",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Metafunc.parametrize",
      "target": "src/_pytest/python.py:CallSpec2.setmulti",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Metafunc.parametrize",
      "target": "src/_pytest/python.py:Metafunc._resolve_parameter_set_ids",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Metafunc._resolve_parameter_set_ids",
      "target": "src/_pytest/python.py:Metafunc._validate_ids",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Metafunc._resolve_parameter_set_ids",
      "target": "src/_pytest/python.py:IdMaker.make_unique_parameterset_ids",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Metafunc._resolve_parameter_set_ids",
      "target": "src/_pytest/python.py:IdMaker",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:_show_fixtures_per_test",
      "target": "src/_pytest/python.py:_show_fixtures_per_test.get_best_relpath",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:_show_fixtures_per_test",
      "target": "src/_pytest/python.py:_show_fixtures_per_test.write_fixture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:_show_fixtures_per_test",
      "target": "src/_pytest/python.py:_show_fixtures_per_test.write_item",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:_show_fixtures_per_test",
      "target": "src/_pytest/python.py:_show_fixtures_per_test.write_item",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:_show_fixtures_per_test.write_fixture",
      "target": "src/_pytest/python.py:write_docstring",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:_show_fixtures_per_test.write_fixture",
      "target": "src/_pytest/python.py:_pretty_fixture_path",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:_show_fixtures_per_test.write_item",
      "target": "src/_pytest/python.py:_show_fixtures_per_test.write_fixture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:_show_fixtures_per_test.write_item",
      "target": "src/_pytest/python.py:_show_fixtures_per_test.get_best_relpath",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:_showfixtures_main",
      "target": "src/_pytest/python.py:write_docstring",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:_showfixtures_main",
      "target": "src/_pytest/python.py:_pretty_fixture_path",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Function",
      "target": "src/_pytest/python.py:Function.from_parent",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Function",
      "target": "src/_pytest/python.py:Function._initrequest",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Function",
      "target": "src/_pytest/python.py:Function._initrequest",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Function",
      "target": "src/_pytest/python.py:Function.function",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Function",
      "target": "src/_pytest/python.py:Function._getobj",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Function",
      "target": "src/_pytest/python.py:Function._pyfuncitem",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Function",
      "target": "src/_pytest/python.py:Function.runtest",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Function",
      "target": "src/_pytest/python.py:Function.setup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Function",
      "target": "src/_pytest/python.py:Function._traceback_filter",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Function",
      "target": "src/_pytest/python.py:Function.repr_failure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:Function",
      "target": "src/_pytest/python.py:PyobjMixin",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/python.py:Function.from_parent",
      "target": "src/_pytest/python.py:Class.from_parent",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Function._getobj",
      "target": "src/_pytest/python.py:Class.newinstance",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:Function.runtest",
      "target": "src/_pytest/python.py:pytest_pyfunc_call",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/python.py:FunctionDefinition",
      "target": "src/_pytest/python.py:FunctionDefinition.runtest",
      "type": "contains"
    },
    {
      "source": "src/_pytest/python.py:FunctionDefinition",
      "target": "src/_pytest/python.py:Function",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/reports.py",
      "target": "src/_pytest/reports.py:getworkerinfoline",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py",
      "target": "src/_pytest/reports.py:BaseReport",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py",
      "target": "src/_pytest/reports.py:_report_unserialization_failure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py",
      "target": "src/_pytest/reports.py:TestReport",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py",
      "target": "src/_pytest/reports.py:CollectReport",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py",
      "target": "src/_pytest/reports.py:CollectErrorRepr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py",
      "target": "src/_pytest/reports.py:pytest_report_to_serializable",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py",
      "target": "src/_pytest/reports.py:pytest_report_from_serializable",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py",
      "target": "src/_pytest/reports.py:_report_to_json",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py",
      "target": "src/_pytest/reports.py:_report_kwargs_from_json",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:BaseReport",
      "target": "src/_pytest/reports.py:BaseReport.__getattr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:BaseReport",
      "target": "src/_pytest/reports.py:BaseReport.toterminal",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:BaseReport",
      "target": "src/_pytest/reports.py:BaseReport.get_sections",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:BaseReport",
      "target": "src/_pytest/reports.py:BaseReport.longreprtext",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:BaseReport",
      "target": "src/_pytest/reports.py:BaseReport.caplog",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:BaseReport",
      "target": "src/_pytest/reports.py:BaseReport.capstdout",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:BaseReport",
      "target": "src/_pytest/reports.py:BaseReport.capstderr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:BaseReport",
      "target": "src/_pytest/reports.py:BaseReport.passed",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:BaseReport",
      "target": "src/_pytest/reports.py:BaseReport.failed",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:BaseReport",
      "target": "src/_pytest/reports.py:BaseReport.skipped",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:BaseReport",
      "target": "src/_pytest/reports.py:BaseReport.fspath",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:BaseReport",
      "target": "src/_pytest/reports.py:BaseReport.count_towards_summary",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:BaseReport",
      "target": "src/_pytest/reports.py:BaseReport.head_line",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:BaseReport",
      "target": "src/_pytest/reports.py:BaseReport._get_verbose_word",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:BaseReport",
      "target": "src/_pytest/reports.py:BaseReport._to_json",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:BaseReport",
      "target": "src/_pytest/reports.py:BaseReport._from_json",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:BaseReport.toterminal",
      "target": "src/_pytest/reports.py:CollectErrorRepr.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/reports.py:BaseReport.toterminal",
      "target": "src/_pytest/reports.py:getworkerinfoline",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/reports.py:BaseReport.longreprtext",
      "target": "src/_pytest/reports.py:BaseReport.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/reports.py:BaseReport.longreprtext",
      "target": "src/_pytest/reports.py:CollectErrorRepr.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/reports.py:BaseReport.caplog",
      "target": "src/_pytest/reports.py:BaseReport.get_sections",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/reports.py:BaseReport.capstdout",
      "target": "src/_pytest/reports.py:BaseReport.get_sections",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/reports.py:BaseReport.capstderr",
      "target": "src/_pytest/reports.py:BaseReport.get_sections",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/reports.py:BaseReport._to_json",
      "target": "src/_pytest/reports.py:_report_to_json",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/reports.py:BaseReport._from_json",
      "target": "src/_pytest/reports.py:_report_kwargs_from_json",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/reports.py:TestReport",
      "target": "src/_pytest/reports.py:TestReport.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:TestReport",
      "target": "src/_pytest/reports.py:TestReport.from_item_and_call",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:TestReport",
      "target": "src/_pytest/reports.py:BaseReport",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/reports.py:TestReport.from_item_and_call",
      "target": "src/_pytest/reports.py:BaseReport.fspath",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/reports.py:CollectReport",
      "target": "src/_pytest/reports.py:CollectReport.location",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:CollectReport",
      "target": "src/_pytest/reports.py:CollectReport.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:CollectReport",
      "target": "src/_pytest/reports.py:BaseReport",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/reports.py:CollectErrorRepr",
      "target": "src/_pytest/reports.py:CollectErrorRepr.toterminal",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:pytest_report_to_serializable",
      "target": "src/_pytest/reports.py:BaseReport._to_json",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/reports.py:pytest_report_from_serializable",
      "target": "src/_pytest/reports.py:BaseReport._from_json",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/reports.py:_report_to_json",
      "target": "src/_pytest/reports.py:_report_to_json.serialize_repr_entry",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:_report_to_json",
      "target": "src/_pytest/reports.py:_report_to_json.serialize_repr_traceback",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:_report_to_json",
      "target": "src/_pytest/reports.py:_report_to_json.serialize_repr_crash",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:_report_to_json",
      "target": "src/_pytest/reports.py:_report_to_json.serialize_exception_longrepr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:_report_to_json",
      "target": "src/_pytest/reports.py:_report_to_json.serialize_exception_longrepr",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/reports.py:_report_to_json",
      "target": "src/_pytest/reports.py:BaseReport.fspath",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/reports.py:_report_to_json.serialize_repr_traceback",
      "target": "src/_pytest/reports.py:_report_to_json.serialize_repr_entry",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/reports.py:_report_to_json.serialize_exception_longrepr",
      "target": "src/_pytest/reports.py:_report_to_json.serialize_repr_traceback",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/reports.py:_report_to_json.serialize_exception_longrepr",
      "target": "src/_pytest/reports.py:_report_to_json.serialize_repr_crash",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/reports.py:_report_kwargs_from_json",
      "target": "src/_pytest/reports.py:_report_kwargs_from_json.deserialize_repr_entry",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:_report_kwargs_from_json",
      "target": "src/_pytest/reports.py:_report_kwargs_from_json.deserialize_repr_traceback",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:_report_kwargs_from_json",
      "target": "src/_pytest/reports.py:_report_kwargs_from_json.deserialize_repr_traceback",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/reports.py:_report_kwargs_from_json",
      "target": "src/_pytest/reports.py:_report_kwargs_from_json.deserialize_repr_crash",
      "type": "contains"
    },
    {
      "source": "src/_pytest/reports.py:_report_kwargs_from_json",
      "target": "src/_pytest/reports.py:_report_kwargs_from_json.deserialize_repr_crash",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/reports.py:_report_kwargs_from_json.deserialize_repr_entry",
      "target": "src/_pytest/reports.py:_report_unserialization_failure",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/reports.py:_report_kwargs_from_json.deserialize_repr_traceback",
      "target": "src/_pytest/reports.py:_report_kwargs_from_json.deserialize_repr_entry",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py",
      "target": "src/_pytest/doctest.py:pytest_addoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py",
      "target": "src/_pytest/doctest.py:pytest_unconfigure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py",
      "target": "src/_pytest/doctest.py:pytest_collect_file",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py",
      "target": "src/_pytest/doctest.py:_is_setup_py",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py",
      "target": "src/_pytest/doctest.py:_is_doctest",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py",
      "target": "src/_pytest/doctest.py:_is_main_py",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py",
      "target": "src/_pytest/doctest.py:ReprFailDoctest",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py",
      "target": "src/_pytest/doctest.py:MultipleDoctestFailures",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py",
      "target": "src/_pytest/doctest.py:_init_runner_class",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py",
      "target": "src/_pytest/doctest.py:_get_runner",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py",
      "target": "src/_pytest/doctest.py:DoctestItem",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py",
      "target": "src/_pytest/doctest.py:_get_flag_lookup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py",
      "target": "src/_pytest/doctest.py:get_optionflags",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py",
      "target": "src/_pytest/doctest.py:_get_continue_on_failure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py",
      "target": "src/_pytest/doctest.py:DoctestTextfile",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py",
      "target": "src/_pytest/doctest.py:_check_all_skipped",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py",
      "target": "src/_pytest/doctest.py:_is_mocked",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py",
      "target": "src/_pytest/doctest.py:_patch_unwrap_mock_aware",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py",
      "target": "src/_pytest/doctest.py:DoctestModule",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py",
      "target": "src/_pytest/doctest.py:_setup_fixtures",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py",
      "target": "src/_pytest/doctest.py:_init_checker_class",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py",
      "target": "src/_pytest/doctest.py:_get_checker",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py",
      "target": "src/_pytest/doctest.py:_get_allow_unicode_flag",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py",
      "target": "src/_pytest/doctest.py:_get_allow_bytes_flag",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py",
      "target": "src/_pytest/doctest.py:_get_number_flag",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py",
      "target": "src/_pytest/doctest.py:_get_report_choice",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py",
      "target": "src/_pytest/doctest.py:doctest_namespace",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py:pytest_collect_file",
      "target": "src/_pytest/doctest.py:DoctestItem.from_parent",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:pytest_collect_file",
      "target": "src/_pytest/doctest.py:_is_setup_py",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:pytest_collect_file",
      "target": "src/_pytest/doctest.py:_is_main_py",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:pytest_collect_file",
      "target": "src/_pytest/doctest.py:_is_doctest",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:ReprFailDoctest",
      "target": "src/_pytest/doctest.py:ReprFailDoctest.toterminal",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py:_init_runner_class",
      "target": "src/_pytest/doctest.py:_init_runner_class.PytestDoctestRunner",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py:_init_runner_class.PytestDoctestRunner",
      "target": "src/_pytest/doctest.py:_init_runner_class.PytestDoctestRunner.report_failure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py:_init_runner_class.PytestDoctestRunner",
      "target": "src/_pytest/doctest.py:_init_runner_class.PytestDoctestRunner.report_unexpected_exception",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py:_get_runner",
      "target": "src/_pytest/doctest.py:_init_runner_class",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestItem",
      "target": "src/_pytest/doctest.py:DoctestItem.from_parent",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestItem",
      "target": "src/_pytest/doctest.py:DoctestItem.setup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestItem",
      "target": "src/_pytest/doctest.py:DoctestItem.runtest",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestItem",
      "target": "src/_pytest/doctest.py:DoctestItem._disable_output_capturing_for_darwin",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestItem",
      "target": "src/_pytest/doctest.py:DoctestItem.repr_failure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestItem",
      "target": "src/_pytest/doctest.py:DoctestItem.reportinfo",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestItem.setup",
      "target": "src/_pytest/doctest.py:_setup_fixtures",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestItem.runtest",
      "target": "src/_pytest/doctest.py:_check_all_skipped",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestItem.runtest",
      "target": "src/_pytest/doctest.py:DoctestItem._disable_output_capturing_for_darwin",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestItem.runtest",
      "target": "src/_pytest/doctest.py:MultipleDoctestFailures",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestItem.repr_failure",
      "target": "src/_pytest/doctest.py:_get_checker",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestItem.repr_failure",
      "target": "src/_pytest/doctest.py:ReprFailDoctest",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestItem.repr_failure",
      "target": "src/_pytest/doctest.py:_get_report_choice",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:_get_flag_lookup",
      "target": "src/_pytest/doctest.py:_get_number_flag",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:_get_flag_lookup",
      "target": "src/_pytest/doctest.py:_get_allow_unicode_flag",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:_get_flag_lookup",
      "target": "src/_pytest/doctest.py:_get_allow_bytes_flag",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:get_optionflags",
      "target": "src/_pytest/doctest.py:_get_flag_lookup",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestTextfile",
      "target": "src/_pytest/doctest.py:DoctestTextfile.collect",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestTextfile.collect",
      "target": "src/_pytest/doctest.py:_get_checker",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestTextfile.collect",
      "target": "src/_pytest/doctest.py:get_optionflags",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestTextfile.collect",
      "target": "src/_pytest/doctest.py:DoctestItem.from_parent",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestTextfile.collect",
      "target": "src/_pytest/doctest.py:_get_continue_on_failure",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestTextfile.collect",
      "target": "src/_pytest/doctest.py:_get_runner",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:_patch_unwrap_mock_aware",
      "target": "src/_pytest/doctest.py:_patch_unwrap_mock_aware._mock_aware_unwrap",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py:_patch_unwrap_mock_aware._mock_aware_unwrap",
      "target": "src/_pytest/doctest.py:_is_mocked",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestModule",
      "target": "src/_pytest/doctest.py:DoctestModule.collect",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestModule.collect",
      "target": "src/_pytest/doctest.py:DoctestModule.collect.MockAwareDocTestFinder",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestModule.collect",
      "target": "src/_pytest/doctest.py:DoctestModule.collect.MockAwareDocTestFinder",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestModule.collect",
      "target": "src/_pytest/doctest.py:_get_checker",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestModule.collect",
      "target": "src/_pytest/doctest.py:get_optionflags",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestModule.collect",
      "target": "src/_pytest/doctest.py:DoctestItem.from_parent",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestModule.collect",
      "target": "src/_pytest/doctest.py:_get_continue_on_failure",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestModule.collect",
      "target": "src/_pytest/doctest.py:_get_runner",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestModule.collect.MockAwareDocTestFinder",
      "target": "src/_pytest/doctest.py:DoctestModule.collect.MockAwareDocTestFinder._find_lineno",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestModule.collect.MockAwareDocTestFinder",
      "target": "src/_pytest/doctest.py:DoctestModule.collect.MockAwareDocTestFinder._find",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestModule.collect.MockAwareDocTestFinder._find",
      "target": "src/_pytest/doctest.py:_is_mocked",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:DoctestModule.collect.MockAwareDocTestFinder._find",
      "target": "src/_pytest/doctest.py:_patch_unwrap_mock_aware",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:_setup_fixtures",
      "target": "src/_pytest/doctest.py:_setup_fixtures.func",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py:_init_checker_class",
      "target": "src/_pytest/doctest.py:_init_checker_class.LiteralsOutputChecker",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py:_init_checker_class.LiteralsOutputChecker",
      "target": "src/_pytest/doctest.py:_init_checker_class.LiteralsOutputChecker.check_output",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py:_init_checker_class.LiteralsOutputChecker",
      "target": "src/_pytest/doctest.py:_init_checker_class.LiteralsOutputChecker._remove_unwanted_precision",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py:_init_checker_class.LiteralsOutputChecker.check_output",
      "target": "src/_pytest/doctest.py:_init_checker_class.LiteralsOutputChecker.check_output.remove_prefixes",
      "type": "contains"
    },
    {
      "source": "src/_pytest/doctest.py:_init_checker_class.LiteralsOutputChecker.check_output",
      "target": "src/_pytest/doctest.py:_init_checker_class.LiteralsOutputChecker.check_output.remove_prefixes",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:_init_checker_class.LiteralsOutputChecker.check_output",
      "target": "src/_pytest/doctest.py:_get_allow_unicode_flag",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:_init_checker_class.LiteralsOutputChecker.check_output",
      "target": "src/_pytest/doctest.py:_get_allow_bytes_flag",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:_init_checker_class.LiteralsOutputChecker.check_output",
      "target": "src/_pytest/doctest.py:_init_checker_class.LiteralsOutputChecker._remove_unwanted_precision",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:_init_checker_class.LiteralsOutputChecker.check_output",
      "target": "src/_pytest/doctest.py:_get_number_flag",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/doctest.py:_get_checker",
      "target": "src/_pytest/doctest.py:_init_checker_class",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/setuponly.py",
      "target": "src/_pytest/setuponly.py:pytest_addoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/setuponly.py",
      "target": "src/_pytest/setuponly.py:pytest_fixture_setup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/setuponly.py",
      "target": "src/_pytest/setuponly.py:pytest_fixture_post_finalizer",
      "type": "contains"
    },
    {
      "source": "src/_pytest/setuponly.py",
      "target": "src/_pytest/setuponly.py:_show_fixture_action",
      "type": "contains"
    },
    {
      "source": "src/_pytest/setuponly.py",
      "target": "src/_pytest/setuponly.py:pytest_cmdline_main",
      "type": "contains"
    },
    {
      "source": "src/_pytest/setuponly.py:pytest_fixture_setup",
      "target": "src/_pytest/setuponly.py:_show_fixture_action",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/setuponly.py:pytest_fixture_post_finalizer",
      "target": "src/_pytest/setuponly.py:_show_fixture_action",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/nose.py",
      "target": "src/_pytest/nose.py:pytest_runtest_setup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nose.py",
      "target": "src/_pytest/nose.py:call_optional",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nose.py:pytest_runtest_setup",
      "target": "src/_pytest/nose.py:call_optional",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/nodes.py",
      "target": "src/_pytest/nodes.py:iterparentnodeids",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py",
      "target": "src/_pytest/nodes.py:_check_path",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py",
      "target": "src/_pytest/nodes.py:_imply_path",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py",
      "target": "src/_pytest/nodes.py:NodeMeta",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py",
      "target": "src/_pytest/nodes.py:Node",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py",
      "target": "src/_pytest/nodes.py:get_fslocation_from_item",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py",
      "target": "src/_pytest/nodes.py:Collector",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py",
      "target": "src/_pytest/nodes.py:_check_initialpaths_for_relpath",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py",
      "target": "src/_pytest/nodes.py:FSCollector",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py",
      "target": "src/_pytest/nodes.py:File",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py",
      "target": "src/_pytest/nodes.py:Item",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py",
      "target": "src/_pytest/warning_types.py:PytestDeprecationWarning",
      "type": "imports"
    },
    {
      "source": "src/_pytest/nodes.py:_imply_path",
      "target": "src/_pytest/nodes.py:Node.warn",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/nodes.py:_imply_path",
      "target": "src/_pytest/nodes.py:_check_path",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/nodes.py:NodeMeta",
      "target": "src/_pytest/nodes.py:NodeMeta.__call__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:NodeMeta",
      "target": "src/_pytest/nodes.py:NodeMeta._create",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:NodeMeta._create",
      "target": "src/_pytest/nodes.py:Node.warn",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/nodes.py:NodeMeta._create",
      "target": "src/_pytest/nodes.py:NodeMeta.__call__",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/nodes.py:NodeMeta._create",
      "target": "src/_pytest/warning_types.py:PytestDeprecationWarning",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/nodes.py:Node",
      "target": "src/_pytest/nodes.py:Node.from_parent",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Node",
      "target": "src/_pytest/nodes.py:Node.ihook",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Node",
      "target": "src/_pytest/nodes.py:Node.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Node",
      "target": "src/_pytest/nodes.py:Node.warn",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Node",
      "target": "src/_pytest/nodes.py:Node.nodeid",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Node",
      "target": "src/_pytest/nodes.py:Node.__hash__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Node",
      "target": "src/_pytest/nodes.py:Node.setup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Node",
      "target": "src/_pytest/nodes.py:Node.teardown",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Node",
      "target": "src/_pytest/nodes.py:Node.listchain",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Node",
      "target": "src/_pytest/nodes.py:Node.add_marker",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Node",
      "target": "src/_pytest/nodes.py:Node.iter_markers",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Node",
      "target": "src/_pytest/nodes.py:Node.iter_markers_with_node",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Node",
      "target": "src/_pytest/nodes.py:Node.get_closest_marker",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Node",
      "target": "src/_pytest/nodes.py:Node.get_closest_marker",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Node",
      "target": "src/_pytest/nodes.py:Node.get_closest_marker",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Node",
      "target": "src/_pytest/nodes.py:Node.listextrakeywords",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Node",
      "target": "src/_pytest/nodes.py:Node.listnames",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Node",
      "target": "src/_pytest/nodes.py:Node.addfinalizer",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Node",
      "target": "src/_pytest/nodes.py:Node.getparent",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Node",
      "target": "src/_pytest/nodes.py:Node._traceback_filter",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Node",
      "target": "src/_pytest/nodes.py:Node._repr_failure_py",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Node",
      "target": "src/_pytest/nodes.py:Node.repr_failure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Node",
      "target": "src/_pytest/nodes.py:_imply_path",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/nodes.py:Node.from_parent",
      "target": "src/_pytest/nodes.py:NodeMeta._create",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/nodes.py:Node.ihook",
      "target": "src/_pytest/nodes.py:FSCollector.gethookproxy",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/nodes.py:Node.warn",
      "target": "src/_pytest/nodes.py:get_fslocation_from_item",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/nodes.py:Node.iter_markers",
      "target": "src/_pytest/nodes.py:Node.iter_markers_with_node",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/nodes.py:Node.iter_markers_with_node",
      "target": "src/_pytest/nodes.py:Node.listchain",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/nodes.py:Node.get_closest_marker",
      "target": "src/_pytest/nodes.py:Node.iter_markers",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/nodes.py:Node.listextrakeywords",
      "target": "src/_pytest/nodes.py:Node.listchain",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/nodes.py:Node.listnames",
      "target": "src/_pytest/nodes.py:Node.listchain",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/nodes.py:Node.repr_failure",
      "target": "src/_pytest/nodes.py:Node._repr_failure_py",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/nodes.py:Collector",
      "target": "src/_pytest/nodes.py:Collector.CollectError",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Collector",
      "target": "src/_pytest/nodes.py:Collector.collect",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Collector",
      "target": "src/_pytest/nodes.py:Collector.repr_failure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Collector",
      "target": "src/_pytest/nodes.py:Collector._traceback_filter",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Collector",
      "target": "src/_pytest/nodes.py:Node",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/nodes.py:Collector.repr_failure",
      "target": "src/_pytest/nodes.py:Node._repr_failure_py",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/nodes.py:FSCollector",
      "target": "src/_pytest/nodes.py:FSCollector.from_parent",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:FSCollector",
      "target": "src/_pytest/nodes.py:FSCollector.gethookproxy",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:FSCollector",
      "target": "src/_pytest/nodes.py:FSCollector.isinitpath",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:FSCollector",
      "target": "src/_pytest/nodes.py:_imply_path",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/nodes.py:FSCollector",
      "target": "src/_pytest/nodes.py:_check_initialpaths_for_relpath",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/nodes.py:FSCollector",
      "target": "src/_pytest/nodes.py:Collector",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/nodes.py:FSCollector.from_parent",
      "target": "src/_pytest/nodes.py:Node.from_parent",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/nodes.py:FSCollector.gethookproxy",
      "target": "src/_pytest/nodes.py:Node.warn",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/nodes.py:FSCollector.isinitpath",
      "target": "src/_pytest/nodes.py:Node.warn",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/nodes.py:File",
      "target": "src/_pytest/nodes.py:FSCollector",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/nodes.py:Item",
      "target": "src/_pytest/nodes.py:Item._check_item_and_collector_diamond_inheritance",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Item",
      "target": "src/_pytest/nodes.py:Item._check_item_and_collector_diamond_inheritance",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/nodes.py:Item",
      "target": "src/_pytest/nodes.py:Item.runtest",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Item",
      "target": "src/_pytest/nodes.py:Item.add_report_section",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Item",
      "target": "src/_pytest/nodes.py:Item.reportinfo",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Item",
      "target": "src/_pytest/nodes.py:Item.location",
      "type": "contains"
    },
    {
      "source": "src/_pytest/nodes.py:Item",
      "target": "src/_pytest/nodes.py:Node",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/nodes.py:Item._check_item_and_collector_diamond_inheritance",
      "target": "src/_pytest/nodes.py:Node.warn",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/nodes.py:Item.location",
      "target": "src/_pytest/nodes.py:Item.reportinfo",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/threadexception.py",
      "target": "src/_pytest/threadexception.py:catch_threading_exception",
      "type": "contains"
    },
    {
      "source": "src/_pytest/threadexception.py",
      "target": "src/_pytest/threadexception.py:thread_exception_runtest_hook",
      "type": "contains"
    },
    {
      "source": "src/_pytest/threadexception.py",
      "target": "src/_pytest/threadexception.py:pytest_runtest_setup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/threadexception.py",
      "target": "src/_pytest/threadexception.py:pytest_runtest_call",
      "type": "contains"
    },
    {
      "source": "src/_pytest/threadexception.py",
      "target": "src/_pytest/threadexception.py:pytest_runtest_teardown",
      "type": "contains"
    },
    {
      "source": "src/_pytest/threadexception.py:catch_threading_exception",
      "target": "src/_pytest/threadexception.py:catch_threading_exception._hook",
      "type": "contains"
    },
    {
      "source": "src/_pytest/threadexception.py:catch_threading_exception",
      "target": "src/_pytest/threadexception.py:catch_threading_exception.__enter__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/threadexception.py:catch_threading_exception",
      "target": "src/_pytest/threadexception.py:catch_threading_exception.__exit__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/threadexception.py:thread_exception_runtest_hook",
      "target": "src/_pytest/threadexception.py:catch_threading_exception",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/threadexception.py:pytest_runtest_setup",
      "target": "src/_pytest/threadexception.py:thread_exception_runtest_hook",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/threadexception.py:pytest_runtest_call",
      "target": "src/_pytest/threadexception.py:thread_exception_runtest_hook",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/threadexception.py:pytest_runtest_teardown",
      "target": "src/_pytest/threadexception.py:thread_exception_runtest_hook",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/main.py",
      "target": "src/_pytest/main.py:pytest_addoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py",
      "target": "src/_pytest/main.py:validate_basetemp",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py",
      "target": "src/_pytest/main.py:wrap_session",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py",
      "target": "src/_pytest/main.py:pytest_cmdline_main",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py",
      "target": "src/_pytest/main.py:_main",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py",
      "target": "src/_pytest/main.py:pytest_collection",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py",
      "target": "src/_pytest/main.py:pytest_runtestloop",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py",
      "target": "src/_pytest/main.py:_in_venv",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py",
      "target": "src/_pytest/main.py:pytest_ignore_collect",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py",
      "target": "src/_pytest/main.py:pytest_collection_modifyitems",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py",
      "target": "src/_pytest/main.py:FSHookProxy",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py",
      "target": "src/_pytest/main.py:Interrupted",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py",
      "target": "src/_pytest/main.py:Failed",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py",
      "target": "src/_pytest/main.py:_bestrelpath_cache",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py",
      "target": "src/_pytest/main.py:Session",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py",
      "target": "src/_pytest/main.py:search_pypath",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py",
      "target": "src/_pytest/main.py:resolve_collection_argument",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py",
      "target": "src/_pytest/config/compat.py:PathAwareHookProxy",
      "type": "imports"
    },
    {
      "source": "src/_pytest/main.py:validate_basetemp",
      "target": "src/_pytest/main.py:validate_basetemp.is_ancestor",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py:validate_basetemp",
      "target": "src/_pytest/main.py:validate_basetemp.is_ancestor",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/main.py:wrap_session",
      "target": "src/_pytest/main.py:Session.from_config",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/main.py:pytest_cmdline_main",
      "target": "src/_pytest/main.py:wrap_session",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/main.py:_main",
      "target": "src/_pytest/main.py:pytest_runtestloop",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/main.py:_main",
      "target": "src/_pytest/main.py:pytest_collection",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/main.py:pytest_collection",
      "target": "src/_pytest/main.py:Session.perform_collect",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/main.py:pytest_runtestloop",
      "target": "src/_pytest/main.py:Failed",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/main.py:pytest_runtestloop",
      "target": "src/_pytest/main.py:Interrupted",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/main.py:pytest_ignore_collect",
      "target": "src/_pytest/main.py:_in_venv",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/main.py:FSHookProxy",
      "target": "src/_pytest/main.py:FSHookProxy.__getattr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py:_bestrelpath_cache",
      "target": "src/_pytest/main.py:_bestrelpath_cache.__missing__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py:Session",
      "target": "src/_pytest/main.py:Session.from_config",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py:Session",
      "target": "src/_pytest/main.py:Session.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py:Session",
      "target": "src/_pytest/main.py:Session.startpath",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py:Session",
      "target": "src/_pytest/main.py:Session._node_location_to_relpath",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py:Session",
      "target": "src/_pytest/main.py:Session.pytest_collectstart",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py:Session",
      "target": "src/_pytest/main.py:Session.pytest_runtest_logreport",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py:Session",
      "target": "src/_pytest/main.py:Session.isinitpath",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py:Session",
      "target": "src/_pytest/main.py:Session.gethookproxy",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py:Session",
      "target": "src/_pytest/main.py:Session._recurse",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py:Session",
      "target": "src/_pytest/main.py:Session._collectfile",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py:Session",
      "target": "src/_pytest/main.py:Session.perform_collect",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py:Session",
      "target": "src/_pytest/main.py:Session.perform_collect",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py:Session",
      "target": "src/_pytest/main.py:Session.perform_collect",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py:Session",
      "target": "src/_pytest/main.py:Session.collect",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py:Session",
      "target": "src/_pytest/main.py:Session.genitems",
      "type": "contains"
    },
    {
      "source": "src/_pytest/main.py:Session",
      "target": "src/_pytest/main.py:_bestrelpath_cache",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/main.py:Session.pytest_collectstart",
      "target": "src/_pytest/main.py:Failed",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/main.py:Session.pytest_collectstart",
      "target": "src/_pytest/main.py:Interrupted",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/main.py:Session.gethookproxy",
      "target": "src/_pytest/config/compat.py:PathAwareHookProxy",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/main.py:Session.gethookproxy",
      "target": "src/_pytest/main.py:FSHookProxy",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/main.py:Session._recurse",
      "target": "src/_pytest/main.py:pytest_ignore_collect",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/main.py:Session._recurse",
      "target": "src/_pytest/main.py:Session.gethookproxy",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/main.py:Session._collectfile",
      "target": "src/_pytest/main.py:pytest_ignore_collect",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/main.py:Session._collectfile",
      "target": "src/_pytest/main.py:Session.gethookproxy",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/main.py:Session._collectfile",
      "target": "src/_pytest/main.py:Session.isinitpath",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/main.py:Session.perform_collect",
      "target": "src/_pytest/main.py:resolve_collection_argument",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/main.py:Session.perform_collect",
      "target": "src/_pytest/main.py:pytest_collection_modifyitems",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/main.py:Session.perform_collect",
      "target": "src/_pytest/main.py:Session.genitems",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/main.py:Session.collect",
      "target": "src/_pytest/main.py:Session._collectfile",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/main.py:resolve_collection_argument",
      "target": "src/_pytest/main.py:search_pypath",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/monkeypatch.py",
      "target": "src/_pytest/monkeypatch.py:monkeypatch",
      "type": "contains"
    },
    {
      "source": "src/_pytest/monkeypatch.py",
      "target": "src/_pytest/monkeypatch.py:resolve",
      "type": "contains"
    },
    {
      "source": "src/_pytest/monkeypatch.py",
      "target": "src/_pytest/monkeypatch.py:annotated_getattr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/monkeypatch.py",
      "target": "src/_pytest/monkeypatch.py:derive_importpath",
      "type": "contains"
    },
    {
      "source": "src/_pytest/monkeypatch.py",
      "target": "src/_pytest/monkeypatch.py:Notset",
      "type": "contains"
    },
    {
      "source": "src/_pytest/monkeypatch.py",
      "target": "src/_pytest/monkeypatch.py:MonkeyPatch",
      "type": "contains"
    },
    {
      "source": "src/_pytest/monkeypatch.py:monkeypatch",
      "target": "src/_pytest/monkeypatch.py:MonkeyPatch.undo",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/monkeypatch.py:monkeypatch",
      "target": "src/_pytest/monkeypatch.py:MonkeyPatch",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/monkeypatch.py:resolve",
      "target": "src/_pytest/monkeypatch.py:annotated_getattr",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/monkeypatch.py:derive_importpath",
      "target": "src/_pytest/monkeypatch.py:resolve",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/monkeypatch.py:derive_importpath",
      "target": "src/_pytest/monkeypatch.py:annotated_getattr",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/monkeypatch.py:Notset",
      "target": "src/_pytest/monkeypatch.py:Notset.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/monkeypatch.py:MonkeyPatch",
      "target": "src/_pytest/monkeypatch.py:MonkeyPatch.context",
      "type": "contains"
    },
    {
      "source": "src/_pytest/monkeypatch.py:MonkeyPatch",
      "target": "src/_pytest/monkeypatch.py:MonkeyPatch.setattr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/monkeypatch.py:MonkeyPatch",
      "target": "src/_pytest/monkeypatch.py:MonkeyPatch.setattr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/monkeypatch.py:MonkeyPatch",
      "target": "src/_pytest/monkeypatch.py:MonkeyPatch.setattr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/monkeypatch.py:MonkeyPatch",
      "target": "src/_pytest/monkeypatch.py:MonkeyPatch.delattr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/monkeypatch.py:MonkeyPatch",
      "target": "src/_pytest/monkeypatch.py:MonkeyPatch.setitem",
      "type": "contains"
    },
    {
      "source": "src/_pytest/monkeypatch.py:MonkeyPatch",
      "target": "src/_pytest/monkeypatch.py:MonkeyPatch.delitem",
      "type": "contains"
    },
    {
      "source": "src/_pytest/monkeypatch.py:MonkeyPatch",
      "target": "src/_pytest/monkeypatch.py:MonkeyPatch.setenv",
      "type": "contains"
    },
    {
      "source": "src/_pytest/monkeypatch.py:MonkeyPatch",
      "target": "src/_pytest/monkeypatch.py:MonkeyPatch.delenv",
      "type": "contains"
    },
    {
      "source": "src/_pytest/monkeypatch.py:MonkeyPatch",
      "target": "src/_pytest/monkeypatch.py:MonkeyPatch.syspath_prepend",
      "type": "contains"
    },
    {
      "source": "src/_pytest/monkeypatch.py:MonkeyPatch",
      "target": "src/_pytest/monkeypatch.py:MonkeyPatch.chdir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/monkeypatch.py:MonkeyPatch",
      "target": "src/_pytest/monkeypatch.py:MonkeyPatch.undo",
      "type": "contains"
    },
    {
      "source": "src/_pytest/monkeypatch.py:MonkeyPatch.context",
      "target": "src/_pytest/monkeypatch.py:MonkeyPatch.undo",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/monkeypatch.py:MonkeyPatch.setattr",
      "target": "src/_pytest/monkeypatch.py:derive_importpath",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/monkeypatch.py:MonkeyPatch.delattr",
      "target": "src/_pytest/monkeypatch.py:derive_importpath",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/monkeypatch.py:MonkeyPatch.setenv",
      "target": "src/_pytest/monkeypatch.py:MonkeyPatch.setitem",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/monkeypatch.py:MonkeyPatch.delenv",
      "target": "src/_pytest/monkeypatch.py:MonkeyPatch.delitem",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/monkeypatch.py:MonkeyPatch.undo",
      "target": "src/_pytest/monkeypatch.py:MonkeyPatch.setattr",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/monkeypatch.py:MonkeyPatch.undo",
      "target": "src/_pytest/monkeypatch.py:MonkeyPatch.chdir",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/monkeypatch.py:MonkeyPatch.undo",
      "target": "src/_pytest/monkeypatch.py:MonkeyPatch.delattr",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/legacypath.py",
      "target": "src/_pytest/legacypath.py:Testdir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py",
      "target": "src/_pytest/legacypath.py:LegacyTestdirPlugin",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py",
      "target": "src/_pytest/legacypath.py:TempdirFactory",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py",
      "target": "src/_pytest/legacypath.py:LegacyTmpdirPlugin",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py",
      "target": "src/_pytest/legacypath.py:Cache_makedir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py",
      "target": "src/_pytest/legacypath.py:FixtureRequest_fspath",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py",
      "target": "src/_pytest/legacypath.py:TerminalReporter_startdir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py",
      "target": "src/_pytest/legacypath.py:Config_invocation_dir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py",
      "target": "src/_pytest/legacypath.py:Config_rootdir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py",
      "target": "src/_pytest/legacypath.py:Config_inifile",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py",
      "target": "src/_pytest/legacypath.py:Session_stardir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py",
      "target": "src/_pytest/legacypath.py:Config__getini_unknown_type",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py",
      "target": "src/_pytest/legacypath.py:Node_fspath",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py",
      "target": "src/_pytest/legacypath.py:Node_fspath_set",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py",
      "target": "src/_pytest/legacypath.py:pytest_load_initial_conftests",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py",
      "target": "src/_pytest/legacypath.py:pytest_configure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py",
      "target": "src/_pytest/legacypath.py:pytest_plugin_registered",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.tmpdir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.test_tmproot",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.request",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.plugins",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.plugins",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.monkeypatch",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.make_hook_recorder",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.chdir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.finalize",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.makefile",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.makeconftest",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.makeini",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.getinicfg",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.makepyprojecttoml",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.makepyfile",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.maketxtfile",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.syspathinsert",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.mkdir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.mkpydir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.copy_example",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.getnode",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.getpathnode",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.genitems",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.runitem",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.inline_runsource",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.inline_genitems",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.inline_run",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.runpytest_inprocess",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.runpytest",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.parseconfig",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.parseconfigure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.getitem",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.getitems",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.getmodulecol",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.collect_by_name",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.popen",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.run",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.runpython",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.runpython_c",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.runpytest_subprocess",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.spawn_pytest",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.spawn",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Testdir",
      "target": "src/_pytest/legacypath.py:Testdir.__str__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:LegacyTestdirPlugin",
      "target": "src/_pytest/legacypath.py:LegacyTestdirPlugin.testdir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:LegacyTestdirPlugin.testdir",
      "target": "src/_pytest/legacypath.py:Testdir",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/legacypath.py:TempdirFactory",
      "target": "src/_pytest/legacypath.py:TempdirFactory.mktemp",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:TempdirFactory",
      "target": "src/_pytest/legacypath.py:TempdirFactory.getbasetemp",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:LegacyTmpdirPlugin",
      "target": "src/_pytest/legacypath.py:LegacyTmpdirPlugin.tmpdir_factory",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:LegacyTmpdirPlugin",
      "target": "src/_pytest/legacypath.py:LegacyTmpdirPlugin.tmpdir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/legacypath.py:Cache_makedir",
      "target": "src/_pytest/legacypath.py:Testdir.mkdir",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/legacypath.py:pytest_configure",
      "target": "src/_pytest/legacypath.py:TempdirFactory",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/setupplan.py",
      "target": "src/_pytest/setupplan.py:pytest_addoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/setupplan.py",
      "target": "src/_pytest/setupplan.py:pytest_fixture_setup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/setupplan.py",
      "target": "src/_pytest/setupplan.py:pytest_cmdline_main",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:_ignore_error",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:get_lock_path",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:on_rm_rf_error",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:ensure_extended_length_path",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:get_extended_length_path_str",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:rm_rf",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:find_prefixed",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:extract_suffixes",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:find_suffixes",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:parse_num",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:_force_symlink",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:make_numbered_dir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:create_cleanup_lock",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:register_cleanup_lock_removal",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:maybe_delete_a_numbered_dir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:ensure_deletable",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:try_cleanup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:cleanup_candidates",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:cleanup_dead_symlinks",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:cleanup_numbered_dir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:make_numbered_dir_with_cleanup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:resolve_from_str",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:fnmatch_ex",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:parts",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:symlink_or_skip",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:ImportMode",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:ImportPathMismatchError",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:import_path",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:_is_same",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:_is_same",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:module_name_from_path",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:insert_missing_modules",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:resolve_package_path",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:scandir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:visit",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:absolutepath",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:commonpath",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:bestrelpath",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py",
      "target": "src/_pytest/pathlib.py:copytree",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py:on_rm_rf_error",
      "target": "src/_pytest/pathlib.py:on_rm_rf_error.chmod_rw",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py:on_rm_rf_error",
      "target": "src/_pytest/pathlib.py:on_rm_rf_error.chmod_rw",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:ensure_extended_length_path",
      "target": "src/_pytest/pathlib.py:get_extended_length_path_str",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:rm_rf",
      "target": "src/_pytest/pathlib.py:ensure_extended_length_path",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:find_suffixes",
      "target": "src/_pytest/pathlib.py:extract_suffixes",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:find_suffixes",
      "target": "src/_pytest/pathlib.py:find_prefixed",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:make_numbered_dir",
      "target": "src/_pytest/pathlib.py:find_suffixes",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:make_numbered_dir",
      "target": "src/_pytest/pathlib.py:_force_symlink",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:create_cleanup_lock",
      "target": "src/_pytest/pathlib.py:get_lock_path",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:register_cleanup_lock_removal",
      "target": "src/_pytest/pathlib.py:register_cleanup_lock_removal.cleanup_on_exit",
      "type": "contains"
    },
    {
      "source": "src/_pytest/pathlib.py:maybe_delete_a_numbered_dir",
      "target": "src/_pytest/pathlib.py:rm_rf",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:maybe_delete_a_numbered_dir",
      "target": "src/_pytest/pathlib.py:ensure_extended_length_path",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:maybe_delete_a_numbered_dir",
      "target": "src/_pytest/pathlib.py:create_cleanup_lock",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:ensure_deletable",
      "target": "src/_pytest/pathlib.py:get_lock_path",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:try_cleanup",
      "target": "src/_pytest/pathlib.py:ensure_deletable",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:try_cleanup",
      "target": "src/_pytest/pathlib.py:maybe_delete_a_numbered_dir",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:cleanup_candidates",
      "target": "src/_pytest/pathlib.py:extract_suffixes",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:cleanup_candidates",
      "target": "src/_pytest/pathlib.py:find_suffixes",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:cleanup_candidates",
      "target": "src/_pytest/pathlib.py:find_prefixed",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:cleanup_numbered_dir",
      "target": "src/_pytest/pathlib.py:cleanup_dead_symlinks",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:cleanup_numbered_dir",
      "target": "src/_pytest/pathlib.py:cleanup_candidates",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:cleanup_numbered_dir",
      "target": "src/_pytest/pathlib.py:try_cleanup",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:make_numbered_dir_with_cleanup",
      "target": "src/_pytest/pathlib.py:create_cleanup_lock",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:make_numbered_dir_with_cleanup",
      "target": "src/_pytest/pathlib.py:make_numbered_dir",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:make_numbered_dir_with_cleanup",
      "target": "src/_pytest/pathlib.py:register_cleanup_lock_removal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:import_path",
      "target": "src/_pytest/pathlib.py:ImportPathMismatchError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:import_path",
      "target": "src/_pytest/pathlib.py:_is_same",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:import_path",
      "target": "src/_pytest/pathlib.py:module_name_from_path",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:import_path",
      "target": "src/_pytest/pathlib.py:ImportMode",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:import_path",
      "target": "src/_pytest/pathlib.py:insert_missing_modules",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:import_path",
      "target": "src/_pytest/pathlib.py:resolve_package_path",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:scandir",
      "target": "src/_pytest/pathlib.py:_ignore_error",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:visit",
      "target": "src/_pytest/pathlib.py:scandir",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:bestrelpath",
      "target": "src/_pytest/pathlib.py:commonpath",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/pathlib.py:copytree",
      "target": "src/_pytest/pathlib.py:visit",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/scope.py",
      "target": "src/_pytest/scope.py:Scope",
      "type": "contains"
    },
    {
      "source": "src/_pytest/scope.py:Scope",
      "target": "src/_pytest/scope.py:Scope.next_lower",
      "type": "contains"
    },
    {
      "source": "src/_pytest/scope.py:Scope",
      "target": "src/_pytest/scope.py:Scope.next_higher",
      "type": "contains"
    },
    {
      "source": "src/_pytest/scope.py:Scope",
      "target": "src/_pytest/scope.py:Scope.__lt__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/scope.py:Scope",
      "target": "src/_pytest/scope.py:Scope.from_user",
      "type": "contains"
    },
    {
      "source": "src/_pytest/freeze_support.py",
      "target": "src/_pytest/freeze_support.py:freeze_includes",
      "type": "contains"
    },
    {
      "source": "src/_pytest/freeze_support.py",
      "target": "src/_pytest/freeze_support.py:_iter_all_modules",
      "type": "contains"
    },
    {
      "source": "src/_pytest/freeze_support.py:freeze_includes",
      "target": "src/_pytest/freeze_support.py:_iter_all_modules",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:PseudoFixtureDef",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:pytest_sessionstart",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:get_scope_package",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:get_scope_node",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:add_funcarg_pseudo_fixture_def",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:getfixturemarker",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:get_parametrized_fixture_keys",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:reorder_items",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:fix_cache_order",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:reorder_items_atscope",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:get_direct_param_fixture_func",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:FuncFixtureInfo",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:FixtureRequest",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:SubRequest",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:FixtureLookupError",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:FixtureLookupErrorRepr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:fail_fixturefunc",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:call_fixture_func",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:_teardown_yield_fixture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:_eval_scope_callable",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:FixtureDef",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:resolve_fixture_function",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:pytest_fixture_setup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:_ensure_immutable_ids",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:_params_converter",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:wrap_function_to_error_out_if_called_directly",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:FixtureFunctionMarker",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:fixture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:fixture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:fixture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:yield_fixture",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:pytestconfig",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:pytest_addoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py",
      "target": "src/_pytest/fixtures.py:FixtureManager",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:pytest_sessionstart",
      "target": "src/_pytest/fixtures.py:FixtureManager",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:add_funcarg_pseudo_fixture_def",
      "target": "src/_pytest/fixtures.py:FixtureDef",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:add_funcarg_pseudo_fixture_def",
      "target": "src/_pytest/fixtures.py:get_scope_node",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:reorder_items",
      "target": "src/_pytest/fixtures.py:get_parametrized_fixture_keys",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:reorder_items",
      "target": "src/_pytest/fixtures.py:reorder_items_atscope",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:reorder_items_atscope",
      "target": "src/_pytest/fixtures.py:fix_cache_order",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FuncFixtureInfo",
      "target": "src/_pytest/fixtures.py:FuncFixtureInfo.prune_dependency_tree",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest",
      "target": "src/_pytest/fixtures.py:FixtureRequest.scope",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest",
      "target": "src/_pytest/fixtures.py:FixtureRequest.fixturenames",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest",
      "target": "src/_pytest/fixtures.py:FixtureRequest.node",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest",
      "target": "src/_pytest/fixtures.py:FixtureRequest._getnextfixturedef",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest",
      "target": "src/_pytest/fixtures.py:FixtureRequest.config",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest",
      "target": "src/_pytest/fixtures.py:FixtureRequest.function",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest",
      "target": "src/_pytest/fixtures.py:FixtureRequest.cls",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest",
      "target": "src/_pytest/fixtures.py:FixtureRequest.instance",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest",
      "target": "src/_pytest/fixtures.py:FixtureRequest.module",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest",
      "target": "src/_pytest/fixtures.py:FixtureRequest.path",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest",
      "target": "src/_pytest/fixtures.py:FixtureRequest.keywords",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest",
      "target": "src/_pytest/fixtures.py:FixtureRequest.session",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest",
      "target": "src/_pytest/fixtures.py:FixtureRequest.addfinalizer",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest",
      "target": "src/_pytest/fixtures.py:FixtureRequest.applymarker",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest",
      "target": "src/_pytest/fixtures.py:FixtureRequest.raiseerror",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest",
      "target": "src/_pytest/fixtures.py:FixtureRequest._fillfixtures",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest",
      "target": "src/_pytest/fixtures.py:FixtureRequest.getfixturevalue",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest",
      "target": "src/_pytest/fixtures.py:FixtureRequest._get_active_fixturedef",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest",
      "target": "src/_pytest/fixtures.py:FixtureRequest._get_fixturestack",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest",
      "target": "src/_pytest/fixtures.py:FixtureRequest._compute_fixture_value",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest",
      "target": "src/_pytest/fixtures.py:FixtureRequest._schedule_finalizers",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest",
      "target": "src/_pytest/fixtures.py:FixtureRequest._check_scope",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest",
      "target": "src/_pytest/fixtures.py:FixtureRequest._factorytraceback",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest",
      "target": "src/_pytest/fixtures.py:FixtureRequest.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest.node",
      "target": "src/_pytest/fixtures.py:get_scope_node",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest.node",
      "target": "src/_pytest/fixtures.py:get_scope_package",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest._getnextfixturedef",
      "target": "src/_pytest/fixtures.py:FixtureLookupError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest._getnextfixturedef",
      "target": "src/_pytest/fixtures.py:FixtureManager.getfixturedefs",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest.addfinalizer",
      "target": "src/_pytest/fixtures.py:FixtureDef.addfinalizer",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest.addfinalizer",
      "target": "src/_pytest/fixtures.py:SubRequest.addfinalizer",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest.raiseerror",
      "target": "src/_pytest/fixtures.py:FixtureLookupError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest._fillfixtures",
      "target": "src/_pytest/fixtures.py:FixtureRequest.getfixturevalue",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest.getfixturevalue",
      "target": "src/_pytest/fixtures.py:FixtureRequest._get_active_fixturedef",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest._get_active_fixturedef",
      "target": "src/_pytest/fixtures.py:PseudoFixtureDef",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest._get_active_fixturedef",
      "target": "src/_pytest/fixtures.py:FixtureRequest._getnextfixturedef",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest._get_active_fixturedef",
      "target": "src/_pytest/fixtures.py:FixtureRequest._compute_fixture_value",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest._compute_fixture_value",
      "target": "src/_pytest/fixtures.py:SubRequest",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest._compute_fixture_value",
      "target": "src/_pytest/fixtures.py:FixtureDef.execute",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest._compute_fixture_value",
      "target": "src/_pytest/fixtures.py:FixtureRequest._schedule_finalizers",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest._compute_fixture_value",
      "target": "src/_pytest/fixtures.py:SubRequest._schedule_finalizers",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest._compute_fixture_value",
      "target": "src/_pytest/fixtures.py:FixtureRequest._check_scope",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest._schedule_finalizers",
      "target": "src/_pytest/fixtures.py:FixtureDef.addfinalizer",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest._schedule_finalizers",
      "target": "src/_pytest/fixtures.py:SubRequest.addfinalizer",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest._schedule_finalizers",
      "target": "src/_pytest/fixtures.py:FixtureRequest.addfinalizer",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest._schedule_finalizers",
      "target": "src/_pytest/fixtures.py:FixtureDef.finish",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest._check_scope",
      "target": "src/_pytest/fixtures.py:FixtureRequest._factorytraceback",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureRequest._factorytraceback",
      "target": "src/_pytest/fixtures.py:FixtureRequest._get_fixturestack",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:SubRequest",
      "target": "src/_pytest/fixtures.py:SubRequest.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:SubRequest",
      "target": "src/_pytest/fixtures.py:SubRequest.addfinalizer",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:SubRequest",
      "target": "src/_pytest/fixtures.py:SubRequest._schedule_finalizers",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:SubRequest",
      "target": "src/_pytest/fixtures.py:FixtureRequest",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/fixtures.py:SubRequest.addfinalizer",
      "target": "src/_pytest/fixtures.py:FixtureDef.addfinalizer",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:SubRequest.addfinalizer",
      "target": "src/_pytest/fixtures.py:FixtureRequest.addfinalizer",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:SubRequest._schedule_finalizers",
      "target": "src/_pytest/fixtures.py:FixtureDef.addfinalizer",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:SubRequest._schedule_finalizers",
      "target": "src/_pytest/fixtures.py:SubRequest.addfinalizer",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:SubRequest._schedule_finalizers",
      "target": "src/_pytest/fixtures.py:FixtureRequest.addfinalizer",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:SubRequest._schedule_finalizers",
      "target": "src/_pytest/fixtures.py:FixtureRequest._schedule_finalizers",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureLookupError",
      "target": "src/_pytest/fixtures.py:FixtureLookupError.formatrepr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureLookupError",
      "target": "src/_pytest/fixtures.py:FixtureRequest._get_fixturestack",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureLookupError.formatrepr",
      "target": "src/_pytest/fixtures.py:FixtureManager._matchfactories",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureLookupError.formatrepr",
      "target": "src/_pytest/fixtures.py:FixtureLookupErrorRepr",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureLookupErrorRepr",
      "target": "src/_pytest/fixtures.py:FixtureLookupErrorRepr.toterminal",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:call_fixture_func",
      "target": "src/_pytest/fixtures.py:FixtureDef.addfinalizer",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:call_fixture_func",
      "target": "src/_pytest/fixtures.py:SubRequest.addfinalizer",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:call_fixture_func",
      "target": "src/_pytest/fixtures.py:FixtureRequest.addfinalizer",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:_teardown_yield_fixture",
      "target": "src/_pytest/fixtures.py:fail_fixturefunc",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureDef",
      "target": "src/_pytest/fixtures.py:FixtureDef.scope",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureDef",
      "target": "src/_pytest/fixtures.py:FixtureDef.addfinalizer",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureDef",
      "target": "src/_pytest/fixtures.py:FixtureDef.finish",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureDef",
      "target": "src/_pytest/fixtures.py:FixtureDef.execute",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureDef",
      "target": "src/_pytest/fixtures.py:FixtureDef.cache_key",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureDef",
      "target": "src/_pytest/fixtures.py:FixtureDef.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureDef",
      "target": "src/_pytest/fixtures.py:_eval_scope_callable",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureDef.execute",
      "target": "src/_pytest/fixtures.py:FixtureDef.addfinalizer",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureDef.execute",
      "target": "src/_pytest/fixtures.py:SubRequest.addfinalizer",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureDef.execute",
      "target": "src/_pytest/fixtures.py:FixtureRequest.addfinalizer",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureDef.execute",
      "target": "src/_pytest/fixtures.py:FixtureRequest._get_active_fixturedef",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureDef.execute",
      "target": "src/_pytest/fixtures.py:FixtureDef.cache_key",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureDef.execute",
      "target": "src/_pytest/fixtures.py:pytest_fixture_setup",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureDef.execute",
      "target": "src/_pytest/fixtures.py:FixtureDef.finish",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:pytest_fixture_setup",
      "target": "src/_pytest/fixtures.py:call_fixture_func",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:pytest_fixture_setup",
      "target": "src/_pytest/fixtures.py:FixtureRequest._get_active_fixturedef",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:pytest_fixture_setup",
      "target": "src/_pytest/fixtures.py:FixtureDef.cache_key",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:pytest_fixture_setup",
      "target": "src/_pytest/fixtures.py:FixtureRequest._check_scope",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:pytest_fixture_setup",
      "target": "src/_pytest/fixtures.py:resolve_fixture_function",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:wrap_function_to_error_out_if_called_directly",
      "target": "src/_pytest/fixtures.py:wrap_function_to_error_out_if_called_directly.result",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureFunctionMarker",
      "target": "src/_pytest/fixtures.py:FixtureFunctionMarker.__post_init__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureFunctionMarker",
      "target": "src/_pytest/fixtures.py:FixtureFunctionMarker.__call__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureFunctionMarker.__call__",
      "target": "src/_pytest/fixtures.py:wrap_function_to_error_out_if_called_directly",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:fixture",
      "target": "src/_pytest/fixtures.py:FixtureFunctionMarker",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:yield_fixture",
      "target": "src/_pytest/fixtures.py:fixture",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureManager",
      "target": "src/_pytest/fixtures.py:FixtureManager._get_direct_parametrize_args",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureManager",
      "target": "src/_pytest/fixtures.py:FixtureManager.getfixtureinfo",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureManager",
      "target": "src/_pytest/fixtures.py:FixtureManager.pytest_plugin_registered",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureManager",
      "target": "src/_pytest/fixtures.py:FixtureManager._getautousenames",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureManager",
      "target": "src/_pytest/fixtures.py:FixtureManager.getfixtureclosure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureManager",
      "target": "src/_pytest/fixtures.py:FixtureManager.pytest_generate_tests",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureManager",
      "target": "src/_pytest/fixtures.py:FixtureManager.pytest_collection_modifyitems",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureManager",
      "target": "src/_pytest/fixtures.py:FixtureManager.parsefactories",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureManager",
      "target": "src/_pytest/fixtures.py:FixtureManager.parsefactories",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureManager",
      "target": "src/_pytest/fixtures.py:FixtureManager.parsefactories",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureManager",
      "target": "src/_pytest/fixtures.py:FixtureManager.getfixturedefs",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureManager",
      "target": "src/_pytest/fixtures.py:FixtureManager._matchfactories",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureManager.getfixtureinfo",
      "target": "src/_pytest/fixtures.py:FixtureManager.getfixtureclosure",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureManager.getfixtureinfo",
      "target": "src/_pytest/fixtures.py:FuncFixtureInfo",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureManager.getfixtureinfo",
      "target": "src/_pytest/fixtures.py:FixtureManager._get_direct_parametrize_args",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureManager.pytest_plugin_registered",
      "target": "src/_pytest/fixtures.py:FixtureManager.parsefactories",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureManager.getfixtureclosure",
      "target": "src/_pytest/fixtures.py:FixtureManager.getfixtureclosure.merge",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureManager.getfixtureclosure",
      "target": "src/_pytest/fixtures.py:FixtureManager.getfixtureclosure.merge",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureManager.getfixtureclosure",
      "target": "src/_pytest/fixtures.py:FixtureManager.getfixtureclosure.sort_by_scope",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureManager.getfixtureclosure",
      "target": "src/_pytest/fixtures.py:FixtureManager._getautousenames",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureManager.getfixtureclosure",
      "target": "src/_pytest/fixtures.py:FixtureManager.getfixturedefs",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureManager.pytest_generate_tests",
      "target": "src/_pytest/fixtures.py:FixtureManager.pytest_generate_tests.get_parametrize_mark_argnames",
      "type": "contains"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureManager.pytest_generate_tests",
      "target": "src/_pytest/fixtures.py:FixtureManager.pytest_generate_tests.get_parametrize_mark_argnames",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureManager.pytest_collection_modifyitems",
      "target": "src/_pytest/fixtures.py:reorder_items",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureManager.parsefactories",
      "target": "src/_pytest/fixtures.py:getfixturemarker",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureManager.parsefactories",
      "target": "src/_pytest/fixtures.py:FixtureDef",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/fixtures.py:FixtureManager.getfixturedefs",
      "target": "src/_pytest/fixtures.py:FixtureManager._matchfactories",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/cacheprovider.py",
      "target": "src/_pytest/cacheprovider.py:Cache",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py",
      "target": "src/_pytest/cacheprovider.py:LFPluginCollWrapper",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py",
      "target": "src/_pytest/cacheprovider.py:LFPluginCollSkipfiles",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py",
      "target": "src/_pytest/cacheprovider.py:LFPlugin",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py",
      "target": "src/_pytest/cacheprovider.py:NFPlugin",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py",
      "target": "src/_pytest/cacheprovider.py:pytest_addoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py",
      "target": "src/_pytest/cacheprovider.py:pytest_cmdline_main",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py",
      "target": "src/_pytest/cacheprovider.py:pytest_configure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py",
      "target": "src/_pytest/cacheprovider.py:cache",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py",
      "target": "src/_pytest/cacheprovider.py:pytest_report_header",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py",
      "target": "src/_pytest/cacheprovider.py:cacheshow",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py",
      "target": "src/_pytest/pathlib.py:resolve_from_str",
      "type": "imports"
    },
    {
      "source": "src/_pytest/cacheprovider.py",
      "target": "src/_pytest/pathlib.py:rm_rf",
      "type": "imports"
    },
    {
      "source": "src/_pytest/cacheprovider.py",
      "target": "src/_pytest/reports.py:CollectReport",
      "type": "imports"
    },
    {
      "source": "src/_pytest/cacheprovider.py:Cache",
      "target": "src/_pytest/cacheprovider.py:Cache.for_config",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py:Cache",
      "target": "src/_pytest/cacheprovider.py:Cache.clear_cache",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py:Cache",
      "target": "src/_pytest/cacheprovider.py:Cache.cache_dir_from_config",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py:Cache",
      "target": "src/_pytest/cacheprovider.py:Cache.warn",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py:Cache",
      "target": "src/_pytest/cacheprovider.py:Cache.mkdir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py:Cache",
      "target": "src/_pytest/cacheprovider.py:Cache._getvaluepath",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py:Cache",
      "target": "src/_pytest/cacheprovider.py:Cache.get",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py:Cache",
      "target": "src/_pytest/cacheprovider.py:Cache.set",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py:Cache",
      "target": "src/_pytest/cacheprovider.py:Cache._ensure_supporting_files",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py:Cache.for_config",
      "target": "src/_pytest/cacheprovider.py:Cache.clear_cache",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/cacheprovider.py:Cache.for_config",
      "target": "src/_pytest/cacheprovider.py:Cache.cache_dir_from_config",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/cacheprovider.py:Cache.clear_cache",
      "target": "src/_pytest/pathlib.py:rm_rf",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/cacheprovider.py:Cache.cache_dir_from_config",
      "target": "src/_pytest/pathlib.py:resolve_from_str",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/cacheprovider.py:Cache.get",
      "target": "src/_pytest/cacheprovider.py:Cache._getvaluepath",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/cacheprovider.py:Cache.set",
      "target": "src/_pytest/cacheprovider.py:Cache._ensure_supporting_files",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/cacheprovider.py:Cache.set",
      "target": "src/_pytest/cacheprovider.py:Cache.warn",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/cacheprovider.py:Cache.set",
      "target": "src/_pytest/cacheprovider.py:Cache._getvaluepath",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/cacheprovider.py:Cache.set",
      "target": "src/_pytest/cacheprovider.py:Cache.mkdir",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/cacheprovider.py:LFPluginCollWrapper",
      "target": "src/_pytest/cacheprovider.py:LFPluginCollWrapper.pytest_make_collect_report",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py:LFPluginCollWrapper.pytest_make_collect_report",
      "target": "src/_pytest/cacheprovider.py:LFPluginCollWrapper.pytest_make_collect_report.sort_key",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py:LFPluginCollWrapper.pytest_make_collect_report",
      "target": "src/_pytest/cacheprovider.py:LFPluginCollSkipfiles",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/cacheprovider.py:LFPluginCollSkipfiles",
      "target": "src/_pytest/cacheprovider.py:LFPluginCollSkipfiles.pytest_make_collect_report",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py:LFPluginCollSkipfiles.pytest_make_collect_report",
      "target": "src/_pytest/reports.py:CollectReport",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/cacheprovider.py:LFPlugin",
      "target": "src/_pytest/cacheprovider.py:LFPlugin.get_last_failed_paths",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py:LFPlugin",
      "target": "src/_pytest/cacheprovider.py:LFPlugin.get_last_failed_paths",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/cacheprovider.py:LFPlugin",
      "target": "src/_pytest/cacheprovider.py:LFPlugin.pytest_report_collectionfinish",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py:LFPlugin",
      "target": "src/_pytest/cacheprovider.py:LFPlugin.pytest_runtest_logreport",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py:LFPlugin",
      "target": "src/_pytest/cacheprovider.py:LFPlugin.pytest_collectreport",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py:LFPlugin",
      "target": "src/_pytest/cacheprovider.py:LFPlugin.pytest_collection_modifyitems",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py:LFPlugin",
      "target": "src/_pytest/cacheprovider.py:LFPlugin.pytest_sessionfinish",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py:LFPlugin",
      "target": "src/_pytest/cacheprovider.py:LFPluginCollWrapper",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/cacheprovider.py:LFPlugin",
      "target": "src/_pytest/cacheprovider.py:Cache.get",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/cacheprovider.py:LFPlugin.get_last_failed_paths",
      "target": "src/_pytest/cacheprovider.py:Cache.set",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/cacheprovider.py:LFPlugin.pytest_sessionfinish",
      "target": "src/_pytest/cacheprovider.py:Cache.get",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/cacheprovider.py:LFPlugin.pytest_sessionfinish",
      "target": "src/_pytest/cacheprovider.py:Cache.set",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/cacheprovider.py:NFPlugin",
      "target": "src/_pytest/cacheprovider.py:NFPlugin.pytest_collection_modifyitems",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py:NFPlugin",
      "target": "src/_pytest/cacheprovider.py:NFPlugin._get_increasing_order",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py:NFPlugin",
      "target": "src/_pytest/cacheprovider.py:NFPlugin.pytest_sessionfinish",
      "type": "contains"
    },
    {
      "source": "src/_pytest/cacheprovider.py:NFPlugin",
      "target": "src/_pytest/cacheprovider.py:Cache.get",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/cacheprovider.py:NFPlugin",
      "target": "src/_pytest/cacheprovider.py:Cache.set",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/cacheprovider.py:NFPlugin.pytest_collection_modifyitems",
      "target": "src/_pytest/cacheprovider.py:NFPlugin._get_increasing_order",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/cacheprovider.py:NFPlugin.pytest_sessionfinish",
      "target": "src/_pytest/cacheprovider.py:Cache.set",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/cacheprovider.py:pytest_configure",
      "target": "src/_pytest/cacheprovider.py:LFPlugin",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/cacheprovider.py:pytest_configure",
      "target": "src/_pytest/cacheprovider.py:NFPlugin",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/cacheprovider.py:pytest_configure",
      "target": "src/_pytest/cacheprovider.py:Cache.for_config",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/cacheprovider.py:cacheshow",
      "target": "src/_pytest/cacheprovider.py:Cache.get",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/warning_types.py",
      "target": "src/_pytest/warning_types.py:PytestWarning",
      "type": "contains"
    },
    {
      "source": "src/_pytest/warning_types.py",
      "target": "src/_pytest/warning_types.py:PytestAssertRewriteWarning",
      "type": "contains"
    },
    {
      "source": "src/_pytest/warning_types.py",
      "target": "src/_pytest/warning_types.py:PytestCacheWarning",
      "type": "contains"
    },
    {
      "source": "src/_pytest/warning_types.py",
      "target": "src/_pytest/warning_types.py:PytestConfigWarning",
      "type": "contains"
    },
    {
      "source": "src/_pytest/warning_types.py",
      "target": "src/_pytest/warning_types.py:PytestCollectionWarning",
      "type": "contains"
    },
    {
      "source": "src/_pytest/warning_types.py",
      "target": "src/_pytest/warning_types.py:PytestDeprecationWarning",
      "type": "contains"
    },
    {
      "source": "src/_pytest/warning_types.py",
      "target": "src/_pytest/warning_types.py:PytestRemovedIn8Warning",
      "type": "contains"
    },
    {
      "source": "src/_pytest/warning_types.py",
      "target": "src/_pytest/warning_types.py:PytestRemovedIn9Warning",
      "type": "contains"
    },
    {
      "source": "src/_pytest/warning_types.py",
      "target": "src/_pytest/warning_types.py:PytestReturnNotNoneWarning",
      "type": "contains"
    },
    {
      "source": "src/_pytest/warning_types.py",
      "target": "src/_pytest/warning_types.py:PytestExperimentalApiWarning",
      "type": "contains"
    },
    {
      "source": "src/_pytest/warning_types.py",
      "target": "src/_pytest/warning_types.py:PytestUnhandledCoroutineWarning",
      "type": "contains"
    },
    {
      "source": "src/_pytest/warning_types.py",
      "target": "src/_pytest/warning_types.py:PytestUnknownMarkWarning",
      "type": "contains"
    },
    {
      "source": "src/_pytest/warning_types.py",
      "target": "src/_pytest/warning_types.py:PytestUnraisableExceptionWarning",
      "type": "contains"
    },
    {
      "source": "src/_pytest/warning_types.py",
      "target": "src/_pytest/warning_types.py:PytestUnhandledThreadExceptionWarning",
      "type": "contains"
    },
    {
      "source": "src/_pytest/warning_types.py",
      "target": "src/_pytest/warning_types.py:UnformattedWarning",
      "type": "contains"
    },
    {
      "source": "src/_pytest/warning_types.py",
      "target": "src/_pytest/warning_types.py:warn_explicit_for",
      "type": "contains"
    },
    {
      "source": "src/_pytest/warning_types.py:PytestAssertRewriteWarning",
      "target": "src/_pytest/warning_types.py:PytestWarning",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/warning_types.py:PytestCacheWarning",
      "target": "src/_pytest/warning_types.py:PytestWarning",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/warning_types.py:PytestConfigWarning",
      "target": "src/_pytest/warning_types.py:PytestWarning",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/warning_types.py:PytestCollectionWarning",
      "target": "src/_pytest/warning_types.py:PytestWarning",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/warning_types.py:PytestDeprecationWarning",
      "target": "src/_pytest/warning_types.py:PytestWarning",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/warning_types.py:PytestRemovedIn8Warning",
      "target": "src/_pytest/warning_types.py:PytestDeprecationWarning",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/warning_types.py:PytestRemovedIn9Warning",
      "target": "src/_pytest/warning_types.py:PytestDeprecationWarning",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/warning_types.py:PytestReturnNotNoneWarning",
      "target": "src/_pytest/warning_types.py:PytestRemovedIn8Warning",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/warning_types.py:PytestExperimentalApiWarning",
      "target": "src/_pytest/warning_types.py:PytestExperimentalApiWarning.simple",
      "type": "contains"
    },
    {
      "source": "src/_pytest/warning_types.py:PytestExperimentalApiWarning",
      "target": "src/_pytest/warning_types.py:PytestWarning",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/warning_types.py:PytestExperimentalApiWarning.simple",
      "target": "src/_pytest/warning_types.py:UnformattedWarning.format",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/warning_types.py:PytestUnhandledCoroutineWarning",
      "target": "src/_pytest/warning_types.py:PytestReturnNotNoneWarning",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/warning_types.py:PytestUnknownMarkWarning",
      "target": "src/_pytest/warning_types.py:PytestWarning",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/warning_types.py:PytestUnraisableExceptionWarning",
      "target": "src/_pytest/warning_types.py:PytestWarning",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/warning_types.py:PytestUnhandledThreadExceptionWarning",
      "target": "src/_pytest/warning_types.py:PytestWarning",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/warning_types.py:UnformattedWarning",
      "target": "src/_pytest/warning_types.py:UnformattedWarning.format",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config",
      "target": "src/_pytest/config/compat.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config",
      "target": "src/_pytest/config/__init__.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config",
      "target": "src/_pytest/config/findpaths.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config",
      "target": "src/_pytest/config/exceptions.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config",
      "target": "src/_pytest/config/argparsing.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/compat.py",
      "target": "src/_pytest/config/compat.py:PathAwareHookProxy",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/compat.py",
      "target": "src/_pytest/compat.py",
      "type": "imports"
    },
    {
      "source": "src/_pytest/config/compat.py",
      "target": "src/_pytest/compat.py:legacy_path",
      "type": "imports"
    },
    {
      "source": "src/_pytest/config/compat.py",
      "target": "src/_pytest/deprecated.py",
      "type": "imports"
    },
    {
      "source": "src/_pytest/config/compat.py:PathAwareHookProxy",
      "target": "src/_pytest/config/compat.py:PathAwareHookProxy.__dir__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/compat.py:PathAwareHookProxy",
      "target": "src/_pytest/config/compat.py:PathAwareHookProxy.__getattr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/compat.py:PathAwareHookProxy.__getattr__",
      "target": "src/_pytest/config/compat.py:PathAwareHookProxy.__getattr__.fixed_hook",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/compat.py:PathAwareHookProxy.__getattr__.fixed_hook",
      "target": "src/_pytest/compat.py:legacy_path",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/__init__.py:ExitCode",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/__init__.py:ConftestImportFailure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/__init__.py:filter_traceback_for_conftest_import_failure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/__init__.py:main",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/__init__.py:console_main",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/__init__.py:cmdline",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/__init__.py:filename_arg",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/__init__.py:directory_arg",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/__init__.py:get_config",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/__init__.py:get_plugin_manager",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/__init__.py:_prepareconfig",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/__init__.py:_get_directory",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/__init__.py:_get_legacy_hook_marks",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/__init__.py:_get_plugin_specs_as_list",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/__init__.py:_ensure_removed_sysmodule",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/__init__.py:Notset",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/__init__.py:_iter_rewritable_modules",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/__init__.py:Config",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/__init__.py:_assertion_supported",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/__init__.py:create_terminal_writer",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/__init__.py:_strtobool",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/__init__.py:parse_warning_filter",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/__init__.py:_resolve_warning_category",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/__init__.py:apply_warning_filters",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/exceptions.py:PrintHelp",
      "type": "imports"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/exceptions.py:UsageError",
      "type": "imports"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/findpaths.py:determine_setup",
      "type": "imports"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/argparsing.py:Argument",
      "type": "imports"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/argparsing.py:Parser",
      "type": "imports"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/argparsing.py",
      "type": "imports"
    },
    {
      "source": "src/_pytest/config/__init__.py",
      "target": "src/_pytest/config/compat.py:PathAwareHookProxy",
      "type": "imports"
    },
    {
      "source": "src/_pytest/config/__init__.py:ConftestImportFailure",
      "target": "src/_pytest/config/__init__.py:ConftestImportFailure.__str__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:main",
      "target": "src/_pytest/config/__init__.py:_prepareconfig",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:main",
      "target": "src/_pytest/config/__init__.py:Config._ensure_unconfigure",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:main",
      "target": "src/_pytest/config/__init__.py:ExitCode",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:console_main",
      "target": "src/_pytest/config/__init__.py:main",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:filename_arg",
      "target": "src/_pytest/config/exceptions.py:UsageError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:filename_arg",
      "target": "src/_pytest/config/exceptions.py:UsageError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:directory_arg",
      "target": "src/_pytest/config/exceptions.py:UsageError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:directory_arg",
      "target": "src/_pytest/config/exceptions.py:UsageError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:get_config",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager.consider_preparse",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:get_config",
      "target": "src/_pytest/config/__init__.py:Config",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:get_config",
      "target": "src/_pytest/config/__init__.py:Config.InvocationParams",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:get_config",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager.import_plugin",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:get_config",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:get_plugin_manager",
      "target": "src/_pytest/config/__init__.py:get_config",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:_prepareconfig",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager.consider_pluginarg",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:_prepareconfig",
      "target": "src/_pytest/config/__init__.py:Config.pytest_cmdline_parse",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:_prepareconfig",
      "target": "src/_pytest/config/__init__.py:Config._ensure_unconfigure",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:_prepareconfig",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager.register",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:_prepareconfig",
      "target": "src/_pytest/config/__init__.py:get_config",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager.parse_hookimpl_opts",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager.parse_hookspec_opts",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager.register",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager.register",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager.getplugin",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager.hasplugin",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager.pytest_configure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager._set_initial_conftests",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager._is_in_confcutdir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager._try_load_conftest",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager._getconftestmodules",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager._rget_with_confmod",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager._importconftest",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager._check_non_top_pytest_plugins",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager.consider_preparse",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager.consider_pluginarg",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager.consider_conftest",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager.consider_env",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager.consider_module",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager._import_plugin_specs",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager.import_plugin",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager.parse_hookimpl_opts",
      "target": "src/_pytest/config/__init__.py:_get_legacy_hook_marks",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager.parse_hookspec_opts",
      "target": "src/_pytest/config/__init__.py:_get_legacy_hook_marks",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager.register",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager.consider_module",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager.pytest_configure",
      "target": "src/_pytest/config/__init__.py:Config.addinivalue_line",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager._set_initial_conftests",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager._try_load_conftest",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager._try_load_conftest",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager._getconftestmodules",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager._getconftestmodules",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager._is_in_confcutdir",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager._getconftestmodules",
      "target": "src/_pytest/config/__init__.py:_get_directory",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager._getconftestmodules",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager._importconftest",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager._rget_with_confmod",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager._getconftestmodules",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager._importconftest",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager.consider_conftest",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager._importconftest",
      "target": "src/_pytest/config/__init__.py:ConftestImportFailure",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager._importconftest",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager._check_non_top_pytest_plugins",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager._importconftest",
      "target": "src/_pytest/config/__init__.py:_ensure_removed_sysmodule",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager.consider_preparse",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager.consider_pluginarg",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager.consider_pluginarg",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager.import_plugin",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager.consider_pluginarg",
      "target": "src/_pytest/config/exceptions.py:UsageError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager.consider_pluginarg",
      "target": "src/_pytest/config/exceptions.py:UsageError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager.consider_conftest",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager.register",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager.consider_env",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager._import_plugin_specs",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager.consider_module",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager._import_plugin_specs",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager._import_plugin_specs",
      "target": "src/_pytest/config/__init__.py:_get_plugin_specs_as_list",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager._import_plugin_specs",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager.import_plugin",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:PytestPluginManager.import_plugin",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager.register",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:_get_plugin_specs_as_list",
      "target": "src/_pytest/config/exceptions.py:UsageError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:_get_plugin_specs_as_list",
      "target": "src/_pytest/config/exceptions.py:UsageError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Notset",
      "target": "src/_pytest/config/__init__.py:Notset.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config.InvocationParams",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config.InvocationParams",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config.ArgsSource",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config.rootpath",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config.inipath",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config.add_cleanup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config._do_configure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config._ensure_unconfigure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config.get_terminal_writer",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config.pytest_cmdline_parse",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config.notify_exception",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config.cwd_relative_nodeid",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config.fromdictargs",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config._processopt",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config.pytest_load_initial_conftests",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config._initini",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config._consider_importhook",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config._mark_plugins_for_rewrite",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config._validate_args",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config._decide_args",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config._preparse",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config.pytest_collection",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config._checkversion",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config._validate_config_options",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config._validate_plugins",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config._warn_or_fail_if_strict",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config._get_unknown_ini_keys",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config.parse",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config.issue_config_time_warning",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config.addinivalue_line",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config.getini",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config._getini_unknown_type",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config._getini",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config._getconftest_pathlist",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config._get_override_ini_value",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config.getoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config.getvalue",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config.getvalueorskip",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config._warn_about_missing_assertion",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:Config._warn_about_skipped_plugins",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/argparsing.py:Parser",
      "type": "imports"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/argparsing.py:Parser",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/argparsing.py",
      "type": "imports"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/compat.py:PathAwareHookProxy",
      "type": "imports"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/compat.py:PathAwareHookProxy",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager.register",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config.pytest_cmdline_parse",
      "target": "src/_pytest/config/argparsing.py:Parser.parse",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config.pytest_cmdline_parse",
      "target": "src/_pytest/config/__init__.py:Config.parse",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config.pytest_cmdline_parse",
      "target": "src/_pytest/config/argparsing.py:Parser._getparser",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config.fromdictargs",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager.consider_pluginarg",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config.fromdictargs",
      "target": "src/_pytest/config/__init__.py:get_config",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config.fromdictargs",
      "target": "src/_pytest/config/argparsing.py:Parser.parse",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config.fromdictargs",
      "target": "src/_pytest/config/__init__.py:Config.parse",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config.pytest_load_initial_conftests",
      "target": "src/_pytest/config/__init__.py:Config._decide_args",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config.pytest_load_initial_conftests",
      "target": "src/_pytest/config/__init__.py:Config.getini",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config.pytest_load_initial_conftests",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager._set_initial_conftests",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._initini",
      "target": "src/_pytest/config/argparsing.py:Parser.parse_known_and_unknown_args",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._initini",
      "target": "src/_pytest/config/findpaths.py:determine_setup",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._initini",
      "target": "src/_pytest/config/argparsing.py:Parser.addini",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._consider_importhook",
      "target": "src/_pytest/config/__init__.py:Config._warn_about_missing_assertion",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._consider_importhook",
      "target": "src/_pytest/config/argparsing.py:Parser.parse_known_and_unknown_args",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._consider_importhook",
      "target": "src/_pytest/config/__init__.py:Config._mark_plugins_for_rewrite",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._mark_plugins_for_rewrite",
      "target": "src/_pytest/config/__init__.py:_iter_rewritable_modules",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._validate_args",
      "target": "src/_pytest/config/argparsing.py:Parser.parse_known_and_unknown_args",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._decide_args",
      "target": "src/_pytest/config/__init__.py:Config.issue_config_time_warning",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._preparse",
      "target": "src/_pytest/config/__init__.py:Config.pytest_load_initial_conftests",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._preparse",
      "target": "src/_pytest/config/__init__.py:Config.getini",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._preparse",
      "target": "src/_pytest/config/__init__.py:Config._validate_plugins",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._preparse",
      "target": "src/_pytest/config/__init__.py:Config.issue_config_time_warning",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._preparse",
      "target": "src/_pytest/config/__init__.py:Config._checkversion",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._preparse",
      "target": "src/_pytest/config/__init__.py:Config._consider_importhook",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._preparse",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager.consider_preparse",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._preparse",
      "target": "src/_pytest/config/argparsing.py:Parser.parse_known_args",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._preparse",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager.consider_env",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._preparse",
      "target": "src/_pytest/config/__init__.py:Config._warn_about_skipped_plugins",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._preparse",
      "target": "src/_pytest/config/__init__.py:Config._validate_args",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._preparse",
      "target": "src/_pytest/config/__init__.py:Config._initini",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config.pytest_collection",
      "target": "src/_pytest/config/__init__.py:Config._validate_config_options",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._checkversion",
      "target": "src/_pytest/config/exceptions.py:UsageError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._checkversion",
      "target": "src/_pytest/config/exceptions.py:UsageError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._validate_config_options",
      "target": "src/_pytest/config/__init__.py:Config._warn_or_fail_if_strict",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._validate_config_options",
      "target": "src/_pytest/config/__init__.py:Config._get_unknown_ini_keys",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._validate_plugins",
      "target": "src/_pytest/config/__init__.py:Config.getini",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._validate_plugins",
      "target": "src/_pytest/config/exceptions.py:UsageError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._validate_plugins",
      "target": "src/_pytest/config/exceptions.py:UsageError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._warn_or_fail_if_strict",
      "target": "src/_pytest/config/__init__.py:Config.issue_config_time_warning",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._warn_or_fail_if_strict",
      "target": "src/_pytest/config/exceptions.py:UsageError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._warn_or_fail_if_strict",
      "target": "src/_pytest/config/exceptions.py:UsageError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config.parse",
      "target": "src/_pytest/config/__init__.py:Config.getini",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config.parse",
      "target": "src/_pytest/config/__init__.py:Config._decide_args",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config.parse",
      "target": "src/_pytest/config/__init__.py:Config._preparse",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config.parse",
      "target": "src/_pytest/config/argparsing.py:Parser.parse_setoption",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config.issue_config_time_warning",
      "target": "src/_pytest/config/__init__.py:Config.getini",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config.issue_config_time_warning",
      "target": "src/_pytest/config/__init__.py:apply_warning_filters",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config.addinivalue_line",
      "target": "src/_pytest/config/__init__.py:Config.getini",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config.getini",
      "target": "src/_pytest/config/__init__.py:Config._getini",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._getini",
      "target": "src/_pytest/config/__init__.py:Config._get_override_ini_value",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._getini",
      "target": "src/_pytest/config/__init__.py:_strtobool",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._getini",
      "target": "src/_pytest/config/__init__.py:Config._getini_unknown_type",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._getconftest_pathlist",
      "target": "src/_pytest/config/__init__.py:Config.getoption",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._getconftest_pathlist",
      "target": "src/_pytest/config/__init__.py:PytestPluginManager._rget_with_confmod",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._get_override_ini_value",
      "target": "src/_pytest/config/exceptions.py:UsageError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._get_override_ini_value",
      "target": "src/_pytest/config/exceptions.py:UsageError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config.getvalue",
      "target": "src/_pytest/config/__init__.py:Config.getoption",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config.getvalueorskip",
      "target": "src/_pytest/config/__init__.py:Config.getoption",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._warn_about_missing_assertion",
      "target": "src/_pytest/config/__init__.py:_assertion_supported",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._warn_about_missing_assertion",
      "target": "src/_pytest/config/__init__.py:Config.issue_config_time_warning",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:Config._warn_about_skipped_plugins",
      "target": "src/_pytest/config/__init__.py:Config.issue_config_time_warning",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:parse_warning_filter",
      "target": "src/_pytest/config/exceptions.py:UsageError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:parse_warning_filter",
      "target": "src/_pytest/config/exceptions.py:UsageError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:parse_warning_filter",
      "target": "src/_pytest/config/__init__.py:_resolve_warning_category",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:_resolve_warning_category",
      "target": "src/_pytest/config/exceptions.py:UsageError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:_resolve_warning_category",
      "target": "src/_pytest/config/exceptions.py:UsageError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/__init__.py:apply_warning_filters",
      "target": "src/_pytest/config/__init__.py:parse_warning_filter",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/findpaths.py",
      "target": "src/_pytest/config/findpaths.py:_parse_ini_config",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/findpaths.py",
      "target": "src/_pytest/config/findpaths.py:load_config_dict_from_file",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/findpaths.py",
      "target": "src/_pytest/config/findpaths.py:locate_config",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/findpaths.py",
      "target": "src/_pytest/config/findpaths.py:get_common_ancestor",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/findpaths.py",
      "target": "src/_pytest/config/findpaths.py:get_dirs_from_args",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/findpaths.py",
      "target": "src/_pytest/config/findpaths.py:determine_setup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/findpaths.py",
      "target": "src/_pytest/config/findpaths.py:is_fs_root",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/findpaths.py",
      "target": "src/_pytest/config/exceptions.py:UsageError",
      "type": "imports"
    },
    {
      "source": "src/_pytest/config/findpaths.py",
      "target": "src/_pytest/config/__init__.py:Config",
      "type": "imports"
    },
    {
      "source": "src/_pytest/config/findpaths.py:_parse_ini_config",
      "target": "src/_pytest/config/exceptions.py:UsageError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/findpaths.py:load_config_dict_from_file",
      "target": "src/_pytest/config/findpaths.py:load_config_dict_from_file.make_scalar",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/findpaths.py:load_config_dict_from_file",
      "target": "src/_pytest/config/findpaths.py:load_config_dict_from_file.make_scalar",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/findpaths.py:load_config_dict_from_file",
      "target": "src/_pytest/config/findpaths.py:_parse_ini_config",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/findpaths.py:load_config_dict_from_file",
      "target": "src/_pytest/config/exceptions.py:UsageError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/findpaths.py:locate_config",
      "target": "src/_pytest/config/findpaths.py:load_config_dict_from_file",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/findpaths.py:get_dirs_from_args",
      "target": "src/_pytest/config/findpaths.py:get_dirs_from_args.is_option",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/findpaths.py:get_dirs_from_args",
      "target": "src/_pytest/config/findpaths.py:get_dirs_from_args.is_option",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/findpaths.py:get_dirs_from_args",
      "target": "src/_pytest/config/findpaths.py:get_dirs_from_args.get_file_part_from_node_id",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/findpaths.py:get_dirs_from_args",
      "target": "src/_pytest/config/findpaths.py:get_dirs_from_args.get_file_part_from_node_id",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/findpaths.py:get_dirs_from_args",
      "target": "src/_pytest/config/findpaths.py:get_dirs_from_args.get_dir_from_path",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/findpaths.py:get_dirs_from_args",
      "target": "src/_pytest/config/findpaths.py:get_dirs_from_args.get_dir_from_path",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/findpaths.py:get_dirs_from_args",
      "target": "src/_pytest/config/findpaths.py:get_dirs_from_args.safe_exists",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/findpaths.py:get_dirs_from_args",
      "target": "src/_pytest/config/findpaths.py:get_dirs_from_args.safe_exists",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/findpaths.py:determine_setup",
      "target": "src/_pytest/config/findpaths.py:get_dirs_from_args",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/findpaths.py:determine_setup",
      "target": "src/_pytest/config/findpaths.py:locate_config",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/findpaths.py:determine_setup",
      "target": "src/_pytest/config/findpaths.py:is_fs_root",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/findpaths.py:determine_setup",
      "target": "src/_pytest/config/exceptions.py:UsageError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/findpaths.py:determine_setup",
      "target": "src/_pytest/config/findpaths.py:get_common_ancestor",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/findpaths.py:determine_setup",
      "target": "src/_pytest/config/findpaths.py:load_config_dict_from_file",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/exceptions.py",
      "target": "src/_pytest/config/exceptions.py:UsageError",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/exceptions.py",
      "target": "src/_pytest/config/exceptions.py:PrintHelp",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py",
      "target": "src/_pytest/config/argparsing.py:Parser",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py",
      "target": "src/_pytest/config/argparsing.py:ArgumentError",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py",
      "target": "src/_pytest/config/argparsing.py:Argument",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py",
      "target": "src/_pytest/config/argparsing.py:OptionGroup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py",
      "target": "src/_pytest/config/argparsing.py:MyOptionParser",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py",
      "target": "src/_pytest/config/argparsing.py:DropShorterLongHelpFormatter",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py:Parser",
      "target": "src/_pytest/config/argparsing.py:Parser.processoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py:Parser",
      "target": "src/_pytest/config/argparsing.py:Parser.getgroup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py:Parser",
      "target": "src/_pytest/config/argparsing.py:Parser.addoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py:Parser",
      "target": "src/_pytest/config/argparsing.py:Parser.parse",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py:Parser",
      "target": "src/_pytest/config/argparsing.py:Parser._getparser",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py:Parser",
      "target": "src/_pytest/config/argparsing.py:Parser.parse_setoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py:Parser",
      "target": "src/_pytest/config/argparsing.py:Parser.parse_known_args",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py:Parser",
      "target": "src/_pytest/config/argparsing.py:Parser.parse_known_and_unknown_args",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py:Parser",
      "target": "src/_pytest/config/argparsing.py:Parser.addini",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py:Parser",
      "target": "src/_pytest/config/argparsing.py:OptionGroup",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/argparsing.py:Parser.getgroup",
      "target": "src/_pytest/config/argparsing.py:OptionGroup",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/argparsing.py:Parser.addoption",
      "target": "src/_pytest/config/argparsing.py:OptionGroup.addoption",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/argparsing.py:Parser.parse",
      "target": "src/_pytest/config/argparsing.py:MyOptionParser.parse_args",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/argparsing.py:Parser.parse",
      "target": "src/_pytest/config/argparsing.py:Parser._getparser",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/argparsing.py:Parser._getparser",
      "target": "src/_pytest/config/argparsing.py:Argument.names",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/argparsing.py:Parser._getparser",
      "target": "src/_pytest/config/argparsing.py:Argument.attrs",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/argparsing.py:Parser._getparser",
      "target": "src/_pytest/config/argparsing.py:MyOptionParser",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/argparsing.py:Parser.parse_setoption",
      "target": "src/_pytest/config/argparsing.py:Parser.parse",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/argparsing.py:Parser.parse_known_args",
      "target": "src/_pytest/config/argparsing.py:Parser.parse_known_and_unknown_args",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/argparsing.py:Parser.parse_known_and_unknown_args",
      "target": "src/_pytest/config/argparsing.py:Parser.parse_known_args",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/argparsing.py:Parser.parse_known_and_unknown_args",
      "target": "src/_pytest/config/argparsing.py:Parser._getparser",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/argparsing.py:ArgumentError",
      "target": "src/_pytest/config/argparsing.py:ArgumentError.__str__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py:Argument",
      "target": "src/_pytest/config/argparsing.py:Argument.names",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py:Argument",
      "target": "src/_pytest/config/argparsing.py:Argument.attrs",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py:Argument",
      "target": "src/_pytest/config/argparsing.py:Argument._set_opt_strings",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py:Argument",
      "target": "src/_pytest/config/argparsing.py:Argument._set_opt_strings",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/argparsing.py:Argument",
      "target": "src/_pytest/config/argparsing.py:Argument.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py:Argument",
      "target": "src/_pytest/config/argparsing.py:ArgumentError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/argparsing.py:Argument._set_opt_strings",
      "target": "src/_pytest/config/argparsing.py:ArgumentError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/argparsing.py:OptionGroup",
      "target": "src/_pytest/config/argparsing.py:OptionGroup.addoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py:OptionGroup",
      "target": "src/_pytest/config/argparsing.py:OptionGroup._addoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py:OptionGroup",
      "target": "src/_pytest/config/argparsing.py:OptionGroup._addoption_instance",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py:OptionGroup.addoption",
      "target": "src/_pytest/config/argparsing.py:Argument.names",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/argparsing.py:OptionGroup.addoption",
      "target": "src/_pytest/config/argparsing.py:Argument",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/argparsing.py:OptionGroup.addoption",
      "target": "src/_pytest/config/argparsing.py:OptionGroup._addoption_instance",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/argparsing.py:OptionGroup._addoption",
      "target": "src/_pytest/config/argparsing.py:OptionGroup._addoption_instance",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/argparsing.py:OptionGroup._addoption",
      "target": "src/_pytest/config/argparsing.py:Argument",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/argparsing.py:OptionGroup._addoption_instance",
      "target": "src/_pytest/config/argparsing.py:Parser.processoption",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/argparsing.py:MyOptionParser",
      "target": "src/_pytest/config/argparsing.py:MyOptionParser.error",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py:MyOptionParser",
      "target": "src/_pytest/config/argparsing.py:MyOptionParser.parse_args",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py:MyOptionParser",
      "target": "src/_pytest/config/argparsing.py:MyOptionParser._parse_optional",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py:MyOptionParser.parse_args",
      "target": "src/_pytest/config/argparsing.py:Parser.parse_known_args",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/argparsing.py:MyOptionParser.parse_args",
      "target": "src/_pytest/config/argparsing.py:MyOptionParser.error",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/argparsing.py:MyOptionParser._parse_optional",
      "target": "src/_pytest/config/argparsing.py:MyOptionParser.error",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/config/argparsing.py:DropShorterLongHelpFormatter",
      "target": "src/_pytest/config/argparsing.py:DropShorterLongHelpFormatter._format_action_invocation",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py:DropShorterLongHelpFormatter",
      "target": "src/_pytest/config/argparsing.py:DropShorterLongHelpFormatter._split_lines",
      "type": "contains"
    },
    {
      "source": "src/_pytest/config/argparsing.py:DropShorterLongHelpFormatter._format_action_invocation",
      "target": "src/_pytest/config/argparsing.py:ArgumentError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark",
      "target": "src/_pytest/mark/__init__.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark",
      "target": "src/_pytest/mark/structures.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark",
      "target": "src/_pytest/mark/expression.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/__init__.py",
      "target": "src/_pytest/mark/__init__.py:param",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/__init__.py",
      "target": "src/_pytest/mark/__init__.py:pytest_addoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/__init__.py",
      "target": "src/_pytest/mark/__init__.py:pytest_cmdline_main",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/__init__.py",
      "target": "src/_pytest/mark/__init__.py:KeywordMatcher",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/__init__.py",
      "target": "src/_pytest/mark/__init__.py:deselect_by_keyword",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/__init__.py",
      "target": "src/_pytest/mark/__init__.py:MarkMatcher",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/__init__.py",
      "target": "src/_pytest/mark/__init__.py:deselect_by_mark",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/__init__.py",
      "target": "src/_pytest/mark/__init__.py:_parse_expression",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/__init__.py",
      "target": "src/_pytest/mark/__init__.py:pytest_collection_modifyitems",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/__init__.py",
      "target": "src/_pytest/mark/__init__.py:pytest_configure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/__init__.py",
      "target": "src/_pytest/mark/__init__.py:pytest_unconfigure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/__init__.py",
      "target": "src/_pytest/mark/expression.py:Expression",
      "type": "imports"
    },
    {
      "source": "src/_pytest/mark/__init__.py",
      "target": "src/_pytest/mark/expression.py:ParseError",
      "type": "imports"
    },
    {
      "source": "src/_pytest/mark/__init__.py",
      "target": "src/_pytest/mark/structures.py",
      "type": "imports"
    },
    {
      "source": "src/_pytest/mark/__init__.py",
      "target": "src/_pytest/mark/structures.py",
      "type": "imports"
    },
    {
      "source": "src/_pytest/mark/__init__.py",
      "target": "src/_pytest/mark/structures.py:get_empty_parameterset_mark",
      "type": "imports"
    },
    {
      "source": "src/_pytest/mark/__init__.py",
      "target": "src/_pytest/mark/structures.py:Mark",
      "type": "imports"
    },
    {
      "source": "src/_pytest/mark/__init__.py",
      "target": "src/_pytest/mark/structures.py:MarkDecorator",
      "type": "imports"
    },
    {
      "source": "src/_pytest/mark/__init__.py",
      "target": "src/_pytest/mark/structures.py:MarkGenerator",
      "type": "imports"
    },
    {
      "source": "src/_pytest/mark/__init__.py",
      "target": "src/_pytest/mark/structures.py:ParameterSet",
      "type": "imports"
    },
    {
      "source": "src/_pytest/mark/__init__.py:param",
      "target": "src/_pytest/mark/structures.py:ParameterSet.param",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/__init__.py:KeywordMatcher",
      "target": "src/_pytest/mark/__init__.py:KeywordMatcher.from_item",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/__init__.py:KeywordMatcher",
      "target": "src/_pytest/mark/__init__.py:KeywordMatcher.__call__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/__init__.py:KeywordMatcher.from_item",
      "target": "src/_pytest/mark/structures.py:NodeKeywords.update",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/__init__.py:deselect_by_keyword",
      "target": "src/_pytest/mark/__init__.py:_parse_expression",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/__init__.py:deselect_by_keyword",
      "target": "src/_pytest/mark/__init__.py:MarkMatcher.from_item",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/__init__.py:deselect_by_keyword",
      "target": "src/_pytest/mark/__init__.py:KeywordMatcher.from_item",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/__init__.py:deselect_by_keyword",
      "target": "src/_pytest/mark/expression.py:Expression.evaluate",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/__init__.py:MarkMatcher",
      "target": "src/_pytest/mark/__init__.py:MarkMatcher.from_item",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/__init__.py:MarkMatcher",
      "target": "src/_pytest/mark/__init__.py:MarkMatcher.__call__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/__init__.py:deselect_by_mark",
      "target": "src/_pytest/mark/__init__.py:_parse_expression",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/__init__.py:deselect_by_mark",
      "target": "src/_pytest/mark/__init__.py:MarkMatcher.from_item",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/__init__.py:deselect_by_mark",
      "target": "src/_pytest/mark/__init__.py:KeywordMatcher.from_item",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/__init__.py:deselect_by_mark",
      "target": "src/_pytest/mark/expression.py:Expression.evaluate",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/__init__.py:_parse_expression",
      "target": "src/_pytest/mark/expression.py:Expression.compile",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/__init__.py:pytest_collection_modifyitems",
      "target": "src/_pytest/mark/__init__.py:deselect_by_keyword",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/__init__.py:pytest_collection_modifyitems",
      "target": "src/_pytest/mark/__init__.py:deselect_by_mark",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/structures.py",
      "target": "src/_pytest/mark/structures.py:istestfunc",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py",
      "target": "src/_pytest/mark/structures.py:get_empty_parameterset_mark",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py",
      "target": "src/_pytest/mark/structures.py:ParameterSet",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py",
      "target": "src/_pytest/mark/structures.py:Mark",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py",
      "target": "src/_pytest/mark/structures.py:MarkDecorator",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py",
      "target": "src/_pytest/mark/structures.py:get_unpacked_marks",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py",
      "target": "src/_pytest/mark/structures.py:normalize_mark_list",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py",
      "target": "src/_pytest/mark/structures.py:store_mark",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py",
      "target": "src/_pytest/mark/structures.py:_SkipMarkDecorator",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py",
      "target": "src/_pytest/mark/structures.py:_SkipifMarkDecorator",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py",
      "target": "src/_pytest/mark/structures.py:_XfailMarkDecorator",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py",
      "target": "src/_pytest/mark/structures.py:_ParametrizeMarkDecorator",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py",
      "target": "src/_pytest/mark/structures.py:_UsefixturesMarkDecorator",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py",
      "target": "src/_pytest/mark/structures.py:_FilterwarningsMarkDecorator",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py",
      "target": "src/_pytest/mark/structures.py:MarkGenerator",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py",
      "target": "src/_pytest/mark/structures.py:NodeKeywords",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py",
      "target": "src/_pytest/_code/__init__.py",
      "type": "imports"
    },
    {
      "source": "src/_pytest/mark/structures.py",
      "target": "src/_pytest/compat.py:ascii_escaped",
      "type": "imports"
    },
    {
      "source": "src/_pytest/mark/structures.py",
      "target": "src/_pytest/compat.py",
      "type": "imports"
    },
    {
      "source": "src/_pytest/mark/structures.py",
      "target": "src/_pytest/compat.py:NotSetType",
      "type": "imports"
    },
    {
      "source": "src/_pytest/mark/structures.py",
      "target": "src/_pytest/nodes.py:Node",
      "type": "imports"
    },
    {
      "source": "src/_pytest/mark/structures.py",
      "target": "src/_pytest/nodes.py:Collector",
      "type": "imports"
    },
    {
      "source": "src/_pytest/mark/structures.py",
      "target": "src/_pytest/fixtures.py:getfixturemarker",
      "type": "imports"
    },
    {
      "source": "src/_pytest/mark/structures.py:get_empty_parameterset_mark",
      "target": "src/_pytest/nodes.py:Collector",
      "type": "imports"
    },
    {
      "source": "src/_pytest/mark/structures.py:get_empty_parameterset_mark",
      "target": "src/_pytest/nodes.py:Collector.CollectError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/structures.py:get_empty_parameterset_mark",
      "target": "src/_pytest/_code/code.py:getfslineno",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/structures.py:ParameterSet",
      "target": "src/_pytest/mark/structures.py:ParameterSet.param",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:ParameterSet",
      "target": "src/_pytest/mark/structures.py:ParameterSet.extract_from",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:ParameterSet",
      "target": "src/_pytest/mark/structures.py:ParameterSet._parse_parametrize_args",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:ParameterSet",
      "target": "src/_pytest/mark/structures.py:ParameterSet._parse_parametrize_parameters",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:ParameterSet",
      "target": "src/_pytest/mark/structures.py:ParameterSet._for_parametrize",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:ParameterSet.param",
      "target": "src/_pytest/compat.py:ascii_escaped",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/structures.py:ParameterSet.param",
      "target": "src/_pytest/_code/code.py:ExceptionInfo.type",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/structures.py:ParameterSet.extract_from",
      "target": "src/_pytest/mark/structures.py:ParameterSet.param",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/structures.py:ParameterSet._parse_parametrize_args",
      "target": "src/_pytest/_code/source.py:Source.strip",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/structures.py:ParameterSet._parse_parametrize_parameters",
      "target": "src/_pytest/mark/structures.py:ParameterSet.extract_from",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/structures.py:ParameterSet._for_parametrize",
      "target": "src/_pytest/mark/structures.py:ParameterSet._parse_parametrize_args",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/structures.py:ParameterSet._for_parametrize",
      "target": "src/_pytest/mark/structures.py:get_empty_parameterset_mark",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/structures.py:ParameterSet._for_parametrize",
      "target": "src/_pytest/mark/structures.py:ParameterSet._parse_parametrize_parameters",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/structures.py:Mark",
      "target": "src/_pytest/mark/structures.py:Mark._has_param_ids",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:Mark",
      "target": "src/_pytest/mark/structures.py:Mark.combined_with",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:Mark.combined_with",
      "target": "src/_pytest/mark/structures.py:Mark._has_param_ids",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/structures.py:MarkDecorator",
      "target": "src/_pytest/mark/structures.py:MarkDecorator.name",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:MarkDecorator",
      "target": "src/_pytest/mark/structures.py:MarkDecorator.args",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:MarkDecorator",
      "target": "src/_pytest/mark/structures.py:MarkDecorator.kwargs",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:MarkDecorator",
      "target": "src/_pytest/mark/structures.py:MarkDecorator.markname",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:MarkDecorator",
      "target": "src/_pytest/mark/structures.py:MarkDecorator.with_args",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:MarkDecorator",
      "target": "src/_pytest/mark/structures.py:MarkDecorator.__call__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:MarkDecorator",
      "target": "src/_pytest/mark/structures.py:MarkDecorator.__call__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:MarkDecorator",
      "target": "src/_pytest/mark/structures.py:MarkDecorator.__call__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:MarkDecorator.with_args",
      "target": "src/_pytest/mark/structures.py:Mark",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/structures.py:MarkDecorator.with_args",
      "target": "src/_pytest/mark/structures.py:Mark.combined_with",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/structures.py:MarkDecorator.__call__",
      "target": "src/_pytest/mark/structures.py:store_mark",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/structures.py:MarkDecorator.__call__",
      "target": "src/_pytest/mark/structures.py:MarkDecorator.with_args",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/structures.py:MarkDecorator.__call__",
      "target": "src/_pytest/mark/structures.py:istestfunc",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/structures.py:get_unpacked_marks",
      "target": "src/_pytest/mark/structures.py:normalize_mark_list",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/structures.py:normalize_mark_list",
      "target": "src/_pytest/_code/code.py:Frame.repr",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/structures.py:store_mark",
      "target": "src/_pytest/fixtures.py:getfixturemarker",
      "type": "imports"
    },
    {
      "source": "src/_pytest/mark/structures.py:store_mark",
      "target": "src/_pytest/fixtures.py:getfixturemarker",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/structures.py:store_mark",
      "target": "src/_pytest/mark/structures.py:get_unpacked_marks",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/structures.py:store_mark",
      "target": "src/_pytest/nodes.py:Node.warn",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/structures.py:_SkipMarkDecorator",
      "target": "src/_pytest/mark/structures.py:_SkipMarkDecorator.__call__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:_SkipMarkDecorator",
      "target": "src/_pytest/mark/structures.py:_SkipMarkDecorator.__call__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:_SkipMarkDecorator",
      "target": "src/_pytest/mark/structures.py:MarkDecorator",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/mark/structures.py:_SkipifMarkDecorator",
      "target": "src/_pytest/mark/structures.py:_SkipifMarkDecorator.__call__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:_SkipifMarkDecorator",
      "target": "src/_pytest/mark/structures.py:MarkDecorator",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/mark/structures.py:_XfailMarkDecorator",
      "target": "src/_pytest/mark/structures.py:_XfailMarkDecorator.__call__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:_XfailMarkDecorator",
      "target": "src/_pytest/mark/structures.py:_XfailMarkDecorator.__call__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:_XfailMarkDecorator",
      "target": "src/_pytest/mark/structures.py:MarkDecorator",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/mark/structures.py:_ParametrizeMarkDecorator",
      "target": "src/_pytest/mark/structures.py:_ParametrizeMarkDecorator.__call__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:_ParametrizeMarkDecorator",
      "target": "src/_pytest/mark/structures.py:MarkDecorator",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/mark/structures.py:_UsefixturesMarkDecorator",
      "target": "src/_pytest/mark/structures.py:_UsefixturesMarkDecorator.__call__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:_UsefixturesMarkDecorator",
      "target": "src/_pytest/mark/structures.py:MarkDecorator",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/mark/structures.py:_FilterwarningsMarkDecorator",
      "target": "src/_pytest/mark/structures.py:_FilterwarningsMarkDecorator.__call__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:_FilterwarningsMarkDecorator",
      "target": "src/_pytest/mark/structures.py:MarkDecorator",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/mark/structures.py:MarkGenerator",
      "target": "src/_pytest/mark/structures.py:MarkGenerator.__getattr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:MarkGenerator.__getattr__",
      "target": "src/_pytest/nodes.py:Node.warn",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/structures.py:MarkGenerator.__getattr__",
      "target": "src/_pytest/mark/structures.py:Mark",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/structures.py:MarkGenerator.__getattr__",
      "target": "src/_pytest/_code/source.py:Source.strip",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/structures.py:MarkGenerator.__getattr__",
      "target": "src/_pytest/mark/structures.py:MarkDecorator",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/structures.py:NodeKeywords",
      "target": "src/_pytest/mark/structures.py:NodeKeywords.__getitem__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:NodeKeywords",
      "target": "src/_pytest/mark/structures.py:NodeKeywords.__setitem__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:NodeKeywords",
      "target": "src/_pytest/mark/structures.py:NodeKeywords.__contains__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:NodeKeywords",
      "target": "src/_pytest/mark/structures.py:NodeKeywords.update",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:NodeKeywords",
      "target": "src/_pytest/mark/structures.py:NodeKeywords.__delitem__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:NodeKeywords",
      "target": "src/_pytest/mark/structures.py:NodeKeywords.__iter__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:NodeKeywords",
      "target": "src/_pytest/mark/structures.py:NodeKeywords.__len__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/structures.py:NodeKeywords",
      "target": "src/_pytest/mark/structures.py:NodeKeywords.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/expression.py",
      "target": "src/_pytest/mark/expression.py:TokenType",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/expression.py",
      "target": "src/_pytest/mark/expression.py:Token",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/expression.py",
      "target": "src/_pytest/mark/expression.py:ParseError",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/expression.py",
      "target": "src/_pytest/mark/expression.py:Scanner",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/expression.py",
      "target": "src/_pytest/mark/expression.py:expression",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/expression.py",
      "target": "src/_pytest/mark/expression.py:expr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/expression.py",
      "target": "src/_pytest/mark/expression.py:and_expr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/expression.py",
      "target": "src/_pytest/mark/expression.py:not_expr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/expression.py",
      "target": "src/_pytest/mark/expression.py:MatcherAdapter",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/expression.py",
      "target": "src/_pytest/mark/expression.py:Expression",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/expression.py:ParseError",
      "target": "src/_pytest/mark/expression.py:ParseError.__str__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/expression.py:Scanner",
      "target": "src/_pytest/mark/expression.py:Scanner.lex",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/expression.py:Scanner",
      "target": "src/_pytest/mark/expression.py:Scanner.lex",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/expression.py:Scanner",
      "target": "src/_pytest/mark/expression.py:Scanner.accept",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/expression.py:Scanner",
      "target": "src/_pytest/mark/expression.py:Scanner.reject",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/expression.py:Scanner.lex",
      "target": "src/_pytest/mark/expression.py:Token",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/expression.py:Scanner.lex",
      "target": "src/_pytest/mark/expression.py:ParseError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/expression.py:Scanner.accept",
      "target": "src/_pytest/mark/expression.py:Scanner.reject",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/expression.py:Scanner.reject",
      "target": "src/_pytest/mark/expression.py:ParseError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/expression.py:expression",
      "target": "src/_pytest/mark/expression.py:Expression",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/expression.py:expression",
      "target": "src/_pytest/mark/expression.py:expr",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/expression.py:expression",
      "target": "src/_pytest/mark/expression.py:Scanner.accept",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/expression.py:expr",
      "target": "src/_pytest/mark/expression.py:and_expr",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/expression.py:expr",
      "target": "src/_pytest/mark/expression.py:Scanner.accept",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/expression.py:and_expr",
      "target": "src/_pytest/mark/expression.py:not_expr",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/expression.py:and_expr",
      "target": "src/_pytest/mark/expression.py:Scanner.accept",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/expression.py:not_expr",
      "target": "src/_pytest/mark/expression.py:expr",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/expression.py:not_expr",
      "target": "src/_pytest/mark/expression.py:Scanner.reject",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/expression.py:not_expr",
      "target": "src/_pytest/mark/expression.py:Scanner.accept",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/expression.py:MatcherAdapter",
      "target": "src/_pytest/mark/expression.py:MatcherAdapter.__getitem__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/expression.py:MatcherAdapter",
      "target": "src/_pytest/mark/expression.py:MatcherAdapter.__iter__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/expression.py:MatcherAdapter",
      "target": "src/_pytest/mark/expression.py:MatcherAdapter.__len__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/expression.py:Expression",
      "target": "src/_pytest/mark/expression.py:Expression.compile",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/expression.py:Expression",
      "target": "src/_pytest/mark/expression.py:Expression.evaluate",
      "type": "contains"
    },
    {
      "source": "src/_pytest/mark/expression.py:Expression.compile",
      "target": "src/_pytest/mark/expression.py:expression",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/expression.py:Expression.compile",
      "target": "src/_pytest/mark/expression.py:Scanner",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/mark/expression.py:Expression.evaluate",
      "target": "src/_pytest/mark/expression.py:MatcherAdapter",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code",
      "target": "src/_pytest/_code/code.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code",
      "target": "src/_pytest/_code/__init__.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code",
      "target": "src/_pytest/_code/source.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py",
      "target": "src/_pytest/_code/code.py:Code",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py",
      "target": "src/_pytest/_code/code.py:Frame",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py",
      "target": "src/_pytest/_code/code.py:TracebackEntry",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py",
      "target": "src/_pytest/_code/code.py:Traceback",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py",
      "target": "src/_pytest/_code/code.py:ExceptionInfo",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py",
      "target": "src/_pytest/_code/code.py:FormattedExcinfo",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py",
      "target": "src/_pytest/_code/code.py:TerminalRepr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py",
      "target": "src/_pytest/_code/code.py:ExceptionRepr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py",
      "target": "src/_pytest/_code/code.py:ExceptionChainRepr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py",
      "target": "src/_pytest/_code/code.py:ReprExceptionInfo",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py",
      "target": "src/_pytest/_code/code.py:ReprTraceback",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py",
      "target": "src/_pytest/_code/code.py:ReprTracebackNative",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py",
      "target": "src/_pytest/_code/code.py:ReprEntryNative",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py",
      "target": "src/_pytest/_code/code.py:ReprEntry",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py",
      "target": "src/_pytest/_code/code.py:ReprFileLocation",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py",
      "target": "src/_pytest/_code/code.py:ReprLocals",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py",
      "target": "src/_pytest/_code/code.py:ReprFuncArgs",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py",
      "target": "src/_pytest/_code/code.py:getfslineno",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py",
      "target": "src/_pytest/_code/code.py:filter_traceback",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:Code",
      "target": "src/_pytest/_code/code.py:Code.from_function",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:Code",
      "target": "src/_pytest/_code/code.py:Code.__eq__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:Code",
      "target": "src/_pytest/_code/code.py:Code.firstlineno",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:Code",
      "target": "src/_pytest/_code/code.py:Code.name",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:Code",
      "target": "src/_pytest/_code/code.py:Code.path",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:Code",
      "target": "src/_pytest/_code/code.py:Code.fullsource",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:Code",
      "target": "src/_pytest/_code/code.py:Code.source",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:Code",
      "target": "src/_pytest/_code/code.py:Code.getargs",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:Frame",
      "target": "src/_pytest/_code/code.py:Frame.lineno",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:Frame",
      "target": "src/_pytest/_code/code.py:Frame.f_globals",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:Frame",
      "target": "src/_pytest/_code/code.py:Frame.f_locals",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:Frame",
      "target": "src/_pytest/_code/code.py:Frame.code",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:Frame",
      "target": "src/_pytest/_code/code.py:Frame.statement",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:Frame",
      "target": "src/_pytest/_code/code.py:Frame.eval",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:Frame",
      "target": "src/_pytest/_code/code.py:Frame.repr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:Frame",
      "target": "src/_pytest/_code/code.py:Frame.getargs",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:Frame.code",
      "target": "src/_pytest/_code/code.py:Code",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:Frame.getargs",
      "target": "src/_pytest/_code/code.py:Code.getargs",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:TracebackEntry",
      "target": "src/_pytest/_code/code.py:TracebackEntry.with_repr_style",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:TracebackEntry",
      "target": "src/_pytest/_code/code.py:TracebackEntry.lineno",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:TracebackEntry",
      "target": "src/_pytest/_code/code.py:TracebackEntry.frame",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:TracebackEntry",
      "target": "src/_pytest/_code/code.py:TracebackEntry.relline",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:TracebackEntry",
      "target": "src/_pytest/_code/code.py:TracebackEntry.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:TracebackEntry",
      "target": "src/_pytest/_code/code.py:TracebackEntry.statement",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:TracebackEntry",
      "target": "src/_pytest/_code/code.py:TracebackEntry.path",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:TracebackEntry",
      "target": "src/_pytest/_code/code.py:TracebackEntry.locals",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:TracebackEntry",
      "target": "src/_pytest/_code/code.py:TracebackEntry.getfirstlinesource",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:TracebackEntry",
      "target": "src/_pytest/_code/code.py:TracebackEntry.getsource",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:TracebackEntry",
      "target": "src/_pytest/_code/code.py:TracebackEntry.ishidden",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:TracebackEntry",
      "target": "src/_pytest/_code/code.py:TracebackEntry.__str__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:TracebackEntry",
      "target": "src/_pytest/_code/code.py:TracebackEntry.name",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:TracebackEntry.frame",
      "target": "src/_pytest/_code/code.py:Frame",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:TracebackEntry.getsource",
      "target": "src/_pytest/_code/code.py:TracebackEntry.getfirstlinesource",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:Traceback",
      "target": "src/_pytest/_code/code.py:Traceback.cut",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:Traceback",
      "target": "src/_pytest/_code/code.py:Traceback.__getitem__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:Traceback",
      "target": "src/_pytest/_code/code.py:Traceback.__getitem__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:Traceback",
      "target": "src/_pytest/_code/code.py:Traceback.__getitem__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:Traceback",
      "target": "src/_pytest/_code/code.py:Traceback.filter",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:Traceback",
      "target": "src/_pytest/_code/code.py:Traceback.recursionindex",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:Traceback",
      "target": "src/_pytest/_code/code.py:TracebackEntry",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:Traceback.filter",
      "target": "src/_pytest/_code/code.py:TracebackEntry.ishidden",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionInfo",
      "target": "src/_pytest/_code/code.py:ExceptionInfo.from_exception",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionInfo",
      "target": "src/_pytest/_code/code.py:ExceptionInfo.from_exc_info",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionInfo",
      "target": "src/_pytest/_code/code.py:ExceptionInfo.from_current",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionInfo",
      "target": "src/_pytest/_code/code.py:ExceptionInfo.for_later",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionInfo",
      "target": "src/_pytest/_code/code.py:ExceptionInfo.fill_unfilled",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionInfo",
      "target": "src/_pytest/_code/code.py:ExceptionInfo.type",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionInfo",
      "target": "src/_pytest/_code/code.py:ExceptionInfo.value",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionInfo",
      "target": "src/_pytest/_code/code.py:ExceptionInfo.tb",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionInfo",
      "target": "src/_pytest/_code/code.py:ExceptionInfo.typename",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionInfo",
      "target": "src/_pytest/_code/code.py:ExceptionInfo.traceback",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionInfo",
      "target": "src/_pytest/_code/code.py:ExceptionInfo.traceback",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionInfo",
      "target": "src/_pytest/_code/code.py:ExceptionInfo.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionInfo",
      "target": "src/_pytest/_code/code.py:ExceptionInfo.exconly",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionInfo",
      "target": "src/_pytest/_code/code.py:ExceptionInfo.errisinstance",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionInfo",
      "target": "src/_pytest/_code/code.py:ExceptionInfo._getreprcrash",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionInfo",
      "target": "src/_pytest/_code/code.py:ExceptionInfo.getrepr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionInfo",
      "target": "src/_pytest/_code/code.py:ExceptionInfo.match",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionInfo.from_exception",
      "target": "src/_pytest/_code/code.py:ExceptionInfo.type",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionInfo.from_exception",
      "target": "src/_pytest/_code/code.py:ExceptionInfo.from_exc_info",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionInfo.from_current",
      "target": "src/_pytest/_code/code.py:ExceptionInfo.from_exc_info",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionInfo._getreprcrash",
      "target": "src/_pytest/_code/code.py:ExceptionInfo.exconly",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionInfo._getreprcrash",
      "target": "src/_pytest/_code/code.py:TracebackEntry.ishidden",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionInfo._getreprcrash",
      "target": "src/_pytest/_code/code.py:ReprFileLocation",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionInfo.getrepr",
      "target": "src/_pytest/_code/code.py:FormattedExcinfo",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionInfo.getrepr",
      "target": "src/_pytest/_code/code.py:ExceptionInfo._getreprcrash",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionInfo.getrepr",
      "target": "src/_pytest/_code/code.py:ReprExceptionInfo",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionInfo.getrepr",
      "target": "src/_pytest/_code/code.py:ReprTracebackNative",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionInfo.getrepr",
      "target": "src/_pytest/_code/code.py:FormattedExcinfo.repr_excinfo",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo",
      "target": "src/_pytest/_code/code.py:FormattedExcinfo._getindent",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo",
      "target": "src/_pytest/_code/code.py:FormattedExcinfo._getentrysource",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo",
      "target": "src/_pytest/_code/code.py:FormattedExcinfo.repr_args",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo",
      "target": "src/_pytest/_code/code.py:FormattedExcinfo.get_source",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo",
      "target": "src/_pytest/_code/code.py:FormattedExcinfo.get_exconly",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo",
      "target": "src/_pytest/_code/code.py:FormattedExcinfo.repr_locals",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo",
      "target": "src/_pytest/_code/code.py:FormattedExcinfo.repr_traceback_entry",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo",
      "target": "src/_pytest/_code/code.py:FormattedExcinfo._makepath",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo",
      "target": "src/_pytest/_code/code.py:FormattedExcinfo.repr_traceback",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo",
      "target": "src/_pytest/_code/code.py:FormattedExcinfo._truncate_recursive_traceback",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo",
      "target": "src/_pytest/_code/code.py:FormattedExcinfo.repr_excinfo",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo._getentrysource",
      "target": "src/_pytest/_code/code.py:TracebackEntry.getsource",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo.repr_args",
      "target": "src/_pytest/_code/code.py:ReprFuncArgs",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo.repr_args",
      "target": "src/_pytest/_code/code.py:Frame.getargs",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo.repr_args",
      "target": "src/_pytest/_code/code.py:Code.getargs",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo.get_source",
      "target": "src/_pytest/_code/code.py:FormattedExcinfo.get_exconly",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo.get_source",
      "target": "src/_pytest/_code/code.py:FormattedExcinfo._getindent",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo.get_exconly",
      "target": "src/_pytest/_code/code.py:ExceptionInfo.exconly",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo.repr_locals",
      "target": "src/_pytest/_code/code.py:ReprLocals",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo.repr_traceback_entry",
      "target": "src/_pytest/_code/code.py:FormattedExcinfo.get_exconly",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo.repr_traceback_entry",
      "target": "src/_pytest/_code/code.py:TracebackEntry.getfirstlinesource",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo.repr_traceback_entry",
      "target": "src/_pytest/_code/code.py:ReprEntry",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo.repr_traceback_entry",
      "target": "src/_pytest/_code/code.py:FormattedExcinfo.get_source",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo.repr_traceback_entry",
      "target": "src/_pytest/_code/code.py:FormattedExcinfo._getentrysource",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo.repr_traceback_entry",
      "target": "src/_pytest/_code/code.py:FormattedExcinfo.repr_args",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo.repr_traceback_entry",
      "target": "src/_pytest/_code/code.py:FormattedExcinfo.repr_locals",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo.repr_traceback_entry",
      "target": "src/_pytest/_code/code.py:FormattedExcinfo._makepath",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo.repr_traceback_entry",
      "target": "src/_pytest/_code/code.py:ReprFileLocation",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo.repr_traceback",
      "target": "src/_pytest/_code/code.py:FormattedExcinfo.repr_traceback_entry",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo.repr_traceback",
      "target": "src/_pytest/_code/code.py:Traceback.filter",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo.repr_traceback",
      "target": "src/_pytest/_code/code.py:FormattedExcinfo._truncate_recursive_traceback",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo.repr_traceback",
      "target": "src/_pytest/_code/code.py:ReprTraceback",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo._truncate_recursive_traceback",
      "target": "src/_pytest/_code/code.py:ExceptionInfo.type",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo._truncate_recursive_traceback",
      "target": "src/_pytest/_code/code.py:Traceback.recursionindex",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo.repr_excinfo",
      "target": "src/_pytest/_code/code.py:ExceptionChainRepr",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo.repr_excinfo",
      "target": "src/_pytest/_code/code.py:ExceptionInfo._getreprcrash",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo.repr_excinfo",
      "target": "src/_pytest/_code/code.py:ExceptionInfo.from_exception",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo.repr_excinfo",
      "target": "src/_pytest/_code/code.py:ExceptionInfo.type",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo.repr_excinfo",
      "target": "src/_pytest/_code/code.py:ReprTracebackNative",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:FormattedExcinfo.repr_excinfo",
      "target": "src/_pytest/_code/code.py:FormattedExcinfo.repr_traceback",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:TerminalRepr",
      "target": "src/_pytest/_code/code.py:TerminalRepr.__str__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:TerminalRepr",
      "target": "src/_pytest/_code/code.py:TerminalRepr.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:TerminalRepr",
      "target": "src/_pytest/_code/code.py:TerminalRepr.toterminal",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:TerminalRepr.__str__",
      "target": "src/_pytest/_code/code.py:ReprFuncArgs.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:TerminalRepr.__str__",
      "target": "src/_pytest/_code/code.py:ReprExceptionInfo.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:TerminalRepr.__str__",
      "target": "src/_pytest/_code/code.py:ReprFileLocation.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:TerminalRepr.__str__",
      "target": "src/_pytest/_code/code.py:ReprTraceback.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:TerminalRepr.__str__",
      "target": "src/_pytest/_code/code.py:ReprEntryNative.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:TerminalRepr.__str__",
      "target": "src/_pytest/_code/code.py:TerminalRepr.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:TerminalRepr.__str__",
      "target": "src/_pytest/_code/code.py:ExceptionChainRepr.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:TerminalRepr.__str__",
      "target": "src/_pytest/_code/code.py:ReprEntry.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:TerminalRepr.__str__",
      "target": "src/_pytest/_code/code.py:ReprLocals.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:TerminalRepr.__str__",
      "target": "src/_pytest/_code/code.py:ExceptionRepr.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionRepr",
      "target": "src/_pytest/_code/code.py:ExceptionRepr.addsection",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionRepr",
      "target": "src/_pytest/_code/code.py:ExceptionRepr.toterminal",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionRepr",
      "target": "src/_pytest/_code/code.py:TerminalRepr",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionChainRepr",
      "target": "src/_pytest/_code/code.py:ExceptionChainRepr.toterminal",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionChainRepr",
      "target": "src/_pytest/_code/code.py:ExceptionRepr",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionChainRepr.toterminal",
      "target": "src/_pytest/_code/code.py:ReprFuncArgs.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionChainRepr.toterminal",
      "target": "src/_pytest/_code/code.py:ReprExceptionInfo.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionChainRepr.toterminal",
      "target": "src/_pytest/_code/code.py:ReprFileLocation.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionChainRepr.toterminal",
      "target": "src/_pytest/_code/code.py:ReprTraceback.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionChainRepr.toterminal",
      "target": "src/_pytest/_code/code.py:ReprEntryNative.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionChainRepr.toterminal",
      "target": "src/_pytest/_code/code.py:TerminalRepr.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionChainRepr.toterminal",
      "target": "src/_pytest/_code/code.py:ReprEntry.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionChainRepr.toterminal",
      "target": "src/_pytest/_code/code.py:ReprLocals.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ExceptionChainRepr.toterminal",
      "target": "src/_pytest/_code/code.py:ExceptionRepr.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprExceptionInfo",
      "target": "src/_pytest/_code/code.py:ReprExceptionInfo.toterminal",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprExceptionInfo",
      "target": "src/_pytest/_code/code.py:ExceptionRepr",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprExceptionInfo.toterminal",
      "target": "src/_pytest/_code/code.py:ReprFuncArgs.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprExceptionInfo.toterminal",
      "target": "src/_pytest/_code/code.py:ReprFileLocation.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprExceptionInfo.toterminal",
      "target": "src/_pytest/_code/code.py:ReprTraceback.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprExceptionInfo.toterminal",
      "target": "src/_pytest/_code/code.py:ReprEntryNative.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprExceptionInfo.toterminal",
      "target": "src/_pytest/_code/code.py:TerminalRepr.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprExceptionInfo.toterminal",
      "target": "src/_pytest/_code/code.py:ExceptionChainRepr.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprExceptionInfo.toterminal",
      "target": "src/_pytest/_code/code.py:ReprEntry.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprExceptionInfo.toterminal",
      "target": "src/_pytest/_code/code.py:ReprLocals.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprExceptionInfo.toterminal",
      "target": "src/_pytest/_code/code.py:ExceptionRepr.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprTraceback",
      "target": "src/_pytest/_code/code.py:ReprTraceback.toterminal",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprTraceback",
      "target": "src/_pytest/_code/code.py:TerminalRepr",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprTraceback.toterminal",
      "target": "src/_pytest/_code/code.py:ReprFuncArgs.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprTraceback.toterminal",
      "target": "src/_pytest/_code/code.py:ReprExceptionInfo.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprTraceback.toterminal",
      "target": "src/_pytest/_code/code.py:ReprFileLocation.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprTraceback.toterminal",
      "target": "src/_pytest/_code/code.py:ReprEntryNative.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprTraceback.toterminal",
      "target": "src/_pytest/_code/code.py:TerminalRepr.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprTraceback.toterminal",
      "target": "src/_pytest/_code/code.py:ExceptionChainRepr.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprTraceback.toterminal",
      "target": "src/_pytest/_code/code.py:ReprEntry.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprTraceback.toterminal",
      "target": "src/_pytest/_code/code.py:ReprLocals.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprTraceback.toterminal",
      "target": "src/_pytest/_code/code.py:ExceptionRepr.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprTracebackNative",
      "target": "src/_pytest/_code/code.py:ReprEntryNative",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprTracebackNative",
      "target": "src/_pytest/_code/code.py:ReprTraceback",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprEntryNative",
      "target": "src/_pytest/_code/code.py:ReprEntryNative.toterminal",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprEntryNative",
      "target": "src/_pytest/_code/code.py:TerminalRepr",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprEntry",
      "target": "src/_pytest/_code/code.py:ReprEntry._write_entry_lines",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprEntry",
      "target": "src/_pytest/_code/code.py:ReprEntry.toterminal",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprEntry",
      "target": "src/_pytest/_code/code.py:ReprEntry.__str__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprEntry",
      "target": "src/_pytest/_code/code.py:TerminalRepr",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprEntry.toterminal",
      "target": "src/_pytest/_code/code.py:ReprFuncArgs.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprEntry.toterminal",
      "target": "src/_pytest/_code/code.py:ReprExceptionInfo.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprEntry.toterminal",
      "target": "src/_pytest/_code/code.py:ReprFileLocation.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprEntry.toterminal",
      "target": "src/_pytest/_code/code.py:ReprTraceback.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprEntry.toterminal",
      "target": "src/_pytest/_code/code.py:ReprEntryNative.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprEntry.toterminal",
      "target": "src/_pytest/_code/code.py:TerminalRepr.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprEntry.toterminal",
      "target": "src/_pytest/_code/code.py:ExceptionChainRepr.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprEntry.toterminal",
      "target": "src/_pytest/_code/code.py:ReprLocals.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprEntry.toterminal",
      "target": "src/_pytest/_code/code.py:ExceptionRepr.toterminal",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprEntry.toterminal",
      "target": "src/_pytest/_code/code.py:ReprEntry._write_entry_lines",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprFileLocation",
      "target": "src/_pytest/_code/code.py:ReprFileLocation.__post_init__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprFileLocation",
      "target": "src/_pytest/_code/code.py:ReprFileLocation.toterminal",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprFileLocation",
      "target": "src/_pytest/_code/code.py:TerminalRepr",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprLocals",
      "target": "src/_pytest/_code/code.py:ReprLocals.toterminal",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprLocals",
      "target": "src/_pytest/_code/code.py:TerminalRepr",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprFuncArgs",
      "target": "src/_pytest/_code/code.py:ReprFuncArgs.toterminal",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/code.py:ReprFuncArgs",
      "target": "src/_pytest/_code/code.py:TerminalRepr",
      "type": "inherits"
    },
    {
      "source": "src/_pytest/_code/code.py:getfslineno",
      "target": "src/_pytest/_code/code.py:Code.from_function",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/__init__.py",
      "target": "src/_pytest/_code/code.py:Code",
      "type": "imports"
    },
    {
      "source": "src/_pytest/_code/__init__.py",
      "target": "src/_pytest/_code/code.py:ExceptionInfo",
      "type": "imports"
    },
    {
      "source": "src/_pytest/_code/__init__.py",
      "target": "src/_pytest/_code/code.py:filter_traceback",
      "type": "imports"
    },
    {
      "source": "src/_pytest/_code/__init__.py",
      "target": "src/_pytest/_code/code.py:Frame",
      "type": "imports"
    },
    {
      "source": "src/_pytest/_code/__init__.py",
      "target": "src/_pytest/_code/code.py:getfslineno",
      "type": "imports"
    },
    {
      "source": "src/_pytest/_code/__init__.py",
      "target": "src/_pytest/_code/code.py:Traceback",
      "type": "imports"
    },
    {
      "source": "src/_pytest/_code/__init__.py",
      "target": "src/_pytest/_code/code.py:TracebackEntry",
      "type": "imports"
    },
    {
      "source": "src/_pytest/_code/__init__.py",
      "target": "src/_pytest/_code/source.py:getrawcode",
      "type": "imports"
    },
    {
      "source": "src/_pytest/_code/__init__.py",
      "target": "src/_pytest/_code/source.py:Source",
      "type": "imports"
    },
    {
      "source": "src/_pytest/_code/source.py",
      "target": "src/_pytest/_code/source.py:Source",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/source.py",
      "target": "src/_pytest/_code/source.py:findsource",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/source.py",
      "target": "src/_pytest/_code/source.py:getrawcode",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/source.py",
      "target": "src/_pytest/_code/source.py:deindent",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/source.py",
      "target": "src/_pytest/_code/source.py:get_statement_startend2",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/source.py",
      "target": "src/_pytest/_code/source.py:getstatementrange_ast",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/source.py:Source",
      "target": "src/_pytest/_code/source.py:Source.__eq__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/source.py:Source",
      "target": "src/_pytest/_code/source.py:Source.__getitem__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/source.py:Source",
      "target": "src/_pytest/_code/source.py:Source.__getitem__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/source.py:Source",
      "target": "src/_pytest/_code/source.py:Source.__getitem__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/source.py:Source",
      "target": "src/_pytest/_code/source.py:Source.__iter__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/source.py:Source",
      "target": "src/_pytest/_code/source.py:Source.__len__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/source.py:Source",
      "target": "src/_pytest/_code/source.py:Source.strip",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/source.py:Source",
      "target": "src/_pytest/_code/source.py:Source.indent",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/source.py:Source",
      "target": "src/_pytest/_code/source.py:Source.getstatement",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/source.py:Source",
      "target": "src/_pytest/_code/source.py:Source.getstatementrange",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/source.py:Source",
      "target": "src/_pytest/_code/source.py:Source.deindent",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/source.py:Source",
      "target": "src/_pytest/_code/source.py:Source.deindent",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/source.py:Source",
      "target": "src/_pytest/_code/source.py:Source.__str__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_code/source.py:Source",
      "target": "src/_pytest/_code/source.py:deindent",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/source.py:Source",
      "target": "src/_pytest/_code/source.py:getrawcode",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/source.py:Source.getstatement",
      "target": "src/_pytest/_code/source.py:Source.getstatementrange",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/source.py:Source.getstatementrange",
      "target": "src/_pytest/_code/source.py:getstatementrange_ast",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/source.py:Source.deindent",
      "target": "src/_pytest/_code/source.py:deindent",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/source.py:findsource",
      "target": "src/_pytest/_code/source.py:Source",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_code/source.py:getstatementrange_ast",
      "target": "src/_pytest/_code/source.py:get_statement_startend2",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion",
      "target": "src/_pytest/assertion/truncate.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion",
      "target": "src/_pytest/assertion/util.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion",
      "target": "src/_pytest/assertion/__init__.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion",
      "target": "src/_pytest/assertion/rewrite.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/truncate.py",
      "target": "src/_pytest/assertion/truncate.py:truncate_if_required",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/truncate.py",
      "target": "src/_pytest/assertion/truncate.py:_should_truncate_item",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/truncate.py",
      "target": "src/_pytest/assertion/truncate.py:_truncate_explanation",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/truncate.py",
      "target": "src/_pytest/assertion/truncate.py:_truncate_by_char_count",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/truncate.py:truncate_if_required",
      "target": "src/_pytest/assertion/truncate.py:_should_truncate_item",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/truncate.py:truncate_if_required",
      "target": "src/_pytest/assertion/truncate.py:_truncate_explanation",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/truncate.py:_truncate_explanation",
      "target": "src/_pytest/assertion/truncate.py:_truncate_by_char_count",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py",
      "target": "src/_pytest/assertion/util.py:format_explanation",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/util.py",
      "target": "src/_pytest/assertion/util.py:_split_explanation",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/util.py",
      "target": "src/_pytest/assertion/util.py:_format_lines",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/util.py",
      "target": "src/_pytest/assertion/util.py:issequence",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/util.py",
      "target": "src/_pytest/assertion/util.py:istext",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/util.py",
      "target": "src/_pytest/assertion/util.py:isdict",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/util.py",
      "target": "src/_pytest/assertion/util.py:isset",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/util.py",
      "target": "src/_pytest/assertion/util.py:isnamedtuple",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/util.py",
      "target": "src/_pytest/assertion/util.py:isdatacls",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/util.py",
      "target": "src/_pytest/assertion/util.py:isattrs",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/util.py",
      "target": "src/_pytest/assertion/util.py:isiterable",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/util.py",
      "target": "src/_pytest/assertion/util.py:has_default_eq",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/util.py",
      "target": "src/_pytest/assertion/util.py:assertrepr_compare",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/util.py",
      "target": "src/_pytest/assertion/util.py:_compare_eq_any",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/util.py",
      "target": "src/_pytest/assertion/util.py:_diff_text",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/util.py",
      "target": "src/_pytest/assertion/util.py:_surrounding_parens_on_own_lines",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/util.py",
      "target": "src/_pytest/assertion/util.py:_compare_eq_iterable",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/util.py",
      "target": "src/_pytest/assertion/util.py:_compare_eq_sequence",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/util.py",
      "target": "src/_pytest/assertion/util.py:_compare_eq_set",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/util.py",
      "target": "src/_pytest/assertion/util.py:_compare_eq_dict",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/util.py",
      "target": "src/_pytest/assertion/util.py:_compare_eq_cls",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/util.py",
      "target": "src/_pytest/assertion/util.py:_notin_text",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/util.py",
      "target": "src/_pytest/assertion/util.py:running_on_ci",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/util.py:format_explanation",
      "target": "src/_pytest/assertion/util.py:_format_lines",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py:format_explanation",
      "target": "src/_pytest/assertion/util.py:_split_explanation",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py:isiterable",
      "target": "src/_pytest/assertion/util.py:istext",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py:has_default_eq",
      "target": "src/_pytest/assertion/util.py:isattrs",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py:assertrepr_compare",
      "target": "src/_pytest/assertion/util.py:_notin_text",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py:assertrepr_compare",
      "target": "src/_pytest/assertion/util.py:_compare_eq_any",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py:assertrepr_compare",
      "target": "src/_pytest/assertion/util.py:istext",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py:_compare_eq_any",
      "target": "src/_pytest/assertion/util.py:_compare_eq_dict",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py:_compare_eq_any",
      "target": "src/_pytest/assertion/util.py:issequence",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py:_compare_eq_any",
      "target": "src/_pytest/assertion/util.py:_diff_text",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py:_compare_eq_any",
      "target": "src/_pytest/assertion/util.py:isattrs",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py:_compare_eq_any",
      "target": "src/_pytest/assertion/util.py:_compare_eq_cls",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py:_compare_eq_any",
      "target": "src/_pytest/assertion/util.py:_compare_eq_iterable",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py:_compare_eq_any",
      "target": "src/_pytest/assertion/util.py:isdict",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py:_compare_eq_any",
      "target": "src/_pytest/assertion/util.py:isiterable",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py:_compare_eq_any",
      "target": "src/_pytest/assertion/util.py:isdatacls",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py:_compare_eq_any",
      "target": "src/_pytest/assertion/util.py:isset",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py:_compare_eq_any",
      "target": "src/_pytest/assertion/util.py:istext",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py:_compare_eq_any",
      "target": "src/_pytest/assertion/util.py:_compare_eq_set",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py:_compare_eq_any",
      "target": "src/_pytest/assertion/util.py:_compare_eq_sequence",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py:_compare_eq_any",
      "target": "src/_pytest/assertion/util.py:isnamedtuple",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py:_compare_eq_iterable",
      "target": "src/_pytest/assertion/util.py:running_on_ci",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py:_compare_eq_iterable",
      "target": "src/_pytest/assertion/util.py:_surrounding_parens_on_own_lines",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py:_compare_eq_cls",
      "target": "src/_pytest/assertion/util.py:has_default_eq",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py:_compare_eq_cls",
      "target": "src/_pytest/assertion/util.py:isattrs",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py:_compare_eq_cls",
      "target": "src/_pytest/assertion/util.py:_compare_eq_any",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py:_compare_eq_cls",
      "target": "src/_pytest/assertion/util.py:isdatacls",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py:_compare_eq_cls",
      "target": "src/_pytest/assertion/util.py:isnamedtuple",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/util.py:_notin_text",
      "target": "src/_pytest/assertion/util.py:_diff_text",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/__init__.py",
      "target": "src/_pytest/assertion/__init__.py:pytest_addoption",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/__init__.py",
      "target": "src/_pytest/assertion/__init__.py:register_assert_rewrite",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/__init__.py",
      "target": "src/_pytest/assertion/__init__.py:DummyRewriteHook",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/__init__.py",
      "target": "src/_pytest/assertion/__init__.py:AssertionState",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/__init__.py",
      "target": "src/_pytest/assertion/__init__.py:install_importhook",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/__init__.py",
      "target": "src/_pytest/assertion/__init__.py:pytest_collection",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/__init__.py",
      "target": "src/_pytest/assertion/__init__.py:pytest_runtest_protocol",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/__init__.py",
      "target": "src/_pytest/assertion/__init__.py:pytest_sessionfinish",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/__init__.py",
      "target": "src/_pytest/assertion/__init__.py:pytest_assertrepr_compare",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/__init__.py:register_assert_rewrite",
      "target": "src/_pytest/assertion/__init__.py:DummyRewriteHook.mark_rewrite",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/__init__.py:register_assert_rewrite",
      "target": "src/_pytest/assertion/__init__.py:DummyRewriteHook",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/__init__.py:DummyRewriteHook",
      "target": "src/_pytest/assertion/__init__.py:DummyRewriteHook.mark_rewrite",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/__init__.py:install_importhook",
      "target": "src/_pytest/assertion/__init__.py:install_importhook.undo",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/__init__.py:install_importhook",
      "target": "src/_pytest/assertion/__init__.py:AssertionState",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/__init__.py:pytest_runtest_protocol",
      "target": "src/_pytest/assertion/__init__.py:pytest_runtest_protocol.callbinrepr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/__init__.py:pytest_runtest_protocol",
      "target": "src/_pytest/assertion/__init__.py:pytest_runtest_protocol.call_assertion_pass_hook",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/__init__.py:pytest_runtest_protocol.callbinrepr",
      "target": "src/_pytest/assertion/__init__.py:pytest_assertrepr_compare",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py",
      "target": "src/_pytest/assertion/rewrite.py:_write_pyc_fp",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py",
      "target": "src/_pytest/assertion/rewrite.py:_write_pyc",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py",
      "target": "src/_pytest/assertion/rewrite.py:_rewrite_test",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py",
      "target": "src/_pytest/assertion/rewrite.py:_read_pyc",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py",
      "target": "src/_pytest/assertion/rewrite.py:rewrite_asserts",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py",
      "target": "src/_pytest/assertion/rewrite.py:_saferepr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py",
      "target": "src/_pytest/assertion/rewrite.py:_get_maxsize_for_saferepr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py",
      "target": "src/_pytest/assertion/rewrite.py:_format_assertmsg",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py",
      "target": "src/_pytest/assertion/rewrite.py:_should_repr_global_name",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py",
      "target": "src/_pytest/assertion/rewrite.py:_format_boolop",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py",
      "target": "src/_pytest/assertion/rewrite.py:_call_reprcompare",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py",
      "target": "src/_pytest/assertion/rewrite.py:_call_assertion_pass",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py",
      "target": "src/_pytest/assertion/rewrite.py:_check_if_assertion_pass_impl",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py",
      "target": "src/_pytest/assertion/rewrite.py:traverse_node",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py",
      "target": "src/_pytest/assertion/rewrite.py:_get_assertion_exprs",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py",
      "target": "src/_pytest/assertion/rewrite.py:try_makedirs",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py",
      "target": "src/_pytest/assertion/rewrite.py:get_cache_dir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook.set_session",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook.find_spec",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook.create_module",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook.exec_module",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook._early_rewrite_bailout",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook._should_rewrite",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook._is_marked_for_rewrite",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook.mark_rewrite",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook._warn_already_imported",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook.get_data",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook.get_resource_reader",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook.find_spec",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook._should_rewrite",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook.find_spec",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook._early_rewrite_bailout",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook.exec_module",
      "target": "src/_pytest/assertion/rewrite.py:get_cache_dir",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook.exec_module",
      "target": "src/_pytest/assertion/rewrite.py:try_makedirs",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook.exec_module",
      "target": "src/_pytest/assertion/rewrite.py:_read_pyc",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook.exec_module",
      "target": "src/_pytest/assertion/rewrite.py:_rewrite_test",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook.exec_module",
      "target": "src/_pytest/assertion/rewrite.py:_write_pyc",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook._early_rewrite_bailout",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook._is_marked_for_rewrite",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook._should_rewrite",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook._is_marked_for_rewrite",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook.mark_rewrite",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook._warn_already_imported",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewritingHook.mark_rewrite",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.is_rewrite_disabled",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:_write_pyc",
      "target": "src/_pytest/assertion/rewrite.py:_write_pyc_fp",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:_rewrite_test",
      "target": "src/_pytest/assertion/rewrite.py:rewrite_asserts",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:rewrite_asserts",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.run",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:rewrite_asserts",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:_saferepr",
      "target": "src/_pytest/assertion/rewrite.py:_get_maxsize_for_saferepr",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:_get_assertion_exprs",
      "target": "src/_pytest/assertion/rewrite.py:_get_assertion_exprs._write_and_reset",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:_get_assertion_exprs",
      "target": "src/_pytest/assertion/rewrite.py:_get_assertion_exprs._write_and_reset",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.run",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.is_rewrite_disabled",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.variable",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.assign",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.display",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.helper",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.builtin",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.explanation_param",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.push_format_context",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.pop_format_context",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.generic_visit",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Assert",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_NamedExpr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Name",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_BoolOp",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_UnaryOp",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_BinOp",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Call",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Starred",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Attribute",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Compare",
      "type": "contains"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.run",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.is_rewrite_disabled",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.assign",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.variable",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.display",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.helper",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.generic_visit",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.explanation_param",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.generic_visit",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.assign",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.generic_visit",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.display",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Assert",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.pop_format_context",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Assert",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.push_format_context",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Assert",
      "target": "src/_pytest/assertion/rewrite.py:traverse_node",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Assert",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.helper",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Assert",
      "target": "src/_pytest/assertion/rewrite.py:_get_assertion_exprs",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_NamedExpr",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.helper",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_NamedExpr",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.builtin",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_NamedExpr",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.display",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_NamedExpr",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.explanation_param",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Name",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.helper",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Name",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.builtin",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Name",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.display",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Name",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.explanation_param",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_BoolOp",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.pop_format_context",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_BoolOp",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.variable",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_BoolOp",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.push_format_context",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_BoolOp",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.explanation_param",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_BoolOp",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.helper",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_BoolOp",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.assign",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_UnaryOp",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.assign",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_BinOp",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.assign",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Call",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.assign",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Call",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.display",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Call",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.explanation_param",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Attribute",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.generic_visit",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Attribute",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.assign",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Attribute",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.display",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Attribute",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.explanation_param",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Compare",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.pop_format_context",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Compare",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.variable",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Compare",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.push_format_context",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Compare",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.explanation_param",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/assertion/rewrite.py:AssertionRewriter.visit_Compare",
      "target": "src/_pytest/assertion/rewrite.py:AssertionRewriter.helper",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_io",
      "target": "src/_pytest/_io/wcwidth.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io",
      "target": "src/_pytest/_io/saferepr.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io",
      "target": "src/_pytest/_io/terminalwriter.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io",
      "target": "src/_pytest/_io/__init__.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io/wcwidth.py",
      "target": "src/_pytest/_io/wcwidth.py:wcwidth",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io/wcwidth.py",
      "target": "src/_pytest/_io/wcwidth.py:wcswidth",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io/wcwidth.py:wcswidth",
      "target": "src/_pytest/_io/wcwidth.py:wcwidth",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_io/saferepr.py",
      "target": "src/_pytest/_io/saferepr.py:_try_repr_or_str",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io/saferepr.py",
      "target": "src/_pytest/_io/saferepr.py:_format_repr_exception",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io/saferepr.py",
      "target": "src/_pytest/_io/saferepr.py:_ellipsize",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io/saferepr.py",
      "target": "src/_pytest/_io/saferepr.py:SafeRepr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io/saferepr.py",
      "target": "src/_pytest/_io/saferepr.py:safeformat",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io/saferepr.py",
      "target": "src/_pytest/_io/saferepr.py:saferepr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io/saferepr.py",
      "target": "src/_pytest/_io/saferepr.py:saferepr_unlimited",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io/saferepr.py",
      "target": "src/_pytest/_io/saferepr.py:AlwaysDispatchingPrettyPrinter",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io/saferepr.py",
      "target": "src/_pytest/_io/saferepr.py:_pformat_dispatch",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io/saferepr.py:_try_repr_or_str",
      "target": "src/_pytest/_io/saferepr.py:SafeRepr.repr",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_io/saferepr.py:_format_repr_exception",
      "target": "src/_pytest/_io/saferepr.py:_try_repr_or_str",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_io/saferepr.py:SafeRepr",
      "target": "src/_pytest/_io/saferepr.py:SafeRepr.repr",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io/saferepr.py:SafeRepr",
      "target": "src/_pytest/_io/saferepr.py:SafeRepr.repr_instance",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io/saferepr.py:SafeRepr.repr",
      "target": "src/_pytest/_io/saferepr.py:_format_repr_exception",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_io/saferepr.py:SafeRepr.repr",
      "target": "src/_pytest/_io/saferepr.py:_ellipsize",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_io/saferepr.py:SafeRepr.repr_instance",
      "target": "src/_pytest/_io/saferepr.py:_format_repr_exception",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_io/saferepr.py:SafeRepr.repr_instance",
      "target": "src/_pytest/_io/saferepr.py:_ellipsize",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_io/saferepr.py:SafeRepr.repr_instance",
      "target": "src/_pytest/_io/saferepr.py:SafeRepr.repr",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_io/saferepr.py:safeformat",
      "target": "src/_pytest/_io/saferepr.py:_format_repr_exception",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_io/saferepr.py:saferepr",
      "target": "src/_pytest/_io/saferepr.py:SafeRepr.repr",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_io/saferepr.py:saferepr",
      "target": "src/_pytest/_io/saferepr.py:SafeRepr",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_io/saferepr.py:saferepr_unlimited",
      "target": "src/_pytest/_io/saferepr.py:_format_repr_exception",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_io/saferepr.py:saferepr_unlimited",
      "target": "src/_pytest/_io/saferepr.py:SafeRepr.repr",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_io/saferepr.py:AlwaysDispatchingPrettyPrinter",
      "target": "src/_pytest/_io/saferepr.py:AlwaysDispatchingPrettyPrinter._format",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io/saferepr.py:_pformat_dispatch",
      "target": "src/_pytest/_io/saferepr.py:AlwaysDispatchingPrettyPrinter",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_io/terminalwriter.py",
      "target": "src/_pytest/_io/terminalwriter.py:get_terminal_width",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io/terminalwriter.py",
      "target": "src/_pytest/_io/terminalwriter.py:should_do_markup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io/terminalwriter.py",
      "target": "src/_pytest/_io/terminalwriter.py:TerminalWriter",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io/terminalwriter.py",
      "target": "src/_pytest/_io/wcwidth.py:wcswidth",
      "type": "imports"
    },
    {
      "source": "src/_pytest/_io/terminalwriter.py:TerminalWriter",
      "target": "src/_pytest/_io/terminalwriter.py:TerminalWriter.fullwidth",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io/terminalwriter.py:TerminalWriter",
      "target": "src/_pytest/_io/terminalwriter.py:TerminalWriter.fullwidth",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io/terminalwriter.py:TerminalWriter",
      "target": "src/_pytest/_io/terminalwriter.py:TerminalWriter.width_of_current_line",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io/terminalwriter.py:TerminalWriter",
      "target": "src/_pytest/_io/terminalwriter.py:TerminalWriter.markup",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io/terminalwriter.py:TerminalWriter",
      "target": "src/_pytest/_io/terminalwriter.py:TerminalWriter.sep",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io/terminalwriter.py:TerminalWriter",
      "target": "src/_pytest/_io/terminalwriter.py:TerminalWriter.write",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io/terminalwriter.py:TerminalWriter",
      "target": "src/_pytest/_io/terminalwriter.py:TerminalWriter.line",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io/terminalwriter.py:TerminalWriter",
      "target": "src/_pytest/_io/terminalwriter.py:TerminalWriter.flush",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io/terminalwriter.py:TerminalWriter",
      "target": "src/_pytest/_io/terminalwriter.py:TerminalWriter._write_source",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io/terminalwriter.py:TerminalWriter",
      "target": "src/_pytest/_io/terminalwriter.py:TerminalWriter._highlight",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_io/terminalwriter.py:TerminalWriter",
      "target": "src/_pytest/_io/terminalwriter.py:should_do_markup",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_io/terminalwriter.py:TerminalWriter.width_of_current_line",
      "target": "src/_pytest/_io/wcwidth.py:wcswidth",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_io/terminalwriter.py:TerminalWriter.sep",
      "target": "src/_pytest/_io/terminalwriter.py:TerminalWriter.line",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_io/terminalwriter.py:TerminalWriter.write",
      "target": "src/_pytest/_io/terminalwriter.py:TerminalWriter.markup",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_io/terminalwriter.py:TerminalWriter.write",
      "target": "src/_pytest/_io/terminalwriter.py:TerminalWriter.flush",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_io/terminalwriter.py:TerminalWriter.line",
      "target": "src/_pytest/_io/terminalwriter.py:TerminalWriter.write",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_io/terminalwriter.py:TerminalWriter._write_source",
      "target": "src/_pytest/_io/terminalwriter.py:TerminalWriter.line",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_io/terminalwriter.py:TerminalWriter._write_source",
      "target": "src/_pytest/_io/terminalwriter.py:TerminalWriter._highlight",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_io/__init__.py",
      "target": "src/_pytest/_io/terminalwriter.py:get_terminal_width",
      "type": "imports"
    },
    {
      "source": "src/_pytest/_io/__init__.py",
      "target": "src/_pytest/_io/terminalwriter.py:TerminalWriter",
      "type": "imports"
    },
    {
      "source": "src/_pytest/_py",
      "target": "src/_pytest/_py/error.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py",
      "target": "src/_pytest/_py/__init__.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py",
      "target": "src/_pytest/_py/path.py",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/error.py",
      "target": "src/_pytest/_py/error.py:Error",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/error.py",
      "target": "src/_pytest/_py/error.py:ErrorMaker",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/error.py",
      "target": "src/_pytest/_py/error.py:__getattr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/error.py:Error",
      "target": "src/_pytest/_py/error.py:Error.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/error.py:Error",
      "target": "src/_pytest/_py/error.py:Error.__str__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/error.py:ErrorMaker",
      "target": "src/_pytest/_py/error.py:ErrorMaker.__getattr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/error.py:ErrorMaker",
      "target": "src/_pytest/_py/error.py:ErrorMaker._geterrnoclass",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/error.py:ErrorMaker",
      "target": "src/_pytest/_py/error.py:ErrorMaker.checked_call",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/error.py:ErrorMaker.__getattr__",
      "target": "src/_pytest/_py/error.py:ErrorMaker._geterrnoclass",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/error.py:ErrorMaker.checked_call",
      "target": "src/_pytest/_py/error.py:ErrorMaker._geterrnoclass",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py",
      "target": "src/_pytest/_py/path.py:Checkers",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py",
      "target": "src/_pytest/_py/path.py:NeverRaised",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py",
      "target": "src/_pytest/_py/path.py:Visitor",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py",
      "target": "src/_pytest/_py/path.py:FNMatcher",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py",
      "target": "src/_pytest/_py/path.py:map_as_list",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py",
      "target": "src/_pytest/_py/path.py:Stat",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py",
      "target": "src/_pytest/_py/path.py:getuserid",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py",
      "target": "src/_pytest/_py/path.py:getgroupid",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py",
      "target": "src/_pytest/_py/path.py:LocalPath",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py",
      "target": "src/_pytest/_py/path.py:copymode",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py",
      "target": "src/_pytest/_py/path.py:copystat",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py",
      "target": "src/_pytest/_py/path.py:copychunked",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py",
      "target": "src/_pytest/_py/path.py:isimportable",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py",
      "target": "src/_pytest/_py/error.py",
      "type": "imports"
    },
    {
      "source": "src/_pytest/_py/path.py",
      "target": "src/_pytest/_code/source.py:getrawcode",
      "type": "imports"
    },
    {
      "source": "src/_pytest/_py/path.py:Checkers",
      "target": "src/_pytest/_py/path.py:Checkers.dotfile",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:Checkers",
      "target": "src/_pytest/_py/path.py:Checkers.ext",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:Checkers",
      "target": "src/_pytest/_py/path.py:Checkers.basename",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:Checkers",
      "target": "src/_pytest/_py/path.py:Checkers.basestarts",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:Checkers",
      "target": "src/_pytest/_py/path.py:Checkers.relto",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:Checkers",
      "target": "src/_pytest/_py/path.py:Checkers.fnmatch",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:Checkers",
      "target": "src/_pytest/_py/path.py:Checkers.endswith",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:Checkers",
      "target": "src/_pytest/_py/path.py:Checkers._evaluate",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:Checkers",
      "target": "src/_pytest/_py/path.py:Checkers._stat",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:Checkers",
      "target": "src/_pytest/_py/path.py:Checkers.dir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:Checkers",
      "target": "src/_pytest/_py/path.py:Checkers.file",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:Checkers",
      "target": "src/_pytest/_py/path.py:Checkers.exists",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:Checkers",
      "target": "src/_pytest/_py/path.py:Checkers.link",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:Checkers.relto",
      "target": "src/_pytest/_py/path.py:LocalPath.relto",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:Checkers.fnmatch",
      "target": "src/_pytest/_py/path.py:LocalPath.fnmatch",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:Checkers._evaluate",
      "target": "src/_pytest/_code/source.py:getrawcode",
      "type": "imports"
    },
    {
      "source": "src/_pytest/_py/path.py:Checkers._evaluate",
      "target": "src/_pytest/_code/source.py:getrawcode",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:Checkers._stat",
      "target": "src/_pytest/_py/path.py:LocalPath.stat",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:Checkers._stat",
      "target": "src/_pytest/_py/path.py:LocalPath.lstat",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:Checkers.dir",
      "target": "src/_pytest/_py/path.py:Checkers._stat",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:Checkers.file",
      "target": "src/_pytest/_py/path.py:Checkers._stat",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:Checkers.exists",
      "target": "src/_pytest/_py/path.py:Checkers._stat",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:Checkers.link",
      "target": "src/_pytest/_py/path.py:LocalPath.lstat",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:Visitor",
      "target": "src/_pytest/_py/path.py:Visitor.gen",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:Visitor",
      "target": "src/_pytest/_py/path.py:FNMatcher",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:Visitor.gen",
      "target": "src/_pytest/_py/path.py:LocalPath.check",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:Visitor.gen",
      "target": "src/_pytest/_py/path.py:LocalPath.listdir",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:FNMatcher",
      "target": "src/_pytest/_py/path.py:FNMatcher.__call__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:FNMatcher.__call__",
      "target": "src/_pytest/_py/path.py:Checkers.fnmatch",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:FNMatcher.__call__",
      "target": "src/_pytest/_py/path.py:LocalPath.fnmatch",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:Stat",
      "target": "src/_pytest/_py/path.py:Stat.size",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:Stat",
      "target": "src/_pytest/_py/path.py:Stat.mtime",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:Stat",
      "target": "src/_pytest/_py/path.py:Stat.__getattr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:Stat",
      "target": "src/_pytest/_py/path.py:Stat.owner",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:Stat",
      "target": "src/_pytest/_py/path.py:Stat.group",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:Stat",
      "target": "src/_pytest/_py/path.py:Stat.isdir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:Stat",
      "target": "src/_pytest/_py/path.py:Stat.isfile",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:Stat",
      "target": "src/_pytest/_py/path.py:Stat.islink",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:Stat.owner",
      "target": "src/_pytest/_py/error.py:ErrorMaker.checked_call",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:Stat.group",
      "target": "src/_pytest/_py/error.py:ErrorMaker.checked_call",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:Stat.islink",
      "target": "src/_pytest/_py/path.py:LocalPath.lstat",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.ImportMismatchError",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.chown",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.readlink",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.mklinkto",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.mksymlinkto",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.__div__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.basename",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.dirname",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.purebasename",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.ext",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.read_binary",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.read_text",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.read",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.readlines",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.load",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.move",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.fnmatch",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.relto",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.ensure_dir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.bestrelpath",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.exists",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.isdir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.isfile",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.parts",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.common",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.__add__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.visit",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath._sortlist",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.__fspath__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.__hash__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.__eq__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.__ne__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.__lt__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.__gt__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.samefile",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.remove",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.computehash",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.new",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath._getbyspec",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.dirpath",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.join",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.open",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath._fastjoin",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.islink",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.check",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.listdir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.size",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.mtime",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.copy",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.rename",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.dump",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.mkdir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.write_binary",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.write_text",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.write",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath._ensuredirs",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.ensure",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.stat",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.stat",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.stat",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.lstat",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.setmtime",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.chdir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.as_cwd",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.realpath",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.atime",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.__repr__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.__str__",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.chmod",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.pypkgpath",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath._ensuresyspath",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.pyimport",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.sysexec",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.sysfind",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath._gethomedir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.get_temproot",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.mkdtemp",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath",
      "target": "src/_pytest/_py/error.py:ErrorMaker.checked_call",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.chown",
      "target": "src/_pytest/_py/path.py:getuserid",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.chown",
      "target": "src/_pytest/_py/path.py:LocalPath.check",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.chown",
      "target": "src/_pytest/_py/path.py:getgroupid",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.chown",
      "target": "src/_pytest/_py/path.py:LocalPath.visit",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.chown",
      "target": "src/_pytest/_py/error.py:ErrorMaker.checked_call",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.readlink",
      "target": "src/_pytest/_py/error.py:ErrorMaker.checked_call",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.mklinkto",
      "target": "src/_pytest/_py/error.py:ErrorMaker.checked_call",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.mksymlinkto",
      "target": "src/_pytest/_py/path.py:LocalPath.common",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.mksymlinkto",
      "target": "src/_pytest/_py/path.py:Checkers.relto",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.mksymlinkto",
      "target": "src/_pytest/_py/path.py:LocalPath.relto",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.mksymlinkto",
      "target": "src/_pytest/_py/error.py:ErrorMaker.checked_call",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.mksymlinkto",
      "target": "src/_pytest/_py/path.py:LocalPath.join",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.__div__",
      "target": "src/_pytest/_py/path.py:LocalPath.join",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.basename",
      "target": "src/_pytest/_py/path.py:LocalPath._getbyspec",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.dirname",
      "target": "src/_pytest/_py/path.py:LocalPath._getbyspec",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.purebasename",
      "target": "src/_pytest/_py/path.py:LocalPath._getbyspec",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.ext",
      "target": "src/_pytest/_py/path.py:LocalPath._getbyspec",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.read_binary",
      "target": "src/_pytest/_py/path.py:LocalPath.open",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.read_binary",
      "target": "src/_pytest/_py/path.py:LocalPath.read",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.read_text",
      "target": "src/_pytest/_py/path.py:LocalPath.open",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.read_text",
      "target": "src/_pytest/_py/path.py:LocalPath.read",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.read",
      "target": "src/_pytest/_py/path.py:LocalPath.open",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.readlines",
      "target": "src/_pytest/_py/path.py:LocalPath.open",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.readlines",
      "target": "src/_pytest/_py/path.py:LocalPath.read",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.load",
      "target": "src/_pytest/_py/path.py:LocalPath.open",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.load",
      "target": "src/_pytest/_py/error.py:ErrorMaker.checked_call",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.move",
      "target": "src/_pytest/_py/path.py:LocalPath.rename",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.move",
      "target": "src/_pytest/_py/path.py:Checkers.relto",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.move",
      "target": "src/_pytest/_py/path.py:LocalPath.relto",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.move",
      "target": "src/_pytest/_py/path.py:LocalPath.remove",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.move",
      "target": "src/_pytest/_py/path.py:LocalPath.copy",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.fnmatch",
      "target": "src/_pytest/_py/path.py:FNMatcher",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.ensure_dir",
      "target": "src/_pytest/_py/path.py:LocalPath.ensure",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.bestrelpath",
      "target": "src/_pytest/_py/path.py:LocalPath.common",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.bestrelpath",
      "target": "src/_pytest/_py/path.py:Checkers.relto",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.bestrelpath",
      "target": "src/_pytest/_py/path.py:LocalPath.relto",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.bestrelpath",
      "target": "src/_pytest/_py/path.py:LocalPath.join",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.exists",
      "target": "src/_pytest/_py/path.py:LocalPath.check",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.isdir",
      "target": "src/_pytest/_py/path.py:LocalPath.check",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.isfile",
      "target": "src/_pytest/_py/path.py:LocalPath.check",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.parts",
      "target": "src/_pytest/_py/path.py:LocalPath.dirpath",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.common",
      "target": "src/_pytest/_py/path.py:LocalPath.parts",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.__add__",
      "target": "src/_pytest/_py/path.py:LocalPath.new",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.visit",
      "target": "src/_pytest/_py/path.py:Visitor.gen",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.visit",
      "target": "src/_pytest/_py/path.py:Visitor",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.samefile",
      "target": "src/_pytest/_py/error.py:ErrorMaker.checked_call",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.remove",
      "target": "src/_pytest/_py/path.py:LocalPath.chmod",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.remove",
      "target": "src/_pytest/_py/error.py:ErrorMaker.checked_call",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.remove",
      "target": "src/_pytest/_py/path.py:LocalPath.check",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.computehash",
      "target": "src/_pytest/_py/path.py:LocalPath.open",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.computehash",
      "target": "src/_pytest/_py/path.py:LocalPath.read",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.new",
      "target": "src/_pytest/_py/path.py:LocalPath._getbyspec",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath._getbyspec",
      "target": "src/_pytest/_py/path.py:LocalPath.join",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.dirpath",
      "target": "src/_pytest/_py/path.py:LocalPath.dirname",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.dirpath",
      "target": "src/_pytest/_py/path.py:LocalPath.join",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.dirpath",
      "target": "src/_pytest/_py/path.py:LocalPath.new",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.join",
      "target": "src/_pytest/_py/path.py:Checkers.endswith",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.open",
      "target": "src/_pytest/_py/error.py:ErrorMaker.checked_call",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.open",
      "target": "src/_pytest/_py/path.py:LocalPath.dirpath",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.open",
      "target": "src/_pytest/_py/path.py:LocalPath.ensure",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.islink",
      "target": "src/_pytest/_py/path.py:Stat.islink",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.check",
      "target": "src/_pytest/_py/path.py:LocalPath.isfile",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.check",
      "target": "src/_pytest/_py/path.py:Stat.isfile",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.check",
      "target": "src/_pytest/_py/path.py:Checkers.exists",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.check",
      "target": "src/_pytest/_py/path.py:LocalPath.exists",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.check",
      "target": "src/_pytest/_py/path.py:Checkers._evaluate",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.check",
      "target": "src/_pytest/_py/path.py:Checkers",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.check",
      "target": "src/_pytest/_py/path.py:Stat.isdir",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.check",
      "target": "src/_pytest/_py/path.py:LocalPath.isdir",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.listdir",
      "target": "src/_pytest/_py/path.py:Checkers.exists",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.listdir",
      "target": "src/_pytest/_py/path.py:LocalPath.exists",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.listdir",
      "target": "src/_pytest/_py/path.py:map_as_list",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.listdir",
      "target": "src/_pytest/_py/path.py:LocalPath._sortlist",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.listdir",
      "target": "src/_pytest/_py/path.py:FNMatcher",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.listdir",
      "target": "src/_pytest/_py/error.py:ErrorMaker.checked_call",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.listdir",
      "target": "src/_pytest/_py/path.py:LocalPath._fastjoin",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.size",
      "target": "src/_pytest/_py/path.py:LocalPath.stat",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.mtime",
      "target": "src/_pytest/_py/path.py:LocalPath.stat",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.copy",
      "target": "src/_pytest/_py/path.py:LocalPath.copy.rec",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.copy",
      "target": "src/_pytest/_py/path.py:LocalPath.check",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.copy",
      "target": "src/_pytest/_py/path.py:copystat",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.copy",
      "target": "src/_pytest/_py/path.py:copymode",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.copy",
      "target": "src/_pytest/_py/path.py:Checkers.relto",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.copy",
      "target": "src/_pytest/_py/path.py:LocalPath.relto",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.copy",
      "target": "src/_pytest/_py/path.py:LocalPath.mksymlinkto",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.copy",
      "target": "src/_pytest/_py/path.py:LocalPath.dirpath",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.copy",
      "target": "src/_pytest/_py/path.py:copychunked",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.copy",
      "target": "src/_pytest/_py/path.py:LocalPath.visit",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.copy",
      "target": "src/_pytest/_py/path.py:LocalPath.readlink",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.copy",
      "target": "src/_pytest/_py/path.py:LocalPath.join",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.copy",
      "target": "src/_pytest/_py/path.py:LocalPath.ensure",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.copy.rec",
      "target": "src/_pytest/_py/path.py:LocalPath.check",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.rename",
      "target": "src/_pytest/_py/error.py:ErrorMaker.checked_call",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.dump",
      "target": "src/_pytest/_py/path.py:LocalPath.open",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.dump",
      "target": "src/_pytest/_py/error.py:ErrorMaker.checked_call",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.mkdir",
      "target": "src/_pytest/_py/error.py:ErrorMaker.checked_call",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.mkdir",
      "target": "src/_pytest/_py/path.py:LocalPath.join",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.write_binary",
      "target": "src/_pytest/_py/path.py:LocalPath.open",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.write_binary",
      "target": "src/_pytest/_py/path.py:LocalPath.dirpath",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.write_binary",
      "target": "src/_pytest/_py/path.py:LocalPath.write",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.write_binary",
      "target": "src/_pytest/_py/path.py:LocalPath.ensure",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.write_text",
      "target": "src/_pytest/_py/path.py:LocalPath.open",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.write_text",
      "target": "src/_pytest/_py/path.py:LocalPath.dirpath",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.write_text",
      "target": "src/_pytest/_py/path.py:LocalPath.write",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.write_text",
      "target": "src/_pytest/_py/path.py:LocalPath.ensure",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.write",
      "target": "src/_pytest/_py/path.py:LocalPath.open",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.write",
      "target": "src/_pytest/_py/path.py:LocalPath.dirpath",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.write",
      "target": "src/_pytest/_py/path.py:LocalPath.ensure",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath._ensuredirs",
      "target": "src/_pytest/_py/path.py:LocalPath.mkdir",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath._ensuredirs",
      "target": "src/_pytest/_py/path.py:LocalPath.check",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath._ensuredirs",
      "target": "src/_pytest/_py/path.py:LocalPath.dirpath",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.ensure",
      "target": "src/_pytest/_py/path.py:LocalPath.check",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.ensure",
      "target": "src/_pytest/_py/path.py:LocalPath.open",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.ensure",
      "target": "src/_pytest/_py/path.py:LocalPath._ensuredirs",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.ensure",
      "target": "src/_pytest/_py/path.py:LocalPath.dirpath",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.ensure",
      "target": "src/_pytest/_py/path.py:LocalPath.join",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.stat",
      "target": "src/_pytest/_py/error.py:ErrorMaker.checked_call",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.stat",
      "target": "src/_pytest/_py/path.py:Stat",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.lstat",
      "target": "src/_pytest/_py/error.py:ErrorMaker.checked_call",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.lstat",
      "target": "src/_pytest/_py/path.py:Stat",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.setmtime",
      "target": "src/_pytest/_py/error.py:ErrorMaker.checked_call",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.setmtime",
      "target": "src/_pytest/_py/path.py:LocalPath.atime",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.chdir",
      "target": "src/_pytest/_py/error.py:ErrorMaker.checked_call",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.as_cwd",
      "target": "src/_pytest/_py/path.py:LocalPath.chdir",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.atime",
      "target": "src/_pytest/_py/path.py:LocalPath.stat",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.chmod",
      "target": "src/_pytest/_py/path.py:LocalPath.visit",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.chmod",
      "target": "src/_pytest/_py/error.py:ErrorMaker.checked_call",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.pypkgpath",
      "target": "src/_pytest/_py/path.py:LocalPath.parts",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.pypkgpath",
      "target": "src/_pytest/_py/path.py:Checkers.exists",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.pypkgpath",
      "target": "src/_pytest/_py/path.py:LocalPath.exists",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.pypkgpath",
      "target": "src/_pytest/_py/path.py:isimportable",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.pypkgpath",
      "target": "src/_pytest/_py/path.py:LocalPath.join",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.pypkgpath",
      "target": "src/_pytest/_py/path.py:Stat.isdir",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.pypkgpath",
      "target": "src/_pytest/_py/path.py:LocalPath.isdir",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.pyimport",
      "target": "src/_pytest/_py/path.py:LocalPath.check",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.pyimport",
      "target": "src/_pytest/_py/path.py:LocalPath.dirpath",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.pyimport",
      "target": "src/_pytest/_py/path.py:LocalPath.join",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.pyimport",
      "target": "src/_pytest/_py/path.py:LocalPath.open",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.pyimport",
      "target": "src/_pytest/_py/path.py:LocalPath.pypkgpath",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.pyimport",
      "target": "src/_pytest/_py/path.py:LocalPath.new",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.pyimport",
      "target": "src/_pytest/_py/path.py:LocalPath.read",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.pyimport",
      "target": "src/_pytest/_py/path.py:Checkers.endswith",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.pyimport",
      "target": "src/_pytest/_py/path.py:Checkers.relto",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.pyimport",
      "target": "src/_pytest/_py/path.py:LocalPath.relto",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.pyimport",
      "target": "src/_pytest/_py/path.py:LocalPath._ensuresyspath",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.pyimport",
      "target": "src/_pytest/_py/path.py:LocalPath.ImportMismatchError",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.pyimport",
      "target": "src/_pytest/_py/path.py:LocalPath.samefile",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.sysfind",
      "target": "src/_pytest/_py/path.py:LocalPath.check",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.sysfind",
      "target": "src/_pytest/_py/path.py:LocalPath.join",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.mkdtemp",
      "target": "src/_pytest/_py/path.py:LocalPath.get_temproot",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.mkdtemp",
      "target": "src/_pytest/_py/error.py:ErrorMaker.checked_call",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir",
      "target": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir.parse_num",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir",
      "target": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir.parse_num",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir",
      "target": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir.create_lockfile",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir",
      "target": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir.create_lockfile",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir",
      "target": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir.atexit_remove_lockfile",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir",
      "target": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir.atexit_remove_lockfile",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir",
      "target": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir.get_mtime",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir",
      "target": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir.get_mtime",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir",
      "target": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir.is_garbage",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir",
      "target": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir.is_garbage",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir",
      "target": "src/_pytest/_py/path.py:LocalPath.mkdir",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir",
      "target": "src/_pytest/_py/path.py:LocalPath.join",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir",
      "target": "src/_pytest/_py/path.py:LocalPath.get_temproot",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir",
      "target": "src/_pytest/_py/path.py:LocalPath.listdir",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir",
      "target": "src/_pytest/_py/path.py:LocalPath.rename",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir",
      "target": "src/_pytest/_py/path.py:LocalPath.remove",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir.create_lockfile",
      "target": "src/_pytest/_py/error.py:ErrorMaker.checked_call",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir.create_lockfile",
      "target": "src/_pytest/_py/path.py:LocalPath.mksymlinkto",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir.create_lockfile",
      "target": "src/_pytest/_py/path.py:LocalPath.join",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir.create_lockfile",
      "target": "src/_pytest/_py/path.py:LocalPath.write",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir.atexit_remove_lockfile",
      "target": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir.atexit_remove_lockfile.try_remove_lockfile",
      "type": "contains"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir.atexit_remove_lockfile.try_remove_lockfile",
      "target": "src/_pytest/_py/path.py:LocalPath.remove",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:LocalPath.make_numbered_dir.get_mtime",
      "target": "src/_pytest/_py/path.py:LocalPath.lstat",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:copychunked",
      "target": "src/_pytest/_py/path.py:LocalPath.open",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:copychunked",
      "target": "src/_pytest/_py/path.py:LocalPath.read",
      "type": "invokes"
    },
    {
      "source": "src/_pytest/_py/path.py:copychunked",
      "target": "src/_pytest/_py/path.py:LocalPath.write",
      "type": "invokes"
    }
  ],
  "graph_version": "v2.3",
  "extraction_metadata": {
    "max_files": 500,
    "exclude_tests": false,
    "total_files_processed": 249
  }
}