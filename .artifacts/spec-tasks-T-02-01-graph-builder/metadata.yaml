# Task Metadata - T-02-01 Graph Builder

task:
  id: "T-02-01-graph-builder"
  title: "Graph Builder - AST Parsing & Construction"
  status: "in_progress"  # not_started | in_progress | blocked | completed
  priority: "P0"
  milestone: "M2"
  week: 2
  duration_days: 5

owner:
  primary: "Rust Dev 1"
  secondary: ["Refactor Parity Lead"]

dates:
  started: "2025-10-24"
  target_completion: "2025-10-30"  # 5 business days from start
  actual_completion: null

specs:
  prds:
    - "spacs/prd/0.1.0-MVP-PRDs-v0/02-cds-index-service.md"
    - "spacs/prd/0.1.0-MVP-PRDs-v0/06-rust-refactoring-plan.md"
  issues:
    - "spacs/issues/04-0.1.0-mvp/02-index-core/01-graph-build.md"
  tasks:
    - "spacs/tasks/0.1.0-mvp/02-index-core/T-02-01-graph-builder.md"

git:
  worktree: ".worktrees/T-02-01-graph-builder"
  branch: "feat/task/T-02-01-graph-builder"
  symlink: "~/dev-space/CDSAgent-T-02-01-graph-builder"
  commits:
    - hash: "f0e4858"
      message: "docs(task): T-02-01 - initialize task artifacts and Day 1 spec review"
      date: "2025-10-24"
      files_changed: 5
    - hash: "82936fa"
      message: "feat(graph): T-02-01 - implement core graph builder with AST parsing and edge resolution"
      date: "2025-10-25"
      files_changed: 16
      notes: "Core implementation: parser (426 lines), builder (1040 lines), traversal (64 lines), tests (232 lines). Total +4,265 lines."
    - hash: "00da9c2"
      message: "feat(graph): T-02-01 - add parity harness and refine import resolution"
      date: "2025-10-25"
      files_changed: 5
      notes: "Parity harness (359 lines), builder AST refinement (+159 lines). Current variance: imports +23.85%, invokes -15.63%. Total +570 lines."
    - hash: "PENDING"
      message: "feat(graph): T-02-01 - implement export tracking system and resolve import parity"
      date: "2025-10-27"
      files_changed: 3
      notes: "ModuleExports model (+548 lines), 3 new unit tests (+182 lines). Import parity RESOLVED: 0% variance. Invoke variance: +1.9%. Total +817 lines, -52 deleted."
  pr:
    number: null
    url: null
    status: null  # draft | open | merged | closed
    merged_at: null

dependencies:
  requires:
    - "T-06-01-parity-methodology"  # ‚úÖ Completed 2025-10-24
  blocks:
    - "T-02-02-sparse-index"
    - "T-03-01-core-commands"

deliverables:
  - "crates/cds-index/src/graph/parser.rs"
  - "crates/cds-index/src/graph/builder.rs"
  - "crates/cds-index/src/graph/traversal.rs"
  - "crates/cds-index/tests/graph_builder_tests.rs"
  - "tests/fixtures/repos/"

acceptance_criteria:
  - criterion: "Parses Python repositories and produces a graph with all 4 node types and 4 edge types"
    status: "completed"
    notes: "‚úÖ All 4 node types implemented. ‚úÖ All 4 edge types implemented. ‚úÖ Parity harness validates against 6 repos. ‚úÖ Nodes/contains/inherits/imports exact match. ‚è≥ Invokes +1.9% variance (acceptable, needs minor refinement)."
  - criterion: "Fully-qualified names match LocAgent format (e.g., path/to/file.py::Class::method)"
    status: "completed"
    notes: "‚úÖ FQN format implemented (filename:Class.method). ‚úÖ Validated against golden baselines (parity tests pass)."
  - criterion: "Unit tests cover typical and edge cases (decorators, nested classes, async functions)"
    status: "in_progress"
    notes: "‚úÖ Unit tests: 6 tests (2 invoke + 3 re-exports/wildcard/chained __all__). ‚úÖ Integration: Parity harness for 6 repos. ‚è≥ Needs expansion to >80% coverage (currently ~25%)."
  - criterion: "Graph parity script reports ‚â§2% variance in node/edge counts vs. LocAgent baseline"
    status: "in_progress"
    notes: "‚úÖ Parity harness running. ‚úÖ Import variance RESOLVED: 0% (was +23.85%). ‚è≥ Invoke variance: +1.9% (was -15.63%, improved but needs final pass)."

worklog:
  base_path: ".artifacts/spec-tasks-T-02-01-graph-builder/worklogs/"
  entries:
    - date: "2025-10-24"
      summary: "worklogs/2025-10-24-work-summary.md"
      commits: "worklogs/2025-10-24-commit-log.md"
      notes: "worklogs/2025-10-24-notes.md"
    - date: "2025-10-25"
      summary: "worklogs/2025-10-25-work-summary.md"
      commits: "worklogs/2025-10-25-commit-log.md"
      notes: "worklogs/2025-10-25-notes.md"
    - date: "2025-10-27"
      summary: "worklogs/2025-10-27-work-summary.md"
      commits: "worklogs/2025-10-27-commit-log.md"
      notes: "worklogs/2025-10-27-notes.md"

metrics:
  estimated_hours: 40  # 5 days * 8 hours
  actual_hours: 15.5  # Day 1: 2h planning, Day 2: 11h implementation, Day 3: 2.5h export tracking
  lines_added: 3451   # Core: 2064 + Parity: 570 + Export tracking: 817
  lines_deleted: 92    # Core: 26 + Parity: 14 + Export tracking: 52
  files_modified: 15   # Core: 12 + Parity: 2 + Export tracking: 1 more (worklogs)
  tests_added: 6       # 2 unit (invoke) + 1 integration (parity) + 3 unit (re-exports, wildcard, chained __all__)
  test_coverage: 0.25  # Estimated: ~25% (6 unit tests + integration harness)

comments:
  - date: "2025-10-24"
    author: "Rust Dev 1"
    text: "Task preparation complete. Spec review documented in 2025-10-24-notes.md. 6 baseline fixtures available (658 to 6,876 nodes). Ready to begin implementation."
  - date: "2025-10-25"
    author: "Rust Dev 1"
    text: "Day 2 implementation: Core graph builder complete with all 4 node/edge types. Implemented parser (426 lines), builder (1040 lines), traversal (64 lines), initial tests (232 lines). Total: ~1,964 lines of Rust code. Next: Expand unit tests and run parity validation."
  - date: "2025-10-25"
    author: "Rust Dev 1"
    text: "Day 2 parity session: Added parity harness (359 lines), refactored builder with AST-based imports (+159 lines). Parity results: nodes/contains/inherits exact match ‚úÖ, imports +23.85% ‚ùå, invokes -15.63% ‚ùå. Root causes: missing re-exports, need graph-based callee traversal. Next: Implement __init__.py awareness and LocAgent's find_all_possible_callee."
  - date: "2025-10-27"
    author: "Rust Dev 1"
    text: "Day 3 breakthrough: Import parity RESOLVED üéâ! Implemented comprehensive export tracking system with ModuleExports model, deferred attribute resolution, and wildcard import handling. Import edges now match LocAgent golden baseline exactly (218/218, 0% variance). Added 3 new unit tests. Invoke variance improved from -15.63% to +1.9%. Next: Mirror LocAgent's find_all_possible_callee to eliminate remaining invoke variance."

related_artifacts:
  - type: "parity_baseline"
    path: "tests/fixtures/parity/golden_outputs/graph_locagent.json"
  - type: "parity_baseline"
    path: "tests/fixtures/parity/golden_outputs/graph_django__django-10914.json"
  - type: "parity_baseline"
    path: "tests/fixtures/parity/golden_outputs/graph_matplotlib__matplotlib-18869.json"
  - type: "parity_baseline"
    path: "tests/fixtures/parity/golden_outputs/graph_psf__requests-1963.json"
  - type: "parity_baseline"
    path: "tests/fixtures/parity/golden_outputs/graph_pytest-dev__pytest-11143.json"
  - type: "parity_baseline"
    path: "tests/fixtures/parity/golden_outputs/graph_scikit-learn__scikit-learn-10297.json"
  - type: "reference_implementation"
    path: "tmp/LocAgent/dependency_graph/build_graph.py"
  - type: "methodology"
    path: "docs/parity-validation-methodology.md"
