#!/usr/bin/env python3\n\"\"\"\nBulk import all Issues & Sub-Issues from spacs/issues/04-0.1.0-mvp/ to Linear.\n\nMaps:\n- Main Issues → Stories (children of Epics)\n- Sub-Issues → Tasks (children of Stories)\n\"\"\"\n\nimport json\nimport re\nfrom pathlib import Path\n\n# Mapping of Issue directories to Epic IDs\nEPIC_MAPPING = {\n    \"01-architecture-and-roadmap.md\": \"d73afcf8-c619-477c-be8a-f37a6f65df1f\",  # Architecture & Roadmap\n    \"02-index-core\": \"f74e791b-93f2-48b3-8c7c-cc36e800cd84\",  # Index Core\n    \"03-cli-tools\": \"b2b4dad2-ef56-4e12-94c1-ac21b3226152\",  # CLI Tools\n    \"04-agent-integration\": \"f278d4f9-70e9-4429-9e2f-dfed6bd402b0\",  # Agent Integration\n    \"05-api-contracts.md\": \"b12d9b56-91b7-4d55-9542-68813c4fdbb8\",  # API Contracts\n    \"06-refactor-parity.md\": \"d6411801-fd03-40a4-b7a4-6f317a217d06\",  # Refactor Parity\n    \"07-deployment\": \"5de00ead-71f6-4891-9b12-9917ad4d5aa7\",  # Deployment\n    \"08-testing\": \"5ecf9a61-3838-4ffe-9a7f-5d720474e973\",  # Testing & Quality\n    \"09-roadmap.md\": \"b8d27425-e134-45c9-ac27-caebd41a3ddb\",  # Roadmap\n    \"10-extensibility.md\": \"7d7dc0de-588e-44c1-9057-fe4426b47e64\",  # Extensibility\n}\n\n# Stories to create (excluding already created ones)\nSTORIES = [\n    # CLI Tools\n    {\"title\": \"Output Format\", \"parent_epic\": \"03-cli-tools\", \"source\": \"03-cli-tools/02-output-format.md\"},\n    {\"title\": \"CLI Integration Tests\", \"parent_epic\": \"03-cli-tools\", \"source\": \"03-cli-tools/03-integration-tests.md\"},\n    {\"title\": \"CLI Docs\", \"parent_epic\": \"03-cli-tools\", \"source\": \"03-cli-tools/04-docs.md\"},\n    \n    # Agent Integration\n    {\"title\": \"SDK Bootstrap\", \"parent_epic\": \"04-agent-integration\", \"source\": \"04-agent-integration/01-sdk-bootstrap.md\"},\n    {\"title\": \"Prompt Design\", \"parent_epic\": \"04-agent-integration\", \"source\": \"04-agent-integration/02-prompt-design.md\"},\n    {\"title\": \"Agent Hooks\", \"parent_epic\": \"04-agent-integration\", \"source\": \"04-agent-integration/03-hooks.md\"},\n    {\"title\": \"Sample Transcripts\", \"parent_epic\": \"04-agent-integration\", \"source\": \"04-agent-integration/04-sample-transcripts.md\"},\n    \n    # Deployment\n    {\"title\": \"Local Daemon Configuration\", \"parent_epic\": \"07-deployment\", \"source\": \"07-deployment/01-local-daemon.md\"},\n    {\"title\": \"Docker Compose Setup\", \"parent_epic\": \"07-deployment\", \"source\": \"07-deployment/02-docker-compose.md\"},\n    {\"title\": \"Environment Configuration\", \"parent_epic\": \"07-deployment\", \"source\": \"07-deployment/03-env-config.md\"},\n    {\"title\": \"Monitoring & Health Checks\", \"parent_epic\": \"07-deployment\", \"source\": \"07-deployment/04-monitoring.md\"},\n    {\"title\": \"Deployment Docs\", \"parent_epic\": \"07-deployment\", \"source\": \"07-deployment/05-docs.md\"},\n    \n    # Testing\n    {\"title\": \"Unit Tests\", \"parent_epic\": \"08-testing\", \"source\": \"08-testing/01-unit-tests.md\"},\n    {\"title\": \"Integration Test Suite\", \"parent_epic\": \"08-testing\", \"source\": \"08-testing/02-integration.md\"},\n    {\"title\": \"Parity Tests\", \"parent_epic\": \"08-testing\", \"source\": \"08-testing/03-parity.md\"},\n    {\"title\": \"Benchmarking\", \"parent_epic\": \"08-testing\", \"source\": \"08-testing/04-benchmark.md\"},\n]\n\ndef generate_mcp_commands():\n    \"\"\"Generate MCP tool commands for creating all Stories.\"\"\"\n    print(\"# Generated MCP commands to create all Stories\")\n    print(f\"\\nTotal Stories to create: {len(STORIES)}\\n\")\n    \n    for i, story in enumerate(STORIES, 1):\n        epic_id = EPIC_MAPPING.get(story[\"parent_epic\"])\n        if not epic_id:\n            print(f\"WARNING: No Epic ID found for {story['parent_epic']}\")\n            continue\n        \n        cmd = {\n            \"title\": story[\"title\"],\n            \"parentId\": epic_id,\n            \"project\": \"3828ef78-eab8-4276-82a3-9bd81e68d57f\",\n            \"team\": \"open2049\",\n            \"description\": f\"**Source**: spacs/issues/04-0.1.0-mvp/{story['source']}\",\n            \"labels\": [f\"component/{story['parent_epic'].split('-')[0]}\"]\n        }\n        print(f\"{i:2d}. create_issue({json.dumps(cmd)})\")\n    \n    print(f\"\\n✅ Ready to execute {len(STORIES)} Story creation commands via Linear MCP tools\")\n\nif __name__ == \"__main__\":\n    generate_mcp_commands()\n"